{"UNKNOWN to If":[{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.citi.portfoliomanager.dao.PortfolioHistoryMapper.deleteByExample(com.citi.portfoliomanager.entity.PortfolioHistoryExample)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tag > 0) { logger.warn(\"delete some portfolioHistory becasue it will be recreate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/313/buggy-version/src.main.java.com.citi.portfoliomanager.service.CalculateRateService.java", "BodyUseAPI": [], "Fixed commit": "a0cccbd4c09a7c054a6c63e52ae5953e1f069dc2", "Url": "https://api.github.com/repos/huangkangzheng/portfolio", "Date": "2018-08-15T02:34:59Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (persisted) result = org.apache.geode.management.internal.cli.result.ResultBuilder.createInfoResult(\"No members found. Cluster configuration updated.\"); else result = org.apache.geode.management.internal.cli.result.ResultBuilder.createInfoResult(\"No members found.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2576/buggy-version/geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.CreateJndiBindingCommand.java", "BodyUseAPI": [], "Fixed commit": "e8de0a28ac5ba7924f558caf93c5ffa743504024", "Url": "https://api.github.com/repos/sboorlagadda/geode", "Date": "2018-02-22T22:19:47Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof java.lang.Boolean) { return io.stallion.utils.json.JSON.stringify(map(val(\"succeeded\", obj))); }else if ((endpoint.getJsonViewClass()) == null) { return io.stallion.utils.json.JSON.stringify(obj, RestrictedViews.Member.class, false); }else if (endpoint.getJsonViewClass().isAssignableFrom(RestrictedViews.Unrestricted.class)) { return io.stallion.utils.json.JSON.stringify(obj); }else { return io.stallion.utils.json.JSON.stringify(obj, endpoint.getJsonViewClass(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7232/buggy-version/src.main.java.io.stallion.requests.RequestProcessor.java", "BodyUseAPI": ["io.stallion.requests.RequestProcessor.val(java.lang.String,java.lang.Object)", "io.stallion.utils.json.JSON.stringify(java.lang.Object,endpoint.getJsonViewClass(),boolean)", "io.stallion.utils.json.JSON.stringify(java.lang.Object,java.lang.Class,boolean)", "io.stallion.utils.json.JSON.stringify(java.lang.Object)", "io.stallion.requests.RequestProcessor.map(val(\"succeeded\", obj))", "io.stallion.utils.json.JSON.stringify(map(val(\"succeeded\", obj)))"], "Fixed commit": "cbc45616d7097be86174aedb40f91970cab2b737", "Url": "https://api.github.com/repos/StallionCMS/stallion-core", "Date": "2018-03-06T05:17:33Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(arg.isRequired())) && (value == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7232/buggy-version/src.main.java.io.stallion.requests.RequestProcessor.java", "BodyUseAPI": [], "Fixed commit": "cbc45616d7097be86174aedb40f91970cab2b737", "Url": "https://api.github.com/repos/StallionCMS/stallion-core", "Date": "2018-03-06T05:17:33Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((gl.glGetError()) == 0)) { org.jitsi.impl.neomedia.jmfext.media.renderer.video.JAWTRendererAndroidVideoComponent.logger.info(\"currenctactivity in jaw ondrawframe \"); org.jitsi.android.JitsiApplication.getCurrentActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { org.jitsi.android.JitsiApplication.getCurrentActivity().recreate(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7851/buggy-version/src.org.jitsi.impl.neomedia.jmfext.media.renderer.video.JAWTRendererAndroidVideoComponent.java", "BodyUseAPI": [], "Fixed commit": "9ab96d4801d06fd799f6dc8c56c834b700cd819d", "Url": "https://api.github.com/repos/dwtester88/jitsi_master", "Date": "2018-02-23T21:40:17Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.getCurrentFocus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentFocus == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4728/buggy-version/PtiChatApp.app.src.main.java.fr.centralesupelec.ptichatapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8588781322a0aedbad88456faeb5285453272047", "Url": "https://api.github.com/repos/CS-POOA-2018/PtiChat", "Date": "2018-10-28T17:47:55Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.getSystemService(Activity.INPUT_METHOD_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (inputMethodManager == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4728/buggy-version/PtiChatApp.app.src.main.java.fr.centralesupelec.ptichatapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8588781322a0aedbad88456faeb5285453272047", "Url": "https://api.github.com/repos/CS-POOA-2018/PtiChat", "Date": "2018-10-28T17:47:55Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((text.length()) > 0) && ((text.charAt(0)) != '$')) { int p = text.lastIndexOf(\"_\"); if (p > 0) { text = (((text.substring(0, p)) + \"$_{\") + (text.substring((p + 1)))) + \"}$\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2986/buggy-version/src.main.java.de.neemann.digital.draw.graphics.GraphicSVGLaTeX.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "2d4050456bf79b42aa717fed95e3e8e19b0d05c5", "Url": "https://api.github.com/repos/hneemann/Digital", "Date": "2018-01-17T17:42:35Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (onTouchMove.isInterrupted()) { this.onTouchMove.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2237/buggy-version/app.src.main.java.com.danielkim.soundrecorder.edit.editingoptions.Option.java", "BodyUseAPI": [], "Fixed commit": "abb803e425acd5ef8936a5c6c22a4fa78dfa6fc0", "Url": "https://api.github.com/repos/Pater1/SoundRecorder", "Date": "2018-08-28T01:57:10Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) == 0) { return \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9190/buggy-version/SuperArray.java", "BodyUseAPI": [], "Fixed commit": "56349c78a692fb664b5c53ad5337c5dff89bfd20", "Url": "https://api.github.com/repos/EliasFerguson/MKS21X-SuperArray", "Date": "2018-10-25T15:29:46Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ClientEvents.customQuestbookRequest) { ClientEvents.customQuestbookRequest = false; e.setCanceled(true); e.getPlayClient().sendPacket(new net.minecraft.network.play.client.CPacketCloseWindow(e.getPacket().getWindowId())); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3041/buggy-version/src.main.java.cf.wynntils.modules.questbook.events.ServerEvents.java", "BodyUseAPI": [], "Fixed commit": "f1b0826357fb2926724d3614e58cfbd097caeb24", "Url": "https://api.github.com/repos/Wynntils/Wynntils", "Date": "2018-09-26T21:12:55Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ids.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9809/buggy-version/store.src.java.com.zimbra.cs.index.history.LuceneSearchHistoryIndex.java", "BodyUseAPI": [], "Fixed commit": "a8a9da5b037f96c30dbfd71bf6fd860ddf43bcf8", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2018-02-23T17:46:21Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user != null) locale = java.util.Locale.forLanguageTag(user.getLangKey());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/449/buggy-version/src.main.java.com.vemuri.shaktius.service.MailService.java", "BodyUseAPI": ["com.vemuri.shaktius.domain.User.getLangKey()", "java.util.Locale.forLanguageTag(user.getLangKey())"], "Fixed commit": "d7bec3c768d301f4fde20fd9cc5e0989bcb79275", "Url": "https://api.github.com/repos/shyamailene/shakti-us", "Date": "2018-02-17T16:54:53Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloudmon.webfront.web.OrgService.findById(user.getOriginOrgId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (org == null) org = orgService.findById(user.getOrgId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7134/buggy-version/src.main.java.com.cloudmon.webfront.web.GrafanaProxyController.java", "BodyUseAPI": [], "Fixed commit": "8f2404d0a8e8785cb8bcd57eb9f790648dbbfcc3", "Url": "https://api.github.com/repos/haiyuanhe/cloudwiz-permission", "Date": "2018-10-10T01:46:05Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (org == null) return new com.cloudmon.webfront.core.CommonResponse(ResultEnum.FAIL_11000.getCode(), \"users origin org and org are not found\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7134/buggy-version/src.main.java.com.cloudmon.webfront.web.GrafanaProxyController.java", "BodyUseAPI": [], "Fixed commit": "8f2404d0a8e8785cb8bcd57eb9f790648dbbfcc3", "Url": "https://api.github.com/repos/haiyuanhe/cloudwiz-permission", "Date": "2018-10-10T01:46:05Z"},
{"Line": "=>1225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validatorClass.EmptyTextBox(this, dcbis04Outdt, getString(R.string.date)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5282/buggy-version/app.src.main.java.edu.aku.hassannaqvi.dss_census_sur.activities.SectionBActivity.java", "BodyUseAPI": [], "Fixed commit": "c73a8506fe415c5ffb3729b4ff1984f02d716b71", "Url": "https://api.github.com/repos/shznaqvi/DSS-Census", "Date": "2018-07-27T13:07:34Z"},
{"Line": "=>1228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validatorClass.EmptyTextBox(this, dcbis04Outtime, getString(R.string.dci17b1time)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5282/buggy-version/app.src.main.java.edu.aku.hassannaqvi.dss_census_sur.activities.SectionBActivity.java", "BodyUseAPI": [], "Fixed commit": "c73a8506fe415c5ffb3729b4ff1984f02d716b71", "Url": "https://api.github.com/repos/shznaqvi/DSS-Census", "Date": "2018-07-27T13:07:34Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["container.getLaunchContext().getEnvironment().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(containerExtraDir)) { containerExtraDir = container.getLaunchContext().getEnvironment().get(org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor.DOCKER_EXTRA_DIR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/870/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.DockerContainerExecutor.java", "BodyUseAPI": [], "Fixed commit": "70d5e9ae723e4032e368baeba8a01828a7daa842", "Url": "https://api.github.com/repos/weibodip/hadoop-2.8.2", "Date": "2018-08-24T08:58:00Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fileChooser.showOpenDialog(mainW)) == (javax.swing.JFileChooser.APPROVE_OPTION)) { java.lang.String cmd = ((((((\"export ESPEAK_DATA_PATH=\" + (dataPath)) + \"; cd \") + (fileChooser.getSelectedFile().getParent())) + \" && \") + (dataPath)) + \"/src/espeak-ng --compile-debug=\") + (fileChooser.getSelectedFile().getName().split(\"_\")[0]); org.espeakng.jeditor.utils.CommandUtilities.executeCmd(cmd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/9691/buggy-version/src.main.java.org.espeakng.jeditor.gui.EventHandlers.java", "BodyUseAPI": ["java.io.File.getName()", "javax.swing.JFileChooser.getSelectedFile()", "java.io.File.getParent()", "java.lang.String.split(java.lang.String)", "javax.swing.JFileChooser.getSelectedFile()"], "Fixed commit": "d0ea4c0134c6d5339fe051ea606a6e83c3834059", "Url": "https://api.github.com/repos/ESpeakTeam3/ESpeak", "Date": "2018-07-20T07:31:17Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(MRJobConfig.MAPREDUCE_APPLICATION_CLASSPATH)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((mrConf == null) || (mrConf.isEmpty())) || (mrConf.trim().isEmpty())) { for (java.lang.String c : org.apache.hadoop.util.StringUtils.getStrings(MRJobConfig.DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH)) { org.apache.hadoop.yarn.util.Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), c.trim()); } }else { for (java.lang.String c : conf.getStrings(MRJobConfig.MAPREDUCE_APPLICATION_CLASSPATH, org.apache.hadoop.util.StringUtils.getStrings(MRJobConfig.DEFAULT_MAPREDUCE_APPLICATION_CLASSPATH))) { org.apache.hadoop.yarn.util.Apps.addToEnvironment(environment, Environment.CLASSPATH.name(), c.trim()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5278/buggy-version/angel-ps.core.src.main.java.com.tencent.angel.master.yarn.util.AngelApps.java", "BodyUseAPI": [], "Fixed commit": "27fafc5de63745b08ba83c06f8dc125aafd2fb9c", "Url": "https://api.github.com/repos/htynkn/angel", "Date": "2018-04-24T09:42:49Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedIndex) == 1) OrderController.order.setPrice(((OrderController.order.getPrice()) - 20));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1876/buggy-version/ZerLi.src.order.PaymentOrderGui.java", "BodyUseAPI": [], "Fixed commit": "89fdc061856e3c105ad2092addb36a9524ec7197", "Url": "https://api.github.com/repos/orenys7/ZerLi", "Date": "2018-01-31T17:41:16Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rt.getSourceElement().getRef()) == (rt.getTargetElement().getRef())) throw new it.polito.verigraph.exception.BadRequestException(\"Source and Target cannot be equal in a Relationship.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4698/buggy-version/src.it.polito.verigraph.tosca.converter.grpc.XmlToGrpc.java", "BodyUseAPI": [], "Fixed commit": "bf832051b64e36f997738c48f3214bbd29187b5f", "Url": "https://api.github.com/repos/netgroup-polito/verigraph", "Date": "2018-02-17T15:31:04Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.polito.verigraph.tosca.XmlParsingUtils.obtainNodeTemplates(it.polito.tosca.jaxb.TServiceTemplate)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(tNodes.contains(rt.getSourceElement().getRef()))) || (!(tNodes.contains(rt.getTargetElement().getRef())))) throw new it.polito.verigraph.exception.BadRequestException(\"Invalid references to a Node in a Relationship.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4698/buggy-version/src.it.polito.verigraph.tosca.converter.grpc.XmlToGrpc.java", "BodyUseAPI": [], "Fixed commit": "bf832051b64e36f997738c48f3214bbd29187b5f", "Url": "https://api.github.com/repos/netgroup-polito/verigraph", "Date": "2018-02-17T15:31:04Z"},
{"Line": "=>2080", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (Check == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6811/buggy-version/src.com.firesoftitan.play.fmtablist.FMTabList.java", "BodyUseAPI": [], "Fixed commit": "7154b51015969bd3df782378793e98b210735ee6", "Url": "https://api.github.com/repos/freethemice/FMTabList", "Date": "2018-02-25T04:59:55Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUseCommonCache) == true) { updateTokenCacheUsingCommonCache(resource, clientId, result); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7142/buggy-version/adal.src.main.java.com.microsoft.aad.adal.TokenCacheAccessor.java", "BodyUseAPI": [], "Fixed commit": "d5f3f4f3967cc9873c0328bfb303306083f55a64", "Url": "https://api.github.com/repos/AzureAD/azure-activedirectory-library-for-android", "Date": "2018-03-04T18:44:09Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.getUserInfo()) == null) { com.microsoft.aad.adal.Logger.v(((com.microsoft.aad.adal.TokenCacheAccessor.TAG) + \"updateTokenCacheUsingCommonCache\"), \"UserInfo is null... i guess this is ADFS 2012 R2\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7142/buggy-version/adal.src.main.java.com.microsoft.aad.adal.TokenCacheAccessor.java", "BodyUseAPI": [], "Fixed commit": "d5f3f4f3967cc9873c0328bfb303306083f55a64", "Url": "https://api.github.com/repos/AzureAD/azure-activedirectory-library-for-android", "Date": "2018-03-04T18:44:09Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[0].length()) > 0) { Main.FRIENDNAME = args[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/7595/buggy-version/src.main.java.Main.java", "BodyUseAPI": [], "Fixed commit": "33fa2e75a694858749e74a97ca198f0f285d0e90", "Url": "https://api.github.com/repos/martiKallas/testNatRequester", "Date": "2018-06-06T16:30:07Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jade.lang.acl.ACLMessage.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.util.Objects.equals(responseContent, \"[]\"))) { java.lang.System.out.println(responseContent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6503/buggy-version/src.main.java.pl.edu.agh.szia.client.agent.behaviour.ConsoleCyclicBehaviour.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "b5f53b018825c2e500ab9ea02a52380d5f6bb9b0", "Url": "https://api.github.com/repos/jsamol/aggento", "Date": "2018-06-10T12:08:20Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qaprosoft.zafira.services.services.application.emails.AsynSendEmailTask.getJavaMailSenderImpl()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sender != null) { try { sender.testConnection(); connected = true; } catch (javax.mail.MessagingException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3116/buggy-version/sources.zafira-services.src.main.java.com.qaprosoft.zafira.services.services.application.emails.AsynSendEmailTask.java", "BodyUseAPI": ["org.springframework.mail.javamail.JavaMailSenderImpl.testConnection()"], "Fixed commit": "094eaab040bbd95db5ac5e493a371b761519051d", "Url": "https://api.github.com/repos/Boniara/zafira", "Date": "2018-08-24T07:01:09Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((cols[x][y].getRed()) != 0) || ((cols[x][y].getGreen()) != 0)) || ((cols[x][y].getBlue()) != 0)) { cols[x][y] = javafx.scene.paint.Color.hsb((((speed + (spread * x)) + (y * offset)) % 360), 1, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/312/buggy-version/src.TriggeredNote.java", "BodyUseAPI": ["javafx.scene.paint.Color.hsb(double,int,int)"], "Fixed commit": "31489ed29a205e09d3bd0d07a2c127d6f40c91cc", "Url": "https://api.github.com/repos/noside1231/MidiProjectV2", "Date": "2018-01-25T17:54:27Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (baseUri.isEmpty()) { img.setThumbnail(main.java.de.htwsaar.dfs.utils.RestUtils.encodeToString(ic.getThumbnail(), \"jpg\")); img.setImageSource(main.java.de.htwsaar.dfs.utils.RestUtils.encodeToString(ic.getImage(), \"jpg\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5724/buggy-version/src.main.java.main.java.de.htwsaar.dfs.utils.RestUtils.java", "BodyUseAPI": [], "Fixed commit": "62a6576801e610aecf0a957b67ccbb4e4d80d8cf", "Url": "https://api.github.com/repos/Projekt-DFS/DFS_v2", "Date": "2018-09-05T19:40:54Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dailyGrossIncome == null) || (dailyGrossIncome.trim().isEmpty())) { model.addAttribute(\"inputCountry\", countryCode); model.addAttribute(\"countryList\", service.getCountryCodeCollection()); return \"/index\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1369/buggy-version/src.main.java.de.lutz.task.webapp.controller.NetIncomeCalculationController.java", "BodyUseAPI": [], "Fixed commit": "2ec92bb2334775ac57a56b26d6c345f3050bbfae", "Url": "https://api.github.com/repos/LutzGunzenhausen/task_kalkulator_s", "Date": "2018-01-21T21:31:55Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rawQuote.equals(\"Failed D:\")) quote = rawQuote; else { if ((rawQuote.toCharArray()[0]) == '\"') quote = ((rawQuote + \" (#\") + num) + ')'; else quote = (((('\"' + rawQuote) + '\"') + \" (#\") + num) + ')'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/58/buggy-version/QuotesHandler.java", "BodyUseAPI": ["java.lang.String.toCharArray()"], "Fixed commit": "ba8add535fddfa2027ffb8fb2ab4f1eb70da898e", "Url": "https://api.github.com/repos/BenjaminMassey/BeanBoyBot", "Date": "2018-07-19T19:22:55Z"},
{"Line": "=>1130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((server) != null) && (!(server.isEmpty()))) { return org.bukkit.Bukkit.getServer().getName().equals(server); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/4629/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.Reward.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer().getName().equals(java.lang.String)"], "Fixed commit": "e44f00fbbee5a76182fb6c39a616232fb273ebe9", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-02-11T19:17:05Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listId) == null) { listId = cloudStorageServiceProvider.get().readMailChimpListId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1848/buggy-version/api.src.main.java.org.pmiops.workbench.mailchimp.MailChimpServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9ccedf0257222affa648fe13e6f866173f56f496", "Url": "https://api.github.com/repos/all-of-us/workbench", "Date": "2018-02-07T19:39:04Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (mAuth != null) { java.lang.String userID = mAuth.getCurrentUser().getUid(); mdatabase = com.google.firebase.database.FirebaseDatabase.getInstance().getReference().child(\"Users\").child(userID); mEmailField.setText(com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser().getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/2682/buggy-version/app.src.main.java.lk.paradox.kekayan.fabfit.fragments.ProfileFragment.java", "BodyUseAPI": ["mAuth.getCurrentUser().getUid()", "com.google.firebase.auth.FirebaseAuth.getCurrentUser()"], "Fixed commit": "022406f00038ce3803057faf458420403e1831f3", "Url": "https://api.github.com/repos/codezilla2018/FabFit", "Date": "2018-05-22T16:03:49Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunbird.learner.util.Util.getUserbyUserId(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (user != null) { additionalInfo.put(JsonKey.CHANNEL, user.get(JsonKey.CHANNEL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3987/buggy-version/actors.common.src.main.java.org.sunbird.learner.actors.bulkupload.OrgBulkUploadActor.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(JsonKey.CHANNEL,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(JsonKey.CHANNEL)"], "Fixed commit": "60438071a92cfef4e9c5252a8e522d6610590cf9", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-10-25T10:05:07Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.contains(broadcastMessage.substring(0, messageSeparatorIndex))) { java.lang.String messageTail = broadcastMessage.substring(messageSeparatorIndex); broadcastMessage = (name) + messageTail; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5995/buggy-version/catroid.src.main.java.org.catrobat.catroid.content.Sprite.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "a04b1b6686ef696e2e6a505b5bf4a117d5f837fa", "Url": "https://api.github.com/repos/ankitpriyarup/Catroid", "Date": "2018-03-08T12:33:41Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (method != null) { method.setAccessible(true); method.invoke(qdt, obj); }else { throw nsmEx; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/6647/buggy-version/src.main.java.nz.co.gregs.dbvolution.datatypes.InternalQueryableDatatypeProxy.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(nz.co.gregs.dbvolution.datatypes.QueryableDatatype<?>,java.lang.Object)", "java.lang.reflect.Method.setAccessible(boolean)"], "Fixed commit": "64c0ab66d436b9b4f36a66768b1adfb673f37a01", "Url": "https://api.github.com/repos/gregorydgraham/DBvolution7", "Date": "2018-09-17T03:46:20Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fileSize <= (P2PClient.P2PClientUser.CHUNK_SIZE)) { numOfChunks = 1; }else if ((fileSize % (P2PClient.P2PClientUser.CHUNK_SIZE)) > 0) { numOfChunks = (fileSize / (P2PClient.P2PClientUser.CHUNK_SIZE)) + 1; }else { numOfChunks = fileSize / (P2PClient.P2PClientUser.CHUNK_SIZE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/1706/buggy-version/src.P2PClient.P2PClientUser.java", "BodyUseAPI": [], "Fixed commit": "de2bd9577c4cb3c601239fe45a832d5acfb295c2", "Url": "https://api.github.com/repos/caoliangnus/CS3103", "Date": "2018-10-19T07:40:20Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDestroyed) super.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/3132/buggy-version/util.src.main.java.io.kubernetes.client.Exec.java", "BodyUseAPI": [], "Fixed commit": "b73118ee655ab999daa4ed4ca6dbaba2a80530d0", "Url": "https://api.github.com/repos/brendandburns/java", "Date": "2018-03-18T12:44:42Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["col.get(0).text()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((periodInfo.indexOf(\"(\")) > 2) { pNe = java.lang.Integer.parseInt(periodInfo.substring(3, 4)); pCe = (periodInfo.substring(4, 5).equals(\"A\")) ? 0 : 1; }else { pNe = 0; pCe = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5047/buggy-version/app.src.main.java.hackthis.team.spartapp.LoginActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "58a4809152028b25863216ac06ae78d194bf551a", "Url": "https://api.github.com/repos/THISProgrammingClub/Spartapp", "Date": "2018-09-19T14:52:47Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["col.get(0).text()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((periodInfo.indexOf(\"(\")) > 2) schedule.get(new java.lang.Integer(dayNum))[(((pNe - 1) * 2) + pCe)] = period;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5047/buggy-version/app.src.main.java.hackthis.team.spartapp.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "58a4809152028b25863216ac06ae78d194bf551a", "Url": "https://api.github.com/repos/THISProgrammingClub/Spartapp", "Date": "2018-09-19T14:52:47Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getMessage().getContentRaw()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(contentRaw.startsWith(\"!\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5497/buggy-version/src.main.java.de.ora.gaston.core.Bot.java", "BodyUseAPI": [], "Fixed commit": "fa8499c6fb59111312195b47440794a38ebd0e79", "Url": "https://api.github.com/repos/schweinwerfer/gaston", "Date": "2018-10-18T07:42:07Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_StopThread) && ((GetLastError()) == (ERROR_OPERATION_ABORTED))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/8234/buggy-version/src.purejavahidapi.windows.HidDevice.java", "BodyUseAPI": [], "Fixed commit": "0a2356bb22adaec928987d84884afe9b01b9b66e", "Url": "https://api.github.com/repos/nsaney/purejavahidapi", "Date": "2018-04-29T02:12:50Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doreplace) { if ((r instanceof za.ac.sun.cs.green.expr.IntVariable) && ((map.get(r.toString())) != null)) { r = new za.ac.sun.cs.green.expr.IntConstant(map.get(r.toString())); } if ((l instanceof za.ac.sun.cs.green.expr.IntVariable) && ((map.get(l.toString())) != null)) { l = new za.ac.sun.cs.green.expr.IntConstant(map.get(l.toString())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5215/buggy-version/src.za.ac.sun.cs.green.service.simplify.ConstantPropogation.java", "BodyUseAPI": [], "Fixed commit": "9f91d35083dbc095e50dd1bc95eb74b76618b240", "Url": "https://api.github.com/repos/rhyswilliamsza/green", "Date": "2018-08-13T10:05:04Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<za.ac.sun.cs.green.expr.Expression>.pop()", "java.util.Stack<za.ac.sun.cs.green.expr.Expression>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((operation.getOperator()) == (Operation.Operator.EQ)) && ((r instanceof za.ac.sun.cs.green.expr.IntVariable) && (l instanceof za.ac.sun.cs.green.expr.IntConstant))) { doreplace = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V156/5215/buggy-version/src.za.ac.sun.cs.green.service.simplify.ConstantPropogation.java", "BodyUseAPI": [], "Fixed commit": "9f91d35083dbc095e50dd1bc95eb74b76618b240", "Url": "https://api.github.com/repos/rhyswilliamsza/green", "Date": "2018-08-13T10:05:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["moe.plushie.armourers_workshop.common.capability.wardrobe.player.PlayerWardrobeCap.get(((net.minecraft.entity.player.EntityPlayer) (event.getTarget())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (wardrobeCapability != null) { wardrobeCapability.syncToPlayerDelayed(((net.minecraft.entity.player.EntityPlayerMP) (event.getEntityPlayer())), 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8530/buggy-version/src.main.java.moe.plushie.armourers_workshop.common.handler.CapabilitySyncHandler.java", "BodyUseAPI": ["moe.plushie.armourers_workshop.common.capability.wardrobe.player.IPlayerWardrobeCap.syncToPlayerDelayed(((net.minecraft.entity.player.EntityPlayerMP) (event.getEntityPlayer())),int)"], "Fixed commit": "29a03ae5e3f75ed3fbf4a8d65c1dc72087fca3c7", "Url": "https://api.github.com/repos/RiskyKen/Armourers-Workshop", "Date": "2018-10-13T20:44:50Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numbers.length) <= 0) throw new java.lang.NullPointerException(\"Mean of Numbers:: Values can not be Empty\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1713/buggy-version/src.main.java.Calculator.java", "BodyUseAPI": [], "Fixed commit": "3f81cbaacaf101a297843a3715b8e6778efc9cb3", "Url": "https://api.github.com/repos/ronakbluefin/calculator", "Date": "2018-08-23T21:26:21Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(portletDataHandlerBoolean.isDisabled())) { controlValue = com.liferay.portal.kernel.util.MapUtil.getBoolean(parameterMap, portletDataHandlerBoolean.getNamespacedControlName(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5371/buggy-version/modules.apps.export-import.export-import-service.src.main.java.com.liferay.exportimport.internal.configuration.ExportImportConfigurationParameterMapFactoryImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.util.MapUtil.getBoolean(java.util.Map<java.lang.String, java.lang.String[]>,portletDataHandlerBoolean.getNamespacedControlName(),boolean)", "com.liferay.exportimport.kernel.lar.PortletDataHandlerBoolean.getNamespacedControlName()"], "Fixed commit": "b1ab9761f700ad87955cffb24e31221a53c442a9", "Url": "https://api.github.com/repos/drewbrokke/liferay-portal", "Date": "2018-07-04T11:50:29Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lib.ConsoleIO.promptForMenuSelection(java.lang.String[],boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cardNum != 0) { newDeck.getDeck().remove((cardNum - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5311/buggy-version/src.card.Decks.java", "BodyUseAPI": ["newDeck.getDeck().remove(int)"], "Fixed commit": "6f14a0d79b3c6e45adf1b18aed3a50afaad7aafb", "Url": "https://api.github.com/repos/klimapaige/gods", "Date": "2018-03-08T19:59:52Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rgbSum > 0) { for (int i = 0; i < 3; i++) { rgbArray[i] = ((int) ((((double) (rgbArray[i])) / ((double) (rgbSum))) * 255)); } imageProcessor.putPixel(width, height, rgbArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6969/buggy-version/Trafic_Light_Detector.src.base.Image.java", "BodyUseAPI": [], "Fixed commit": "0fda6fd66d554f967182c753f0db52f288af639a", "Url": "https://api.github.com/repos/henrikgh/BV_traffic_light_detection", "Date": "2018-03-02T17:46:43Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.stangassinger.mytracker.AlarmReceiver.LOCALBROADCASTMANAGER_REGISTERED) == false) { android.support.v4.content.LocalBroadcastManager.getInstance(context).registerReceiver(mMessageReceiver, new android.content.IntentFilter(\"GPS_DATA\")); com.stangassinger.mytracker.AlarmReceiver.LOCALBROADCASTMANAGER_REGISTERED = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6090/buggy-version/app.src.main.java.com.stangassinger.mytracker.AlarmReceiver.java", "BodyUseAPI": [], "Fixed commit": "bf7317184794232e7932b41c5f128c55b26d7452", "Url": "https://api.github.com/repos/stangassinger/MyTracker", "Date": "2018-06-05T22:34:53Z"},
{"Line": "=>792", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.forName(accountdetailtype.getFullQualifiedName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (aClass.equals(org.egov.eis.entity.Employee.class)) { org.egov.commons.Accountdetailkey accdetailKey = ((org.egov.commons.Accountdetailkey) (persistenceService.find(\"from Accountdetailkey where detailkey=?\", ((java.lang.Integer) (detailkey))))); if ((null == accdetailKey) || ((accdetailKey.getDetailname()) == null)) { throw new java.lang.Exception((\"Employee not found for \" + detailkey)); } java.lang.String[] detailNames = accdetailKey.getDetailname().split(\"-\"); org.egov.eis.entity.Employee employee = new org.egov.eis.entity.Employee(); employee.setId(accdetailKey.getDetailkey().longValue()); employee.setCode(detailNames[0]); employee.setName(detailNames[1]); entity = ((org.egov.commons.utils.EntityType) (employee)); }else { final java.lang.reflect.Method method = aClass.getMethod(\"getId\"); final java.lang.String dataType = method.getReturnType().getSimpleName(); if (org.egov.egf.commons.EgovCommon.LOGGER.isDebugEnabled()) org.egov.egf.commons.EgovCommon.LOGGER.debug((\"data Type = \" + dataType)); if (dataType.equals(\"Long\")) entity = ((org.egov.commons.utils.EntityType) (persistenceService.getSession().load(aClass, java.lang.Long.valueOf(detailkey.toString())))); else entity = ((org.egov.commons.utils.EntityType) (persistenceService.getSession().load(aClass, detailkey))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7630/buggy-version/egov.egov-egf.src.main.java.org.egov.egf.commons.EgovCommon.java", "BodyUseAPI": ["java.lang.Class.getMethod(java.lang.String)", "persistenceService.getSession().load(java.lang.Class,java.io.Serializable)", "persistenceService.getSession().load(java.lang.Class,java.lang.Long)"], "Fixed commit": "79a8d80db1b99ab9921f5ac44deaa9d31cb2ca92", "Url": "https://api.github.com/repos/egovernments/egov-coexistence", "Date": "2018-10-30T13:56:29Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((Marks) * 100) / (Limit)) >= 50) { databaseReference.child(\"Users\").child(firebaseAuth.getUid()).child(\"Progress\").child(Helper.language).child(Level).child(\"Quizzes\").child((\"Quiz\" + (QuizNo))).setValue(\"IsCompleted\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4965/buggy-version/app.src.main.java.com.foslipy.languagetutorial.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "5bb5dd4142d424a84cc02cd6ecf689537542d4fb", "Url": "https://api.github.com/repos/samiraj99/LanguageTutorial", "Date": "2018-06-27T05:58:46Z"},
{"Line": "=>1472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null == (inventoryDetails.getStockStatus())) && (((java.lang.Integer.parseInt(inventoryDetails.getStockLevel())) - (java.lang.Integer.parseInt(inventoryDetails.getStockThresh()))) > 0)) { inventoryDetails.setStockStatus(\"SKU is in Stock\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/697/buggy-version/PSOMaster.src.main.java.com.zig.pso.dao.OrderInfoManagerDAOImpl.java", "BodyUseAPI": ["com.zig.pso.rest.bean.InventoryStatusofItemBean.setStockStatus(java.lang.String)"], "Fixed commit": "dedc7074626e630d9a0cc7e901e23564457cbf4d", "Url": "https://api.github.com/repos/psoAdmin/PSOMaster_Repo", "Date": "2018-01-04T13:27:07Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8411/buggy-version/app.src.main.java.com.glvz.egais.utils.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "c2780270a5105ad8e7a3a1e274f221fbd03335c2", "Url": "https://api.github.com/repos/pavel-vp/GLVZegais", "Date": "2018-09-20T07:41:26Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (option) { defaultVH.mLove.setOnCheckedChangeListener(null); defaultVH.mLove.setEnabled(false); }else { defaultVH.mLove.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener() { @java.lang.Override public void onCheckedChanged(android.widget.CompoundButton compoundButton, boolean checked) { int mPosition = ((int) (compoundButton.getTag())); br.com.nmsystems.baireslistdemo.util.HMAux mPosAux = data_filtered.get(mPosition); if (checked) { mPosAux.put(Constants.LOVE, context.getString(R.string.favorite_true)); }else { mPosAux.put(Constants.LOVE, context.getString(R.string.favorite_false)); } } }); defaultVH.mLove.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/645/buggy-version/app.src.main.java.br.com.nmsystems.baireslistdemo.adapter.CardAdapter.java", "BodyUseAPI": [], "Fixed commit": "ff2dd70ce85c692cbb476fce1640cbbdc8e8fd67", "Url": "https://api.github.com/repos/NeonHugo/BairesListDemo", "Date": "2018-07-30T13:56:13Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(emailEnd.equals(\"@sjsu.edu\"))) { editTextEmail.setError(\"SJSU Email is required\"); editTextEmail.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5563/buggy-version/app.src.main.java.com.group6.sjsulookout.SignUpActivity.java", "BodyUseAPI": [], "Fixed commit": "1d3e7216edfda58441bb390e10ce140371ac7d1e", "Url": "https://api.github.com/repos/AustinYam/SJSULookout", "Date": "2018-10-11T00:38:37Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((questionType) == 3) { b = questionService.addQuestion(question); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2097/buggy-version/hospital-admin.src.main.java.com.hospital.action.SurveyManageAction.java", "BodyUseAPI": [], "Fixed commit": "d2f2cb909cd071fe9126ea344b12cc5b7b8ab3f1", "Url": "https://api.github.com/repos/lht142934/HospitalSystem", "Date": "2018-03-15T16:07:00Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) < 0) { imageName = (((-1) * (value)) + (getSpin())) + \".jpg\"; }else { imageName = ((value) + (getSpin())) + \".jpg\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9443/buggy-version/src.Tile.java", "BodyUseAPI": [], "Fixed commit": "40db129ba737e9c9408fa779abde2eb6a4e3f800", "Url": "https://api.github.com/repos/dolszewski/SpinPossible", "Date": "2018-10-17T21:38:32Z"},
{"Line": "=>921", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"TEI\".equals(label)) { pageType = de.intranda.digiverso.presentation.model.viewer.PageType.viewFulltext; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4158/buggy-version/goobi-viewer-core.src.de.intranda.digiverso.presentation.model.search.BrowseElement.java", "BodyUseAPI": [], "Fixed commit": "75777bf2d4f5a4a374209c3b6e203a15214d7573", "Url": "https://api.github.com/repos/intranda/goobi-viewer-core", "Date": "2018-08-08T12:55:25Z"},
{"Line": "=>943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DocType.UGC.equals(docType)) { pageType = de.intranda.digiverso.presentation.model.viewer.PageType.viewObject; }else if (\"TEI\".equals(label)) { pageType = de.intranda.digiverso.presentation.model.viewer.PageType.viewFulltext; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4158/buggy-version/goobi-viewer-core.src.de.intranda.digiverso.presentation.model.search.BrowseElement.java", "BodyUseAPI": [], "Fixed commit": "75777bf2d4f5a4a374209c3b6e203a15214d7573", "Url": "https://api.github.com/repos/intranda/goobi-viewer-core", "Date": "2018-08-08T12:55:25Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((finished_repos.size()) > 0) { startPR = finished_repos.get(projectUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4611/buggy-version/src.AnalyzingPRs.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "3dda34552c3f58d94fc880cd9e4b391097a451c5", "Url": "https://api.github.com/repos/shuiblue/GithubScript", "Date": "2018-05-21T04:15:26Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNestedScrollView) == null) { info.pelleritoudacity.android.rcapstone.utility.ActivityUI.startRefresh(getApplicationContext(), info.pelleritoudacity.android.rcapstone.ui.activity.MainActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9895/buggy-version/app.src.main.java.info.pelleritoudacity.android.rcapstone.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "781ac996ccbabe278f68dbaf17ee276061b72480", "Url": "https://api.github.com/repos/benepell/Capstone-Project", "Date": "2018-08-03T16:19:54Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNestedScrollView) == null) { info.pelleritoudacity.android.rcapstone.utility.ActivityUI.startRefresh(getApplicationContext(), info.pelleritoudacity.android.rcapstone.ui.activity.DetailActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9895/buggy-version/app.src.main.java.info.pelleritoudacity.android.rcapstone.ui.activity.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "781ac996ccbabe278f68dbaf17ee276061b72480", "Url": "https://api.github.com/repos/benepell/Capstone-Project", "Date": "2018-08-03T16:19:54Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNestedScrollView) == null) { info.pelleritoudacity.android.rcapstone.utility.ActivityUI.startRefresh(getApplicationContext(), info.pelleritoudacity.android.rcapstone.ui.activity.ManageActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9895/buggy-version/app.src.main.java.info.pelleritoudacity.android.rcapstone.ui.activity.ManageActivity.java", "BodyUseAPI": [], "Fixed commit": "781ac996ccbabe278f68dbaf17ee276061b72480", "Url": "https://api.github.com/repos/benepell/Capstone-Project", "Date": "2018-08-03T16:19:54Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isComplete()) org.spongepowered.api.Sponge.getEventManager().post(new com.atherys.quests.event.quest.QuestCompletedEvent(this, quester));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2093/buggy-version/src.main.java.com.atherys.quests.quest.SimpleQuest.java", "BodyUseAPI": [], "Fixed commit": "44cae1317e67c2f08e56130909a5b682e7a63ae3", "Url": "https://api.github.com/repos/Atherys-Horizons/AtherysQuests", "Date": "2018-08-19T16:45:35Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((details == null) || ((details.size()) < 2)) { android.widget.Toast.makeText(this, \"No data yet, please try it later.\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1908/buggy-version/app.src.main.java.com.agenthun.eseal.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5876b22a086c029e1861140f0f708b747b000b59", "Url": "https://api.github.com/repos/ecnuBeidou/ESeal", "Date": "2018-10-01T12:53:29Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lavalink) != null) lavalink.onEvent(event);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3400/buggy-version/src.main.java.io.groovybot.bot.core.audio.LavalinkManager.java", "BodyUseAPI": [], "Fixed commit": "7209e3ce861c6f487c1e5d2778a13fb75bc9835b", "Url": "https://api.github.com/repos/GroovyDevs/Bot", "Date": "2018-09-23T13:27:34Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((LevelManager.Instance.GetSelectedLevel()) != 8) { android.graphics.Matrix ButtonTransform = new android.graphics.Matrix(); ButtonTransform.setTranslate(((ScreenWidth) * 0.55F), ((ScreenHeight) * 0.5F)); _canvas.drawBitmap(bmpContinueButton, ButtonTransform, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4295/buggy-version/Panda.app.src.main.java.assignment1.panda.WinState.java", "BodyUseAPI": [], "Fixed commit": "ffc28cebf0417d42b34f3daabbede30f273080ff", "Url": "https://api.github.com/repos/loneswei/Mobile-Assignment-1", "Date": "2018-01-28T09:31:05Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (limitForUserWithoutAnyTaskRunning <= 0) { limitForUserWithoutAnyTaskRunning = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4602/buggy-version/majordodo-core.src.main.java.majordodo.task.TasksChooser.java", "BodyUseAPI": [], "Fixed commit": "8605012e19e6be67156bf97f81f8db1079cc3827", "Url": "https://api.github.com/repos/caiok/majordodo", "Date": "2018-06-01T09:17:23Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jalepo.NumberField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(text)) { text = \"0.0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5906/buggy-version/src.main.java.com.jalepo.NumberField.java", "BodyUseAPI": [], "Fixed commit": "d316e136f1560bfd866d0e15682b18f902fde7f9", "Url": "https://api.github.com/repos/jalepo/NumberField", "Date": "2018-02-17T23:11:25Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jalepo.NumberField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(text)) { text = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5906/buggy-version/src.main.java.com.jalepo.NumberField.java", "BodyUseAPI": [], "Fixed commit": "d316e136f1560bfd866d0e15682b18f902fde7f9", "Url": "https://api.github.com/repos/jalepo/NumberField", "Date": "2018-02-17T23:11:25Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getSexAreaInteractions().isEmpty())) { boolean ongoingFound = false; if (this.getParticipantType().isUsingSelfPenetrationType()) { outerloop : for (com.lilithsthrone.game.sex.SexAreaInterface sArea : this.getSexAreaInteractions().keySet()) { for (com.lilithsthrone.game.sex.SexAreaInterface sAreaTarget : this.getSexAreaInteractions().values()) { if (com.lilithsthrone.game.sex.Sex.getContactingSexAreas(com.lilithsthrone.game.sex.Sex.getCharacterPerformingAction(), sArea, com.lilithsthrone.game.sex.Sex.getCharacterTargetedForSexAction()).contains(sAreaTarget)) { ongoingFound = true; break outerloop; } } } }else { outerloop : for (com.lilithsthrone.game.sex.SexAreaInterface sArea : this.getSexAreaInteractions().keySet()) { for (com.lilithsthrone.game.sex.SexAreaInterface sAreaTarget : this.getSexAreaInteractions().values()) { if (com.lilithsthrone.game.sex.Sex.getContactingSexAreas(com.lilithsthrone.game.sex.Sex.getCharacterTargetedForSexAction(), sArea, com.lilithsthrone.game.sex.Sex.getCharacterPerformingAction()).contains(sAreaTarget)) { ongoingFound = true; break outerloop; } } } } if (!ongoingFound) { return null; } if ((this.getParticipantType()) != (com.lilithsthrone.game.sex.SexParticipantType.SELF)) { if ((!(com.lilithsthrone.game.sex.Sex.isSubHasEqualControl())) && (!(com.lilithsthrone.game.sex.Sex.isDom(com.lilithsthrone.game.sex.Sex.getCharacterPerformingAction())))) { return null; } } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4079/buggy-version/src.com.lilithsthrone.game.sex.sexActions.SexActionInterface.java", "BodyUseAPI": [], "Fixed commit": "1337db517ef4999ab09ba43fefbec60f8fea812d", "Url": "https://api.github.com/repos/InnoPATH/liliths-throne-public", "Date": "2018-06-13T17:20:01Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rmode) != null) { getServer().getScheduler().cancelTask(((int) (rmode))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5961/buggy-version/src.main.java.com.kodyhusky.cmc.CompleteMobControl.java", "BodyUseAPI": [], "Fixed commit": "007dc4c11161edb53e74d9c39d433c32a6f549b8", "Url": "https://api.github.com/repos/xkodyhuskyx/CompleteMobControl2", "Date": "2018-08-13T13:42:04Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rte_st.currentCompetition) != null) rte_gui.currentCompetition.setText(rte_st.currentCompetition.toString()); else rte_gui.currentCompetition.setText(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2998/buggy-version/src.pl.jeleniagora.mks.files.xml.XmlLoader.java", "BodyUseAPI": ["rte_st.currentCompetition.toString()", "rte_gui.currentCompetition.setText(rte_st.currentCompetition.toString())"], "Fixed commit": "8024d310abd6161ba9231babb2a52d30c195331e", "Url": "https://api.github.com/repos/SP8EBC/MKS_JG", "Date": "2018-08-30T20:28:32Z"},
{"Line": "=>1378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.FUNCTION()) != null) { name = extractTextUnescaped(ctx.FUNCTION().getText()); if ((ctx.selector()) != null) { cz.vutbr.web.csskit.antlr4.Selector sel = visitSelector(ctx.selector()); pseudo = (isPseudoElem) ? rf.createPseudoElement(name, sel) : rf.createPseudoClass(name, sel); }else { java.lang.String value = ((ctx.MINUS()) == null) ? \"\" : \"-\"; if ((ctx.IDENT()) != null) { value += ctx.IDENT().getText(); }else if ((ctx.NUMBER()) != null) { value += ctx.NUMBER().getText(); }else if ((ctx.INDEX()) != null) { value += ctx.INDEX().getText(); }else { throw new java.lang.UnsupportedOperationException(\"unknown state\"); } pseudo = (isPseudoElem) ? rf.createPseudoElement(name, value) : rf.createPseudoClass(name, value); } }else { name = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8823/buggy-version/src.main.java.cz.vutbr.web.csskit.antlr4.CSSParserVisitorImpl.java", "BodyUseAPI": ["CSSParser.PseudoContext.selector()", "CSSParser.PseudoContext.MINUS()", "CSSParser.PseudoContext.INDEX()", "CSSParser.PseudoContext.FUNCTION()", "cz.vutbr.web.csskit.antlr4.CSSParserVisitorImpl.extractTextUnescaped(ctx.FUNCTION().getText())", "CSSParser.PseudoContext.INDEX()", "CSSParser.PseudoContext.NUMBER()", "ctx.IDENT().getText()", "ctx.NUMBER().getText()", "CSSParser.PseudoContext.IDENT()", "ctx.FUNCTION().getText()", "cz.vutbr.web.csskit.antlr4.CSSParserVisitorImpl.visitSelector(ctx.selector())", "CSSParser.PseudoContext.IDENT()", "ctx.INDEX().getText()", "CSSParser.PseudoContext.selector()", "CSSParser.PseudoContext.NUMBER()"], "Fixed commit": "73544b40d9a7a737efb6f073169d9bc4294b951e", "Url": "https://api.github.com/repos/Mangara/jStyleParser", "Date": "2018-03-21T13:28:23Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((btDeviceConnectedGlobal) == null)) { me.iologic.apps.dtn.OneScenario.CLIENT_CONNECTION_SUCCESSFUL = \"Connected To:\" + (btDeviceConnectedGlobal.getName()); }else { android.util.Log.e(\"DTN\", \"No Device Found With Name DTN\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7785/buggy-version/app.src.main.java.me.iologic.apps.dtn.OneScenario.java", "BodyUseAPI": [], "Fixed commit": "ad90fc438da81c07dedbd1ec4064683b7be84c35", "Url": "https://api.github.com/repos/PVineeth/dtn_app", "Date": "2018-01-15T23:00:30Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (message == null) { throw new java.lang.IllegalArgumentException(\"message can't be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5786/buggy-version/src.main.java.restClient.player.websocket.messagehandlers.ClientMessageProcessor.java", "BodyUseAPI": [], "Fixed commit": "1fef7f3c543a7b7596088ab5ecac5a716804a675", "Url": "https://api.github.com/repos/beertwegh/BigIdea", "Date": "2018-06-11T21:59:41Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MxCompiler.BackEnd.basicBlock.getHead()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (instr instanceof MxCompiler.BackEnd.heapAllocate) { for (MxCompiler.BackEnd.virtualRegister reg : instr.liveOut) { MxCompiler.BackEnd.register toPush = function.vrMap.get(reg).color; if (toPush == (instr.getDefRegister())) continue; if (toPush instanceof MxCompiler.BackEnd.physicRegister) { instr.linkPrev(new MxCompiler.BackEnd.push(bb, toPush)); instr.linkNext(new MxCompiler.BackEnd.pop(bb, toPush)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8282/buggy-version/src.MxCompiler.BackEnd.stackManager.java", "BodyUseAPI": ["MxCompiler.BackEnd.instruction.getDefRegister()", "MxCompiler.BackEnd.instruction.linkPrev(MxCompiler.BackEnd.push)", "MxCompiler.BackEnd.instruction.linkNext(MxCompiler.BackEnd.pop)"], "Fixed commit": "b37153536b0e9754be098f5ba91584cc7e0f7ae7", "Url": "https://api.github.com/repos/Willyoung2017/MyCompiler", "Date": "2018-06-04T01:58:29Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (optionalUserProfile.isPresent()) { com.orange.otheatre.entities.UserProfile userProfile = optionalUserProfile.get(); LOGGER.info((\"EventPage: Found authenticated user: \" + (userProfile.getFirstName()))); for (com.orange.otheatre.entities.Event e : userProfile.getEventsAttended()) { if (e.getEventTitle().equals(event.getEventTitle())) { LOGGER.info(\"The user attended the event.\"); return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6827/buggy-version/otheatre.src.main.java.com.orange.otheatre.service.EventService.java", "BodyUseAPI": ["java.util.Optional<com.orange.otheatre.entities.UserProfile>.get()"], "Fixed commit": "d59d19b1d34e33bc8b52dd312effd8baac85acf6", "Url": "https://api.github.com/repos/Emanuel9/Mentorship", "Date": "2018-07-28T23:16:49Z"},
{"Line": "=>1175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_parms._family) == (hex.glm.GLMModel.GLMParameters.Family.multinomial)) { int P = _dinfo.fullN(); int N = (_dinfo.fullN()) + 1; for (int i = 1; i < (_nclass); ++i) sumExp += java.lang.Math.exp(((nb[((i * N) + P)]) - maxRow)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8477/buggy-version/h2o-algos.src.main.java.hex.glm.GLM.java", "BodyUseAPI": [], "Fixed commit": "48d9ac1e3cf40d24c2a1cd7cd3a4b044888d1820", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2018-03-01T21:55:45Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["elemIsu.getJudgesValues().get(judge.getId()).getMark()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mark == 0) { judgeMark.setSelectedItem(\"0\"); }else { judgeMark.setSelectedItem((mark > 0 ? \"+\" + (java.lang.String.valueOf(mark)) : java.lang.String.valueOf(mark))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6082/buggy-version/src.main.java.data.ElementRow.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "javax.swing.JComboBox.setSelectedItem(java.lang.Object)", "java.lang.String.valueOf(int)"], "Fixed commit": "d66f2d97ef502c36e70cae4cda51229d8858e994", "Url": "https://api.github.com/repos/middaymi/CascadeApplication", "Date": "2018-05-10T07:33:09Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { keyguardManager = ((android.app.KeyguardManager) (getSystemService(com.imagesoftware.anubhav.vacmet.KEYGUARD_SERVICE))); fingerprintManager = ((android.hardware.fingerprint.FingerprintManager) (getSystemService(com.imagesoftware.anubhav.vacmet.FINGERPRINT_SERVICE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5948/buggy-version/app.src.main.java.com.imagesoftware.anubhav.vacmet.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "46399593c7c402c4e71c4b38a1da1c3a6cea18eb", "Url": "https://api.github.com/repos/jay1493/vacmetOrder", "Date": "2018-02-20T08:45:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((divider) != null) { divider.setAlpha(((int) (alpha * 255))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7919/buggy-version/navigation.src.main.java.me.listenzz.navigation.AwesomeToolbar.java", "BodyUseAPI": [], "Fixed commit": "9c5e65cf1730dcb166480f8781dcc7530f6dea59", "Url": "https://api.github.com/repos/listenzz/AndroidNavigation", "Date": "2018-03-16T02:28:30Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((column.getCellEditor()) == null) column.setCellEditor(getColumnEditor(column.getIdentifier()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2954/buggy-version/src.main.java.io.github.jonestimd.swing.table.TableInitializer.java", "BodyUseAPI": ["javax.swing.table.TableColumn.getIdentifier()", "io.github.jonestimd.swing.table.TableInitializer.getColumnEditor(java.lang.Object)", "javax.swing.table.TableColumn.setCellEditor(javax.swing.table.TableCellEditor)"], "Fixed commit": "bb16c95aa167c4719ece1aed78a44c8512639302", "Url": "https://api.github.com/repos/jonestimd/swing-extensions", "Date": "2018-10-29T01:08:40Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((column.getCellRenderer()) == null) column.setCellRenderer(getColumnRenderer(column.getIdentifier()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2954/buggy-version/src.main.java.io.github.jonestimd.swing.table.TableInitializer.java", "BodyUseAPI": ["javax.swing.table.TableColumn.setCellRenderer(javax.swing.table.TableCellRenderer)", "javax.swing.table.TableColumn.getIdentifier()", "io.github.jonestimd.swing.table.TableInitializer.getColumnRenderer(java.lang.Object)"], "Fixed commit": "bb16c95aa167c4719ece1aed78a44c8512639302", "Url": "https://api.github.com/repos/jonestimd/swing-extensions", "Date": "2018-10-29T01:08:40Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pdfRowCount != 1) { rb.append(\"<tr><td colspan='13' class='tbOnly'>&nbsp;</td></tr>\"); rb.append(\"<tr><td colspan='13' class='shortSpace'>&nbsp;</td></tr>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/114/buggy-version/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.report.serviceByActivityReportManager.java", "BodyUseAPI": [], "Fixed commit": "84274c11c38271697e41a55ee95eed7a085c175d", "Url": "https://api.github.com/repos/bowlinktech/rr-mvn-repo", "Date": "2018-01-24T09:15:58Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field_story.hasSelection()) field_story.italic((!(field_story.contains(KnifeText.FORMAT_ITALIC)))); else com.jullae.utils.ToastUtils.showToast(this, \"Please select text first!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1444/buggy-version/app.src.main.java.com.jullae.ui.writeStory.WriteStoryActivity.java", "BodyUseAPI": ["com.jullae.ui.custom.knife.KnifeText.contains(KnifeText.FORMAT_ITALIC)", "com.jullae.ui.custom.knife.KnifeText.italic((!(field_story.contains(KnifeText.FORMAT_ITALIC))))"], "Fixed commit": "0a0f3f488721b3f506f8c54b214e9a2a2bd1214e", "Url": "https://api.github.com/repos/apgapg/pixstory-android", "Date": "2018-08-16T03:52:03Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field_story.hasSelection()) field_story.bullet((!(field_story.contains(KnifeText.FORMAT_BULLET)))); else com.jullae.utils.ToastUtils.showToast(this, \"Please select text first!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1444/buggy-version/app.src.main.java.com.jullae.ui.writeStory.WriteStoryActivity.java", "BodyUseAPI": ["com.jullae.ui.custom.knife.KnifeText.bullet((!(field_story.contains(KnifeText.FORMAT_BULLET))))", "com.jullae.ui.custom.knife.KnifeText.contains(KnifeText.FORMAT_BULLET)"], "Fixed commit": "0a0f3f488721b3f506f8c54b214e9a2a2bd1214e", "Url": "https://api.github.com/repos/apgapg/pixstory-android", "Date": "2018-08-16T03:52:03Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field_story.hasSelection()) field_story.underline((!(field_story.contains(KnifeText.FORMAT_UNDERLINED)))); else com.jullae.utils.ToastUtils.showToast(this, \"Please select text first!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1444/buggy-version/app.src.main.java.com.jullae.ui.writeStory.WriteStoryActivity.java", "BodyUseAPI": ["com.jullae.ui.custom.knife.KnifeText.underline((!(field_story.contains(KnifeText.FORMAT_UNDERLINED))))", "com.jullae.ui.custom.knife.KnifeText.contains(KnifeText.FORMAT_UNDERLINED)"], "Fixed commit": "0a0f3f488721b3f506f8c54b214e9a2a2bd1214e", "Url": "https://api.github.com/repos/apgapg/pixstory-android", "Date": "2018-08-16T03:52:03Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field_story.hasSelection()) field_story.bold((!(field_story.contains(KnifeText.FORMAT_BOLD)))); else com.jullae.utils.ToastUtils.showToast(this, \"Please select text first!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1444/buggy-version/app.src.main.java.com.jullae.ui.writeStory.WriteStoryActivity.java", "BodyUseAPI": ["com.jullae.ui.custom.knife.KnifeText.contains(KnifeText.FORMAT_BOLD)", "com.jullae.ui.custom.knife.KnifeText.bold((!(field_story.contains(KnifeText.FORMAT_BOLD))))"], "Fixed commit": "0a0f3f488721b3f506f8c54b214e9a2a2bd1214e", "Url": "https://api.github.com/repos/apgapg/pixstory-android", "Date": "2018-08-16T03:52:03Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (g != (primaryGunSlot)) { g.addActionListener(new java.awt.event.ActionListener() { @java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { int targetGun = ((currentGun) + (gunSlots.indexOf(g))) % (player.getInventory().size()); if ((gunSlots.indexOf(g)) < (player.getInventory().size())) { player.equipGun(player.getInventory().get(targetGun)); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5751/buggy-version/src.Client.GUI.java", "BodyUseAPI": [], "Fixed commit": "df80263dc5e84c5769f2d5ec123c2f0f482371af", "Url": "https://api.github.com/repos/JasperShoe/SpaceStation", "Date": "2018-10-17T00:34:13Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["llvm.ConditionalStatement.getThenBlock()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (thenBlock != null) { llvm.LLVMType thenBlockType = this.visit(thenBlock, thenLLVMBlock); if (thenBlockType instanceof llvm.LLVMBlockType) { thenLLVMBlock = ((llvm.LLVMBlockType) (thenBlockType)); thenLLVMBlockId = ((llvm.LLVMBlockType) (thenBlockType)).getBlockId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2973/buggy-version/llvm.StackLLVMVisitor.java", "BodyUseAPI": ["llvm.StackLLVMVisitor.visit(llvm.Statement,llvm.LLVMBlockType)"], "Fixed commit": "d0bb21aab1bc160d8fdb441f09cf8f141f8777da", "Url": "https://api.github.com/repos/zuoyuanh/cpe431", "Date": "2018-10-17T00:00:24Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["llvm.ConditionalStatement.getElseBlock()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (elseBlock != null) { llvm.LLVMType elseBlockType = this.visit(elseBlock, elseLLVMBlock); if (elseBlockType instanceof llvm.LLVMBlockType) { elseLLVMBlock = ((llvm.LLVMBlockType) (elseBlockType)); elseLLVMBlockId = ((llvm.LLVMBlockType) (elseBlockType)).getBlockId(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2973/buggy-version/llvm.StackLLVMVisitor.java", "BodyUseAPI": ["llvm.StackLLVMVisitor.visit(llvm.Statement,llvm.LLVMBlockType)"], "Fixed commit": "d0bb21aab1bc160d8fdb441f09cf8f141f8777da", "Url": "https://api.github.com/repos/zuoyuanh/cpe431", "Date": "2018-10-17T00:00:24Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action.equals(\"isDeviceCompatible\")) { return this.isDeviceCompatible(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6233/buggy-version/src.android.com.droidada.plugin.Temperature.java", "BodyUseAPI": [], "Fixed commit": "3e1b76aca744c7309546423a847be6a8307c3bda", "Url": "https://api.github.com/repos/droidada/cordovatemperatureplugin", "Date": "2018-08-06T16:18:01Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((at.sunplugged.z600.backend.dataservice.impl.DataSavingThread.instance) != null) { ((org.apache.http.impl.client.CloseableHttpClient) (at.sunplugged.z600.backend.dataservice.impl.DataSavingThread.instance.client)).close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4982/buggy-version/at.sunplugged.z600.backend.dataservice.src.at.sunplugged.z600.backend.dataservice.impl.DataSavingThread.java", "BodyUseAPI": [], "Fixed commit": "7b18102e04f5966a258b791cdcf7f30ca3ecce03", "Url": "https://api.github.com/repos/freelancer1845/at.sunplugged.z600", "Date": "2018-05-20T17:06:26Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.qmuiteam.qmui.util.QMUIDeviceHelper.isMIUIV9()) { com.qmuiteam.qmui.util.QMUIStatusBarHelper.MIUISetStatusBarLightMode(window, light); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/446/buggy-version/qmui.src.main.java.com.qmuiteam.qmui.util.QMUIStatusBarHelper.java", "BodyUseAPI": [], "Fixed commit": "eeafc91db30dcdee1ce2abd12ce7263e08faf86f", "Url": "https://api.github.com/repos/QMUI/QMUI_Android", "Date": "2018-02-02T11:08:53Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getPSAgentManager()) != null) { context.getPSAgentManager().checkHBTimeOut(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9079/buggy-version/angel-ps.core.src.main.java.com.tencent.angel.master.HeartbeatMonitor.java", "BodyUseAPI": ["context.getPSAgentManager().checkHBTimeOut()", "com.tencent.angel.master.app.AMContext.getPSAgentManager()"], "Fixed commit": "83792ecae1b79129c083ba18227d2cd1ee08200c", "Url": "https://api.github.com/repos/htynkn/angel", "Date": "2018-04-26T02:07:24Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getWorkerManager()) != null) { context.getWorkerManager().checkHBTimeOut(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9079/buggy-version/angel-ps.core.src.main.java.com.tencent.angel.master.HeartbeatMonitor.java", "BodyUseAPI": ["context.getWorkerManager().checkHBTimeOut()", "com.tencent.angel.master.app.AMContext.getWorkerManager()"], "Fixed commit": "83792ecae1b79129c083ba18227d2cd1ee08200c", "Url": "https://api.github.com/repos/htynkn/angel", "Date": "2018-04-26T02:07:24Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getParameterServerManager()) != null) { context.getParameterServerManager().checkHBTimeOut(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9079/buggy-version/angel-ps.core.src.main.java.com.tencent.angel.master.HeartbeatMonitor.java", "BodyUseAPI": ["context.getParameterServerManager().checkHBTimeOut()", "com.tencent.angel.master.app.AMContext.getParameterServerManager()"], "Fixed commit": "83792ecae1b79129c083ba18227d2cd1ee08200c", "Url": "https://api.github.com/repos/htynkn/angel", "Date": "2018-04-26T02:07:24Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getClientManager()) != null) { context.getClientManager().checkHBTimeOut(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9079/buggy-version/angel-ps.core.src.main.java.com.tencent.angel.master.HeartbeatMonitor.java", "BodyUseAPI": ["context.getClientManager().checkHBTimeOut()", "com.tencent.angel.master.app.AMContext.getClientManager()"], "Fixed commit": "83792ecae1b79129c083ba18227d2cd1ee08200c", "Url": "https://api.github.com/repos/htynkn/angel", "Date": "2018-04-26T02:07:24Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (upoadhis) { bottomMenu.findItem(R.id.action_favourites).setVisible(false); bottomMenu.findItem(R.id.action_edit).setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5478/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "cae14e307147d2b9e59dafaee34b837c6c568393", "Url": "https://api.github.com/repos/fossasia/phimpme-android", "Date": "2018-06-01T15:11:18Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tempInterceptors) != null) { for (java.util.Map.Entry<java.lang.String, java.lang.Boolean> entry : this.tempInterceptors.entrySet()) { dest.writeString(entry.getKey()); dest.writeValue(entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3034/buggy-version/router.src.main.java.com.chenenyu.router.RouteRequest.java", "BodyUseAPI": [], "Fixed commit": "a0940fcd8ddecec6f6e4879a4fd47c89a986a4ce", "Url": "https://api.github.com/repos/chenenyu/Router", "Date": "2018-06-29T06:42:56Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((anotherUsage.resourcesUsed[i]) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7712/buggy-version/src.rts.ResourceUsage.java", "BodyUseAPI": [], "Fixed commit": "78375f2501ee7b22a2d9d71b798aa4e01ef9be19", "Url": "https://api.github.com/repos/santiontanon/microrts", "Date": "2018-07-17T16:03:06Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uniqueColors.isEmpty()) { kolor = 1; }else { kolor = (java.util.Collections.max(uniqueColors)) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4482/buggy-version/src.Graph.java", "BodyUseAPI": ["java.util.Collections.max(java.util.Set<java.lang.Integer>)"], "Fixed commit": "a5094ae5345dcc5241f07cc14cb5b9749db65c6d", "Url": "https://api.github.com/repos/fluffykitty/Super-Graph-Coloring", "Date": "2018-04-30T17:05:51Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mercadopago.core.CheckoutStore.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((store.hasPaymentProcessor()) || (!(store.getPaymentMethodPluginList().isEmpty()))) { discountStorageService.configureDiscountManually(discount, campaign); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4176/buggy-version/sdk.src.main.java.com.mercadopago.internal.datasource.DiscountServiceImp.java", "BodyUseAPI": [], "Fixed commit": "026be7f929f323659b21d9e98799f05712a1a799", "Url": "https://api.github.com/repos/mercadopago/px-android", "Date": "2018-07-05T17:46:24Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.zimbra.cs.lmtpserver.LmtpAddress.debug) com.zimbra.cs.lmtpserver.LmtpAddress.say((\"but... is it alphabetic? \" + (java.lang.Character.isAlphabetic(ch))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9585/buggy-version/store.src.java.com.zimbra.cs.lmtpserver.LmtpAddress.java", "BodyUseAPI": [], "Fixed commit": "d73adca914267f515959aa08565d8ac4762c1177", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2018-10-06T12:11:40Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zimbra.cs.lmtpserver.LmtpAddress.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Character.isAlphabetic(ch))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9585/buggy-version/store.src.java.com.zimbra.cs.lmtpserver.LmtpAddress.java", "BodyUseAPI": [], "Fixed commit": "d73adca914267f515959aa08565d8ac4762c1177", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2018-10-06T12:11:40Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_cars)) { miFragment = new com.example.maris.vehiclemanager.Fragments.VehiclesListFragment(); fragmentSeleccionado = true; }else if (id == (R.id.nav_new_expense)) { android.content.Intent intent = new android.content.Intent(this, com.example.maris.vehiclemanager.EditAddExpenses.class); startActivity(intent); }else if (id == (R.id.nav_setting)) { }else if (id == (R.id.nav_about)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9485/buggy-version/app.src.main.java.com.example.maris.vehiclemanager.MainActivityMenu.java", "BodyUseAPI": [], "Fixed commit": "e7c520c6cf102d49be2c7ef15f9798f6a87ba91d", "Url": "https://api.github.com/repos/salvadorc94/VehicleManager", "Date": "2018-07-07T04:38:16Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.php.lang.psi.elements.PhpSwitch.getDefaultCase()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (defaultCase != null) { holder.registerProblem(expression.getFirstChild(), com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.DegradedSwitchInspector.messageOnlyDefault); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2394/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalTransformations.DegradedSwitchInspector.java", "BodyUseAPI": [], "Fixed commit": "642dc7d314d022093e8f63deb7a586e835bcddcd", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2018-10-24T06:50:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (villagerCount.containsKey(role)) { villagerCount.put(role, ((villagerCount.get(role)) + 1)); }else { villagerCount.put(role, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3707/buggy-version/src.game.Town.Town.java", "BodyUseAPI": ["java.util.HashMap<game.Town.villagers.VILLAGER_ROLES, java.lang.Integer>.get(game.Town.villagers.VILLAGER_ROLES)", "java.util.HashMap<game.Town.villagers.VILLAGER_ROLES, java.lang.Integer>.put(game.Town.villagers.VILLAGER_ROLES,((villagerCount.get(role)) + 1))", "java.util.HashMap<game.Town.villagers.VILLAGER_ROLES, java.lang.Integer>.put(game.Town.villagers.VILLAGER_ROLES,int)"], "Fixed commit": "f733399b0388ea799846c22015bb5387ac586e7d", "Url": "https://api.github.com/repos/acherry125/Worship", "Date": "2018-04-16T19:57:11Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fileLink.startsWith(\"/\"))) fileLink = \"/\" + fileLink;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8091/buggy-version/app.src.main.java.com.example.balakrishnan.mybrowser.BackgroundParseTask.java", "BodyUseAPI": [], "Fixed commit": "e1ca836be2770a792a139b468d3df3cccfd989d3", "Url": "https://api.github.com/repos/97balakrishnan/MyBrowser", "Date": "2018-03-03T14:56:49Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (z == 0) java.lang.System.out.println(line);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8091/buggy-version/app.src.main.java.com.example.balakrishnan.mybrowser.BackgroundParseTask.java", "BodyUseAPI": [], "Fixed commit": "e1ca836be2770a792a139b468d3df3cccfd989d3", "Url": "https://api.github.com/repos/97balakrishnan/MyBrowser", "Date": "2018-03-03T14:56:49Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xmx.credit_card.service.impl.CardServiceImpl.getAmountByCardNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (previousCardAmount == null) throw new java.lang.RuntimeException(\"No such card\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7693/buggy-version/src.main.java.com.xmx.credit_card.service.impl.CardServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ce2210ce394f40a0e08003e69e51a7e323895df9", "Url": "https://api.github.com/repos/eitangao/credit_card", "Date": "2018-05-08T01:36:27Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["team3.teamproject.MapsActivity.getGraphValues(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((x == null) || ((x.size()) < 1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6802/buggy-version/app.src.main.java.team3.teamproject.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "d3138859ec47ec6eb9b6028237c24c396ca3d3d4", "Url": "https://api.github.com/repos/Grey-Poupon/PinIt", "Date": "2018-04-22T22:34:05Z"},
{"Line": "=>1090", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event instanceof org.biopax.paxtools.model.level3.BiochemicalReaction) { defineReactionEntity(go_cam, event, event_iri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4543/buggy-version/exchange.src.main.java.org.geneontology.gocam.exchange.BioPaxtoGO.java", "BodyUseAPI": ["org.geneontology.gocam.exchange.BioPaxtoGO.defineReactionEntity(org.geneontology.gocam.exchange.GoCAM,org.biopax.paxtools.model.level3.Interaction,org.semanticweb.owlapi.model.IRI)"], "Fixed commit": "59152d548f88b0bb77029c9877bb174b370394eb", "Url": "https://api.github.com/repos/geneontology/pathways2GO", "Date": "2018-10-26T03:54:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((stock.getAmount()) > 0) && ((buyer.getMoney()) > (stock.getPrice()))) { buyer.addStocks(); stock.subtractAmount(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4241/buggy-version/src.main.java.Trading.java", "BodyUseAPI": ["interfaces.Stock.subtractAmount(int)", "interfaces.Buyer.addStocks()"], "Fixed commit": "dbb424658008b408536a0a9a7ad459c931194bdb", "Url": "https://api.github.com/repos/DrixGod/PCBE", "Date": "2018-10-23T17:40:36Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGameType()) == (Common.GlobalDefines.GameTypes.DynamicMultiPlayer)) totalRounds = (handsCount) / (getTotalPlayers()); else totalRounds = (handsCount) / (numberOfPlayers);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1029/buggy-version/PokerEngine.src.Business.GameSettings.java", "BodyUseAPI": [], "Fixed commit": "18b4079f23b7a3b7f10f3dd03f34fcdd5831b902", "Url": "https://api.github.com/repos/avithalker/TexasHoldemPoker", "Date": "2018-03-08T17:11:12Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.badlogic.gdx.backends.android.AndroidGraphics) (app.getGraphics())).getView()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (view instanceof com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20) { if ((((com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20) (view)).preferredInputType) != preferredInputType) { ((com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20) (view)).preferredInputType = preferredInputType; manager.restartInput(view); } }else if (view instanceof com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18) { if ((((com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18) (view)).preferredInputType) != preferredInputType) { ((com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18) (view)).preferredInputType = preferredInputType; manager.restartInput(view); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5438/buggy-version/backends.gdx-backend-android.src.com.badlogic.gdx.backends.android.AndroidInput.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.restartInput(android.view.View)", "android.view.inputmethod.InputMethodManager.restartInput(android.view.View)"], "Fixed commit": "326e555478996b4873de786348a2655425824498", "Url": "https://api.github.com/repos/PokeMMO/libgdx", "Date": "2018-04-27T17:58:48Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (SplashScreen.restaurantDetailResponseData.getCurrency().equalsIgnoreCase(\"USD\")) com.foodvaninfowiz.foodorderingin.Activities.MainActivity.currency = \"$\"; else com.foodvaninfowiz.foodorderingin.Activities.MainActivity.currency = \"\u20b9\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1084/buggy-version/app.src.main.java.com.foodvaninfowiz.foodorderingin.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bd3038f13bf9208af706e799fec22dd56f6e1d52", "Url": "https://api.github.com/repos/rajangarg58/FoodVan", "Date": "2018-05-20T10:55:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((lastTime) - (java.lang.System.nanoTime())) + (OPTIMAL_TIME)) >= 0) java.lang.Thread.sleep(((((lastTime) - (java.lang.System.nanoTime())) + (OPTIMAL_TIME)) / 1000000));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1819/buggy-version/src.GameHandler.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "3cfb713fa1f3b3a1bd22945a31ded21c06b45af0", "Url": "https://api.github.com/repos/Klicken/Fire-Breathing-Rubber-Duckies", "Date": "2018-02-01T14:41:03Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gnu.trove.map.TObjectIntMap<java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((resultSet.getObject(columnIndex)) != null) return resultSet.getDouble(columnIndex); else return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3735/buggy-version/src.main.java.com.conveyal.gtfs.loader.EntityPopulator.java", "BodyUseAPI": ["java.sql.ResultSet.getDouble(int)"], "Fixed commit": "61474464ec2cf2da7b14f3b2ff1444fce666b76c", "Url": "https://api.github.com/repos/5Tsrl/gtfs-lib", "Date": "2018-03-19T10:23:59Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gnu.trove.map.TObjectIntMap<java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((resultSet.getObject(columnIndex)) != null) return resultSet.getInt(columnIndex); else return com.conveyal.gtfs.model.Entity.INT_MISSING;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3735/buggy-version/src.main.java.com.conveyal.gtfs.loader.EntityPopulator.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "61474464ec2cf2da7b14f3b2ff1444fce666b76c", "Url": "https://api.github.com/repos/5Tsrl/gtfs-lib", "Date": "2018-03-19T10:23:59Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (formField.name().equals(Patients.COL_VILLAGE)) patients.setVillage(formField.value());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2763/buggy-version/opensrp-core.src.main.java.org.opensrp.service.formSubmission.FormEntityConverter.java", "BodyUseAPI": ["org.opensrp.form.domain.FormField.value()", "org.opensrp.service.formSubmission.Patients.setVillage(formField.value())"], "Fixed commit": "d207fec512ceba49251e3e0232d14c7715502c83", "Url": "https://api.github.com/repos/SoftmedTanzania/htmr_backend", "Date": "2018-03-24T06:54:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.krauss.Reservierung.getResStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (oldStart.equals(start_Date)) { controll.showErrorMessage(\"Das Startdatum ist identisch mit dem einer anderen Reservierung\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2191/buggy-version/src.main.java.de.krauss.Utilities.java", "BodyUseAPI": [], "Fixed commit": "83a807cb46bd9b048bf89a49af2ae07202a466cc", "Url": "https://api.github.com/repos/TimKrauss/Aufgaben", "Date": "2018-10-29T08:11:40Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start_Date == null) { de.krauss.Utilities.logger.fatal(\"Start-Date ist Null\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2191/buggy-version/src.main.java.de.krauss.Utilities.java", "BodyUseAPI": [], "Fixed commit": "83a807cb46bd9b048bf89a49af2ae07202a466cc", "Url": "https://api.github.com/repos/TimKrauss/Aufgaben", "Date": "2018-10-29T08:11:40Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getAttribute(\"problems\")) == null) { service = team6.uid.clujsorver.service.ProblemService.getInstance(); session.setAttribute(\"problems\", service.getProblems()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5889/buggy-version/src.main.java.team6.uid.clujsolver.controller.LoginController.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,service.getProblems())"], "Fixed commit": "44bd0cab28bb82c25e91a9aec6d47a7b66b1401b", "Url": "https://api.github.com/repos/todericidan/UID_ProblemsCrowdSourcingProject", "Date": "2018-01-16T21:31:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFloatWindow) != null) { mFloatWindow.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8689/buggy-version/sample.src.main.java.com.baina.floatwindow.GetFloatWindowFreePositionActivity.java", "BodyUseAPI": [], "Fixed commit": "73e63701e3de0753919bec16f58063fc1b97b05c", "Url": "https://api.github.com/repos/YoungBill/Android-FloatWindow", "Date": "2018-07-30T02:39:26Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userName.contains(CarbonConstants.DOMAIN_SEPARATOR))) { java.lang.String domain = org.wso2.carbon.user.core.util.UserCoreUtil.getDomainFromThreadLocal(); if (domain != null) { userName = (domain + (org.wso2.carbon.CarbonConstants.DOMAIN_SEPARATOR)) + userName; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/11/buggy-version/components.governance.org.wso2.carbon.governance.rest.api.src.main.java.org.wso2.carbon.governance.rest.api.security.AuthenticationHandler.java", "BodyUseAPI": [], "Fixed commit": "f31187cedf2cddc7c630719760a00a594d71ae06", "Url": "https://api.github.com/repos/wso2/carbon-governance", "Date": "2018-05-23T06:43:28Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (queryStartIndex != (-1)) { queryString = resourcePath.substring(queryStartIndex); resourcePath = resourcePath.substring(0, queryStartIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4405/buggy-version/src.main.java.com.github.kospiotr.bundler.CssTagProcessor.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "fd135f5e0fc88951b249b4741d549d974978b426", "Url": "https://api.github.com/repos/CH3CHO/bundler-maven-plugin", "Date": "2018-05-03T07:03:19Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((timeString.length()) > 0) { if (\"0123456789\".contains(timeString.substring(0, 1))) { if ((timeString.indexOf('-')) != (-1)) { if (!(timeString.equals(\"--\"))) { numUnits = java.lang.Integer.parseInt(timeString.substring(0, timeString.indexOf('-'))); } }else { numUnits = java.lang.Integer.parseInt(timeString.substring(0, timeString.indexOf(' '))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8275/buggy-version/Foodify2.app.src.main.java.com.example.gzhang.foodify2.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)", "java.lang.String.contains(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "24fdb6c85e5d0b849c1675c12552864e4fafa43f", "Url": "https://api.github.com/repos/GarlandZhang/Foodify", "Date": "2018-01-02T08:48:40Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.plugins.haxe.hxml.model.HXMLProjectModel.getLibraries()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (libs != null) { for (java.lang.String lib : libs) { com.intellij.plugins.haxe.haxelib.HaxeLibraryReference reference = com.intellij.plugins.haxe.haxelib.HaxeLibraryReference.create(module, lib); if (null != (reference.getLibrary())) { haxelibExternalItems.add(reference); }else { com.intellij.plugins.haxe.haxelib.HaxelibProjectUpdater.LOG.warn(\"Library referenced by HXML configuration is not known to haxelib.\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3999/buggy-version/src.common.com.intellij.plugins.haxe.haxelib.HaxelibProjectUpdater.java", "BodyUseAPI": [], "Fixed commit": "9de1a0762fb53e9a6b1ddd2cbf17356f6cfcbfc0", "Url": "https://api.github.com/repos/HaxeFoundation/intellij-haxe", "Date": "2018-02-02T08:38:15Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServletContext().getResourcePaths(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (resourcePaths != null) { resources.addAll(resourcePaths); resourcePaths.stream().filter(( s) -> s.endsWith(\"/\")).forEach(( resourcePath) -> resources.addAll(traverseResourcePaths(resourcePath))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6688/buggy-version/flow-server.src.main.java.com.vaadin.flow.server.VaadinServlet.java", "BodyUseAPI": ["java.util.stream.Stream<java.lang.String>.filter(java.util.function.Predicate<? super java.lang.String>)", "java.util.Set<java.lang.String>.stream()", "java.util.stream.Stream<java.lang.String>.forEach(java.util.function.Consumer<? super java.lang.String>)", "java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "be7c00da490dab36bbffe7ab13177f890e706fef", "Url": "https://api.github.com/repos/vaadin/flow", "Date": "2018-01-11T11:47:37Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.tmkim.electronicdancemap.ListItem.getItemArtists()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((artistList.length()) >= 2) { itemDesc = ((((artistList.substring(0, ((artistList.length()) - 2))) + \"\\n\") + (currentItem.getItemVenue())) + \" - \") + (df.format(currentItem.getItemDate())); }else { itemDesc = ((currentItem.getItemVenue()) + \" - \") + (df.format(currentItem.getItemDate())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4024/buggy-version/app.src.main.java.io.github.tmkim.electronicdancemap.EDMAdapter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "0cf29cf39d27af6b8166d8a85f278ed6827efc54", "Url": "https://api.github.com/repos/tmkim/ElectronicDanceMap", "Date": "2018-10-09T18:12:24Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dcbis09b.isChecked()) { if (!(validatorClass.EmptyTextBox(this, dcbis09bdt, getString(R.string.date)))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1140/buggy-version/app.src.main.java.edu.aku.hassannaqvi.dss_census_sur.activities.SectionBNewPrevActivity.java", "BodyUseAPI": [], "Fixed commit": "97591a2900ab49dce4bacb0dbc69af9460606789", "Url": "https://api.github.com/repos/shznaqvi/DSS-Census", "Date": "2018-07-27T13:51:58Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dcbis03.isChecked()) { if (!(validatorClass.EmptyTextBox(this, dcbidob, getString(R.string.date)))) { return false; } return validatorClass.EmptyTextBox(this, dcbis03a, getString(R.string.dcbis03a)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1140/buggy-version/app.src.main.java.edu.aku.hassannaqvi.dss_census_sur.activities.SectionBNewPrevActivity.java", "BodyUseAPI": [], "Fixed commit": "97591a2900ab49dce4bacb0dbc69af9460606789", "Url": "https://api.github.com/repos/shznaqvi/DSS-Census", "Date": "2018-07-27T13:51:58Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.name().equalsIgnoreCase(\"DUNE.PAK\")) { retrogdx.games.dune2.readers.Pak pak = new retrogdx.games.dune2.readers.Pak(retrogdx.utils.SmartByteBuffer.wrap(file.readBytes())); for (java.util.Map.Entry<java.lang.String, retrogdx.utils.SmartByteBuffer> entry : pak.getFiles().entrySet()) { if (entry.getKey().equalsIgnoreCase(\"IBM.PAL\")) { retrogdx.games.dune2.Dune2.PALETTE = new retrogdx.games.dune2.readers.Pal(entry.getValue()).colors; }else if (entry.getKey().equalsIgnoreCase(\"BENE.PAL\")) { retrogdx.games.dune2.Dune2.PALETTE_ALT = new retrogdx.games.dune2.readers.Pal(entry.getValue()).colors; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9223/buggy-version/core.src.retrogdx.games.dune2.Dune2.java", "BodyUseAPI": ["retrogdx.utils.SmartByteBuffer.wrap(file.readBytes())", "com.badlogic.gdx.files.FileHandle.readBytes()"], "Fixed commit": "8a937d96e901885140b3beaf4ace1af37291d654", "Url": "https://api.github.com/repos/IceReaper/retroGDX", "Date": "2018-05-04T09:28:40Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.design.widget.PullToRefreshHostScrollView.getRefreshGroup()", "refreshChild.getRefreshTargetView().getTranslationY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (limitMaxTranslationY && (translationY >= (refreshChild.getRefreshHeader().getRefreshTriggerHeight()))) { mayTranslationY = translationY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2571/buggy-version/widget.pulltorefresh.src.main.java.android.support.design.widget.PullToRefreshHostScrollView.java", "BodyUseAPI": [], "Fixed commit": "39378521533c38a3251d95c187f6e829014d4cbb", "Url": "https://api.github.com/repos/lsjwzh/MultiRVScrollView", "Date": "2018-09-13T09:31:31Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s1Idx == 1) s1Idx = -1; else s1Idx -= 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/512/buggy-version/jhunter.src.com.jhunter.interview.StringIQ.java", "BodyUseAPI": [], "Fixed commit": "ad3c7e701133609accc5de0e0c2c79b11aa64321", "Url": "https://api.github.com/repos/jitendrachdhry/jhunter", "Date": "2018-04-06T00:07:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jhunter.interview.StringIQ.compareString(\"abc\\\\b\", \"ab\")) java.lang.System.out.print(\"StringIQ.compareString() return true \"); else java.lang.System.out.print(\"StringIQ.compareString() return false \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/512/buggy-version/jhunter.src.com.jhunter.interview.JHunter.java", "BodyUseAPI": [], "Fixed commit": "ad3c7e701133609accc5de0e0c2c79b11aa64321", "Url": "https://api.github.com/repos/jitendrachdhry/jhunter", "Date": "2018-04-06T00:07:53Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFirebaseRepository) != null) { mFirebaseRepository.detachDatabaseReadListener(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2401/buggy-version/app.src.main.java.com.example.android.mydiary.journal.JournalPresenter.java", "BodyUseAPI": [], "Fixed commit": "f3d3bafcd2a4ce670cf931549bed4931af6c0292", "Url": "https://api.github.com/repos/Darthrighteous/MyDiary", "Date": "2018-06-30T13:43:52Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previousElement.isPresent()) { return true; }else { while (this.iterator.hasNext()) { final java.util.Optional<T> current = this.iterator.next(); if (current.isPresent()) { this.previousElement = current; return true; } this.previousElement = java.util.Optional.empty(); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8020/buggy-version/src.main.java.org.openstreetmap.atlas.utilities.collections.OptionalIterable.java", "BodyUseAPI": [], "Fixed commit": "82625ac21cd78b08726685fb3eb0f40f53ab7155", "Url": "https://api.github.com/repos/jklamer/atlas", "Date": "2018-02-03T00:37:02Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.inria.jtravis.entities.Job.getLog()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (optionalLog.isPresent()) { fr.inria.jtravis.entities.Log jobLog = optionalLog.get(); if ((fr.inria.spirals.repairnator.config.RepairnatorConfig.getInstance().getLauncherMode()) == (fr.inria.spirals.repairnator.states.LauncherMode.CHECKSTYLE)) { if (jobLog.getContent().contains(\"maven-checkstyle\")) { fr.inria.spirals.repairnator.realtime.RTScanner.LOGGER.info(((((((\"Checkstyle has been found in repository \" + (repository.getSlug())) + \" (id: \") + repositoryId) + \") build (id: \") + (masterBuild.getId())) + \"). The repo is now whitelisted.\")); this.addInWhitelistRepository(repository); return true; }else { this.addInTempBlackList(repository, \"No checkstyle found\"); } }else { if (((jobLog.getTestsInformation()) != null) && ((jobLog.getTestsInformation().getRunning()) > 0)) { fr.inria.spirals.repairnator.realtime.RTScanner.LOGGER.info(((((((\"Tests has been found in repository \" + (repository.getSlug())) + \" (id: \") + repositoryId) + \") build (id: \") + (masterBuild.getId())) + \"). The repo is now whitelisted.\")); this.addInWhitelistRepository(repository); return true; }else { this.addInTempBlackList(repository, \"No test found\"); } } }else { fr.inria.spirals.repairnator.realtime.RTScanner.LOGGER.error((\"Error while getting log for job \" + (firstJob.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6958/buggy-version/repairnator.repairnator-realtime.src.main.java.fr.inria.spirals.repairnator.realtime.RTScanner.java", "BodyUseAPI": ["java.util.Optional<fr.inria.jtravis.entities.Log>.get()"], "Fixed commit": "9acc1731fc8a19416186aaef0a513ea350587a07", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2018-10-25T10:06:48Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getParentFile().exists())) { file.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2417/buggy-version/src.main.java.reposense.util.FileUtil.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "ae78a955f60f2df714faef9b9c80cd085ce2c90b", "Url": "https://api.github.com/repos/eugenepeh/RepoSense", "Date": "2018-05-18T13:36:25Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFrameBuffers.length) <= i) return vip.frendy.fliter.utils.OpenGlUtils.NOT_INIT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5904/buggy-version/filter.src.main.java.vip.frendy.fliter.base.GPUImageFilterGroup.java", "BodyUseAPI": [], "Fixed commit": "ade93c30dfe4e4c24a6dc7fd7a7ca89ca65774d0", "Url": "https://api.github.com/repos/frendyxzc/KCamera", "Date": "2018-08-09T11:57:53Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dt < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5465/buggy-version/app.src.main.java.Model.MFBLocation.java", "BodyUseAPI": [], "Fixed commit": "a90e7be55922e2ff2ad272b7e9ecb9af5c977630", "Url": "https://api.github.com/repos/ericberman/MyFlightbookAndroid", "Date": "2018-08-24T17:00:50Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentTrip.getSong()) != null) { return currentTrip.getSong().getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2589/buggy-version/app.src.main.java.presenters.VacationFeedPresenter.java", "BodyUseAPI": ["com.example.models.Trip.getSong()", "currentTrip.getSong().getId()"], "Fixed commit": "6c45ed931cad158576aca24e395f4c85ebd766cf", "Url": "https://api.github.com/repos/clairescout/MyTravelApp", "Date": "2018-10-24T00:29:59Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value == (org.json.JSONObject.NULL)) { value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7341/buggy-version/cc.src.main.java.com.billy.cc.core.component.CCUtil.java", "BodyUseAPI": [], "Fixed commit": "d8de9d5cfd1006f697d9036dddb6591bde774dbe", "Url": "https://api.github.com/repos/SubinVane/CC", "Date": "2018-05-17T10:40:38Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Communication.Encoder.Decode(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((result.getCommands()) != null) lastCommand = (lastCommand) + (result.getCommands().length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/448/buggy-version/TicketToRideClient.app.src.main.java.Model.Poller.java", "BodyUseAPI": ["Results.PollResult.getCommands()"], "Fixed commit": "bb5def750fb1a01bcbea6e2791a63106d86b152f", "Url": "https://api.github.com/repos/massielislas/TicketToRidePhase3", "Date": "2018-06-09T18:57:10Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { file.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2403/buggy-version/components.ntask.org.wso2.carbon.ntask.core.src.main.java.org.wso2.carbon.ntask.core.impl.FileBasedTaskRepository.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "43e3ab6482370268a9b102e959d863ab18cc0012", "Url": "https://api.github.com/repos/malakaganga/carbon-commons", "Date": "2018-06-08T02:47:13Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (favphotomode) { org.fossasia.phimpme.gallery.util.AlertDialogsHelper.getTextDialog(this, deleteDialog, R.string.remove_from_favourites, R.string.delete_from_favourites_message, null); ButtonDelete = this.getString(R.string.remove); }else { org.fossasia.phimpme.gallery.util.AlertDialogsHelper.getTextDialog(this, deleteDialog, R.string.delete, R.string.delete_photo_message, null); ButtonDelete = this.getString(R.string.delete); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7035/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "49691f76837c5a8be1a2991d6a53d887affe3bea", "Url": "https://api.github.com/repos/sauravvishal8797/phimpme-android", "Date": "2018-03-11T06:29:39Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["metaRow.select(\"a\").last().text().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((digitSplit.length) < 1) { comments = \"0\"; }else { comments = digitSplit[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7977/buggy-version/src.main.java.newsscraper.NewsScraper.java", "BodyUseAPI": [], "Fixed commit": "811693bc10dc4306c2239e788b06f050e909df35", "Url": "https://api.github.com/repos/rimadoma/newsscraper", "Date": "2018-09-02T11:55:03Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof edu.umass.ckc.wo.woserver.AdminFlushStrategyCacheEvent) { edu.umass.ckc.wo.strat.StrategyCache.getInstance().flush(); }else if (e instanceof edu.umass.ckc.wo.woserver.AdminFlushSingleStrategyFromCacheEvent) { edu.umass.ckc.wo.strat.StrategyCache.getInstance().flushStrategy(((edu.umass.ckc.wo.woserver.AdminFlushSingleStrategyFromCacheEvent) (e)).getStrategyId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2218/buggy-version/woServer.src.edu.umass.ckc.wo.woserver.AdminHandler.java", "BodyUseAPI": [], "Fixed commit": "945b2aed4ea6c63a61d59d706347396252e8392d", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2018-07-23T18:02:49Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cur != 0) { (filledSpots)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3943/buggy-version/src.SudokuModel.java", "BodyUseAPI": [], "Fixed commit": "b19f9ce09fa6be77e835fdc334f2ca62d7e8a8c4", "Url": "https://api.github.com/repos/ygoldin/Sudoku", "Date": "2018-03-23T05:46:59Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (circle.getBoundsInParent().intersects(getmCurva().arco.getBoundsInParent())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3977/buggy-version/lotus-plugin-uml.src.main.java.br.uece.lotus.uml.api.viewer.transition.ElipseTransitionMSCViewImpl.java", "BodyUseAPI": [], "Fixed commit": "e6f777b1e227a33eb024f0b4f30f18690bbecb20", "Url": "https://api.github.com/repos/lotus-tool/lotus-tool", "Date": "2018-03-28T01:07:41Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (circle.getBoundsInParent().intersects(getmCurva().seta.getBoundsInParent())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3977/buggy-version/lotus-plugin-uml.src.main.java.br.uece.lotus.uml.api.viewer.transition.ElipseTransitionMSCViewImpl.java", "BodyUseAPI": [], "Fixed commit": "e6f777b1e227a33eb024f0b4f30f18690bbecb20", "Url": "https://api.github.com/repos/lotus-tool/lotus-tool", "Date": "2018-03-28T01:07:41Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (circle.getBoundsInParent().intersects(getmCurva().arco.getBoundsInParent())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3977/buggy-version/lotus-plugin-uml.src.main.java.br.uece.lotus.uml.api.viewer.transition.SelfTransitionMSCViewImpl.java", "BodyUseAPI": [], "Fixed commit": "e6f777b1e227a33eb024f0b4f30f18690bbecb20", "Url": "https://api.github.com/repos/lotus-tool/lotus-tool", "Date": "2018-03-28T01:07:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (circle.getBoundsInParent().intersects(getmCurva().arco.getBoundsInParent())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3977/buggy-version/lotus-plugin-uml.src.main.java.br.uece.lotus.uml.api.viewer.transition.SelfTransitionMSCViewImpl.java", "BodyUseAPI": [], "Fixed commit": "e6f777b1e227a33eb024f0b4f30f18690bbecb20", "Url": "https://api.github.com/repos/lotus-tool/lotus-tool", "Date": "2018-03-28T01:07:41Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (circle.getBoundsInParent().intersects(getmCurva().seta.getBoundsInParent())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3977/buggy-version/lotus-plugin-uml.src.main.java.br.uece.lotus.uml.api.viewer.transition.SelfTransitionMSCViewImpl.java", "BodyUseAPI": [], "Fixed commit": "e6f777b1e227a33eb024f0b4f30f18690bbecb20", "Url": "https://api.github.com/repos/lotus-tool/lotus-tool", "Date": "2018-03-28T01:07:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.ide.gradle.action.BuildServiceTaskAction.getFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.ide.core.util.FileUtil.exists(classpathFile)) { org.eclipse.core.resources.IProject[] projects = com.liferay.ide.core.util.CoreUtil.getClasspathProjects(project); for (org.eclipse.core.resources.IProject project : projects) { java.util.List<org.eclipse.core.resources.IFolder> folders = com.liferay.ide.core.util.CoreUtil.getSourceFolders(org.eclipse.jdt.core.JavaCore.create(project)); if (folders.isEmpty()) { refresh = true; }else { try { project.refreshLocal(IResource.DEPTH_INFINITE, null); } catch (org.eclipse.core.runtime.CoreException ce) { } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4927/buggy-version/tools.plugins.com.liferay.ide.gradle.ui.src.com.liferay.ide.gradle.action.BuildServiceTaskAction.java", "BodyUseAPI": [], "Fixed commit": "2bbfd3bc25f33b1992fea006de9835c529611814", "Url": "https://api.github.com/repos/JoyeLuo/liferay-ide", "Date": "2018-02-06T03:41:11Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == val) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4514/buggy-version/src.main.java.com.jfinal.ext.plugin.activerecord.ModelExt.java", "BodyUseAPI": [], "Fixed commit": "b635057903444c2400b1f81799bd6befc88bfb0e", "Url": "https://api.github.com/repos/E7du/jfinal-ext3", "Date": "2018-09-27T06:57:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (doInit) update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1335/buggy-version/src.main.java.org.fit.layout.impl.AreaListGridTopology.java", "BodyUseAPI": [], "Fixed commit": "5f604a9084c24784cccf8cbd411f6d5b91ab79e8", "Url": "https://api.github.com/repos/FitLayout/api", "Date": "2018-02-09T21:22:35Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(CustomMediaType.APPLICATION_SCHEMA_REGISTRY_JSON.equalsIgnoreCase(accept))) { logger.error(\"Accept is not set correctly, Method: checkSubject, subject: {}\", subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement(StatusCodes.INVALID_REQUEST.getStatusCode(), org.schemarepo.Message.ACCEPT_ERROR, null); }else if (org.apache.commons.lang3.StringUtils.isAnyBlank(subject)) { logger.error(\"Invalid Parameter Passed to function, Method: checkSubject, subject: {}\", subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement(StatusCodes.INVALID_REQUEST.getStatusCode(), StatusCodes.INVALID_REQUEST.getReasonPhrase(), null); }else { try { org.schemarepo.Subject s = getSubject(subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement(StatusCodes.OK.getStatusCode(), StatusCodes.OK.getReasonPhrase(), s.getName()); logger.info(\"Get the subject is successful. subject: {}\", subject); } catch (com.sun.jersey.api.NotFoundException e) { logger.warn(\"Get the subject is failed, {}, subject: {}\", Message.SUBJECT_DOES_NOT_EXIST_ERROR, subject); acknowledgement = new org.schemarepo.utils.MessageAcknowledgement(StatusCodes.GONE.getStatusCode(), org.schemarepo.Message.SUBJECT_DOES_NOT_EXIST_ERROR, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5149/buggy-version/server.src.main.java.org.schemarepo.server.RESTRepository.java", "BodyUseAPI": [], "Fixed commit": "001b0c4d4e1771c0f0b2255bbf4e0d15535324e3", "Url": "https://api.github.com/repos/chekore/schema-repo", "Date": "2018-09-19T07:11:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(inLoc).isFile())) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3612/buggy-version/src.main.java.usa.cactuspuppy.uhc_automation.ScoreboardUtils.ScoreboardIO.java", "BodyUseAPI": [], "Fixed commit": "2d8308229e63d2be29bf26c65096e83f034e04c2", "Url": "https://api.github.com/repos/CactusPuppy/uhcautomation", "Date": "2018-09-10T11:53:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<io.github.pr0methean.betterrandom.seed.SeedGenerator, io.github.pr0methean.betterrandom.seed.RandomSeederThread>.putIfAbsent(io.github.pr0methean.betterrandom.seed.SeedGenerator,io.github.pr0methean.betterrandom.seed.RandomSeederThread)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (oldInstance == null) { instance.setName((\"RandomSeederThread for \" + seedGenerator)); instance.setDaemon(true); instance.setPriority(io.github.pr0methean.betterrandom.seed.RandomSeederThread.defaultPriority.get()); instance.start(); }else { instance = oldInstance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4784/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.seed.RandomSeederThread.java", "BodyUseAPI": [], "Fixed commit": "9c3886d6b40572b5dc481233f72594cbdc6c3c34", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2018-07-07T05:31:54Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (shouldRecover) recoverPreviousOrders();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6712/buggy-version/src.main.java.org.fogbowcloud.manager.core.ManagerController.java", "BodyUseAPI": [], "Fixed commit": "66804c86c4976afde5fa3098dcf7db41af89e737", "Url": "https://api.github.com/repos/fogbow/fogbow-mono-manager", "Date": "2018-03-27T18:52:56Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.getText().toString().equals(\"\")) { android.widget.Toast.makeText(getApplicationContext(), \"Name kann nicht leer sein\", Toast.LENGTH_LONG).show(); tvun.performLongClick(); }else { hci.univie.ac.at.myapplication.MainActivity.mainData.setNewUsername(input.getText().toString()); saveData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9810/buggy-version/Application.app.src.main.java.hci.univie.ac.at.myapplication.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "input.getText().toString()", "hci.univie.ac.at.myapplication.Data.setNewUsername(input.getText().toString())"], "Fixed commit": "2db0b5af88facc789b62a2116a6db0e94efefeaf", "Url": "https://api.github.com/repos/sergiik22/whooweswhomwhat", "Date": "2018-06-02T09:13:49Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.getText().toString().equals(\"\")) { android.widget.Toast.makeText(getApplicationContext(), \"Limit kann nicht leer sein\", Toast.LENGTH_LONG).show(); tvlt.performLongClick(); }else { hci.univie.ac.at.myapplication.MainActivity.mainData.setNewLimit(java.lang.Double.parseDouble(input.getText().toString())); saveData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9810/buggy-version/Application.app.src.main.java.hci.univie.ac.at.myapplication.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.lang.Double.parseDouble(input.getText().toString())", "input.getText().toString()", "hci.univie.ac.at.myapplication.Data.setNewLimit(double)"], "Fixed commit": "2db0b5af88facc789b62a2116a6db0e94efefeaf", "Url": "https://api.github.com/repos/sergiik22/whooweswhomwhat", "Date": "2018-06-02T09:13:49Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((candidates.size()) == 1) return candidates.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1753/buggy-version/src.main.java.de.goerke.tobias.anchorj.base.exploration.MedianElimination.java", "BodyUseAPI": ["java.util.List<de.goerke.tobias.anchorj.base.AnchorCandidate>.get(int)"], "Fixed commit": "54524789498f95b87c63ff441cedf21188f02b5e", "Url": "https://api.github.com/repos/viadee/javaAnchorExplainer", "Date": "2018-10-01T17:19:25Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.usfirst.frc.team4737.robot.Robot.getInstance()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8055/buggy-version/src.org.usfirst.frc.team4737.robot.OI.java", "BodyUseAPI": [], "Fixed commit": "3d71b8e8e88dbc018e9187d34d2d12dee2671f73", "Url": "https://api.github.com/repos/WBHSRobotics4737/FRC-4737-2018", "Date": "2018-03-23T16:03:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.usfirst.frc.team4737.robot.Robot.getInstance()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8055/buggy-version/src.org.usfirst.frc.team4737.robot.OI.java", "BodyUseAPI": [], "Fixed commit": "3d71b8e8e88dbc018e9187d34d2d12dee2671f73", "Url": "https://api.github.com/repos/WBHSRobotics4737/FRC-4737-2018", "Date": "2018-03-23T16:03:35Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.usfirst.frc.team4737.robot.Robot.getInstance()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8055/buggy-version/src.org.usfirst.frc.team4737.robot.OI.java", "BodyUseAPI": [], "Fixed commit": "3d71b8e8e88dbc018e9187d34d2d12dee2671f73", "Url": "https://api.github.com/repos/WBHSRobotics4737/FRC-4737-2018", "Date": "2018-03-23T16:03:35Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(instance instanceof mjson.Json)) graph.define(handle, type, instance, flags);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2048/buggy-version/src.java.mjson.hgdb.HyperNodeJson.java", "BodyUseAPI": ["org.hypergraphdb.HyperGraph.define(org.hypergraphdb.HGHandle,org.hypergraphdb.HGHandle,java.lang.Object,int)"], "Fixed commit": "65724df5517d90399c3183f298ec72d8c4330fa1", "Url": "https://api.github.com/repos/hypergraphdb/mjson", "Date": "2018-04-16T05:36:38Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (handle == null) return graph.add(new org.hypergraphdb.HGValueLink(j, A), JsonTypeSchema.arrayTypeHandle); else { graph.define(handle, JsonTypeSchema.arrayTypeHandle, new org.hypergraphdb.HGValueLink(j, A), 0); return handle; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2048/buggy-version/src.java.mjson.hgdb.HyperNodeJson.java", "BodyUseAPI": ["org.hypergraphdb.HyperGraph.define(org.hypergraphdb.HGHandle,JsonTypeSchema.arrayTypeHandle,org.hypergraphdb.HGValueLink,int)"], "Fixed commit": "65724df5517d90399c3183f298ec72d8c4330fa1", "Url": "https://api.github.com/repos/hypergraphdb/mjson", "Date": "2018-04-16T05:36:38Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (handle != null) thisHandle = handle;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2048/buggy-version/src.java.mjson.hgdb.HyperNodeJson.java", "BodyUseAPI": [], "Fixed commit": "65724df5517d90399c3183f298ec72d8c4330fa1", "Url": "https://api.github.com/repos/hypergraphdb/mjson", "Date": "2018-04-16T05:36:38Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(SelectedbookId.isEmpty())) lbBook.setText(Controller.ReservationEditController.library.getBook(SelectedbookId).getTitle());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1405/buggy-version/src.Controller.ReservationEditController.java", "BodyUseAPI": ["javafx.scene.control.Label.setText(Controller.ReservationEditController.library.getBook(SelectedbookId).getTitle())", "Model.Library.getBook(java.lang.String)", "Controller.ReservationEditController.library.getBook(SelectedbookId).getTitle()"], "Fixed commit": "e2ff27b3f945d24d7f77aed6859f99185b105d3b", "Url": "https://api.github.com/repos/OumaWu/Library", "Date": "2018-05-25T01:50:25Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((averagedAccelerometerData.size()) >= 600) { for (int i = (averagedAccelerometerData.size()) - 600; i < (averagedAccelerometerData.size()); i++) { int xValue = averagedAccelerometerData.get(i).getXAxisValue().intValue(); int yValue = averagedAccelerometerData.get(i).getYAxisValue().intValue(); int zValue = averagedAccelerometerData.get(i).getZAxisValue().intValue(); updateAccelerometerPlot(xValue, yValue, zValue); } }else { for (int i = 0; i < (averagedAccelerometerData.size()); i++) { int xValue = averagedAccelerometerData.get(i).getXAxisValue().intValue(); int yValue = averagedAccelerometerData.get(i).getYAxisValue().intValue(); int zValue = averagedAccelerometerData.get(i).getZAxisValue().intValue(); updateAccelerometerPlot(xValue, yValue, zValue); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7360/buggy-version/mobile.src.main.java.ee490g.epfl.ch.dwarfsleepy.DayMonitoringActivity.java", "BodyUseAPI": ["averagedAccelerometerData.get(i).getZAxisValue().intValue()", "ee490g.epfl.ch.dwarfsleepy.DayMonitoringActivity.1.get(int)", "averagedAccelerometerData.get(i).getZAxisValue()", "ee490g.epfl.ch.dwarfsleepy.DayMonitoringActivity.1.get(int)", "ee490g.epfl.ch.dwarfsleepy.DayMonitoringActivity.1.size()", "ee490g.epfl.ch.dwarfsleepy.DayMonitoringActivity.1.size()", "averagedAccelerometerData.get(i).getZAxisValue()", "averagedAccelerometerData.get(i).getYAxisValue().intValue()", "averagedAccelerometerData.get(i).getYAxisValue().intValue()", "averagedAccelerometerData.get(i).getYAxisValue()", "averagedAccelerometerData.get(i).getXAxisValue()", "ee490g.epfl.ch.dwarfsleepy.DayMonitoringActivity.1.get(int)", "averagedAccelerometerData.get(i).getYAxisValue()", "ee490g.epfl.ch.dwarfsleepy.DayMonitoringActivity.1.get(int)", "averagedAccelerometerData.get(i).getXAxisValue().intValue()", "ee490g.epfl.ch.dwarfsleepy.DayMonitoringActivity.1.get(int)", "ee490g.epfl.ch.dwarfsleepy.DayMonitoringActivity.1.get(int)", "averagedAccelerometerData.get(i).getXAxisValue().intValue()", "averagedAccelerometerData.get(i).getZAxisValue().intValue()", "ee490g.epfl.ch.dwarfsleepy.DayMonitoringActivity.1.size()", "averagedAccelerometerData.get(i).getXAxisValue()"], "Fixed commit": "bf06ec287ed8ca4e418e06e426de28b9ace89c03", "Url": "https://api.github.com/repos/gokberkkaraca/energy-monitoring", "Date": "2018-01-02T17:41:40Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dto.getTagNames()) != null) { for (java.lang.String tagName : dto.getTagNames()) { com.teammistique.extensionrepository.models.Tag tag = new com.teammistique.extensionrepository.models.Tag(tagName); tags.add(tagService.createTag(tag)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3311/buggy-version/src.main.java.com.teammistique.extensionrepository.services.ExtensionServiceImpl.java", "BodyUseAPI": ["com.teammistique.extensionrepository.models.DTO.ExtensionDTO.getTagNames()"], "Fixed commit": "269a98e3ef60800c9bacfaae72e8509a1fe1b703", "Url": "https://api.github.com/repos/TeamMistique/ExtensionRepository", "Date": "2018-09-07T13:28:16Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aMapNaviCameraInfo.getCameraSpeed()) > 0) { setCameraSpeed(aMapNaviCameraInfo.getCameraSpeed()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4590/buggy-version/app.src.main.java.com.huivip.gpsspeedwidget.GpsUtil.java", "BodyUseAPI": ["com.huivip.gpsspeedwidget.GpsUtil.setCameraSpeed(aMapNaviCameraInfo.getCameraSpeed())", "com.huivip.gpsspeedwidget.AMapNaviCameraInfo.getCameraSpeed()"], "Fixed commit": "66be97295739086fa218ae4d2869a959af09da90", "Url": "https://api.github.com/repos/laihui0207/GPSSpeedWidget", "Date": "2018-04-20T01:11:16Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((aMapNaviCameraInfo.getCameraType()) == (CameraType.SPEED)) || ((aMapNaviCameraInfo.getCameraType()) == (CameraType.INTERVALVELOCITYSTART))) || ((aMapNaviCameraInfo.getCameraType()) == (CameraType.INTERVALVELOCITYEND))) || ((aMapNaviCameraInfo.getCameraType()) == (CameraType.BREAKRULE))) { cameraType = aMapNaviCameraInfo.getCameraType(); setCameraDistance(aMapNaviCameraInfo.getCameraDistance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4590/buggy-version/app.src.main.java.com.huivip.gpsspeedwidget.GpsUtil.java", "BodyUseAPI": ["com.huivip.gpsspeedwidget.AMapNaviCameraInfo.getCameraDistance()", "com.huivip.gpsspeedwidget.GpsUtil.setCameraDistance(aMapNaviCameraInfo.getCameraDistance())", "com.huivip.gpsspeedwidget.AMapNaviCameraInfo.getCameraType()"], "Fixed commit": "66be97295739086fa218ae4d2869a959af09da90", "Url": "https://api.github.com/repos/laihui0207/GPSSpeedWidget", "Date": "2018-04-20T01:11:16Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mAllowEditObjective)) { updateUIPreventEdit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4680/buggy-version/app.src.main.java.com.framgia.fgoal.screen.objectivedetail.ObjectiveDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ab56d87c121781dec6b08943419d3d472790b8dd", "Url": "https://api.github.com/repos/nvquangth/fgoal-android", "Date": "2018-10-11T04:32:32Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.toExternalForm()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (uri.endsWith(\".ttl\")) { out.println(\"recognized turtle\"); model.read(uri, \"http://example.org\", \"TURTLE\"); }else model.read(u.toExternalForm());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2961/buggy-version/src.main.java.org.opendatahacklab.semanticoctopus.aggregation.jena.JenaPelletSeqDownloadTask.java", "BodyUseAPI": ["com.hp.hpl.jena.ontology.OntModel.read(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "0ce057e71126030ddb9da399ed672872c8d5ce9f", "Url": "https://api.github.com/repos/opendatahacklab/semanticoctopus", "Date": "2018-01-02T22:08:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > 25) { type = WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6597/buggy-version/weex_analyzer.src.main.java.com.taobao.weex.analyzer.view.overlay.AbstractOverlayView.java", "BodyUseAPI": [], "Fixed commit": "acc0b31ced17c36c4c5ec2bdb0a464f560b64f6f", "Url": "https://api.github.com/repos/weexteam/weex-analyzer-android", "Date": "2018-09-08T01:44:44Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (play_toggle) { playing = false; play_toggle = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/128/buggy-version/app.src.main.java.com.mdi.rechoir.CanvasView.java", "BodyUseAPI": [], "Fixed commit": "1539767f2326f90b4a522bf5f3f003c9dc7d1013", "Url": "https://api.github.com/repos/CharlieShing/ReChoir", "Date": "2018-05-01T20:37:05Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playing)) { playing = true; play_toggle = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/128/buggy-version/app.src.main.java.com.mdi.rechoir.CanvasView.java", "BodyUseAPI": [], "Fixed commit": "1539767f2326f90b4a522bf5f3f003c9dc7d1013", "Url": "https://api.github.com/repos/CharlieShing/ReChoir", "Date": "2018-05-01T20:37:05Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(FilterActivity.FILTER_PARAM_POS_CATEGORY)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(category))) categories.addAll(java.util.Arrays.asList(category.split(\";\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4822/buggy-version/app.src.main.java.com.bobo.gmargiani.bobo.ui.activites.MainActivity.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.lang.String.split(java.lang.String)", "java.util.ArrayList.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "b3da8691ee0e7b877ccf6706e025e20edacc49e1", "Url": "https://api.github.com/repos/svaney/bobo", "Date": "2018-07-23T20:41:37Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.get(FilterActivity.FILTER_PARAM_POS_LOCATION)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(location))) locations.addAll(java.util.Arrays.asList(location.split(\";\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4822/buggy-version/app.src.main.java.com.bobo.gmargiani.bobo.ui.activites.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList.addAll(java.util.List<java.lang.String>)", "java.util.Arrays.asList(java.lang.String[])", "java.lang.String.split(java.lang.String)"], "Fixed commit": "b3da8691ee0e7b877ccf6706e025e20edacc49e1", "Url": "https://api.github.com/repos/svaney/bobo", "Date": "2018-07-23T20:41:37Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gwtupload.client.SingleUploader.getServletPath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(path.equals(oldPath))) { uploader.setServletPath(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1241/buggy-version/pint_webapp.src.main.java.edu.scripps.yates.client.gui.components.projectCreatorWizard.ObjectPanels.DataSourceDisclosurePanel.java", "BodyUseAPI": ["gwtupload.client.SingleUploader.setServletPath(java.lang.String)"], "Fixed commit": "73c414e12b5423ae9ba704807b8f43f7e9831a02", "Url": "https://api.github.com/repos/proteomicsyates/PINT", "Date": "2018-09-13T00:12:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((movieRating.getRating()) > 10) || ((movieRating.getRating()) < 1)) { return (\"redirect:/m/movies/\" + id) + \"?ratingerror=true\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1537/buggy-version/src.main.java.keSt93.springmoviedb.controller.RatingController.java", "BodyUseAPI": [], "Fixed commit": "b645e42131438923d86745d8a235eb01f117a412", "Url": "https://api.github.com/repos/keSt93/spring-moviedb", "Date": "2018-06-02T09:43:44Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.getX1()) == (line.getX2())) { handles.add(new jdraw.figures.handler.NorthHandle(this)); handles.add(new jdraw.figures.handler.SouthEastHandle(this)); }else if ((line.getY1()) == (line.getY2())) { handles.add(new jdraw.figures.handler.WestHandle(this)); handles.add(new jdraw.figures.handler.EastHandle(this)); }else if ((((line.getX1()) < (line.getX2())) && ((line.getY1()) < (line.getY2()))) || (((line.getX1()) > (line.getX2())) && ((line.getY1()) > (line.getY2())))) { handles.add(new jdraw.figures.handler.NorthWestHandle(this)); handles.add(new jdraw.figures.handler.SouthEastHandle(this)); }else { handles.add(new jdraw.figures.handler.NorthEastHandle(this)); handles.add(new jdraw.figures.handler.SouthWestHandle(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9373/buggy-version/src.main.java.jdraw.figures.Line.java", "BodyUseAPI": ["java.awt.geom.Line2D.getY1()", "java.awt.geom.Line2D.getY2()", "java.awt.geom.Line2D.getY2()", "java.awt.geom.Line2D.getX2()", "java.awt.geom.Line2D.getY2()", "java.awt.geom.Line2D.getX1()", "java.awt.geom.Line2D.getX1()", "java.awt.geom.Line2D.getY1()", "java.awt.geom.Line2D.getY1()", "java.awt.geom.Line2D.getX2()"], "Fixed commit": "fa1eb5dded315fba16038906ba0ad29f752c4828", "Url": "https://api.github.com/repos/dardrai/depa_a1", "Date": "2018-10-23T06:37:42Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adapter instanceof com.omega_r.libs.omegarecyclerview.pagination.WrapperAdapter) { realAdapter = ((com.omega_r.libs.omegarecyclerview.pagination.WrapperAdapter) (adapter)).getLastWrappedAdapter(); }else if (adapter instanceof com.omega_r.libs.omegarecyclerview.header.HeaderFooterWrapperAdapter) { realAdapter = ((com.omega_r.libs.omegarecyclerview.header.HeaderFooterWrapperAdapter) (adapter)).getLastWrappedAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6548/buggy-version/omegarecyclerviewlibs.src.main.java.com.omega_r.libs.omegarecyclerview.OmegaRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "f339f0685acfa452e7e3377f544174c44359cefc", "Url": "https://api.github.com/repos/Omega-R/OmegaRecyclerView", "Date": "2018-03-27T11:48:13Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, jolie.lang.parse.sessiontyping.Behavior>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (behavior.type.equals(BehavioralType.CATCH)) { ((jolie.lang.parse.sessiontyping.Catch) (behavior)).setOnewayValidated(true); return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1262/buggy-version/libjolie.src.jolie.lang.parse.sessiontyping.Sequence.java", "BodyUseAPI": [], "Fixed commit": "0b96fd0861478f6805bb4f153174cb4268e4c06b", "Url": "https://api.github.com/repos/SunsunThunder/jolie", "Date": "2018-09-16T09:49:08Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, jolie.lang.parse.sessiontyping.Behavior>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (behavior.type.equals(BehavioralType.RECURSIVECALL)) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1262/buggy-version/libjolie.src.jolie.lang.parse.sessiontyping.Sequence.java", "BodyUseAPI": [], "Fixed commit": "0b96fd0861478f6805bb4f153174cb4268e4c06b", "Url": "https://api.github.com/repos/SunsunThunder/jolie", "Date": "2018-09-16T09:49:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (orderedOperationsMap.containsKey(counter)) { jolie.lang.parse.sessiontyping.Behavior behavior = orderedOperationsMap.get(counter); if (behavior.type.equals(BehavioralType.CATCH)) { if (((jolie.lang.parse.sessiontyping.Catch) (behavior)).hasBeenValidated()) return ((jolie.lang.parse.sessiontyping.Sequence) (behavior)).nextBehavior(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1262/buggy-version/libjolie.src.jolie.lang.parse.sessiontyping.Sequence.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, jolie.lang.parse.sessiontyping.Behavior>.get(java.lang.Integer)"], "Fixed commit": "0b96fd0861478f6805bb4f153174cb4268e4c06b", "Url": "https://api.github.com/repos/SunsunThunder/jolie", "Date": "2018-09-16T09:49:08Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (protocol.getBehaviorType().equals(BehavioralType.RECURSIVECALL)) { if (protocol.getOperationName().equals(n.id())) { definitions.get(n.id()); }else { error(n, \"Error trying to call recursive\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1262/buggy-version/libjolie.src.jolie.lang.parse.sessiontyping.SessionTyping.java", "BodyUseAPI": ["protocol.getOperationName().equals(n.id())", "jolie.lang.parse.sessiontyping.ProtocolInterfaceDefinition.getOperationName()"], "Fixed commit": "0b96fd0861478f6805bb4f153174cb4268e4c06b", "Url": "https://api.github.com/repos/SunsunThunder/jolie", "Date": "2018-09-16T09:49:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cura.getFoto()) != null) { java.io.File imgFile = new java.io.File(cura.getFoto()); if (imgFile.exists()) { android.graphics.Bitmap myBitmap = android.graphics.BitmapFactory.decodeFile(imgFile.getAbsolutePath()); android.widget.ImageView myImage = ((android.widget.ImageView) (frame.findViewById(R.id.imgpillchosen))); myImage.setImageBitmap(myBitmap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6497/buggy-version/app.src.main.java.com.example.zanzibar.myapplication.frames.InfoFarmaco.java", "BodyUseAPI": ["com.example.zanzibar.myapplication.Database.cure.Cura.getFoto()"], "Fixed commit": "db980b85134cdea6c8cb4306e140ad57a284d1e1", "Url": "https://api.github.com/repos/Zanzibar184/Pills_reminder", "Date": "2018-05-28T14:14:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((processed % 100000) == 0) java.lang.System.out.println(((\"Processed \" + processed) + \" lines\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8389/buggy-version/src.IntervalGraphBuilder.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "de85fe2ba0a04cccede64f1dcc4ad726617c7582", "Url": "https://api.github.com/repos/HunterNacho/sparql-versioning", "Date": "2018-09-26T20:39:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ui != null) && (position != null)) mainPanel.add(ui, position.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3992/buggy-version/src.com.tilgnerka.draw.DrawHelper.java", "BodyUseAPI": [], "Fixed commit": "215b33b9a5575bb112441ea52017ce2984a87f72", "Url": "https://api.github.com/repos/SurlierBacchus/Draw", "Date": "2018-04-25T18:11:21Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((histListFrag.getArguments()) != null) { histListFrag.getArguments().clear(); histListFrag.getArguments().putAll(bundle); }else { histListFrag.setArguments(bundle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/605/buggy-version/TransporterApp.app.src.main.java.com.transporterapp.syde.transporterapp.Main.java", "BodyUseAPI": ["com.transporterapp.syde.transporterapp.History.HistListFrag.getArguments()", "com.transporterapp.syde.transporterapp.History.HistListFrag.getArguments()", "com.transporterapp.syde.transporterapp.History.HistListFrag.setArguments(android.os.Bundle)", "histListFrag.getArguments().clear()", "histListFrag.getArguments().putAll(android.os.Bundle)"], "Fixed commit": "3349a814cedb210e2315a4458bd5ad620be12681", "Url": "https://api.github.com/repos/ln375/SYDE461-462", "Date": "2018-03-14T03:19:27Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sortBy == (com.example.android.popularmovies.utilities.TMDbUtils.SortBy.RELEASE_DATE)) { java.text.SimpleDateFormat dateFormat = new java.text.SimpleDateFormat(\"yyyy-MM-dd\"); builder.appendQueryParameter(com.example.android.popularmovies.utilities.TMDbUtils.RELEASE_DATE_LTE_PARAM, dateFormat.format(new java.util.Date())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5639/buggy-version/app.src.main.java.com.example.android.popularmovies.utilities.TMDbUtils.java", "BodyUseAPI": [], "Fixed commit": "4be94f136fbd7a563cf4148c3a28237cf1c98b9f", "Url": "https://api.github.com/repos/johngboutros/popular-movies-project", "Date": "2018-03-17T22:06:39Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.redcastlemedia.multitallented.civs.Civs.econ) == null) { player.sendMessage(((org.redcastlemedia.multitallented.civs.Civs.getPrefix()) + \" Econ plugin not enabled or hooked through Vault.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9722/buggy-version/src.org.redcastlemedia.multitallented.civs.menus.ConfirmationMenu.java", "BodyUseAPI": [], "Fixed commit": "edfbe52897541181c5fff5afcf5e534c0e91dee5", "Url": "https://api.github.com/repos/Multitallented/Civs", "Date": "2018-08-29T14:59:25Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ID == null) { org.nschmidt.ldparteditor.logger.NLogger.debug(getClass(), \"getUVcoords(): ID is null.\"); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7628/buggy-version/src.org.nschmidt.ldparteditor.data.GTexture.java", "BodyUseAPI": [], "Fixed commit": "effbafb643f0faa923155dd4032f3d905782ebe8", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2018-07-23T20:38:41Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.towerVersion.is_greater_or_equal(\"3.3.0\"))) { this.authToken = \"BasicAuth\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6483/buggy-version/src.main.java.org.jenkinsci.plugins.ansible_tower.util.TowerConnector.java", "BodyUseAPI": [], "Fixed commit": "5bd58da057c6067c1cb29156c353df3a94e85ae8", "Url": "https://api.github.com/repos/tisluk/ansible-tower-plugin", "Date": "2018-10-10T13:58:08Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index >= (pdus.length)) || (index < 0)) { android.util.EventLog.writeEvent(1397638484, \"72298611\", (-1), java.lang.String.format(\"processMessagePart: invalid seqNumber = %d, messageCount = %d\", (index + (tracker.getIndexOffset())), messageCount)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/842/buggy-version/src.java.com.android.internal.telephony.InboundSmsHandler.java", "BodyUseAPI": ["android.util.EventLog.writeEvent(int,java.lang.String,int,java.lang.String)", "java.lang.String.format(java.lang.String,(index + (tracker.getIndexOffset())),int)"], "Fixed commit": "798c91fd6a830328287fb814b83aead78c8aee68", "Url": "https://api.github.com/repos/jason-caf/platform_frameworks_opt_telephony", "Date": "2018-06-21T04:13:52Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.internal.telephony.InboundSmsTracker.getMessageCount()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (messageCount <= 0) { android.util.EventLog.writeEvent(1397638484, \"72298611\", (-1), java.lang.String.format(\"processMessagePart: invalid messageCount = %d\", messageCount)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/842/buggy-version/src.java.com.android.internal.telephony.InboundSmsHandler.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int)", "android.util.EventLog.writeEvent(int,java.lang.String,int,java.lang.String)"], "Fixed commit": "798c91fd6a830328287fb814b83aead78c8aee68", "Url": "https://api.github.com/repos/jason-caf/platform_frameworks_opt_telephony", "Date": "2018-06-21T04:13:52Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((etValue.getText().toString().equals(\"\")) || ((java.lang.Integer.parseInt(etValue.getText().toString())) < 0)) { android.widget.Toast.makeText(getContext(), \"Please enter a valid number\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9104/buggy-version/One-Up.app.src.main.java.com.l3.one_up.fragments.InputFragment.java", "BodyUseAPI": [], "Fixed commit": "e1b00a1474bde7da5675f48133c20a872e2d65dc", "Url": "https://api.github.com/repos/FBU2018-L3/1-Up", "Date": "2018-08-14T17:35:13Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fm.getPlatformId().equals(this.platformId)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4835/buggy-version/src.main.java.eu.h2020.symbiote.subman.messaging.consumers.Consumers.java", "BodyUseAPI": [], "Fixed commit": "8fc6baad16ebae65cb7a671b71bacc614c89ff69", "Url": "https://api.github.com/repos/symbiote-h2020/SubscriptionManager", "Date": "2018-04-23T16:38:43Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fedMember.getPlatformId().equals(this.platformId)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4835/buggy-version/src.main.java.eu.h2020.symbiote.subman.messaging.consumers.Consumers.java", "BodyUseAPI": [], "Fixed commit": "8fc6baad16ebae65cb7a671b71bacc614c89ff69", "Url": "https://api.github.com/repos/symbiote-h2020/SubscriptionManager", "Date": "2018-04-23T16:38:43Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(one.lindegaard.BagOfGold.util.Misc.isMC113OrNewer())) org.bukkit.Bukkit.getConsoleSender().sendMessage(((((org.bukkit.ChatColor.GOLD) + \"[BagOfGold]\") + (org.bukkit.ChatColor.RED)) + \" version +2.0.0 is only for Minecraft 1.13! You should downgrade to 1.x\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9229/buggy-version/src.one.lindegaard.BagOfGold.BagOfGold.java", "BodyUseAPI": [], "Fixed commit": "b302595865ce193832851e4c3481dc7dede936ea", "Url": "https://api.github.com/repos/Rocologo/BagOfGold", "Date": "2018-07-29T08:43:47Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getPatchVersion()) == (version.getPatchVersion())) { if ((this.getBetaVersion()) > (version.getBetaVersion())) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5752/buggy-version/src.main.java.com.godson.kekbot.Version.java", "BodyUseAPI": ["com.godson.kekbot.Version.getBetaVersion()"], "Fixed commit": "0760b5c4690c0ec8c56a3defcd9e030640d4d1c2", "Url": "https://api.github.com/repos/Godson777/KekBot", "Date": "2018-07-06T06:55:15Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event) != null) { shareIntent.putExtra(Intent.EXTRA_SUBJECT, event.getName()); shareIntent.putExtra(Intent.EXTRA_TEXT, (((event.getDescShort()) + \" \") + (event.getUrls().getWww()))); }else { shareIntent.putExtra(Intent.EXTRA_SUBJECT, fav.getTitle()); shareIntent.putExtra(Intent.EXTRA_TEXT, (((fav.getDescription()) + \" \") + (fav.getLink()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4829/buggy-version/app.src.main.java.pl.com.mantykora.kultrjmiasto.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "7f965a5bc1937cfae9cdda424e398033bdefe7b6", "Url": "https://api.github.com/repos/Mantykora/KulTrojmiasto", "Date": "2018-08-30T16:55:45Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this) instanceof me.mrCookieSlime.Slimefun.Objects.SlimefunItem.DamagableChargableItem) && (me.mrCookieSlime.Slimefun.Setup.SlimefunManager.isItemSimiliar(item, this.item, false))) return true; else if (((this) instanceof me.mrCookieSlime.Slimefun.Objects.SlimefunItem.ChargedItem) && (me.mrCookieSlime.Slimefun.Setup.SlimefunManager.isItemSimiliar(item, this.item, false))) return true; else if ((me.mrCookieSlime.Slimefun.Setup.SlimefunManager.isItemSimiliar(item, SlimefunItems.BROKEN_SPAWNER, false)) || (me.mrCookieSlime.Slimefun.Setup.SlimefunManager.isItemSimiliar(item, SlimefunItems.REPAIRED_SPAWNER, false))) return true; else return me.mrCookieSlime.Slimefun.Setup.SlimefunManager.isItemSimiliar(item, this.item, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7690/buggy-version/src.me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem.java", "BodyUseAPI": ["me.mrCookieSlime.Slimefun.Setup.SlimefunManager.isItemSimiliar(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack,boolean)", "me.mrCookieSlime.Slimefun.Setup.SlimefunManager.isItemSimiliar(org.bukkit.inventory.ItemStack,SlimefunItems.BROKEN_SPAWNER,boolean)", "me.mrCookieSlime.Slimefun.Setup.SlimefunManager.isItemSimiliar(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack,boolean)", "me.mrCookieSlime.Slimefun.Setup.SlimefunManager.isItemSimiliar(org.bukkit.inventory.ItemStack,SlimefunItems.REPAIRED_SPAWNER,boolean)"], "Fixed commit": "83e55c255df6e49d07040c77a8efe038e3652b62", "Url": "https://api.github.com/repos/huynhqtienvtag/Slimefun4", "Date": "2018-04-22T14:19:57Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.mrCookieSlime.Slimefun.Setup.SlimefunManager.isItemSimiliar(item, sfi.getItem(), true)) return sfi;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7690/buggy-version/src.me.mrCookieSlime.Slimefun.Objects.SlimefunItem.SlimefunItem.java", "BodyUseAPI": [], "Fixed commit": "83e55c255df6e49d07040c77a8efe038e3652b62", "Url": "https://api.github.com/repos/huynhqtienvtag/Slimefun4", "Date": "2018-04-22T14:19:57Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ds.child(\"name\").exists()) { set.add(ds.child(\"name\").getValue(java.lang.String.class)); }else { set.add(\"No current chats available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1577/buggy-version/app.src.main.java.com.example.regineyo.healthconnect.PatientChatListFragment.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(ds.child(\"name\").getValue(java.lang.String.class))", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "ds.child(\"name\").getValue(java.lang.Class)"], "Fixed commit": "440bf76b3cdd3389684424efc21d8fcae253892b", "Url": "https://api.github.com/repos/reginmarte/SES1B-HealthConnect", "Date": "2018-10-13T11:05:24Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ds.child(\"name\").exists()) { set.add(ds.child(\"name\").getValue(java.lang.String.class)); }else { set.add(\"No doctors currently available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1577/buggy-version/app.src.main.java.com.example.regineyo.healthconnect.ClinicListActivity.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(ds.child(\"name\").getValue(java.lang.String.class))", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "ds.child(\"name\").getValue(java.lang.Class)"], "Fixed commit": "440bf76b3cdd3389684424efc21d8fcae253892b", "Url": "https://api.github.com/repos/reginmarte/SES1B-HealthConnect", "Date": "2018-10-13T11:05:24Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getData2()) == (-1)) return 1.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9390/buggy-version/src.main.java.net.bdew.wurm.taxidermy.Hooks.java", "BodyUseAPI": [], "Fixed commit": "aa10f8ce9a7ad3f07f3b838cf72f876409bd381e", "Url": "https://api.github.com/repos/bdew-wurm/taxidermy", "Date": "2018-03-10T21:15:08Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.math.BigInteger, java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pvKanji.equals(\"\u5341\")) || (pvKanji.equals(\"\u767e\"))) { if (strVal.startsWith(\"\u4e00\")) { strVal = pvKanji; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5742/buggy-version/src.SuuKotoba.java", "BodyUseAPI": [], "Fixed commit": "9ca5de43437f1ce9224163c71ab92141fafd1b43", "Url": "https://api.github.com/repos/Jmorr10/SuuKotoba", "Date": "2018-01-06T23:18:07Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pathJson.equals(\"null\")) { pathJson = \"\\\"{\\\"path\\\": [], \\\"latency_ns\\\": 0, \\\"timestamp\\\": 0}\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4852/buggy-version/services.src.pce.src.main.java.org.openkilda.pce.api.FlowAdapter.java", "BodyUseAPI": [], "Fixed commit": "8c3b4ae304889e0acf712af569d02e16f461157d", "Url": "https://api.github.com/repos/telstra/open-kilda", "Date": "2018-04-02T06:28:11Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((headerBytes.length) - headerByteLength) > 0) { requestBody = com.hibegin.common.util.BytesUtil.subBytes(headerBytes, headerByteLength, ((headerBytes.length) - headerByteLength)); }else { requestBody = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9897/buggy-version/src.main.java.com.hibegin.http.server.impl.HttpRequestDecoderImpl.java", "BodyUseAPI": ["com.hibegin.common.util.BytesUtil.subBytes(byte[],int,int)"], "Fixed commit": "5449b3da03e626d15eea4f16baf984bf391a9307", "Url": "https://api.github.com/repos/94fzb/simplewebserver", "Date": "2018-05-20T04:43:40Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((segments.length) < 2) { return longName; }else { return segments[((segments.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2340/buggy-version/Robot2018.src.logging.Logger.java", "BodyUseAPI": [], "Fixed commit": "6e77f7e3e3f9867bf3c33f06203f7ddb406ede8d", "Url": "https://api.github.com/repos/Prospect-Robotics/Robot2018", "Date": "2018-03-13T04:47:49Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (closeableHttpResponse.containsHeader(\"Content-Type\")) { response.setContentType(closeableHttpResponse.getFirstHeader(\"Content-Type\").getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5032/buggy-version/extra.src.main.java.com.cv4j.netdiscovery.extra.downloader.httpclient.HttpClientDownloader.java", "BodyUseAPI": ["org.apache.http.client.methods.CloseableHttpResponse.getFirstHeader(java.lang.String)", "com.cv4j.netdiscovery.core.domain.Response.setContentType(closeableHttpResponse.getFirstHeader(\"Content-Type\").getValue())", "closeableHttpResponse.getFirstHeader(\"Content-Type\").getValue()"], "Fixed commit": "e440fd968e950f571b48b11647e8bcaca810e301", "Url": "https://api.github.com/repos/fengzhizi715/NetDiscovery", "Date": "2018-02-06T06:07:28Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ballerinalang.plugins.idea.psi.BallerinaIdentifier.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((parent.getParent()) instanceof org.ballerinalang.plugins.idea.psi.BallerinaCallableUnitSignature)) { return new org.ballerinalang.plugins.idea.psi.reference.BallerinaNameReferenceReference(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9058/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.BallerinaIdentifier.java", "BodyUseAPI": [], "Fixed commit": "65444119f1012571c3514c29ddbd9ee91cb54e0d", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-12T03:16:07Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(project.isOpen())) { return new org.eclipse.core.resources.IFile[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9329/buggy-version/tools.plugins.com.liferay.ide.project.ui.src.com.liferay.ide.project.ui.upgrade.animated.DescriptorsPage.java", "BodyUseAPI": [], "Fixed commit": "40aee2c2894c258681a3a97cb89e1d686a58bafa", "Url": "https://api.github.com/repos/jtydhr88/liferay-ide", "Date": "2018-08-20T09:08:07Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.ide.core.util.FileUtil.notExists(project)) { return new org.eclipse.core.resources.IFile[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9329/buggy-version/tools.plugins.com.liferay.ide.project.ui.src.com.liferay.ide.project.ui.upgrade.animated.DescriptorsPage.java", "BodyUseAPI": [], "Fixed commit": "40aee2c2894c258681a3a97cb89e1d686a58bafa", "Url": "https://api.github.com/repos/jtydhr88/liferay-ide", "Date": "2018-08-20T09:08:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(source.contains(\"\\r\"))) { source = source.replaceAll(\"\\n\", box.reader.SieReader.CRLN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1541/buggy-version/box-convert.src.main.java.box.reader.SieReader.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "bbc2d5125139ac7e08beb4a8dd1dc0048f3751b4", "Url": "https://api.github.com/repos/blinfo/Box", "Date": "2018-10-10T11:55:36Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (findViewById(R.id.party_name_edit_text))).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (partyName.equals(\"\")) { java.text.DateFormat dateFormat = new java.text.SimpleDateFormat(\"dd/MM/yyyy\"); java.util.Date date = new java.util.Date(); partyName = ((getResources().getString(R.string.default_party_name)) + \" \") + (dateFormat.format(date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4133/buggy-version/LeCompteurDeTartot.app.src.main.java.team23.lecompteurdetartot.PartyCreationActivity.java", "BodyUseAPI": [], "Fixed commit": "c26b5b953b7a51f7ba08e74ebbfc237f28dc02d8", "Url": "https://api.github.com/repos/Hsb511/Points-Counter-Tartot", "Date": "2018-10-15T11:42:51Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.atbash.mp.rest_client.Path.value()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(value.startsWith(\"/\"))) { serverURL.append('/'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1744/buggy-version/impl.src.main.java.be.atbash.mp.rest_client.RestClientInvoker.java", "BodyUseAPI": [], "Fixed commit": "acd6b5df3aff1c676f8781cfd4dfd6e927476315", "Url": "https://api.github.com/repos/atbashEE/atbash-rest-client", "Date": "2018-06-11T04:56:01Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jobxhub.server.job.RecordService.getSuccessToday()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.jobxhub.server.job.CommonUtils.notEmpty(successRecords)) { for (com.jobxhub.server.dto.Record record : successRecords) { com.jobxhub.server.support.JobXTools.putSuccessRecordIntoCache(record); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2252/buggy-version/jobx-server.src.main.java.com.jobxhub.server.job.JobXRegistry.java", "BodyUseAPI": [], "Fixed commit": "e72c0617c400ea215d34b334f3906b8a3bec7b5d", "Url": "https://api.github.com/repos/dspp129/JobX-99", "Date": "2018-06-14T13:02:23Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bot.penguee.Screen.getSearchInRegion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (searchInRegionBackup) searchRect(searchRectBackup[0], searchRectBackup[1]); else searchRect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7202/buggy-version/src.main.java.bot.penguee.Action.java", "BodyUseAPI": [], "Fixed commit": "ddcb686f93075c46d094f40ee21bf6984e25770e", "Url": "https://api.github.com/repos/1Ridav/PengueeBot", "Date": "2018-05-18T12:45:33Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gregtech.common.pipelike.fluidpipe.ItemBlockFluidPipe.getProperties(gregtech.common.pipelike.fluidpipe.FluidPipeType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pipeProperties.gasProof)) tooltip.add(net.minecraft.client.resources.I18n.format(\"gregtech.fluid_pipe.non_gas_proof\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6285/buggy-version/src.main.java.gregtech.common.pipelike.fluidpipe.ItemBlockFluidPipe.java", "BodyUseAPI": [], "Fixed commit": "641da3dd0f0de4d24c7303ac97e49e2202f2be7b", "Url": "https://api.github.com/repos/GregTechCE/GregTech", "Date": "2018-09-01T12:08:49Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.kajos.Manager.Manager.getViewer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((viewer.receivedFrameStamp) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1494/buggy-version/src.net.kajos.RenderCallback.java", "BodyUseAPI": [], "Fixed commit": "35f3309d0c6d8d54425e0eaa169c003df55934de", "Url": "https://api.github.com/repos/Kjos/OculusGoStreamer", "Date": "2018-05-14T13:44:28Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startTime == null) { startTime = java.time.LocalTime.MIN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9662/buggy-version/src.main.java.ru.javawebinar.topjava.web.meal.MealRestController.java", "BodyUseAPI": [], "Fixed commit": "f8aab305faf78055a5322a266f44023c5a8303d2", "Url": "https://api.github.com/repos/ArthursGitHub/topjava", "Date": "2018-03-12T16:17:18Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endTime == null) { startTime = java.time.LocalTime.MAX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9662/buggy-version/src.main.java.ru.javawebinar.topjava.web.meal.MealRestController.java", "BodyUseAPI": [], "Fixed commit": "f8aab305faf78055a5322a266f44023c5a8303d2", "Url": "https://api.github.com/repos/ArthursGitHub/topjava", "Date": "2018-03-12T16:17:18Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((PARAM_87) == 1) { }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3087/buggy-version/app.src.main.java.com.apreciasoft.mobile.RemisCentro.Activity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "fdfa4e8d45c0bb3e183522346e65697f916c39ed", "Url": "https://api.github.com/repos/ApreciasoftAPP/remisCentro", "Date": "2018-10-22T04:05:49Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((((Player.cardInHand.get(0).getRank()) == \"J\") || ((Player.cardInHand.get(0).getRank()) == \"Q\")) || ((Player.cardInHand.get(0).getRank()) == \"K\")) || ((Player.cardInHand.get(0).getRank()) == \"A\")) || ((Player.cardInHand.get(1).getRank()) == \"J\")) || ((Player.cardInHand.get(1).getRank()) == \"Q\")) || ((Player.cardInHand.get(1).getRank()) == \"K\")) || ((Player.cardInHand.get(1).getRank()) == \"A\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2553/buggy-version/src.main.java.org.leanpoker.player.Card.java", "BodyUseAPI": [], "Fixed commit": "adca10a9ae3f757f532c76f308fd1a6f0036fb51", "Url": "https://api.github.com/repos/timardaniel/poker-player-bass-snake", "Date": "2018-10-01T14:50:53Z"},
{"Line": "=>2138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((header.optJSONObject(\"style\")) != null) { java.lang.String backgroundColor = header.optJSONObject(\"style\").optString(\"background\"); if ((backgroundColor != null) && (!(backgroundColor.isEmpty()))) { toolbar.setBackgroundColor(com.jasonette.seed.Helper.JasonHelper.parse_color(backgroundColor)); } if (header.optJSONObject(\"style\").has(\"color\")) { toolbar.setTitleTextColor(com.jasonette.seed.Helper.JasonHelper.parse_color(header.optJSONObject(\"style\").getString(\"color\"))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6400/buggy-version/app.src.main.java.com.jasonette.seed.Core.JasonViewActivity.java", "BodyUseAPI": ["org.json.JSONObject.optJSONObject(java.lang.String)", "com.jasonette.seed.Lib.JasonToolbar.setTitleTextColor(com.jasonette.seed.Helper.JasonHelper.parse_color(header.optJSONObject(\"style\").getString(\"color\")))", "org.json.JSONObject.optJSONObject(java.lang.String)", "header.optJSONObject(\"style\").has(java.lang.String)", "header.optJSONObject(\"style\").getString(java.lang.String)", "header.optJSONObject(\"style\").optString(java.lang.String)", "com.jasonette.seed.Helper.JasonHelper.parse_color(header.optJSONObject(\"style\").getString(\"color\"))", "org.json.JSONObject.optJSONObject(java.lang.String)"], "Fixed commit": "c1a3d944813cfe63b12014e5b832109ab659aac5", "Url": "https://api.github.com/repos/swagata-acharyya/JASONETTE-Android", "Date": "2018-05-10T07:49:21Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainAppLocalDb.db.saleDao()) != null) { if ((MainAppLocalDb.db.saleDao().getAll()) != null) { sList = MainAppLocalDb.db.saleDao().getAll(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5035/buggy-version/app.src.main.java.com.example.eliavmenachi.myapplication.Models.SaleAsyncDao.java", "BodyUseAPI": [], "Fixed commit": "c3de26c36e85b4d268a7b10b02bb94ab1ae822cb", "Url": "https://api.github.com/repos/OrForte/Sale-App", "Date": "2018-07-17T19:04:16Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.equalsIgnoreCase(\"username already in use\")) this.et1.setError(\"Already taken\"); else if (message.equalsIgnoreCase(\"email already in use\")) this.et5.setError(\"Already taken\"); else android.widget.Toast.makeText(getActivity(), message, Toast.LENGTH_LONG).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1526/buggy-version/app.src.main.java.com.software_engineering.tap.Login.Fragment_NewUser_Request.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "android.widget.Toast.makeText(getActivity(), message, Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(getActivity(),java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "79195041e7749111d9415e8fd604d63a46b0bf41", "Url": "https://api.github.com/repos/Nicholas-Guerra/TAP", "Date": "2018-05-02T00:38:10Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemies.size()) == 0) { this.spawnLine(); }else { if ((enemies.get(this.lastLine).get(0).getPosY()) > ((this.alienStartY) + (this.alienSpacingY))) { spawnLine(); } while (!(isLineAlive(0))) { enemies.remove(0); (this.lastLine)--; } for (int line = 0; line <= (this.lastLine); line++) { for (int column = 0; column < (aliensPerLine); column++) { enemies.get(line).get(column).update(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2574/buggy-version/src.de.openhpi.capstone1.game.view.EnemySpawner.java", "BodyUseAPI": ["enemies.get(this.lastLine).get(0).getPosY()", "enemies.get(line).get(column).update()", "enemies.get(this.lastLine).get(int)", "java.util.ArrayList<java.util.ArrayList<de.openhpi.capstone1.game.view.AbstractEnemy>>.get(int)", "enemies.get(line).get(int)", "java.util.ArrayList<java.util.ArrayList<de.openhpi.capstone1.game.view.AbstractEnemy>>.remove(int)", "java.util.ArrayList<java.util.ArrayList<de.openhpi.capstone1.game.view.AbstractEnemy>>.get(int)"], "Fixed commit": "eea941e8854aa0aa9138edef2723174d80f34b36", "Url": "https://api.github.com/repos/HenriqueSchmitz/capstone1", "Date": "2018-09-24T00:37:26Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMe(playerId)) model.setOfferedDestCards(new java.util.ArrayList<common.DestCard>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7745/buggy-version/app.src.main.java.Services.GameNotificationService.java", "BodyUseAPI": [], "Fixed commit": "43df88239a0d833ceef2e8fe3beb406b6000e763", "Url": "https://api.github.com/repos/CS340Team10/TicketToRide", "Date": "2018-04-13T22:29:55Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sc != null) { try { sc.close(); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5023/buggy-version/bigexclient.src.com.zdd.bdc.ex.Theclient.java", "BodyUseAPI": ["java.nio.channels.SocketChannel.close()"], "Fixed commit": "2d0345e6a977f8c586df922beb373bbe09d33bcb", "Url": "https://api.github.com/repos/mchangeoutlook/zdd", "Date": "2018-08-13T03:34:26Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (username == null) { response.sendRedirect(\"/login\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2461/buggy-version/src.main.java.codeu.controller.ChatServlet.java", "BodyUseAPI": [], "Fixed commit": "0edc0de783adb8e8d9a7a8acbf750762502a2e4a", "Url": "https://api.github.com/repos/MatthewOakley/CodeUSummer2018Team35", "Date": "2018-06-13T17:48:16Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codeu.model.store.basic.UserStore.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { response.sendRedirect(\"/login\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2461/buggy-version/src.main.java.codeu.controller.ChatServlet.java", "BodyUseAPI": [], "Fixed commit": "0edc0de783adb8e8d9a7a8acbf750762502a2e4a", "Url": "https://api.github.com/repos/MatthewOakley/CodeUSummer2018Team35", "Date": "2018-06-13T17:48:16Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codeu.model.store.basic.ConversationStore.getConversationWithTitle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (conversation == null) { response.sendRedirect(\"/conversations\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2461/buggy-version/src.main.java.codeu.controller.ChatServlet.java", "BodyUseAPI": [], "Fixed commit": "0edc0de783adb8e8d9a7a8acbf750762502a2e4a", "Url": "https://api.github.com/repos/MatthewOakley/CodeUSummer2018Team35", "Date": "2018-06-13T17:48:16Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lshan.boilerfaves.Utils.SharedPrefsHelper.getFaveList(android.content.Context)", "android.support.v7.widget.RecyclerView.getAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((!(faves.isEmpty())) && (foodAdapter != null)) { foodAdapter.setFoods(faves); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6752/buggy-version/app.src.main.java.com.lshan.boilerfaves.Networking.MenuRetrievalTask.java", "BodyUseAPI": ["com.lshan.boilerfaves.Adapters.FoodAdapter.setFoods(java.util.List<com.lshan.boilerfaves.Models.FoodModel>)"], "Fixed commit": "839ee204886f2775dd0ca9711b2d1631ade82e87", "Url": "https://api.github.com/repos/Purdue-ACM-SIGApp/BoilerFaves", "Date": "2018-04-16T22:48:12Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (foodAdapter != null) { foodAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6752/buggy-version/app.src.main.java.com.lshan.boilerfaves.Networking.MenuRetrievalTask.java", "BodyUseAPI": ["com.lshan.boilerfaves.Adapters.FoodAdapter.notifyDataSetChanged()"], "Fixed commit": "839ee204886f2775dd0ca9711b2d1631ade82e87", "Url": "https://api.github.com/repos/Purdue-ACM-SIGApp/BoilerFaves", "Date": "2018-04-16T22:48:12Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.wdcloud.utils.ListUtils.isEmpty(lessonIds)) || (teacherId == null)) { return new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8368/buggy-version/src.main.java.com.wdcloud.global.base.dao.TeacherClassRecordDao.java", "BodyUseAPI": [], "Fixed commit": "76a4a7c0acbf3371ba239d852261e95280afba9c", "Url": "https://api.github.com/repos/andychen314/wd_global", "Date": "2018-09-12T11:32:34Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.Menu.findItem(R.id.action_log)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getIcon()) != null) { item.getIcon().setAlpha(128); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4369/buggy-version/auto-tethering-app.src.main.java.com.labs.dm.auto_tethering.activity.MainActivity.java", "BodyUseAPI": ["item.getIcon().setAlpha(int)", "android.view.MenuItem.getIcon()"], "Fixed commit": "c0c5c4780c83b2bf177ad2d5b4bf61592824abf4", "Url": "https://api.github.com/repos/danielmroczka/auto-tethering", "Date": "2018-09-17T20:50:27Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((jGnashFx.serverFile) != null) && ((jGnashFx.host) != null)) { commandLine.usage(java.lang.System.err, Help.Ansi.AUTO); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1594/buggy-version/jgnash-fx.src.main.java.jGnashFx.java", "BodyUseAPI": [], "Fixed commit": "05241d319e75f2aef8ee61a3f46ee09e137ca853", "Url": "https://api.github.com/repos/leeboardtools/jgnash", "Date": "2018-09-10T23:22:11Z"},
{"Line": "=>749", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eggs2.isChecked()) { eggsFree = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3747/buggy-version/app.src.main.java.com.example.mikhal.wiseatapp.setProfile.java", "BodyUseAPI": [], "Fixed commit": "011012f4e3e4b2e8ced0f35db43c255b0f2127f7", "Url": "https://api.github.com/repos/mikhalberns/wisEatNew", "Date": "2018-05-12T11:59:28Z"},
{"Line": "=>773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gluten2.isChecked()) { glutenFree = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3747/buggy-version/app.src.main.java.com.example.mikhal.wiseatapp.setProfile.java", "BodyUseAPI": [], "Fixed commit": "011012f4e3e4b2e8ced0f35db43c255b0f2127f7", "Url": "https://api.github.com/repos/mikhalberns/wisEatNew", "Date": "2018-05-12T11:59:28Z"},
{"Line": "=>761", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dairy2.isChecked()) { dairyFree = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3747/buggy-version/app.src.main.java.com.example.mikhal.wiseatapp.setProfile.java", "BodyUseAPI": [], "Fixed commit": "011012f4e3e4b2e8ced0f35db43c255b0f2127f7", "Url": "https://api.github.com/repos/mikhalberns/wisEatNew", "Date": "2018-05-12T11:59:28Z"},
{"Line": "=>906", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.mikhal.wiseatapp.setProfile.4.isInsertionEmpty(java.lang.Integer[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isEmpty) { boolean isInserted = myDb.insertData(beef, chicken, pork, fish, Insects, eggsFree, dairyFree, honey, glutenFree, lupin, sesame, algae, shellfish, soy, peanuts, sulphite, nuts, mustard, celery, corn); if (isInserted == true) { android.widget.Toast.makeText(this, \"Data Inserted\", Toast.LENGTH_LONG).show(); myDb.matchProfileToUser(); }else { android.widget.Toast.makeText(this, \"Data not Inserted\", Toast.LENGTH_LONG).show(); } }else { android.widget.Toast.makeText(this, \"Data not Inserted\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3747/buggy-version/app.src.main.java.com.example.mikhal.wiseatapp.setProfile.java", "BodyUseAPI": [], "Fixed commit": "011012f4e3e4b2e8ced0f35db43c255b0f2127f7", "Url": "https://api.github.com/repos/mikhalberns/wisEatNew", "Date": "2018-05-12T11:59:28Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etPassword.getText().toString()", "etPassword2.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(password1.trim().equals(password2.trim()))) { android.widget.Toast.makeText(this, \"The passwords do not match.\", Toast.LENGTH_LONG).show(); return false; }else if ((name.length()) > 12) { android.widget.Toast.makeText(this, \"Username must be 12 characters or shorter\", Toast.LENGTH_LONG).show(); return false; }else if (((!(name.matches(\"[A-Za-z0-9]+\"))) || (!(firstName.matches(\"[A-Za-z0-9]+\")))) || (!(lastName.matches(\"[A-Za-z0-9]+\")))) { android.widget.Toast.makeText(this, \"First name, last name, and username can only contain alphanumeric characters\", Toast.LENGTH_LONG).show(); return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8211/buggy-version/app.src.main.java.app.moov.moov.activity.RegistrationActivity.java", "BodyUseAPI": [], "Fixed commit": "17eaa43cdcfb6c278a5277c6dce26902577a0324", "Url": "https://api.github.com/repos/Sammy-F/moov-app", "Date": "2018-04-29T15:39:44Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.equals(\"/haolifa/code/image\", request.getRequestURI())) { try { java.lang.Thread.sleep(300); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/416/buggy-version/src.main.java.com.deepsoft.haolifa.authentication.ValidateCodeFilter.java", "BodyUseAPI": [], "Fixed commit": "1fb39cd3dec6eb6544e7109aeb3357e0ddb91198", "Url": "https://api.github.com/repos/deepsoft-haolifa/haolifa", "Date": "2018-10-24T15:06:02Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.invia.challenge.cashpool.service.dto.TripDto.getShare()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (share != null) travelerDto.setPaymentAmount(share.subtract(totalSpentAmount));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5108/buggy-version/src.main.java.com.invia.challenge.cashpool.service.dto.Converter.java", "BodyUseAPI": ["java.math.BigDecimal.subtract(java.math.BigDecimal)", "com.invia.challenge.cashpool.service.dto.TravelerDto.setPaymentAmount(java.math.BigDecimal)"], "Fixed commit": "da24315aca67520098a608883d184cb536d9a5b3", "Url": "https://api.github.com/repos/hamidreza-khayatzdeh/cashpool", "Date": "2018-01-31T13:17:26Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (threshold == 0) { return 0; }else { double toAttend = com.varunbarad.attendancetracker.util.Helper.calculateClassesToAttend(attended, skipped, threshold); double canSkip = com.varunbarad.attendancetracker.util.Helper.calculateSkippableClasses(attended, skipped, threshold); if (toAttend >= 0.0) { return ((int) (java.lang.Math.ceil(toAttend))); }else { return ((int) (-(java.lang.Math.floor(canSkip)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1514/buggy-version/app.src.main.java.com.varunbarad.attendancetracker.util.Helper.java", "BodyUseAPI": ["com.varunbarad.attendancetracker.util.Helper.calculateClassesToAttend(int,int,int)", "com.varunbarad.attendancetracker.util.Helper.calculateSkippableClasses(int,int,int)"], "Fixed commit": "6daf395bae59bde0616874b5885bfde6234c23f4", "Url": "https://api.github.com/repos/VarunBarad/Attendance-Tracker", "Date": "2018-02-04T10:19:15Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentTime > endTime) { return ((int) (endValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5509/buggy-version/src.animation.AAnimation.java", "BodyUseAPI": [], "Fixed commit": "54c3cbfba18c38d6beef69f173db6acc42e7bfec", "Url": "https://api.github.com/repos/CeliaSherry/Animator", "Date": "2018-08-03T18:01:23Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.bucketscancompile.encryptedsharedpreferences.utils.Logging.instance) == null) com.bucketscancompile.encryptedsharedpreferences.utils.Logging.instance = new com.bucketscancompile.encryptedsharedpreferences.utils.Logging(allowLogging);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5277/buggy-version/encryptedsharedpreferences.src.main.java.com.bucketscancompile.encryptedsharedpreferences.utils.Logging.java", "BodyUseAPI": [], "Fixed commit": "03142205873ac8e807f17e62a5796737ceb39c14", "Url": "https://api.github.com/repos/cie6868/EncryptedSharedPreferences", "Date": "2018-04-20T07:37:41Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7890/buggy-version/app.src.main.java.xyz.dcme.agg.base.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "9c09259843b46553165edcbe4d3089b390667497", "Url": "https://api.github.com/repos/caoshen/agg", "Date": "2018-05-01T05:28:25Z"},
{"Line": "=>1298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stash) == null) { return ((io.stallion.dataAccess.Stash<T>) (io.stallion.dataAccess.DataAccessRegistry.instance().get(getBucket()).getStash())); }else { return stash; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8762/buggy-version/src.main.java.io.stallion.dataAccess.filtering.FilterChain.java", "BodyUseAPI": [], "Fixed commit": "2f43da4294813e3c6ff499e1b68c692a88b3c9d2", "Url": "https://api.github.com/repos/StallionCMS/stallion-core", "Date": "2018-10-24T02:46:37Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectBodyElement(sspHandler)) != null) { labelHandler.addAll(selectBodyElement(sspHandler).select(org.tanaguru.rules.elementselector.builder.CssLikeSelectorBuilder.buildSelectorFromAttributeTypeAndValue(org.tanaguru.rules.rgaa32017.ID_ATTR, labledByValue))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4570/buggy-version/rules.rgaa3-2017.src.main.java.org.tanaguru.rules.rgaa32017.Rgaa32017Rule110103.java", "BodyUseAPI": ["org.jsoup.nodes.Element.select(org.tanaguru.rules.elementselector.builder.CssLikeSelectorBuilder.buildSelectorFromAttributeTypeAndValue(org.tanaguru.rules.rgaa32017.ID_ATTR, labledByValue))", "org.tanaguru.ruleimplementation.ElementHandler<org.jsoup.nodes.Element>.addAll(selectBodyElement(sspHandler).select(org.tanaguru.rules.elementselector.builder.CssLikeSelectorBuilder.buildSelectorFromAttributeTypeAndValue(org.tanaguru.rules.rgaa32017.ID_ATTR, labledByValue)))", "org.tanaguru.rules.rgaa32017.Rgaa32017Rule110103.selectBodyElement(org.tanaguru.processor.SSPHandler)"], "Fixed commit": "691ea227c599c79c25ee69c1f72e36c1789ebefe", "Url": "https://api.github.com/repos/Tanaguru/Tanaguru", "Date": "2018-01-08T15:06:23Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(em.contains(entity))) { entity = em.merge(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/682/buggy-version/src.main.java.org.se.lab.db.dao.DAOImplTemplate.java", "BodyUseAPI": ["javax.persistence.EntityManager.merge(E)"], "Fixed commit": "91fc9f927249c72119f3dd49f987ce41a7e0315e", "Url": "https://api.github.com/repos/chr-krenn/chr-krenn-fhj-ws2017-sd17-pse", "Date": "2018-02-20T21:22:38Z"},
{"Line": "=>1049", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myTrace) if ((bestTapPairs[i]) != null) myLogger.info(((((((((((i + \" \") + (bestTapPairs[i][3])) + \" \") + (bestTapPairs[i][2])) + \" \") + included) + \" \") + (java.lang.Math.exp(bestTapPairs[i][3]))) + \" \") + sumExpUtility));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1187/buggy-version/src.main.java.org.sandag.abm.accessibilities.BestTransitPathCalculator.java", "BodyUseAPI": [], "Fixed commit": "af73027cbf302d2a250f25315cb3f26021319640", "Url": "https://api.github.com/repos/SANDAG/ABM", "Date": "2018-05-25T17:41:47Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toxicity.equals(\":\")) toxicity = tokens[(depth + 4)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7732/buggy-version/parser.LeafLineNode.java", "BodyUseAPI": [], "Fixed commit": "f131f8556e6cab45d0c44a07f9f74d6c6369161e", "Url": "https://api.github.com/repos/tjense25/MotifFinderDecisionTree", "Date": "2018-01-23T03:42:15Z"},
{"Line": "=>1640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(savedNodes.contains(container.getNode()))) { saveNode(fileFact, processType, nList, cList, container.getNode(), factory); savedNodes.add(container.getNode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8632/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.process.Process.java", "BodyUseAPI": ["org.talend.designer.core.ui.editor.process.Process.saveNode(org.talend.designer.core.model.utils.emf.talendfile.TalendFileFactory,org.talend.designer.core.model.utils.emf.talendfile.ProcessType,org.eclipse.emf.common.util.EList,org.eclipse.emf.common.util.EList,container.getNode(),org.talend.designer.core.model.metadata.MetadataEmfFactory)", "java.util.List<org.talend.designer.core.ui.editor.nodes.Node>.add(container.getNode())", "org.talend.designer.core.ui.editor.nodecontainer.NodeContainer.getNode()", "org.talend.designer.core.ui.editor.nodecontainer.NodeContainer.getNode()"], "Fixed commit": "46daeba813a64aa20b496fe795ac6d5303ce13c9", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-04-19T02:12:22Z"},
{"Line": "=>1660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element instanceof org.talend.designer.core.ui.editor.nodecontainer.NodeContainer) { if (!(savedNodes.contains(((org.talend.designer.core.ui.editor.nodecontainer.NodeContainer) (element)).getNode()))) { saveNode(fileFact, processType, nList, cList, ((org.talend.designer.core.ui.editor.nodecontainer.NodeContainer) (element)).getNode(), factory); savedNodes.add(((org.talend.designer.core.ui.editor.nodecontainer.NodeContainer) (element)).getNode()); } }else if (element instanceof org.talend.designer.core.ui.editor.notes.Note) { saveNote(fileFact, processType, ((org.talend.designer.core.ui.editor.notes.Note) (element))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8632/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.process.Process.java", "BodyUseAPI": [], "Fixed commit": "46daeba813a64aa20b496fe795ac6d5303ce13c9", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-04-19T02:12:22Z"},
{"Line": "=>1645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(savedNodes.contains(container.getNode()))) { saveNode(fileFact, processType, nList, cList, container.getNode(), factory); savedNodes.add(container.getNode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8632/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.process.Process.java", "BodyUseAPI": ["org.talend.designer.core.ui.editor.nodecontainer.NodeContainer.getNode()", "org.talend.designer.core.ui.editor.process.Process.saveNode(org.talend.designer.core.model.utils.emf.talendfile.TalendFileFactory,org.talend.designer.core.model.utils.emf.talendfile.ProcessType,org.eclipse.emf.common.util.EList,org.eclipse.emf.common.util.EList,container.getNode(),org.talend.designer.core.model.metadata.MetadataEmfFactory)", "java.util.List<org.talend.designer.core.ui.editor.nodes.Node>.add(container.getNode())", "org.talend.designer.core.ui.editor.nodecontainer.NodeContainer.getNode()"], "Fixed commit": "46daeba813a64aa20b496fe795ac6d5303ce13c9", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-04-19T02:12:22Z"},
{"Line": "=>1656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(savedNodes.contains(((org.talend.designer.core.ui.editor.nodecontainer.NodeContainer) (element)).getNode()))) { saveNode(fileFact, processType, nList, cList, ((org.talend.designer.core.ui.editor.nodecontainer.NodeContainer) (element)).getNode(), factory); savedNodes.add(((org.talend.designer.core.ui.editor.nodecontainer.NodeContainer) (element)).getNode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8632/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.process.Process.java", "BodyUseAPI": ["org.talend.designer.core.ui.editor.process.Process.saveNode(org.talend.designer.core.model.utils.emf.talendfile.TalendFileFactory,org.talend.designer.core.model.utils.emf.talendfile.ProcessType,org.eclipse.emf.common.util.EList,org.eclipse.emf.common.util.EList,((org.talend.designer.core.ui.editor.nodecontainer.NodeContainer) (element)).getNode(),org.talend.designer.core.model.metadata.MetadataEmfFactory)", "org.talend.core.model.process.Element.getNode()", "org.talend.core.model.process.Element.getNode()", "java.util.List<org.talend.designer.core.ui.editor.nodes.Node>.add(((org.talend.designer.core.ui.editor.nodecontainer.NodeContainer) (element)).getNode())"], "Fixed commit": "46daeba813a64aa20b496fe795ac6d5303ce13c9", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-04-19T02:12:22Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!alreadyExists) { pharmacyApplication.PrescriptionItem prescriptionItem = new pharmacyApplication.PrescriptionItem(pharmaceuticalName, prescribedDailyDose, duration, containerSize, availableOverTheCounter, comments); prescriptionItems.add(prescriptionItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8272/buggy-version/src.pharmacyApplication.Prescription.java", "BodyUseAPI": [], "Fixed commit": "8ac99dbbdea16a73b4208075613a5898ecde9741", "Url": "https://api.github.com/repos/ssspe/pharmacy", "Date": "2018-10-29T16:31:11Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cn.shomes.tfblue.util.AuthUtils.formOrc(userInfo)) { if ((formDataDetail.getTicket_power()) == 1) { showInput(true); }else { cn.shomes.tfblue.util.ToastUtils.showShort(activity, \"\u6ca1\u6709\u6743\u9650\"); } }else { cn.shomes.tfblue.util.ToastUtils.showShort(activity, \"\u6ca1\u6709\u6743\u9650\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5141/buggy-version/app.src.main.java.cn.shomes.tfblue.FormActivity.java", "BodyUseAPI": [], "Fixed commit": "21a5cc07b8841f1ed01fba7e3c798970e9a4c64f", "Url": "https://api.github.com/repos/kayoxu/TFBlue", "Date": "2018-10-10T03:12:22Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((arr.length) % 2) == 1) { return meds[(((meds.length) / 2) - 1)]; }else { return ((meds[((meds.length) / 2)]) + (meds[(((meds.length) / 2) - 1)])) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9836/buggy-version/Sortamaniamain.src.Team8SortCompetition.java", "BodyUseAPI": [], "Fixed commit": "708d9b102b2aeeb927723002bae86184ef84601c", "Url": "https://api.github.com/repos/mrpresident2018/SortAManiaPeriod2", "Date": "2018-03-12T04:36:59Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contextSequence == null) { if (contextItem == null) { throw new org.exist.xquery.functions.fn.XPathException(this, ErrorCodes.XPDY0002, \"Context item is absent\"); } contextSequence = contextItem.toSequence(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9720/buggy-version/src.org.exist.xquery.functions.fn.FnHasChildren.java", "BodyUseAPI": [], "Fixed commit": "358fc2211ab7b045cbfe78f63ae9ff100f9915b8", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-02-23T13:28:19Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fullName.indexOf(\"ylyu1.wean\")) >= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2473/buggy-version/src.ylyu1.wean.Modify.java", "BodyUseAPI": [], "Fixed commit": "01410f24b6b99f861a28789ffbc21f3c0ae25c4f", "Url": "https://api.github.com/repos/squaresLab/genprog4java", "Date": "2018-09-21T20:38:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.revature.gambit.repositories.BucketRepository.findOne(bucket.getBucketId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bucketExists == null) { return null; }else { return bucketRepository.save(bucket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6939/buggy-version/src.main.java.com.revature.gambit.service.BucketServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "eae4a27527542193b039ccc651cf8adf3c513f75", "Url": "https://api.github.com/repos/revalution/gambit-question-bucket-service", "Date": "2018-05-27T18:24:40Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.alternate_credentials) == null) { mDelegate.noAlternateCredentials(); }else { phone.getVerification().setAlternateCredentials(response.alternate_credentials.data); mDelegate.phoneVerificationSucceeded(phone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/563/buggy-version/ui.src.main.java.me.ledge.link.sdk.ui.presenters.verification.PhoneVerificationPresenter.java", "BodyUseAPI": ["phone.getVerification().setAlternateCredentials(response.alternate_credentials.data)"], "Fixed commit": "d3ecfa20660888c0db57aef653538b7fcbb1a99e", "Url": "https://api.github.com/repos/ShiftFinancial/shift-sdk-android", "Date": "2017-01-31T10:16:01Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.commandArgs.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (user.startsWith(\"@\")) { user = user.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7231/buggy-version/twitch-chat-bot.src.main.java.com.etherblood.twitch.chat.bot.CommandHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "c011826e05f38c42ac444629783735c6e0a897e5", "Url": "https://api.github.com/repos/etherblood/twitch-chat-bot", "Date": "2018-07-13T21:19:24Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((po.getBirthday()) != null) { dateString = formatter.format(po.getBirthday()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8777/buggy-version/gmh-service.src.main.java.com.zes.squad.gmh.service.impl.CustomerServiceImpl.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(po.getBirthday())", "com.zes.squad.gmh.entity.po.CustomerPo.getBirthday()"], "Fixed commit": "f3db430a64ecf63cc0d7b013ab9534480b672235", "Url": "https://api.github.com/repos/ZES-BJTU/gmh", "Date": "2018-04-25T17:39:41Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other instanceof io.mrshannon.hexmek.Direction) { return direction.equals(((io.mrshannon.hexmek.Direction) (other)).direction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4167/buggy-version/src.main.java.io.mrshannon.hexmek.Direction.java", "BodyUseAPI": [], "Fixed commit": "55f3e83c16f278ca43bf78996e83f0b04490a4e7", "Url": "https://api.github.com/repos/mrshannon/hexmek", "Date": "2018-10-31T22:49:33Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configFile.isDirectory()) { return parse(dataConfigHomeDirectory, constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4978/buggy-version/main.java.io.github.azagniotov.stubby4j.yaml.YAMLParser.java", "BodyUseAPI": ["io.github.azagniotov.stubby4j.yaml.YAMLParser.constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile))", "io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(java.io.File)", "io.github.azagniotov.stubby4j.yaml.YAMLParser.parse(java.lang.String,constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile)))"], "Fixed commit": "0c13b2df2f9db62e43d9493275475fa4a0e25617", "Url": "https://api.github.com/repos/asarkar/stubby4j", "Date": "2018-01-15T22:42:31Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settings.getEnableSmsRecording()) taskExecutor.startSMSreading();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3156/buggy-version/app.src.main.java.com.kivsw.phonerecorder.ui.settings.SettingsPresenter.java", "BodyUseAPI": [], "Fixed commit": "7cbb2c1222bc7fd7145b8e7e9c9eb6ff34675102", "Url": "https://api.github.com/repos/IvanKovalchuk/PhoneRecorderN", "Date": "2018-07-09T08:42:39Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settings.getEnableSmsRecording()) onNewSms(); else taskExecutor.startFileSending();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3156/buggy-version/app.src.main.java.com.kivsw.phonerecorder.os.AppReceiver.java", "BodyUseAPI": [], "Fixed commit": "7cbb2c1222bc7fd7145b8e7e9c9eb6ff34675102", "Url": "https://api.github.com/repos/IvanKovalchuk/PhoneRecorderN", "Date": "2018-07-09T08:42:39Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(y)) <= 9.8) { double teta = java.lang.Math.acos((y / 9.8)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9035/buggy-version/app.src.main.java.codemo.iroads_mobile.Reorientation.NericellMechanism.java", "BodyUseAPI": ["java.lang.Math.acos(double)"], "Fixed commit": "7b9b842ece4fef440836db8928aa4a7587e6b912", "Url": "https://api.github.com/repos/amindahma/iRoads-Mobile", "Date": "2018-05-26T16:26:39Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.offset.getRecordOffset()) == 1) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2665/buggy-version/src.main.java.com.github.mmolimar.kafka.connect.fs.file.reader.FilenameFileReader.java", "BodyUseAPI": [], "Fixed commit": "8394f981c4923da7c026019196fba5c6e99f31d7", "Url": "https://api.github.com/repos/devacto/kafka-connect-fs", "Date": "2018-10-12T04:47:39Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.utexas.mpc.warble3.warble.thing.component.Thing.getDbid()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (thingDbid > 0) { java.util.List<edu.utexas.mpc.warble3.warble.thing.connection.Connection> connections = edu.utexas.mpc.warble3.database.AppDatabase.getDatabase().getConnectionsBySourceId(thingDbid); if (connections != null) { for (edu.utexas.mpc.warble3.warble.thing.connection.Connection connection : connections) { if (((connection.getSource()) != null) && ((connection.getSource().getDbid()) != 0)) { connection.setSource(thingLongSparseArray.get(connection.getSource().getDbid())); }else { connection.setSource(null); } if (((connection.getDestination()) != null) && ((connection.getDestination().getDbid()) != 0)) { connection.setDestination(thingLongSparseArray.get(connection.getDestination().getDbid())); }else { connection.setDestination(null); } } thing.setConnections(connections); } java.util.List<edu.utexas.mpc.warble3.warble.thing.credential.ThingAccessCredential> thingAccessCredentials = edu.utexas.mpc.warble3.database.AppDatabase.getDatabase().getThingAccessCredentialsByThingId(thing.getDbid()); if (thingAccessCredentials != null) { for (edu.utexas.mpc.warble3.warble.thing.credential.ThingAccessCredential thingAccessCredential : thingAccessCredentials) { if (((thingAccessCredential.getThing()) != null) && ((thingAccessCredential.getThing().getDbid()) != 0)) { thingAccessCredential.setThing(thingLongSparseArray.get(thingAccessCredential.getThing().getDbid())); }else { thingAccessCredential.setThing(null); } } thing.setThingAccessCredentials(thingAccessCredentials); } }else { if (edu.utexas.mpc.warble3.util.Logging.WARN) android.util.Log.w(edu.utexas.mpc.warble3.warble.thing.ThingManager.TAG, java.lang.String.format(\"Thing %s ThingDbid = %s\", thing.getFriendlyName(), thingDbid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7592/buggy-version/app.src.main.java.edu.utexas.mpc.warble3.warble.thing.ThingManager.java", "BodyUseAPI": ["edu.utexas.mpc.warble3.database.AppDatabase.getDatabase().getConnectionsBySourceId(long)", "java.lang.String.format(java.lang.String,thing.getFriendlyName(),long)", "android.util.Log.w(java.lang.String,java.lang.String)"], "Fixed commit": "6de9dc8f9a1cdae83bb632198c77f272877e5a2a", "Url": "https://api.github.com/repos/UT-MPC/Warble3", "Date": "2018-08-29T07:06:44Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getString(0).charAt(2)) == '9') { helloHelper.cost += ((java.lang.Double.valueOf(c.getString(1))) * 23) / 1000; }else helloHelper.cost += ((java.lang.Double.valueOf(c.getString(1))) * 12) / 1000;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8787/buggy-version/app.src.main.java.ioedufet.github.shahalihridoy.packageandfnfsuggestiongenerator.BanglalinkPackageAnalyser.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "java.lang.Double.valueOf(c.getString(1))", "android.database.Cursor.getString(int)", "java.lang.Double.valueOf(c.getString(1))"], "Fixed commit": "8f7e413a4afa5717701ba94f9512de93510adef5", "Url": "https://api.github.com/repos/shahalihridoy/PackageandFnFSuggestionGenerator", "Date": "2018-06-11T04:47:13Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (age.isBefore(mStartAge)) { com.intelliviz.retirementhelper.data.AgeData spouseAge = com.intelliviz.retirementhelper.util.SystemUtils.getSpouseAge(mBirthdate, mSpouseBirthdate, age); return new com.intelliviz.retirementhelper.data.SocialSecurityBenefitData(age, 0, 0, com.intelliviz.retirementhelper.util.RetirementConstants.BALANCE_STATE_EXHAUSTED, false, mIncludeSpouse, 0, spouseAge); }else { return getMonthlyBenefitForAge(age); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9303/buggy-version/retirementhelper.src.main.java.com.intelliviz.retirementhelper.data.SocialSecurityRules.java", "BodyUseAPI": ["com.intelliviz.retirementhelper.data.SocialSecurityRules.getMonthlyBenefitForAge(com.intelliviz.retirementhelper.data.AgeData)", "com.intelliviz.retirementhelper.util.SystemUtils.getSpouseAge(java.lang.String,java.lang.String,com.intelliviz.retirementhelper.data.AgeData)"], "Fixed commit": "0528ab0f2a9e5779961c8e24897c73642bff4102", "Url": "https://api.github.com/repos/emuhlestein/RetirementHelper", "Date": "2018-01-16T12:20:27Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (issue.equalsIgnoreCase(\"AddressRelated\")) { subject.append(\"Incomplete address. \"); }else if (issue.equalsIgnoreCase(\"CustomerNotFound\")) { subject.append(\"Recipient unavailable. \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5554/buggy-version/api.src.main.java.com.igp.admin.CustomerCareRelatedPanles.mappers.SendFollowUpMailPanelMapper.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "7ca353480991479ac9e57218f7e968871825d424", "Url": "https://api.github.com/repos/shashank-igp/newadminpanel", "Date": "2018-08-24T12:10:22Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response == null) { delay = 10000; }else { long after = java.lang.System.currentTimeMillis(); long before = timestamps.get(fullNode); delay = after - before; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/311/buggy-version/graphenej.src.main.java.cy.agorise.graphenej.network.NodeLatencyVerifier.java", "BodyUseAPI": [], "Fixed commit": "bb14110b09f79944d0fd622d761375b18269e577", "Url": "https://api.github.com/repos/Agorise/graphenej", "Date": "2018-09-27T16:33:18Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cont) { createTeams(); updateButtonsBasedOnStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4297/buggy-version/src.app.controllers.DrawPageController.java", "BodyUseAPI": [], "Fixed commit": "2d25931f98a279e9903789b030f4b09658a83053", "Url": "https://api.github.com/repos/aldrinarciga/tourney-manager", "Date": "2018-04-03T07:46:08Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GameFrame.playerHP) < 1) GameFrame.lose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9735/buggy-version/src.GameFrame.java", "BodyUseAPI": [], "Fixed commit": "5af2fba54dab7fafbef6c041578765c047ee2ab8", "Url": "https://api.github.com/repos/aaronlam1618/WordAdventureGame", "Date": "2018-01-26T23:52:51Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openDrawerWithIcon) mDrawerToggle.syncState();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2006/buggy-version/Webkiosk.src.main.java.com.blackMonster.webkiosk.ui.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "695796755d8d31326286b56ddc8965cb96b59e3b", "Url": "https://api.github.com/repos/anant14/Webkiosk", "Date": "2018-01-15T07:28:27Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastName) != null ? !(lastName.equals(userModel.lastName)) : (userModel.lastName) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8548/buggy-version/src.main.java.io.swagger.petstore.models.user.UserModel.java", "BodyUseAPI": [], "Fixed commit": "150f0be943164b2b82613c722b679106ed1b7d80", "Url": "https://api.github.com/repos/ifrOStik/tests_with_rest_assured", "Date": "2018-08-01T17:03:04Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) != (userModel.id)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8548/buggy-version/src.main.java.io.swagger.petstore.models.user.UserModel.java", "BodyUseAPI": [], "Fixed commit": "150f0be943164b2b82613c722b679106ed1b7d80", "Url": "https://api.github.com/repos/ifrOStik/tests_with_rest_assured", "Date": "2018-08-01T17:03:04Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((email) != null ? !(email.equals(userModel.email)) : (userModel.email) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8548/buggy-version/src.main.java.io.swagger.petstore.models.user.UserModel.java", "BodyUseAPI": [], "Fixed commit": "150f0be943164b2b82613c722b679106ed1b7d80", "Url": "https://api.github.com/repos/ifrOStik/tests_with_rest_assured", "Date": "2018-08-01T17:03:04Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username) != null ? !(username.equals(userModel.username)) : (userModel.username) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8548/buggy-version/src.main.java.io.swagger.petstore.models.user.UserModel.java", "BodyUseAPI": [], "Fixed commit": "150f0be943164b2b82613c722b679106ed1b7d80", "Url": "https://api.github.com/repos/ifrOStik/tests_with_rest_assured", "Date": "2018-08-01T17:03:04Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((phone) != null ? !(phone.equals(userModel.phone)) : (userModel.phone) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8548/buggy-version/src.main.java.io.swagger.petstore.models.user.UserModel.java", "BodyUseAPI": [], "Fixed commit": "150f0be943164b2b82613c722b679106ed1b7d80", "Url": "https://api.github.com/repos/ifrOStik/tests_with_rest_assured", "Date": "2018-08-01T17:03:04Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userStatus) != (userModel.userStatus)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8548/buggy-version/src.main.java.io.swagger.petstore.models.user.UserModel.java", "BodyUseAPI": [], "Fixed commit": "150f0be943164b2b82613c722b679106ed1b7d80", "Url": "https://api.github.com/repos/ifrOStik/tests_with_rest_assured", "Date": "2018-08-01T17:03:04Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((password) != null ? !(password.equals(userModel.password)) : (userModel.password) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8548/buggy-version/src.main.java.io.swagger.petstore.models.user.UserModel.java", "BodyUseAPI": [], "Fixed commit": "150f0be943164b2b82613c722b679106ed1b7d80", "Url": "https://api.github.com/repos/ifrOStik/tests_with_rest_assured", "Date": "2018-08-01T17:03:04Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5021/buggy-version/06-Binary-Search-Tree.10-Level-Traverse-in-BST.src.BST.java", "BodyUseAPI": [], "Fixed commit": "112305c06d4d21acb852af49981216fd9041f5ba", "Url": "https://api.github.com/repos/liuyubobobo/Play-with-Data-Structures", "Date": "2018-04-30T13:37:43Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reference.getNodeId().getParentId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mid == 0) && (parentId.equals(NodeId.DOCUMENT_NODE))) { mid = getLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/422/buggy-version/src.org.exist.dom.persistent.NewArrayNodeSet.java", "BodyUseAPI": [], "Fixed commit": "70b56dce0ac0d3fbb2f5382b36c45a8168c58b47", "Url": "https://api.github.com/repos/hungerburg/exist", "Date": "2018-08-11T04:29:17Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((group.getExternalId()) != null) { tv_externalId.setText(group.getExternalId()); }else { tv_externalId.setText(R.string.not_available); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5370/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.online.groupdetails.GroupDetailsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(group.getExternalId())", "com.mifos.objects.group.Group.getExternalId()"], "Fixed commit": "8ca3c8fd48af244b70a5895a5ac7e141f6d1159b", "Url": "https://api.github.com/repos/AkshGautam/android-client", "Date": "2018-02-15T13:27:19Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((centerWithAssociations.getStaffName()) != null) { tvStaffName.setText(centerWithAssociations.getStaffName()); }else { tvStaffName.setText(R.string.no_staff); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5370/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.online.centerdetails.CenterDetailsFragment.java", "BodyUseAPI": ["com.mifos.objects.group.CenterWithAssociations.getStaffName()", "android.widget.TextView.setText(centerWithAssociations.getStaffName())"], "Fixed commit": "8ca3c8fd48af244b70a5895a5ac7e141f6d1159b", "Url": "https://api.github.com/repos/AkshGautam/android-client", "Date": "2018-02-15T13:27:19Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (photo_objs.has(\"g1_hd\")) { org.json.JSONObject obj = photo_objs.getJSONObject(\"g1_hd\"); org.json.JSONObject sizeObj = obj.getJSONObject(\"size\"); if (sizeObj != null) { width = sizeObj.getInt(\"width\"); height = sizeObj.getInt(\"height\"); photoUrl = obj.getString(\"url\"); if (obj.has(\"format\")) { format = \".\" + (obj.getString(\"format\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6209/buggy-version/app.src.main.java.com.mypaceengine.downloadnarrative.Job_DownLoadPhoto.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "7944e1b9a863a7e9497bc56f15ad0440fc408aee", "Url": "https://api.github.com/repos/MypaceEngine/PhotoDL4NarrativeServ", "Date": "2018-04-15T09:46:00Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writer) != null) writer.println(getCSVStatusLine());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2501/buggy-version/src.org.usfirst.frc.team1089.robot.commands.LogPDPInfo.java", "BodyUseAPI": [], "Fixed commit": "6f4a85ff4a91fc3c88e910f61b8e08a1c52ced50", "Url": "https://api.github.com/repos/Mercury1089/2018-robot-code", "Date": "2018-01-11T01:39:57Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.longdo.android.api.ImagesView.findChildViewUnder(e.getX(),e.getY())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (v == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/303/buggy-version/api.src.main.java.com.longdo.android.api.ImagesView.java", "BodyUseAPI": [], "Fixed commit": "b1be03d284ed54d16aef763d25c9ddb3b5e6bf1c", "Url": "https://api.github.com/repos/perthcpe23/android-images-view", "Date": "2018-07-05T12:20:52Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.unsplit) { this.lastUpdated = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6091/buggy-version/com.creditease.uav.collect.src.main.java.com.creditease.uav.collect.client.copylogagent.TailFile.java", "BodyUseAPI": [], "Fixed commit": "5a41eb538cafa007787f91982e8f4902e00e4f8f", "Url": "https://api.github.com/repos/wanglinlin8/uavstack", "Date": "2018-01-12T04:20:53Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tractor.attachedTrailer) != null) tractor.attachedTrailer.location = new sunshine.sim.Point(dest.x, dest.y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3829/buggy-version/sunshine.sim.Simulator.java", "BodyUseAPI": [], "Fixed commit": "7b4c38747320c559b6a768e45cfcacb9c387511d", "Url": "https://api.github.com/repos/Jumhyn/coms4444-sunshine", "Date": "2018-10-03T16:20:39Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tractor.attachedTrailer) != null) return tractor.attachedTrailer;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3829/buggy-version/sunshine.sim.Simulator.java", "BodyUseAPI": [], "Fixed commit": "7b4c38747320c559b6a768e45cfcacb9c387511d", "Url": "https://api.github.com/repos/Jumhyn/coms4444-sunshine", "Date": "2018-10-03T16:20:39Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.unisa.bd2.myfeeding.AllergensController.allergens) != null) { for (java.lang.String a : com.unisa.bd2.myfeeding.AllergensController.allergens) { if (a == \"Lattosio\") { for (java.lang.String item : com.unisa.bd2.myfeeding.AllergensController.lattosio) { if (allergensOfProduct.contains(item)) { com.unisa.bd2.myfeeding.AllergensController.problemFound.add(\"Lattosio\"); } } }else if (a == \"Soia\") { for (java.lang.String item : com.unisa.bd2.myfeeding.AllergensController.soia) { if (allergensOfProduct.contains(item)) { com.unisa.bd2.myfeeding.AllergensController.problemFound.add(\"Soia\"); } } }else if (a == \"Glutine\") { for (java.lang.String item : com.unisa.bd2.myfeeding.AllergensController.glutine) { if (allergensOfProduct.contains(item)) { com.unisa.bd2.myfeeding.AllergensController.problemFound.add(\"Glutine\"); } } }else if (a == \"Arachidi\") { for (java.lang.String item : com.unisa.bd2.myfeeding.AllergensController.arachidi) { if (allergensOfProduct.contains(item)) { com.unisa.bd2.myfeeding.AllergensController.problemFound.add(\"Arachidi\"); } } }else { } } if ((com.unisa.bd2.myfeeding.AllergensController.problemFound.isEmpty()) == false) { com.unisa.bd2.myfeeding.AllergensController.launchAlert(com.unisa.bd2.myfeeding.AllergensController.problemFound); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/781/buggy-version/app.src.main.java.com.unisa.bd2.myfeeding.AllergensController.java", "BodyUseAPI": [], "Fixed commit": "5869692c9270b93183449b263d8764aa5b41e5e2", "Url": "https://api.github.com/repos/oromis95/MyFeeding", "Date": "2018-06-16T16:10:58Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (remote_patch < (utilities.Version.patch.intValue())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2673/buggy-version/src.main.java.utilities.Version.java", "BodyUseAPI": [], "Fixed commit": "211ce80e32b6ba384f47746197f29de332fbb180", "Url": "https://api.github.com/repos/drivenbyentropy/aptasuite", "Date": "2018-03-16T23:02:54Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (remote_mayor < (utilities.Version.mayor.intValue())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2673/buggy-version/src.main.java.utilities.Version.java", "BodyUseAPI": [], "Fixed commit": "211ce80e32b6ba384f47746197f29de332fbb180", "Url": "https://api.github.com/repos/drivenbyentropy/aptasuite", "Date": "2018-03-16T23:02:54Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (remote_minor > (utilities.Version.minor.intValue())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2673/buggy-version/src.main.java.utilities.Version.java", "BodyUseAPI": [], "Fixed commit": "211ce80e32b6ba384f47746197f29de332fbb180", "Url": "https://api.github.com/repos/drivenbyentropy/aptasuite", "Date": "2018-03-16T23:02:54Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (remote_patch > (utilities.Version.patch.intValue())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2673/buggy-version/src.main.java.utilities.Version.java", "BodyUseAPI": [], "Fixed commit": "211ce80e32b6ba384f47746197f29de332fbb180", "Url": "https://api.github.com/repos/drivenbyentropy/aptasuite", "Date": "2018-03-16T23:02:54Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (remote_mayor > (utilities.Version.mayor.intValue())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2673/buggy-version/src.main.java.utilities.Version.java", "BodyUseAPI": [], "Fixed commit": "211ce80e32b6ba384f47746197f29de332fbb180", "Url": "https://api.github.com/repos/drivenbyentropy/aptasuite", "Date": "2018-03-16T23:02:54Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLoadFinished)) { isLoadFinished = true; mCallbacks.onAlbumLoad(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2531/buggy-version/matisse.src.main.java.com.zhihu.matisse.internal.model.AlbumCollection.java", "BodyUseAPI": [], "Fixed commit": "1ac9dcf1a504baaa693f670bf1d0d38b141c317a", "Url": "https://api.github.com/repos/fuhaodev/Matisse", "Date": "2018-07-10T11:47:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/779/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "5e1abc929f4500bdb9ed0afed9c5ffc4ad5a3fc1", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getCircularList().get(i)) != 0) model.updateBoard(pits[i].getPitNum());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9355/buggy-version/src.BoardPanel.java", "BodyUseAPI": ["Board.updateBoard(pits[i].getPitNum())", "pits[i].getPitNum()"], "Fixed commit": "66a1c2e4c02b4c2f57c39a6abaaf648474e7076a", "Url": "https://api.github.com/repos/huntlai123/MancalaGUI", "Date": "2018-05-04T18:55:35Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) > 0) { for (int x = 0; x < (data.length); x++) { b = (b + (data[x])) + \",\"; } return (a + (b.substring(0, ((b.length()) - 1)))) + \"]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4251/buggy-version/SuperArray.java", "BodyUseAPI": [], "Fixed commit": "9666b8abb58df3aa06e6a10b042db2fc9c062178", "Url": "https://api.github.com/repos/jcmmii/MKS21X-SuperArray", "Date": "2018-10-30T02:02:18Z"},
{"Line": "=>1054", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lowers_trace.get(0).isEmpty())) { java.util.List<kodkod.instance.Instance> aux = new java.util.LinkedList<kodkod.instance.Instance>(); aux.add(i); i = new kodkod.instance.TemporalInstance(aux, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3050/buggy-version/src.main.java.kodkod.instance.PardinusBounds.java", "BodyUseAPI": [], "Fixed commit": "d5366d0fff6a7ca1d1a6d8738b5f6dcdc426864b", "Url": "https://api.github.com/repos/haslab/Pardinus", "Date": "2018-05-15T16:13:00Z"},
{"Line": "=>1079", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(uppers_trace.get(0).isEmpty())) { java.util.List<kodkod.instance.Instance> aux = new java.util.LinkedList<kodkod.instance.Instance>(); aux.add(i); i = new kodkod.instance.TemporalInstance(aux, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3050/buggy-version/src.main.java.kodkod.instance.PardinusBounds.java", "BodyUseAPI": [], "Fixed commit": "d5366d0fff6a7ca1d1a6d8738b5f6dcdc426864b", "Url": "https://api.github.com/repos/haslab/Pardinus", "Date": "2018-05-15T16:13:00Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (title.isEmpty()) { if ((name.getElementsByAttribute(\"alt\").first()) != null) { title = name.getElementsByAttribute(\"alt\").first().attr(\"alt\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/803/buggy-version/src.products.GenerateXML.java", "BodyUseAPI": [], "Fixed commit": "87ac194dd95779b4e6d39d812c1b148eaeba5655", "Url": "https://api.github.com/repos/PSkoczylas/XML-Ceneo-Products", "Date": "2018-07-01T21:15:07Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((title != null) && (!(title.isEmpty()))) { currentTitle = title; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/803/buggy-version/src.products.GenerateXML.java", "BodyUseAPI": [], "Fixed commit": "87ac194dd95779b4e6d39d812c1b148eaeba5655", "Url": "https://api.github.com/repos/PSkoczylas/XML-Ceneo-Products", "Date": "2018-07-01T21:15:07Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.olat.modules.ceditor.ui.component.PageFragmentsComponent.getFragments()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragments != null) { for (org.olat.modules.ceditor.ui.model.PageFragment fragment : fragments) { if ((fragment.getPageRunElement()) instanceof org.olat.modules.forms.ui.model.EvaluationFormExecutionElement) { org.olat.modules.forms.ui.model.EvaluationFormExecutionElement execEl = ((org.olat.modules.forms.ui.model.EvaluationFormExecutionElement) (fragment.getPageRunElement())); if (execEl.hasFormItem()) { rootFormAvailable(execEl.getFormItem()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9501/buggy-version/src.main.java.org.olat.modules.ceditor.ui.component.PageFragmentsElementImpl.java", "BodyUseAPI": [], "Fixed commit": "0e0f0ceb551616054c5d83e40a23484f935d5145", "Url": "https://api.github.com/repos/OpenOLAT/OpenOLAT", "Date": "2018-09-18T14:27:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (allEpisodesFragment != null) { allEpisodesFragment.onEpisodeClick(0); viewMvc.hidePlayActionButton(); }else { throw new java.lang.UnsupportedOperationException((((gr.kalymnos.sk3m3l10.greekpodcasts.mvc_controllers.activities.PodcastActivity.TAG) + \": that allEpisodesFragment should be of type \") + (gr.kalymnos.sk3m3l10.greekpodcasts.mvc_controllers.fragments.AllEpisodesFragment.class.getSimpleName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8367/buggy-version/app.src.main.java.gr.kalymnos.sk3m3l10.greekpodcasts.mvc_controllers.activities.PodcastActivity.java", "BodyUseAPI": ["gr.kalymnos.sk3m3l10.greekpodcasts.mvc_controllers.fragments.AllEpisodesFragment.onEpisodeClick(int)"], "Fixed commit": "34f22864d653f252416e66ae6c21b5f6bfd59aa1", "Url": "https://api.github.com/repos/tomasmichael995/GreekPodcasts_2", "Date": "2018-08-01T14:52:16Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.Slot.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(this.mergeItemStack(item, ((this.inventorySlots.size()) - 9), this.inventorySlots.size(), false))) { return net.minecraft.item.ItemStack.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1792/buggy-version/src.main.java.com.mrcrayfish.furniture.gui.containers.ContainerWashingMachine.java", "BodyUseAPI": [], "Fixed commit": "33f06f80da14d7ee1c24ed9f0e182982d8a4f31b", "Url": "https://api.github.com/repos/Ocelot5836/MrCrayfishFurnitureMod", "Date": "2018-04-01T18:02:30Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slotNum < 5) { if (!(this.mergeItemStack(item, 5, this.inventorySlots.size(), false))) { return net.minecraft.item.ItemStack.EMPTY; } }else if (slotNum > 4) { com.mrcrayfish.furniture.api.RecipeData data = com.mrcrayfish.furniture.api.RecipeAPI.getWashingMachineRecipeFromInput(item); if ((data != null) && ((((((itemCopy.getItem()) == (net.minecraft.item.Item.getItemFromBlock(Blocks.PUMPKIN))) || ((itemCopy.getItem()) == (net.minecraft.init.Items.SKULL))) || ((itemCopy.getItem().getEquipmentSlot(itemCopy)) != null)) || (((itemCopy.getItem()) instanceof net.minecraft.item.ItemArmor) && ((((net.minecraft.item.ItemArmor) (itemCopy.getItem())).armorType) != null))) || ((net.minecraft.entity.EntityLiving.getSlotForItemStack(itemCopy)) != (net.minecraft.inventory.EntityEquipmentSlot.HEAD)))) { net.minecraft.item.ItemStack input = data.getInput(); if (!(this.mergeItemStack(item, 0, 4, true))) { return net.minecraft.item.ItemStack.EMPTY; }else if ((slotNum > 4) && (slotNum < ((this.inventorySlots.size()) - 9))) { if (!(this.mergeItemStack(item, ((this.inventorySlots.size()) - 9), this.inventorySlots.size(), false))) { return net.minecraft.item.ItemStack.EMPTY; } }else if ((slotNum >= ((this.inventorySlots.size()) - 9)) && (slotNum < (this.inventorySlots.size()))) { if (!(this.mergeItemStack(item, 5, ((this.inventorySlots.size()) - 9), false))) { return net.minecraft.item.ItemStack.EMPTY; } } }else if (((item.getItem()) == (com.mrcrayfish.furniture.init.FurnitureItems.itemSoapyWater)) | ((item.getItem()) == (com.mrcrayfish.furniture.init.FurnitureItems.itemSuperSoapyWater))) { if (!(this.mergeItemStack(item, 4, 5, false))) { return net.minecraft.item.ItemStack.EMPTY; } }else if ((slotNum > 4) && (slotNum < ((this.inventorySlots.size()) - 9))) { if (!(this.mergeItemStack(item, ((this.inventorySlots.size()) - 9), this.inventorySlots.size(), false))) { return net.minecraft.item.ItemStack.EMPTY; } }else if ((slotNum >= ((this.inventorySlots.size()) - 9)) && (slotNum < (this.inventorySlots.size()))) { if (!(this.mergeItemStack(item, 5, ((this.inventorySlots.size()) - 9), false))) { return net.minecraft.item.ItemStack.EMPTY; } } }else if (!(this.mergeItemStack(item, 0, 9, false))) { return net.minecraft.item.ItemStack.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1792/buggy-version/src.main.java.com.mrcrayfish.furniture.gui.containers.ContainerWashingMachine.java", "BodyUseAPI": [], "Fixed commit": "33f06f80da14d7ee1c24ed9f0e182982d8a4f31b", "Url": "https://api.github.com/repos/Ocelot5836/MrCrayfishFurnitureMod", "Date": "2018-04-01T18:02:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(seedu.address.commons.util.FileUtil.isFileExists(file))) { throw new java.io.FileNotFoundException((\"File not found : \" + (file.toAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8766/buggy-version/src.main.java.seedu.address.commons.util.XmlUtil.java", "BodyUseAPI": ["java.nio.file.Path.toAbsolutePath()"], "Fixed commit": "c4c499ecc84a95a09c87226adc299b239b4f8e29", "Url": "https://api.github.com/repos/tristyxxnana/main", "Date": "2018-10-03T15:03:55Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.nio.file.Files.exists(file))) { throw new java.io.FileNotFoundException((\"File not found : \" + (file.toAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8766/buggy-version/src.main.java.seedu.address.commons.util.XmlUtil.java", "BodyUseAPI": ["java.nio.file.Path.toAbsolutePath()"], "Fixed commit": "c4c499ecc84a95a09c87226adc299b239b4f8e29", "Url": "https://api.github.com/repos/tristyxxnana/main", "Date": "2018-10-03T15:03:55Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["world.World.getWorld().getHeightmap(getParameter(\"heightmap\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (map == null) { java.lang.System.err.println(((\"No map by name '\" + (getParameter(\"heightmap\"))) + \"'\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/159/buggy-version/world.terrain.generators.NoiseMapGenerator.java", "BodyUseAPI": [], "Fixed commit": "a86d14efa73541555ca32be785586d22aed5fc54", "Url": "https://api.github.com/repos/jsbrn/Advanced-Terrain-Generation-Tool", "Date": "2018-04-06T16:36:21Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(vertexToIntervalMap.containsKey(neighbor))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2146/buggy-version/jgrapht-core.src.main.java.org.jgrapht.alg.interval.KorteMoehringIntervalGraphRecognizer.java", "BodyUseAPI": [], "Fixed commit": "6ca0225556e14120b29911d8645647a09d4b5d6c", "Url": "https://api.github.com/repos/tj-developers/jgrapht", "Date": "2018-08-04T07:37:34Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(vertexToIntervalMap.containsKey(neighbor))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2146/buggy-version/jgrapht-core.src.main.java.org.jgrapht.alg.interval.KorteMoehringIntervalGraphRecognizer.java", "BodyUseAPI": [], "Fixed commit": "6ca0225556e14120b29911d8645647a09d4b5d6c", "Url": "https://api.github.com/repos/tj-developers/jgrapht", "Date": "2018-08-04T07:37:34Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.google.javascript.gents.CollectModuleMetadata.FileModule>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (module != null) { module.importedNamespacesToSymbols.put(oldTypeName, newTypeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5472/buggy-version/src.main.java.com.google.javascript.gents.TypeConversionPass.java", "BodyUseAPI": ["module.importedNamespacesToSymbols.put(java.lang.String,java.lang.String)"], "Fixed commit": "4c6226bb95ef0d148a28d4560b62c6ae348433e7", "Url": "https://api.github.com/repos/bowenni/clutz", "Date": "2018-08-23T22:47:16Z"},
{"Line": "=>861", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userSeeks) != null) updateKeys = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9506/buggy-version/server.src.main.java.lsfusion.server.form.instance.GroupObjectInstance.java", "BodyUseAPI": [], "Fixed commit": "0ddd5644f539d1eb22329565f19c2ffbdd7c17b6", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-06-14T09:18:26Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mainview.getTimeCombo().getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((uhrzeitString.length()) == 4) { uhrzeitString = \"0\" + uhrzeitString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7766/buggy-version/src.fachlogik.Controller.java", "BodyUseAPI": [], "Fixed commit": "f1c2f8a15821677b662d1c0e5ca4a677eb7e85bd", "Url": "https://api.github.com/repos/BatPat/SWT-B---Gruppe13", "Date": "2018-05-19T14:03:05Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (increment == 0) { increment = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4498/buggy-version/src.main.java.ru.wkn.model.distributors.discrete.BinomialDistributor.java", "BodyUseAPI": [], "Fixed commit": "0955f921127ce04c7965b7c029a7276583c4779f", "Url": "https://api.github.com/repos/Adraas/Distributions", "Date": "2018-10-24T19:32:51Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!edit) { ASSESSMENTS.add(newAssessment); addAssessmentRow(); }else if (edit) { int rowIndex = mLinearLayout.indexOfChild(row); ASSESSMENTS.set(rowIndex, newAssessment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9688/buggy-version/app.src.main.java.us.philipli.gradebook.activities.AddCourseActivity.java", "BodyUseAPI": [], "Fixed commit": "601fa9858ada8ea633f69b0e3eaa266081bf7187", "Url": "https://api.github.com/repos/pcjl/Gradebook", "Date": "2016-09-06T01:00:57Z"},
{"Line": "=>955", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.cadrian.macchiato.ruleset.parser.Parser.readRawIdentifier()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { throw new net.cadrian.macchiato.ruleset.parser.ParserException(error(\"Expected identifier\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3805/buggy-version/Macchiato.src.java.net.cadrian.macchiato.ruleset.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "67f8b7857decc89d1311f4d950540f1277ab1f76", "Url": "https://api.github.com/repos/cadrian/macchiato", "Date": "2018-05-17T18:31:32Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.model.process.ProcessUtils.isTestContainer(org.talend.core.model.process.IProcess)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isTestcaseProcess) { org.talend.core.runtime.process.LastGenerationInfo.getInstance().getHighPriorityModuleNeeded().addAll(nodeNeededModules); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2220/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.utils.JavaProcessUtil.java", "BodyUseAPI": [], "Fixed commit": "15e1556eb1324241ca851b9b25021803ce9e69b1", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-07-02T02:24:55Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((User.conn) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6762/buggy-version/src.User.java", "BodyUseAPI": [], "Fixed commit": "598123c16b044bb0061c736ad5ab483f6dea023f", "Url": "https://api.github.com/repos/kiddj/DevTools", "Date": "2018-06-10T07:52:31Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8581/buggy-version/src.main.java.com.sebas.core.Piece.java", "BodyUseAPI": [], "Fixed commit": "cc634662234b97b2a86b2fef7154c38425fbe43d", "Url": "https://api.github.com/repos/sebastianrevuelta/Chess", "Date": "2018-10-17T09:42:40Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getDisabled(0)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9025/buggy-version/src.main.java.com.mjr.planetprogression.tileEntities.TileEntityTelescope.java", "BodyUseAPI": [], "Fixed commit": "95f5e4fe9c5b12c58d1ccbb5ceafc6b2beb73008", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-06-15T23:34:43Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.gameState) == (ie.dit.main.Game.STATE.Menu)) { if (mouseOver(mx, my, 210, 150, 280, 64)) { game.gameState = ie.dit.main.Game.STATE.Game; handler.addObject(new ie.dit.main.Player((((Game.WIDTH) / 2) - 32), (((Game.HEIGHT) / 2) - 32), ID.Player, handler)); handler.addObject(new ie.dit.main.BasicEnemy(r.nextInt(Game.WIDTH), r.nextInt(Game.HEIGHT), ID.BasicEnemy, handler)); } if (mouseOver(mx, my, 210, 250, 280, 64)) { game.gameState = ie.dit.main.Game.STATE.Help; } if (mouseOver(mx, my, 210, 350, 280, 64)) { java.lang.System.exit(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/643/buggy-version/src.ie.dit.main.Menu.java", "BodyUseAPI": [], "Fixed commit": "4f6ff7ac671be91235fe80284cc5d2f6413c3181", "Url": "https://api.github.com/repos/AdamNoone/Assignment_2", "Date": "2018-04-24T16:24:45Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bindingResult.hasErrors()) { java.lang.String username = securityService.findLoggedInUsername(); request.setAttribute(\"username\", username); request.setAttribute(\"task\", task); return \"manageTask\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8601/buggy-version/src.main.java.com.krivitskiy.controllers.TaskController.java", "BodyUseAPI": [], "Fixed commit": "8139e354757d9b1b563d5636aa93698a455b751a", "Url": "https://api.github.com/repos/KryvytskyiDenis/TaskManager", "Date": "2018-02-09T19:38:51Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((klassenName == \"\") || (klassenName == null)) || ((java.lang.Class.forName(klassenName)) == null)) { java.lang.System.out.print(\"Der Name der Klasse ist nicht korrekt!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/825/buggy-version/findmefinder.src.main.java.FindMeFinder.java", "BodyUseAPI": [], "Fixed commit": "48d4c6b01b36c69fa2e5a62f5b8d838c8110b6b3", "Url": "https://api.github.com/repos/Denzell92/WADWiSe18", "Date": "2018-10-23T13:50:54Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etDescription.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((file) != null) && (!(description.equals(\"\")))) { final com.parse.ParseFile parseFile = new com.parse.ParseFile(file); parseFile.saveInBackground(new com.parse.SaveCallback() { @java.lang.Override public void done(com.parse.ParseException e) { createPost(description, parseFile, user); } }); }else { android.widget.Toast.makeText(getContext(), \"Please take a photo and enter a description\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1154/buggy-version/app.src.main.java.com.example.bertogonz3000.parstegram.Fragments.CaptureFragment.java", "BodyUseAPI": ["com.parse.ParseFile.saveInBackground(com.parse.SaveCallback)", "1.createPost(java.lang.String,com.parse.ParseFile,com.parse.ParseUser)"], "Fixed commit": "7e7ce452cfb2f968e25dff9daf937dfc064c87aa", "Url": "https://api.github.com/repos/Bertogonz3000/Parsetegram", "Date": "2018-07-13T00:54:20Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.AdapterView<?>.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (firstElem != null) firstElem.setTextColor(adapterView.getResources().getColor(R.color.colorText));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9713/buggy-version/app.src.main.java.houselights.moffa.com.houselightsapp.SpinnerListener.java", "BodyUseAPI": ["android.widget.TextView.setTextColor(adapterView.getResources().getColor(R.color.colorText))"], "Fixed commit": "c39abb35677dd14632df2b20cb7a2308b354c7c1", "Url": "https://api.github.com/repos/moffa13/HouseLightsApp", "Date": "2018-07-02T17:54:17Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DataHook.navbarOpt) { com.egguncle.xposednavigationbar.hook.hookutil.NavBarHook.setNavbarHeight(context, DataHook.navbarHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6280/buggy-version/app.src.main.java.com.egguncle.xposednavigationbar.hook.hookutil.NavBarHook.java", "BodyUseAPI": [], "Fixed commit": "1d056b934953f05dc1e65adc12597f8e10963705", "Url": "https://api.github.com/repos/EggUncle/XposedNavigationBar", "Date": "2018-02-03T08:04:57Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statuses.get(key).getResultant()) <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6886/buggy-version/core.src.com.panic.tdt4240.util.StatusHandler.java", "BodyUseAPI": [], "Fixed commit": "1b01b5c45b19aa63c6b3969b93c041e0dfdbe682", "Url": "https://api.github.com/repos/EirikOsnes/panic", "Date": "2018-03-15T13:02:56Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["application.FileHelper.readFile(java.io.File)", "application.FileHelper.readFile(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((start.equals(\"\")) || (end.equals(\"\")))) return (start + \"((.|\\n)*)\") + end; else return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1846/buggy-version/application.SyntaxHighlighter.java", "BodyUseAPI": [], "Fixed commit": "fdd244465831d85a7a8c9438f15851bd61c80a2a", "Url": "https://api.github.com/repos/karpimpski/cis-final", "Date": "2018-04-17T00:00:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["application.FileHelper.readFile(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(result.equals(\"\"))) result += \"[^\\\\n]*\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1846/buggy-version/application.SyntaxHighlighter.java", "BodyUseAPI": [], "Fixed commit": "fdd244465831d85a7a8c9438f15851bd61c80a2a", "Url": "https://api.github.com/repos/karpimpski/cis-final", "Date": "2018-04-17T00:00:51Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((singleLineCommentPattern().equals(\"\")) && (multiLineCommentPattern().equals(\"\"))) result += \"|\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1846/buggy-version/application.SyntaxHighlighter.java", "BodyUseAPI": [], "Fixed commit": "fdd244465831d85a7a8c9438f15851bd61c80a2a", "Url": "https://api.github.com/repos/karpimpski/cis-final", "Date": "2018-04-17T00:00:51Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (password == null) return null; else if (((readableDatabase) == null) || (!(readableDatabase.isOpen()))) { if ((readableDatabase) != null) { readableDatabase.close(); } readableDatabase = super.getReadableDatabase(password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7093/buggy-version/opensrp-tbr.src.main.java.org.smartregister.tbr.repository.TbrRepository.java", "BodyUseAPI": ["org.smartregister.repository.Repository.getReadableDatabase(java.lang.String)"], "Fixed commit": "ae4a227a3ba7da0460acda856b13ab6f5eec9831", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-tbr", "Date": "2018-01-19T11:28:35Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (password == null) return null; else if (((writableDatabase) == null) || (!(writableDatabase.isOpen()))) { if ((writableDatabase) != null) { writableDatabase.close(); } writableDatabase = super.getWritableDatabase(password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7093/buggy-version/opensrp-tbr.src.main.java.org.smartregister.tbr.repository.TbrRepository.java", "BodyUseAPI": ["org.smartregister.repository.Repository.getWritableDatabase(java.lang.String)"], "Fixed commit": "ae4a227a3ba7da0460acda856b13ab6f5eec9831", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-tbr", "Date": "2018-01-19T11:28:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) { android.util.Log.d(org.godotengine.godot.inapp.InAppManager.TAG, \"onResume: call getUserData\"); com.amazon.device.iap.PurchasingService.getUserData(); android.util.Log.d(org.godotengine.godot.inapp.InAppManager.TAG, \"onResume: getPurchaseUpdates\"); com.amazon.device.iap.PurchasingService.getPurchaseUpdates(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2222/buggy-version/android.src.inapp.InAppManager.java", "BodyUseAPI": [], "Fixed commit": "277b02715bfa911702e4cf6a8e7c5a265c8ef616", "Url": "https://api.github.com/repos/binogure-studio/godotamazon", "Date": "2018-05-01T18:51:31Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.runtime.api.Framework.getService(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (um == null) { if (org.nuxeo.runtime.api.Framework.isTestModeSet()) { return \"Guest\"; } throw new org.nuxeo.ecm.core.api.NuxeoException(\"Missing UserManager\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5651/buggy-version/src.main.java.org.nuxeo.segment.io.SegmentIOUserFilter.java", "BodyUseAPI": [], "Fixed commit": "473ca11fdb1b641a275e7a75e60383802dbe32c5", "Url": "https://api.github.com/repos/nuxeo/nuxeo-segment.io-connector", "Date": "2018-01-10T18:13:00Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filterTypeValidator.isFilter(filterInput)) return filterOutputType.equals(getFilterInput(filterInput));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3100/buggy-version/src.main.java.validator.FilterCompabilityValidator.java", "BodyUseAPI": ["java.lang.reflect.Type.equals(java.lang.reflect.Type)", "validator.FilterCompabilityValidator.getFilterInput(pipeAndFilter.Processable)"], "Fixed commit": "e7904a0a7e1e43ddc37b6db6debb03fb5f56cb56", "Url": "https://api.github.com/repos/pp2-2018/wirelessanalyzer", "Date": "2018-05-23T03:54:54Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filterTypeValidator.isFilter(filterInput)) return generatorOutputType.equals(getFilterInput(filterInput));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3100/buggy-version/src.main.java.validator.FilterCompabilityValidator.java", "BodyUseAPI": ["validator.FilterCompabilityValidator.getFilterInput(pipeAndFilter.Processable)", "java.lang.reflect.Type.equals(java.lang.reflect.Type)"], "Fixed commit": "e7904a0a7e1e43ddc37b6db6debb03fb5f56cb56", "Url": "https://api.github.com/repos/pp2-2018/wirelessanalyzer", "Date": "2018-05-23T03:54:54Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((g.getBios()) != null) { for (com.dubion.service.dto.NapsterAPI.Artist.Bio bios : g.getBios()) { artist.setBio(bios.getBio()); } java.lang.System.out.println(artist.getId()); }else { artist.setBio(\"No tiene bio, sry \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9651/buggy-version/src.main.java.com.dubion.service.NapsterAPI.NapsterDTOService.java", "BodyUseAPI": ["com.dubion.service.dto.NapsterAPI.Artist.Artist.getBios()"], "Fixed commit": "5c8eb55ecd13761ceea56f56ef866ec44c92cc31", "Url": "https://api.github.com/repos/valsamiq/dubion", "Date": "2018-05-28T11:19:12Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(addEmployeeFrame.checkError())) { removeEmployee(addEmployeeFrame.oldEmpNumber); addToDatabase(); updateText(); addEmployeeFrame.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4345/buggy-version/EmployeeDatabase.src.MainFrame.java", "BodyUseAPI": ["AddEmployeeFrame.dispose()", "MainFrame.9.removeEmployee(addEmployeeFrame.oldEmpNumber)"], "Fixed commit": "52d250d4d836f13e54d41d8219a935278bdcc5bf", "Url": "https://api.github.com/repos/JasonXZLiu/SchoolCompSci", "Date": "2018-01-19T17:51:05Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (owaName == \"restAPI\") { return \"manage.form\"; }else { return \"redirect:manage.form\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3480/buggy-version/omod.src.main.java.org.openmrs.module.owa.web.controller.OwaManageController.java", "BodyUseAPI": [], "Fixed commit": "33dde97512b140b81590027fbcef26c15e52d04c", "Url": "https://api.github.com/repos/Charpell/openmrs-module-owa", "Date": "2018-01-03T11:50:37Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (givesCheck) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6522/buggy-version/src.chess.Search.java", "BodyUseAPI": [], "Fixed commit": "f484585bc9d435ea3407c4721fbc420221eab6c3", "Url": "https://api.github.com/repos/benni98/Suboptimal", "Date": "2018-03-14T00:11:28Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.AliveEntity.getLookingTile(main.Directions)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((spawningTile.m_entities.get(Options.layers.get(\"projectile\"))) == null) { model.Projectile proj = new model.Projectile(m_model, ((spawningTile.m_x) * (controller.Options.TAILLE_CASE)), ((spawningTile.m_y) * (controller.Options.TAILLE_CASE)), \"assets/sprites/fireball.png\", 1, spawningTile, 200, 3); spawningTile.putEntity(Options.layers.get(\"projectile\"), proj); proj.m_orientation = dir; projectileCooldown = 500; if (proj.testCollision()) { return; } proj.move(dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3582/buggy-version/src.model.AliveEntity.java", "BodyUseAPI": ["model.Tile.putEntity(Options.layers.get(\"projectile\"),model.Projectile)"], "Fixed commit": "0ca180daeb02c43066c90c02ad71b9c926acc9f5", "Url": "https://api.github.com/repos/KmxCronos/PLA-Groupe2", "Date": "2018-06-12T09:17:51Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEventList.get(position).getLaenk()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(url.contains(\"facebook\"))) { android.util.Log.d(com.dohman.sdur.Tab2Events.TAG, \"onItemClick: Url doesn't contain 'facebook', running web browser.\"); android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW); intent.setData(android.net.Uri.parse(url)); try { startActivity(intent); } catch (android.content.ActivityNotFoundException e) { android.widget.Toast.makeText(myContext, getString(R.string.toast_notfoundbrowser), Toast.LENGTH_LONG).show(); } }else if ((url.contains(\"facebook\")) && ((url.startsWith(\"http\")) || (url.startsWith(\"www\")))) { android.content.Intent facebookIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW); java.lang.String facebookUrl = getFacebookPageURL(myContext, url); facebookIntent.setData(android.net.Uri.parse(facebookUrl)); startActivity(facebookIntent); }else { android.widget.Toast.makeText(myContext, getString(R.string.toast_nolink), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7170/buggy-version/app.src.main.java.com.dohman.sdur.Tab2Events.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "com.dohman.sdur.Tab2Events.2.getFacebookPageURL(android.support.v4.app.FragmentActivity,java.lang.String)", "android.content.Intent.setData(android.net.Uri.parse(url))"], "Fixed commit": "1e29c012d08f17873acbb2d225107a537a163191", "Url": "https://api.github.com/repos/Dohmanlechx/sdur", "Date": "2018-09-13T19:51:52Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateScore) { score.setNotes(model.getTotalNotes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/320/buggy-version/src.bms.player.beatoraja.PlayDataAccessor.java", "BodyUseAPI": [], "Fixed commit": "e84026b8663473d5f62db07174f84e47e1e031a4", "Url": "https://api.github.com/repos/niente1899/beatoraja", "Date": "2018-03-25T21:40:06Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bufferSize) > 0) { synchronized(mFileUploading) { mFileUploading.add(fname); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3039/buggy-version/app.src.main.java.com.userempowermentlab.kidsrecorder.Data.DataManager.java", "BodyUseAPI": [], "Fixed commit": "9cd9446eac3722c355fcc955c28f6649abb19be8", "Url": "https://api.github.com/repos/DrustZ/KidsRecorder", "Date": "2018-07-27T21:08:29Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(worldIn.isRemote)) playerIn.openGui(ThutBling.instance, 0, worldIn, 0, 0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1074/buggy-version/src.main.java.thut.bling.ItemBling.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.openGui(ThutBling.instance,int,net.minecraft.world.World,int,int,int)"], "Fixed commit": "b1043f45827075b7d439b4e46b02bf61ed5f8e37", "Url": "https://api.github.com/repos/Thutmose/ThutBling", "Date": "2018-08-21T03:42:04Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message.message) == (thut.bling.network.PacketBag.OPEN)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1074/buggy-version/src.main.java.thut.bling.network.PacketBag.java", "BodyUseAPI": [], "Fixed commit": "b1043f45827075b7d439b4e46b02bf61ed5f8e37", "Url": "https://api.github.com/repos/Thutmose/ThutBling", "Date": "2018-08-21T03:42:04Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((strLevel.equals(\"D/\")) || (strLevel.equals(\"V/\"))) || (strLevel.equals(\"I/\"))) || (strLevel.equals(\"W/\"))) || (strLevel.equals(\"E/\"))) || (strLevel.equals(\"F/\"))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9599/buggy-version/src.LogCatParser.java", "BodyUseAPI": [], "Fixed commit": "96d3d16f1195d0e7adc01f06a16a76390998602a", "Url": "https://api.github.com/repos/pokoso/LogFilter", "Date": "2018-04-10T02:58:28Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.caramel.juniperbot.module.junipost.service.InstagramService.getRecent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isNotEmpty(medias)) { postService.onInstagramUpdated(medias); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7041/buggy-version/modules.jb-module-junipost.src.main.java.ru.caramel.juniperbot.module.junipost.service.InstagramService.java", "BodyUseAPI": ["ru.caramel.juniperbot.module.junipost.service.PostService.onInstagramUpdated(java.util.List<org.jinstagram.entity.users.feed.MediaFeedData>)"], "Fixed commit": "74dafe418e898b014751550c6aade1d644647372", "Url": "https://api.github.com/repos/GoldRenard/JuniperBot", "Date": "2018-01-25T08:56:49Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mPrefs.contains(com.edu.uni.augsburg.uniatron.SharedPreferencesHandler.PREF_STEPS_PER_MINUTE)) { return java.lang.Float.valueOf(mPrefs.getString(com.edu.uni.augsburg.uniatron.SharedPreferencesHandler.PREF_STEPS_PER_MINUTE, java.lang.String.valueOf(com.edu.uni.augsburg.uniatron.SharedPreferencesHandler.STEP_FACTOR_EASY))); }else { return com.edu.uni.augsburg.uniatron.SharedPreferencesHandler.STEP_FACTOR_EASY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2636/buggy-version/app.src.main.java.com.edu.uni.augsburg.uniatron.SharedPreferencesHandler.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "java.lang.Float.valueOf(mPrefs.getString(com.edu.uni.augsburg.uniatron.SharedPreferencesHandler.PREF_STEPS_PER_MINUTE, java.lang.String.valueOf(com.edu.uni.augsburg.uniatron.SharedPreferencesHandler.STEP_FACTOR_EASY)))"], "Fixed commit": "811032ece3a8937f4e4c1f398e5b3fa776c68cb8", "Url": "https://api.github.com/repos/FHellmann/Uniatron", "Date": "2018-05-24T13:00:25Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((names.length) > 1) { this.lastName = names[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8810/buggy-version/src.main.java.aabalde.bots.BotUser.java", "BodyUseAPI": [], "Fixed commit": "01ce34a8800e4aa95bac3ef2c7f3e3b0bdeef09e", "Url": "https://api.github.com/repos/aabalde/suscribot", "Date": "2018-03-23T08:15:31Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.targetingType.requiresTarget)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3541/buggy-version/core.src.com.tann.dice.screens.dungeon.TargetingManager.java", "BodyUseAPI": [], "Fixed commit": "9001674c7d540633edd2817ad186d72162d8955d", "Url": "https://api.github.com/repos/ColourTann/Dicegeon", "Date": "2018-10-10T12:12:37Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tann.dice.gameplay.fightLog.Snapshot.getState(com.tann.dice.gameplay.entity.DiceEntity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((type.requiresTarget) == (target == null)) { throw new java.lang.RuntimeException((((\"Invalid target: \" + target) + \" for effect \") + eff)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3541/buggy-version/core.src.com.tann.dice.gameplay.fightLog.Snapshot.java", "BodyUseAPI": [], "Fixed commit": "9001674c7d540633edd2817ad186d72162d8955d", "Url": "https://api.github.com/repos/ColourTann/Dicegeon", "Date": "2018-10-10T12:12:37Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strReturnCode.equals(Constant.INFO_NOT_FOUND)) { android.content.Intent intent = new android.content.Intent(this, com.comorinland.milkman.customerapp.CustomerLogin.class); com.comorinland.milkman.common.SharedHelper.showAlertDialog(this, \"You have not been added by the vendor yet. Please request the vendor to add your name.\", intent); }else { com.comorinland.milkman.common.SharedHelper.showAlertDialog(this, \"There is a prolem in registration.Please try again\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8026/buggy-version/main.java.com.comorinland.milkman.customerapp.RegistrationCustomerActivity.java", "BodyUseAPI": [], "Fixed commit": "0874c4d15f3ee613094797e3cc5b94230330bd5e", "Url": "https://api.github.com/repos/deepakjd/MilkMan", "Date": "2018-08-16T04:03:37Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.isis.core.runtime.services.background.BackgroundCommandExecution.execute(org.apache.isis.core.runtime.system.transaction.IsisTransactionManager,org.apache.isis.applib.services.command.Command)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!shouldContinue) { org.apache.isis.core.runtime.services.background.BackgroundCommandExecution.LOG.info(\"OnExceptionPolicy is to QUIT, so skipping further processing\", backgroundCommand.getMemberIdentifier()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3241/buggy-version/core.runtime.src.main.java.org.apache.isis.core.runtime.services.background.BackgroundCommandExecution.java", "BodyUseAPI": [], "Fixed commit": "19dfb5324cf32c9fd1015ab01308439fe313d76b", "Url": "https://api.github.com/repos/apache/isis", "Date": "2018-01-29T14:23:43Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((StateOfGame.stateOfGameplay) == (StateOfGameplay.BLACK_MOVE)) { colorOfPossibleLoser = ChessColour.BLACK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5092/buggy-version/src.main.java.Chess.Model.GameVariants.DunsanysChess.java", "BodyUseAPI": [], "Fixed commit": "881a1d867c9540dfbae0f2140627a9492f10a267", "Url": "https://api.github.com/repos/chess-team/Chess", "Date": "2018-05-23T19:39:35Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kthcorp.cmts.service.JsonObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resultRefineObj != null) { java.lang.String movietitle = sched.getMovietitle(); if (!(\"\".equals(movietitle))) { com.kthcorp.cmts.service.JsonArray wordsSnsArray = apiService.getSnsKeywords(movietitle); if (wordsSnsArray != null) wordsSnsArray = new com.kthcorp.cmts.service.JsonArray(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5132/buggy-version/src.main.java.com.kthcorp.cmts.service.RefineService.java", "BodyUseAPI": [], "Fixed commit": "c0e22ee96c57b8790291179ccb4b02a2e89959ab", "Url": "https://api.github.com/repos/swordKein/cmts", "Date": "2018-03-08T09:02:24Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalPixels == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6898/buggy-version/src.ev3.localization.SurfaceReadings.java", "BodyUseAPI": [], "Fixed commit": "f8096c0d0c6eb13257a60936ad4fbfcb55acd280", "Url": "https://api.github.com/repos/SUPERETDUPER/WRO-2018-Senior", "Date": "2018-04-04T20:55:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecipe) != null) { stepDescriptionTextView.setText(mRecipe.getSteps().get(stepIndex).getDescription()); java.lang.String videoURL = mRecipe.getSteps().get(stepIndex).getVideoURL(); if ((videoURL != null) && (!(videoURL.isEmpty()))) { com.example.arash.bakingapp.utilities.VideoUtils.initVideoInView(simpleExoPlayerView, getActivity(), mRecipe.getSteps().get(stepIndex).getVideoURL()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1647/buggy-version/app.src.main.java.com.example.arash.bakingapp.StepFragment.java", "BodyUseAPI": [], "Fixed commit": "a4aa5eae0e008a71a0c10dee1f1f0d1a3c2ee049", "Url": "https://api.github.com/repos/icepyramid/BakingApp", "Date": "2018-01-04T09:52:23Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<E>.next()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (element == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7545/buggy-version/src.main.java.project9.classes.LazyStream.java", "BodyUseAPI": [], "Fixed commit": "1b665020c576f3e86c9aa8915b480aff3ce98ac1", "Url": "https://api.github.com/repos/nahakiole/bfhexercise", "Date": "2018-04-03T21:02:11Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (err != null) { model.addAttribute(\"err\", err.replace(\"_\", \" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7153/buggy-version/src.main.java.pl.marcinkulwicki.controller.FatherController.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "org.springframework.ui.Model.addAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "d7bd2e6fe9a53b9303907b627bf6a016db5dc2ee", "Url": "https://api.github.com/repos/MarcinKulwicki/FamilyApp", "Date": "2018-09-04T13:10:13Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (squareBracketIndex == (-1)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8653/buggy-version/src.Line.java", "BodyUseAPI": [], "Fixed commit": "1c6f7c0b60f2676a011c07def018dd2f2b1c5390", "Url": "https://api.github.com/repos/tuxdux/algorithm-writer", "Date": "2018-10-22T12:59:44Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(facesContext.getResponseComplete())) { getDefaultLifecycle().render(facesContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6572/buggy-version/action.src.main.java.com.manorrock.oyena.action.ActionLifecycle.java", "BodyUseAPI": ["javax.faces.lifecycle.Lifecycle.render(javax.faces.context.FacesContext)"], "Fixed commit": "08030b9282481964dc8fe753609e161251255656", "Url": "https://api.github.com/repos/manorrock/oyena", "Date": "2018-04-01T04:21:44Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!showNDD) { dbStat.setString(1, configuration.getDatabaseName()); }else { if (catalogFilters != null) { org.jkiss.dbeaver.model.impl.jdbc.JDBCUtils.setFilterParameters(dbStat, 1, catalogFilters); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6311/buggy-version/plugins.org.jkiss.dbeaver.ext.postgresql.src.org.jkiss.dbeaver.ext.postgresql.model.PostgreDataSource.java", "BodyUseAPI": [], "Fixed commit": "5e79c899ba8c38848d4601a3f36ba4282b94d3f8", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2018-07-16T10:29:14Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mv.getMethods()) != null) { allMethods.addAll(mv.getMethods()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/722/buggy-version/QMove.src.qmove.handlers.MoveMethodHandler.java", "BodyUseAPI": ["qmove.ast.MethodsVisitor.getMethods()", "java.util.ArrayList<org.eclipse.jdt.core.dom.MethodDeclaration>.addAll(mv.getMethods())"], "Fixed commit": "53ce9bf885f03b00414d0ecbe365b6fbc2967f78", "Url": "https://api.github.com/repos/PqES/QMove", "Date": "2018-01-09T02:16:03Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showResents) { drawRect(0, ((((((((height) / 4) + 96) + 12) - 36) - 48) - 12) - 20), (90 + (2 * 8)), (((((((height) / 4) + 96) + 36) - 48) + 20) + 20), a.getRGB()); drawRect(width, ((((((((height) / 4) + 96) + 12) - 36) - 48) - 12) - 20), (((width) - 90) - (2 * 8)), (((((((height) / 4) + 96) + 36) - 48) + 20) + 20), a.getRGB()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4895/buggy-version/main.java.de.diamondCoding.fastJoin.FastJoinScreen.java", "BodyUseAPI": [], "Fixed commit": "a4388b57165173b0179b90631bd585a5cf9da200", "Url": "https://api.github.com/repos/DiamondCodingYT/fastJoin", "Date": "2018-07-28T04:36:29Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentSorting) == (com.arushi.popularmovies.utils.Constants.SORT_FAVOURITES)) { setupFavouritesObserver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9716/buggy-version/proj3-PopularMovies-2.app.src.main.java.com.arushi.popularmovies.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1f9b885af2f07351cbe72e836047449afcd276f3", "Url": "https://api.github.com/repos/arushi26/android-developer-nanodegree", "Date": "2018-07-10T17:49:56Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (releaseDate.equals(\"\")) return \"N/A\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9716/buggy-version/proj3-PopularMovies-2.app.src.main.java.com.arushi.popularmovies.data.model.MovieDetail.java", "BodyUseAPI": [], "Fixed commit": "1f9b885af2f07351cbe72e836047449afcd276f3", "Url": "https://api.github.com/repos/arushi26/android-developer-nanodegree", "Date": "2018-07-10T17:49:56Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.getKalahPitOrderNumber().equals(game.getBoard().getLastPitNo())) { game.setAttacker(com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(player.getId()).reason(\"You lucky ! It's again your turn\").build()); }else if (player.getId().equals(game.getPlayerOne().getId())) { game.setAttacker(com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(game.getPlayerTwo().getId()).reason(\"It's your turn\").build()); }else { game.setAttacker(com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(game.getPlayerOne().getId()).reason(\"It's your turn\").build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4349/buggy-version/src.main.java.com.hkarabakla.kalahbackend.command.NextAttackerIdentifierCommand.java", "BodyUseAPI": ["com.hkarabakla.kalahbackend.model.Game.getPlayerTwo()", "com.hkarabakla.kalahbackend.model.Player.getId()", "player.getId().equals(game.getPlayerOne().getId())", "game.getPlayerOne().getId()", "com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(player.getId()).reason(\"You lucky ! It's again your turn\").build()", "com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(player.getId()).reason(java.lang.String)", "com.hkarabakla.kalahbackend.model.Game.getPlayerOne()", "com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(game.getPlayerOne().getId())", "com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(game.getPlayerTwo().getId()).reason(\"It's your turn\").build()", "game.getPlayerOne().getId()", "com.hkarabakla.kalahbackend.model.Game.getPlayerOne()", "com.hkarabakla.kalahbackend.model.Game.setAttacker(com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(player.getId()).reason(\"You lucky ! It's again your turn\").build())", "com.hkarabakla.kalahbackend.model.Player.getId()", "game.getPlayerTwo().getId()", "com.hkarabakla.kalahbackend.model.Game.setAttacker(com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(game.getPlayerOne().getId()).reason(\"It's your turn\").build())", "com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(game.getPlayerOne().getId()).reason(java.lang.String)", "com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(game.getPlayerTwo().getId()).reason(java.lang.String)", "com.hkarabakla.kalahbackend.model.Game.setAttacker(com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(game.getPlayerTwo().getId()).reason(\"It's your turn\").build())", "com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(game.getPlayerTwo().getId())", "com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(player.getId())", "com.hkarabakla.kalahbackend.model.Attacker.builder().attackerId(game.getPlayerOne().getId()).reason(\"It's your turn\").build()"], "Fixed commit": "dd4d99bcc818a812bc3313ea1100ca4bdc9a3020", "Url": "https://api.github.com/repos/hkarabakla/kalahbackend", "Date": "2018-07-14T21:03:36Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hkarabakla.kalahbackend.service.GameService.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(game.getAttacker().getAttackerId().equals(playerId))) { throw new java.lang.IllegalArgumentException(((\"It is \" + (game.getAttacker().getAttackerId())) + \" 's turn !\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4349/buggy-version/src.main.java.com.hkarabakla.kalahbackend.service.GameService.java", "BodyUseAPI": ["com.hkarabakla.kalahbackend.model.Game.getAttacker()", "game.getAttacker().getAttackerId()"], "Fixed commit": "dd4d99bcc818a812bc3313ea1100ca4bdc9a3020", "Url": "https://api.github.com/repos/hkarabakla/kalahbackend", "Date": "2018-07-14T21:03:36Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bandoriSong == null) { textChannel.sendMessage(\"searching video...\").queue(); searchVideo(textChannel, source, member); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8504/buggy-version/src.main.java.com.AkoBot.Music.MusicManager.java", "BodyUseAPI": [], "Fixed commit": "7e3817d35299682ebf2e34c4f3b4789fe224638e", "Url": "https://api.github.com/repos/Uninspirational/ako_bot", "Date": "2018-09-12T22:47:11Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mifos.mifosxdroid.adapters.ClientNameListAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((client.getFullname()) == null) { clientName = ((client.getFirstname()) + \" \") + (client.getLastname()); }else { clientName = client.getFullname(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7942/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.adapters.ClientNameListAdapter.java", "BodyUseAPI": ["com.mifos.objects.client.Client.getFullname()", "com.mifos.objects.client.Client.getFirstname()", "com.mifos.objects.client.Client.getLastname()"], "Fixed commit": "3ea6c703fbbece282250c5b1dc00f0ef6451d184", "Url": "https://api.github.com/repos/AkshGautam/android-client", "Date": "2018-02-14T19:55:47Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(bufferEnable)) && (!(newPending.isEmpty()))) { org.aion.zero.impl.blockchain.AionImpl.inst().broadcastTransactions(newPending); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2529/buggy-version/modAionImpl.src.org.aion.zero.impl.blockchain.AionPendingStateImpl.java", "BodyUseAPI": ["org.aion.zero.impl.blockchain.AionImpl.inst().broadcastTransactions(java.util.List<org.aion.zero.impl.blockchain.AionTransaction>)"], "Fixed commit": "d86fde9a9b239f353daaa4cc2781f9fb7eeade04", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-04-03T20:09:10Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (counter >= (inputList.size())) { popStack(inputList, postFix, opStack, counter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2034/buggy-version/src.calc.Calculator.java", "BodyUseAPI": ["calc.Calculator.popStack(java.util.ArrayList<java.lang.String>,java.util.ArrayList<java.lang.String>,java.util.Deque<java.lang.String>,int)"], "Fixed commit": "bb9f00e087f1bdf9cf1820e745cdfed36ffc3d26", "Url": "https://api.github.com/repos/matteB10/Calculator", "Date": "2018-10-04T11:54:19Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conceptType.getProtectedAccess()) != null) isProtected = (conceptType.getProtectedAccess().equalsIgnoreCase(\"Y\")) ? true : false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1581/buggy-version/edu.harvard.i2b2.crc.src.server.edu.harvard.i2b2.crc.dao.setfinder.querybuilder.temporal.TemporalPanelItem.java", "BodyUseAPI": ["edu.harvard.i2b2.crc.datavo.ontology.ConceptType.getProtectedAccess()", "conceptType.getProtectedAccess().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "667ef0364ee897bcae02350c387cd193d9114d8b", "Url": "https://api.github.com/repos/i2b2/i2b2-core-server", "Date": "2018-08-29T14:04:24Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((throwable) != null) && ((throwable.getMessage()) != null)) { message = throwable.getMessage(); }else if (((throwable) != null) && ((throwable.getCause()) != null)) { message = throwable.getCause().getMessage(); }else { message = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4568/buggy-version/src.main.java.com.wiley.assertions.TeasyError.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()", "java.lang.Throwable.getMessage()", "java.lang.Throwable.getCause()", "java.lang.Throwable.getCause()"], "Fixed commit": "6487e34fdbd23eac488d4caee362f6ad1244173c", "Url": "https://api.github.com/repos/estuold/teasy-simple", "Date": "2018-07-25T05:59:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isScriptAttached)) { googleImagesWebView.evaluateJavascript(levy.barak.ankihelper.utils.FileUtils.getFileContent(googleImagesWebView.getContext(), \"googleImages.js\"), null); isScriptAttached = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3397/buggy-version/app.src.main.java.levy.barak.ankihelper.GoogleImagesActivity.java", "BodyUseAPI": [], "Fixed commit": "44cfd5b72a3c4f58a8994121d52be31df263d348", "Url": "https://api.github.com/repos/baraklevy20/anki-helper", "Date": "2018-02-09T15:22:07Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isScriptAttached)) { googleTranslateEditView.evaluateJavascript(levy.barak.ankihelper.utils.FileUtils.getFileContent(googleTranslateEditView.getContext(), \"googleTranslate.js\"), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3397/buggy-version/app.src.main.java.levy.barak.ankihelper.GoogleTranslateActivity.java", "BodyUseAPI": [], "Fixed commit": "44cfd5b72a3c4f58a8994121d52be31df263d348", "Url": "https://api.github.com/repos/baraklevy20/anki-helper", "Date": "2018-02-09T15:22:07Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (depHead != (-1)) { if ((reverseDepHeads[depHead]) == null) { java.util.TreeSet<java.lang.Integer> children = new java.util.TreeSet<java.lang.Integer>(); children.add(index); reverseDepHeads[depHead] = children; }else reverseDepHeads[depHead].add(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2383/buggy-version/SentenceStruct.Sentence.java", "BodyUseAPI": [], "Fixed commit": "753b9011892dea0f69e8dd5e2ef173fe26981732", "Url": "https://api.github.com/repos/aminianmary/Projection", "Date": "2018-02-02T15:45:43Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.PsiBuilder.lookAhead(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lookAhead == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LEFT_BRACKET)) { com.intellij.psi.tree.IElementType lookAhead3 = builder.lookAhead(3); if (lookAhead3 == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.ELLIPSIS)) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2568/buggy-version/tool-plugins.intellij.src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParserUtil.java", "BodyUseAPI": [], "Fixed commit": "9ecdc2a9c9db1a862b0dace8f8a995f1af8b859b", "Url": "https://api.github.com/repos/Shan1024/ballerina", "Date": "2018-05-21T12:45:55Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bankAccount.getAccountBalance()) > amount) { bankAccount.setAccountBalance(((bankAccount.getAccountBalance()) - amount)); return true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8148/buggy-version/src.main.java.Bank.java", "BodyUseAPI": ["BankAccount.getAccountBalance()", "BankAccount.setAccountBalance(((bankAccount.getAccountBalance()) - amount))"], "Fixed commit": "d5a08adef64b0374ba9efda6d31c875f5aea45b0", "Url": "https://api.github.com/repos/vitan12/Lab5", "Date": "2018-10-02T20:51:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (withdrawMoney(source, amount)) { continue1 = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8148/buggy-version/src.main.java.Bank.java", "BodyUseAPI": [], "Fixed commit": "d5a08adef64b0374ba9efda6d31c875f5aea45b0", "Url": "https://api.github.com/repos/vitan12/Lab5", "Date": "2018-10-02T20:51:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (continue1) { depositMoney(destination, amount); return true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8148/buggy-version/src.main.java.Bank.java", "BodyUseAPI": [], "Fixed commit": "d5a08adef64b0374ba9efda6d31c875f5aea45b0", "Url": "https://api.github.com/repos/vitan12/Lab5", "Date": "2018-10-02T20:51:22Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(keepChecking)) { constantlyUpdateLabel(); keepChecking = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5/buggy-version/src.pingchecker.application.Controller.java", "BodyUseAPI": [], "Fixed commit": "64c65b939b2ac5f931fe9255970fdd50c1cb0ce5", "Url": "https://api.github.com/repos/TimoPeters/PingChecker", "Date": "2018-03-24T12:27:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MattR.application.LineBotAppApplication.lbac) == null) { MattR.application.LineBotAppApplication.lbac = new MattR.controller.LineBotAppController(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7229/buggy-version/src.main.java.MattR.application.LineBotAppApplication.java", "BodyUseAPI": [], "Fixed commit": "fe2fa654f93c70f198d41520a69ef5a569eaf231", "Url": "https://api.github.com/repos/sarmiley/MattR", "Date": "2018-08-16T15:34:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kafka.connect.connector.ConnectRecord<?>.valueSchema()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((valueSchema.field(\"after\")) != null) { valueSchema = valueSchema.field(\"after\").schema(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7964/buggy-version/src.main.java.io.confluent.connect.hdfs.partitioner.RecordFieldTimestampExtractor.java", "BodyUseAPI": ["org.apache.kafka.connect.data.Schema.field(java.lang.String)", "valueSchema.field(\"after\").schema()"], "Fixed commit": "fd34faa964229e39362bf7002c2d78d819433eb2", "Url": "https://api.github.com/repos/DataPipelineInc/kafka-connect-hdfs", "Date": "2018-09-12T09:26:19Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (songId != (LyricDatabaseHelper.SongLyrics.UNSET_ID)) newId = songId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3718/buggy-version/app.src.main.java.com.example.john.lyricsbuddy.SongLyricDetailItemViewModel.java", "BodyUseAPI": [], "Fixed commit": "4c285b415939daf8f105e99f288c6928edddb6f6", "Url": "https://api.github.com/repos/johnmasiello/Lyrics-Buddy", "Date": "2018-04-20T02:03:07Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pets.size()) > 0) { pets.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/452/buggy-version/app.src.main.java.com.example.sabri.petsproject3.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.example.sabri.petsproject3.Pets>.clear()"], "Fixed commit": "3dd55a8195947b1485dce6921f0371b62b090f44", "Url": "https://api.github.com/repos/sabrinachira/Android_JSON-data", "Date": "2018-03-23T01:45:56Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { pullJSONData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/452/buggy-version/app.src.main.java.com.example.sabri.petsproject3.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3dd55a8195947b1485dce6921f0371b62b090f44", "Url": "https://api.github.com/repos/sabrinachira/Android_JSON-data", "Date": "2018-03-23T01:45:56Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mainSectionIntersections.size()) != 2) { width = 0; }else { width = com.structuralengineering.rcbeam.utils.Calculators.distanceBetweenTwoNodes(mainSectionIntersections.get(0), mainSectionIntersections.get(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1177/buggy-version/src.com.structuralengineering.rcbeam.properties.Section.java", "BodyUseAPI": ["java.util.List<com.structuralengineering.rcbeam.properties.Node>.get(int)", "java.util.List<com.structuralengineering.rcbeam.properties.Node>.get(int)", "com.structuralengineering.rcbeam.utils.Calculators.distanceBetweenTwoNodes(mainSectionIntersections.get(0),mainSectionIntersections.get(1))"], "Fixed commit": "a26daaf66633bc50ac7698e99c4793aff7e1b717", "Url": "https://api.github.com/repos/alexiusacademia/RCBeam", "Date": "2018-10-11T07:49:55Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clips.size()) == 2) { width -= com.structuralengineering.rcbeam.utils.Calculators.distanceBetweenTwoNodes(clips.get(0), clips.get(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1177/buggy-version/src.com.structuralengineering.rcbeam.properties.Section.java", "BodyUseAPI": ["java.util.List<com.structuralengineering.rcbeam.properties.Node>.get(int)", "com.structuralengineering.rcbeam.utils.Calculators.distanceBetweenTwoNodes(clips.get(0),clips.get(1))", "java.util.List<com.structuralengineering.rcbeam.properties.Node>.get(int)"], "Fixed commit": "a26daaf66633bc50ac7698e99c4793aff7e1b717", "Url": "https://api.github.com/repos/alexiusacademia/RCBeam", "Date": "2018-10-11T07:49:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Ratio_D.getText().toString()", "Ratio_C.getText().toString()", "Ratio_A.getText().toString()", "Ratio_B.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((strValueD.equals(\"\")) && (strValueC.equals(\"\"))) || (strValueA.equals(\"\"))) || (strValueB.equals(\"\"))) { android.support.design.widget.Snackbar.make(view, \"Please enter a number!\", Snackbar.LENGTH_LONG).setAction(\"Action\", null).show(); }else if (strValueD.equals(\"\")) { float valueA = java.lang.Float.parseFloat(strValueA); float valueB = java.lang.Float.parseFloat(strValueB); float valueC = java.lang.Float.parseFloat(strValueC); float totalD = valueC * (valueB / valueA); java.lang.String display = ((((((\"Answer:\\n Ratio A: \" + valueA) + \" Ratio B: \") + valueB) + \" Number A: \") + valueC) + \" Missing Number B: \") + totalD; Display_Scrn.setText(java.lang.String.valueOf(display)); }else if (strValueC.equals(\"\")) { float valueA = java.lang.Float.parseFloat(strValueA); float valueB = java.lang.Float.parseFloat(strValueB); float valueD = java.lang.Float.parseFloat(strValueD); float totalC = valueB * (valueA / valueB); java.lang.String display = ((((((\"Answer:\\n Ratio A: \" + valueA) + \" Ratio B: \") + valueB) + \" Missing Number A: \") + totalC) + \" Number B: \") + valueD; Display_Scrn.setText(java.lang.String.valueOf(display)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1424/buggy-version/MyRatioCalculator.app.src.main.java.com.example.johnnysacc.myratiocalculator.MainActivity.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "6b006c3a46de64fc35e91d205693f7c33be18ddf", "Url": "https://api.github.com/repos/Fanatic-Coder/CalculatorsList", "Date": "2018-08-07T23:13:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (contents.has(\"meanings\")) { org.json.JSONArray meanings = contents.getJSONArray(\"meanings\"); for (int i = 0; i < (meanings.length());) { meaning = meanings.getJSONObject(0).getString(\"text\"); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/217/buggy-version/dictionary.main.src.java.com.ikth.app.dictionary.translator.EngToKorLangTranslatorOnGlosbe.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "a21110b4378d91f9d7e93c5f21c8d4b393cea4e2", "Url": "https://api.github.com/repos/ikth6001/dictionary", "Date": "2018-03-25T15:27:30Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (contents.has(\"phrase\")) { translated = contents.getJSONObject(\"phrase\").getString(\"text\"); }else { return \"<b>There are no translation information.</b>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/217/buggy-version/dictionary.main.src.java.com.ikth.app.dictionary.translator.EngToKorLangTranslatorOnGlosbe.java", "BodyUseAPI": ["contents.getJSONObject(\"phrase\").getString(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "a21110b4378d91f9d7e93c5f21c8d4b393cea4e2", "Url": "https://api.github.com/repos/ikth6001/dictionary", "Date": "2018-03-25T15:27:30Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recyclerView == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8045/buggy-version/app.src.main.java.com.cw.litenote.operation.audio.AudioPlayer_page.java", "BodyUseAPI": [], "Fixed commit": "ac2e28d6f0ae09c99bfbcb53737d226c85bd2ac9", "Url": "https://api.github.com/repos/chiou711/LiteNote2018-betaStage_newPages", "Date": "2018-10-19T17:51:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((batchModel.getObject().getId()) != null) { batchModel.setObject(org.geoserver.taskmanager.util.TaskManagerBeans.get().getDataUtil().init(batchModel.getObject())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8637/buggy-version/src.community.taskmanager.core.src.main.java.org.geoserver.taskmanager.web.BatchPage.java", "BodyUseAPI": [], "Fixed commit": "25332f2b7f00effe11e0ab1e7c8f299b9af0c569", "Url": "https://api.github.com/repos/DOV-Vlaanderen/geoserver", "Date": "2018-06-18T10:01:56Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elements == null) || ((elements.length) == 0)) { return new java.lang.StackTraceElement[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6261/buggy-version/src.main.java.com.bergerkiller.bukkit.common.utils.CommonUtil.java", "BodyUseAPI": [], "Fixed commit": "dc234eb9bed43d6ede9ba4f09f4b4f3bbc24e0fc", "Url": "https://api.github.com/repos/bergerhealer/BKCommonLib", "Date": "2018-06-27T17:31:46Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStoreBased) { operationMemoryManager.setKeyType(edu.iu.dsc.tws.comms.utils.MessageTypeConverter.toDataMessageType(keyType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3672/buggy-version/twister2.comms.src.java.edu.iu.dsc.tws.comms.mpi.MPIDataFlowOperation.java", "BodyUseAPI": [], "Fixed commit": "07b93fad9592b0d151efc44957c64900834dc405", "Url": "https://api.github.com/repos/DSC-SPIDAL/twister2", "Date": "2018-02-09T03:13:21Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!concurrentModification) throw e;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8143/buggy-version/h2o-core.src.main.java.hex.grid.GridSearch.java", "BodyUseAPI": [], "Fixed commit": "60527ae64a38fe91ed7010e48a3280078fff3b2d", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2018-03-22T21:37:11Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (components == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1149/buggy-version/src.com.valkryst.VTerminal.Screen.java", "BodyUseAPI": [], "Fixed commit": "bb82efc19d5bdb865be01b1fa0ab2ec1ecc9eeff", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-10-08T21:05:37Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (components == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1149/buggy-version/src.com.valkryst.VTerminal.Screen.java", "BodyUseAPI": [], "Fixed commit": "bb82efc19d5bdb865be01b1fa0ab2ec1ecc9eeff", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-10-08T21:05:37Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (components == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1149/buggy-version/src.com.valkryst.VTerminal.component.Layer.java", "BodyUseAPI": [], "Fixed commit": "bb82efc19d5bdb865be01b1fa0ab2ec1ecc9eeff", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-10-08T21:05:37Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (components == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1149/buggy-version/src.com.valkryst.VTerminal.component.Layer.java", "BodyUseAPI": [], "Fixed commit": "bb82efc19d5bdb865be01b1fa0ab2ec1ecc9eeff", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-10-08T21:05:37Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ID == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/804/buggy-version/app.src.main.java.com.orangetree.tcs.cis454proj1.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "df6f5c091ea1cc10819ba4180f582d7bf90caedf", "Url": "https://api.github.com/repos/BrainFRZ/cis454proj1", "Date": "2018-02-21T03:16:46Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (attributeList != null) { attributeList.add(fourthNode.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3094/buggy-version/java.middleware.registry-middleware.signature-presence-validation.src.main.java.io.opensaber.registry.middleware.impl.SignaturePresenceValidator.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(fourthNode.toString())"], "Fixed commit": "b07b147a9e16f792223838cc226df2b93df89baa", "Url": "https://api.github.com/repos/project-sunbird/open-saber", "Date": "2018-09-28T07:06:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (version.equals(TppCsvToFhirTransformer.VERSION_88)) { return new java.lang.String[]{ \"RowIdentifier\", \"IDOrganisationVisibleTo\", \"DateEventRecorded\", \"DateEvent\", \"IDProfileEnteredBy\", \"IDDoneBy\", \"TextualEventDoneBy\", \"IDOrganisationDoneAt\", \"NameOfBuilding\", \"NumberOfBuilding\", \"NameOfRoad\", \"NameOfLocality\", \"NameOfTown\", \"NameOfCounty\", \"FullPostCode\", \"DateTo\", \"AddressType\", \"IDEvent\", \"IDPatient\", \"IDOrganisation\", \"CcgOfResidence\", \"IDOrganisationRegisteredAt\" }; }else { return new java.lang.String[]{ \"RowIdentifier\", \"IDOrganisationVisibleTo\", \"DateEventRecorded\", \"DateEvent\", \"IDProfileEnteredBy\", \"IDDoneBy\", \"TextualEventDoneBy\", \"IDOrganisationDoneAt\", \"NameOfBuilding\", \"NumberOfBuilding\", \"NameOfRoad\", \"NameOfLocality\", \"NameOfTown\", \"NameOfCounty\", \"FullPostCode\", \"DateTo\", \"AddressType\", \"IDEvent\", \"IDPatient\", \"IDOrganisation\", \"CcgOfResidence\", \"RemovedData\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3939/buggy-version/src.main.java.org.endeavourhealth.transform.tpp.csv.schema.patient.SRPatientAddressHistory.java", "BodyUseAPI": [], "Fixed commit": "2945a208f13b732272dee030217e2ff01e05edd9", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-05-08T09:18:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.NUCLEAR_BOMB) { world.setBlockState(new net.minecraft.util.math.BlockPos((x + 3), (y + 2), (z + 3)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); world.setBlockState(new net.minecraft.util.math.BlockPos((x + 3), (y + 2), (z + 4)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); world.setBlockState(new net.minecraft.util.math.BlockPos((x + 3), (y + 2), (z + 5)), ExtraPlanets_Blocks.NUCLEAR_BOMB.getDefaultState(), 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7042/buggy-version/src.main.java.com.mjr.extraplanets.world.features.WorldGenNuclearPile.java", "BodyUseAPI": [], "Fixed commit": "bfcd9949c86eef1e97ac26bbba5ced4818ce012b", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-07-25T00:43:23Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mc) != null) { this.mc.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5615/buggy-version/src.main.java.it.filippo.stella.dmxdashboard.Model.ApplicationCore.java", "BodyUseAPI": [], "Fixed commit": "11e8cf2759171d176720f439172ae28f969d0f8e", "Url": "https://api.github.com/repos/ilofX/DMXDashboard", "Date": "2018-06-14T13:47:43Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getHeight()", "android.support.v4.widget.NestedScrollView.getLayoutParams()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bottomMargin != (params.bottomMargin)) { params.setMargins(params.leftMargin, params.topMargin, params.rightMargin, bottomMargin); scrollView.setLayoutParams(params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3485/buggy-version/sdk.src.main.java.com.mercadopago.review_and_confirm.ReviewAndConfirmActivity.java", "BodyUseAPI": ["CoordinatorLayout.LayoutParams.setMargins(params.leftMargin,params.topMargin,params.rightMargin,int)", "android.support.v4.widget.NestedScrollView.setLayoutParams(CoordinatorLayout.LayoutParams)"], "Fixed commit": "3aba960ef40116b641cb805a29299f7cf616cdba", "Url": "https://api.github.com/repos/mercadopago/px-android", "Date": "2018-05-03T20:45:29Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cms.getRequestContext().getCurrentUser().isGuestUser())) { javax.servlet.http.HttpSession session = request.getSession(false); if (session != null) { session.invalidate(); } session = request.getSession(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/520/buggy-version/src.org.opencms.main.A_CmsAuthorizationHandler.java", "BodyUseAPI": [], "Fixed commit": "84c4dd9e15384794428d9eabfc47c2c112f4bd21", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2018-05-15T10:12:50Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((passwordChange != null) || ((passwordChange.trim()) != \"\")) { com.codeup.adlister.dao.DaoFactory.getUsersDao().modifyPassword(passwordChange, username); }else if ((passwordChange == null) || ((passwordChange.trim()) == \"\")) { java.lang.System.out.println(\"I am null\"); response.sendRedirect(\"/profile\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8088/buggy-version/src.main.java.com.codeup.adlister.controllers.ViewProfileServlet.java", "BodyUseAPI": ["com.codeup.adlister.dao.DaoFactory.getUsersDao().modifyPassword(java.lang.String,java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "11ea3c6784a28cbec10a6b3c6b19897370f4f83c", "Url": "https://api.github.com/repos/rodger-gonzo-david/AdLister", "Date": "2018-04-11T19:13:43Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((xDir.dir) == 0) && ((yDir.dir) == (-1))) { currentImage = imageN; }else if (((xDir.dir) == 0) && ((yDir.dir) == 1)) { currentImage = imageS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9526/buggy-version/MazeGame.src.game.sprites.Player.java", "BodyUseAPI": [], "Fixed commit": "95298a78c27235dbdc89a32c36a6e759dc082755", "Url": "https://api.github.com/repos/arthurlafrance/MazeGame", "Date": "2018-05-22T01:45:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) { return resultArr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9918/buggy-version/NHLAnalyzer.Driver.java", "BodyUseAPI": [], "Fixed commit": "973fb7005fd2f6469e10ab18ed4b6fadcff20951", "Url": "https://api.github.com/repos/qwartzclock/cpsc304_team36", "Date": "2018-03-29T04:04:46Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.appwidget.AppWidgetManager.getAppWidgetIds(android.content.ComponentName)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ids.length) > 0) { com.agafonova.bake.BakeAppWidgetProvider.updateAppWidget(this, appWidgetManager, ids[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3951/buggy-version/app.src.main.java.com.agafonova.bake.ui.RecipeDetailActivity.java", "BodyUseAPI": ["com.agafonova.bake.BakeAppWidgetProvider.updateAppWidget(com.agafonova.bake.ui.RecipeDetailActivity,android.appwidget.AppWidgetManager,int)"], "Fixed commit": "54a6af677ea47a9987130ee4ac1cf2a7f63ebca5", "Url": "https://api.github.com/repos/oa2013/bake", "Date": "2018-09-09T18:53:10Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dt.DelaunayTriangulation.closestVertex(dt.Vertex,dt.Vertex,java.util.List<dt.Vertex>,dt.Vertex[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (v3 == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4901/buggy-version/src.dt.DelaunayTriangulation.java", "BodyUseAPI": [], "Fixed commit": "062c7336a672a6a7e3d5c780756ba14f04f7d283", "Url": "https://api.github.com/repos/LeeGlendenning/Quadrilateral-Delaunay-Triangulation", "Date": "2018-09-17T00:00:54Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x.getReview()) != null) { lapp.setReview(x.getReview().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2276/buggy-version/src.main.java.com.redhat.gps.pathfinder.web.api.CustomerAPIImpl.java", "BodyUseAPI": ["x.getReview().getId()", "com.redhat.gps.pathfinder.web.api.Applications.getReview()", "com.redhat.gps.pathfinder.web.api.ApplicationType.setReview(x.getReview().getId())"], "Fixed commit": "c51e578c2d3843ae17341739932c73cb04a40460", "Url": "https://api.github.com/repos/noelo/pathfinder", "Date": "2018-03-13T16:30:56Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["w.getLocation().getWorld().getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (worldname.equalsIgnoreCase(\"world\")) worldname = \"the overworld\"; else if (worldname.equalsIgnoreCase(\"world_nether\")) worldname = \"the nether\"; else if (worldname.equalsIgnoreCase(\"world_the_end\")) worldname = \"the end\"; else worldname = \"world \" + worldname;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6385/buggy-version/src.main.java.co.stashcat.navigation.ActionBarUpdater.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "aa8aefba7bfd56d5b3591d1109e65e60d29cedb1", "Url": "https://api.github.com/repos/StashCat/Navigation", "Date": "2018-07-29T20:53:48Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (enemies.get(i).collides(plyr)) { if ((((timeCounter) % 100) == 0) && ((enemies.size()) < 1)) { FlyingShooter newShooter = new FlyingShooter(1, 1, plyr.getHitbox()); newShooter.setX(50); newShooter.setY(50); enemies.add(newShooter); pane.getChildren().add(newShooter); } plyr.takeDamage(); if (!(plyr.isImmune())) { if ((enemies.get(i).decreaseHealth(plyr.getMeleeDmg())) <= 0) { hitList.add(enemies.get(i)); } statsPane.update(); plyr.setImmune(); java.lang.System.out.println(plyr); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7932/buggy-version/Game.java", "BodyUseAPI": ["java.util.ArrayList<Enemy>.get(int)", "java.util.ArrayList<Enemy>.add(FlyingShooter)", "java.util.ArrayList<Enemy>.add(enemies.get(i))", "Player.takeDamage()", "java.io.PrintStream.println(Player)", "java.util.ArrayList<Enemy>.size()", "Player.isImmune()", "enemies.get(i).decreaseHealth(plyr.getMeleeDmg())", "java.util.ArrayList<Enemy>.get(int)", "Player.getMeleeDmg()", "Player.getHitbox()", "Player.setImmune()"], "Fixed commit": "2fff9319105d4e4f9a9425f23658618009084d9d", "Url": "https://api.github.com/repos/tommyvnguyen/APCS-Game", "Date": "2018-05-25T02:59:58Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (food == null) { this.food = new java.util.ArrayList(); }else { this.food = new java.util.ArrayList(food); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7269/buggy-version/src.main.java.seedu.address.storage.XmlAdaptedOrder.java", "BodyUseAPI": [], "Fixed commit": "59ba41291ba6830e834c200e74393a1aadee7f6c", "Url": "https://api.github.com/repos/rrtheonlyone/main", "Date": "2018-10-02T12:04:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getCommands(event.getGuild(), false).trim().equals(\"\"))) builder.appendField(\"Module specific commands\", getCommands(event.getGuild(), false), true).withTimestamp(java.time.Instant.now()); else builder.appendField(\"Module specific commands (All enabled in PMs)\", getPMCommands(), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6670/buggy-version/src.redsli.me.wafflebot.modules.Help.java", "BodyUseAPI": ["redsli.me.wafflebot.util.WaffleEmbedBuilder.appendField(java.lang.String,java.lang.String,boolean)", "builder.appendField(\"Module specific commands\", getCommands(event.getGuild(), false), true).withTimestamp(java.time.Instant)", "sx.blah.discord.handle.impl.events.guild.channel.message.MessageReceivedEvent.getGuild()", "redsli.me.wafflebot.modules.Help.getCommands(event.getGuild(),boolean)"], "Fixed commit": "f60e3b9cc251c5986f809b1f2dbe1128f1165d2e", "Url": "https://api.github.com/repos/hallopiu/wafflebot", "Date": "2018-04-18T19:43:14Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(accountEdit.getText()))) && (!(android.text.TextUtils.isEmpty(passwordEdit.getText())))) { loginButton.setEnabled(java.lang.Boolean.TRUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8319/buggy-version/app.src.main.java.com.android.safedriving.LoginLayoutActivity.java", "BodyUseAPI": [], "Fixed commit": "003b78882e1a117a1756159e4d31da263db17697", "Url": "https://api.github.com/repos/PPcao/SafeDriving", "Date": "2018-04-10T13:47:51Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stack.hasItemMeta()) { org.bukkit.inventory.meta.ItemMeta meta = stack.getItemMeta(); meta.setDisplayName(null); if (meta instanceof org.bukkit.inventory.meta.Damageable) ((org.bukkit.inventory.meta.Damageable) (meta)).setDamage(0); data.stack.setItemMeta(meta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/363/buggy-version/src.main.java.ch.njol.skript.aliases.ItemData.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()"], "Fixed commit": "f5c36555dc64fc92235e6a08afb1681b4a57c13f", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2018-09-10T17:34:32Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(content.endsWith(\"\\n\"))) { content += \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7056/buggy-version/src.main.java.jp.aha.oretama.typoChecker.GitHubTemplate.java", "BodyUseAPI": [], "Fixed commit": "45ef3fc467bdd3deba987b98031a63fd8a98f570", "Url": "https://api.github.com/repos/aha-oretama/TypoFixer", "Date": "2018-04-24T15:29:00Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.main_activity_frame_layout, com.aaronhalbert.nosurfforreddit.fragments.ViewPagerFragment.newInstance(\"abc\", \"def\"), com.aaronhalbert.nosurfforreddit.MainActivity.TAG_VIEW_PAGER).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3347/buggy-version/app.src.main.java.com.aaronhalbert.nosurfforreddit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "23f041ef2bb432e289dd29814baf1d033ff9ba92", "Url": "https://api.github.com/repos/ajh3/NoSurfForReddit", "Date": "2018-09-08T22:15:48Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((arch != null) && (out.isEmpty())) && (arch.equals(Architecture.X64))) { log.trace(\"There are no URLs for X64 architecture. Trying to find URLs for X32 drivers.\"); out = filterByArch(list, Architecture.X32); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2795/buggy-version/src.main.java.io.github.bonigarcia.wdm.UrlFilter.java", "BodyUseAPI": [], "Fixed commit": "68becab881e038e3adce737d9be013a02e5501d5", "Url": "https://api.github.com/repos/sbtqa/webdrivermanager", "Date": "2018-01-24T07:54:38Z"},
{"Line": "=>1565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedGoalCellY == 0) { selectedGoalCellY = previousGoalCellX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3998/buggy-version/src.mobemu.utils.HCMM.java", "BodyUseAPI": [], "Fixed commit": "498583309e5058e1318eed45f2a06e2298485d65", "Url": "https://api.github.com/repos/raduciobanu/mobemu", "Date": "2018-06-06T14:17:41Z"},
{"Line": "=>1561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedGoalCellX == 0) { selectedGoalCellX = previousGoalCellX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3998/buggy-version/src.mobemu.utils.HCMM.java", "BodyUseAPI": [], "Fixed commit": "498583309e5058e1318eed45f2a06e2298485d65", "Url": "https://api.github.com/repos/raduciobanu/mobemu", "Date": "2018-06-06T14:17:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mil.nga.giat.geowave.service.rest.field.RequestParameters.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8341/buggy-version/services.rest.src.main.java.mil.nga.giat.geowave.service.rest.field.RequestParameters.java", "BodyUseAPI": [], "Fixed commit": "2f427d20ebe71e667a4f9482732314f363edd352", "Url": "https://api.github.com/repos/cjw5db/geowave", "Date": "2018-06-08T22:17:00Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accImageMapping) == null) { this.accTime = timestamp; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9241/buggy-version/client.legacy-android-client.app.src.main.java.edu.cmu.cs.gabriel.network.LogicalTime.java", "BodyUseAPI": [], "Fixed commit": "8c1a2901cad7841402270738554ab4cc727be50c", "Url": "https://api.github.com/repos/cmusatyalab/gabriel", "Date": "2017-11-04T18:27:40Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (owlapi != null) { ontosynonyms = owlapi.getSynonymLabelsbyPhrase(form, \"entity\"); for (java.lang.String syn : ontosynonyms) if (!(form.matches(((\"\\\\b(\" + synring) + \")\\\\b\")))) synring += \"|\" + syn; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7814/buggy-version/oto-common.src.main.java.edu.arizona.biosemantics.oto.common.ontologylookup.search.search.SynRingVariation.java", "BodyUseAPI": ["edu.arizona.biosemantics.oto.common.ontologylookup.search.owlaccessor.OWLAccessorImpl.getSynonymLabelsbyPhrase(java.lang.String,java.lang.String)"], "Fixed commit": "2e0d0cba68ee64163b3ae27de877a93bf7462e2e", "Url": "https://api.github.com/repos/biosemantics/oto", "Date": "2018-09-28T17:12:23Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((xyz.olivermartin.multichat.spigotbridge.NameManager.getInstance().stripAllFormattingCodes(args[1]).length()) > 20) && (!(sender.hasPermission(\"multichatbridge.nick.anylength\")))) { sender.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"Sorry your nickname is too long, max 20 characters! (Excluding format codes)\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3408/buggy-version/multichat.src.main.java.xyz.olivermartin.multichat.spigotbridge.SpigotComm.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"Sorry your nickname is too long, max 20 characters! (Excluding format codes)\"))"], "Fixed commit": "ba15c19499c6b2c3fc60c294fdce9685b11c8264", "Url": "https://api.github.com/repos/MultiChat/Development", "Date": "2018-09-23T18:32:53Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((xyz.olivermartin.multichat.spigotbridge.NameManager.getInstance().containsFormatCodes(args[1])) && (!(sender.hasPermission(\"multichatbridge.nick.format\")))) { sender.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"You do not have permission to use nicknames with format codes!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3408/buggy-version/multichat.src.main.java.xyz.olivermartin.multichat.spigotbridge.SpigotComm.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"You do not have permission to use nicknames with format codes!\"))"], "Fixed commit": "ba15c19499c6b2c3fc60c294fdce9685b11c8264", "Url": "https://api.github.com/repos/MultiChat/Development", "Date": "2018-09-23T18:32:53Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getCount()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3278/buggy-version/app.src.main.java.harkat.jussi.loppuharkkaproto.DatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "1523b319cca43e89052edaf0fa479f6343936a7a", "Url": "https://api.github.com/repos/mikkoyli/migreeni", "Date": "2018-03-23T10:18:35Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) && (!(getPackageManager().canRequestPackageInstalls()))) { final android.net.Uri finalUri = uri; startActivityForResult(new android.content.Intent(android.provider.Settings.ACTION_MANAGE_UNKNOWN_APP_SOURCES, android.net.Uri.parse((\"package:\" + (getPackageName())))), new com.shxhzhxx.sdk.activity.ResultListener() { @java.lang.Override public void onResult(int resultCode, android.content.Intent data) { if (resultCode == (RESULT_OK)) { promptInstall(finalUri); } } }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3759/buggy-version/library.src.main.java.com.shxhzhxx.sdk.activity.DownloadActivity.java", "BodyUseAPI": [], "Fixed commit": "72f8eefd38606a0dc481645651e19d8c3c7d3d25", "Url": "https://api.github.com/repos/shxhzhxx/AndroidSDK", "Date": "2018-10-11T04:13:41Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (processed.contains(vehicle)) continue; else if (Model.God.moveVehicle(vehicle, processed)) update = true; else { Model.God.logger.config((((((((\"Vehicle \" + (vehicle.getId())) + \" in vertex \") + (vehicle.getCur())) + (vehicle.getCur().getVertexType())) + \" couldn't move to \") + (vehicle.getNext())) + (vehicle.getNext().getVertexType()))); if (Model.God.mode.getPlanner().isDynamic()) vehicle.setNextNext(Model.God.getDestinationForNextTick(vehicle)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/1490/buggy-version/src.main.java.Model.God.java", "BodyUseAPI": ["Model.God.getDestinationForNextTick(Model.Vehicle)", "java.util.logging.Logger.config((((((((\"Vehicle \" + (vehicle.getId())) + \" in vertex \") + (vehicle.getCur())) + (vehicle.getCur().getVertexType())) + \" couldn't move to \") + (vehicle.getNext())) + (vehicle.getNext().getVertexType())))", "Model.Vehicle.getCur()", "Model.Vehicle.getId()", "vehicle.getCur().getVertexType()", "Model.Vehicle.getNext()", "Model.Vehicle.setNextNext(Model.Vertex)", "Model.Vehicle.getNext()", "Model.Vehicle.getCur()", "Model.God.moveVehicle(Model.Vehicle,java.util.Set<Model.Vehicle>)", "vehicle.getNext().getVertexType()"], "Fixed commit": "8847f2ec5b2786d37261a9e9da8fe32948054075", "Url": "https://api.github.com/repos/vonknio/veitrafikk", "Date": "2018-06-12T17:43:24Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newPerson) != null) { return ((\"person changed: \" + (oldPerson.toString())) + \" -> \") + (newPerson.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2663/buggy-version/src.main.java.seedu.address.commons.events.model.PersonChangedEvent.java", "BodyUseAPI": [], "Fixed commit": "f7e0cadb7c69495647d3859c4a235635d8fcdf0f", "Url": "https://api.github.com/repos/alyip98/ConTAct-alfred", "Date": "2018-10-31T20:50:00Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isShuttingDown)) { this.tryCancelScheduledAction(action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8898/buggy-version/samza-core.src.main.java.org.apache.samza.zk.ScheduleAfterDebounceTime.java", "BodyUseAPI": [], "Fixed commit": "5c2d9581e81bad9fcae04a4be8a5ab720d86f5ff", "Url": "https://api.github.com/repos/shanthoosh/samza", "Date": "2018-05-07T22:03:07Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.tue.util.QueueingFormulas.rho(java.lang.Double,double,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rho >= 1.0) { throw new nl.tue.bpmn.parser.BPMNParseException(((((\"Role '\" + role) + \"' has a utilization rate \") + rho) + \" greater than or equal to 1.0.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7715/buggy-version/simulator_engine.src.nl.tue.queueing.QueueingNetwork.java", "BodyUseAPI": [], "Fixed commit": "be2156a9dad71cef2d3ab9f0b07e89e8559f4774", "Url": "https://api.github.com/repos/rmdijkman/simulator", "Date": "2018-01-29T18:51:19Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) { assert (com.example.davea.mapping_gps.MapsActivity.locationManager) != null; com.example.davea.mapping_gps.MapsActivity.locationManager.requestLocationUpdates(\"gps\", com.example.davea.mapping_gps.MapsActivity.interval, 0, com.example.davea.mapping_gps.MapsActivity.locationListener); locationPermissionGranted = true; }else { android.widget.Toast.makeText(this, \"Need GPS permissions for app to function\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5605/buggy-version/app.src.main.java.com.example.davea.mapping_gps.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "e7925bcfa3b8fd6778ddc960a07484701f870833", "Url": "https://api.github.com/repos/sheppardd1/Mapping_GPS", "Date": "2018-07-06T01:38:19Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(secondaryTorpedoStore.isEmpty())) { firingSuccess = secondaryTorpedoStore.fire(1); wasPrimaryFiredLast = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2450/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "2feda4bfaaeab819703aa367a5a6b5f7a8141c1d", "Url": "https://api.github.com/repos/alialsaeedi19/ivt-lab", "Date": "2018-04-12T07:19:29Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(primaryTorpedoStore.isEmpty())) { firingSuccess = primaryTorpedoStore.fire(1); wasPrimaryFiredLast = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2450/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(int)"], "Fixed commit": "2feda4bfaaeab819703aa367a5a6b5f7a8141c1d", "Url": "https://api.github.com/repos/alialsaeedi19/ivt-lab", "Date": "2018-04-12T07:19:29Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a.delayTime) == 0) a.delayTime = 15;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4955/buggy-version/PMDMMOc.src.com.darkxell.client.mechanics.animation.Animations.java", "BodyUseAPI": [], "Fixed commit": "44aeb1e94ff924f7f89e2910ca3b6e15200ce51f", "Url": "https://api.github.com/repos/Darkxell/PMDMMO", "Date": "2018-08-29T07:39:17Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filled.isEmpty()) filled = \"[]\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8700/buggy-version/src.main.java.edu.stanford.epad.epadws.aim.AimReporter.java", "BodyUseAPI": [], "Fixed commit": "2980854ee587cd4e5fc3980c1968b7bb0b3de6bf", "Url": "https://api.github.com/repos/RubinLab/epad-ws", "Date": "2018-02-20T04:54:37Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasNext) { try { queryContext.getSearcher().getIndexReader().decRef(); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(\"Failed to release lucene index reader\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2050/buggy-version/lucene.src.main.java.com.orientechnologies.lucene.collections.OLuceneResultSet.java", "BodyUseAPI": [], "Fixed commit": "da77da047665f929092219e3811a5937de2d1742", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2018-08-09T12:50:57Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (board.getSquare(i, j).isConstant()) { g.setColor(java.awt.Color.RED); g.drawString(((board.getIndex(i, j)) + \"\"), (i * (squareSize)), ((j + 1) * (squareSize))); }else { g.setColor(java.awt.Color.BLUE); g.drawString(((board.getIndex(i, j)) + \"\"), (i * (squareSize)), ((j + 1) * (squareSize))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2906/buggy-version/src.cs3331.sudoku.graphics2d.BoardPanel.java", "BodyUseAPI": ["java.awt.Graphics.drawString(((board.getIndex(i, j)) + \"\"),int,int)", "java.awt.Graphics.drawString(((board.getIndex(i, j)) + \"\"),int,int)", "cs3331.sudoku.model.Board.getIndex(int,int)", "cs3331.sudoku.model.Board.getIndex(int,int)"], "Fixed commit": "d11b929c192f6d425491f2ae972776a13dc3ab14", "Url": "https://api.github.com/repos/asdiamond/cs3331.sudoku", "Date": "2018-04-16T05:12:09Z"},
{"Line": "=>2192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.BitSet.clone()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (test.isEmpty()) { allInOneBSCC = b; break; }else if ((test.cardinality()) < numInit) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4888/buggy-version/prism.src.explicit.DTMCModelChecker.java", "BodyUseAPI": ["java.util.BitSet.cardinality()"], "Fixed commit": "28a3c02a89ec5c8997b09271aa756a123bf007be", "Url": "https://api.github.com/repos/merkste/prism", "Date": "2018-02-28T10:48:30Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.getInt()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ipv4 != 0) { result.parseIp(new byte[]{ ((byte) ((ipv4 >> 24) & 255)), ((byte) ((ipv4 >> 16) & 255)), ((byte) ((ipv4 >> 8) & 255)), ((byte) (ipv4 & 255)) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5274/buggy-version/zipkin2.src.main.java.zipkin2.internal.ThriftEndpointCodec.java", "BodyUseAPI": ["Endpoint.Builder.parseIp(byte[])"], "Fixed commit": "793ac883879030048f1b6f8f8ac64405339dca05", "Url": "https://api.github.com/repos/openzipkin/zipkin", "Date": "2018-07-11T11:37:43Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (target != null) target.getLaunch().terminate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9691/buggy-version/plugins.org.yakindu.sct.simulation.ui.src.org.yakindu.sct.simulation.ui.dialogs.SimulationLaunchErrorDialog.java", "BodyUseAPI": ["target.getLaunch().terminate()", "org.eclipse.debug.core.model.IDebugTarget.getLaunch()"], "Fixed commit": "52be068829f9b6377905d133b1a3d07c36e4bd21", "Url": "https://api.github.com/repos/Yakindu/statecharts", "Date": "2018-06-01T07:48:20Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (target != null) { target.getLaunch().terminate(); org.eclipse.debug.core.ILaunchConfiguration launchConfiguration = target.getLaunch().getLaunchConfiguration(); org.eclipse.debug.ui.DebugUITools.launch(launchConfiguration, target.getLaunch().getLaunchMode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9691/buggy-version/plugins.org.yakindu.sct.simulation.ui.src.org.yakindu.sct.simulation.ui.dialogs.SimulationLaunchErrorDialog.java", "BodyUseAPI": ["org.eclipse.debug.core.model.IDebugTarget.getLaunch()", "org.eclipse.debug.ui.DebugUITools.launch(org.eclipse.debug.core.ILaunchConfiguration,target.getLaunch().getLaunchMode())", "target.getLaunch().getLaunchConfiguration()", "org.eclipse.debug.core.model.IDebugTarget.getLaunch()", "target.getLaunch().getLaunchMode()", "target.getLaunch().terminate()", "org.eclipse.debug.core.model.IDebugTarget.getLaunch()"], "Fixed commit": "52be068829f9b6377905d133b1a3d07c36e4bd21", "Url": "https://api.github.com/repos/Yakindu/statecharts", "Date": "2018-06-01T07:48:20Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showLog) { android.util.Log.d(logTag, ((url) + \" --> onUnsubscribe \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4712/buggy-version/websocket.src.main.java.com.dhh.websocket.RxWebSocketUtil.java", "BodyUseAPI": [], "Fixed commit": "0da8c9c76b38794b891b8a9417c6eac6dfe4d14b", "Url": "https://api.github.com/repos/dhhAndroid/RxWebSocket", "Date": "2018-04-13T02:37:15Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value instanceof java.util.Map) || (value instanceof java.util.List)) { value = com.alibaba.fastjson.JSON.toJSONString(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2389/buggy-version/src.main.java.com.chineseall.orm.storage.MysqlObjectEngine.java", "BodyUseAPI": ["com.alibaba.fastjson.JSON.toJSONString(java.lang.Object)"], "Fixed commit": "bca93e06097fcd562d0e558856c95690c58de9d4", "Url": "https://api.github.com/repos/gfthr/fastorm", "Date": "2018-03-06T11:50:14Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((radioGroup.getCheckedRadioButtonId()) == (-1)) { }else { int radioButtonAnsweredId = radioGroup.getCheckedRadioButtonId(); android.widget.RadioButton checkedButton = radioGroup.findViewById(radioButtonAnsweredId); if ((checkedButton.getId()) == (radioButtonOne.getId())) { score++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2202/buggy-version/app.src.main.java.com.example.android.ab_userinput_project.MainActivity.java", "BodyUseAPI": ["android.widget.RadioGroup.getCheckedRadioButtonId()", "android.widget.RadioGroup.findViewById(int)"], "Fixed commit": "d53ad56dc0ff0960216a7fa041ce205af74ef929", "Url": "https://api.github.com/repos/FelipeJaimes/AB_UserInput_Project", "Date": "2018-01-30T14:59:17Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player) != null) && ((event.getPlayer()) != null)) { if (player.getUniqueId().equals(event.getPlayer().getUniqueId())) { if (com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().isAutoKillInvs()) { destroy(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/2826/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Inventory.BInventory.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerQuitEvent.getPlayer()", "player.getUniqueId().equals(event.getPlayer().getUniqueId())", "event.getPlayer().getUniqueId()"], "Fixed commit": "417fb3050afe13e1ac3e978dc64ab0adac02d33b", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-01-19T21:43:52Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.talend.commons.ui.runtime.CommonUIPlugin.isFullyHeadless()) { org.talend.designer.maven.tools.AggregatorPomsHelper.buildAndInstallCodesProject(monitor, ERepositoryObjectType.ROUTINES, false); if (org.talend.core.model.process.ProcessUtils.isRequiredPigUDFs(null)) { org.talend.designer.maven.tools.AggregatorPomsHelper.buildAndInstallCodesProject(monitor, ERepositoryObjectType.PIG_UDF, false); } if (org.talend.core.model.process.ProcessUtils.isRequiredBeans(null)) { org.talend.designer.maven.tools.AggregatorPomsHelper.buildAndInstallCodesProject(monitor, org.talend.core.model.repository.ERepositoryObjectType.valueOf(\"BEANS\"), false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6406/buggy-version/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.maven.MavenJavaProcessor.java", "BodyUseAPI": [], "Fixed commit": "0661d9ec662917fdcae3273cf019d30656f4b3f8", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-02-27T02:09:06Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/8177/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "d74c51ea334b8286acf48c88e15dcd375f7bf308", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (FOV[curr]) { curUser.sprite.parent.addToBack(new com.shatteredpixel.shatteredpixeldungeon.effects.CheckedCell(curr)); if (Dungeon.level.secret[curr]) { Dungeon.level.discover(curr); if (Dungeon.level.heroFOV[curr]) { com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene.discoverTile(curr, Dungeon.level.map[curr]); com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfMagicMapping.discover(curr); noticed = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3126/buggy-version/core.src.main.java.com.shatteredpixel.shatteredpixeldungeon.items.stones.StoneOfClairvoyance.java", "BodyUseAPI": ["curUser.sprite.parent.addToBack(com.shatteredpixel.shatteredpixeldungeon.effects.CheckedCell)", "com.shatteredpixel.shatteredpixeldungeon.items.scrolls.ScrollOfMagicMapping.discover(int)", "Dungeon.level.discover(int)", "com.shatteredpixel.shatteredpixeldungeon.scenes.GameScene.discoverTile(int,Dungeon.level.map[curr])"], "Fixed commit": "f8b01033eeaec10b319cf510f287b8c7ee8272a6", "Url": "https://api.github.com/repos/Leppan/prismatic-pixel-dungeon", "Date": "2018-06-08T05:09:03Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(enumContext.getEnumType().getLiterals().isEmpty())) { combo.setText(enumContext.getEnumType().getLiterals().get(0).getName()); for (eu.hyvar.dataValues.HyEnumLiteral literal : enumContext.getEnumType().getLiterals()) { combo.add(literal.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4271/buggy-version/plugins.de.darwinspl.feature.graphical.configurator.src.de.darwinspl.feature.graphical.configurator.dialogs.DwContextInformationDialog.java", "BodyUseAPI": ["org.eclipse.swt.custom.CCombo.setText(enumContext.getEnumType().getLiterals().get(0).getName())", "enumContext.getEnumType().getLiterals().get(0).getName()", "eu.hyvar.context.HyContextualInformationEnum.getEnumType()", "enumContext.getEnumType().getLiterals()", "eu.hyvar.context.HyContextualInformationEnum.getEnumType()", "enumContext.getEnumType().getLiterals().get(int)", "enumContext.getEnumType().getLiterals()"], "Fixed commit": "6fa11f43135da5ec69d5abe3ac51082a4484c59e", "Url": "https://api.github.com/repos/DarwinSPL/DarwinSPL", "Date": "2018-04-11T13:56:55Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstTime) graphicsPaint.setColor(Color.BLUE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/5991/buggy-version/Graphics.app.src.main.java.com.example.david.graphics.GraphicsView.java", "BodyUseAPI": [], "Fixed commit": "119a18a0873a0b88bd47e52ba0b14960dcb88169", "Url": "https://api.github.com/repos/Phylanx/CST238SRS03", "Date": "2018-05-12T15:09:47Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((answer.getTextChoice()) == 1) { label = new com.hospital.service.impl.Label(col, row, answer.getTextChoiceContent()); sheet.addCell(label); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6905/buggy-version/hospital-service.src.main.java.com.hospital.service.impl.PatientServiceImpl.java", "BodyUseAPI": ["com.hospital.service.impl.Answer.getTextChoiceContent()"], "Fixed commit": "48c537f6b39e2e7ba8c5528af76d9508389be711", "Url": "https://api.github.com/repos/lht142934/HospitalSystem", "Date": "2018-03-18T02:43:37Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mWordBreak) != null) && (\"break-all\".equals(mWordBreak))) { spanned = createSpanned(breakAllText(mText)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7015/buggy-version/android.sdk.src.main.java.com.taobao.weex.dom.WXTextDomObject.java", "BodyUseAPI": [], "Fixed commit": "b3cc20f557330826a0a00fe0cd92328caedbf45b", "Url": "https://api.github.com/repos/Yanjiie/incubator-weex", "Date": "2018-01-16T03:29:55Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((strokeValue) != (at.crimsonbit.nodesystem.gui.GGraphScene.ZoomHandler.MIN_STROKE)) strokeWidth(strokeValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4800/buggy-version/src.main.java.at.crimsonbit.nodesystem.gui.GGraphScene.java", "BodyUseAPI": [], "Fixed commit": "5022a177ffc9be279acd875d8914b2289d045b3e", "Url": "https://api.github.com/repos/Crimsonbit/NodeSystem", "Date": "2018-04-18T19:07:03Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(functionName.equals(\"\"))) { codeWriter.writeGoto(((functionName + \"$\") + (parser.arg1()))); }else { codeWriter.writeGoto(parser.arg1()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/631/buggy-version/src.VMTranslator.java", "BodyUseAPI": ["CodeWriter.writeGoto(((functionName + \"$\") + (parser.arg1())))"], "Fixed commit": "dbe9166325616bf7efe0e2a056f278be8a41c02e", "Url": "https://api.github.com/repos/dutsky/VMTranslator", "Date": "2018-04-04T20:50:38Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.terracotta.config.TCConfigurationParser.WILDCARD_IP.equals(server.getBind()))) { server.setHost(server.getBind()); }else { server.setHost(\"%i\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7587/buggy-version/tc-config-parser.src.main.java.org.terracotta.config.TCConfigurationParser.java", "BodyUseAPI": ["org.terracotta.config.Server.getBind()", "org.terracotta.config.Server.setHost(java.lang.String)", "org.terracotta.config.Server.setHost(server.getBind())"], "Fixed commit": "806bd114523b16841b66215068ad30680e052a4f", "Url": "https://api.github.com/repos/mobasherul/terracotta-configuration", "Date": "2018-08-07T11:34:40Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rangeCursors[i]) != null) { rangeCursors[i].close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/3334/buggy-version/hyracks-fullstack.hyracks.hyracks-storage-am-lsm-common.src.main.java.org.apache.hyracks.storage.am.lsm.common.impls.LSMIndexSearchCursor.java", "BodyUseAPI": ["rangeCursors[i].close()"], "Fixed commit": "fd994ddf79b52cd2b0af61904d5c45c8a16af448", "Url": "https://api.github.com/repos/luochen01/asterixdb", "Date": "2018-07-05T16:58:24Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dateTag) == (etStartDate.getTag())) { etStartDate.setText(dateForEditText); }else if ((dateTag) == (etEndtDateP.getTag())) { etEndtDateP.setText(dateForEditText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9626/buggy-version/app.src.main.java.com.example.med_manager.med_manager.ui.AddMedActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "08ed4495fa7f6bde2a6e166f877a973efcd76034", "Url": "https://api.github.com/repos/salabson/Med-Manager", "Date": "2018-04-17T08:46:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userRepo.count()) == 0) { user.setAdministrator(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/414/buggy-version/src.main.java.com.runcible.abbot.service.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "fad7b955878923dcdffc76e69722629c3de1c77b", "Url": "https://api.github.com/repos/tom-biskupic/Abbot", "Date": "2018-03-09T12:37:25Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kelfan.utillibrary.Xmler.set(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(x.getContent().equals(\"\"))) { java.lang.String s = java.lang.String.format(\"([^%s]+)\", delimiter, delimiter); this.dataList = com.kelfan.utillibrary.ListString.set(x.getRemain()).getPatternList(s); this.dataList.add(x.setXmlContent()); }else if (!(x2.getContent().equals(\"\"))) { this.dataList = com.kelfan.utillibrary.ListString.set(x2.getRemain()).getPatternList(this.listPattern); this.dataList.add(x2.setXmlContent()); }else { this.dataList = com.kelfan.utillibrary.ListString.set(this.textContent).setDelimiter(delimiter).getPatternList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/4361/buggy-version/EditorA.editfiler.src.main.java.com.kelfan.editfiler.LineRecyclerViewAdapter.java", "BodyUseAPI": ["com.kelfan.utillibrary.Xmler.getRemain()", "com.kelfan.utillibrary.ListString.add(x.setXmlContent())", "com.kelfan.utillibrary.Xmler.setXmlContent()", "com.kelfan.utillibrary.ListString.set(x.getRemain())", "com.kelfan.utillibrary.ListString.set(x.getRemain()).getPatternList(java.lang.String)"], "Fixed commit": "a5fcab2dd4f9aa4f7e136fdc3f244f1b8398c3b4", "Url": "https://api.github.com/repos/kelfan/EditorA", "Date": "2018-05-17T13:34:21Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7022/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "c206ecdf43becdafc0623c27dae406ef0643e738", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["httpResponse.getStatusLine().getStatusCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ApiConfiguration.HTTP_OK.equals(httpStatus)) { java.util.List<org.phenotips.remote.common.internal.RemotePatientSimilarityView> parsedResults = this.getSimilarityResults(request); this.notificationManager.saveOutgoingMatches(parsedResults, patientId, request.getRemoteServerId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/9018/buggy-version/core.client.src.main.java.org.phenotips.remote.client.internal.DefaultRemoteMatchingService.java", "BodyUseAPI": [], "Fixed commit": "b28d7d1616e9b5dc4b2e65184ab0e07d05b5028c", "Url": "https://api.github.com/repos/phenotips/remote-matching", "Date": "2018-03-08T20:40:37Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scanner.hasNextLine()) head = scanner.nextLine();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/6647/buggy-version/src.stock.common.util.data.CSVDownloader.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "289f83d1b2d40fee133bbf084a47c969b066d03f", "Url": "https://api.github.com/repos/georgeCog/Stock_Spec", "Date": "2018-03-06T16:56:12Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isIf) { int i = 0; if (readfile.ReadFile.levelsAndLines.isEmpty()) { }else { if ((readfile.ReadFile.program.get(lineCount).getCode().get(0).getToken().equals(\"if\")) && (thisLevel == (readfile.ReadFile.levelsAndLines.get(0).getLevel()))) { lineCount++; lineCount = readfile.ReadFile.levelsAndLines.get(0).getLine(); }else if ((readfile.ReadFile.program.get(lineCount).getCode().get(0).getToken().equals(\"orif\")) && (thisLevel != (readfile.ReadFile.levelsAndLines.get(0).getLevel()))) { lineCount++; for (; !(\"end\".equals(readfile.ReadFile.program.get(readfile.ReadFile.levelsAndLines.get(0).getLine()).getCode().get(0).getToken()));) { readfile.ReadFile.levelsAndLines.remove(0); lineCount = readfile.ReadFile.levelsAndLines.get(0).getLine(); } }else if ((readfile.ReadFile.program.get(lineCount).getCode().get(0).getToken().equals(\"else\")) && (thisLevel != (readfile.ReadFile.levelsAndLines.get(0).getLevel()))) { lineCount++; for (; !(\"end\".equals(readfile.ReadFile.program.get(readfile.ReadFile.levelsAndLines.get(0).getLine()).getCode().get(0).getToken()));) { readfile.ReadFile.levelsAndLines.remove(0); lineCount = readfile.ReadFile.levelsAndLines.get(0).getLine(); } }else { java.lang.System.out.println((\"WHAT\" + (readfile.ReadFile.levelsAndLines.get(0).getLevel()))); for (i = readfile.ReadFile.program.get(lineCount).getIndex(); i < (readfile.ReadFile.levelsAndLines.get(0).getLine()); i++) { parser.Iffer.execute(((java.util.ArrayList<readfile.tokenizer.Token>) (readfile.ReadFile.program.get(i).getCode()))); lineCount++; java.lang.System.out.println(lineCount); } } } }else if (isLoop) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7167/buggy-version/readFile.src.lineexecution.LineExecution.java", "BodyUseAPI": [], "Fixed commit": "f72e2032d8991cc20445a42fef9b73beaddced13", "Url": "https://api.github.com/repos/bojoluis21798/PL-Project", "Date": "2018-04-01T20:22:06Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parser.Iffer.ifSTMT(((java.util.ArrayList<readfile.tokenizer.Token>) (readfile.ReadFile.program.get(lineCount).getCode())))) { for (i = (readfile.ReadFile.program.get(lineCount).getIndex()) + 1; i < (readfile.ReadFile.loopTracker.get(0).getLine()); i++) { java.lang.System.out.println(i); parser.Iffer.execute(((java.util.ArrayList<readfile.tokenizer.Token>) (readfile.ReadFile.program.get(i).getCode()))); } lineCount++; }else { lineCount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V157/7167/buggy-version/readFile.src.lineexecution.LineExecution.java", "BodyUseAPI": ["parser.Iffer.execute(((java.util.ArrayList<readfile.tokenizer.Token>) (readfile.ReadFile.program.get(i).getCode())))", "lineexecution.LineExecution.get(int)", "readfile.ReadFile.program.get(lineCount).getIndex()", "lineexecution.LineExecution.get(int)", "readfile.ReadFile.program.get(i).getCode()"], "Fixed commit": "f72e2032d8991cc20445a42fef9b73beaddced13", "Url": "https://api.github.com/repos/bojoluis21798/PL-Project", "Date": "2018-04-01T20:22:06Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.moly.hooyee.model.RouteEntity>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (entity != null) { android.content.Intent intent = new android.content.Intent(); intent.setComponent(new android.content.ComponentName(context, entity.getClassName())); context.startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3247/buggy-version/lib-api.src.main.java.com.moly.hooyee.route.api.EasyRoute.java", "BodyUseAPI": ["com.moly.hooyee.model.RouteEntity.getClassName()", "android.content.Intent.setComponent(android.content.ComponentName)"], "Fixed commit": "e8dc85f552c68220752fd5a6828cb072fd0ecbbd", "Url": "https://api.github.com/repos/maohuiApp/HEasyRoute", "Date": "2018-08-13T09:42:28Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentLine < (mOutLoopLine)) { mOutputRelated.put(var, false); }else { if (mOutputRelated.containsKey(ass_s)) mOutputRelated.put(ass_s, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3683/buggy-version/src.jRecover.soot.StatementResolver.java", "BodyUseAPI": [], "Fixed commit": "3af4f9f43e43c8b8cd185febe8dced86f85d1ba5", "Url": "https://api.github.com/repos/spencerwuwu/J-ReCoVer", "Date": "2018-10-02T03:35:08Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentLine < (mOutLoopLine)) { if (mOutputRelated.containsKey(var)) mOutputRelated.put(var, false); }else { if (mOutputRelated.containsKey(ass_s)) mOutputRelated.put(ass_s, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3683/buggy-version/src.jRecover.soot.StatementResolver.java", "BodyUseAPI": [], "Fixed commit": "3af4f9f43e43c8b8cd185febe8dced86f85d1ba5", "Url": "https://api.github.com/repos/spencerwuwu/J-ReCoVer", "Date": "2018-10-02T03:35:08Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (username.isEmpty()) { request.getRequestDispatcher(\"/login.jsp\").forward(request, response); }else { request.getRequestDispatcher(\"/index.jsp\").forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3384/buggy-version/src.account.CreateClientServlet.java", "BodyUseAPI": [], "Fixed commit": "743d265691a7130110047ce568ec7ec55b128d6a", "Url": "https://api.github.com/repos/erictossell/SixSSolutions", "Date": "2018-04-18T19:45:12Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4145/buggy-version/code.UserPlayer.java", "BodyUseAPI": [], "Fixed commit": "203bad53c658d82b74c4a43a471d2aff9716e9e2", "Url": "https://api.github.com/repos/RoaryStar/Hearts", "Date": "2018-01-22T03:22:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != entryGroup) { this.shareEntryGroup = new org.linagora.linshare.mongo.entities.mto.ShareEntryGroupMto(entryGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3924/buggy-version/src.main.java.org.linagora.linshare.mongo.entities.logs.ShareEntryAuditLogEntry.java", "BodyUseAPI": [], "Fixed commit": "f2bfd80fffa469996d3650f845c254612bde6bb2", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2018-10-16T12:10:03Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (b == null) b = \"name\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7518/buggy-version/src.java.servlet.Search.java", "BodyUseAPI": [], "Fixed commit": "d649b6cac3f624ec3551399f6e10eb64cb528565", "Url": "https://api.github.com/repos/Beppolt/Guappo", "Date": "2018-01-14T20:07:53Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ku.getRank()) == null) && ((ku.getKingdom()) != null)) { setRank(ku, ku.getKingdom().getDefaultRank()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5157/buggy-version/src.main.java.com.igufguf.kingdomcraft.KingdomCraftApi.java", "BodyUseAPI": ["com.igufguf.kingdomcraft.objects.KingdomUser.getKingdom()", "com.igufguf.kingdomcraft.KingdomCraftApi.setRank(com.igufguf.kingdomcraft.objects.KingdomUser,ku.getKingdom().getDefaultRank())", "ku.getKingdom().getDefaultRank()"], "Fixed commit": "7556b13859e709cbc844796fe7634cb0cffe5083", "Url": "https://api.github.com/repos/jorisguffens/KingdomCraft", "Date": "2018-05-25T18:19:59Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index + 1) < (now.length)) ++index;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8373/buggy-version/log-util.src.main.java.com.daqsoft.log.util.share.ThreadLocalUtil.java", "BodyUseAPI": [], "Fixed commit": "a33a448b2afef9af889827cb24ccc125d4a17416", "Url": "https://api.github.com/repos/ShawnShoper/log", "Date": "2018-04-20T05:50:33Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((genetic[i][j]) == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9141/buggy-version/project2.src.NQueen.java", "BodyUseAPI": [], "Fixed commit": "b3db19cae05b9bf2dd9c9816e33476a69c4a7cd6", "Url": "https://api.github.com/repos/uPaymeiFixit/cpp-cs420-artificial-intelligence", "Date": "2018-02-22T00:12:47Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.breadwallet.tools.security.BRKeyStore.getPhrase(android.app.Activity,BRConstants.SHOW_PHRASE_REQUEST_CODE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (raw == null) { com.breadwallet.tools.manager.BRReportsManager.reportBug(new java.lang.NullPointerException(\"onPhraseCheckAuth: getPhrase = null\"), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1781/buggy-version/app.src.main.java.com.breadwallet.tools.security.PostAuth.java", "BodyUseAPI": [], "Fixed commit": "b32305a68e3dc2006d1dd8b98642728c3ffee483", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-12-05T03:15:33Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.CharSequence.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n < kmerSize) return new java.lang.CharSequence[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9907/buggy-version/src.ngsep.sequences.KmersCounter.java", "BodyUseAPI": [], "Fixed commit": "5b5f55e86ef8bdfc57455364309cfb2296210da0", "Url": "https://api.github.com/repos/NGSEP/NGSEPcore", "Date": "2018-04-06T03:32:15Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iterator > 10) { return \"?\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6306/buggy-version/src.com.netcracker.java2sql.ActionHandler.java", "BodyUseAPI": [], "Fixed commit": "ce68dc3f799a02142ba320ee12b097ea26641272", "Url": "https://api.github.com/repos/garbarick/SBJava2SQL", "Date": "2018-10-08T18:03:15Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dataSnapshot.hasChildren())) { android.widget.Toast.makeText(this, \"Customer has confirmed delivery!\", Toast.LENGTH_LONG).show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7132/buggy-version/app.src.main.java.malcolmmaima.dishi.View.ViewRequestItems.java", "BodyUseAPI": [], "Fixed commit": "ee14ad11313ce5b76bc53a324f93857b8cd7d3c6", "Url": "https://api.github.com/repos/malcolmmaima/Dishi", "Date": "2018-09-24T03:00:10Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayingIndex) < (showPlaybackModels.size())) { btnNextContent.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6003/buggy-version/app.src.main.java.io.github.varunj.sangoshthi_ivr.activities.ShowActivity.java", "BodyUseAPI": [], "Fixed commit": "a3a0e900e037e0be02fd54baf636f44afb793e54", "Url": "https://api.github.com/repos/deepak15013/Sangoshthi-Phase-2", "Date": "2018-05-28T14:31:41Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSame()) { person.setUserPassword(this.password); personService.updatePerson(person); javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_INFO, \"Successfully changed!\", \"Successfully changed!\")); }else { javax.faces.context.FacesContext.getCurrentInstance().addMessage(graphValidator.getClientId(), new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_ERROR, \"Password and confirm password value don't match\", \"Password and confirm password value don't match\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7064/buggy-version/server.src.main.java.org.gluu.oxtrust.action.PasswordValidationAction.java", "BodyUseAPI": [], "Fixed commit": "9db13c16e325502f789123ee7548769bda457de1", "Url": "https://api.github.com/repos/GluuFederation/oxTrust", "Date": "2018-08-21T08:10:09Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nikr.eve.jeveasset.data.settings.Settings.get().getOwners().get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { name = net.nikr.eve.jeveasset.i18n.GuiShared.get().unknownOwner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2880/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.shared.menu.JMenuUI.java", "BodyUseAPI": [], "Fixed commit": "c1ed225b274935f45178a84fa5232235322912a6", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-09-29T11:47:44Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(owners.isEmpty())) { owner = owners.get(0); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2880/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.shared.menu.JMenuUI.java", "BodyUseAPI": ["java.util.List<net.nikr.eve.jeveasset.gui.shared.menu.JMenuUI.Owner>.get(int)"], "Fixed commit": "c1ed225b274935f45178a84fa5232235322912a6", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2018-09-29T11:47:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == lockKeyPrefix) { this.lockKeyPrefix = \"ZzLock\"; }else { this.lockKeyPrefix = lockKeyPrefix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/180/buggy-version/zzlock.src.main.java.top.zzspace.zzlock.ZzLock.java", "BodyUseAPI": [], "Fixed commit": "d6f6806e4b8a177e9eba7f719fcfb55bed33f549", "Url": "https://api.github.com/repos/challengezhou/zzlock-project", "Date": "2018-09-26T08:01:24Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyword == (bayern.steinbrecher.green2.connection.scheme.SupportedDatabases.Keywords.DEFAULT)) { assert (!(keywords.contains(bayern.steinbrecher.green2.connection.scheme.SupportedDatabases.Keywords.NOT_NULL))) || ((column.getDefaultValue()) != null) : \"The keyword NOT NULL is specified but the value for DEFAULT is null\"; keywordString += (\" '\" + (column.getDefaultValue())) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5675/buggy-version/EnvironmentHandler.src.main.java.bayern.steinbrecher.green2.connection.scheme.SupportedDatabases.java", "BodyUseAPI": [], "Fixed commit": "ae4af840a720e026516360bc35a80096c1d9c82e", "Url": "https://api.github.com/repos/TrackerSB/Green2", "Date": "2018-01-18T14:42:01Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (df.exists()) { files.add(df); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6158/buggy-version/plugin.mailbomber.MailBomberTask.java", "BodyUseAPI": ["java.util.ArrayList<java.io.File>.add(java.io.File)"], "Fixed commit": "bc28138f8dd4224433ee5de660c28515831b1a4d", "Url": "https://api.github.com/repos/terry1013/Alesia", "Date": "2018-04-25T02:28:00Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ees) != null) { ees.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5285/buggy-version/modAionImpl.src.org.aion.zero.impl.pow.AionPoW.java", "BodyUseAPI": [], "Fixed commit": "9e70959110f455053b56602b47b7c8ab49b20dda", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-03-30T21:03:07Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cn.com.yikangbao.untils.common.StringUtil.isEmpty(subscribeEvent.getEventKey()))) { event.addProperty(\"eventKey\", subscribeEvent.getEventKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4875/buggy-version/ins-services.svc-service-wechat.src.main.java.cn.com.yikangbao.service.wechat.event.impl.WechatEventServiceImpl.java", "BodyUseAPI": ["cn.com.yikangbao.entity.common.Event.addProperty(java.lang.String,subscribeEvent.getEventKey())", "cn.com.yikangbao.entity.wechat.event.WechatSubscribeEvent.getEventKey()"], "Fixed commit": "8500137de05d49d8c7e9e475391e9f183b055480", "Url": "https://api.github.com/repos/juyecys/ykb-web", "Date": "2018-02-27T03:08:12Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(singleOrMulti.equals(\"Multi\"))) { timerForGame.cancel(); timerForGame = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8556/buggy-version/MemorizeGame.app.src.main.java.com.hamiti.florim.memorizegame.activities.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "53cda7a2366017f3c04ccc0c475f98146bd9c0aa", "Url": "https://api.github.com/repos/florim14/MemorizeGame", "Date": "2018-05-28T23:40:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.isSuccess()) { mRegisterAppListener.registerApp(result); android.util.Log.d(com.reversecoder.gcm.task.RegisterApp.TAG, (\"success response: \" + (result.getResult().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/55/buggy-version/gcm.src.main.java.com.reversecoder.gcm.task.RegisterApp.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,(\"success response: \" + (result.getResult().toString())))", "com.reversecoder.gcm.listener.RegisterAppListener.registerApp(HttpRequestManager.HttpResponse)", "result.getResult().toString()", "HttpRequestManager.HttpResponse.getResult()"], "Fixed commit": "eb4d3981da7ad9bfd1f6ca250b2eef0f24858090", "Url": "https://api.github.com/repos/codegarage-tech/cg-quote", "Date": "2018-02-07T13:13:17Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((userOverallScore) >= (WINNING_SCORE)) || ((computerOverallScore) >= (WINNING_SCORE))) { announceWinner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6676/buggy-version/app.src.main.java.com.demouser.scarnesdice.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3c8fd2dc52432a77e997134778fc559dc93389fe", "Url": "https://api.github.com/repos/sdepew97/Scarne-s-Dice", "Date": "2018-01-18T16:38:59Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gamitour.util.Accion.ejecutar(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ejecutar.equals(\"perfil.jsp\")) { response.sendRedirect(((request.getContextPath()) + \"/content/user/perfil.jsp\")); }else if (ejecutar.equals(\"misPrem\")) { response.sendRedirect(((request.getContextPath()) + \"/content/user/misPremios.jsp\")); }else { despachador.forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9425/buggy-version/src.com.gamitour.controlador.Controller.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "f1301e5df746ec7bc43812e57454e3f0a0751af4", "Url": "https://api.github.com/repos/ivanrv/gamiastur", "Date": "2018-06-12T22:01:07Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEditTextBody.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((android.text.TextUtils.isEmpty(body)) || ((body.trim().length()) == 0)) { android.widget.Toast.makeText(this, \"Sorry, Body cannot be Empty\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6461/buggy-version/app.src.main.java.com.journalapp.michaelsinkolongo.journalapp.AddDiaryEntry.java", "BodyUseAPI": [], "Fixed commit": "035a7173f4d3144586d45c86409bb9e010322b06", "Url": "https://api.github.com/repos/Kundananji/JournalApp", "Date": "2018-07-01T21:20:20Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEditTextTitle.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((android.text.TextUtils.isEmpty(title)) || ((title.trim().length()) == 0)) { android.widget.Toast.makeText(this, \"Sorry, Title cannot be Empty\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6461/buggy-version/app.src.main.java.com.journalapp.michaelsinkolongo.journalapp.AddDiaryEntry.java", "BodyUseAPI": [], "Fixed commit": "035a7173f4d3144586d45c86409bb9e010322b06", "Url": "https://api.github.com/repos/Kundananji/JournalApp", "Date": "2018-07-01T21:20:20Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (variant.getAlternateAlleles().stream().anyMatch(v.getAlternateAlleles()::contains)) { snpScores.add(java.lang.Double.parseDouble(((java.lang.String) (variant.getAttribute(infoKey))))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/606/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.walkers.vqsr.FilterVariantTranches.java", "BodyUseAPI": ["htsjdk.variant.variantcontext.VariantContext.getAttribute(java.lang.String)", "java.util.List<java.lang.Double>.add(double)", "java.lang.Double.parseDouble(((java.lang.String) (variant.getAttribute(infoKey))))"], "Fixed commit": "746af8c8256bb2feb8ad61e39d592ccd97082861", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2018-05-26T12:06:28Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((snpScores.size()) == 0) || ((indelScores.size()) == 0)) { throw new org.broadinstitute.hellbender.exceptions.GATKException(\"Resources must contain matching SNPs and indels.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/606/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.walkers.vqsr.FilterVariantTranches.java", "BodyUseAPI": [], "Fixed commit": "746af8c8256bb2feb8ad61e39d592ccd97082861", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2018-05-26T12:06:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (variant.getAlternateAlleles().stream().anyMatch(v.getAlternateAlleles()::contains)) { indelScores.add(java.lang.Double.parseDouble(((java.lang.String) (variant.getAttribute(infoKey))))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/606/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.walkers.vqsr.FilterVariantTranches.java", "BodyUseAPI": ["htsjdk.variant.variantcontext.VariantContext.getAttribute(java.lang.String)", "java.util.List<java.lang.Double>.add(double)", "java.lang.Double.parseDouble(((java.lang.String) (variant.getAttribute(infoKey))))"], "Fixed commit": "746af8c8256bb2feb8ad61e39d592ccd97082861", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2018-05-26T12:06:28Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.evergreen_ils.accountAccess.AccountAccess.getInstance().getUserName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(username))) path = (path + \"&username=\") + (java.net.URLEncoder.encode(username));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1736/buggy-version/core.src.main.java.org.evergreen_ils.utils.ui.BaseActivity.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String)"], "Fixed commit": "df530dd5056d644239def0eed55070636f497f44", "Url": "https://api.github.com/repos/kenstir/hemlock", "Date": "2017-12-29T03:40:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clickListener) != null) clickListener.onPositiveBtnClicked();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3920/buggy-version/app.src.main.java.com.example.pranay.circularimage.CustomButtonWithimageView.java", "BodyUseAPI": [], "Fixed commit": "dd64c8644672748a232ca5f93ce470aad8242e86", "Url": "https://api.github.com/repos/pranay1494/customViews", "Date": "2018-02-11T19:49:42Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clickListener) != null) clickListener.onNegativeBtnClicked();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3920/buggy-version/app.src.main.java.com.example.pranay.circularimage.CustomButtonWithimageView.java", "BodyUseAPI": [], "Fixed commit": "dd64c8644672748a232ca5f93ce470aad8242e86", "Url": "https://api.github.com/repos/pranay1494/customViews", "Date": "2018-02-11T19:49:42Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clickListener) != null) { ivInfo.setOnClickListener(new com.example.pranay.circularimage.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { clickListener.onclick(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3920/buggy-version/app.src.main.java.com.example.pranay.circularimage.CustomHeaderText.java", "BodyUseAPI": [], "Fixed commit": "dd64c8644672748a232ca5f93ce470aad8242e86", "Url": "https://api.github.com/repos/pranay1494/customViews", "Date": "2018-02-11T19:49:42Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((de.rissi.LogBlock.Main.LogBlock_Values.inEditMode.get(p.getUniqueId())) == true) { return true; }else if ((de.rissi.LogBlock.Main.LogBlock_Values.inEditMode.get(p.getUniqueId())) == false) { return false; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7903/buggy-version/src.de.rissi.LogBlock.Main.LogBlock_Values.java", "BodyUseAPI": ["java.util.HashMap<java.util.UUID, java.lang.Boolean>.get(p.getUniqueId())", "org.bukkit.entity.Player.getUniqueId()"], "Fixed commit": "04fc8f829c4e265f0fbb2f9d296ec007e17cf933", "Url": "https://api.github.com/repos/xBarkeeper/LogBlock", "Date": "2018-02-12T13:54:55Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reference.getNodeId().getParentId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mid == 0) && (parentId.equals(NodeId.DOCUMENT_NODE))) { mid = getLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5936/buggy-version/src.org.exist.dom.persistent.NewArrayNodeSet.java", "BodyUseAPI": [], "Fixed commit": "dce330bf09ded41dbd9c9a9dc49edbfd05b68be0", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-08-11T04:29:17Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((username) != null) && (!(username.isEmpty()))) && ((password) != null)) && (!(password.isEmpty()))) return java.sql.DriverManager.getConnection(url, username, password);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5776/buggy-version/src.main.java.org.bobachenko.easyjdbc.datasource.EasyDataSource.java", "BodyUseAPI": ["java.sql.DriverManager.getConnection(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "1337f10d8d1645bbe2fb4dc44f4abb09cbc89984", "Url": "https://api.github.com/repos/bobachenko/easy-jdbc", "Date": "2018-07-12T07:50:39Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((presenter) == null) { presenter = new net.weissenburger.producebrowser.imageviewer.ImageBrowserPresenter(getProduceDataCoordinator()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4905/buggy-version/imageviewer.src.main.java.net.weissenburger.producebrowser.imageviewer.ImageBrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "e597d257e71a073028e8ab1fec6520517bf2a0d6", "Url": "https://api.github.com/repos/jweissen/imagebrowser", "Date": "2018-03-20T04:05:45Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItem(net.minecraft.util.EnumHand)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getTagCompound()) == null) { item.setTagCompound(new net.minecraft.nbt.NBTTagCompound()); item.getTagCompound().setUniqueId(\"PlayerID\", player.getPersistentID()); net.minecraft.util.text.TextComponentTranslation bracelet = new net.minecraft.util.text.TextComponentTranslation(\"item.friendship_bracelet.rename\"); java.lang.String name = (player.getName()) + (bracelet.getUnformattedComponentText()); item.setStackDisplayName(name); return new net.minecraft.util.ActionResult(net.minecraft.util.EnumActionResult.FAIL, item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9683/buggy-version/src.main.java.com.elytradev.friendshipbracelet.item.ItemFriendshipBracelet.java", "BodyUseAPI": ["item.getTagCompound().setUniqueId(java.lang.String,player.getPersistentID())", "net.minecraft.item.ItemStack.setTagCompound(net.minecraft.nbt.NBTTagCompound)", "net.minecraft.item.ItemStack.setStackDisplayName(java.lang.String)", "net.minecraft.item.ItemStack.getTagCompound()"], "Fixed commit": "01401105435bba0396e8ae4f18622a3f334fd1c3", "Url": "https://api.github.com/repos/elytra/FriendshipBracelet", "Date": "2018-07-01T05:28:38Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.wso2.carbon.device.mgt.core.dao.DeviceManagementDAOFactory.databaseEngine) != null) { switch (org.wso2.carbon.device.mgt.core.dao.DeviceManagementDAOFactory.databaseEngine) { case DeviceManagementConstants.DataBaseTypes.DB_TYPE_POSTGRESQL : return new org.wso2.carbon.device.mgt.core.dao.impl.PostgreSQLApplicationDAOImpl(); case DeviceManagementConstants.DataBaseTypes.DB_TYPE_ORACLE : case DeviceManagementConstants.DataBaseTypes.DB_TYPE_MSSQL : case DeviceManagementConstants.DataBaseTypes.DB_TYPE_H2 : case DeviceManagementConstants.DataBaseTypes.DB_TYPE_MYSQL : return new org.wso2.carbon.device.mgt.core.dao.impl.GenericApplicationDAOImpl(); default : throw new org.wso2.carbon.device.mgt.common.UnsupportedDatabaseEngineException((\"Unsupported database engine : \" + (org.wso2.carbon.device.mgt.core.dao.DeviceManagementDAOFactory.databaseEngine))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6776/buggy-version/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.dao.DeviceManagementDAOFactory.java", "BodyUseAPI": [], "Fixed commit": "81cb39a4a6a1876fd1633d37fb0749599e34f186", "Url": "https://api.github.com/repos/madawas/carbon-device-mgt", "Date": "2018-02-14T15:57:39Z"},
{"Line": "=>1900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.apache.giraph.master.BspServiceMaster.getRestartedSuperstep()) == (org.apache.giraph.master.BspServiceMaster.getSuperstep())) || ((org.apache.giraph.master.BspServiceMaster.getSuperstep()) == 0)) { afterRestartTime = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6516/buggy-version/giraph-core.src.main.java.org.apache.giraph.master.BspServiceMaster.java", "BodyUseAPI": [], "Fixed commit": "d186f2020d8228c9b5a4109db382f73a50d3bf8c", "Url": "https://api.github.com/repos/ShiboC/giraph", "Date": "2018-05-24T22:33:08Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.att.biq.dst.jigsaw.fileUtils.FileInputParser.produceArrayForPuzzle(java.util.List<java.lang.String>,com.att.biq.dst.jigsaw.fileUtils.ErrorsManager)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (puzzleArray == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2281/buggy-version/jigsaw_project.src.main.java.com.att.biq.dst.jigsaw.puzzleManager.Puzzle.java", "BodyUseAPI": [], "Fixed commit": "e58a67fe32a32183fd21208cce23b3d42be9d40a", "Url": "https://api.github.com/repos/DST-BIQ/jigsaw", "Date": "2018-04-12T09:00:50Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nl.inl.blacklab.search.indexmetadata.AnnotatedFieldNameUtil.isAnnotatedField(fieldName)) sensitivity = nl.inl.blacklab.search.indexmetadata.AnnotatedFieldNameUtil.sensitivity(fieldName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9729/buggy-version/core.src.main.java.nl.inl.blacklab.analysis.BLStandardAnalyzer.java", "BodyUseAPI": ["nl.inl.blacklab.search.indexmetadata.AnnotatedFieldNameUtil.sensitivity(java.lang.String)"], "Fixed commit": "a236f737058c43b487e6f4f14a532de15342767e", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2018-08-13T08:33:36Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nl.inl.blacklab.search.indexmetadata.AnnotatedFieldNameUtil.isAnnotatedField(fieldName)) sensitivity = nl.inl.blacklab.search.indexmetadata.AnnotatedFieldNameUtil.sensitivity(fieldName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9729/buggy-version/core.src.main.java.nl.inl.blacklab.analysis.BLDutchAnalyzer.java", "BodyUseAPI": ["nl.inl.blacklab.search.indexmetadata.AnnotatedFieldNameUtil.sensitivity(java.lang.String)"], "Fixed commit": "a236f737058c43b487e6f4f14a532de15342767e", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2018-08-13T08:33:36Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nl.inl.blacklab.search.indexmetadata.AnnotatedFieldNameUtil.isAnnotatedField(fieldName)) sensitivity = nl.inl.blacklab.search.indexmetadata.AnnotatedFieldNameUtil.sensitivity(fieldName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9729/buggy-version/core.src.main.java.nl.inl.blacklab.analysis.BLWhitespaceAnalyzer.java", "BodyUseAPI": ["nl.inl.blacklab.search.indexmetadata.AnnotatedFieldNameUtil.sensitivity(java.lang.String)"], "Fixed commit": "a236f737058c43b487e6f4f14a532de15342767e", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2018-08-13T08:33:36Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.iabako.client.ui.layout.widget.productservice.ProductServiceInfoLine) (priceInfoLine)).getProductServiceDiscount()) != null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/875/buggy-version/src.main.java.org.iabako.client.ui.form.business.deliveryorder.DeliveryOrderForm.java", "BodyUseAPI": [], "Fixed commit": "6645cec08407942222091caf6bb3a814063b4977", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2018-04-08T20:06:47Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((injectHashMap.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2177/buggy-version/compat-webview.src.main.java.com.sw.compat.webview.CompatWebView.java", "BodyUseAPI": [], "Fixed commit": "ab75ba754a8594945a3cae08e9e9c17d701f0be2", "Url": "https://api.github.com/repos/heimashi/CompatWebView", "Date": "2018-01-08T04:46:02Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.DBHelper.getSpecificData(data.C.C3051_C3099.TABLE_NAME,bi.edStudyId.getText().toString(),Global.C.C3051_C3099.C3066)", "data.DBHelper.getSpecificData(data.C.C3051_C3099.TABLE_NAME,bi.edStudyId.getText().toString(),Global.C.C3051_C3099.C3064)", "data.DBHelper.getSpecificData(data.C.C3051_C3099.TABLE_NAME,bi.edStudyId.getText().toString(),Global.C.C3051_C3099.C3070)", "data.DBHelper.getSpecificData(data.C.C3051_C3099.TABLE_NAME,bi.edStudyId.getText().toString(),Global.C.C3051_C3099.C3068)", "data.DBHelper.getSpecificData(data.C.C3051_C3099.TABLE_NAME,bi.edStudyId.getText().toString(),Global.C.C3051_C3099.C3069)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((((((c3064 == null) && (c3065 == null)) && (c3066 == null)) && (c3067 == null)) && (c3068 == null)) && (c3069 == null)) && (c3070 == null)) { flag_c3064 = false; break; }else { flag_c3070 = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/464/buggy-version/app.src.main.java.com.irfansyed.VAS.VASMonitring.C.C3251_C3288_C.java", "BodyUseAPI": [], "Fixed commit": "70975bb1a20a26af54437eea931970126c7244d9", "Url": "https://api.github.com/repos/irfansyedpg/VASAProject", "Date": "2018-09-24T10:54:57Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((((et1.getText().toString().isEmpty()) || (et2.getText().toString().isEmpty())) || (et3.getText().toString().isEmpty())) || (et4.getText().toString().isEmpty())) || (et5.getText().toString().isEmpty())) || (et6.getText().toString().isEmpty())) || (et7.getText().toString().isEmpty())) { if (et1.getText().toString().isEmpty()) { et1.setError(\"Required\"); } if (et2.getText().toString().isEmpty()) { et2.setError(\"Required\"); } if (et3.getText().toString().isEmpty()) { et3.setError(\"Required\"); } if (et4.getText().toString().isEmpty()) { et4.setError(\"Required\"); } if (et5.getText().toString().isEmpty()) { et5.setError(\"Required\"); } if (et6.getText().toString().isEmpty()) { et6.setError(\"Required\"); } if (et7.getText().toString().isEmpty()) { et7.setError(\"Required\"); } }else { newuser(et1.getText().toString(), et2.getText().toString(), et3.getText().toString(), et4.getText().toString(), et5.getText().toString(), et6.getText().toString(), java.lang.Integer.valueOf(et7.getText().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4356/buggy-version/app.src.main.java.com.software_engineering.tap.Login.Fragment_NewUser_Request.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.lang.Integer.valueOf(et7.getText().toString())", "android.widget.EditText.setError(java.lang.String)", "et6.getText().toString()", "android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.getText()", "et5.getText().toString().isEmpty()", "android.widget.EditText.getText()", "et2.getText().toString()", "android.widget.EditText.getText()", "et4.getText().toString()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.getText()", "et3.getText().toString()", "android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.getText()", "et5.getText().toString()", "et6.getText().toString().isEmpty()", "et3.getText().toString()", "android.widget.EditText.getText()", "et1.getText().toString()", "com.software_engineering.tap.Login.Fragment_NewUser_Request.1.newuser(et1.getText().toString(),et2.getText().toString(),et3.getText().toString(),et4.getText().toString(),et5.getText().toString(),et6.getText().toString(),java.lang.Integer)", "et2.getText().toString().isEmpty()", "et7.getText().toString()", "et7.getText().toString()", "et4.getText().toString().isEmpty()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "et3.getText().toString().isEmpty()", "et5.getText().toString()", "et4.getText().toString()", "et6.getText().toString()", "android.widget.EditText.getText()", "et7.getText().toString().isEmpty()", "android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.setError(java.lang.String)", "et2.getText().toString()", "android.widget.EditText.setError(java.lang.String)", "et1.getText().toString().isEmpty()", "et1.getText().toString()"], "Fixed commit": "211c6fa4754b1ef0f09b37a414c5d2f3f9dad7c6", "Url": "https://api.github.com/repos/Nicholas-Guerra/TAP", "Date": "2018-05-01T23:55:56Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (d instanceof jmri.jmrix.loconet.LocoNetThrottledTransmitter.Memo) { long now = jmri.jmrix.loconet.LocoNetThrottledTransmitter.nowMSec(); delta = (this.getDelay(java.util.concurrent.TimeUnit.MILLISECONDS, now)) - (((jmri.jmrix.loconet.LocoNetThrottledTransmitter.Memo) (d)).getDelay(java.util.concurrent.TimeUnit.MILLISECONDS, now)); }else { delta = (this.getDelay(java.util.concurrent.TimeUnit.MILLISECONDS)) - (d.getDelay(java.util.concurrent.TimeUnit.MILLISECONDS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5599/buggy-version/java.src.jmri.jmrix.loconet.LocoNetThrottledTransmitter.java", "BodyUseAPI": ["java.util.concurrent.Delayed.getDelay(java.util.concurrent.TimeUnit)"], "Fixed commit": "5a01cac6bc3a0a1dbb5c8e9f4a351b0d537901f2", "Url": "https://api.github.com/repos/danielb987/JMRI", "Date": "2018-08-01T13:38:44Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.getField(\"paragraphid\").stringValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(duplicateCheck.contains(paragraphID))) { duplicateCheck.add(paragraphID); runStringSection.add(runString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3034/buggy-version/src.edu.unh.cs.Search.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "3c51aba699ced8710605c04c4c766ccb6fed3638", "Url": "https://api.github.com/repos/tarunprasadg92/CS980-DataScience", "Date": "2018-02-06T00:14:07Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.getField(\"paragraphid\").stringValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(duplicateCheck.contains(paragraphID))) { duplicateCheck.add(paragraphID); runStringPage.add(runString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3034/buggy-version/src.edu.unh.cs.Search.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "3c51aba699ced8710605c04c4c766ccb6fed3638", "Url": "https://api.github.com/repos/tarunprasadg92/CS980-DataScience", "Date": "2018-02-06T00:14:07Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.CharSequence.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((isSpaceCharacter(ch)) && (before < count)) { if (spaceExist) { java.lang.String newString = charSequence.toString().trim(); newString = java.lang.String.format(\"%s \", newString); et.setText(newString); et.setSelection(newString.length()); } spaceExist = true; }else { spaceExist = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5223/buggy-version/markdeditor.src.main.java.xute.markdeditor.components.TextComponent.java", "BodyUseAPI": [], "Fixed commit": "590bbe0ad65304f52a042ee6f7b1edf8bfedbdec", "Url": "https://api.github.com/repos/bxute/MarkDEditor", "Date": "2018-07-25T08:53:26Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out.value) < 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6519/buggy-version/ex1.src.TxHandler.java", "BodyUseAPI": [], "Fixed commit": "b5c858d02a9a9220497d55c5bcf3aeae2e903db3", "Url": "https://api.github.com/repos/eyalzmora/coursera---cryptocurrency", "Date": "2018-01-18T20:38:34Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["act.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(actContent.trim().isEmpty())) { asyncSearch(actContent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9697/buggy-version/app.src.main.java.com.mmjang.ankihelper.ui.popup.PopupActivity.java", "BodyUseAPI": ["com.mmjang.ankihelper.ui.popup.PopupActivity.5.asyncSearch(java.lang.String)"], "Fixed commit": "3e4dea9547c39f8990f845cae8a2dbf36ee523ec", "Url": "https://api.github.com/repos/mmjang/ankihelper", "Date": "2018-10-17T13:18:43Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextPos == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7253/buggy-version/game_plugins.hase_und_igel_2018.shared.sc.plugin2018.util.GameRuleLogic.java", "BodyUseAPI": [], "Fixed commit": "c6c06fca758a0ee89788e00096904635f60cd222", "Url": "https://api.github.com/repos/CAU-Kiel-Tech-Inf/socha", "Date": "2018-02-20T13:03:30Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((src.type) != (cn.ac.nya.nsasm.NSASM.RegType.INT)) return cn.ac.nya.nsasm.NSASM.Result.ERR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4505/buggy-version/src.cn.ac.nya.nsasm.NSASM.java", "BodyUseAPI": [], "Fixed commit": "b98561305d1f4c3f2a058622b785992e3ddcdf6a", "Url": "https://api.github.com/repos/NSDN/jNSASM", "Date": "2018-01-30T09:34:41Z"},
{"Line": "=>749", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dst == null) return cn.ac.nya.nsasm.NSASM.Result.ERR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4505/buggy-version/src.cn.ac.nya.nsasm.NSASM.java", "BodyUseAPI": [], "Fixed commit": "b98561305d1f4c3f2a058622b785992e3ddcdf6a", "Url": "https://api.github.com/repos/NSDN/jNSASM", "Date": "2018-01-30T09:34:41Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tmp.contains(\"(\")) && (tmp.contains(\")\"))) { if ((tmp.contains(\"{\")) && (tmp.contains(\"}\"))) count -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4505/buggy-version/src.cn.ac.nya.nsasm.Util.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "b98561305d1f4c3f2a058622b785992e3ddcdf6a", "Url": "https://api.github.com/repos/NSDN/jNSASM", "Date": "2018-01-30T09:34:41Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameId == null) || (gameId.equals(\"\"))) { joinView.displayMessage(\"Invalid game id.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3219/buggy-version/app.src.main.java.ticket.com.tickettoridegames.client.presenter.JoinPresenter.java", "BodyUseAPI": [], "Fixed commit": "132b985277bb861c7ac9b03b5a11658576f20281", "Url": "https://api.github.com/repos/DavidROwen/TicketToRideGame", "Date": "2018-07-23T15:58:55Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((requestTags == null) || (requestTags.isEmpty())) && ((userTags == null) || (userTags.isEmpty()))) { query += \" where r.duid is null\"; }else { query += \" and r.duid is null \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9360/buggy-version/giveitforward.src.main.java.giveitforward.managers.ManageRequest.java", "BodyUseAPI": [], "Fixed commit": "82326564d612b94fb1e51684627d7f76ec7fa93c", "Url": "https://api.github.com/repos/GiveItForward/Server", "Date": "2018-03-12T05:03:26Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((posts.size()) != 0) posts.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2395/buggy-version/app.src.main.java.codepath.com.instagram.HomeActivity.java", "BodyUseAPI": ["java.util.ArrayList<codepath.com.instagram.models.Post>.clear()"], "Fixed commit": "7c17613123cf5540fc77eeeeb51711214cbff99e", "Url": "https://api.github.com/repos/alex-goodman/Instagram", "Date": "2018-07-11T06:02:10Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["visitor.MClassList.getClass(((visitor.MIdentifier) (classType)).getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!hereClass) { errorPrint(\"no class\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1655/buggy-version/lab2.visitor.TypeCheckVisitor2.java", "BodyUseAPI": [], "Fixed commit": "ad50b93f84e53c571ff5ccc909c7e12ee35d00b8", "Url": "https://api.github.com/repos/wukgdu/minijava_compiler", "Date": "2018-09-21T15:35:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkInternetConnection()) { getSupportLoaderManager().initLoader(com.example.maikhoi.movieproject.DiscoveryScreenActivity.LOADER_UNIQUE_ID_DATA, null, movieDataLoader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7600/buggy-version/app.src.main.java.com.example.maikhoi.movieproject.DiscoveryScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "7454fff3f5d3576ad961a32fb40572aae761ce80", "Url": "https://api.github.com/repos/tqhuy1811/MovieProject", "Date": "2018-01-12T22:41:14Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attachment.getName().length()) >= 100) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8091/buggy-version/AnnotationTool.ch.ethz.scu.obit.processors.data.model.ExperimentDescriptor.java", "BodyUseAPI": [], "Fixed commit": "ae8f3f67b13bde070eb6d40b06f32de2587aef35", "Url": "https://api.github.com/repos/aarpon/obit_annotation_tool", "Date": "2018-03-16T10:10:46Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((update.getRecurringPattern()) != null) { req.repeatUntil = update.getRecurringPattern().getRepeatUntil(); req.status = update.getRecurringPattern().getStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9812/buggy-version/sdk.src.main.java.com.meniga.sdk.models.upcoming.operators.MenigaUpcomingOperationsImp.java", "BodyUseAPI": ["update.getRecurringPattern().getRepeatUntil()", "update.getRecurringPattern().getStatus()", "com.meniga.sdk.models.upcoming.MenigaUpcoming.getRecurringPattern()", "com.meniga.sdk.models.upcoming.MenigaUpcoming.getRecurringPattern()"], "Fixed commit": "1ded719d3d767516e702a9c6f878c1d68d8b596c", "Url": "https://api.github.com/repos/meniga/mobile-sdk-android", "Date": "2018-05-15T14:29:04Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (lastRefreshDateString != null) { lastRefreshDate = parseDateString(lastRefreshDateString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4006/buggy-version/library.src.main.java.com.parse.FacebookController.java", "BodyUseAPI": ["com.parse.FacebookController.parseDateString(java.lang.String)"], "Fixed commit": "b393d81a003aab37253e2138c3e7067a05494abe", "Url": "https://api.github.com/repos/r21nomi/ParseFacebookUtils-Android", "Date": "2018-05-18T12:19:14Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (lastseen == null) { lastseen = \"Noch nie\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/516/buggy-version/src.main.GUI.PlayerProfileGUI.java", "BodyUseAPI": [], "Fixed commit": "6fef43e4c51d00207ae98b60ee3effc6e7252bd3", "Url": "https://api.github.com/repos/TheFK/FKStats", "Date": "2018-10-29T10:36:52Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index != 0) { newString += \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4076/buggy-version/src.main.java.com.cmu.task.helper.StringHelper.java", "BodyUseAPI": [], "Fixed commit": "3b794cdb367c31d454f400d4ec1ecf3ea3e5ad05", "Url": "https://api.github.com/repos/blablaBen/cmu_iii_assignment_maven", "Date": "2018-07-04T16:10:34Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != configuration) { factory.setConfiguration(configuration.init(this.properties.getGlobalConfig())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7298/buggy-version/mybatis-plus-boot-starter.src.main.java.com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration.java", "BodyUseAPI": ["com.baomidou.mybatisplus.core.MybatisConfiguration.init(this.properties.getGlobalConfig())", "com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean.setConfiguration(configuration.init(this.properties.getGlobalConfig()))"], "Fixed commit": "9d770cc37d9cb3bca4559aa883cdaf1b5ad9f625", "Url": "https://api.github.com/repos/jaychang9/mybatis-plus", "Date": "2018-10-06T06:03:07Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((splitBlockName.length) < 2) { AdvancedRocketry.logger.warn((\"Invalid resource location for fillerBlock: \" + blockName)); }else { net.minecraft.block.Block block = Block.REGISTRY.getObject(new net.minecraft.util.ResourceLocation(splitBlockName[0], splitBlockName[1])); int metaValue = 0; if ((splitBlockName.length) > 2) { try { metaValue = java.lang.Integer.parseInt(splitBlockName[2]); } catch (java.lang.NumberFormatException e) { AdvancedRocketry.logger.warn((((\"Invalid meta value location for fillerBlock: \" + blockName) + \" using \") + (splitBlockName[2]))); } } if (block == (net.minecraft.init.Blocks.AIR)) AdvancedRocketry.logger.warn((\"Invalid filler block: \" + blockName)); properties.setStoneBlock(block.getStateFromMeta(metaValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1206/buggy-version/src.main.java.zmaster587.advancedRocketry.util.XMLPlanetLoader.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "Block.REGISTRY.getObject(net.minecraft.util.ResourceLocation)", "AdvancedRocketry.logger.warn(java.lang.String)"], "Fixed commit": "3b3974d6f9f84ca50392b98dc5919da9e3dd05b9", "Url": "https://api.github.com/repos/zmaster587/AdvancedRocketry", "Date": "2018-09-29T20:07:33Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message = tm.deliver()) != null) { int senderId = java.lang.Integer.parseInt(message.substring(0, mp.Utility.nthIndexOf(message, \"||\", 1))); java.lang.String command = message.substring(((mp.Utility.nthIndexOf(message, \"||\", 1)) + 2), mp.Utility.nthIndexOf(message, \"||\", 2)); if (command.equals(\"writeReq\")) { getWriteRequest(message.substring(((mp.Utility.nthIndexOf(message, \"||\", 2)) + 2))); if (senderId == (tm.u.ID)) { isWaiting = false; } }else if (command.equals(\"readReq\")) { getReadRequest(message.substring(((mp.Utility.nthIndexOf(message, \"||\", 2)) + 2))); if (senderId == (tm.u.ID)) isWaiting = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1677/buggy-version/src.mp.Replica_lin.java", "BodyUseAPI": [], "Fixed commit": "e2b2f616f3680e9c64285403a608c18a5962bdc1", "Url": "https://api.github.com/repos/sly1061101/Distributed_Key-Value_Table", "Date": "2018-03-28T20:55:15Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (proxy != null) { mapping.putIfNotNull(\"proxy\", cp.describe(proxy)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5344/buggy-version/src.main.java.org.jenkinsci.plugins.casc.plugins.PluginManagerConfigurator.java", "BodyUseAPI": ["org.jenkinsci.plugins.casc.model.Mapping.putIfNotNull(java.lang.String,cp.describe(proxy))", "org.jenkinsci.plugins.casc.Configurator.describe(hudson.ProxyConfiguration)"], "Fixed commit": "d3fee6d6f068b113820cce7a683ec32ec232d412", "Url": "https://api.github.com/repos/ndeloof/configuration-as-code-plugin", "Date": "2018-06-05T11:12:55Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mView) != null) { mView.hideLoadingIndicator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2932/buggy-version/app.src.main.java.com.mricomat.chat_mvp_firebase.ui.contacts.presenter.ContactsPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "87de46f725caed985c8e9977fbd09278864068aa", "Url": "https://api.github.com/repos/mricomat/Android_Chat_MVP_Firebase", "Date": "2018-04-17T19:33:15Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mricomat.chat_mvp_firebase.network.FireBaseAuthService.mGoogleApiClient) == null) { com.mricomat.chat_mvp_firebase.network.FireBaseAuthService.mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(activity.getApplicationContext()).enableAutoManage(((android.support.v4.app.FragmentActivity) (activity)), new com.google.android.gms.common.api.GoogleApiClient.OnConnectionFailedListener() { @java.lang.Override public void onConnectionFailed(@android.support.annotation.NonNull com.google.android.gms.common.ConnectionResult connectionResult) { android.widget.Toast.makeText(activity.getApplicationContext(), connectionResult.getErrorMessage(), Toast.LENGTH_SHORT).show(); } }).addApi(Auth.GOOGLE_SIGN_IN_API, gso).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2932/buggy-version/app.src.main.java.com.mricomat.chat_mvp_firebase.network.FireBaseAuthService.java", "BodyUseAPI": [], "Fixed commit": "87de46f725caed985c8e9977fbd09278864068aa", "Url": "https://api.github.com/repos/mricomat/Android_Chat_MVP_Firebase", "Date": "2018-04-17T19:33:15Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["modelo.jogador.Jogador.getCelulaSelecionada()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (celulaSelecionada != null) { this.jogo.mover(celulaSelecionada, clickedPosition); this.jogadorDaVez.setCelulaSelecionada(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8441/buggy-version/Dral.src.controle.Controle.java", "BodyUseAPI": ["modelo.jogo.Jogo.mover(modelo.tabuleiro.Celula,modelo.tabuleiro.Celula)"], "Fixed commit": "822dffdec0eea55837ed237c898c653205c33c7c", "Url": "https://api.github.com/repos/jeanleopoldo/Dral", "Date": "2018-10-01T12:37:26Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSku == null) { return \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/358/buggy-version/tws-library.src.main.java.com.iamplus.earin.util.SKUProfile.java", "BodyUseAPI": [], "Fixed commit": "389aefc6cb1327edf0b25cbab728e8bb80ccd1d1", "Url": "https://api.github.com/repos/iAmPlus/factory-test-app-android", "Date": "2018-04-24T16:47:13Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((state == (PlayerConstants.PlayerState.PLAYING)) || (state == (PlayerConstants.PlayerState.PAUSED))) || (state == (PlayerConstants.PlayerState.VIDEO_CUED))) panel.setBackgroundColor(android.support.v4.content.ContextCompat.getColor(context, android.R.color.transparent)); else if (state == (PlayerConstants.PlayerState.BUFFERING)) panel.setBackgroundColor(android.support.v4.content.ContextCompat.getColor(context, android.R.color.transparent));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8206/buggy-version/sample.src.main.java.com.pierfrancescosoffritti.youtubeplayersample.customUIExample.CustomPlayerUIController.java", "BodyUseAPI": [], "Fixed commit": "537de441f28d4393c1bd2d70d1ae453fb2f10192", "Url": "https://api.github.com/repos/rajeefmk/Android-YouTube-Player", "Date": "2018-03-20T08:23:36Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drawnImage) != null) { for (int col = 0; col < (RESOLUTION_WIDTH); col++) { for (int row = 0; row < (RESOLUTION_HEIGHT); row++) { Engine.SpecialText text = drawnImage.getSpecialText(col, row); g.setColor(text.getBkgColor()); g.fillRect(((col * (HOR_SEPARATION)) + (HOR_MARGIN)), (((row * (VER_SEPARATION)) + (VER_MARGIN)) + 1), HOR_SEPARATION, VER_SEPARATION); } } for (int col = 0; col < (RESOLUTION_WIDTH); col++) { for (int row = 0; row < (RESOLUTION_HEIGHT); row++) { Engine.SpecialText text = drawnImage.getSpecialText(col, row); g.setColor(text.getFgColor()); g.drawString(text.getStr(), (((col * (HOR_SEPARATION)) + (HOR_MARGIN)) + (((HOR_SEPARATION) - (metrics.stringWidth(text.getStr()))) / 2)), ((((VER_SEPARATION) * row) + (VER_MARGIN)) + ((int) ((VER_SEPARATION) * 0.75)))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9095/buggy-version/src.Engine.ViewWindow.java", "BodyUseAPI": [], "Fixed commit": "9169d233ec77ff2b749c682b8d141004cfeb5e2e", "Url": "https://api.github.com/repos/HazilTheNut/SourceryText", "Date": "2018-03-27T22:29:51Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getFileName().toString().contentEquals(\".keep\"))) { com.orange.oss.cloudfoundry.broker.opsautomation.ondemandbroker.pipeline.tools.Copy.copyFile(file, target.resolve(source.relativize(file)), prompt, preserve); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7998/buggy-version/cf-ops-automation-broker-core.src.main.java.com.orange.oss.cloudfoundry.broker.opsautomation.ondemandbroker.pipeline.tools.Copy.java", "BodyUseAPI": ["java.nio.file.Path.resolve(java.nio.file.Path)", "com.orange.oss.cloudfoundry.broker.opsautomation.ondemandbroker.pipeline.tools.Copy.copyFile(java.nio.file.Path,java.nio.file.Path,boolean,boolean)", "java.nio.file.Path.relativize(java.nio.file.Path)"], "Fixed commit": "39605b4b43e61a0dd452cb923a9e91b23860a436", "Url": "https://api.github.com/repos/orange-cloudfoundry/cf-ops-automation-broker", "Date": "2018-07-09T15:24:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.vm.yti.codelist.intake.service.impl.OrganizationServiceImpl.createOrUpdateOrganizationFromGroupManagementOrganizationDto(fi.vm.yti.codelist.intake.groupmanagement.GroupManagementOrganizationDTO)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((organization.getCodeRegistries()) != null) { final java.lang.Integer size = organization.getCodeRegistries().size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6919/buggy-version/src.main.java.fi.vm.yti.codelist.intake.service.impl.OrganizationServiceImpl.java", "BodyUseAPI": ["fi.vm.yti.codelist.intake.model.Organization.getCodeRegistries()", "organization.getCodeRegistries().size()"], "Fixed commit": "86a472364730ffffa45e59247994d62f855f61ea", "Url": "https://api.github.com/repos/VRK-YTI/yti-codelist-content-intake-service", "Date": "2018-04-03T11:58:53Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.trimToNull(baseDir)) == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1367/buggy-version/xci-splitter.src.main.java.org.insanedevelopment.nx.xci.cutter.backend.batch.BatchHelper.java", "BodyUseAPI": [], "Fixed commit": "05c21f1fc670275014a771bd35ef5e6d6138b5fe", "Url": "https://api.github.com/repos/choss/java-xci-splitter", "Date": "2018-06-28T19:13:27Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMoveQuantity()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7811/buggy-version/fr.main.model.units.Unit.java", "BodyUseAPI": [], "Fixed commit": "82a84ce74ed9cbee053ed6c7146bb468143b4fd9", "Url": "https://api.github.com/repos/Peaupote/advance-war", "Date": "2018-03-02T09:40:05Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter) { this.setMoveQuantity(0); if ((u.getLife()) != 0) u.attack(this, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7811/buggy-version/fr.main.model.units.Unit.java", "BodyUseAPI": [], "Fixed commit": "82a84ce74ed9cbee053ed6c7146bb468143b4fd9", "Url": "https://api.github.com/repos/Peaupote/advance-war", "Date": "2018-03-02T09:40:05Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((active_mp) != (-1)) { players[active_mp].reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/203/buggy-version/ViBeatApp.app.src.main.java.com.vibeat.vibeatapp.Managers.MediaPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "fd1d1b1ae316aeb240f5efabf78d5cce802d97fa", "Url": "https://api.github.com/repos/ViBeatApp/ViBeat", "Date": "2018-07-25T20:53:02Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((active_mp) != (-1)) { if ((players[active_mp].track_id) != track_id) { active_mp = 1 - (active_mp); } players[active_mp].play(track_id, offset); }else { android.util.Log.d(\"Play\", \"----------- error: trying to play without media player -------------\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/203/buggy-version/ViBeatApp.app.src.main.java.com.vibeat.vibeatapp.Managers.MediaPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "fd1d1b1ae316aeb240f5efabf78d5cce802d97fa", "Url": "https://api.github.com/repos/ViBeatApp/ViBeat", "Date": "2018-07-25T20:53:02Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((active_mp) != (-1)) { if (players[active_mp].isPlaying()) players[active_mp].pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/203/buggy-version/ViBeatApp.app.src.main.java.com.vibeat.vibeatapp.Managers.MediaPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "fd1d1b1ae316aeb240f5efabf78d5cce802d97fa", "Url": "https://api.github.com/repos/ViBeatApp/ViBeat", "Date": "2018-07-25T20:53:02Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.kymjs.common.StringUtils.isEmpty(listBean.getSystem_price())) || ((com.kymjs.common.StringUtils.toDouble(listBean.getSystem_price())) == 0)) { helper.setText(R.id.tv_systemForecast, (\"0.00\" + (mContext.getString(R.string.rmb)))); }else { helper.setText(R.id.tv_systemForecast, ((listBean.getSystem_price()) + (mContext.getString(R.string.rmb)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4727/buggy-version/ZWBS-Android.app.src.main.java.com.ruitukeji.zwbs.adapter.mine.mywallet.incomedetails.IncomeDetailsViewAdapter.java", "BodyUseAPI": ["cn.bingoogolapple.baseadapter.BGAViewHolderHelper.setText(R.id.tv_systemForecast,((listBean.getSystem_price()) + (mContext.getString(R.string.rmb))))", "com.ruitukeji.zwbs.entity.mine.mywallet.incomedetails.IncomeDetailsBean.ResultBean.ListBean.getSystem_price()"], "Fixed commit": "441d96774f5ae507faf463e4c5941640658ef414", "Url": "https://api.github.com/repos/921668753/wztx-driver-andriod", "Date": "2018-03-06T03:19:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.groto.server.services.base.GenericListOnlyService<com.groto.server.models.hibernate.City>.getById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (city == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1015/buggy-version/src.main.java.com.groto.server.web.CitiesController.java", "BodyUseAPI": [], "Fixed commit": "bf279e4302d29643614a8147a724da1926d0e888", "Url": "https://api.github.com/repos/Echolz/groto-server", "Date": "2018-08-05T13:36:42Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.groto.server.services.base.GenericListOnlyService<com.groto.server.models.hibernate.District>.getById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (district == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1015/buggy-version/src.main.java.com.groto.server.web.DistrictsController.java", "BodyUseAPI": [], "Fixed commit": "bf279e4302d29643614a8147a724da1926d0e888", "Url": "https://api.github.com/repos/Echolz/groto-server", "Date": "2018-08-05T13:36:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.groto.server.services.base.AuthorsService.getById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (author == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1015/buggy-version/src.main.java.com.groto.server.web.AuthorsController.java", "BodyUseAPI": [], "Fixed commit": "bf279e4302d29643614a8147a724da1926d0e888", "Url": "https://api.github.com/repos/Echolz/groto-server", "Date": "2018-08-05T13:36:42Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.groto.server.services.base.GenericListOnlyService<com.groto.server.models.hibernate.Category>.getById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (category == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1015/buggy-version/src.main.java.com.groto.server.web.CategoriesController.java", "BodyUseAPI": [], "Fixed commit": "bf279e4302d29643614a8147a724da1926d0e888", "Url": "https://api.github.com/repos/Echolz/groto-server", "Date": "2018-08-05T13:36:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.groto.server.services.base.PostsService.getById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (post == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1015/buggy-version/src.main.java.com.groto.server.web.PostsController.java", "BodyUseAPI": [], "Fixed commit": "bf279e4302d29643614a8147a724da1926d0e888", "Url": "https://api.github.com/repos/Echolz/groto-server", "Date": "2018-08-05T13:36:42Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a.getDelHeight()) > 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9502/buggy-version/consensus-module.poc.consensus-poc-rpc.src.main.java.io.nuls.consensus.poc.rpc.resource.PocConsensusResource.java", "BodyUseAPI": [], "Fixed commit": "f5d8ac1bf83707de2f5bdda1bf7fa35c0b645cb3", "Url": "https://api.github.com/repos/ruislan/nuls", "Date": "2018-05-25T03:30:06Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Runtime.getRuntime().maxMemory()) > (ru.mail.polis.KVDaoFactory.MAX_HEAP)) { throw new java.lang.IllegalStateException(\"The heap is too big. Consider setting Xmx.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6342/buggy-version/src.main.java.ru.mail.polis.KVDaoFactory.java", "BodyUseAPI": [], "Fixed commit": "0e7700bd838aa23740f8d09fb1de4c7bbe288c53", "Url": "https://api.github.com/repos/gorbatovea/2018-db-kv", "Date": "2018-04-24T23:01:07Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stateEnableMinimumAngle) { mainFrame.minimumAngleMonitor.updateMinimumAngleInfoBar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6693/buggy-version/src.sidepanel.InitSidePanel.java", "BodyUseAPI": [], "Fixed commit": "5278c3ac718580efb4ae4993709bfa537901ff20", "Url": "https://api.github.com/repos/michaelbekos/crossingresolution", "Date": "2018-02-07T07:49:16Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cpjd.roblu.io.IO.deserializeObject(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cloudSettings == null) { cloudSettings = new com.cpjd.roblu.models.RSyncSettings(); saveCloudSettings(cloudSettings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3801/buggy-version/app.src.main.java.com.cpjd.roblu.io.IO.java", "BodyUseAPI": [], "Fixed commit": "16edfce806edd79536950290a11c59e256291d20", "Url": "https://api.github.com/repos/wdavies973/Roblu", "Date": "2018-03-06T14:09:56Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!debugConnection) connection = cn.cerc.jdb.dao.BigConnection.popConnection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1365/buggy-version/src.main.java.cn.cerc.jdb.dao.BigConnection.java", "BodyUseAPI": [], "Fixed commit": "150c41dd7ad2e4c319be942c9f124c7d78cc6085", "Url": "https://api.github.com/repos/cn-cerc/summer-db", "Date": "2018-10-27T03:37:35Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inputParamaterForExecuteSelect.getParametersURL().size()) > counter) { parameter = inputParamaterForExecuteSelect.getParametersURL().get(counter); }else { parameter = getURIOfProperty(param); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6892/buggy-version/src.main.java.eu.nimble.service.catalog.search.mediator.MediatorSPARQLDerivationAndExecution.java", "BodyUseAPI": ["inputParamaterForExecuteSelect.getParametersURL().get(int)", "eu.nimble.service.catalog.search.impl.dao.input.InputParamaterForExecuteSelect.getParametersURL()"], "Fixed commit": "b83605540eed3fc4c91607a6046ddaea006b3695", "Url": "https://api.github.com/repos/nimble-platform/catalog-search-service", "Date": "2018-02-16T12:24:00Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (gc != null) { gc.setClasse(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1977/buggy-version/src.controle.Principal.java", "BodyUseAPI": ["controle.GravacaoChart.setClasse(<nulltype>)"], "Fixed commit": "c8055d4dcdec48559327483fc5d722d996b08e3c", "Url": "https://api.github.com/repos/henikejordan/e-nose", "Date": "2018-10-30T21:31:31Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (gc != null) { gc.setClasse(jTextFieldClasse.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1977/buggy-version/src.controle.Principal.java", "BodyUseAPI": ["controle.GravacaoChart.setClasse(java.lang.String)"], "Fixed commit": "c8055d4dcdec48559327483fc5d722d996b08e3c", "Url": "https://api.github.com/repos/henikejordan/e-nose", "Date": "2018-10-30T21:31:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<io.paratek.deob.cfg.AbstractInsnNode>.listIterator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (iter.hasNext()) { iter.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7801/buggy-version/deob.src.main.java.io.paratek.deob.cfg.Blocks.java", "BodyUseAPI": ["java.util.ListIterator<io.paratek.deob.cfg.AbstractInsnNode>.next()"], "Fixed commit": "ce1b1d4d921fab0d305aa3c7dea1ca6652db2bd7", "Url": "https://api.github.com/repos/jjordantb/Paradigm", "Date": "2018-06-04T02:35:53Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<io.paratek.deob.cfg.AbstractInsnNode>.listIterator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (iter.hasNext()) { iter.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7801/buggy-version/deob.src.main.java.io.paratek.deob.cfg.Blocks.java", "BodyUseAPI": ["java.util.ListIterator<io.paratek.deob.cfg.AbstractInsnNode>.next()"], "Fixed commit": "ce1b1d4d921fab0d305aa3c7dea1ca6652db2bd7", "Url": "https://api.github.com/repos/jjordantb/Paradigm", "Date": "2018-06-04T02:35:53Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.onPasswordChanged(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4122/buggy-version/app.src.main.java.com.jekton.passkeeper.password.PasswordManager.java", "BodyUseAPI": [], "Fixed commit": "18fdc2f079b0b8de600707a850fd61106cf8bf65", "Url": "https://api.github.com/repos/Jekton/PasswordsKeeper", "Date": "2018-01-05T03:14:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recips.length()) == 0) { android.widget.Toast.makeText(getBaseContext(), R.string.noCostaffAlert, Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9282/buggy-version/Androidplanning.app.src.main.java.com.example.berenice.androidplanning.task.taskActivity.java", "BodyUseAPI": [], "Fixed commit": "4a0ae1cd2f19856dc89af5463ed34f71baf6be64", "Url": "https://api.github.com/repos/beretheub/androidplanning", "Date": "2018-05-27T10:39:03Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intSQLCnt > 1) { if (QueryUtils.RESULT_TYPE.JSON.name().equalsIgnoreCase(comboResultType.getText())) { strExecuteResultData = (\"[\" + (org.apache.commons.lang.StringUtils.removeEnd(strExecuteResultData, \",\"))) + \"]\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1451/buggy-version/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.dialog.restfulapi.MainSQLEditorAPIServiceDialog.java", "BodyUseAPI": [], "Fixed commit": "ae67257e2bb9f3b948b18bc6a771c5a4cd2e03fc", "Url": "https://api.github.com/repos/jeongjaehong/TadpoleForDBTools", "Date": "2018-02-07T20:46:17Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activityField.getText().trim().length()) < 3) com.mygdx.game.screens.DialogBox.showInfoDialog(\"Error\", \"Name too short\"); else com.mygdx.game.requests.PlayerAccount.createActivity(activityField.getText());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8213/buggy-version/client.core.src.com.mygdx.game.screens.AdminScreen.java", "BodyUseAPI": ["com.mygdx.game.requests.PlayerAccount.createActivity(activityField.getText())", "com.badlogic.gdx.scenes.scene2d.ui.TextField.getText()"], "Fixed commit": "202747afef9dd3e9745b142cf949c3205f3cf0e9", "Url": "https://api.github.com/repos/isd-soft/motivision", "Date": "2018-07-26T14:23:03Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(pointsField.getText())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (points > 10000) { com.mygdx.game.screens.DialogBox.showInfoDialog(\"Error\", \"That's cheating!\"); }else if (!(com.mygdx.game.requests.PlayerAccount.updateActivity(id, name, points))) com.mygdx.game.screens.DialogBox.showInfoDialog(\"Error\", JsonHandler.errorMessage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8213/buggy-version/client.core.src.com.mygdx.game.screens.AdminScreen.java", "BodyUseAPI": ["com.mygdx.game.requests.PlayerAccount.updateActivity(int,java.lang.String,int)"], "Fixed commit": "202747afef9dd3e9745b142cf949c3205f3cf0e9", "Url": "https://api.github.com/repos/isd-soft/motivision", "Date": "2018-07-26T14:23:03Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (days != null) checkIfDayAlreadyAdded(days.get(((days.size()) - 1)).getDate());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6440/buggy-version/app.src.main.java.com.clakestudio.pc.everyday.showdays.ShowDaysPresenter.java", "BodyUseAPI": ["days.get(((days.size()) - 1)).getDate()", "java.util.ArrayList<com.clakestudio.pc.everyday.data.Day>.size()", "java.util.ArrayList<com.clakestudio.pc.everyday.data.Day>.get(((days.size()) - 1))", "com.clakestudio.pc.everyday.showdays.ShowDaysPresenter.checkIfDayAlreadyAdded(days.get(((days.size()) - 1)).getDate())"], "Fixed commit": "61fbb141dfec4fec15ccb0a4b1bb45fb40870dd7", "Url": "https://api.github.com/repos/jstarczewski/everyday", "Date": "2018-09-18T13:54:10Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) getActivity().finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6440/buggy-version/app.src.main.java.com.clakestudio.pc.everyday.info.InfoFragment.java", "BodyUseAPI": [], "Fixed commit": "61fbb141dfec4fec15ccb0a4b1bb45fb40870dd7", "Url": "https://api.github.com/repos/jstarczewski/everyday", "Date": "2018-09-18T13:54:10Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((joystickRXAxis) <= 0.1) && ((joystickRXAxis) >= (-0.1))) { joystickRXAxis = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1758/buggy-version/FIRSTPowerUp.src.org.usfirst.frc.team5974.robot.Robot.java", "BodyUseAPI": [], "Fixed commit": "c273a7518efd761053a248a29647c5033d07aaf9", "Url": "https://api.github.com/repos/AISUMechanicalDragons/FIRSTPowerUp5974", "Date": "2018-01-20T01:06:40Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((joystickRYAxis) <= 0.1) && ((joystickRYAxis) >= (-0.1))) { joystickRYAxis = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1758/buggy-version/FIRSTPowerUp.src.org.usfirst.frc.team5974.robot.Robot.java", "BodyUseAPI": [], "Fixed commit": "c273a7518efd761053a248a29647c5033d07aaf9", "Url": "https://api.github.com/repos/AISUMechanicalDragons/FIRSTPowerUp5974", "Date": "2018-01-20T01:06:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me.RockinChaos.itemjoin.handlers.ServerHandler.hasCombatUpdate()) { item = me.RockinChaos.itemjoin.handlers.PlayerHandler.getPerfectHandItem(event.getPlayer(), event.getHand().toString()); }else { item = me.RockinChaos.itemjoin.handlers.PlayerHandler.getPerfectHandItem(event.getPlayer(), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2215/buggy-version/src.me.RockinChaos.itemjoin.listeners.ItemStore.java", "BodyUseAPI": [], "Fixed commit": "f5a0d862c67443393c26d258ee8fdfbf07c4a1b3", "Url": "https://api.github.com/repos/RockinChaos/ItemJoin", "Date": "2018-02-05T18:09:46Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((h2cServerConfig) != null) { h2cServerConfig.destroy(); h2cServerConfig = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9365/buggy-version/sofa-boot-starter.src.main.java.com.alipay.sofa.rpc.boot.container.ServerConfigContainer.java", "BodyUseAPI": [], "Fixed commit": "c44b3306b9024d5ed5e575c1d98b05f2b2393a89", "Url": "https://api.github.com/repos/alipay/sofa-rpc-boot-projects", "Date": "2018-05-30T09:45:05Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(dir.exists())) && (!(dir.mkdirs()))) { java.lang.System.err.println((\"Failed to create extensions directory \" + extensionsDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9023/buggy-version/core.server.common.src.main.java.alluxio.cli.extensions.command.InstallCommand.java", "BodyUseAPI": [], "Fixed commit": "c4ef8a0ff3d94e97a9ae9760209746e6010e06a3", "Url": "https://api.github.com/repos/Alluxio/alluxio", "Date": "2018-01-03T19:21:16Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.hasPermission(\"multichat.spam.bypass\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7434/buggy-version/multichat.src.main.java.xyz.olivermartin.multichat.bungee.ChatControl.java", "BodyUseAPI": [], "Fixed commit": "a6a47ef31b9bcf9e452e6782adcf68b78ea6971a", "Url": "https://api.github.com/repos/MultiChat/Development", "Date": "2018-09-18T13:34:14Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isHeader(position)) || (isFooter(position))) { return gridManager.getSpanCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1740/buggy-version/library.src.main.java.net.soulwolf.meetrecycle.MeetRecycleView.java", "BodyUseAPI": [], "Fixed commit": "984cc28f5c3f372f706c4f154550a460bcdcaf94", "Url": "https://api.github.com/repos/amphiaraus/MeetRecyclerView", "Date": "2018-01-19T02:52:51Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entry.getValue().unwrapped()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((number instanceof java.lang.Float) || (number instanceof java.lang.Double)) { node.put(entry.getKey(), ((java.lang.Number) (number)).doubleValue()); }else { node.put(entry.getKey(), ((java.lang.Number) (number)).longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3121/buggy-version/src.main.java.rip.deadcode.ratpack.hocon.HoconConfigSource.java", "BodyUseAPI": [], "Fixed commit": "3e498b3db1a9b4aa23124b2d44af2b7061753d70", "Url": "https://api.github.com/repos/minebreaker-tf/ratpack-hocon", "Date": "2018-03-20T09:16:51Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mMediaPlayer) != null) && ((mCurrentState) == (io.vov.vitamio.widget.VideoView.STATE_PAUSED))) && ((mTargetState) == (io.vov.vitamio.widget.VideoView.STATE_PAUSED))) { mMediaPlayer.setDisplay(mSurfaceHolder); mMediaPlayer.start(); }else if ((((mMediaPlayer) != null) && ((mCurrentState) == (io.vov.vitamio.widget.VideoView.STATE_SUSPEND))) && ((mTargetState) == (io.vov.vitamio.widget.VideoView.STATE_RESUME))) { mMediaPlayer.setDisplay(mSurfaceHolder); resume(); }else { openVideo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3991/buggy-version/vitamio.src.io.vov.vitamio.widget.VideoView.java", "BodyUseAPI": [], "Fixed commit": "79cd0deb8814d12dd21d171455e77be449c8e63a", "Url": "https://api.github.com/repos/WaterlooBridge/Crawler", "Date": "2018-03-01T02:53:19Z"},
{"Line": "=>1080", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cookedHour == 0) { cookedHour = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2403/buggy-version/CodenameOne.src.com.codename1.ui.spinner.Picker.java", "BodyUseAPI": [], "Fixed commit": "38ab85efe23afd7328c563f8fee11a75bb3bd3a0", "Url": "https://api.github.com/repos/jsfan3/CodenameOne", "Date": "2018-07-19T14:05:59Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.juneau.ClassMeta<T>.getBuilderSwap(org.apache.juneau.BeanSession)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (builder != null) { org.apache.juneau.BeanMap m = toBeanMap(builder.create(this, to)); m.load(((java.util.Map<?, ?>) (value))); return builder.build(this, m.getBean(), to); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3418/buggy-version/juneau-core.juneau-marshall.src.main.java.org.apache.juneau.BeanSession.java", "BodyUseAPI": ["org.apache.juneau.BeanSession.toBeanMap(builder.create(this, to))", "org.apache.juneau.BuilderSwap<T, java.lang.Object>.create(org.apache.juneau.BeanSession,org.apache.juneau.ClassMeta<T>)", "org.apache.juneau.BuilderSwap<T, java.lang.Object>.build(org.apache.juneau.BeanSession,m.getBean(),org.apache.juneau.ClassMeta<T>)"], "Fixed commit": "38c40788a5da0d0b19a5f52aa4168af28a730439", "Url": "https://api.github.com/repos/apache/juneau", "Date": "2018-09-16T18:13:14Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmpPhrase.isEmpty()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4612/buggy-version/src.br.fumec.compiler.LexicalScanner.java", "BodyUseAPI": [], "Fixed commit": "af29504f0887cf81e6582e2668134d59b8edd1d6", "Url": "https://api.github.com/repos/gscavalcante/analisador-lexico", "Date": "2018-06-04T22:49:53Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNextPositionEmpty(phrase, i)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4612/buggy-version/src.br.fumec.compiler.LexicalScanner.java", "BodyUseAPI": [], "Fixed commit": "af29504f0887cf81e6582e2668134d59b8edd1d6", "Url": "https://api.github.com/repos/gscavalcante/analisador-lexico", "Date": "2018-06-04T22:49:53Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (person instanceof com.cooksys.ftd.assignments.collections.model.FatCat) { parent = ((com.cooksys.ftd.assignments.collections.model.FatCat) (person)); }else { parent = person.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3228/buggy-version/src.main.java.com.cooksys.ftd.assignments.collections.MegaCorp.java", "BodyUseAPI": ["com.cooksys.ftd.assignments.collections.model.Capitalist.getParent()"], "Fixed commit": "82bf19ac3abd62e97bb5a45143d66472bd17347c", "Url": "https://api.github.com/repos/cooksystemsinc/java-collections-willkotheimer", "Date": "2018-10-19T04:05:02Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connection) { int indexStudent = -1; for (int i = 0; i < ((tableViewArrayList.get(group).getItems().size()) - 1); i++) { if (tableViewArrayList.get(group).getItems().get(i).getStudent().contentEquals(UserStudent.getName())) { indexStudent = i; } } if (indexStudent >= 0) { koeko.controllers.controllers_tools.SingleStudentAnswersLine singleStudentAnswersLine = tableViewArrayList.get(group).getItems().get(indexStudent); singleStudentAnswersLine.setStatus(\"connected\"); tableViewArrayList.get(group).getItems().set(indexStudent, singleStudentAnswersLine); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5144/buggy-version/src.main.java.koeko.controllers.StudentsVsQuestionsTableController.java", "BodyUseAPI": [], "Fixed commit": "662e2f84e1558089ca01f54b00f759ea16fc6e2a", "Url": "https://api.github.com/repos/maximerchrd/KoekoTeacher", "Date": "2018-05-30T19:46:43Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPoll) != null) { if (imageVoteName == (dk.au.ase.itsmap.e17.appproject.gruppe7.udecide.utils.CONST.IMAGE_1_VOTE_KEY)) { newVotes = (currentPoll.getImage1Votes()) + 1; }else if (imageVoteName == (dk.au.ase.itsmap.e17.appproject.gruppe7.udecide.utils.CONST.IMAGE_2_VOTE_KEY)) { newVotes = (currentPoll.getImage2Votes()) + 1; } pollsDocRef.update(imageVoteName, newVotes).addOnSuccessListener(new com.google.android.gms.tasks.OnSuccessListener<java.lang.Void>() { @java.lang.Override public void onSuccess(java.lang.Void aVoid) { android.util.Log.d(\"incrementer\", \"Image has been incremented\"); } }); sendMessagePollUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2358/buggy-version/app.src.main.java.dk.au.ase.itsmap.e17.appproject.gruppe7.udecide.helper.FirebaseHelper.java", "BodyUseAPI": [], "Fixed commit": "0caf1908abe0ed783362f12b0018f6e0cfa945d3", "Url": "https://api.github.com/repos/jeppestaerk/ITSMAP-AppProject-uDecide", "Date": "2018-01-25T18:09:12Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((cookies == null) || ((cookies.length) <= 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4105/buggy-version/src.main.java.com.taohong.snapup.config.UserArgumentResolver.java", "BodyUseAPI": [], "Fixed commit": "409846b6d16929fe0ed3cad4bf80bd267d97eda2", "Url": "https://api.github.com/repos/TaoHongBest/snapup", "Date": "2018-10-24T16:57:04Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (omrShape == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1902/buggy-version/src.main.java.org.audiveris.omrdataset.api.SymbolInfo.java", "BodyUseAPI": [], "Fixed commit": "e2da9b25e7489091be5ad750b8f746078d5302af", "Url": "https://api.github.com/repos/Audiveris/omr-dataset-tools", "Date": "2018-06-14T13:45:00Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((desc.getInheritInfo()) != null) { desc = desc.getInheritInfo().readType(bean.getClass()).desc(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7224/buggy-version/src.main.java.io.ebeaninternal.server.cache.CachedBeanDataToBean.java", "BodyUseAPI": ["io.ebeaninternal.server.deploy.BeanDescriptor<?>.getInheritInfo()", "desc.getInheritInfo().readType(bean.getClass())", "desc.getInheritInfo().readType(bean.getClass()).desc()"], "Fixed commit": "8a208f1d6c4f60b30ee858f3fad1410f19cb6156", "Url": "https://api.github.com/repos/FOCONIS/ebean", "Date": "2018-04-26T13:31:00Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getDist(v)) > alt) { setDist(v, alt); setPred(v, u); double priority = (getDist(v)) + (heuristic(v, dest)); q.add(new pathfinder.logic.pathfinders.PriorityNode(v, priority)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1379/buggy-version/src.main.java.pathfinder.logic.pathfinders.JumpPointSearch.java", "BodyUseAPI": ["pathfinder.logic.pathfinders.JumpPointSearch.setDist(pathfinder.logic.Node,double)", "pathfinder.logic.pathfinders.JumpPointSearch.setPred(pathfinder.logic.Node,pathfinder.logic.Node)", "pathfinder.logic.pathfinders.JumpPointSearch.heuristic(pathfinder.logic.Node,pathfinder.logic.Node)", "pathfinder.logic.pathfinders.JumpPointSearch.getDist(pathfinder.logic.Node)", "java.util.PriorityQueue<pathfinder.logic.pathfinders.PriorityNode>.add(pathfinder.logic.pathfinders.PriorityNode)"], "Fixed commit": "b0c8a3f4c34a7089d8448bae57d6c464cd46e752", "Url": "https://api.github.com/repos/mriekkin/pathfinder", "Date": "2018-08-13T14:37:34Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((col.getValue()) != null) { names.add(col.getValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7135/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.sql.Table.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(col.getValue().toString())", "com.Ben12345rocks.AdvancedCore.sql.Column.getValue()", "col.getValue().toString()"], "Fixed commit": "9185e486dc6f71bef0c6595406a21456494c9326", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-02-09T00:46:28Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.menu_Cart)) { android.content.Intent startTopic1 = new android.content.Intent(this, com.plantatree.plantatree.ShoppingCartActivity.class); startActivity(startTopic1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5443/buggy-version/Login.app.src.main.java.com.plantatree.plantatree.Quiz_Activity.java", "BodyUseAPI": [], "Fixed commit": "13d9ab3da7511dbfc1dcee0e5c3dbe3d765a1b33", "Url": "https://api.github.com/repos/PlantATree-Team-2-1/PlantATree", "Date": "2018-10-06T03:09:10Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotSameSession()) { return \"redirect:/training\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7926/buggy-version/src.main.java.net.zembrowski.julian.controlers.trainingControler.java", "BodyUseAPI": [], "Fixed commit": "50585300ce5496934891a3a75b80b17477ae6d5b", "Url": "https://api.github.com/repos/vatrasar/ProjektSlowka", "Date": "2018-09-19T08:38:20Z"},
{"Line": "=>1132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(section.equals(Record.COLLECTIONSPACE_COMMON_PART_NAME))) { org.dom4j.Element slrf = lrf.addElement(new org.dom4j.QName(\"schema\", thisns)); java.lang.String schemaName = r.getServicesSchemaName(fs.getSection()); if ((schemaName != null) && ((schemaName.trim().isEmpty()) == false)) { slrf.addText(r.getServicesSchemaName(fs.getSection())); }else { java.lang.String errMsg = java.lang.String.format(\"Can not find a valid schema name for field '%s' of section '%s' for record type '%s'. Check the section name if the field is part of a group. The section name for all fields in a group neeed to be the same.\", fs.getID(), fs.getSection(), r); org.collectionspace.chain.installation.ServiceBindingsGeneration.log.error(errMsg); throw new java.lang.RuntimeException(errMsg); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5052/buggy-version/cspi-installation.src.main.java.org.collectionspace.chain.installation.ServiceBindingsGeneration.java", "BodyUseAPI": [], "Fixed commit": "5baec10f347316d99e0ff6f910493ce4f7bc5a4d", "Url": "https://api.github.com/repos/collectionspace/application", "Date": "2018-10-12T18:57:23Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLevel()) == null) return super.getDisplayName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2667/buggy-version/src.entity.mobs.summon.SummonedMob.java", "BodyUseAPI": [], "Fixed commit": "595d9035866aa881f159d030c08e4c14a3c4b7d1", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-08-14T14:31:45Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.InventoryCrafting.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (stack.getItem().hasContainerItem(stack)) { net.minecraft.item.ItemStack container = stack.getItem().getContainerItem(stack); value += (com.irar.craftmatter.crafting.UnitMapping.getValueFor(stack)) - (com.irar.craftmatter.crafting.UnitMapping.getValueFor(container)); }else { value += com.irar.craftmatter.crafting.UnitMapping.getValueFor(stack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5069/buggy-version/src.main.java.com.irar.craftmatter.crafting.CraftMatterRecipe.java", "BodyUseAPI": ["stack.getItem().getContainerItem(net.minecraft.item.ItemStack)", "com.irar.craftmatter.crafting.UnitMapping.getValueFor(net.minecraft.item.ItemStack)", "com.irar.craftmatter.crafting.UnitMapping.getValueFor(net.minecraft.item.ItemStack)", "net.minecraft.item.ItemStack.getItem()"], "Fixed commit": "0b7aa60a8feae91fdd77c92e5137531f711ece97", "Url": "https://api.github.com/repos/IrresoluteArkia/craftmatter", "Date": "2018-01-21T02:33:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(enabled)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/553/buggy-version/app.src.main.java.com.mrinaanksinha.majorworkandroid.FocusBox.java", "BodyUseAPI": [], "Fixed commit": "322105def9db9497c7dcc3c59e78f33789fe56c7", "Url": "https://api.github.com/repos/Coder351/MajorWorkAndroid", "Date": "2018-07-01T08:03:49Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRepetition()) == (hft.wiinf.de.horario.model.Repetition.NONE)) { if (getStartTimeEvent().getTime().before(now.getTime())) { android.widget.Toast.makeText(this, R.string.startTime_afterScanning_past, Toast.LENGTH_SHORT).show(); return true; }else { return false; } }else { if (getEndDateEvent().getTime().before(now.getTime())) { android.widget.Toast.makeText(this, R.string.startTime_afterScanning_past, Toast.LENGTH_SHORT).show(); return true; }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4959/buggy-version/app.src.main.java.hft.wiinf.de.horario.TabActivity.java", "BodyUseAPI": [], "Fixed commit": "bb2577a121ec2fd5594043a980fedcf50ae0bff4", "Url": "https://api.github.com/repos/Horario/Horario", "Date": "2018-06-15T21:08:40Z"},
{"Line": "=>864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((orderModelList) != null) && ((orderModelList.size()) > 0)) { noSearchResultFound.setVisibility(View.GONE); recyclerView.setVisibility(View.VISIBLE); recyclerViewAdapter.notifyDataSetChanged(); }else { noSearchResultFound.setVisibility(View.VISIBLE); recyclerView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/327/buggy-version/app.src.main.java.com.imagesoftware.anubhav.vacmet.OrderStatus.java", "BodyUseAPI": [], "Fixed commit": "44f19b7cdfa1cc3eeb3619247e3dc28f79482b7a", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2018-01-20T08:45:05Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getFileStreamPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (file.delete()) java.lang.System.out.println(\"DELETED\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6712/buggy-version/app.src.main.java.com.example.checkers.GameComponents.IODataManager.java", "BodyUseAPI": [], "Fixed commit": "75bee612ab756964f457105a8db21f6e5cd6c322", "Url": "https://api.github.com/repos/Chrisg27/Checkers", "Date": "2018-03-03T13:03:01Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reference.getNodeId().getParentId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mid == 0) && (parentId.equals(NodeId.DOCUMENT_NODE))) { mid = getLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9059/buggy-version/src.org.exist.dom.persistent.NewArrayNodeSet.java", "BodyUseAPI": [], "Fixed commit": "064c81a494b5abd89a0a54a1332e1d0dc0fd43a8", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-08-11T04:29:17Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((txtLat.getText().toString().matches(\"\")) || (txtLon.getText().toString().matches(\"\"))) { android.widget.Toast.makeText(this, \"Please input coordinates\", Toast.LENGTH_LONG).show(); }else { intent.putExtra(\"lat\", java.lang.Double.parseDouble(txtLat.getText().toString())); intent.putExtra(\"long\", java.lang.Double.parseDouble(txtLon.getText().toString())); startActivityForResult(intent, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/993/buggy-version/Camping.app.src.main.java.com.example.sean.camping.MainActivity.java", "BodyUseAPI": ["txtLon.getText().toString()", "android.widget.EditText.getText()", "java.lang.Double.parseDouble(txtLat.getText().toString())", "android.widget.EditText.getText()", "java.lang.Double.parseDouble(txtLon.getText().toString())", "android.content.Intent.putExtra(java.lang.String,double)", "txtLat.getText().toString()", "android.content.Intent.putExtra(java.lang.String,double)"], "Fixed commit": "2fc0af4f1d03329f49889d401986cea8d42ee25f", "Url": "https://api.github.com/repos/skunz42/Camping", "Date": "2018-02-11T15:03:55Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((getCustomerOwned()) == null) || ((getCustomerOwned().getName()) == null)) || ((getCustomerOwned().getName()) == \"\u0422\u0435\u0441\u0442\")) || ((getCustomerOwned().getGender()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6354/buggy-version/src.lesson10.lesson10HW.FurnitureOrder.java", "BodyUseAPI": [], "Fixed commit": "ecad871d8541d28aea3d27cc5670c132192653d4", "Url": "https://api.github.com/repos/mashajmcz/grom", "Date": "2018-06-15T22:15:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bytes) != null) { java.io.InputStream is = new java.io.ByteArrayInputStream(bytes); coffeeshop.web.admin.AdminAddProductController.LOG.log(java.util.logging.Level.INFO, \"bytes to inputstream successfully\"); return new org.primefaces.model.DefaultStreamedContent(is, imageContentType, selectedFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8055/buggy-version/coffee-shop-main.src.main.java.coffeeshop.web.admin.AdminAddProductController.java", "BodyUseAPI": [], "Fixed commit": "c3aca0c1743d16de5272ee37970b7d49446d1376", "Url": "https://api.github.com/repos/bupt-spirit/coffee-shop", "Date": "2018-09-20T09:33:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((control.getPressedDown(ControllerBase.Joysticks.LEFT_STICK, ControllerBase.JoystickButtons.BTN3)) || (control.getPressedDown(ControllerBase.Joysticks.RIGHT_STICK, ControllerBase.JoystickButtons.BTN3))) { drivetrain.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1283/buggy-version/src.org.usfirst.frc.team2495.robot.Robot.java", "BodyUseAPI": [], "Fixed commit": "a7b49c614bb5edfd5774116ec1f239a17e8b2a14", "Url": "https://api.github.com/repos/FRC2495/FRC-2495-2018", "Date": "2018-01-31T22:58:12Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDisinct) { arrAnswer[haveGenerateNum] = randomNum; haveGenerateNum++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9125/buggy-version/src.CompareNum.AnswerGenerator.java", "BodyUseAPI": [], "Fixed commit": "51b2ea226f7df78cc47188414545e8eac6198aa0", "Url": "https://api.github.com/repos/yangjieer/TDDCompareNumber", "Date": "2018-01-19T13:35:10Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["men.brakh.chat.Message.decodeJSON(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(usersHandler(userMessage))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6452/buggy-version/Server.src.main.java.men.brakh.ServerSomthing.java", "BodyUseAPI": [], "Fixed commit": "4060303a916a2f8c989bbb451e46b06d22d5e5cb", "Url": "https://api.github.com/repos/N1ghtF1re/Chat", "Date": "2018-09-09T12:38:28Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["men.brakh.TwoPersonChat.getAgent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (agent != null) { server.agentsQueue.add(agent); agent.getSrvSom().serverSend(((user.getName()) + \" disconnected\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6452/buggy-version/Server.src.main.java.men.brakh.ServerSomthing.java", "BodyUseAPI": ["men.brakh.ExtendUser.getSrvSom()", "agent.getSrvSom().serverSend(((user.getName()) + \" disconnected\"))", "server.agentsQueue.add(men.brakh.ExtendUser)"], "Fixed commit": "4060303a916a2f8c989bbb451e46b06d22d5e5cb", "Url": "https://api.github.com/repos/N1ghtF1re/Chat", "Date": "2018-09-09T12:38:28Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.customerChatQueue.searchCustomer(men.brakh.chat.User)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (chat == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6452/buggy-version/Server.src.main.java.men.brakh.ServerSomthing.java", "BodyUseAPI": [], "Fixed commit": "4060303a916a2f8c989bbb451e46b06d22d5e5cb", "Url": "https://api.github.com/repos/N1ghtF1re/Chat", "Date": "2018-09-09T12:38:28Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m_Draw) { m_Status = GameStateEnum.END_GAME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7761/buggy-version/src.Engine.src.Engine.EngineGame.java", "BodyUseAPI": [], "Fixed commit": "163ef137192ae8b5de009b3e94aea985c6bac21b", "Url": "https://api.github.com/repos/OmerAndAssafHomeWork/NinARowApp", "Date": "2018-09-23T16:21:03Z"},
{"Line": "=>781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((col.getValue()) != null) { if (!(col.getValue().toString().isEmpty())) { delete = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4680/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.java", "BodyUseAPI": ["col.getValue().toString().isEmpty()", "col.getValue().toString()", "com.Ben12345rocks.AdvancedCore.sql.Column.getValue()"], "Fixed commit": "23520a81fd4f98204d6a42cc9fd29a90f77ee4de", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-01-22T00:10:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (titleCount) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8151/buggy-version/src.parsers.BookHandler.java", "BodyUseAPI": [], "Fixed commit": "41d6d9b62b79539c7abfc70e3c95bef9495fae69", "Url": "https://api.github.com/repos/hrhan/book", "Date": "2018-06-12T04:06:17Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.hostobjects.sso.SAMLSSORelyingPartyObject.getSSOProperty(SSOConstants.IDP_LOGOUT_URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.wso2.carbon.utils.xml.StringUtils.isEmpty(idpLogoutURL)) { idpLogoutURL = relyingPartyObject.getSSOProperty(SSOConstants.IDP_URL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5008/buggy-version/components.sso-hostobject.org.wso2.carbon.hostobjects.sso.src.main.java.org.wso2.carbon.hostobjects.sso.SAMLSSORelyingPartyObject.java", "BodyUseAPI": [], "Fixed commit": "d2bfa10f270808c2a94f494b994a6305718a10c9", "Url": "https://api.github.com/repos/wso2/carbon-apimgt", "Date": "2018-08-08T12:21:34Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (lResourceAsStream == null) { lResourceAsStream = pClassForRessource.getResourceAsStream(lAbsoluteKernelFilename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4044/buggy-version/src.main.java.clearcl.ClearCLProgram.java", "BodyUseAPI": [], "Fixed commit": "f91fa1fddb5a7de019727ca038e0d068f4347bd2", "Url": "https://api.github.com/repos/ClearControl/clearcl", "Date": "2018-07-17T21:09:57Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gianlu.commonutils.Adapters.OrderedRecyclerViewAdapter<VH, E, S, F>.SortingArrayList.indexOf(E)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (posIntoObjs != (-1)) { objs.remove(posIntoObjs); super.notifyItemRemoved(posIntoObjs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2438/buggy-version/utils.src.main.java.com.gianlu.commonutils.Adapters.OrderedRecyclerViewAdapter.java", "BodyUseAPI": ["com.gianlu.commonutils.Adapters.OrderedRecyclerViewAdapter<VH, E, S, F>.SortingArrayList.remove(int)", "java.lang.Object.notifyItemRemoved(int)"], "Fixed commit": "9d9f1ba97fbe6fdcf98fd2462f0471a72033f2d8", "Url": "https://api.github.com/repos/devgianlu/CommonUtils", "Date": "2018-08-13T13:37:13Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset & 1) != 0) { nanos += 30L * 1000000000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/550/buggy-version/h2.src.main.org.h2.expression.AggregateDataMedian.java", "BodyUseAPI": [], "Fixed commit": "3a460ebbf7a08ce10b6e729492ff31a9e2c4e96d", "Url": "https://api.github.com/repos/ScaY/h2database", "Date": "2018-02-05T02:13:10Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateSum & 1) != 0) { nanos += (org.h2.util.DateTimeUtils.NANOS_PER_DAY) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/550/buggy-version/h2.src.main.org.h2.expression.AggregateDataMedian.java", "BodyUseAPI": [], "Fixed commit": "3a460ebbf7a08ce10b6e729492ff31a9e2c4e96d", "Url": "https://api.github.com/repos/ScaY/h2database", "Date": "2018-02-05T02:13:10Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nanos >= (org.h2.util.DateTimeUtils.NANOS_PER_DAY)) { nanos -= org.h2.util.DateTimeUtils.NANOS_PER_DAY; dateSum++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/550/buggy-version/h2.src.main.org.h2.expression.AggregateDataMedian.java", "BodyUseAPI": [], "Fixed commit": "3a460ebbf7a08ce10b6e729492ff31a9e2c4e96d", "Url": "https://api.github.com/repos/ScaY/h2database", "Date": "2018-02-05T02:13:10Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (humans.contains(userId)) { humans.remove(userId); }else { aliens.remove(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5041/buggy-version/src.main.java.com.itberries2018.demo.websockets.RemotePointService.java", "BodyUseAPI": ["java.util.Queue<java.lang.Long>.remove(java.lang.Long)", "java.util.Queue<java.lang.Long>.remove(java.lang.Long)"], "Fixed commit": "0ad6a95fbd4796d23a991a1a8052ca62c5da21f9", "Url": "https://api.github.com/repos/ElenaOshkina/IT-Berries-02-2018", "Date": "2018-05-31T19:16:08Z"},
{"Line": "=>1611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.action.search.SearchResponse.getAggregations()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (aggregations != null) { org.elasticsearch.search.aggregations.bucket.global.Global globalAgg = aggregations.get(\"global\"); results.put(\"_all\", globalAgg.getDocCount()); aggregations = globalAgg.getAggregations(); if ((aggregations.get(\"filter\")) != null) { org.elasticsearch.search.aggregations.bucket.filter.Filter filterAgg = aggregations.get(\"filter\"); results.put(\"_filtered\", filterAgg.getDocCount()); aggregations = filterAgg.getAggregations(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4194/buggy-version/persistence-elasticsearch.core.src.main.java.org.apache.unomi.persistence.elasticsearch.ElasticSearchPersistenceServiceImpl.java", "BodyUseAPI": ["org.apache.unomi.persistence.elasticsearch.Aggregations.get(java.lang.String)"], "Fixed commit": "89808e58960e7044fff1c83ed64e732e7de61bdf", "Url": "https://api.github.com/repos/Taybou/incubator-unomi", "Date": "2018-08-03T09:06:40Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canAdd) { if ((flags & (edu.iu.dsc.tws.comms.api.MessageFlags.LAST)) == (edu.iu.dsc.tws.comms.api.MessageFlags.LAST)) { finishedMessages.put(source, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5900/buggy-version/twister2.comms.src.java.edu.iu.dsc.tws.comms.dfw.io.KeyedReceiver.java", "BodyUseAPI": [], "Fixed commit": "9650b184f4b3123ab77232787ee5c6b74b84cbc1", "Url": "https://api.github.com/repos/DSC-SPIDAL/twister2", "Date": "2018-09-19T16:01:19Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sudoku.solve()) { java.lang.System.out.println(sudoku.toString()); }else { java.lang.System.out.println((\"This puzzle is unsolvable! The file name is: \" + (file.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4069/buggy-version/src.Main.java", "BodyUseAPI": ["Sudoku.toString()", "java.io.PrintStream.println(sudoku.toString())"], "Fixed commit": "ea2a1051ba8628a4d8f51f3296185ce9c43af356", "Url": "https://api.github.com/repos/latenightwreck/SudokuSolver", "Date": "2018-08-12T22:28:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBorderRadius) != 0) { colorDrawable.setCornerRadius(mBorderRadius); if ((selectable instanceof android.graphics.drawable.RippleDrawable) && ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP))) { android.graphics.drawable.PaintDrawable mask = new android.graphics.drawable.PaintDrawable(android.graphics.Color.WHITE); mask.setCornerRadius(mBorderRadius); ((android.graphics.drawable.RippleDrawable) (selectable)).setDrawableByLayerId(android.R.id.mask, mask); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5914/buggy-version/android.src.main.java.com.swmansion.gesturehandler.react.RNGestureHandlerButtonViewManager.java", "BodyUseAPI": [], "Fixed commit": "9158956e3c65ac2710822c933cbda79f0b72c557", "Url": "https://api.github.com/repos/kmagiera/react-native-gesture-handler", "Date": "2018-04-24T13:11:47Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((wu.getHeader().getTimestamp()) + 45000) < (java.lang.System.currentTimeMillis())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2313/buggy-version/miner.src.Arktika.java", "BodyUseAPI": [], "Fixed commit": "f03f20c4f8a5e84c76f96ac29fc4c58544ad9088", "Url": "https://api.github.com/repos/snowblossomcoin/snowblossom", "Date": "2018-07-16T21:02:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) != null) { holder.servingSize.setText(((this.context.getString(R.string.Serves_Prefix)) + (java.lang.String.valueOf(recipe.getServings())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8165/buggy-version/app.src.main.java.com.pfohl.bakingapp.bakingapp.RecipeList.RecipeListAdapter.java", "BodyUseAPI": [], "Fixed commit": "c42a963f876fb484b7de1bb26b4456d61b496ab4", "Url": "https://api.github.com/repos/randypfohl/BakingApp", "Date": "2018-08-16T22:36:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) != null) { holder.itemView.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { com.pfohl.bakingapp.bakingapp.Widget.RecipeService.startActionUpdateListView(context, recipe); android.content.Intent intent = new android.content.Intent(context, com.pfohl.bakingapp.bakingapp.Recipe.RecipeActivity.class); intent.putExtra(context.getString(R.string.recipe_intent_tag), recipe); context.startActivity(intent); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8165/buggy-version/app.src.main.java.com.pfohl.bakingapp.bakingapp.RecipeList.RecipeListAdapter.java", "BodyUseAPI": [], "Fixed commit": "c42a963f876fb484b7de1bb26b4456d61b496ab4", "Url": "https://api.github.com/repos/randypfohl/BakingApp", "Date": "2018-08-16T22:36:51Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.catageek.ByteCart.ByteCart.debug) { ByteCart.log.info((\"Router world: \" + (center.getWorld().getName()))); ByteCart.log.info((((((\"Router location: X: \" + (center.getX())) + \" Y: \") + (center.getY())) + \" Z: \") + (center.getZ()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5383/buggy-version/src.com.github.catageek.ByteCart.Signs.BC8010.java", "BodyUseAPI": [], "Fixed commit": "cd1613a99f9850ffbed54277e3e869f6c80c3870", "Url": "https://api.github.com/repos/catageek/ByteCart", "Date": "2018-03-06T19:30:58Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.DBConnector.getTasks(currentUser.group.toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((taskList == null) || (taskList.isEmpty())) { taskList = new java.util.ArrayList<models.Task>(); taskList.add(new models.Task(\"Brak zadan\", 999, \"00\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6644/buggy-version/src.windows.StudentWindow.java", "BodyUseAPI": [], "Fixed commit": "1642da1e1bb71b4bdb0494578cb36986733d8bd2", "Url": "https://api.github.com/repos/Mich0232/elearning-project", "Date": "2018-01-24T11:32:48Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thisJob) != null) { thisDyeingProgram.setCustomerID(thisJob.getCustomerID()); thisDyeingProgram.setColorID(thisJob.getColorID()); thisDyeingProgram.setDesignID(thisJob.getDesignID()); }else { thisDyeingProgram.setCustomerID(0); thisDyeingProgram.setColorID(0); thisDyeingProgram.setDesignID(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1141/buggy-version/src.Forms.DyeingForm.java", "BodyUseAPI": [], "Fixed commit": "402e9ad6456be87d1638137fab58881ed6c02dd2", "Url": "https://api.github.com/repos/imbuenyson/ColorTexControlSlip", "Date": "2018-10-23T01:34:33Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) != null) { try { client.close(); } catch (org.apache.pulsar.client.api.PulsarClientException e) { org.apache.nifi.pulsar.StandardPulsarClientService.logger.error(\"Error closing Pulsar client\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9474/buggy-version/nifi-pulsar-client-service.src.main.java.org.apache.nifi.pulsar.StandardPulsarClientService.java", "BodyUseAPI": [], "Fixed commit": "82d9aa8507bcb0319801ffcafdc4a3acd270c292", "Url": "https://api.github.com/repos/openconnectors/nifi-pulsar-client-services", "Date": "2018-01-22T19:00:25Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.SortedMap<java.lang.Integer, com.instant.spring.rest.request.customer.VoucherDetails>.lastKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (maxNumberOfPeople >= (sendVoucherRequestBO.getAdults())) { com.instant.spring.rest.request.customer.VoucherDetails voucherDetails = voucherDetailsSortedMap.get(maxNumberOfPeople); voucherRequest.setVoucherheadid(voucherDetails.getVoucherheadid()); voucherRequest.setQuantity(voucherDetails.getQuantity()); voucherRequestList.add(voucherRequest); }else { com.instant.spring.rest.request.customer.VoucherDetails voucherDetails = voucherDetailsSortedMap.get(sendVoucherRequestBO.getAdults()); voucherRequest.setVoucherheadid(voucherDetails.getVoucherheadid()); voucherRequest.setQuantity(voucherDetails.getQuantity()); voucherRequestList.add(voucherRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6610/buggy-version/src.main.java.com.instant.spring.requesthandler.CustomerRequestHandler.java", "BodyUseAPI": ["java.util.SortedMap<java.lang.Integer, com.instant.spring.rest.request.customer.VoucherDetails>.get(sendVoucherRequestBO.getAdults())", "java.util.SortedMap<java.lang.Integer, com.instant.spring.rest.request.customer.VoucherDetails>.get(int)", "com.instant.spring.bo.SendVoucherRequestBO.getAdults()"], "Fixed commit": "5226210d2b457222fe6ac1db9774c199408b9de9", "Url": "https://api.github.com/repos/carufus/offer-campaign-api", "Date": "2018-08-25T03:57:30Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alignment) == 1) { return pointer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6204/buggy-version/community.unsafe.src.main.java.org.neo4j.unsafe.impl.internal.dragons.MemoryManager.java", "BodyUseAPI": [], "Fixed commit": "c715dec7a0ec40f772f45dfbfbd440a78d62a95c", "Url": "https://api.github.com/repos/systay/neo4j", "Date": "2018-04-30T11:00:06Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (off == 0) { return pointer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6204/buggy-version/community.unsafe.src.main.java.org.neo4j.unsafe.impl.internal.dragons.MemoryManager.java", "BodyUseAPI": [], "Fixed commit": "c715dec7a0ec40f772f45dfbfbd440a78d62a95c", "Url": "https://api.github.com/repos/systay/neo4j", "Date": "2018-04-30T11:00:06Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((postOpNode.expr.exprType.getType()) != (Symbol.Types.INT)) { throw new SemanticCheck.TypeError(\"Can't do Post ++/-- on a non-INT.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1540/buggy-version/src.SemanticCheck.LastPhase.java", "BodyUseAPI": [], "Fixed commit": "2151e120dad809494d4a66e5d11fcb5a42e66f71", "Url": "https://api.github.com/repos/New-bottle/Compiler", "Date": "2018-05-03T08:51:03Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((theView.authorComboBox.getSelectedItem().toString().equals(\"Choose an Author\")) && (theView.subjectComboBox.getSelectedItem().toString().equals(\"Choose a Subject\"))) { theView.searchTable.setModel(new javax.swing.table.DefaultTableModel()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3318/buggy-version/src.com.dave.chan.LibrarySystemController.java", "BodyUseAPI": ["theView.searchTable.setModel(javax.swing.table.DefaultTableModel)"], "Fixed commit": "6b721fd36cd06b5e9db5123788f1bdb23de38e41", "Url": "https://api.github.com/repos/evanBurg/LibrarySystem", "Date": "2018-08-01T17:18:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stdOut.isPresent())) { if (stdErr.isPresent()) { stdOut = stdErr; stdErr = java.util.Optional.empty(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5960/buggy-version/img-to-webp-lib.src.main.java.de.phip1611.img_to_webp.lib.service.impl.ProcessExecServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "12a5f28ee33bf49ff18217ca8a63c45727de69e7", "Url": "https://api.github.com/repos/phip1611/img-to-webp-spring-service", "Date": "2018-07-29T17:08:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ClassnameTree.getNodeByPrefix(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nodeByPrefix == null) return new java.util.TreeSet<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5811/buggy-version/src.ClassnameTree.java", "BodyUseAPI": [], "Fixed commit": "236980e738a2bb4ebdd987ba934bd195f483746b", "Url": "https://api.github.com/repos/LinarAbzaltdinov/ClassSearcher", "Date": "2018-01-11T19:45:33Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender.hasPermission(\"DCCore.chat.toggle\")) { com.Jacksonnn.DCCore.ChatSensor.ChatListener.chatEnabled = !(com.Jacksonnn.DCCore.ChatSensor.ChatListener.chatEnabled); sender.sendMessage(((org.bukkit.ChatColor.GREEN) + (com.Jacksonnn.DCCore.ChatSensor.ChatListener.chatEnabled ? ((GeneralMethods.prefix) + (GeneralMethods.successColor)) + \"Unmuted the chat\" : ((GeneralMethods.prefix) + (GeneralMethods.successColor)) + \"Muted the chat\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4683/buggy-version/src.com.Jacksonnn.DCCore.Commands.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((org.bukkit.ChatColor.GREEN) + (com.Jacksonnn.DCCore.ChatSensor.ChatListener.chatEnabled ? ((GeneralMethods.prefix) + (GeneralMethods.successColor)) + \"Unmuted the chat\" : ((GeneralMethods.prefix) + (GeneralMethods.successColor)) + \"Muted the chat\")))"], "Fixed commit": "bde94a5d05ac98175e300604ff91d1f0b530fbf9", "Url": "https://api.github.com/repos/Jacksonnnnn/DCCore", "Date": "2018-05-28T02:31:02Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ei.opensrp.commonregistry.CommonRepository.readAllcommonForField(android.database.Cursor,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((commonPersonObjectList.size()) > 0) { return commonPersonObjectList.get(0).getColumnmaps().get(\"name\"); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6671/buggy-version/opensrp-drishti.src.main.java.org.ei.opensrp.drishti.Fragments.ClientDetailFragment.java", "BodyUseAPI": ["commonPersonObjectList.get(0).getColumnmaps().get(java.lang.String)", "commonPersonObjectList.get(0).getColumnmaps()", "java.util.List<org.ei.opensrp.commonregistry.CommonPersonObject>.get(int)"], "Fixed commit": "b3782c211152054a526c2d23d6f80e3e6b0c9718", "Url": "https://api.github.com/repos/SoftmedTanzania/htmr_community_client", "Date": "2018-01-31T14:03:40Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((photo.getUrlC()) != null) { i.setData(android.net.Uri.parse(photo.getUrlC())); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8570/buggy-version/app.src.main.java.com.suhane.flickr.ui.photos.PhotoInfoActivity.java", "BodyUseAPI": ["com.suhane.flickr.repository.model.photos.getinfo.Photo.getUrlC()", "android.content.Intent.setData(android.net.Uri.parse(photo.getUrlC()))", "android.net.Uri.parse(photo.getUrlC())"], "Fixed commit": "f9f24e2d29df2a0ed5438b060e728db576e73a3b", "Url": "https://api.github.com/repos/shashanksuhane/FlickrPublicFeed", "Date": "2018-04-03T06:11:13Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toggle && (cb_Timestamp.getSelectedItem().equals(\"none\"))) { cb_Delimiter.setEnabled(false); }else { cb_Delimiter.setEnabled(toggle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3640/buggy-version/de.haniibrahim.seriallogger.SerialLogger.java", "BodyUseAPI": ["javax.swing.JComboBox.setEnabled(boolean)"], "Fixed commit": "de946bd126259d34a8a2eb2cfbb4dfcb812ce540", "Url": "https://api.github.com/repos/haniibrahim/SerialLogger", "Date": "2018-10-03T15:31:27Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.bm.werewolf.Activity.PlayActivity.updateTurnListener) != null) com.google.firebase.database.FirebaseDatabase.getInstance().getReference(\"Ingame Data\").child(Constant.roomID).child(\"Game Data\").removeEventListener(com.example.bm.werewolf.Activity.PlayActivity.updateTurnListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/546/buggy-version/app.src.main.java.com.example.bm.werewolf.Activity.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "a545570283632fd7cc2adae1ddda9668ff590996", "Url": "https://api.github.com/repos/IcedCrescent/Werewolf", "Date": "2018-06-15T06:34:18Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.bm.werewolf.Activity.PlayActivity.voteListener) != null) com.google.firebase.database.FirebaseDatabase.getInstance().getReference(\"Ingame Data\").child(Constant.roomID).child(\"Vote\").removeEventListener(com.example.bm.werewolf.Activity.PlayActivity.voteListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/546/buggy-version/app.src.main.java.com.example.bm.werewolf.Activity.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "a545570283632fd7cc2adae1ddda9668ff590996", "Url": "https://api.github.com/repos/IcedCrescent/Werewolf", "Date": "2018-06-15T06:34:18Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.bm.werewolf.Activity.PlayActivity.responseListener) != null) com.google.firebase.database.FirebaseDatabase.getInstance().getReference(\"Ingame Data\").child(Constant.roomID).child(\"response\").removeEventListener(com.example.bm.werewolf.Activity.PlayActivity.responseListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/546/buggy-version/app.src.main.java.com.example.bm.werewolf.Activity.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "a545570283632fd7cc2adae1ddda9668ff590996", "Url": "https://api.github.com/repos/IcedCrescent/Werewolf", "Date": "2018-06-15T06:34:18Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finished) == false) { finished = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4447/buggy-version/src.itemSrc.Worker.java", "BodyUseAPI": [], "Fixed commit": "7765b076237b750e04063e13e8b968fa7a50d9f8", "Url": "https://api.github.com/repos/moot5/WareHouse-Coursework", "Date": "2018-01-09T21:23:34Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(saveDataArrayList1.contains(saveDataArrayList.get(i)))) { saveDataArrayList1.add(saveDataArrayList.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4835/buggy-version/app.src.main.java.com.apoorv.dubey.android.instadia.CheckReportActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.apoorv.dubey.android.model.SaveData>.add(saveDataArrayList.get(i))", "java.util.ArrayList<com.apoorv.dubey.android.model.SaveData>.get(int)"], "Fixed commit": "5da71171f31eaeceb791d8b3b91e5040a8fa82de", "Url": "https://api.github.com/repos/Apoorv1180/Instadia", "Date": "2018-04-13T04:11:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filter) == null) { init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1771/buggy-version/core.src.main.java.hivemall.sketch.bloom.BloomFilterUDAF.java", "BodyUseAPI": [], "Fixed commit": "60be0825646d43b190fadbd89a2270eac8917d93", "Url": "https://api.github.com/repos/myui/incubator-hivemall", "Date": "2018-06-01T10:14:33Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((UISourceCode.assemblyText) != null) UISourceCode.assemblyText.setFont(new Font(\"Monospace\", UIUtils.calculateFontSize(UISourceCode.fontSize, scene.getWidth(), scene.getHeight())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1729/buggy-version/UISourceCode.java", "BodyUseAPI": [], "Fixed commit": "6563c44ffdfc2d36ee9a4bf79a00494887f57214", "Url": "https://api.github.com/repos/JamesWWalker/SecureCvisualJ", "Date": "2018-01-24T22:47:22Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((UISourceCode.assemblyText) != null) UISourceCode.assemblyText.setFont(new Font(\"Monospace\", UIUtils.calculateFontSize(UISourceCode.fontSize, scene.getWidth(), scene.getHeight())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1729/buggy-version/UISourceCode.java", "BodyUseAPI": [], "Fixed commit": "6563c44ffdfc2d36ee9a4bf79a00494887f57214", "Url": "https://api.github.com/repos/JamesWWalker/SecureCvisualJ", "Date": "2018-01-24T22:47:22Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userInfoService.verifyPwd(pwd, uid)) { return rtnParam(0, com.google.common.collect.ImmutableMap.of(\"msg\", true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3252/buggy-version/src.main.java.com.halo.api.UserRestApi.java", "BodyUseAPI": [], "Fixed commit": "927e785ce1843d55a9e63897bb9b6a8e811bd22f", "Url": "https://api.github.com/repos/MelloChan/halo-server", "Date": "2018-06-18T08:28:57Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (p != null) { if ((p.getSort()) == null) { q.limit(p.getPageSize()).skip(p.getOffset()); }else { q.with(p); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7584/buggy-version/eaphone-spring-data-query-mongodb.src.main.java.com.eaphonetech.common.datatables.mongodb.repository.EaphoneQueryRepositoryImpl.java", "BodyUseAPI": ["com.eaphonetech.common.datatables.mongodb.repository.Query.limit(p.getPageSize())", "org.springframework.data.domain.Pageable.getPageSize()", "org.springframework.data.domain.Pageable.getSort()", "q.limit(p.getPageSize()).skip(p.getOffset())", "com.eaphonetech.common.datatables.mongodb.repository.Query.with(org.springframework.data.domain.Pageable)", "org.springframework.data.domain.Pageable.getOffset()"], "Fixed commit": "0d5bdd6e3dca641033d64d5cc476005e6e331a68", "Url": "https://api.github.com/repos/windseeker2011/eaphone-spring-data-query", "Date": "2018-10-19T08:23:34Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.nrc.cadc.reg.client.RegistryClient.getServiceURL(java.net.URI,java.net.URI,ca.nrc.cadc.auth.AuthMethod)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (accessURL != null) { java.lang.String surl = accessURL.toExternalForm(); java.lang.String arraysize = java.lang.Integer.toString(surl.length()); ca.nrc.cadc.dali.tables.votable.VOTableParam accessParam = new ca.nrc.cadc.dali.tables.votable.VOTableParam(\"accessURL\", \"char\", arraysize, surl); metaResource.getParams().add(accessParam); }else { ca.nrc.cadc.tap.DefaultTableWriter.log.error((((((\"failed to find accessURL: resourceIdentifier=\" + resourceIdentifier) + \", standardID=\") + standardID) + \", authMethod=\") + cur)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3931/buggy-version/cadc-tap-server.src.main.java.ca.nrc.cadc.tap.DefaultTableWriter.java", "BodyUseAPI": ["java.net.URL.toExternalForm()"], "Fixed commit": "c23b7dc9b8ff1e20a47dd7557e66221fc09761d0", "Url": "https://api.github.com/repos/at88mph/tap", "Date": "2018-02-19T22:01:36Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= 0) { int bc = method.getBytecodeIndex(i); if ((method.getLineNumber(bc)) == l) { list.add(new com.ibm.wala.ipa.slicer.NormalStatement(n, i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8444/buggy-version/de.hu-berlin.slice.plugin.src.de.hu_berlin.slice.plugin.jobs.SlicingTask.java", "BodyUseAPI": ["java.util.List<com.ibm.wala.ipa.slicer.NormalStatement>.add(com.ibm.wala.ipa.slicer.NormalStatement)", "com.ibm.wala.classLoader.IBytecodeMethod.getBytecodeIndex(int)"], "Fixed commit": "9e5a81321a9774aa252c0597f0ab016a3af1e2d8", "Url": "https://api.github.com/repos/carwehlm/eclipse-slicer", "Date": "2018-02-13T11:33:45Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.isEmpty()) { format = \".*\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9218/buggy-version/dhis-2.dhis-api.src.main.java.org.hisp.dhis.textpattern.StringMethodType.java", "BodyUseAPI": [], "Fixed commit": "2b1e17d9a9d6f03418caaa6d5d4374e16c04c170", "Url": "https://api.github.com/repos/dhis2/dhis2-core", "Date": "2018-06-27T13:14:28Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gdl2.runtime.TemplateFiller.replaceVariablesWithValues(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.util.List<java.lang.Object>>,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isValueNotInstantiated(value)) { iterator.remove(); }else { iterator.set(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2227/buggy-version/src.main.java.org.gdl2.runtime.TemplateFiller.java", "BodyUseAPI": ["java.util.ListIterator.set(java.lang.Object)"], "Fixed commit": "37b54460d787617e34c6689c24b725e5b7b3e653", "Url": "https://api.github.com/repos/gdl-lang/gdl2", "Date": "2018-07-27T13:57:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xebia.vulnmanager.services.CompanyService.getCompanyByName(java.lang.String)", "com.xebia.vulnmanager.services.CompanyService.getTeamOfCompany(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((team == null) || (comp == null)) { return new org.springframework.http.ResponseEntity(new com.xebia.vulnmanager.models.net.ErrorMsg(\"Auth not correct!\"), org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4094/buggy-version/src.main.java.com.xebia.vulnmanager.controller.UploadFileController.java", "BodyUseAPI": [], "Fixed commit": "81682a175ad532bca046e0f18475fdf00fa84984", "Url": "https://api.github.com/repos/xebia-research/vulnmanager", "Date": "2018-04-16T13:18:31Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (adder != null) { decorated.use(adder); }else { decorated.use(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4064/buggy-version/pixellent-app.src.main.java.tda367.pixellent.app.model.tools.AbstractTool.java", "BodyUseAPI": ["tda367.pixellent.app.model.tools.AbstractTool.use(tda367.pixellent.app.model.tools.OperationAdder)"], "Fixed commit": "7401e9ebc4513f2b545fc17c1fdfe4f9ca6ba115", "Url": "https://api.github.com/repos/phiwar/TDA367", "Date": "2018-10-28T11:38:35Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(geText.getText().contains(osbText))) { final java.lang.String text = ((geText.getText()) + \"<br>OSBuddy Actively traded price: \") + (net.runelite.client.util.StackFormatter.formatNumber(result.getOverall_average())); geText.setText(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5768/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.grandexchange.GrandExchangePlugin.java", "BodyUseAPI": ["net.runelite.api.widgets.Widget.getText()", "net.runelite.api.widgets.Widget.setText(java.lang.String)"], "Fixed commit": "d8ca861162cf52664e1e7120776ff8e03e3b0258", "Url": "https://api.github.com/repos/Asymons/runelite", "Date": "2018-08-20T14:08:38Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paint.ImageCanvas.undoStack.empty()) { paint.ImageCanvas.discardUnsavedProgress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7202/buggy-version/ImageCanvas.java", "BodyUseAPI": [], "Fixed commit": "451d9b1404add32752a6eb04fabba23dc6fe8e10", "Url": "https://api.github.com/repos/ahauck74/Pain-t-", "Date": "2018-09-23T16:01:09Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (detectContentType) { java.lang.String fileName = getName().getBaseName(); java.lang.String contentType = com.celarli.commons.vfs.provider.google.GCSFileObject.tika.detect(fileName); blobInfo = com.google.cloud.storage.BlobInfo.newBuilder(urlFileName.getHostName(), path).setContentType(contentType).build(); }else { blobInfo = com.google.cloud.storage.BlobInfo.newBuilder(urlFileName.getHostName(), path).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/436/buggy-version/src.main.java.com.celarli.commons.vfs.provider.google.GCSFileObject.java", "BodyUseAPI": [], "Fixed commit": "951f437c9a95f1312e44a08033b15f50278c65a0", "Url": "https://api.github.com/repos/ashokmor/vfs-gcs", "Date": "2018-08-22T12:35:12Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedFeatures.size()) == 0) { for (int feature = 0; feature < (stats.featureCategoryJointCount.length); feature++) { selectedFeatures.put(feature, 0.0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1494/buggy-version/src.main.java.com.hankcs.hanlp.classification.features.ChiSquareFeatureExtractor.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Double>.put(int,double)"], "Fixed commit": "c1a6d5de7189b63c2d1d4411bcce62ae959bb4cf", "Url": "https://api.github.com/repos/hankcs/HanLP", "Date": "2018-08-18T13:44:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (btAdapter != null) { btAdapter.setName(name); android.content.Intent discover = new android.content.Intent(btAdapter.ACTION_REQUEST_DISCOVERABLE); discover.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION, 300); startActivity(discover); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3590/buggy-version/app.src.main.java.com.example.marta.blueteeth.StudentConnectScreen.java", "BodyUseAPI": ["android.bluetooth.BluetoothAdapter.setName(java.lang.String)"], "Fixed commit": "890c7664ddd480def281933959f75e9e829017b7", "Url": "https://api.github.com/repos/Martydude15/BlueTeeth", "Date": "2018-04-20T02:37:34Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.client.Minecraft.getMinecraft().theWorld) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9253/buggy-version/src.main.java.cc.hyperium.mixinsimp.world.HyperiumWorld.java", "BodyUseAPI": [], "Fixed commit": "168cd3e0c484f1582f9ef8bd16a1f025c7de3d3e", "Url": "https://api.github.com/repos/SiroQ/Hyperium", "Date": "2018-07-30T07:03:13Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (favphotomode) { org.fossasia.phimpme.gallery.util.AlertDialogsHelper.getTextDialog(this, deleteDialog, R.string.remove_from_favourites, R.string.delete_from_favourites_message, null); buttondelete = this.getString(R.string.remove); }else { org.fossasia.phimpme.gallery.util.AlertDialogsHelper.getTextDialog(this, deleteDialog, R.string.delete, R.string.delete_photo_message, null); buttondelete = this.getString(R.string.delete); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/360/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "2909bbfa7ae8b714fcafafcb4b8d6727f02fd17e", "Url": "https://api.github.com/repos/sauravvishal8797/phimpme-android", "Date": "2018-03-11T06:29:39Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sdf.parse(getPaCourante().getDatdeb()).after(sdf.parse(getLastPA().getDatdeb()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4489/buggy-version/src.main.java.nc.mairie.gestionagent.process.agent.OeAGENTPosAdm.java", "BodyUseAPI": [], "Fixed commit": "f4abc13258860afafbfbad7154913df58613d959", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh", "Date": "2018-02-23T04:52:42Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isNativeLayoutRTL()) { if ((getInnerView().getChildCount()) > 0) { int totalWidth = getInnerView().getChildAt(0).getWidth(); int displayWidth = getInnerView().getMeasuredWidth(); viewXInScroller = (totalWidth - ((component.getAbsoluteX()) - (getAbsoluteX()))) - displayWidth; }else { viewXInScroller = (component.getAbsoluteX()) - (getAbsoluteX()); } }else { viewXInScroller = (component.getAbsoluteX()) - (getAbsoluteX()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5732/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.WXScroller.java", "BodyUseAPI": [], "Fixed commit": "f34c82455d4f7cd030b8e688c230c9f0ba4a5fd9", "Url": "https://api.github.com/repos/win80540/incubator-weex", "Date": "2018-10-17T08:21:39Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trayIcon) != null) { javax.swing.SwingUtilities.invokeLater(new java.lang.Runnable() { @java.lang.Override public void run() { trayIcon.displayMessage(caption, message, messageType); } }); }else { javafx.scene.control.Alert alert = new javafx.scene.control.Alert(javafx.scene.control.Alert.AlertType.INFORMATION, message, javafx.scene.control.ButtonType.OK); alert.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7718/buggy-version/src.application.tray.SystemTraySingleton.java", "BodyUseAPI": [], "Fixed commit": "2ed18fac53d10dbfdf7bdf6e19e28fa72ffa1a97", "Url": "https://api.github.com/repos/travispessetto/OrigamiGUI", "Date": "2018-07-03T04:39:40Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.robotricker.transportpipes.utils.staticutils.InventoryUtils.createItemFromIdAndDataString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getData().getData()) == 0) { recipe.addIngredient(item.getType(), (-1)); }else { recipe.addIngredient(item.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2463/buggy-version/src.main.java.de.robotricker.transportpipes.utils.config.RecipesConf.java", "BodyUseAPI": ["org.bukkit.inventory.ShapelessRecipe.addIngredient(item.getData())", "org.bukkit.inventory.ItemStack.getType()", "org.bukkit.inventory.ShapelessRecipe.addIngredient(item.getType(),int)", "org.bukkit.inventory.ItemStack.getData()"], "Fixed commit": "ef3087de14ea3dc4dbfe6333eb7ee331293ae509", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2018-02-04T16:35:48Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.robotricker.transportpipes.utils.staticutils.InventoryUtils.createItemFromIdAndDataString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getData().getData()) == 0) { recipe.setIngredient(key.charAt(0), item.getType(), (-1)); }else { recipe.setIngredient(key.charAt(0), item.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2463/buggy-version/src.main.java.de.robotricker.transportpipes.utils.config.RecipesConf.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getType()", "org.bukkit.inventory.ItemStack.getData()", "org.bukkit.inventory.ShapedRecipe.setIngredient(char,item.getType(),int)", "org.bukkit.inventory.ShapedRecipe.setIngredient(char,item.getData())"], "Fixed commit": "ef3087de14ea3dc4dbfe6333eb7ee331293ae509", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2018-02-04T16:35:48Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.robotricker.transportpipes.utils.staticutils.InventoryUtils.createItemFromIdAndDataString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getData().getData()) == 0) { recipe.addIngredient(item.getType(), (-1)); }else { recipe.addIngredient(item.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2463/buggy-version/src.main.java.de.robotricker.transportpipes.utils.config.RecipesConf.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getType()", "org.bukkit.inventory.ShapelessRecipe.addIngredient(item.getData())", "org.bukkit.inventory.ItemStack.getData()", "org.bukkit.inventory.ShapelessRecipe.addIngredient(item.getType(),int)"], "Fixed commit": "ef3087de14ea3dc4dbfe6333eb7ee331293ae509", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2018-02-04T16:35:48Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.robotricker.transportpipes.utils.staticutils.InventoryUtils.createItemFromIdAndDataString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getData().getData()) == 0) { recipe.setIngredient(key.charAt(0), item.getType(), (-1)); }else { recipe.setIngredient(key.charAt(0), item.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2463/buggy-version/src.main.java.de.robotricker.transportpipes.utils.config.RecipesConf.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getData()", "org.bukkit.inventory.ShapedRecipe.setIngredient(char,item.getType(),int)", "org.bukkit.inventory.ShapedRecipe.setIngredient(char,item.getData())", "org.bukkit.inventory.ItemStack.getType()"], "Fixed commit": "ef3087de14ea3dc4dbfe6333eb7ee331293ae509", "Url": "https://api.github.com/repos/RoboTricker/Transport-Pipes", "Date": "2018-02-04T16:35:48Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rs == null) { return 1000000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4605/buggy-version/maven-project.src.main.java.loginPackage.DBConnection.java", "BodyUseAPI": [], "Fixed commit": "fd7be52c711cf915a667f54fd2c46a8cca39694a", "Url": "https://api.github.com/repos/stefanleithenmayr/Lagerverwaltung", "Date": "2018-02-12T08:14:59Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getOnlinePlayers()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(players.isEmpty())) { return players.get(java.util.concurrent.ThreadLocalRandom.current().nextInt(players.size())); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3648/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Misc.PlayerUtils.java", "BodyUseAPI": ["java.util.ArrayList<org.bukkit.entity.Player>.get(int)", "java.util.concurrent.ThreadLocalRandom.nextInt(players.size())", "java.util.ArrayList<org.bukkit.entity.Player>.size()"], "Fixed commit": "033b12abc060e99110e767e201871cc4a4b2db65", "Url": "https://api.github.com/repos/SeDark/AdvancedCore", "Date": "2018-08-05T19:35:38Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parsed > (((size.get()) * (size.get())) - 1)) || (parsed < 0)) java.lang.System.out.println(((\" Value must be between 0 .. \" + ((size.get()) - 1)) + \"\")); else java.lang.System.out.println(\" Value already exist.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9833/buggy-version/src.main.java.Main.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicInteger.get()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "237895de927a0dea2548007edc00cdc544040b66", "Url": "https://api.github.com/repos/bondars95/n-puzzle", "Date": "2018-03-22T22:34:14Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["som.compiler.KernanClient.getKernanResponse()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (response.has(\"line\")) { errorMessage += (\" (@ line \" + (response.get(\"line\").getAsInt())) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2464/buggy-version/src.som.compiler.SourcecodeCompiler.java", "BodyUseAPI": ["response.get(\"line\").getAsInt()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "2ff8dbc409f302bc9ff9c7e49467c0cba4000ead", "Url": "https://api.github.com/repos/richard-roberts/SOMns", "Date": "2018-05-08T06:49:40Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeZone == null) { timeZone = java.util.TimeZone.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9043/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JodaCodec.java", "BodyUseAPI": [], "Fixed commit": "4d78c05f2c2d5a493307028a8bc04051cf1ab68b", "Url": "https://api.github.com/repos/GulajavaMinistudio/fastjson", "Date": "2018-10-23T02:26:19Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mitchellbosecke.pebble.template.EvaluationContextImpl.getVariable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pageVar instanceof com.eden.orchid.api.theme.pages.OrchidPage) { freshTag.setPage(((com.eden.orchid.api.theme.pages.OrchidPage) (pageVar))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1329/buggy-version/OrchidCore.src.main.java.com.eden.orchid.impl.compilers.pebble.tag.SimpleTagParser.java", "BodyUseAPI": [], "Fixed commit": "f2325bc09a88c3ccd2dbc4e01cf4c36011bc801b", "Url": "https://api.github.com/repos/JavaEden/Orchid", "Date": "2018-07-18T03:10:20Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mitchellbosecke.pebble.template.EvaluationContextImpl.getVariable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pageVar instanceof com.eden.orchid.api.theme.pages.OrchidPage) { freshTag.setPage(((com.eden.orchid.api.theme.pages.OrchidPage) (pageVar))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1329/buggy-version/OrchidCore.src.main.java.com.eden.orchid.impl.compilers.pebble.tag.TabbedTagParser.java", "BodyUseAPI": [], "Fixed commit": "f2325bc09a88c3ccd2dbc4e01cf4c36011bc801b", "Url": "https://api.github.com/repos/JavaEden/Orchid", "Date": "2018-07-18T03:10:20Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mitchellbosecke.pebble.template.EvaluationContext.getVariable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pageVar instanceof com.eden.orchid.api.theme.pages.OrchidPage) { freshFunction.setPage(((com.eden.orchid.api.theme.pages.OrchidPage) (pageVar))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1329/buggy-version/OrchidCore.src.main.java.com.eden.orchid.impl.compilers.pebble.PebbleWrapperTemplateFunction.java", "BodyUseAPI": [], "Fixed commit": "f2325bc09a88c3ccd2dbc4e01cf4c36011bc801b", "Url": "https://api.github.com/repos/JavaEden/Orchid", "Date": "2018-07-18T03:10:20Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (employee != null) employeeCabRequestList.add(new com.suntechnologies.cabbie.Model.Employee(employee.employee_name, employee.employee_id, employee.employee_manger_name, employee.employee_desitnation, employee.manager_status, employee.facility_status, employee.pickuptime, employee.date, employee.registrationToken, employee.uid));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2230/buggy-version/app.src.main.java.com.suntechnologies.cabbie.Fragments.EmployeeFragment.java", "BodyUseAPI": ["java.util.ArrayList<com.suntechnologies.cabbie.Model.Employee>.add(com.suntechnologies.cabbie.Model.Employee)"], "Fixed commit": "7a336f7e3c653cd0c51bf83d51f8e5e83bfef1fa", "Url": "https://api.github.com/repos/hareeshsun/Cabbie", "Date": "2018-07-09T15:21:10Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pathFollower) != null) { pathFollower.telemetryUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/500/buggy-version/com.evolutionftc.autopilot.AutopilotSystem.java", "BodyUseAPI": [], "Fixed commit": "42df0a9c449fe34a5a9af868f536a317b1a18b32", "Url": "https://api.github.com/repos/aedancullen/ftc-autopilot", "Date": "2018-01-19T22:57:57Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (factor < targetScaleFactor) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3792/buggy-version/src.main.java.de.digitalcollections.iiif.hymir.image.business.ImageServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "00b5412864d0f3ef250d877c6ba37bffbcfc028e", "Url": "https://api.github.com/repos/dbmdz/iiif-server-hymir", "Date": "2018-01-23T16:04:18Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((idUserWallets != null) && (idUser != null)) { if (idUserWallets.equals(idUser)) { textViewMadCoin.setText((((((getResources().getString(R.string.fragment_payment_solde_compte_text)) + \" \") + (wallets.get(i).getBalance())) + \" \") + (getResources().getString(R.string.app_payment_symbole_type_ariary_text)))); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6865/buggy-version/LeZomaDeTana.app.src.main.java.com.team.lezomadetana.fragment.FragmentPayment.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "404bfbc00c92d686532eb68bb78d7c87505324d8", "Url": "https://api.github.com/repos/rathierry/Android", "Date": "2018-09-18T18:53:34Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.BYTE)) || ((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.SHORT))) || ((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.INT))) || ((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.LONG))) { return org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForIntegral(inputPage.getStatistics()).createEncoder(null); }else if (((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.FLOAT)) || ((inputPage.getDataType()) == (org.apache.carbondata.core.metadata.datatype.DataTypes.DOUBLE))) { return org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForFloating(inputPage.getStatistics()).createEncoder(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4381/buggy-version/core.src.main.java.org.apache.carbondata.core.datastore.page.encoding.ColumnPageEncoder.java", "BodyUseAPI": ["org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForIntegral(inputPage.getStatistics()).createEncoder(<nulltype>)", "org.apache.carbondata.core.datastore.page.ColumnPage.getStatistics()", "org.apache.carbondata.core.datastore.page.ColumnPage.getDataType()", "org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForFloating(inputPage.getStatistics()).createEncoder(<nulltype>)", "org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForFloating(inputPage.getStatistics())", "org.apache.carbondata.core.datastore.page.ColumnPage.getStatistics()", "org.apache.carbondata.core.datastore.page.encoding.DefaultEncodingFactory.selectCodecByAlgorithmForIntegral(inputPage.getStatistics())", "org.apache.carbondata.core.datastore.page.ColumnPage.getDataType()"], "Fixed commit": "81cdd81ecd8a232980d62ba1f9fce5ec2e96eabb", "Url": "https://api.github.com/repos/sounakr/incubator-carbondata", "Date": "2018-07-04T04:52:26Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.paperdb.Paper.book().read(MainActivity.CURRENTUSER)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7465/buggy-version/app.src.main.java.com.hollybits.socialpetnetwork.notifications.NotificationsAcceptor.java", "BodyUseAPI": [], "Fixed commit": "93ba5f1891a14ddbf71478293f8071e72e5c97b8", "Url": "https://api.github.com/repos/MaxKomarenski/SocialPetNetwork", "Date": "2018-09-14T11:32:12Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aQute.jpm.lib.JustAnotherPackageManager.parseCommandData(aQute.jpm.lib.ArtifactData)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cmd.jvmLocation) == null) { cmd.jvmLocation = vms.first().path; }else if (cmd.jvmLocation.endsWith(\"java.exe\")) { java.io.File javaFile = new java.io.File(cmd.jvmLocation); cmd.jvmLocation = javaFile.getParentFile().getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6983/buggy-version/src.main.java.aQute.jpm.main.Main.java", "BodyUseAPI": ["cmd.jvmLocation.endsWith(java.lang.String)"], "Fixed commit": "5b67c1fc76fbe33e85816e57f1bdc4fe180aff80", "Url": "https://api.github.com/repos/bndtools/jpmcli", "Date": "2018-09-04T08:31:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dateAsString == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7762/buggy-version/elasticsearch.common.src.main.java.org.apache.metamodel.elasticsearch.common.ElasticSearchDateConverter.java", "BodyUseAPI": [], "Fixed commit": "9f3cc1daa543774da27d134e6389f6eff9608b76", "Url": "https://api.github.com/repos/arjansh/metamodel", "Date": "2018-01-12T15:31:48Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ViewFlipper.getDisplayedChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((position + 1) >= (org.xwiki.android.sync.auth.AuthenticatorActivity.orderOfFlippers.size())) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8250/buggy-version/app.src.main.java.org.xwiki.android.sync.auth.AuthenticatorActivity.java", "BodyUseAPI": [], "Fixed commit": "a9d7a2843a80a41bf247623f694e7556ec5c77ab", "Url": "https://api.github.com/repos/xwiki-contrib/android-authenticator", "Date": "2018-07-09T11:16:38Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(cell)) { setValue(cell.getDateCellValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1502/buggy-version/bundle.src.main.java.com.adobe.acs.commons.data.Variant.java", "BodyUseAPI": ["com.adobe.acs.commons.data.Variant.setValue(cell.getDateCellValue())", "org.apache.poi.ss.usermodel.Cell.getDateCellValue()"], "Fixed commit": "eafd11d8ecf4f11981d26f5d72c99fd6ba8bb71c", "Url": "https://api.github.com/repos/tml/acs-aem-commons", "Date": "2018-05-16T22:00:25Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toString()", "java.lang.String.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((email.isEmpty()) || (password.isEmpty())) { javax.swing.JOptionPane.showMessageDialog(this, \"Empty Fields\"); }else { if (checkUserData(email, password)) { MovieShowcase mv = new MovieShowcase(); mainPage.setVisible(false); }else { javax.swing.JOptionPane.showMessageDialog(this, \"Invalid credentials\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5708/buggy-version/src.MainApp.java", "BodyUseAPI": ["MainApp.checkUserData(java.lang.String,java.lang.String)"], "Fixed commit": "4d36346f4abc6078ba729cde88bdab6222732547", "Url": "https://api.github.com/repos/biku1998/Desktop-Application-BookMyShow-", "Date": "2018-03-02T06:40:15Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.javadoc.ClassDoc.superclass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!ignoreSuperType) && (!(this.isInStopClasses(superClass)))) { if ((typeToProcess.qualifiedTypeName().equals(\"T\")) || (\"[]\".equals(typeToProcess.dimension()))) { return ((typeToProcess.toString()) + \" extends \") + (this.getTypeName(typeToProcess.asClassDoc().superclassType(), false)); }else { return ((typeToProcess.asClassDoc().toString()) + \" extends \") + (this.getTypeName(typeToProcess.asClassDoc().superclassType(), false)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5314/buggy-version/src.main.java.net.winroad.wrdoclet.builder.AbstractDocBuilder.java", "BodyUseAPI": [], "Fixed commit": "5210574ac4f208b0dc810841d48d1fa8d2891b08", "Url": "https://api.github.com/repos/WinRoad-NET/wrdocletbase", "Date": "2018-02-11T13:22:37Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.exists()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (permDestCombinedFileExists) { org.endeavourhealth.sftpreader.implementations.barts.BartsSftpBatchSplitter.LOG.debug(((\"Combined file \" + combinedName) + \" already exists in permanent storage...skipping\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9864/buggy-version/src.sftpreader.src.main.java.org.endeavourhealth.sftpreader.implementations.barts.BartsSftpBatchSplitter.java", "BodyUseAPI": [], "Fixed commit": "cb71a403744713d86888903fddcd60a6fb89c2eb", "Url": "https://api.github.com/repos/endeavourhealth/SFTPReader", "Date": "2018-02-20T17:03:05Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < (com.mta.tehreer.unicode.GeneralCategory.all.length)) { return com.mta.tehreer.unicode.GeneralCategory.all[index]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9142/buggy-version/tehreer-android.src.main.java.com.mta.tehreer.unicode.GeneralCategory.java", "BodyUseAPI": [], "Fixed commit": "b3ee7eb946fd2bf78c064b35e1c0e65416be4f64", "Url": "https://api.github.com/repos/mta452/Tehreer-Android", "Date": "2018-06-13T17:13:58Z"},
{"Line": "=>971", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count > 500) { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\" + new String()\\n+\\\"\"); count = 0; }else { result.append(original.substring(current, (current + Offset)).replace(\"\\r\", \"\").replace(\"\\n\", \"\\\\n\")).append(\"\\\"\\n+\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/648/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.model.utils.NodeUtil.java", "BodyUseAPI": [], "Fixed commit": "b0d731af89cd0ed0a2fefe5f269c9b87ade72237", "Url": "https://api.github.com/repos/pyzhou-talend/tcommon-studio-se", "Date": "2018-02-07T02:45:50Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 3) { appContext = ((java.lang.String) (args[2])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4889/buggy-version/components.apimgt.org.wso2.carbon.apimgt.hostobjects.src.main.java.org.wso2.carbon.apimgt.hostobjects.APIStoreHostObject.java", "BodyUseAPI": [], "Fixed commit": "eed29c0381e4918c6ba683734ed787d89e326f23", "Url": "https://api.github.com/repos/wso2/carbon-apimgt", "Date": "2018-10-05T06:52:34Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.wso2.carbon.apimgt.hostobjects.APIStoreHostObject.adminAppName.equals(appContext))) { authorized = org.wso2.carbon.apimgt.impl.utils.APIUtil.checkPermissionQuietly(usernameWithDomain, APIConstants.Permissions.API_SUBSCRIBE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4889/buggy-version/components.apimgt.org.wso2.carbon.apimgt.hostobjects.src.main.java.org.wso2.carbon.apimgt.hostobjects.APIStoreHostObject.java", "BodyUseAPI": [], "Fixed commit": "eed29c0381e4918c6ba683734ed787d89e326f23", "Url": "https://api.github.com/repos/wso2/carbon-apimgt", "Date": "2018-10-05T06:52:34Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGameModel.getCurrentPlayer()) == 0) { mFirstPlayerToken.selected(); mSecondPlayerToken.unselected(); }else { mSecondPlayerToken.selected(); mFirstPlayerToken.unselected(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3151/buggy-version/ConnectFour.app.src.main.java.com.iamrobots.connectfour.GamePlay.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "329917e046ac6c8d54d1fca29c7f3e5953d9c2c6", "Url": "https://api.github.com/repos/iamrobots/Connect-Four-Android", "Date": "2018-02-15T18:40:50Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((o1.getPairs().size()) == 0) && ((o2.getPairs().size()) == 0)) return 0; else if ((o1.getPairs().size()) == 0) return -1; else if ((o2.getPairs().size()) == 0) return 1; else return comp.compare(o1.getPairs().get(0), o2.getPairs().get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9458/buggy-version/src.main.java.net.preibisch.mvrecon.process.interestpointregistration.pairwise.constellation.PairwiseSetup.java", "BodyUseAPI": ["net.preibisch.mvrecon.process.interestpointregistration.pairwise.constellation.Subset<V>.getPairs()", "o1.getPairs().get(int)", "net.preibisch.mvrecon.process.interestpointregistration.pairwise.constellation.Subset<V>.getPairs()", "net.preibisch.mvrecon.process.interestpointregistration.pairwise.constellation.Subset<V>.getPairs()", "net.preibisch.mvrecon.process.interestpointregistration.pairwise.constellation.Subset<V>.getPairs()", "o1.getPairs().size()", "java.util.Comparator<net.imglib2.util.Pair<V, V>>.compare(o1.getPairs().get(0),o2.getPairs().get(0))", "o2.getPairs().size()", "o2.getPairs().get(int)"], "Fixed commit": "6620d33779a89c3507fefb9e776ddf3c315c3cb9", "Url": "https://api.github.com/repos/PreibischLab/multiview-reconstruction", "Date": "2018-06-13T10:34:20Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7491/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "408fc308f0d79fabf220e1a9fc3f589128c62546", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.collections4.CollectionUtils.isEmpty(list)) { ind.xuchuanyin.tpch.report.QueryHistogram.LOGGER.error(\"Encounter empty list for statistic, will return empty histogram\"); return new ind.xuchuanyin.tpch.report.QueryHistogram(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7581/buggy-version/src.main.java.ind.xuchuanyin.tpch.report.QueryHistogram.java", "BodyUseAPI": [], "Fixed commit": "8d8f063f45f0784bf33af25804a3bfbf8e3b4c9f", "Url": "https://api.github.com/repos/xuchuanyin/tpch-java", "Date": "2018-10-10T13:12:18Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(actionThread.isAlive())) { actionThread.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1318/buggy-version/app.src.main.java.classes.utils.MusicService.java", "BodyUseAPI": ["java.lang.Thread.start()"], "Fixed commit": "a58070887f462aec51a1e8e2b76e67d3d2cc7210", "Url": "https://api.github.com/repos/antianyu/MyMusic", "Date": "2015-10-08T11:40:31Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((str[0].charAt(0)) == 'L') errors = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9682/buggy-version/Data.java", "BodyUseAPI": [], "Fixed commit": "6afea429709a5c21ee11c9d4a0cdd1d48974b3e9", "Url": "https://api.github.com/repos/ttshivhula/lem-in-java", "Date": "2018-06-10T17:27:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (propIds != null) newList.set(com.ibm.ws.session.store.cache.SessionInfo.PROP_IDS, propIds.clone());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2332/buggy-version/dev.com.ibm.ws.session.cache.src.com.ibm.ws.session.store.cache.SessionInfo.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Object>.set(int,java.lang.Object)", "java.util.TreeSet<java.lang.String>.clone()"], "Fixed commit": "bd2a79fab0c5eedbddec4be45a31ee6f694d9204", "Url": "https://api.github.com/repos/levin-noro/open-liberty", "Date": "2018-02-28T18:25:12Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeRow == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5703/buggy-version/app.src.main.java.com.cristiangarcia.classschedule.TimetableFragment.java", "BodyUseAPI": [], "Fixed commit": "4cc3342778aeabe3a0ae636053f170817f7021cc", "Url": "https://api.github.com/repos/cristian99garcia/ClassSchedule", "Date": "2018-08-15T22:14:12Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(reqBody.contains(\"\\n\"))) { reqBody += \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3583/buggy-version/src.main.java.com.elasticsearchcache.warmup.WarmUpService.java", "BodyUseAPI": [], "Fixed commit": "5f5c1d14776213792fa7f7a1d99e65aa9edb55b4", "Url": "https://api.github.com/repos/lks21c/elasticsearch-cache", "Date": "2018-06-12T02:14:24Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geoserver.catalog.LayerInfo.getResource()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((resource.getLatLonBoundingBox()) != null) { re.setLatLonBoundingBox(resource.getLatLonBoundingBox().getMinX(), resource.getLatLonBoundingBox().getMinY(), resource.getLatLonBoundingBox().getMaxX(), resource.getLatLonBoundingBox().getMaxY(), resource.getSRS()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6393/buggy-version/src.community.taskmanager.src.main.java.org.geoserver.taskmanager.tasks.AbstractRemotePublicationTaskTypeImpl.java", "BodyUseAPI": ["org.geoserver.catalog.ResourceInfo.getLatLonBoundingBox()", "resource.getLatLonBoundingBox().getMinY()", "org.geoserver.catalog.ResourceInfo.getSRS()", "it.geosolutions.geoserver.rest.encoder.GSResourceEncoder.setLatLonBoundingBox(resource.getLatLonBoundingBox().getMinX(),resource.getLatLonBoundingBox().getMinY(),resource.getLatLonBoundingBox().getMaxX(),resource.getLatLonBoundingBox().getMaxY(),resource.getSRS())", "resource.getLatLonBoundingBox().getMinX()", "org.geoserver.catalog.ResourceInfo.getLatLonBoundingBox()", "resource.getLatLonBoundingBox().getMaxX()", "org.geoserver.catalog.ResourceInfo.getLatLonBoundingBox()", "org.geoserver.catalog.ResourceInfo.getLatLonBoundingBox()", "resource.getLatLonBoundingBox().getMaxY()"], "Fixed commit": "a52e3abe55f835aaa9fb22e0c52b05e056150923", "Url": "https://api.github.com/repos/DOV-Vlaanderen/geoserver", "Date": "2018-04-06T12:21:02Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.getParameterValues().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((layer.getDefaultStyle()) != null) { layerEncoder.setDefaultStyle(wsStyle, layer.getDefaultStyle().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6393/buggy-version/src.community.taskmanager.src.main.java.org.geoserver.taskmanager.tasks.AbstractRemotePublicationTaskTypeImpl.java", "BodyUseAPI": ["it.geosolutions.geoserver.rest.encoder.GSLayerEncoder.setDefaultStyle(java.lang.String,layer.getDefaultStyle().getName())", "layer.getDefaultStyle().getName()", "org.geoserver.catalog.LayerInfo.getDefaultStyle()"], "Fixed commit": "a52e3abe55f835aaa9fb22e0c52b05e056150923", "Url": "https://api.github.com/repos/DOV-Vlaanderen/geoserver", "Date": "2018-04-06T12:21:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.LPAR()) != null) { return prj.clark.lang.basic.tree.NodeFactory.getExpression(ctx.expression(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8082/buggy-version/project.src.main.java.prj.clark.lang.basic.tree.NodeFactory.java", "BodyUseAPI": ["prj.clark.lang.basic.tree.NodeFactory.getExpression(ctx.expression(0))", "BasicParser.ExpressionContext.expression(int)"], "Fixed commit": "88794185af7b2963cd07947eeb56b99a3ee18f5d", "Url": "https://api.github.com/repos/matthew-c21/SeminarProject", "Date": "2018-09-26T02:25:37Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(configFile.exists())) { configFile.getParentFile().mkdirs(); configFile.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7922/buggy-version/API.src.main.java.com.novamaday.novalib.api.bungee.file.CustomConfig.java", "BodyUseAPI": ["java.io.File.createNewFile()", "java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "e88eab155ad1020ec53b7ceae809093699f3d7a9", "Url": "https://api.github.com/repos/DreamExposure/NovaLib", "Date": "2018-06-27T17:12:02Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.matrix) == null) { throw new java.lang.IllegalArgumentException(\"Matrix cannot be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4581/buggy-version/implementations.java.OWAT-lib.src.main.java.com.ebp.owat.lib.datastructure.matrix.utils.coordinate.MatrixCoordinate.java", "BodyUseAPI": [], "Fixed commit": "5476554203b25d75f1906a0014011762f08f808c", "Url": "https://api.github.com/repos/Epic-Breakfast-Productions/OWAT", "Date": "2018-03-28T01:14:54Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((output.length()) > 4) && (output.substring(0, 4).equals(\"when\"))) { output = NaturalLanguageUtil.when(output); }else if (((output.length()) > 3) && (output.substring(0, 3).equals(\"how\"))) { output = NaturalLanguageUtil.how(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9055/buggy-version/Chatbot.src.NaturalLanguageUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.equals(java.lang.String)", "NaturalLanguageUtil.how(java.lang.String)", "java.lang.String.length()", "NaturalLanguageUtil.when(java.lang.String)"], "Fixed commit": "4a121f202c7c2f06b0f66143b7d5e28ec769a2cf", "Url": "https://api.github.com/repos/GeniusHourCHS/Test", "Date": "2018-04-30T01:02:32Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (question.equals(\"how are you?\")) { return \"I am pleased to meet you!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9055/buggy-version/Chatbot.src.NaturalLanguageUtil.java", "BodyUseAPI": [], "Fixed commit": "4a121f202c7c2f06b0f66143b7d5e28ec769a2cf", "Url": "https://api.github.com/repos/GeniusHourCHS/Test", "Date": "2018-04-30T01:02:32Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (courseBatchResult.getCourseAdditionalInfo().get(JsonKey.LEAF_NODE_COUNT))) { courseMap.put(JsonKey.LEAF_NODE_COUNT, java.lang.Integer.parseInt(courseBatchResult.getCourseAdditionalInfo().get(JsonKey.LEAF_NODE_COUNT).trim())); }else { courseMap.put(JsonKey.LEAF_NODE_COUNT, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6628/buggy-version/actors.common.src.main.java.org.sunbird.learner.actors.coursebatch.CourseEnrollmentActor.java", "BodyUseAPI": ["courseBatchResult.getCourseAdditionalInfo().get(JsonKey.LEAF_NODE_COUNT)", "java.util.Map<java.lang.String, java.lang.Object>.put(JsonKey.LEAF_NODE_COUNT,int)", "courseBatchResult.getCourseAdditionalInfo().get(JsonKey.LEAF_NODE_COUNT).trim()", "org.sunbird.models.course.batch.CourseBatch.getCourseAdditionalInfo()", "java.lang.Integer.parseInt(courseBatchResult.getCourseAdditionalInfo().get(JsonKey.LEAF_NODE_COUNT).trim())"], "Fixed commit": "071798a3764fdf23b37d8fde46b6b918571f93f9", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-09-28T07:04:50Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filename.equalsIgnoreCase(\"metadata.json\")) { filename = filename.replace(\".\", \"_user.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1353/buggy-version/src.main.java.org.kpmp.packages.PackageService.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "305bdddc7176899eb9836832acbe1ee03c84574a", "Url": "https://api.github.com/repos/KPMP/orion-data", "Date": "2018-09-25T18:59:49Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["world.getEntitiesWithinAABB(net.minecraft.entity.EntityLivingBase.class, this.getEntityBoundingBox().grow(10, 10, 10), this::canEatEntity).stream().findAny()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (optional.isPresent()) { this.setAttackTarget(optional.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2778/buggy-version/src.main.java.org.jurassicraft.server.entity.DinosaurEntity.java", "BodyUseAPI": ["org.jurassicraft.server.entity.DinosaurEntity.setAttackTarget(optional.get())", "java.util.Optional<net.minecraft.entity.EntityLivingBase>.get()"], "Fixed commit": "c5ffebf6670a582a008cd37527b3a7b4d9b4425b", "Url": "https://api.github.com/repos/JurassiCraftTeam/JurassiCraft2", "Date": "2018-05-18T22:42:23Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(leave)) { this.action = \"NOT SELECTED\"; this.actionInfo = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3273/buggy-version/ChatLogicEngine.src.Engine.Players.PokerPlayer.java", "BodyUseAPI": [], "Fixed commit": "e4db7006d33a4eb239405237393483d48a0877a1", "Url": "https://api.github.com/repos/danieltg/TexasHoldemWebApp", "Date": "2018-02-24T16:54:08Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((currentDate.getMonthOfYear()) >= 10) { maxDate = new org.joda.time.LocalDate(((currentDate.getYear()) + 1), SEP, 30); }else { maxDate = new org.joda.time.LocalDate(currentDate.getYear(), SEP, 30); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3371/buggy-version/dhis2-android-app.src.main.java.org.dhis2.mobile.utils.date.iterators.FinOctYearIterator.java", "BodyUseAPI": [], "Fixed commit": "85ed47cc81d73119af8db9e17101a9fcdf535760", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-datacapture", "Date": "2018-04-27T13:08:38Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((currentDate.getMonthOfYear()) >= 10) { cPeriod = new org.joda.time.LocalDate(currentDate.getYear(), OCT, 1); }else { cPeriod = new org.joda.time.LocalDate(((currentDate.getYear()) - 1), OCT, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3371/buggy-version/dhis2-android-app.src.main.java.org.dhis2.mobile.utils.date.iterators.FinOctYearIterator.java", "BodyUseAPI": [], "Fixed commit": "85ed47cc81d73119af8db9e17101a9fcdf535760", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-datacapture", "Date": "2018-04-27T13:08:38Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((currentDate.getMonthOfYear()) >= 4) { cPeriod = new org.joda.time.LocalDate(currentDate.getYear(), APR, 1); }else { cPeriod = new org.joda.time.LocalDate(((currentDate.getYear()) - 1), APR, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3371/buggy-version/dhis2-android-app.src.main.java.org.dhis2.mobile.utils.date.iterators.FinAprilYearIterator.java", "BodyUseAPI": [], "Fixed commit": "85ed47cc81d73119af8db9e17101a9fcdf535760", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-datacapture", "Date": "2018-04-27T13:08:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((currentDate.getMonthOfYear()) >= 4) { maxDate = new org.joda.time.LocalDate(((currentDate.getYear()) + 1), MAR, 31); }else { maxDate = new org.joda.time.LocalDate(currentDate.getYear(), MAR, 31); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3371/buggy-version/dhis2-android-app.src.main.java.org.dhis2.mobile.utils.date.iterators.FinAprilYearIterator.java", "BodyUseAPI": [], "Fixed commit": "85ed47cc81d73119af8db9e17101a9fcdf535760", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-datacapture", "Date": "2018-04-27T13:08:38Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((currentDate.getMonthOfYear()) >= 7) { maxDate = new org.joda.time.LocalDate(((currentDate.getYear()) + 1), JUN, 30); }else { maxDate = new org.joda.time.LocalDate(currentDate.getYear(), JUN, 30); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3371/buggy-version/dhis2-android-app.src.main.java.org.dhis2.mobile.utils.date.iterators.FinJulyYearIterator.java", "BodyUseAPI": [], "Fixed commit": "85ed47cc81d73119af8db9e17101a9fcdf535760", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-datacapture", "Date": "2018-04-27T13:08:38Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((currentDate.getMonthOfYear()) >= 7) { cPeriod = new org.joda.time.LocalDate(currentDate.getYear(), JUL, 1); }else { cPeriod = new org.joda.time.LocalDate(((currentDate.getYear()) - 1), JUL, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3371/buggy-version/dhis2-android-app.src.main.java.org.dhis2.mobile.utils.date.iterators.FinJulyYearIterator.java", "BodyUseAPI": [], "Fixed commit": "85ed47cc81d73119af8db9e17101a9fcdf535760", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-datacapture", "Date": "2018-04-27T13:08:38Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((LiveLoggerActivity.serialPort) != null) { threshold = java.lang.Integer.parseInt(com.maxieds.chameleonminilivedebugger.LiveLoggerActivity.getSettingFromDevice(LiveLoggerActivity.serialPort, \"THRESHOLD?\")); thresholdSeekbar.setProgress(threshold); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4975/buggy-version/app.src.main.java.com.maxieds.chameleonminilivedebugger.TabFragment.java", "BodyUseAPI": [], "Fixed commit": "7cfd20dd4cdd5da5fb9abac5de3e5ab6d84e0708", "Url": "https://api.github.com/repos/maxieds/ChameleonMiniLiveDebugger", "Date": "2018-01-15T05:42:53Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmPort == null) return ChameleonIO.DEVICE_RESPONSE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4975/buggy-version/app.src.main.java.com.maxieds.chameleonminilivedebugger.LiveLoggerActivity.java", "BodyUseAPI": [], "Fixed commit": "7cfd20dd4cdd5da5fb9abac5de3e5ab6d84e0708", "Url": "https://api.github.com/repos/maxieds/ChameleonMiniLiveDebugger", "Date": "2018-01-15T05:42:53Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().setTitle(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7836/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.publicize.PublicizeBaseFragment.java", "BodyUseAPI": [], "Fixed commit": "887c7aa76ebb822a4e6d62d04ac631cb9bbcff20", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-03-14T15:33:15Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(path.startsWith(\"/\"))) { newPath = \"./\" + (path); }else { newPath = path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6736/buggy-version/genepi-db.src.main.java.genepi.db.h2.H2Connector.java", "BodyUseAPI": [], "Fixed commit": "be80ce0294a0f3c9d807518b466990b92270a444", "Url": "https://api.github.com/repos/genepi/genepi-libs", "Date": "2018-01-23T12:41:27Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (batchSize != null) { this.batchSize = batchSize; }else { this.batchSize = 128; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6284/buggy-version/server.app.org.grouplens.samantha.modeler.instance.GroupedEntityList.java", "BodyUseAPI": [], "Fixed commit": "13f255306bf838ba23564ef02f6a9e7db07f802e", "Url": "https://api.github.com/repos/grouplens/samantha", "Date": "2018-01-19T07:04:26Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tokens[i].getToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isAllUpperCase(token)) && (org.apache.commons.lang3.StringUtils.isAllUpperCase(prevToken.replaceAll(\"-\", \"\")))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4595/buggy-version/languagetool-language-modules.de.src.main.java.org.languagetool.rules.de.DashRule.java", "BodyUseAPI": [], "Fixed commit": "9c56a1ecbc329abbe95d6c72d85b538ee5c9e2a6", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2018-02-11T10:13:45Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nwnx.nwnx2.jvm.NWScript.getBaseItemType(org.nwnx.nwnx2.jvm.NWObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(GameSystems.DurabilitySystem.GetValidDurabilityTypes().contains(itemType))) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1092/buggy-version/src.main.java.GameSystems.DurabilitySystem.java", "BodyUseAPI": [], "Fixed commit": "7013b41ecb46acf03083c5551e62219d6518099b", "Url": "https://api.github.com/repos/zunath/CyberpunkZombieSurvival_JVM", "Date": "2018-03-02T06:05:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (s != null) comments.add(commentRepository.findOne(s));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9401/buggy-version/src.main.java.com.conferencias.tfg.controller.Comments.java", "BodyUseAPI": ["com.conferencias.tfg.repository.CommentRepository.findOne(java.lang.String)", "java.util.List<com.conferencias.tfg.domain.Comment>.add(commentRepository.findOne(s))"], "Fixed commit": "53be889a630f60e96133f76870d09767b75d90b2", "Url": "https://api.github.com/repos/Congresy/BackendAPI", "Date": "2018-07-20T22:02:55Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8113/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "b1b2fc6fc522c67b122e16ea0d34bd67984637a0", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((branchFilter) == null) { initializeBranchFilter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7156/buggy-version/src.main.java.com.dabsquared.gitlabjenkins.GitLabPushTrigger.java", "BodyUseAPI": [], "Fixed commit": "20064342c7686fa6f3cf7abddac9c8b812806092", "Url": "https://api.github.com/repos/jenkinsci/gitlab-plugin", "Date": "2018-07-30T10:09:22Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getParentOfType(com.intellij.psi.PsiElement,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (xmlAttrib == null) { org.ballerinalang.plugins.idea.completion.BallerinaCompletionUtils.addExpressionKeywordsAsLookups(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4063/buggy-version/tool-plugins.intellij.src.main.java.org.ballerinalang.plugins.idea.completion.BallerinaKeywordCompletionProvider.java", "BodyUseAPI": [], "Fixed commit": "aa75343d10a85a23176d683ae046f7ad6b8217a9", "Url": "https://api.github.com/repos/Shan1024/ballerina", "Date": "2018-05-22T09:28:39Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) { mp.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7306/buggy-version/app.src.main.java.com.reo.lingo.Fragments.FourTileQuestionFragment.java", "BodyUseAPI": [], "Fixed commit": "acc33aec75bba6713de0f9f30352a57014334f55", "Url": "https://api.github.com/repos/arist0cles/Reolingo", "Date": "2018-07-20T00:49:19Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity instanceof com.facebook.react.modules.core.PermissionAwareActivity) { ((com.facebook.react.modules.core.PermissionAwareActivity) (activity)).requestPermissions(PERMISSIONS, requestCode, listener); }else if (activity instanceof com.imagepicker.permissions.OnImagePickerPermissionsCallback) { ((com.imagepicker.permissions.OnImagePickerPermissionsCallback) (activity)).setPermissionListener(listener); android.support.v4.app.ActivityCompat.requestPermissions(activity, PERMISSIONS, requestCode); }else { final java.lang.String errorDescription = new java.lang.StringBuilder(activity.getClass().getSimpleName()).append(\" must implement \").append(com.imagepicker.permissions.OnImagePickerPermissionsCallback.class.getSimpleName()).append(\" or \").append(com.facebook.react.modules.core.PermissionAwareActivity.class.getSimpleName()).toString(); throw new java.lang.UnsupportedOperationException(errorDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4678/buggy-version/android.src.main.java.com.imagepicker.ImagePickerModule.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()", "android.app.Activity.getClass()", "android.support.v4.app.ActivityCompat.requestPermissions(android.app.Activity,java.lang.String[],int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "activity.getClass().getSimpleName()"], "Fixed commit": "a82f824cf8c3cde70caf322b4ba3c56971e90372", "Url": "https://api.github.com/repos/DaBs/react-native-image-picker", "Date": "2018-05-13T17:17:36Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((body.get(\"Error Message\")) != null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8171/buggy-version/src.main.java.com.gzhang.screener.schedulers.ScheduledTasks.java", "BodyUseAPI": [], "Fixed commit": "38bee53e40562cf64e3c2ca16911ba6bd3ed15c5", "Url": "https://api.github.com/repos/GarlandZhang/screener", "Date": "2018-10-16T05:15:09Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((body.get(\"Information\")) != null) { com.gzhang.screener.schedulers.ScheduledTasks.successApiCall = false; return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8171/buggy-version/src.main.java.com.gzhang.screener.schedulers.ScheduledTasks.java", "BodyUseAPI": [], "Fixed commit": "38bee53e40562cf64e3c2ca16911ba6bd3ed15c5", "Url": "https://api.github.com/repos/GarlandZhang/screener", "Date": "2018-10-16T05:15:09Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (a.getCurrency().equalsIgnoreCase(b.getCurrency())) { if ((a.getValue()) == (b.getValue())) return 0; if (((b.getValue()) - (a.getValue())) < 0) return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2655/buggy-version/src.coinpurse.ValueComparator.java", "BodyUseAPI": ["coinpurse.Valuable.getValue()", "coinpurse.Valuable.getValue()", "coinpurse.Valuable.getValue()", "coinpurse.Valuable.getValue()"], "Fixed commit": "4be21249604397a6bdc434a15974c742723405cc", "Url": "https://api.github.com/repos/OOP2018/coinpurse-Charin009", "Date": "2018-02-07T09:19:24Z"},
{"Line": "=>1366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.metastore.api.LockComponent.getTablename()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tblName != null) { s = (((((\"select t2w_writeid from TXN_TO_WRITE_ID where\" + \" t2w_database = \") + (org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(dbName.toLowerCase()))) + \" and t2w_table = \") + (org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(tblName.toLowerCase()))) + \" and t2w_txnid = \") + txnid; org.apache.hadoop.hive.metastore.txn.TxnHandler.LOG.debug(((\"Going to execute query <\" + s) + \">\")); rs = stmt.executeQuery(s); if (rs.next()) { writeId = rs.getLong(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3310/buggy-version/standalone-metastore.src.main.java.org.apache.hadoop.hive.metastore.txn.TxnHandler.java", "BodyUseAPI": ["org.apache.hadoop.hive.metastore.txn.TxnHandler.quoteString(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "c0f61ecbd1639e64c77195394b393170bdd2317b", "Url": "https://api.github.com/repos/sankarh/hive", "Date": "2018-02-15T10:49:38Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasGuardlessAnySignalConnetion) { javaWriter.emitStatement(\"return null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4414/buggy-version/anno-state-machine-processor.src.main.java.se.transientink.annostatemachine.processor.StateMachineCreator.java", "BodyUseAPI": [], "Fixed commit": "c068f0562e821b1383e4e32eb6a089a5fd5b0620", "Url": "https://api.github.com/repos/MaxRingstrom/anno-state-machine", "Date": "2018-07-04T11:42:54Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bid.getBidder().equals(currBidder.getName())) { sb.append(((item.toString()) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7753/buggy-version/JavaCode.src.UserInterface.BidderConsole.java", "BodyUseAPI": [], "Fixed commit": "53cc0d89a893697722cbb7e4113520da19a6be97", "Url": "https://api.github.com/repos/sriharikuduva/checkin1", "Date": "2018-05-08T08:08:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cell.getCellTypeEnum()) == (CellType.NUMERIC)) { field.set(o, java.lang.String.valueOf(cell.getNumericCellValue())); }else { field.set(o, cell.getStringCellValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2151/buggy-version/src.main.java.red.hohola.jane.base.excel.ExcelReader.java", "BodyUseAPI": ["red.hohola.jane.base.excel.Cell.getNumericCellValue()", "java.lang.reflect.Field.set(T,java.lang.String)", "red.hohola.jane.base.excel.Cell.getStringCellValue()", "java.lang.reflect.Field.set(T,cell.getStringCellValue())", "java.lang.String.valueOf(cell.getNumericCellValue())"], "Fixed commit": "5a1acfdd65996f440e2055217e582b3268c11844", "Url": "https://api.github.com/repos/LaoYii/ExcelHelper", "Date": "2018-09-29T17:58:26Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((identityInfo.getUnionApproveStatus2()) != null) { criteria.andEqualTo(\"unionApproveStatus2\", identityInfo.getUnionApproveStatus2()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4679/buggy-version/src.main.java.com.orange.score.module.score.service.impl.IdentityInfoServiceImpl.java", "BodyUseAPI": ["com.orange.score.database.score.model.IdentityInfo.getUnionApproveStatus2()", "tk.mybatis.mapper.entity.Example.Criteria.andEqualTo(java.lang.String,identityInfo.getUnionApproveStatus2())"], "Fixed commit": "7011db76f4369060efed1c6e52a812bb4f76f2c5", "Url": "https://api.github.com/repos/topie/score-server", "Date": "2018-04-13T10:37:33Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.data.mongodb.core.MongoTemplate.findOne(org.springframework.data.mongodb.core.query.Query,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (roadInfo != null) { java.util.List<com.genture.simulatePlatform.model.RoadCondition> roadConditionList = roadInfo.getRoadCondition(); for (int i = 0; i < (roadConditionList.size()); i++) { if ((roadConditionList.get(i).isStatus()) == true) { roadCondition = roadConditionList.get(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6666/buggy-version/src.main.java.com.genture.simulatePlatform.dao.RoadInfoDao.java", "BodyUseAPI": ["com.genture.simulatePlatform.model.RoadInfo.getRoadCondition()"], "Fixed commit": "bde66931d16aecfcdbb79ed8087b978071539ccb", "Url": "https://api.github.com/repos/ChrisJun0731/simulatePlatform", "Date": "2018-01-10T03:16:39Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_network.isRegenerating())) _network.updatePowerLevels();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1730/buggy-version/src.powercrystals.minefactoryreloaded.tile.rednet.TileEntityRedNetCable.java", "BodyUseAPI": ["powercrystals.minefactoryreloaded.tile.rednet.RedstoneNetwork.updatePowerLevels()"], "Fixed commit": "dd23bb6036102f0bdbc41ff8e8260f1f8b2dd404", "Url": "https://api.github.com/repos/P3pp3rF1y/MineFactoryReloaded", "Date": "2018-02-11T22:59:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.hasChild(\"profileimage\")) { java.lang.String myProfileImage = dataSnapshot.child(\"profileimage\").getValue().toString(); com.squareup.picasso.Picasso.with(this).load(myProfileImage).placeholder(R.drawable.profile).into(userProfileImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6756/buggy-version/app.src.main.java.com.example.steph.socialapp.SettingsActivity.java", "BodyUseAPI": ["dataSnapshot.child(\"profileimage\").getValue().toString()", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"profileimage\").getValue()"], "Fixed commit": "df12378a881c56f58cc3ec23c390998e92452ea3", "Url": "https://api.github.com/repos/stephyswe/Android-Poster", "Date": "2018-09-30T15:53:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offering.getGuestType()) == (com.cloud.network.Network.GuestType.L2)) { java.lang.String vxlan = com.cloud.network.Networks.BroadcastDomainType.getValue(network.getBroadcastUri()); network.setBroadcastUri(BroadcastDomainType.Vxlan.toUri(vxlan)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4885/buggy-version/plugins.network-elements.vxlan.src.com.cloud.network.guru.VxlanGuestNetworkGuru.java", "BodyUseAPI": [], "Fixed commit": "2afa3b7d1a4c0d7ac886b69d2f346cc52dc72c40", "Url": "https://api.github.com/repos/shapeblue/cloudstack", "Date": "2018-03-03T17:49:36Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (redmineIssue != null) { redmineIssue = redmine.getIssueManager().getIssueById(redmineIssue.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/263/buggy-version/src.com.thundersoft.jiraredmine.Main.java", "BodyUseAPI": ["redmine.getIssueManager().getIssueById(redmineIssue.getId())", "com.taskadapter.redmineapi.bean.Issue.getId()"], "Fixed commit": "2c16a67dd5459fa84b7bd024e047861cbec7c4d3", "Url": "https://api.github.com/repos/ranzhy/SynchronizeRedmineAndJira", "Date": "2018-06-03T04:28:18Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cc.hyperium.netty.NettyClient.getClient()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5084/buggy-version/src.main.java.cc.hyperium.handlers.handlers.LocationHandler.java", "BodyUseAPI": [], "Fixed commit": "f9f7181350b15ea1c0a0891985de4e40f73113c1", "Url": "https://api.github.com/repos/HyperiumClient/Hyperium", "Date": "2018-06-05T01:07:52Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cc.hyperium.netty.NettyClient.getClient()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5084/buggy-version/src.main.java.cc.hyperium.handlers.handlers.LocationHandler.java", "BodyUseAPI": [], "Fixed commit": "f9f7181350b15ea1c0a0891985de4e40f73113c1", "Url": "https://api.github.com/repos/HyperiumClient/Hyperium", "Date": "2018-06-05T01:07:52Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { mNotificationManager.createNotificationChannel(new android.app.NotificationChannel(\"\", \"\", android.app.NotificationManager.IMPORTANCE_DEFAULT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7394/buggy-version/app.src.main.java.com.sebastianrask.bettersubscription.broadcasts_and_services.NotificationReceiver.java", "BodyUseAPI": [], "Fixed commit": "69948367f7c0100f9dc33955df900cdd62832f90", "Url": "https://api.github.com/repos/kasperski97/Pocket-Plays-for-Twitch", "Date": "2018-05-12T18:19:37Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.projawe.redmine.api.RedmineAPI.getProjects()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (projects != null) { for (com.projawe.redmine.api.model.project.Project p : projects) { if (projectName.equals(p.getName())) { return p; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4670/buggy-version/src.com.projawe.redmine.api.RedmineAPI.java", "BodyUseAPI": [], "Fixed commit": "531bddd104539fa30afed605aa5b57b2f0af069b", "Url": "https://api.github.com/repos/peterhalada/redmine-java-api", "Date": "2018-05-29T11:19:01Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(url.equals(\"\"))) { com.squareup.picasso.Picasso.get().load(url).fit().centerCrop().placeholder(R.drawable.meal).error(R.drawable.meal).into(imgView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6377/buggy-version/app.src.main.java.com.example.mor17_000.eat2fit_app.ImageLoader.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.get().load(url).fit().centerCrop()", "com.squareup.picasso.Picasso.get().load(url).fit().centerCrop().placeholder(R.drawable.meal).error(R.drawable.meal).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.get().load(url).fit().centerCrop().placeholder(R.drawable.meal)", "com.squareup.picasso.Picasso.get().load(url).fit()", "com.squareup.picasso.Picasso.get().load(url).fit().centerCrop().placeholder(R.drawable.meal).error(R.drawable.meal)", "com.squareup.picasso.Picasso.get().load(java.lang.String)"], "Fixed commit": "638edc666b2f38f2697a148d882e7e5abb4ce0d0", "Url": "https://api.github.com/repos/morcohen171188/Eat2Fit_app", "Date": "2018-06-05T21:44:52Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldToChange.equals(\"First name\")) field = \"firstName\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7469/buggy-version/src.Controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "9b5847b71f7a2664644517f64023d342d23ff2b3", "Url": "https://api.github.com/repos/shalevf6/Vacation4U", "Date": "2018-10-30T15:14:05Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldToChange.equals(\"Last name\")) field = \"lastName\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7469/buggy-version/src.Controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "9b5847b71f7a2664644517f64023d342d23ff2b3", "Url": "https://api.github.com/repos/shalevf6/Vacation4U", "Date": "2018-10-30T15:14:05Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldToChange.equals(\"Password\")) field = \"password\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7469/buggy-version/src.Controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "9b5847b71f7a2664644517f64023d342d23ff2b3", "Url": "https://api.github.com/repos/shalevf6/Vacation4U", "Date": "2018-10-30T15:14:05Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldToChange.equals(\"Birth date\")) field = \"birthDate\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7469/buggy-version/src.Controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "9b5847b71f7a2664644517f64023d342d23ff2b3", "Url": "https://api.github.com/repos/shalevf6/Vacation4U", "Date": "2018-10-30T15:14:05Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldToChange.equals(\"City\")) field = \"city\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7469/buggy-version/src.Controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "9b5847b71f7a2664644517f64023d342d23ff2b3", "Url": "https://api.github.com/repos/shalevf6/Vacation4U", "Date": "2018-10-30T15:14:05Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (_useHttps == true) { callbackPrefix = \"https://localhost/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/942/buggy-version/android.src.main.java.io.fullstack.oauth.OAuthManagerModule.java", "BodyUseAPI": [], "Fixed commit": "45e9ce54de5dbac0eaa447a7d73a49812d0cc527", "Url": "https://api.github.com/repos/nodejsaber/react-native-oauth", "Date": "2018-09-04T03:55:46Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((coin == 25) || (coin == 10)) || (coin == 5)) || (coin == 1)) { state.insertCoin(coin); }else { java.lang.System.out.println(\"The machine doesn't recognize your coin. Please try again.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/159/buggy-version/lab1.gumball-java-pattern.GumballMachine.java", "BodyUseAPI": ["State.insertCoin(int)"], "Fixed commit": "6caf51dc0d4b4df8a2b327676c94d8f6d77d92eb", "Url": "https://api.github.com/repos/kathy31629/cmpe202", "Date": "2018-09-08T03:35:07Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (R.id.param_mail)) { android.content.Intent emailIntent = new android.content.Intent(android.content.Intent.ACTION_SENDTO, android.net.Uri.parse((\"mailto:\" + \"param.shah18@gmail.com\")).buildUpon().build()); startActivity(android.content.Intent.createChooser(emailIntent, \"Send email...\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7611/buggy-version/app.src.main.java.com.hostel9.android.hostel9app.CulturalFragment.java", "BodyUseAPI": [], "Fixed commit": "3258fa11153a7e991f3772c6a66bce9c9025c125", "Url": "https://api.github.com/repos/OwaisChunawala/Hostel-9-App", "Date": "2018-03-30T17:03:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listOfItems) != null) return listOfItems.size(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4804/buggy-version/app.src.main.java.nl.jesseklijn.androidassignments.MyListAdapter.java", "BodyUseAPI": [], "Fixed commit": "55b999d60c88efd5cfcca4a41bd8702305e5b494", "Url": "https://api.github.com/repos/jesseklijn/Android-Assignments", "Date": "2018-10-19T07:50:07Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((guess / 2) < 1) { value = ((int) (java.lang.Math.ceil((((double) (guess)) / 2)))); }else value = guess / 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7769/buggy-version/src.GameSolver.java", "BodyUseAPI": [], "Fixed commit": "bc21c500909ef1c014852e0147033e7ad2a69597", "Url": "https://api.github.com/repos/OOP2018/guessing-game-Patcharapoln", "Date": "2018-01-17T09:54:54Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((game.getUpperBound()) == 1) guess = game.getUpperBound(); else guess = (game.getUpperBound()) / 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7769/buggy-version/src.GameSolver.java", "BodyUseAPI": ["NumberGame.getUpperBound()", "NumberGame.getUpperBound()"], "Fixed commit": "bc21c500909ef1c014852e0147033e7ad2a69597", "Url": "https://api.github.com/repos/OOP2018/guessing-game-Patcharapoln", "Date": "2018-01-17T09:54:54Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["evt.content.substring(((evt.contentCmd[0].length()) + 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((content.length()) > (net.dv8tion.jda.core.entities.Message.MAX_CONTENT_LENGTH)) { linus.discord.lbot3.plugins.PluginUtils.print(\"Content is to big\", evt.channel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4770/buggy-version/src.linus.discord.lbot3.plugins.SpamPlugin.java", "BodyUseAPI": [], "Fixed commit": "1d22e653e53a5e45a03fdc0fa4d897240b6c4e91", "Url": "https://api.github.com/repos/Steinschnueffler/LBot3", "Date": "2018-03-08T10:26:10Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode == (org.dnal.compiler.validate.ValidationOptions.VALIDATEMODE_NONE)) && ((validationMode) == 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7401/buggy-version/src.main.java.org.dnal.compiler.validate.ValidationOptions.java", "BodyUseAPI": [], "Fixed commit": "ead43f1aafbdda341d90382b67d16fbba575f452", "Url": "https://api.github.com/repos/ianrae/dnal-lang", "Date": "2018-09-07T12:03:58Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(cleanLine))) { lines.add(cleanLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2070/buggy-version/src.main.java.com.docsearch.impl.BaseDocumentSearchImpl.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "84c030ec39829a2041d49639195d320c46d06409", "Url": "https://api.github.com/repos/shridharmanvi/documentsearch", "Date": "2018-01-15T00:00:05Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.util.DocumentUtil.getLineTextRange(com.intellij.openapi.editor.Document,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((textRange.getEndOffset()) == (document.getTextLength())) { java.lang.Runnable removeText = () -> document.deleteString(textRange.getStartOffset(), textRange.getEndOffset()); com.intellij.openapi.command.WriteCommandAction.runWriteCommandAction(project, removeText); }else { java.lang.Runnable removeText = () -> document.deleteString(textRange.getStartOffset(), ((textRange.getEndOffset()) + 1)); com.intellij.openapi.command.WriteCommandAction.runWriteCommandAction(project, removeText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2537/buggy-version/DeMark.src.main.java.utils.SelectionUtil.java", "BodyUseAPI": ["com.intellij.openapi.editor.Document.deleteString(textRange.getStartOffset(),((textRange.getEndOffset()) + 1))", "com.intellij.openapi.editor.Document.deleteString(textRange.getStartOffset(),textRange.getEndOffset())", "com.intellij.openapi.util.TextRange.getStartOffset()", "com.intellij.openapi.util.TextRange.getStartOffset()", "com.intellij.openapi.util.TextRange.getEndOffset()", "com.intellij.openapi.util.TextRange.getEndOffset()"], "Fixed commit": "ac7167e398973abcb28244112496cfcc1256e25b", "Url": "https://api.github.com/repos/DeFacto-UW/DeMark", "Date": "2018-05-03T01:51:46Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.IMember.getFlags()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.eclipse.jdt.core.Flags.isPrivate(flags)) { return eme.model.datatypes.AccessLevelModifier.PRIVATE; }else if (org.eclipse.jdt.core.Flags.isProtected(flags)) { return eme.model.datatypes.AccessLevelModifier.PROTECTED; }else if (member.getDeclaringType().isInterface()) { return eme.model.datatypes.AccessLevelModifier.PUBLIC; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5379/buggy-version/src.main.java.eme.extractor.JDTUtil.java", "BodyUseAPI": ["org.eclipse.jdt.core.Flags.isProtected(int)"], "Fixed commit": "182c34e14c3b13a60611b59494c08ee20742652c", "Url": "https://api.github.com/repos/tsaglam/EcoreMetamodelExtraction", "Date": "2018-05-25T08:52:06Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gids == null) { return com.inchok.aria2.Aria2.addMetaLinkNative(this.sessionNative, null, metalinkFilePath, options, position); }else { java.util.List<java.lang.Long> gidsNative = new java.util.ArrayList<>(); for (com.inchok.aria2.Gid gid : gids) gidsNative.add(gid.getGid()); return com.inchok.aria2.Aria2.addMetaLinkNative(this.sessionNative, gidsNative, metalinkFilePath, options, position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6430/buggy-version/src.com.inchok.aria2.Session.java", "BodyUseAPI": [], "Fixed commit": "d4abe9c74fa629b0fb5897efec4da1cf459c8f7d", "Url": "https://api.github.com/repos/inCHOK/Aria2", "Date": "2018-10-08T09:12:46Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot1.child(\"lat\").getValue()", "dataSnapshot1.child(\"lng\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((lng != null) && (lat != null)) { com.google.android.gms.maps.model.Marker willAdd = com.example.currentplacedetailsonmap.MapsActivityCurrentPlace.mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().title(dataSnapshot1.getKey()).position(new com.google.android.gms.maps.model.LatLng(lat, lng)).icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN))); mLastKnownFriendMarkers.add(willAdd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/703/buggy-version/app.src.main.java.com.example.currentplacedetailsonmap.MapsActivityCurrentPlace.java", "BodyUseAPI": ["new com.google.android.gms.maps.model.MarkerOptions().title(dataSnapshot1.getKey()).position(com.google.android.gms.maps.model.LatLng)", "new com.google.android.gms.maps.model.MarkerOptions().title(dataSnapshot1.getKey()).position(new com.google.android.gms.maps.model.LatLng(lat, lng)).icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN))", "com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().title(dataSnapshot1.getKey()).position(new com.google.android.gms.maps.model.LatLng(lat, lng)).icon(com.google.android.gms.maps.model.BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_GREEN)))"], "Fixed commit": "fa06206b3aa34ddf60c309babba546cd30282b54", "Url": "https://api.github.com/repos/talhakum/CrewFinder", "Date": "2018-05-05T21:18:11Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((choosenAlgorithm) == (com.fadhil.crypto.Encryptor.PLAYFAIR)) && (((plainText.length()) % 2) == 1)) { plainText += \"Z\"; space += \"Z\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4240/buggy-version/com.fadhil.crypto.Encryptor.java", "BodyUseAPI": [], "Fixed commit": "075abd275dda116d5a0fb8184211e601d5271368", "Url": "https://api.github.com/repos/fadhilimamk/classic-cryptography", "Date": "2018-01-31T17:46:46Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (attachment != null) { android.net.Uri uri = android.net.Uri.parse(attachment); sendIntent = getDefaultShareIntent(uri.getLastPathSegment()); }else { sendIntent = new android.content.Intent(android.content.Intent.ACTION_SEND); sendIntent.setType(\"text/plain\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6759/buggy-version/android.src.main.java.com.tkporter.sendsms.SendSMSModule.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)"], "Fixed commit": "a88e090f5955ef66e15a2ec82e7530e5bfe5c6b4", "Url": "https://api.github.com/repos/ptsimpso/react-native-sms", "Date": "2018-08-27T23:06:01Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Dictionary.searchWord(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((check.size()) > 1) add = \"s\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7368/buggy-version/Dictionary.DictionaryManagement.java", "BodyUseAPI": [], "Fixed commit": "8fb1deff054b926a9207f1dca3dfe5cba512a4f9", "Url": "https://api.github.com/repos/longhoang08/OOP-UET", "Date": "2018-10-07T10:08:08Z"},
{"Line": "=>3854", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mIndicator.getCurrentPos()) >= 0) return 1 + ((float) (java.lang.Math.min(0.2F, ((java.lang.Math.pow(mIndicator.getCurrentPos(), 0.72F)) / 1000.0F)))); else return 1 - ((float) (java.lang.Math.min(0.2F, ((java.lang.Math.pow((-(mIndicator.getCurrentPos())), 0.72F)) / 1000.0F))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8669/buggy-version/core.src.main.java.me.dkzwm.widget.srl.SmoothRefreshLayout.java", "BodyUseAPI": ["me.dkzwm.widget.srl.indicator.IIndicator.getCurrentPos()", "java.lang.Math.min(float,((java.lang.Math.pow((-(mIndicator.getCurrentPos())), 0.72F)) / 1000.0F))", "java.lang.Math.pow((-(mIndicator.getCurrentPos())),float)", "me.dkzwm.widget.srl.indicator.IIndicator.getCurrentPos()", "java.lang.Math.pow(mIndicator.getCurrentPos(),float)", "java.lang.Math.min(float,((java.lang.Math.pow(mIndicator.getCurrentPos(), 0.72F)) / 1000.0F))"], "Fixed commit": "c0469ab02574fff0585deb3f7db49b97a987574c", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2018-02-27T09:13:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leftIsClear()) { turnLeft(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8581/buggy-version/Assigment1.Assignment1.CheckerboardKarel.java", "BodyUseAPI": [], "Fixed commit": "7e6de28a474568b70aec6137be19231b9cea026c", "Url": "https://api.github.com/repos/maziluiosif/stanford-cs106a", "Date": "2018-09-01T14:50:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frontIsClear()) { move(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8581/buggy-version/Assigment1.Assignment1.CheckerboardKarel.java", "BodyUseAPI": [], "Fixed commit": "7e6de28a474568b70aec6137be19231b9cea026c", "Url": "https://api.github.com/repos/maziluiosif/stanford-cs106a", "Date": "2018-09-01T14:50:46Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rightIsClear()) { turnRight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8581/buggy-version/Assigment1.Assignment1.CheckerboardKarel.java", "BodyUseAPI": [], "Fixed commit": "7e6de28a474568b70aec6137be19231b9cea026c", "Url": "https://api.github.com/repos/maziluiosif/stanford-cs106a", "Date": "2018-09-01T14:50:46Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kelfan.utillibrary.RegexWorker.matchAllSet(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((l.size()) > 1) { l.add(OTHER_ITEMS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3436/buggy-version/EditorA.todofile.src.main.java.com.example.todofile.ItemPresetAdapter.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "7c263132ad745489ba02fe59b899387d87ea8215", "Url": "https://api.github.com/repos/kelfan/EditorA", "Date": "2018-07-17T04:33:42Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((expandedFromStop.getLocationType()) == (org.opentripplanner.routing.edgetype.factory.GTFSPatternHopFactory.STOP_LOCATION_TYPE)) && ((expandedToStop.getLocationType()) == (org.opentripplanner.routing.edgetype.factory.GTFSPatternHopFactory.STOP_LOCATION_TYPE))) { org.onebusaway.gtfs.model.Transfer expanded = new org.onebusaway.gtfs.model.Transfer(source); expanded.setFromStop(expandedFromStop); expanded.setToStop(expandedToStop); expandedTransfers.add(expanded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8354/buggy-version/src.main.java.org.opentripplanner.routing.edgetype.factory.TransferFactory.java", "BodyUseAPI": ["org.onebusaway.gtfs.model.Transfer.setToStop(org.onebusaway.gtfs.model.Stop)", "org.onebusaway.gtfs.model.Transfer.setFromStop(org.onebusaway.gtfs.model.Stop)"], "Fixed commit": "49a17b292c0c6dabd6e9a5296c05941924eb8691", "Url": "https://api.github.com/repos/camsys/OpenTripPlanner", "Date": "2018-04-17T15:10:54Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (curr != v) { path.addFirst(curr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8795/buggy-version/src.main.java.model.elements.entities.PathFinder.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Integer>.addFirst(int)"], "Fixed commit": "d87d4e8344f6aee717c8b794fd45ecdb4b576a17", "Url": "https://api.github.com/repos/Etnarion/BrogueLike", "Date": "2018-06-11T09:15:08Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jsonObject.has(field.toString()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/79/buggy-version/src.main.java.capslock.game_info.Game.java", "BodyUseAPI": [], "Fixed commit": "2d19c21deadb904ff460abfc7c335ad916f92ada", "Url": "https://api.github.com/repos/chrootRISCassembler/GameInfo", "Date": "2018-04-09T03:48:17Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (logger != null) { logger.debug(\"Host {} seems to be online.\", hostnameOrIp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9391/buggy-version/addons.binding.org.openhab.binding.wakeonlan.src.main.java.org.openhab.binding.wakeonlan.internal.PingHelper.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "4f72296dacc357bfd9ade2762ae0b1731f078bad", "Url": "https://api.github.com/repos/asvilabs/openhab2-addons", "Date": "2018-08-06T06:09:11Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (logger != null) { logger.warn(\"Ping command failed: {}\", cmdWithSpaces); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9391/buggy-version/addons.binding.org.openhab.binding.wakeonlan.src.main.java.org.openhab.binding.wakeonlan.internal.PingHelper.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.String)"], "Fixed commit": "4f72296dacc357bfd9ade2762ae0b1731f078bad", "Url": "https://api.github.com/repos/asvilabs/openhab2-addons", "Date": "2018-08-06T06:09:11Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (logger != null) { logger.debug(\"Host {} seems to be down.\", hostnameOrIp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9391/buggy-version/addons.binding.org.openhab.binding.wakeonlan.src.main.java.org.openhab.binding.wakeonlan.internal.PingHelper.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "4f72296dacc357bfd9ade2762ae0b1731f078bad", "Url": "https://api.github.com/repos/asvilabs/openhab2-addons", "Date": "2018-08-06T06:09:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((caliber == null) || (amount == null)) { return new org.springframework.http.ResponseEntity(\"No caliber or amount specified.\", org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6886/buggy-version/week-09.day-02.groot.src.main.java.com.greenfoxacademy.groot.controllers.GuardianRestController.java", "BodyUseAPI": [], "Fixed commit": "e8a0acfd97be6136ec2489739539162ee4ff8a10", "Url": "https://api.github.com/repos/green-fox-academy/tsz88", "Date": "2018-10-02T14:54:19Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.HostileAI.getPath(getGameState().getPlayerPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7251/buggy-version/src.Model.HostileAI.java", "BodyUseAPI": [], "Fixed commit": "e39f9642621000925d2a63a855e99fd9bef1154f", "Url": "https://api.github.com/repos/callumjago/Iteration2", "Date": "2018-03-17T15:58:11Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (current == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7251/buggy-version/src.Model.AI.java", "BodyUseAPI": [], "Fixed commit": "e39f9642621000925d2a63a855e99fd9bef1154f", "Url": "https://api.github.com/repos/callumjago/Iteration2", "Date": "2018-03-17T15:58:11Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodeList.size()) == 0) { return path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7251/buggy-version/src.Model.AI.java", "BodyUseAPI": [], "Fixed commit": "e39f9642621000925d2a63a855e99fd9bef1154f", "Url": "https://api.github.com/repos/callumjago/Iteration2", "Date": "2018-03-17T15:58:11Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (offsetString.equals(com.android.inputmethod.ebmStudy.etc.StudyXMLParser.ATTR_VAL_OFFSET_BOTTOM)) { offSetY = 220; }else { throw new java.lang.Exception(((((\"taskId: \" + taskId) + \" [Unsupported offset: \") + offsetString) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8002/buggy-version/java.src.com.android.inputmethod.ebmStudy.etc.StudyXMLParser.java", "BodyUseAPI": [], "Fixed commit": "e1896211147cc63ed8cc0cde333d93525dba13e7", "Url": "https://api.github.com/repos/MatKier/AOSP-LatinIME-for-explicit-behavior-modification-study", "Date": "2018-08-29T16:09:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((launched) != null) { launched.cancel(true); launched = null; try { clientToServerStream.close(); } catch (java.io.IOException e) { e.printStackTrace(); } clientToServerStream = null; try { clientToServerStreamReverse.close(); } catch (java.io.IOException e) { e.printStackTrace(); } clientToServerStreamReverse = null; try { serverToClientStreamReverse.close(); } catch (java.io.IOException e) { e.printStackTrace(); } serverToClientStreamReverse = null; try { serverToClientStream.close(); } catch (java.io.IOException e) { e.printStackTrace(); } serverToClientStream = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6113/buggy-version/org.eclipse.lsp4e.freemarker.src.org.eclipse.lsp4e.freemarker.LocalStreamConnectionProvider.java", "BodyUseAPI": [], "Fixed commit": "a266b41c441c220d07695e3b0c349ae47699265b", "Url": "https://api.github.com/repos/ddekany/lsp4e-freemarker", "Date": "2018-03-28T22:30:12Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3775/buggy-version/android.src.main.java.org.chimple.flores.db.P2PDBApiImpl.java", "BodyUseAPI": [], "Fixed commit": "ed59ab2294d6265be991eb4dcc0dbc94010fefe4", "Url": "https://api.github.com/repos/chimple/flores", "Date": "2018-10-23T09:20:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/663/buggy-version/src.com.shtick.utils.scratch.runner.standard.blocks.ContentsOfList.java", "BodyUseAPI": [], "Fixed commit": "60a3e4b87e62b8bcd43cca0496fc8ab55d89a68c", "Url": "https://api.github.com/repos/seanmcox/scratch-runner-blocks-standard", "Date": "2018-06-02T16:57:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getNewMessage()) instanceof org.lunker.new_proxy.sip.wrapper.message.proxy.ProxySipRequest) { org.lunker.proxy.model.RemoteAddress remoteAddress = message.getTargetRemoteAddress(); message.getNewMessage().send(remoteAddress.getHost(), remoteAddress.getPort(), remoteAddress.getTransport().getValue()); }else { message.getNewMessage().send(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/973/buggy-version/src.main.java.org.lunker.proxy.sip.pro_process.ProxyPostHandler.java", "BodyUseAPI": ["org.lunker.proxy.core.Message.getTargetRemoteAddress()", "org.lunker.proxy.core.Message.getNewMessage()", "message.getNewMessage().send(remoteAddress.getHost(),remoteAddress.getPort(),remoteAddress.getTransport().getValue())", "org.lunker.proxy.core.Message.getNewMessage()", "message.getNewMessage().send()"], "Fixed commit": "71c9754523b682c5f8a2f63099d4aa122ed0d83b", "Url": "https://api.github.com/repos/lunker/test-proxy", "Date": "2018-06-12T06:44:43Z"},
{"Line": "=>1397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"CFR\".equals(idType.getSchemeId())) { listToBeMatched.add(new eu.europa.ec.fisheries.uvms.rules.service.business.fact.IdTypeWithFlagState(idType.getSchemeId(), idType.getValue(), vesselCountryId.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8440/buggy-version/service.src.main.java.eu.europa.ec.fisheries.uvms.rules.service.business.AbstractFact.java", "BodyUseAPI": ["eu.europa.ec.fisheries.uvms.rules.service.business.fact.IdType.getValue()", "eu.europa.ec.fisheries.uvms.rules.service.business.fact.IdType.getSchemeId()", "java.util.List<eu.europa.ec.fisheries.uvms.rules.service.business.fact.IdTypeWithFlagState>.add(eu.europa.ec.fisheries.uvms.rules.service.business.fact.IdTypeWithFlagState)"], "Fixed commit": "0ab7a8175598c9a63732d3568949fcee9aa8ec05", "Url": "https://api.github.com/repos/UnionVMS/UVMS-RulesModule-APP", "Date": "2018-01-26T02:10:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.getInt()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ipv4 != 0) { result.parseIp(new byte[]{ ((byte) ((ipv4 >> 24) & 255)), ((byte) ((ipv4 >> 16) & 255)), ((byte) ((ipv4 >> 8) & 255)), ((byte) (ipv4 & 255)) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5019/buggy-version/zipkin2.src.main.java.zipkin2.internal.ThriftEndpointCodec.java", "BodyUseAPI": ["Endpoint.Builder.parseIp(byte[])"], "Fixed commit": "baf9f16127fbb3a3286052d4d017a7fdb55dd099", "Url": "https://api.github.com/repos/openzipkin/zipkin", "Date": "2018-07-11T11:37:43Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(directory.exists())) { directory.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9903/buggy-version/app.src.main.java.com.android.karthi.androidtask.Service.DownloadService.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "126807a4a471e597e2b3f393c5a741eacc92fc9f", "Url": "https://api.github.com/repos/karthisammannan/Unsplash-API-Photos", "Date": "2018-04-04T12:56:28Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<? extends mpicbg.spim.data.sequence.ViewId, ? extends java.util.Collection<? extends net.preibisch.mvrecon.process.fusion.transformed.nonrigid.NonrigidIP>>.get(mpicbg.spim.data.sequence.ViewId)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ips == null) { mpicbg.spim.io.IOFunctions.println(((((new java.util.Date(java.lang.System.currentTimeMillis())) + \": NO POINTS to interpolate non-rigid model for \") + (net.preibisch.mvrecon.process.interestpointregistration.pairwise.constellation.grouping.Group.pvid(viewId))) + \" - using affine model\")); return new net.imglib2.util.ValuePair<mpicbg.spim.data.sequence.ViewId, net.preibisch.mvrecon.process.fusion.transformed.nonrigid.grid.ModelGrid>(null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7147/buggy-version/src.main.java.net.preibisch.mvrecon.process.fusion.transformed.nonrigid.NonRigidTools.java", "BodyUseAPI": [], "Fixed commit": "f3546940e69d17cf20220a886a93923a724f5744", "Url": "https://api.github.com/repos/PreibischLab/multiview-reconstruction", "Date": "2018-09-14T15:37:08Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (value.isNumber()) { v = value.asInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8533/buggy-version/src.main.java.cn.loock.jdproxy.controller.JosController.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.asInt()"], "Fixed commit": "f30746fe21c76e0dd3df70b0e919f86ed5e62254", "Url": "https://api.github.com/repos/gouzhiyuan/jos", "Date": "2018-07-27T08:04:46Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (value.isTextual()) { v = value.asText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8533/buggy-version/src.main.java.cn.loock.jdproxy.controller.JosController.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.asText()"], "Fixed commit": "f30746fe21c76e0dd3df70b0e919f86ed5e62254", "Url": "https://api.github.com/repos/gouzhiyuan/jos", "Date": "2018-07-27T08:04:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TheDistributedScrabble.DEBUG) java.lang.System.out.println((\"Connectioner: The next is \" + b));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5433/buggy-version/TheDistributedScrabble.src.Connectioner.java", "BodyUseAPI": [], "Fixed commit": "1530d88f36730e0b2c51d3f5760be4b328928b10", "Url": "https://api.github.com/repos/MXtreme/TheDistributedScrabble", "Date": "2018-09-20T14:00:57Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cpu == null) { cpu = app.droidinfo.helper.SoCHelper.getCPUInfoMap().get(\"model name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1242/buggy-version/app.src.main.java.app.droidinfo.helper.SoCHelper.java", "BodyUseAPI": [], "Fixed commit": "0af6441919ee7c6871054a57d5584143309486c9", "Url": "https://api.github.com/repos/gabrielecappellaro/DroidInfo", "Date": "2018-06-03T15:06:41Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.nuls.core.tools.str.StringUtils.isBlank(alias)) { return io.nuls.kernel.model.Result.getFailed(AccountErrorCode.PARAMETER_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7307/buggy-version/account-module.base.account-rpc.src.main.java.io.nuls.account.rpc.resource.AccountResource.java", "BodyUseAPI": [], "Fixed commit": "1c333b12e09ba9b893b95cbed86424c34d000970", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-05-17T08:33:03Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.Seconds.secondsBetween(new org.joda.time.DateTime(startDate), new org.joda.time.DateTime(endDate)).getSeconds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (seconds == 0) { seconds = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4529/buggy-version/apm-collector.apm-collector-ui.collector-ui-jetty-provider.src.main.java.org.apache.skywalking.apm.collector.ui.service.SecondBetweenService.java", "BodyUseAPI": [], "Fixed commit": "58259141f9911704257ccd1699f427c3130e3f50", "Url": "https://api.github.com/repos/wangchao523/incubator-skywalking", "Date": "2018-03-03T07:16:52Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((satisfiedCount + toleratingCount) + frustratedCount) == 0) { return 100; }else { return ((int) (((satisfiedCount + (toleratingCount / 2)) * 100) / ((satisfiedCount + toleratingCount) + frustratedCount))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4529/buggy-version/apm-collector.apm-collector-ui.collector-ui-jetty-provider.src.main.java.org.apache.skywalking.apm.collector.ui.utils.ApdexCalculator.java", "BodyUseAPI": [], "Fixed commit": "58259141f9911704257ccd1699f427c3130e3f50", "Url": "https://api.github.com/repos/wangchao523/incubator-skywalking", "Date": "2018-03-03T07:16:52Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pwmURL.isResourceURL()) { return password.pwm.http.IdleTimeoutCalculator.figureMaxSessionTimeout(pwmApplication, pwmSession).getIdleTimeout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8046/buggy-version/server.src.main.java.password.pwm.http.IdleTimeoutCalculator.java", "BodyUseAPI": [], "Fixed commit": "45a76f6459f81c70e42c2465a9edef712494f003", "Url": "https://api.github.com/repos/irtnog/pwm", "Date": "2018-03-18T23:33:34Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != 0) if ((defenderDie[(i - 1)]) != (-1)) defenderString += \", \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4144/buggy-version/app.src.main.java.csc_cccix.geocracy.fragments.DiceRollFragment.java", "BodyUseAPI": [], "Fixed commit": "6e717592935538a91a2055a5b189cef33fc8d5d9", "Url": "https://api.github.com/repos/Daskie/Geocracy", "Date": "2018-06-07T02:37:53Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((!(username.getText().toString().equals(\"\"))) && (!(password.getText().toString().equals(\"\")))) && (!(firstName.getText().toString().equals(\"\")))) && (!(lastName.getText().toString().equals(\"\")))) { edu.gatech.cs2340.donationtracker.LoginActivity.addUser(new edu.gatech.cs2340.donationtracker.User(name, username.getText().toString(), password.getText().toString(), ((edu.gatech.cs2340.donationtracker.AccountType) (accountTypeSpinner.getSelectedItem())))); setContentView(R.layout.login); }else { snackbar.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5827/buggy-version/app.src.main.java.edu.gatech.cs2340.donationtracker.MainActivity.java", "BodyUseAPI": ["password.getText().toString()", "android.widget.EditText.getText()", "username.getText().toString()", "android.widget.EditText.getText()", "edu.gatech.cs2340.donationtracker.LoginActivity.addUser(edu.gatech.cs2340.donationtracker.User)"], "Fixed commit": "17d917fe0c2136830d6dc23a4bc9b06521088479", "Url": "https://api.github.com/repos/thoughton3/Thomas-and-the-Goyls-Donation-Tracker", "Date": "2018-10-01T02:44:57Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (used.containsValue(mod.getName())) { for (java.lang.Integer k : used.keySet()) { if (used.get(k).equals(mod.getName())) { color = k; node.setColor(color); return color; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2698/buggy-version/src.main.java.seedu.address.ui.Timetable.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.String>.keySet()", "java.util.HashMap<java.lang.Integer, java.lang.String>.get(java.lang.Integer)", "seedu.address.model.event.WeeklyEvent.getName()", "java.lang.String.equals(mod.getName())"], "Fixed commit": "d9a490af994f25b31a2f68f93c206aeab924d253", "Url": "https://api.github.com/repos/LeonidAgarth/main", "Date": "2018-04-14T03:02:18Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((searchSuggestions) != null) && ((searchSuggestions.size()) > (position + 1))) { xyz.jienan.xkcd.model.XkcdPic xkcd = searchSuggestions.get(position); scrollViewPagerToItem(((int) ((xkcd.num) - 1)), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6495/buggy-version/xkcd.src.main.java.xyz.jienan.xkcd.comics.fragment.ComicsMainFragment.java", "BodyUseAPI": ["java.util.List<xyz.jienan.xkcd.model.XkcdPic>.get(int)"], "Fixed commit": "1f89389703d70393a041bcf8cb797fb0694e9b46", "Url": "https://api.github.com/repos/zjn0505/Xkcd-Android", "Date": "2018-07-22T09:18:10Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((correction != null) && ((correction.getType()) != null)) { if (((correction.getType().equals(CorrectionType.CopyPaste)) && ((correction.getComment()) != null)) && (correction.getComment().toLowerCase().contains(gov.usgs.aqcu.model.ExtendedCorrectionType.Freehand.toString().toLowerCase()))) { return gov.usgs.aqcu.model.ExtendedCorrectionType.Freehand; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/279/buggy-version/src.main.java.gov.usgs.aqcu.model.ExtendedCorrectionType.java", "BodyUseAPI": ["com.aquaticinformatics.aquarius.sdk.timeseries.servicemodels.Publish.Correction.getComment()", "correction.getComment().toLowerCase()", "com.aquaticinformatics.aquarius.sdk.timeseries.servicemodels.Publish.Correction.getType()", "correction.getComment().toLowerCase().contains(java.lang.String)", "com.aquaticinformatics.aquarius.sdk.timeseries.servicemodels.Publish.Correction.getComment()", "correction.getType().equals(CorrectionType.CopyPaste)"], "Fixed commit": "ca69710404dabce383cf1fafeb2772b7a185b149", "Url": "https://api.github.com/repos/zmoore-usgs/aqcu-framework", "Date": "2018-04-23T18:12:59Z"},
{"Line": "=>1028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(question.getText().toString().equalsIgnoreCase(\"null\"))) question.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1643/buggy-version/app.src.main.java.com.vysh.subairoma.adapters.TileQuestionsAdapter.java", "BodyUseAPI": ["android.widget.TextView.setVisibility(View.VISIBLE)"], "Fixed commit": "c8c3d2751791b02b04892f3ae457912e509045b6", "Url": "https://api.github.com/repos/Tiny-Hands/subairoma", "Date": "2018-06-18T16:38:22Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((documents.size()) > 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7074/buggy-version/app.src.main.java.oscar.riksdagskollen.Activity.VoteActivity.java", "BodyUseAPI": [], "Fixed commit": "1f47cdb5b0226e27a8358eacf1cbc6f4a2d4bcad", "Url": "https://api.github.com/repos/OAndell/Riksdagskollen", "Date": "2018-09-10T15:52:30Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ownerLogin.equals(\"no\")) { return itemDao.findById(itemId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/677/buggy-version/backend.src.main.java.com.meetup.meetup.service.ItemService.java", "BodyUseAPI": [], "Fixed commit": "374af86b2879816aaa88c88e35809e37bec70aa3", "Url": "https://api.github.com/repos/ydeineka/meetup", "Date": "2018-05-23T08:16:58Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pl.plajer.buildbattle3.arena.ArenaRegistry.getArena(event.getPlayer())) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7708/buggy-version/src.pl.plajer.buildbattle3.events.GameEvents.java", "BodyUseAPI": [], "Fixed commit": "57c0638c463d39bb01a78b842e53d46923a2a934", "Url": "https://api.github.com/repos/Plajer-Lair/BuildBattle", "Date": "2018-08-13T14:35:21Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsLogin) getBar().setR2Menu(new com.volume.candle.views.ActionBar.TextAction() { @java.lang.Override public java.lang.String getText() { return getString(R.string.sign_in); } @java.lang.Override public void performAction(android.view.View view) { signIn(); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7189/buggy-version/app.src.main.java.com.volume.candle.mine.fragment.MineFragment.java", "BodyUseAPI": [], "Fixed commit": "ea637dee05e22ce38ea76dfc85a030d5ade7a0c8", "Url": "https://api.github.com/repos/PATHngping/canvolclient", "Date": "2018-10-01T12:02:30Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.exists())) { relativePathSeparator = \"..\" + (java.io.File.separator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/952/buggy-version/engine.src.main.java.org.pentaho.di.www.StatusServletUtils.java", "BodyUseAPI": [], "Fixed commit": "89f18110ed9893cdc53db296a3f776ff80d6cf13", "Url": "https://api.github.com/repos/pentaho-mracine/pentaho-kettle", "Date": "2018-10-02T17:50:06Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reins.size()) != 0) { saveManyReinforcements(reins); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6470/buggy-version/src.vg.civcraft.mc.citadel.ReinforcementManager.java", "BodyUseAPI": ["vg.civcraft.mc.citadel.ReinforcementManager.3.saveManyReinforcements(java.util.List<vg.civcraft.mc.citadel.reinforcement.Reinforcement>)"], "Fixed commit": "76a0759fffe0ade6decc841a4ec3173fa6eb5089", "Url": "https://api.github.com/repos/CivClassic/Citadel", "Date": "2018-02-17T20:36:20Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (last != ((a.length) - 1)) { intervals.add(new Solution.Pair((last + 1), ((a.length) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8463/buggy-version/a1.src.Solution.java", "BodyUseAPI": ["java.util.List<Solution.Pair>.add(Solution.Pair)"], "Fixed commit": "3ac3611bf2ada367959aa69e8d4e07f10c1aa0f0", "Url": "https://api.github.com/repos/rk13/codejam2018", "Date": "2018-04-25T21:17:01Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(artifact.substring(0, 1).equals(\"0\"))) { org.w3c.dom.Element failure = addChildElement(testCase, \"failure\", buildFailureString(currentVulnerabilityList)); addElementAttribute(failure, \"message\", artifact); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2343/buggy-version/src.main.java.net.ossindex.gradle.output.JunitXmlReportWriter.java", "BodyUseAPI": ["net.ossindex.gradle.output.JunitXmlReportWriter.addElementAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)"], "Fixed commit": "12bfdb4862ec4dbe4afc6e425c46f4bfac1059d1", "Url": "https://api.github.com/repos/OSSIndex/ossindex-gradle-plugin", "Date": "2018-05-02T01:52:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.awt.GraphicsEnvironment.isHeadless()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3654/buggy-version/src.org.openstreetmap.josm.plugins.turnlanestagging.LaunchAction.java", "BodyUseAPI": [], "Fixed commit": "249703e721beccb274014de6cb5e2afec518d8a9", "Url": "https://api.github.com/repos/JOSM/turnlanes-tagging", "Date": "2018-08-19T01:45:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestAdCallback) != null) { requestAdCallback.invoke(); requestAdCallback = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9206/buggy-version/android.src.main.java.com.sbugert.rnadmob.RNAdMobInterstitialAdModule.java", "BodyUseAPI": [], "Fixed commit": "940273e567aaa8febb02662edd9e5cd86cc77da8", "Url": "https://api.github.com/repos/steven-luu/react-native-admob", "Date": "2018-04-26T08:55:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestAdCallback) != null) { requestAdCallback.invoke(errorString); requestAdCallback = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9206/buggy-version/android.src.main.java.com.sbugert.rnadmob.RNAdMobInterstitialAdModule.java", "BodyUseAPI": [], "Fixed commit": "940273e567aaa8febb02662edd9e5cd86cc77da8", "Url": "https://api.github.com/repos/steven-luu/react-native-admob", "Date": "2018-04-26T08:55:47Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestAdCallback) != null) { requestAdCallback.invoke(errorString); requestAdCallback = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9206/buggy-version/android.src.main.java.com.sbugert.rnadmob.RNAdMobRewardedVideoAdModule.java", "BodyUseAPI": [], "Fixed commit": "940273e567aaa8febb02662edd9e5cd86cc77da8", "Url": "https://api.github.com/repos/steven-luu/react-native-admob", "Date": "2018-04-26T08:55:47Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRewardedVideoAd) != null) { callback.invoke(mRewardedVideoAd.isLoaded()); }else { callback.invoke(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9206/buggy-version/android.src.main.java.com.sbugert.rnadmob.RNAdMobRewardedVideoAdModule.java", "BodyUseAPI": [], "Fixed commit": "940273e567aaa8febb02662edd9e5cd86cc77da8", "Url": "https://api.github.com/repos/steven-luu/react-native-admob", "Date": "2018-04-26T08:55:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestAdCallback) != null) { requestAdCallback.invoke(); requestAdCallback = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9206/buggy-version/android.src.main.java.com.sbugert.rnadmob.RNAdMobRewardedVideoAdModule.java", "BodyUseAPI": [], "Fixed commit": "940273e567aaa8febb02662edd9e5cd86cc77da8", "Url": "https://api.github.com/repos/steven-luu/react-native-admob", "Date": "2018-04-26T08:55:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.djigger.agent.ClassTransformer.logger.isDebugEnabled()) { io.djigger.agent.ClassTransformer.logger.debug((((\"The following exception was ignored when searching for \" + classname) + \":\\n\") + (e.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3499/buggy-version/java-agent.src.main.java.io.djigger.agent.ClassTransformer.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "c92f3f5d1950ae745cdfc588e800742e4bea06d1", "Url": "https://api.github.com/repos/exense/djigger", "Date": "2018-10-30T22:32:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.startsWith(\"Running a scan\")) { return org.gumtree.gumnix.sics.control.ServerStatus.RUNNING_A_SCAN; }else if (message.startsWith(\"User requested Wait\")) { return org.gumtree.gumnix.sics.control.ServerStatus.WAIT; }else { return org.gumtree.gumnix.sics.control.ServerStatus.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3137/buggy-version/framework.sics.org.gumtree.gumnix.sics.core.src.org.gumtree.gumnix.sics.control.ServerStatus.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "83c1b941601ac91221de018ce4f486dfabf1e539", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2018-01-29T04:26:47Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usernameFound) { java.lang.String passWord = dataSnapshot.child(userID).child(\"password\").getValue(java.lang.String.class); if (passWord.equals(password)) { android.content.Intent intentUserActivity = new android.content.Intent(this, com.example.courseregistration.UserActivity.class); intentUserActivity.putExtra(\"userID\", userID); startActivity(intentUserActivity); }else { android.widget.Toast.makeText(this, \"Invalid password!\", Toast.LENGTH_SHORT).show(); } }else android.widget.Toast.makeText(this, \"Invalid username!\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1509/buggy-version/app.src.main.java.com.example.courseregistration.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "d019b3836cd165d07edcf1152b0bf5c87e1a0f2c", "Url": "https://api.github.com/repos/LantaoDong/CourseRegistration", "Date": "2018-03-22T20:20:50Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dialogName.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deckTitle.isEmpty()) { new android.support.v7.app.AlertDialog.Builder(getContext()).setTitle(\"Error\").setMessage(\"You can't create a deck without a title\").setPositiveButton(\"Ok\", null).create().show(); }else { decks.get(position).setTitle(dialogName.getText().toString()); notifyDataSetChanged(); com.matt.flashcards.Settings.saveData(getContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/182/buggy-version/mobile.src.main.java.com.matt.flashcards.DeckAdapter.java", "BodyUseAPI": [], "Fixed commit": "8122dbdce57981e465d31c804bb8edb9a0b002f4", "Url": "https://api.github.com/repos/mattrusso9037/Flashcards", "Date": "2018-03-14T00:00:56Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recyclerView == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9164/buggy-version/app.src.main.java.com.cw.litenotes.operation.audio.AudioPlayer_page.java", "BodyUseAPI": [], "Fixed commit": "1451a0dcf4cfe22ece5e1833a4d4da02b02d1898", "Url": "https://api.github.com/repos/chiou711/LiteNotes", "Date": "2018-10-19T17:51:08Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (idStudent == null) { idStudent = ((java.lang.String) (session.getAttribute(\"idStudent\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5640/buggy-version/src.java.gv.java", "BodyUseAPI": [], "Fixed commit": "c742b84fc1db10deba1609768b77f3fc2cfe9e72", "Url": "https://api.github.com/repos/KokeKy/DoAn_PT_UDCSDL_2", "Date": "2018-05-26T09:52:19Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(splash)) { stopLoading(); splash = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8827/buggy-version/app.src.main.java.phucht.com.pmusic.UI.SplashScr.java", "BodyUseAPI": [], "Fixed commit": "a0052837977a3b63248ac4c2b68ec0242996cd52", "Url": "https://api.github.com/repos/phuchuynhStrong/PMusic", "Date": "2018-05-24T14:44:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(splash)) { stopLoading(); splash = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8827/buggy-version/app.src.main.java.phucht.com.pmusic.UI.SplashScr.java", "BodyUseAPI": [], "Fixed commit": "a0052837977a3b63248ac4c2b68ec0242996cd52", "Url": "https://api.github.com/repos/phuchuynhStrong/PMusic", "Date": "2018-05-24T14:44:51Z"},
{"Line": "=>1429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.sun.tools.javac.code.JmlTypes.instance(context).isOnlyDataGroup(symbol.type)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3573/buggy-version/OpenJML.src.org.jmlspecs.openjml.JmlSpecs.java", "BodyUseAPI": [], "Fixed commit": "8d2e1b99b363b5ecac0da0b91e57a5251f196752", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2018-07-01T16:31:40Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != entryGroup) { this.shareEntryGroup = new org.linagora.linshare.mongo.entities.mto.ShareEntryGroupMto(entryGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2902/buggy-version/src.main.java.org.linagora.linshare.mongo.entities.logs.ShareEntryAuditLogEntry.java", "BodyUseAPI": [], "Fixed commit": "0b46457294a70a626e801edd971cc35f0e9f9cbe", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2018-10-11T15:26:45Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != entryGroup) { this.shareEntryGroup = new org.linagora.linshare.mongo.entities.mto.ShareEntryGroupMto(entryGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2902/buggy-version/src.main.java.org.linagora.linshare.mongo.entities.logs.ShareEntryAuditLogEntry.java", "BodyUseAPI": [], "Fixed commit": "0b46457294a70a626e801edd971cc35f0e9f9cbe", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2018-10-11T15:26:45Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != entryGroup) { this.shareEntryGroup = new org.linagora.linshare.mongo.entities.mto.ShareEntryGroupMto(entryGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2902/buggy-version/src.main.java.org.linagora.linshare.mongo.entities.logs.ShareEntryAuditLogEntry.java", "BodyUseAPI": [], "Fixed commit": "0b46457294a70a626e801edd971cc35f0e9f9cbe", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2018-10-11T15:26:45Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gwdg.metadataqa.marc.DataField.getSubfield(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (subfields != null) { for (de.gwdg.metadataqa.marc.MarcSubfield subfield : subfields) { if (subfield.getValue().equals(query)) { results.add(subfield.getValue()); return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1214/buggy-version/src.main.java.de.gwdg.metadataqa.marc.MarcRecord.java", "BodyUseAPI": [], "Fixed commit": "ee79d8635646400ede0702fd7805eb8317874815", "Url": "https://api.github.com/repos/pkiraly/metadata-qa-marc", "Date": "2018-06-02T18:45:14Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (day == (-1)) { day = 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9696/buggy-version/src.main.java.com.attendance.domain.service.SectionService.java", "BodyUseAPI": [], "Fixed commit": "8f906145dc3c4a13efad21b808018c7c481b7050", "Url": "https://api.github.com/repos/jopassakorn/attendance", "Date": "2018-02-11T08:55:53Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this) instanceof cn.nukkit.entity.item.EntityMinecartEmpty)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3457/buggy-version/src.main.java.cn.nukkit.entity.item.EntityMinecartAbstract.java", "BodyUseAPI": [], "Fixed commit": "826645737e05b5d1c2742a12f923964450f84e18", "Url": "https://api.github.com/repos/PetteriM1/Nukkit", "Date": "2018-10-14T13:48:14Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (measure != null) { this.data.putIfAbsent(measure.time(), measure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1854/buggy-version/Kernel.src.main.java.com.polytech.dsl.ssl.source.TimeSeries.java", "BodyUseAPI": ["com.polytech.dsl.ssl.source.SensorMeasure.time()", "java.util.Map<java.lang.Long, com.polytech.dsl.ssl.source.SensorMeasure>.putIfAbsent(measure.time(),com.polytech.dsl.ssl.source.SensorMeasure)"], "Fixed commit": "477b6a975801f056e66e0075264cce73c657bad8", "Url": "https://api.github.com/repos/AjroudRami/DSL-DYR", "Date": "2018-02-11T20:47:48Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.polytech.dsl.ssl.source.TimeSeries.getMeasures()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((measures.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1854/buggy-version/Kernel.src.main.java.com.polytech.dsl.ssl.output.CSVWriter.java", "BodyUseAPI": [], "Fixed commit": "477b6a975801f056e66e0075264cce73c657bad8", "Url": "https://api.github.com/repos/AjroudRami/DSL-DYR", "Date": "2018-02-11T20:47:48Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((things) == null) things = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4100/buggy-version/src.main.java.ure.things.UCollection.java", "BodyUseAPI": [], "Fixed commit": "36e84eb1ffa41fc19fd3744984d737f064a4609a", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-08-19T21:53:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actors) == null) actors = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4100/buggy-version/src.main.java.ure.things.UCollection.java", "BodyUseAPI": [], "Fixed commit": "36e84eb1ffa41fc19fd3744984d737f064a4609a", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-08-19T21:53:30Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.operator) != null) operatorS = operator.getOperator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8492/buggy-version/src.main.java.com.vogella.jersey.first.Model.Business_Rule.java", "BodyUseAPI": [], "Fixed commit": "ef134ad0cd33c16ad8ec009effd380bd86ac5440", "Url": "https://api.github.com/repos/1704102/tosad_2017_2b_team5_heroku", "Date": "2018-01-30T15:08:03Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.brautools.brautools.DichtePlato.findViewById(R.id.editText2)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((input.getText().length()) != 0) { double solution = (((java.lang.Double.parseDouble(input.getText().toString())) - 1) * 1000) / 4; java.lang.String printablesolution = new java.lang.Double(solution).toString(); plato.setText(printablesolution); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9337/buggy-version/app.src.main.java.at.brautools.brautools.DichtePlato.java", "BodyUseAPI": ["java.lang.Double.parseDouble(input.getText().toString())", "android.widget.EditText.getText()", "input.getText().toString()"], "Fixed commit": "7dfa988c72b469be6f41b8895eb74d90ca545db2", "Url": "https://api.github.com/repos/BeerCodersAustria/Brautools", "Date": "2018-09-12T19:10:18Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) == null) startPlayer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6324/buggy-version/TicTacToe.app.src.main.java.com.cleverchuk.tictactoe.Game.java", "BodyUseAPI": [], "Fixed commit": "f48bd4c98afc4da1322e8eddfcf49bf2888ed976", "Url": "https://api.github.com/repos/CleverChuk/TicTacToe", "Date": "2018-04-11T14:13:48Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((response.getRequest()) != null) && ((response.getRequest().getArticles()) != null)) { sendItemsToListView(response.getRequest().getArticles()); }else { android.widget.Toast.makeText(getContext(), \"Failed to load latest new, please try later.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2469/buggy-version/BF4Intel.src.main.java.com.ninetwozero.bf4intel.ui.news.NewsListingFragment.java", "BodyUseAPI": ["com.ninetwozero.bf4intel.events.news.NewsListingRefreshedEvent.getRequest()", "com.ninetwozero.bf4intel.ui.news.NewsListingFragment.sendItemsToListView(response.getRequest().getArticles())", "response.getRequest().getArticles()"], "Fixed commit": "ef801b68f3ca920e93a3b5d214ab1201e73df9cd", "Url": "https://api.github.com/repos/ninetwozero/com.ninetwozero.bf4intel", "Date": "2018-01-09T17:16:44Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"HEAD\".equals(end)) { end = org.apache.commons.lang.time.DateFormatUtils.format(new java.util.Date(), \"yyyy-MM-dd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6096/buggy-version/src.main.java.com.mainbo.plugin.increment.CheckStartDatePhase.java", "BodyUseAPI": [], "Fixed commit": "6d9ae7821405151f55986be4b1c31624e472b1ef", "Url": "https://api.github.com/repos/tjx222/maven-release-increment", "Date": "2018-02-11T09:37:25Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mainbo.plugin.increment.MergeReleaseDescriptor.getEndReversion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"HEAD\".equals(end)) { end = org.apache.commons.lang.time.DateFormatUtils.format(new java.util.Date(), \"yyyy-MM-dd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6096/buggy-version/src.main.java.com.mainbo.plugin.increment.ScmLogPhase.java", "BodyUseAPI": [], "Fixed commit": "6d9ae7821405151f55986be4b1c31624e472b1ef", "Url": "https://api.github.com/repos/tjx222/maven-release-increment", "Date": "2018-02-11T09:37:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((methodHandles.length) == 1) { handle = methodHandles[0]; }else { int index = cn.moyada.dubbo.faker.core.utils.ThreadUtil.getInnerGroupId(); handle = methodHandles[index]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9816/buggy-version/dubbo-faker-core.src.main.java.cn.moyada.dubbo.faker.core.invoke.AbstractInvoker.java", "BodyUseAPI": [], "Fixed commit": "ab69a3d70358839a458c74ecc726c938bf206509", "Url": "https://api.github.com/repos/moyada/sharingan", "Date": "2018-04-09T05:58:56Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bot == left) { out.add(new level.maps.splattingManager.SplattingOptions.SplattingOption(bot, 2, 3)); }else { out.add(new level.maps.splattingManager.SplattingOptions.SplattingOption(bot, 2, 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4456/buggy-version/src.level.maps.splattingManager.SplattingOptions.java", "BodyUseAPI": ["java.util.ArrayList<level.maps.splattingManager.SplattingOptions.SplattingOption>.add(level.maps.splattingManager.SplattingOptions.SplattingOption)", "java.util.ArrayList<level.maps.splattingManager.SplattingOptions.SplattingOption>.add(level.maps.splattingManager.SplattingOptions.SplattingOption)"], "Fixed commit": "8009b9c76fc7eaa493747670182ae360429a5819", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-08-06T00:03:23Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (left == top) { out.add(new level.maps.splattingManager.SplattingOptions.SplattingOption(left, 2, 2)); }else { out.add(new level.maps.splattingManager.SplattingOptions.SplattingOption(left, 0, 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4456/buggy-version/src.level.maps.splattingManager.SplattingOptions.java", "BodyUseAPI": ["java.util.ArrayList<level.maps.splattingManager.SplattingOptions.SplattingOption>.add(level.maps.splattingManager.SplattingOptions.SplattingOption)", "java.util.ArrayList<level.maps.splattingManager.SplattingOptions.SplattingOption>.add(level.maps.splattingManager.SplattingOptions.SplattingOption)"], "Fixed commit": "8009b9c76fc7eaa493747670182ae360429a5819", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-08-06T00:03:23Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (right == bot) { out.add(new level.maps.splattingManager.SplattingOptions.SplattingOption(right, 3, 3)); }else { out.add(new level.maps.splattingManager.SplattingOptions.SplattingOption(right, 1, 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4456/buggy-version/src.level.maps.splattingManager.SplattingOptions.java", "BodyUseAPI": ["java.util.ArrayList<level.maps.splattingManager.SplattingOptions.SplattingOption>.add(level.maps.splattingManager.SplattingOptions.SplattingOption)", "java.util.ArrayList<level.maps.splattingManager.SplattingOptions.SplattingOption>.add(level.maps.splattingManager.SplattingOptions.SplattingOption)"], "Fixed commit": "8009b9c76fc7eaa493747670182ae360429a5819", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-08-06T00:03:23Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (top == right) { out.add(new level.maps.splattingManager.SplattingOptions.SplattingOption(top, 3, 2)); }else { out.add(new level.maps.splattingManager.SplattingOptions.SplattingOption(top, 3, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4456/buggy-version/src.level.maps.splattingManager.SplattingOptions.java", "BodyUseAPI": ["java.util.ArrayList<level.maps.splattingManager.SplattingOptions.SplattingOption>.add(level.maps.splattingManager.SplattingOptions.SplattingOption)", "java.util.ArrayList<level.maps.splattingManager.SplattingOptions.SplattingOption>.add(level.maps.splattingManager.SplattingOptions.SplattingOption)"], "Fixed commit": "8009b9c76fc7eaa493747670182ae360429a5819", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2018-08-06T00:03:23Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userSession.get()) != null) userSession.get().getChatSessionsDataSource().fetchLatest();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5030/buggy-version/kustomersdk.src.main.java.com.kustomer.kustomersdk.API.KUSPushClient.java", "BodyUseAPI": ["userSession.get().getChatSessionsDataSource()", "java.lang.ref.WeakReference<com.kustomer.kustomersdk.API.KUSUserSession>.get()", "userSession.get().getChatSessionsDataSource().fetchLatest()"], "Fixed commit": "9cf7578d2ed937ef0af527ec7ad80a1ce673416c", "Url": "https://api.github.com/repos/kustomer/customer-android", "Date": "2018-04-13T15:03:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_line.toLowerCase().contains(\"/answer\")) { ss.getQuizStates().answerQuiz(); }else if (_line.toLowerCase().contains(\"/next_week\")) { int week = ss.get_week(); ss.set_week((week + 1)); }else if (_line.toLowerCase().contains(\"/status\")) { java.lang.String[] sp = _line.split(\" \"); java.lang.String input = sp[1]; input = ss.getArticleStates().status(input); input = ss.getPostStates().status(input); input = ss.getExamStates().status(input); java.lang.System.out.println(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5393/buggy-version/src.Main.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.toLowerCase()", "java.lang.String.contains(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "0d20d83c7a2c9e1a3d4d6c0654a66327e178d01a", "Url": "https://api.github.com/repos/nadavgld/nituz2_part3", "Date": "2018-06-05T17:13:49Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rishiqing.qywx.service.common.corp.CorpStaffManageService.getCorpStaffByCorpIdAndUserId(staff.getCorpId(),staff.getUserId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (null != dbStaff) { com.rishiqing.qywx.service.model.corp.helper.CorpStaffConverter.mergeCorpStaffVO(staff, dbStaff); corpStaffManageService.saveOrUpdateCorpStaff(dbStaff); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2420/buggy-version/service.src.main.java.com.rishiqing.qywx.service.biz.corp.impl.StaffServiceImpl.java", "BodyUseAPI": ["com.rishiqing.qywx.service.common.corp.CorpStaffManageService.saveOrUpdateCorpStaff(com.rishiqing.qywx.service.biz.corp.impl.CorpStaffVO)", "com.rishiqing.qywx.service.model.corp.helper.CorpStaffConverter.mergeCorpStaffVO(com.rishiqing.qywx.service.biz.corp.impl.CorpStaffVO,com.rishiqing.qywx.service.biz.corp.impl.CorpStaffVO)"], "Fixed commit": "18f403b335f56712af5d35e2cba8b84c99f49087", "Url": "https://api.github.com/repos/rishiqing/qywx-isv-access", "Date": "2018-05-02T06:20:30Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == target) || (null == old)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2420/buggy-version/service.src.main.java.com.rishiqing.qywx.service.model.corp.helper.CorpStaffConverter.java", "BodyUseAPI": [], "Fixed commit": "18f403b335f56712af5d35e2cba8b84c99f49087", "Url": "https://api.github.com/repos/rishiqing/qywx-isv-access", "Date": "2018-05-02T06:20:30Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token.length()) < 3) { return \"566\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6978/buggy-version/src.main.java.com.worldpay.simulator.utils.EWSUtils.java", "BodyUseAPI": [], "Fixed commit": "f55dc8bd94a7ddcf450ec257f665faa4bcb87aba", "Url": "https://api.github.com/repos/Vantiv/ews-simulator", "Date": "2018-08-14T15:36:03Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.widget.Toast.makeText(this, \"You did not give permission to access Location.\", Toast.LENGTH_SHORT).show(); }else mMap.setMyLocationEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6360/buggy-version/app.src.main.java.com.smdproject.smdproject.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a53dae89ac388514dfc792b46643dfd079509daa", "Url": "https://api.github.com/repos/abdullahkamran/SMDProject", "Date": "2018-04-25T19:48:35Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.getBinCategory().indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index == (-1)) { value = ml.shifu.shifu.core.Normalizer.getDefaultValueByFillType(fillType, config); }else { value = config.getBinPosRate().get(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4159/buggy-version/src.main.java.ml.shifu.shifu.core.Normalizer.java", "BodyUseAPI": ["config.getBinPosRate().get(int)"], "Fixed commit": "3ff300676975c177b27d5b83e77336c7b0071f6a", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2015-05-08T05:52:11Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (contextItem != null) { items = org.exist.xquery.Atomize.atomize(contextItem.toSequence()); }else { items = org.exist.xquery.value.Sequence.EMPTY_SEQUENCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9161/buggy-version/src.org.exist.xquery.functions.fn.FunData.java", "BodyUseAPI": ["org.exist.xquery.Atomize.atomize(contextItem.toSequence())", "org.exist.xquery.value.Item.toSequence()"], "Fixed commit": "9cd24d83e7148103ca28b07528a875150bd68348", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2018-07-03T08:58:35Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(imu.isGyroCalibrated())) { initializeIMU(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8617/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.Drive.java", "BodyUseAPI": [], "Fixed commit": "fad4d545e95648a991ac39b6a211bc3183212432", "Url": "https://api.github.com/repos/FTC9866/FTCVIRUS", "Date": "2018-04-04T21:27:18Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.params.length) != (tr.params.length)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9915/buggy-version/src.org.sango_lang.PTypeRefSkel.java", "BodyUseAPI": [], "Fixed commit": "390222712b051cfc66922c1b5c104686d7ac5d15", "Url": "https://api.github.com/repos/i-akym/sango0", "Date": "2018-08-13T09:25:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name.length()) == 0) { name = getTargetName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7269/buggy-version/src.main.java.com.univocity.parsers.annotations.helpers.TransformedHeader.java", "BodyUseAPI": [], "Fixed commit": "8436980aa8be78febb9f7d403916667e85d0380d", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2018-04-04T08:45:43Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.actionSystem.AnActionEvent.getData(CommonDataKeys.EDITOR)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (editor == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2283/buggy-version/src.OpenDocumentation.java", "BodyUseAPI": [], "Fixed commit": "a1f51770b9999ce06d68353e0508f6776c193ff8", "Url": "https://api.github.com/repos/EgoRedMC/DocSearchPlugin", "Date": "2018-05-10T16:12:29Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((et) != null) { checkItemArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8978/buggy-version/Noted.app.src.main.java.com.david.noted.NoteEditorActivity.java", "BodyUseAPI": [], "Fixed commit": "0dd9ea65324f4628b25173e433f06e859865b42d", "Url": "https://api.github.com/repos/kingchoo95/Note", "Date": "2018-03-01T03:35:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editText_answer.getText().toString().trim().length()) != 0) { in.myinnos.surveylib.widgets.SurveyHelper.putAnswer(questionVariableType, questionId, editText_answer.getText().toString().trim()); ((in.myinnos.surveylib.SurveyActivity) (mContext)).go_to_next(); }else { in.myinnos.surveylib.widgets.SurveyHelper.putAnswer(questionVariableType, questionId, null); ((in.myinnos.surveylib.SurveyActivity) (mContext)).go_to_next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6577/buggy-version/surveylib.src.main.java.in.myinnos.surveylib.fragment.FragmentNumber.java", "BodyUseAPI": ["editText_answer.getText().toString()", "editText_answer.getText().toString().trim()", "in.myinnos.surveylib.widgets.SurveyHelper.putAnswer(java.lang.String,java.lang.String,editText_answer.getText().toString().trim())", "android.widget.EditText.getText()"], "Fixed commit": "2716649ed4b6b33cc2bf4abea041a1fdacdd6f54", "Url": "https://api.github.com/repos/myinnos/FormSurveys", "Date": "2018-06-18T06:49:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.henu.gdxextras.gui.Gridcontainer.getOptimalRowHeights(float[],getHeight())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (row_id < (heights.length)) { pos_y -= heights[row_id]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8644/buggy-version/gui.Gridcontainer.java", "BodyUseAPI": [], "Fixed commit": "67341808d6ca8bf475ddb292297ca4f1c5db1e81", "Url": "https://api.github.com/repos/henu/gdxextras", "Date": "2018-08-23T00:38:00Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loc) != null ? !(loc.equals(that.loc)) : (that.loc) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5954/buggy-version/sdk.appcenter.src.main.java.com.microsoft.appcenter.ingestion.models.one.Extensions.java", "BodyUseAPI": [], "Fixed commit": "35527c9d969db3c52cde12b3f462eb2efb955870", "Url": "https://api.github.com/repos/Microsoft/AppCenter-SDK-Android", "Date": "2018-09-05T23:07:46Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.impl.client.CloseableHttpClient.execute(org.apache.http.client.methods.HttpRequestBase)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((response.getEntity()) == null) { responseDto.setResponseByte(null); return responseDto; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1010/buggy-version/src.main.java.com.github.erodriguezg.http.HttpClientUtils.java", "BodyUseAPI": [], "Fixed commit": "37391d94d78335a666c3ffb3d0730e1e8492ce2d", "Url": "https://api.github.com/repos/erodriguezg/clave-unica-cl-lib", "Date": "2018-07-20T16:38:41Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fileUri.getScheme().equals(\"file\")) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { getContentResolver().takePersistableUriPermission(fileUri, Intent.FLAG_GRANT_READ_URI_PERMISSION); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2678/buggy-version/app.src.main.java.com.google.firebase.quickstart.firebasestorage.MyUploadService.java", "BodyUseAPI": ["getContentResolver().takePersistableUriPermission(android.net.Uri,Intent.FLAG_GRANT_READ_URI_PERMISSION)"], "Fixed commit": "022b27a0becccfb0f8d47a8124f7770b16248dc8", "Url": "https://api.github.com/repos/NEBYUzekarias/TrachomaAndroid", "Date": "2018-08-24T22:07:43Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rawLookup == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LINE_COMMENT)) && (rawLookup2 == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.LINE_COMMENT))) { if ((next1Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COLON)) && (next3Element == (org.ballerinalang.plugins.idea.psi.BallerinaTypes.COLON))) { return false; } if (latestDoneMarker != null) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6282/buggy-version/tool-plugins.intellij.src.main.gen.org.ballerinalang.plugins.idea.parser.BallerinaParserUtil.java", "BodyUseAPI": [], "Fixed commit": "3ffd82a093c5d0ef60617c6fbb49ba0afabbb20b", "Url": "https://api.github.com/repos/riyafa/ballerina", "Date": "2018-05-21T09:52:32Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.context.request.ServletWebRequest.getResponse()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (response == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3035/buggy-version/spar-wings-monolith.src.main.java.jp.xet.sparwings.spring.web.error.handler.RestExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "ec0f7b03338a859d0805c12a022a7bb04bf8fe08", "Url": "https://api.github.com/repos/wreulicke/spar-wings", "Date": "2018-03-18T13:17:51Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (locale == null) { locale = java.util.Locale.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3035/buggy-version/spar-wings-monolith.src.main.java.jp.xet.sparwings.spring.web.error.handler.DefaultRestErrorResolver.java", "BodyUseAPI": [], "Fixed commit": "ec0f7b03338a859d0805c12a022a7bb04bf8fe08", "Url": "https://api.github.com/repos/wreulicke/spar-wings", "Date": "2018-03-18T13:17:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.rest.RestRequest.header(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (token == null) { if ((request.header(io.fabric8.elasticsearch.util.RequestUtils.AUTHORIZATION_HEADER)) != null) { final java.lang.String[] auth = org.apache.commons.lang.StringUtils.defaultIfEmpty(request.header(io.fabric8.elasticsearch.util.RequestUtils.AUTHORIZATION_HEADER), \"\").split(\" \"); if (((auth.length) >= 2) && (\"Bearer\".equals(auth[0]))) { token = auth[1]; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/197/buggy-version/src.main.java.io.fabric8.elasticsearch.util.RequestUtils.java", "BodyUseAPI": [], "Fixed commit": "dffed55e9d561bf3223ff0cd4b4ee93347fd2db3", "Url": "https://api.github.com/repos/barkbay/openshift-elasticsearch-plugin", "Date": "2018-07-20T18:55:20Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (contextItem != null) { items = org.exist.xquery.Atomize.atomize(contextItem.toSequence()); }else { items = org.exist.xquery.value.Sequence.EMPTY_SEQUENCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/359/buggy-version/src.org.exist.xquery.functions.fn.FunData.java", "BodyUseAPI": ["org.exist.xquery.value.Item.toSequence()", "org.exist.xquery.Atomize.atomize(contextItem.toSequence())"], "Fixed commit": "974a3dd6ab26a6011ba5353cd1542e41e52c33f0", "Url": "https://api.github.com/repos/wolfgangmm/exist", "Date": "2018-07-03T08:58:35Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((library.contains(\".yaml\")) || (library.contains(\".yml\"))) { file = com.millennialmedia.intellibot.psi.ref.RobotFileManager.getFilename(library, \".yaml\"); }else { java.lang.String mod = library.replace(\".py\", \"\").replaceAll(\"\\\\.\", \"\\\\/\"); while (mod.contains(\"//\")) { mod = mod.replace(\"//\", \"/\"); } file = com.millennialmedia.intellibot.psi.ref.RobotFileManager.getFilename(mod, \".py\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7596/buggy-version/src.com.millennialmedia.intellibot.psi.ref.RobotFileManager.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "com.millennialmedia.intellibot.psi.ref.RobotFileManager.getFilename(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "41fe156a10b754b26a547de1c02623e3b6157319", "Url": "https://api.github.com/repos/lkrazy/intellibot", "Date": "2018-01-11T08:17:46Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mEndReached)) mEndReached = (mBufferInfo.presentationTimeUs) >= (mEndUs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8310/buggy-version/lib.src.main.java.net.ypresto.androidtranscoder.engine.VideoTrackTranscoder.java", "BodyUseAPI": [], "Fixed commit": "eb3ee64d69195833779410b1ddf31bf92d18e76b", "Url": "https://api.github.com/repos/MateusZitelli/android-transcoder", "Date": "2018-07-19T22:56:24Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.reflect.Modifier.isAbstract(modifiers)) { com.karmant.syn.sample.script.rt.value.BlockToJavaAdapter.putMethodToMap(javaInterface, method, map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7859/buggy-version/syn-sample-script.src.com.karmant.syn.sample.script.rt.value.BlockToJavaAdapter.java", "BodyUseAPI": [], "Fixed commit": "bea4a3da7eb52376ccff78ae63019a7ae4f34ed6", "Url": "https://api.github.com/repos/antkar/syn", "Date": "2014-04-13T09:49:49Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["csi3770.samcalendar.Event.getDateAsDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (getEventsForDate(dateRemoved).isEmpty()) { this.eventDates.remove(event.getDateAsDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2830/buggy-version/app.src.main.java.csi3770.samcalendar.EventManager.java", "BodyUseAPI": [], "Fixed commit": "033181addaa9290d4ade2b4b470c55be0c3c84ae", "Url": "https://api.github.com/repos/mjmillan/SAM-Calendar", "Date": "2018-08-08T18:51:22Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"positionnement\".equals(colonne)) { idClasse = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3303/buggy-version/src.main.java.fr.openent.competences.service.impl.DefaultNoteService.java", "BodyUseAPI": [], "Fixed commit": "4fa6c7a644bab8d610271a478697d1456a14a49a", "Url": "https://api.github.com/repos/OPEN-ENT-NG/competences", "Date": "2018-06-29T14:04:07Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(colonne.equals(\"positionnement\"))) { query.append(\" AND id_classe = ? \"); values.add(idClasse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3303/buggy-version/src.main.java.fr.openent.competences.service.impl.DefaultNoteService.java", "BodyUseAPI": [], "Fixed commit": "4fa6c7a644bab8d610271a478697d1456a14a49a", "Url": "https://api.github.com/repos/OPEN-ENT-NG/competences", "Date": "2018-06-29T14:04:07Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { mAdapter.getFilter().filter(newText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7872/buggy-version/app.src.main.java.com.navjot.deepak.manpreet.pdfsociety.Activities.CategoryActivity.java", "BodyUseAPI": [], "Fixed commit": "b5f7de29b713bd7eddd47495f7415710bd8a956d", "Url": "https://api.github.com/repos/NavjotSingh007/Pdfsociety", "Date": "2018-01-08T13:23:48Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { mAdapter.getFilter().filter(newText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7872/buggy-version/app.src.main.java.com.navjot.deepak.manpreet.pdfsociety.Fragments.PdfListFragment.java", "BodyUseAPI": [], "Fixed commit": "b5f7de29b713bd7eddd47495f7415710bd8a956d", "Url": "https://api.github.com/repos/NavjotSingh007/Pdfsociety", "Date": "2018-01-08T13:23:48Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { mAdapter.getFilter().filter(newText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7872/buggy-version/app.src.main.java.com.navjot.deepak.manpreet.pdfsociety.Fragments.MyPdfsFragment.java", "BodyUseAPI": [], "Fixed commit": "b5f7de29b713bd7eddd47495f7415710bd8a956d", "Url": "https://api.github.com/repos/NavjotSingh007/Pdfsociety", "Date": "2018-01-08T13:23:48Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resourceAsStream == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1446/buggy-version/web.src.main.java.org.tdar.struts.action.WebConfig.java", "BodyUseAPI": [], "Fixed commit": "678548f18d1ce41039b3ae19c81a91fdc37aa29f", "Url": "https://api.github.com/repos/digital-antiquity/tdar", "Date": "2018-09-27T19:14:26Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.core.app.Query<org.structr.core.GraphObject>.getAsList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (list.isEmpty()) { addAttribute(key, key.getSearchAttribute(securityContext, occurrence, null, exactMatch, null), occurrence); }else { for (final org.structr.core.GraphObject candidate : query.getAsList()) { addAttribute(key, key.getSearchAttribute(securityContext, occurrence, candidate, exactMatch, null), occurrence); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5155/buggy-version/structr-core.src.main.java.org.structr.core.graphql.QueryConfig.java", "BodyUseAPI": [], "Fixed commit": "58fd092afd41479dfdde9d49547becb0a793cb27", "Url": "https://api.github.com/repos/ckramp/structr", "Date": "2018-05-23T14:35:57Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isConnected)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7715/buggy-version/client.app.src.main.java.com.danival.game.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ab37a8020c6b084d550344b3771dad503de9af02", "Url": "https://api.github.com/repos/danivallucas/game", "Date": "2018-03-15T03:05:02Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7715/buggy-version/client.app.src.main.java.com.danival.game.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ab37a8020c6b084d550344b3771dad503de9af02", "Url": "https://api.github.com/repos/danivallucas/game", "Date": "2018-03-15T03:05:02Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.Slot.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itemStack.isEmpty()) { slot.putStack(ItemStack.EMPTY); }else { slot.onSlotChanged(); if (gemsMoved) { return net.minecraft.item.ItemStack.EMPTY; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1348/buggy-version/src.main.java.com.blargsworkshop.sleepstone.items.stone.container.StoneContainer.java", "BodyUseAPI": [], "Fixed commit": "2bfe66088416b25b1162ef1cfa1e0639cb093190", "Url": "https://api.github.com/repos/Echo343/Sleepstone", "Date": "2018-02-13T03:30:41Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) == null) { timer = new java.util.Timer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1511/buggy-version/app.src.main.java.io.fusionbit.vcarry.ActivityTransportRequest.java", "BodyUseAPI": [], "Fixed commit": "6d50d22442719c59c89bf1580b1a36cd998e878b", "Url": "https://api.github.com/repos/rutvik106/vcarry", "Date": "2018-05-18T11:54:10Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(url)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7726/buggy-version/src.main.java.com.fanli.processor.HierarchyLinkPageProcessor.java", "BodyUseAPI": [], "Fixed commit": "d9ef63056f72b5801a4c06cccabb7543e3f5288e", "Url": "https://api.github.com/repos/gaoinsh/majorSpider", "Date": "2018-03-07T08:12:27Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runtime) == null) { throw new java.lang.RuntimeException(\"holy uck\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/609/buggy-version/src.main.java.tech.rsqn.cdsl.context.CdslContext.java", "BodyUseAPI": [], "Fixed commit": "63c8a1c026066109357a3ea783c22bc5a8306d76", "Url": "https://api.github.com/repos/rsqn/cdsl", "Date": "2018-01-19T05:32:47Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listCount) > 0) { com.ontotext.process.list.TimeMeasureProcessor.LOG.info((\"Average time: \" + (org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(((totalTime) / (listCount)), \"mm:ss.SSS\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9701/buggy-version/client.src.main.java.com.ontotext.process.list.TimeMeasureProcessor.java", "BodyUseAPI": ["org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String)", "org.apache.logging.log4j.Logger.info((\"Average time: \" + (org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(((totalTime) / (listCount)), \"mm:ss.SSS\"))))"], "Fixed commit": "b3fa27d9a5a1be89371a9982c66df58c733b3c25", "Url": "https://api.github.com/repos/europeana/OAI-PMH", "Date": "2018-01-15T08:22:38Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["completionParameters.getPosition().getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(element instanceof com.nvlad.yii2support.database.PhpExpression)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6988/buggy-version/src.com.nvlad.yii2support.database.QueryCompletionProvider.java", "BodyUseAPI": [], "Fixed commit": "a7098d2e0b36f5a09bfcf77fb2d50951e99a35fb", "Url": "https://api.github.com/repos/nvlad/yii2support", "Date": "2018-10-10T13:02:19Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.start) != (this.left.get(0).charAt(0))) { java.lang.System.out.println(\"\u3010\u63d0\u793a\uff1a\u7b2c\u4e00\u6761\u4ea7\u751f\u5f0f\u5de6\u90e8\u975e\u5f00\u59cb\u7b26\u53f7\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u8f93\u5165\u3011\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7463/buggy-version/Classifier.src.Grammar.java", "BodyUseAPI": [], "Fixed commit": "7eaa17a91b990edca819c763f71a18a9d67049a3", "Url": "https://api.github.com/repos/liyihann/ChomskyClassifier", "Date": "2018-09-19T04:00:48Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mWaitingDialog.isVisible()) mWaitingDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4126/buggy-version/app.src.main.java.com.fff.ingood.activity.RegisterInterestPageActivity.java", "BodyUseAPI": ["com.fff.ingood.activity.RegisterInterestPageActivity.dismiss()"], "Fixed commit": "071e82aa941cda6dd0072718001f6936243aa8df", "Url": "https://api.github.com/repos/elminsterii/IngoodClientAndroid", "Date": "2018-06-07T07:39:55Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mWaitingDialog.isVisible()) mWaitingDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4126/buggy-version/app.src.main.java.com.fff.ingood.activity.LoginActivity.java", "BodyUseAPI": ["com.fff.ingood.ui.CircleProgressBarDialog.dismiss()"], "Fixed commit": "071e82aa941cda6dd0072718001f6936243aa8df", "Url": "https://api.github.com/repos/elminsterii/IngoodClientAndroid", "Date": "2018-06-07T07:39:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mWaitingDialog.isVisible()) mWaitingDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4126/buggy-version/app.src.main.java.com.fff.ingood.activity.MainActivity.java", "BodyUseAPI": ["com.fff.ingood.ui.CircleProgressBarDialog.dismiss()"], "Fixed commit": "071e82aa941cda6dd0072718001f6936243aa8df", "Url": "https://api.github.com/repos/elminsterii/IngoodClientAndroid", "Date": "2018-06-07T07:39:55Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.meijialife.simi.bean.VideoCatalog.getVideo_url()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.meijialife.simi.utils.StringUtils.isEmpty(url)) { com.meijialife.simi.utils.UIUtils.showToast(context, \"\u89c6\u9891\u4e0b\u8f7d\u94fe\u63a5\u4e3a\u7a7a\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5879/buggy-version/app.src.com.meijialife.simi.adapter.VideoCatalogListAdapter.java", "BodyUseAPI": [], "Fixed commit": "8ff9b956b89672f8fd88d0558404b7f54f302587", "Url": "https://api.github.com/repos/lnczx/meijia-yxz-android", "Date": "2018-07-05T08:12:49Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (date != null) { java.text.DateFormat dfOut = new java.text.SimpleDateFormat(\"dd.MM.yyyy HH:mm:ss\"); return dfOut.format(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3032/buggy-version/app.src.main.java.com.elegion.tracktor.utils.StringUtils.java", "BodyUseAPI": ["java.text.DateFormat.format(java.util.Date)"], "Fixed commit": "8adcdfb176ca61b922eef965da36ef35fc8b0c3b", "Url": "https://api.github.com/repos/alien190/tracktor", "Date": "2018-09-28T03:53:28Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ingredientslist) != null) { ingredientsListAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5278/buggy-version/app.src.main.java.com.example.android.bakingapp.RecipeIngredientsWidget.java", "BodyUseAPI": [], "Fixed commit": "10639270cfba49b1523df78ee8bb55f3905cbcff", "Url": "https://api.github.com/repos/eohsiek/BakingApp", "Date": "2018-07-27T13:58:09Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((this.recipeName) != null) && ((this.ingredientslist) != null)) { views.setTextViewText(R.id.appwidget_text, ((this.recipeName) + \"\\nIngredents\")); views.setTextViewText(R.id.ingredientslist, this.ingredients); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5278/buggy-version/app.src.main.java.com.example.android.bakingapp.RecipeIngredientsWidget.java", "BodyUseAPI": ["android.widget.RemoteViews.setTextViewText(R.id.appwidget_text,java.lang.String)"], "Fixed commit": "10639270cfba49b1523df78ee8bb55f3905cbcff", "Url": "https://api.github.com/repos/eohsiek/BakingApp", "Date": "2018-07-27T13:58:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.exxeta.iss.sonar.esql.api.tree.expression.CallExpressionTree.functionName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (identifier != null) { java.lang.String calledFunction = identifier.name(); if (functionName.equalsIgnoreCase(calledFunction)) { addIssue(new com.exxeta.iss.sonar.esql.api.visitors.LineIssue(this, stmt, com.exxeta.iss.sonar.esql.check.ProcessInvokingItselfCheck.MESSAGE)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5693/buggy-version/esql-checks.src.main.java.com.exxeta.iss.sonar.esql.check.ProcessInvokingItselfCheck.java", "BodyUseAPI": ["com.exxeta.iss.sonar.esql.api.tree.expression.IdentifierTree.name()"], "Fixed commit": "0f7c4801d5097e24200fa7470b72fd93c16b9623", "Url": "https://api.github.com/repos/EXXETA/sonar-esql-plugin", "Date": "2017-12-26T11:29:12Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.VIBRATOR_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (vibrator != null) { vibrator.vibrate(com.google.zxing.client.android.BeepManager.VIBRATE_DURATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/2129/buggy-version/zxing-android-embedded.src.com.google.zxing.client.android.BeepManager.java", "BodyUseAPI": ["android.os.Vibrator.vibrate(long)"], "Fixed commit": "8a67d852e4fe6e88d29a5ca34f4375a6f93eff24", "Url": "https://api.github.com/repos/journeyapps/zxing-android-embedded", "Date": "2018-03-04T10:29:04Z"},
{"Line": "=>792", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arr[i]) == null) { child.add(\"null\"); }else { child.add(((java.lang.Enum<?>) (arr[i])).name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5963/buggy-version/ihmc-pub-sub-serializers-extra.src.main.java.us.ihmc.idl.serializers.extra.JacksonInterchangeSerializer.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.node.ArrayNode.add(java.lang.String)", "T.name()"], "Fixed commit": "07fb95be0879a794c85f9674822f790227da92f0", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-pub-sub-group", "Date": "2018-04-09T20:58:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.getElementsByTagName(tag).item(0)) == null) { throw new java.lang.NullPointerException((((\"MISSING HOOK TAG: The '\" + tag) + \"' xml tag is missing from one of the hooks of type: \") + (element.getParentNode().getNodeName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9882/buggy-version/src.main.java.org.parabot.core.parsers.hooks.XMLHookParser.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeName()", "org.w3c.dom.Element.getParentNode()"], "Fixed commit": "e27d3a2f8798c918578cdce8c60a57ccf5ec69e5", "Url": "https://api.github.com/repos/Shadowrs/Parabot", "Date": "2018-09-05T09:41:03Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldloc.equals(start)) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8894/buggy-version/winning-strats.MapLocationComparator.java", "BodyUseAPI": [], "Fixed commit": "2a2b9671dbfcc48042e538a26b0f9c8accd42674", "Url": "https://api.github.com/repos/exsmiley/flat-mars-society", "Date": "2018-01-18T19:32:55Z"},
{"Line": "=>2647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.savingAndLoading.ChunkData.getBlockMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((blockMap2[(x - startx)][(y - starty)]) != null) { blockMap[x][y] = blockMap2[(x - startx)][(y - starty)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/4219/buggy-version/core.src.map.Map.java", "BodyUseAPI": [], "Fixed commit": "2f3c222cd69cdac382d66c99153644dc12102bf4", "Url": "https://api.github.com/repos/CuseCose/Aeronef", "Date": "2018-08-03T00:29:32Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (degree < 0) degree += 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7514/buggy-version/app.src.main.java.io.pslab.activity.CompassActivity.java", "BodyUseAPI": [], "Fixed commit": "68b4ceed9df834ec7b736da901b1de61f88990c2", "Url": "https://api.github.com/repos/abhinavraj23/pslab-android", "Date": "2018-08-06T13:53:39Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (degree < 0) degree += 360;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7514/buggy-version/app.src.main.java.io.pslab.activity.CompassActivity.java", "BodyUseAPI": [], "Fixed commit": "68b4ceed9df834ec7b736da901b1de61f88990c2", "Url": "https://api.github.com/repos/abhinavraj23/pslab-android", "Date": "2018-08-06T13:53:39Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(geText.getText().contains(net.runelite.client.plugins.grandexchange.GrandExchangePlugin.OSB_GE_TEXT))) { try { final net.runelite.http.api.osbuddy.GrandExchangeResult result = net.runelite.client.plugins.grandexchange.GrandExchangePlugin.CLIENT.lookupItem(itemId); final java.lang.String text = ((geText.getText()) + (net.runelite.client.plugins.grandexchange.GrandExchangePlugin.OSB_GE_TEXT)) + (net.runelite.client.util.StackFormatter.formatNumber(result.getOverall_average())); geText.setText(text); } catch (java.io.IOException e) { log.debug(\"Error getting price of item {}\", itemId, e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5128/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.grandexchange.GrandExchangePlugin.java", "BodyUseAPI": ["net.runelite.api.widgets.Widget.setText(java.lang.String)", "net.runelite.api.widgets.Widget.getText()"], "Fixed commit": "9280d5a173644b792873915c3019a7928866299a", "Url": "https://api.github.com/repos/Karolcz125/runelite", "Date": "2018-10-07T10:49:19Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trialUserName == null) || (trialPassword == null)) { throw new java.lang.IllegalArgumentException(\"Null object has been passed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/658/buggy-version/src.CMC.DBController.java", "BodyUseAPI": [], "Fixed commit": "bdcc58550a6212adba72924ccbfb040555f3d8b2", "Url": "https://api.github.com/repos/ceramictoasters/CMC", "Date": "2018-04-11T19:41:23Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.allSchoolsArray.contains(schoolToSave))) { throw new java.lang.IllegalArgumentException(\"School Is Not In The Database\"); }else { int savedSchool = DBConnection.user_saveSchool(activeUser.getUsername(), schoolToSave.getName()); if (savedSchool < 0) { return false; }else { this.savedSchoolsArray.add(schoolToSave.getName()); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/658/buggy-version/src.CMC.DBController.java", "BodyUseAPI": ["CMC.School.getName()", "dblibrary.project.csci230.UniversityDBLibrary.user_saveSchool(activeUser.getUsername(),schoolToSave.getName())", "CMC.School.getName()", "java.util.ArrayList<java.lang.String>.add(schoolToSave.getName())"], "Fixed commit": "bdcc58550a6212adba72924ccbfb040555f3d8b2", "Url": "https://api.github.com/repos/ceramictoasters/CMC", "Date": "2018-04-11T19:41:23Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((activeUser == null) || (schoolToSave == null)) { throw new java.lang.IllegalArgumentException(\"null object passed\"); }else if (!(this.allAccountsArray.contains(activeUser))) { throw new java.lang.IllegalArgumentException(\"The User Is Not In The Database\"); }else if (!(this.allSchoolsArray.contains(schoolToSave))) { throw new java.lang.IllegalArgumentException(\"School Is Not In The Database\"); }else { int savedSchool = DBConnection.user_saveSchool(activeUser.getUsername(), schoolToSave.getName()); if (savedSchool < 0) { return false; }else { this.savedSchoolsArray.add(schoolToSave.getName()); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/658/buggy-version/src.CMC.DBController.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(schoolToSave.getName())", "CMC.School.getName()", "dblibrary.project.csci230.UniversityDBLibrary.user_saveSchool(activeUser.getUsername(),schoolToSave.getName())", "java.util.ArrayList<CMC.Account>.contains(CMC.User)", "java.util.ArrayList<CMC.School>.contains(CMC.School)", "CMC.School.getName()", "CMC.User.getUsername()"], "Fixed commit": "bdcc58550a6212adba72924ccbfb040555f3d8b2", "Url": "https://api.github.com/repos/ceramictoasters/CMC", "Date": "2018-04-11T19:41:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mEmailSent = savedInstanceState.getBoolean(com.firebase.ui.auth.ui.email.EmailLinkFragment.EMAIL_SENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8080/buggy-version/auth.src.main.java.com.firebase.ui.auth.ui.email.EmailLinkFragment.java", "BodyUseAPI": ["android.os.Bundle.getBoolean(java.lang.String)"], "Fixed commit": "4c3a6512d20a201202a68d9b085945efac48cd0b", "Url": "https://api.github.com/repos/firebase/FirebaseUI-Android", "Date": "2018-10-28T20:15:04Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().getBackStackEntryCount()) > 0) { getSupportFragmentManager().popBackStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8080/buggy-version/auth.src.main.java.com.firebase.ui.auth.ui.email.EmailActivity.java", "BodyUseAPI": [], "Fixed commit": "4c3a6512d20a201202a68d9b085945efac48cd0b", "Url": "https://api.github.com/repos/firebase/FirebaseUI-Android", "Date": "2018-10-28T20:15:04Z"},
{"Line": "=>605", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.carbondata.core.datastore.impl.FileFactory.isFileExist(indexFilePath)) { indexFiles.put(indexFilePath, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1609/buggy-version/core.src.main.java.org.apache.carbondata.core.metadata.SegmentFileStore.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,<nulltype>)"], "Fixed commit": "24b8662cb563fadd20f79e68ed34764e63380389", "Url": "https://api.github.com/repos/dhatchayani/carbondata", "Date": "2018-07-20T14:36:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transfer == null) { throw new com.revature.exception.InvalidAccountException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8697/buggy-version/src.main.java.com.revature.beans.Transaction.java", "BodyUseAPI": [], "Fixed commit": "4bf46c583b1179364fbdf4110a214c222373434d", "Url": "https://api.github.com/repos/revatureclass/1808java-nick-project0-cTre19", "Date": "2018-09-07T14:00:25Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(content)) { keyword = (\"%\" + content) + \"%\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1648/buggy-version/ref.src.main.java.com.yonyou.iuap.baseservice.ref.service.RefCommonService.java", "BodyUseAPI": [], "Fixed commit": "c89573d942429b49005ed3606d5afc38ed5c3d28", "Url": "https://api.github.com/repos/yonyou-iuap/iuap-pap-baseservice", "Date": "2018-09-04T13:10:14Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(org.apache.commons.io.FilenameUtils.getExtension(file.getOriginalFilename()).equals(\"xml\"))) && (!(org.apache.commons.io.FilenameUtils.getExtension(file.getOriginalFilename()).equals(\"json\")))) { return new com.wipro.ats.bdre.md.rest.RestWrapper(\"You failed to upload because the file format was not supported\", RestWrapper.ERROR); }else { return new com.wipro.ats.bdre.md.rest.RestWrapper(\"You failed to upload because the file was empty.\", RestWrapper.ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5724/buggy-version/md-rest-api.src.main.java.com.wipro.ats.bdre.md.rest.CodeUploaderAPI.java", "BodyUseAPI": [], "Fixed commit": "c581f498efdb2898b5265322d9b448479188e270", "Url": "https://api.github.com/repos/WiproOpenSourcePractice/openbdre", "Date": "2018-05-09T11:35:10Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(salesJournal.SalesTax.equals(\"\"))) salesJournal.SODistribution = java.lang.String.valueOf(((java.lang.Integer.valueOf(country[spirit.fitness.scanner.common.Constrant.SODISTRIBUTION])) + 1)); else salesJournal.SODistribution = java.lang.String.valueOf(country[spirit.fitness.scanner.common.Constrant.SODISTRIBUTION]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1369/buggy-version/src.spirit.fitness.scanner.util.ExcelHelper.java", "BodyUseAPI": [], "Fixed commit": "9023c92fad16c07e5494546a92a7ee27d168d118", "Url": "https://api.github.com/repos/geminihsu/SpiriFitAppReferenceLib", "Date": "2018-07-27T21:14:30Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sales.SalesTax.equals(\"\"))) distribution = (java.lang.Integer.valueOf(sales.SODistribution)) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1369/buggy-version/src.spirit.fitness.scanner.util.ExcelHelper.java", "BodyUseAPI": ["java.lang.Integer.valueOf(sales.SODistribution)"], "Fixed commit": "9023c92fad16c07e5494546a92a7ee27d168d118", "Url": "https://api.github.com/repos/geminihsu/SpiriFitAppReferenceLib", "Date": "2018-07-27T21:14:30Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sales.ItemID.equals(\"\")) fileWriter.append(java.lang.String.valueOf(sales.SalesTax)); else fileWriter.append(java.lang.String.valueOf(\"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1369/buggy-version/src.spirit.fitness.scanner.util.ExcelHelper.java", "BodyUseAPI": ["java.lang.String.valueOf(sales.SalesTax)", "java.io.FileWriter.append(java.lang.String)"], "Fixed commit": "9023c92fad16c07e5494546a92a7ee27d168d118", "Url": "https://api.github.com/repos/geminihsu/SpiriFitAppReferenceLib", "Date": "2018-07-27T21:14:30Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Build.VERSION.SDK_INT) >= 23) && ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.READ_CALENDAR)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { android.util.Log.d(com.android.calendar.AllInOneActivity.TAG, \"Manifest.permission.WRITE_CALENDAR is not granted\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7587/buggy-version/src.com.android.calendar.AllInOneActivity.java", "BodyUseAPI": [], "Fixed commit": "54e535c5d493c28460726dfe6bbb5f763a5193d2", "Url": "https://api.github.com/repos/Etar-Group/Etar-Calendar", "Date": "2018-09-18T13:51:38Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Build.VERSION.SDK_INT) >= 23) && ((android.support.v4.content.ContextCompat.checkSelfPermission(this, Manifest.permission.READ_CALENDAR)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { android.util.Log.d(com.android.calendar.AllInOneActivity.TAG, \"Manifest.permission.READ_CALENDAR is not granted\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7587/buggy-version/src.com.android.calendar.AllInOneActivity.java", "BodyUseAPI": [], "Fixed commit": "54e535c5d493c28460726dfe6bbb5f763a5193d2", "Url": "https://api.github.com/repos/Etar-Group/Etar-Calendar", "Date": "2018-09-18T13:51:38Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.housepower.jdbc.misc.SQLLexer.character()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((row > 0) && (nextChar == ',')) nextChar = lexer.character();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3971/buggy-version/src.main.java.com.github.housepower.jdbc.stream.ValuesInputFormat.java", "BodyUseAPI": [], "Fixed commit": "2ae42e91eea494d0e7734fef8c81fd2adad863b7", "Url": "https://api.github.com/repos/housepower/ClickHouse-Native-JDBC", "Date": "2018-09-28T16:22:18Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((running_instance_ids.size()) > 0) { com.amazonaws.services.ec2.model.TerminateInstancesRequest request = new com.amazonaws.services.ec2.model.TerminateInstancesRequest(running_instance_ids); com.amazonaws.services.ec2.model.TerminateInstancesResult result = aws_client.terminateInstances(request); for (com.amazonaws.services.ec2.model.InstanceStateChange state : result.getTerminatingInstances()) { de.felixbrandt.autoscale.InstanceManager.LOGGER.warn(\"Instance: {} is now {}\", state.getInstanceId(), state.getCurrentState().getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9712/buggy-version/src.main.java.de.felixbrandt.autoscale.InstanceManager.java", "BodyUseAPI": [], "Fixed commit": "d3d5c0f5cec3c8fe2c2857251a3ab3eb0ebebb63", "Url": "https://api.github.com/repos/fbrandt/Ceva", "Date": "2018-02-21T09:17:11Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((post.getPostId()) != postId) { list.add(postRepository.findByPostId(post.getPostId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1354/buggy-version/asp.src.main.java.com.caps.asp.service.PostService.java", "BodyUseAPI": ["com.caps.asp.repository.PostRepository.findByPostId(post.getPostId())", "com.caps.asp.model.TbPostHasTbDistrict.getPostId()", "java.util.List<com.caps.asp.model.TbPost>.add(postRepository.findByPostId(post.getPostId()))"], "Fixed commit": "81c7edb52dcd72f71223bba8f9b1d5121e82fefb", "Url": "https://api.github.com/repos/nhat7490/ASP", "Date": "2018-10-10T02:57:37Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((encoding) != null) encoding = encoding.trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9709/buggy-version/mail.src.main.java.com.sun.mail.imap.protocol.BODYSTRUCTURE.java", "BodyUseAPI": [], "Fixed commit": "27462352f2ea570688c29efe8fb53e115aac30d3", "Url": "https://api.github.com/repos/javaee/javamail", "Date": "2018-07-09T23:44:03Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subClass.getName().contains(\"$\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1817/buggy-version/src.main.java.com.dellemc.katalist.notificationfilter.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "d437990e980cefd6de2da46546b1ab2ce789d40d", "Url": "https://api.github.com/repos/bbcyyb/notification-filter-demo", "Date": "2018-04-08T02:49:16Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStep) != null) { setupPlayer(mStep.getVideoURL()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/1461/buggy-version/app.src.main.java.com.example.android.bakingapp.fragment.StepDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "6de59918ffca54d18231f05b590cbbb145a4c194", "Url": "https://api.github.com/repos/johngboutros/baking-app-project", "Date": "2018-05-21T01:38:38Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Salesboard.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.equals(\"edit\")) { if (description.isEmpty()) { int id = java.lang.Integer.parseInt(req.getParameter(\"itemId\")); java.lang.System.out.println(\"Empty description\"); session.setAttribute(\"message\", \"Please enter a description\"); resp.sendRedirect(((\"editItem?itemId=\" + id) + \"&edit=edit\")); } int id = java.lang.Integer.parseInt(req.getParameter(\"itemId\")); java.sql.PreparedStatement editItem = conn.prepareStatement((\"update items \" + (\" SET item = ?, description = ?, quantity = ?, price = ? \" + \"where id = ?\"))); editItem.setString(1, item); editItem.setString(2, description); editItem.setInt(3, quantity); editItem.setInt(4, price); editItem.setInt(5, id); editItem.executeUpdate(); resp.sendRedirect(\"sellerReport\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/3027/buggy-version/src.java.Salesboard.ItemHandler.java", "BodyUseAPI": [], "Fixed commit": "b15a37782f9b3dc235acb7cfa01d506a9ad8daf5", "Url": "https://api.github.com/repos/krisbebb/Salesboard", "Date": "2018-10-18T01:44:06Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((!((self.getType()) instanceof anatlyzer.atlext.OCL.StringType)) || ((self.getType()) instanceof anatlyzer.atlext.OCL.BooleanType)) || ((self.getType()) instanceof anatlyzer.atlext.OCL.IntegerType)) || ((self.getType()) instanceof anatlyzer.atlext.OCL.RealType)) { java.lang.Class c = getClassFromName(klassHashMapIn, self.getType().getName(), rootIn); c.setIsAbstract(UBoolean.DONT_KNOW); oclComputedType.put(self, getClassFromName(klassHashMapIn, self.getType().getName(), rootIn)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/7591/buggy-version/totem.trm.reduce.src.org.miso_disim.requirementmetamodel.reduce.VariableVisitor.java", "BodyUseAPI": ["self.getType().getName()", "anatlyzer.atlext.OCL.Parameter.getType()", "org.miso_disim.requirementmetamodel.reduce.VariableVisitor.getClassFromName(java.util.HashMap<java.lang.String, java.lang.Class>,self.getType().getName(),MM_uncertainty.Metamodel)", "self.getType().getName()", "anatlyzer.atlext.OCL.Parameter.getType()", "org.miso_disim.requirementmetamodel.reduce.VariableVisitor.getClassFromName(java.util.HashMap<java.lang.String, java.lang.Class>,self.getType().getName(),MM_uncertainty.Metamodel)", "java.util.HashMap<java.lang.Object, java.lang.Object>.put(anatlyzer.atlext.OCL.Parameter,java.lang.Class)"], "Fixed commit": "e62b12edda6d95a411861b7b5a5144d33c2c91da", "Url": "https://api.github.com/repos/MDEGroup/totem", "Date": "2018-06-28T10:25:06Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((results.size()) == 0) { return util.StaticFunctions.jsonResult(ok(results.add(play.libs.Json.newObject()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/5935/buggy-version/app.controllers.amelie.DDDataController.java", "BodyUseAPI": ["controllers.amelie.DDDataController.ok(results.add(play.libs.Json.newObject()))", "util.StaticFunctions.jsonResult(ok(results.add(play.libs.Json.newObject())))", "com.fasterxml.jackson.databind.node.ArrayNode.add(play.libs.Json.newObject())"], "Fixed commit": "551028eeeec4c1810142d3d8fafd8ab96ab293f3", "Url": "https://api.github.com/repos/sebischair/akre-server", "Date": "2018-05-17T12:16:30Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.redcastlemedia.multitallented.civs.towns.TownManager.getInstance().getTownAt(region.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(town.getLocation().getChunk().isLoaded())) { java.lang.System.out.println(\"town chunk not loaded\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6397/buggy-version/src.org.redcastlemedia.multitallented.civs.regions.effects.VillagerEffect.java", "BodyUseAPI": [], "Fixed commit": "01e0e43d31e50583b719a317c7719f3137e60cb5", "Url": "https://api.github.com/repos/Multitallented/Civs", "Date": "2018-10-06T18:59:37Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((st) != null) try { st.close(); } catch (java.sql.SQLException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/848/buggy-version/src.com.fis.de.DatabaseConnection.java", "BodyUseAPI": [], "Fixed commit": "a3db3c22b552bcc0a5edba04d9710134f32954d9", "Url": "https://api.github.com/repos/LukasBosse/Fluginformationssystem", "Date": "2018-03-16T14:09:23Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.endsWith(\"\\\\n\")) { dataOutputStream.writeBytes(\"\\\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/9000/buggy-version/zeus-modules.zeus-module-device.src.main.java.ch.wellernet.zeus.modules.device.service.communication.tcp.TcpCommunicationService.java", "BodyUseAPI": [], "Fixed commit": "ec71d63f675348c2b0db5b58dff0224428d0257b", "Url": "https://api.github.com/repos/lweller/zeus", "Date": "2018-07-04T19:55:18Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aux.equals(\"\")) { (Line.globalIndex)++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/6772/buggy-version/depurate.Depurator.java", "BodyUseAPI": [], "Fixed commit": "4d7f0608b643a3d5fe1ee36cd51a5d15ad0b8107", "Url": "https://api.github.com/repos/elveon97/Compiler", "Date": "2018-09-10T15:56:02Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.embeddedsocial.base.GlobalObjectRegistry.getObject(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((options != null) && (options.showGalleryView())) { inflater.inflate(R.menu.es_feed_display_method, menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/802/buggy-version/SocialPlusClient.sdk.src.main.java.com.microsoft.embeddedsocial.ui.activity.base.BaseProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "1edab25e4323343745324fdd7b9121131c21cc0c", "Url": "https://api.github.com/repos/Microsoft/EmbeddedSocial-Android-SDK", "Date": "2017-04-26T23:09:26Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size < ((type.length) - 1)) { size += 1; type[size] = (black) ? 0 : 1; length[size] = 1; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V158/8838/buggy-version/main.boofcv-recognition.src.main.java.boofcv.alg.fiducial.qrcode.QrCodePositionPatternDetector.java", "BodyUseAPI": [], "Fixed commit": "cb1cc49c1adc4e234816c9a5ad409223faaf37db", "Url": "https://api.github.com/repos/lessthanoptimal/BoofCV", "Date": "2018-01-27T01:34:22Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.GetterUtil.getString(actionRequest.getAttribute(WebKeys.REDIRECT))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(redirect)) { return redirect; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8530/buggy-version/commerce-checkout-web.src.main.java.com.liferay.commerce.checkout.web.internal.portlet.action.SaveStepMVCActionCommand.java", "BodyUseAPI": [], "Fixed commit": "580635568ee90286f446cca127012729a0887c5c", "Url": "https://api.github.com/repos/yichenroy/com-liferay-commerce", "Date": "2018-09-03T14:24:09Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(jMenu.isEnabled())) { setDisable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1105/buggy-version/ImageGallery.src.org.sleuthkit.autopsy.imagegallery.actions.SwingMenuItemAdapter.java", "BodyUseAPI": [], "Fixed commit": "65c25d84388401804107d94bb4bb0788797c6028", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2018-09-27T13:39:09Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["productBox.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((productName.trim().length()) < 1) { productBox.setError((\"invalid name: \" + productName)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5424/buggy-version/app.src.main.java.com.green_orca.android.demo2018a2.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)"], "Fixed commit": "81f5c8781d790170f9ce4179bea166685aff32bd", "Url": "https://api.github.com/repos/greenorca/SimpleSQLiteApp", "Date": "2018-05-09T19:57:16Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rcourses.get(i).toString().equals(message1)) { check = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6969/buggy-version/app.src.main.java.com.example.courseregistration.Coursechoose.java", "BodyUseAPI": [], "Fixed commit": "7a16673f3d98f7907b83b9636385475bff9d5bf6", "Url": "https://api.github.com/repos/LantaoDong/CourseRegistration", "Date": "2018-04-10T06:39:20Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rcourses.get(i).toString().equals(message1)) { check = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6969/buggy-version/app.src.main.java.com.example.courseregistration.Coursechoose.java", "BodyUseAPI": [], "Fixed commit": "7a16673f3d98f7907b83b9636385475bff9d5bf6", "Url": "https://api.github.com/repos/LantaoDong/CourseRegistration", "Date": "2018-04-10T06:39:20Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rcourses.get(i).toString().equals(message1)) { check = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6969/buggy-version/app.src.main.java.com.example.courseregistration.Coursechoose.java", "BodyUseAPI": [], "Fixed commit": "7a16673f3d98f7907b83b9636385475bff9d5bf6", "Url": "https://api.github.com/repos/LantaoDong/CourseRegistration", "Date": "2018-04-10T06:39:20Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rcourses.get(i).toString().equals(message1)) { check = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6969/buggy-version/app.src.main.java.com.example.courseregistration.Coursechoose.java", "BodyUseAPI": [], "Fixed commit": "7a16673f3d98f7907b83b9636385475bff9d5bf6", "Url": "https://api.github.com/repos/LantaoDong/CourseRegistration", "Date": "2018-04-10T06:39:20Z"},
{"Line": "=>1292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.currentGalaxyName.equalsIgnoreCase(\"galaxy.milky_way\"))) this.selectedParent = this.currentGalaxyMainSystem;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7860/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "45cf6e90f8a09e5e27796b3d6c02e46ca159325d", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-19T00:31:41Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentCorner != corner) { if (((corner == 1) && (currentCorner == 2)) || ((corner == 2) && (currentCorner == 1))) { com.example.project.mobilecapstone.Data.Marker marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[1]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); }else if (((corner == 1) && (currentCorner == 3)) || ((corner == 3) && (currentCorner == 1))) { com.example.project.mobilecapstone.Data.Marker marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[1]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[2]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); }else if (((corner == 1) && (currentCorner == 4)) || ((corner == 4) && (currentCorner == 1))) { com.example.project.mobilecapstone.Data.Marker marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[0]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); }else if (((corner == 2) && (currentCorner == 3)) || ((corner == 3) && (currentCorner == 2))) { com.example.project.mobilecapstone.Data.Marker marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[2]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); }else if ((corner == 2) && (currentCorner == 4)) { float checkX = com.example.project.mobilecapstone.Utils.Utils.getPixel(com.example.project.mobilecapstone.Fragment.MapTrackingFragment.width, 24.0F, 12.0F); if (checkX >= posXT) { com.example.project.mobilecapstone.Data.Marker marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[1]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[0]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); }else { com.example.project.mobilecapstone.Data.Marker marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[2]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[3]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); } }else if ((corner == 4) && (currentCorner == 2)) { float checkX = com.example.project.mobilecapstone.Utils.Utils.getPixel(com.example.project.mobilecapstone.Fragment.MapTrackingFragment.width, 24.0F, 12.0F); if (checkX >= posXT) { com.example.project.mobilecapstone.Data.Marker marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[0]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[1]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); }else { com.example.project.mobilecapstone.Data.Marker marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[3]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[2]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); } }else if (((corner == 3) && (currentCorner == 4)) || ((corner == 4) && (currentCorner == 3))) { com.example.project.mobilecapstone.Data.Marker marker = com.example.project.mobilecapstone.Fragment.MapTrackingFragment.markers[3]; com.example.project.mobilecapstone.Fragment.MapTrackingFragment.directionPoints.add(new com.example.project.mobilecapstone.Data.DirectionPoint(marker.getPosX(), marker.getPosY())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7419/buggy-version/app.src.main.java.com.example.project.mobilecapstone.Fragment.MapTrackingFragment.java", "BodyUseAPI": [], "Fixed commit": "1969a3cd0687b53cc96f7efb9d6f9a32f5d0279d", "Url": "https://api.github.com/repos/hieutn212/CapstoneMobile", "Date": "2018-04-25T23:05:25Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (meta.getType().equals(fragment.submissions.HarveyBal.MergerMeta.Type.MIDDLE)) { newFragment = this.fragmentAlpha; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8411/buggy-version/src.main.java.fragment.submissions.HarveyBal.java", "BodyUseAPI": [], "Fixed commit": "281a02068971ad578bf6f7c3c32ef2d85d5cfb8d", "Url": "https://api.github.com/repos/harvey1327/fragment", "Date": "2018-02-27T20:37:57Z"},
{"Line": "=>3160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (member.isMethodParameter()) { int min = ((picocli.CommandLine.Model.MethodParam) (member.accessible)).position; int max = (member.isMultiValue()) ? java.lang.Integer.MAX_VALUE : min; return new picocli.CommandLine.Range(min, max, member.isMultiValue(), false, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6263/buggy-version/src.main.java.picocli.CommandLine.java", "BodyUseAPI": ["picocli.CommandLine.Model.TypedMember.isMultiValue()", "picocli.CommandLine.Model.TypedMember.isMultiValue()"], "Fixed commit": "b0c2aee3350b6fa25f66ebc76f55d7d2982e3df2", "Url": "https://api.github.com/repos/dwalluck/picocli", "Date": "2018-09-06T15:33:58Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentGroup_2 == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/425/buggy-version/src.com.controller.JamaController.java", "BodyUseAPI": [], "Fixed commit": "dbc7448a1ff926c579764c99ea4903959e69f2dd", "Url": "https://api.github.com/repos/hieumai/JamaSummaryCollector", "Date": "2018-08-31T11:52:23Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentGroup_1 == null) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/425/buggy-version/src.com.controller.JamaController.java", "BodyUseAPI": [], "Fixed commit": "dbc7448a1ff926c579764c99ea4903959e69f2dd", "Url": "https://api.github.com/repos/hieumai/JamaSummaryCollector", "Date": "2018-08-31T11:52:23Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(isContactExist(newName))) { pl.piasecki.Contact contact = contacts.get(findContact(name)); contact.setName(newName); }else { java.lang.System.out.println(((\"Contact with \" + newName) + \" name already exists.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/778/buggy-version/ArrayListChallenge.src.pl.piasecki.MobilePhone.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "pl.piasecki.Contact.setName(java.lang.String)"], "Fixed commit": "fa12229cf3301e3971b9c57ec61825227d44d107", "Url": "https://api.github.com/repos/Piasek15/tasks", "Date": "2018-04-19T20:28:37Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(isContactExist(newName))) || (newName.equals(name))) { pl.piasecki.Contact contact = contacts.get(findContact(name)); contact.setName(newName); contact.setPhoneNumber(newNumber); }else { java.lang.System.out.println(((\"Contact with \" + newName) + \" name already exists.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/778/buggy-version/ArrayListChallenge.src.pl.piasecki.MobilePhone.java", "BodyUseAPI": ["pl.piasecki.Contact.setName(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.util.ArrayList<pl.piasecki.Contact>.get(int)", "pl.piasecki.MobilePhone.findContact(java.lang.String)"], "Fixed commit": "fa12229cf3301e3971b9c57ec61825227d44d107", "Url": "https://api.github.com/repos/Piasek15/tasks", "Date": "2018-04-19T20:28:37Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(NavigationApplication.instance.clearHostOnActivityDestroy())) { this.moveTaskToBack(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7106/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "b9841c37abb9590a430e12320727e22a539f735d", "Url": "https://api.github.com/repos/xvonabur/react-native-navigation", "Date": "2018-04-20T08:30:48Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (layout.onBackPressed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7106/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "b9841c37abb9590a430e12320727e22a539f735d", "Url": "https://api.github.com/repos/xvonabur/react-native-navigation", "Date": "2018-04-20T08:30:48Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(NavigationApplication.instance.clearHostOnActivityDestroy())) { this.moveTaskToBack(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7106/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "b9841c37abb9590a430e12320727e22a539f735d", "Url": "https://api.github.com/repos/xvonabur/react-native-navigation", "Date": "2018-04-20T08:30:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.veertu.ankaMgmtSdk.AnkaMgmtVm.getCreatedTime()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (created != null) { this.createdTime = created; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4513/buggy-version/ankaCloud-server.src.main.java.com.veertu.AnkaCloudInstance.java", "BodyUseAPI": [], "Fixed commit": "10e9676a97739b773a8dca47065c210cae631344", "Url": "https://api.github.com/repos/veertuinc/teamcity-anka-cloud", "Date": "2018-04-28T17:48:55Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(nextWallHit)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5338/buggy-version/java.src.botenanna.physics.BallPhysics.java", "BodyUseAPI": [], "Fixed commit": "a2c3c5e145c9df25ff9b57634dc82a0f6ab695cb", "Url": "https://api.github.com/repos/NicEastvillage/RLBot-Boten-Anna", "Date": "2018-05-28T08:25:26Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server) == null) { this.server = new org.eclipse.jetty.server.Server(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6388/buggy-version/server.src.main.java.org.schemarepo.config.ServerModule.java", "BodyUseAPI": [], "Fixed commit": "fb30cf105b21fe77e68124f02483be4bdef0f3e5", "Url": "https://api.github.com/repos/chekore/schema-repo", "Date": "2018-09-21T07:17:38Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server) == null) { this.server = new org.eclipse.jetty.server.Server(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6388/buggy-version/server.src.main.java.org.schemarepo.config.ServerModule.java", "BodyUseAPI": [], "Fixed commit": "fb30cf105b21fe77e68124f02483be4bdef0f3e5", "Url": "https://api.github.com/repos/chekore/schema-repo", "Date": "2018-09-21T07:17:38Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck.getClassDef(com.puppycrawl.tools.checkstyle.api.DetailAST,java.lang.String)", "com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck.getClassDef(com.puppycrawl.tools.checkstyle.api.DetailAST,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextClass == curClass) { curClass = null; }else { curClass = nextClass; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6461/buggy-version/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.OverridableMethodInConstructorCheck.java", "BodyUseAPI": [], "Fixed commit": "49a66ecc5597dacc5bfee3425bbd560d77348c37", "Url": "https://api.github.com/repos/sevntu-checkstyle/sevntu.checkstyle", "Date": "2018-06-08T13:26:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.util.ClassUtils.isCglibProxyClass(beanClass)) { interfaces = beanClass.getSuperclass().getInterfaces(); }else { interfaces = beanClass.getInterfaces(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1169/buggy-version/ff4j-aop.src.main.java.org.ff4j.aop.FeatureAutoProxy.java", "BodyUseAPI": ["java.lang.Class<?>.getInterfaces()", "java.lang.Class<? super ?>.getInterfaces()", "java.lang.Class<?>.getSuperclass()"], "Fixed commit": "a9192e45d140ee813fe90dace2b5af65c94e6879", "Url": "https://api.github.com/repos/ff4j/ff4j", "Date": "2018-07-17T15:29:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((track.album) != null) { this.imageURL = (((track.album.images) != null) && ((track.album.images.size()) > 0)) ? track.album.images.get(0).url : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/606/buggy-version/app.src.main.java.io.hamo.qdio.music.Track.java", "BodyUseAPI": [], "Fixed commit": "de0851baf2f32dd9a89456be880e909b6e8e45ec", "Url": "https://api.github.com/repos/alrikkjellberg/IceTrailerGang", "Date": "2018-09-19T11:42:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((track.album) != null) { this.albumURI = track.album.uri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/606/buggy-version/app.src.main.java.io.hamo.qdio.music.Track.java", "BodyUseAPI": [], "Fixed commit": "de0851baf2f32dd9a89456be880e909b6e8e45ec", "Url": "https://api.github.com/repos/alrikkjellberg/IceTrailerGang", "Date": "2018-09-19T11:42:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((track.is_playable) != null) { this.isPlayable = track.is_playable; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/606/buggy-version/app.src.main.java.io.hamo.qdio.music.Track.java", "BodyUseAPI": [], "Fixed commit": "de0851baf2f32dd9a89456be880e909b6e8e45ec", "Url": "https://api.github.com/repos/alrikkjellberg/IceTrailerGang", "Date": "2018-09-19T11:42:59Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (BlueSnapLocalBroadcastManager.ONE_LINE_CC_EDIT_FINISH.equals(event)) { }else { boolean isShippingSameAsBilling = intent.getBooleanExtra(BlueSnapLocalBroadcastManager.SHIPPING_SWITCH_ACTIVATED, false); billingViewComponent.setShippingSameAsBilling(isShippingSameAsBilling); if (isShippingSameAsBilling) { finishFromFragmentNoShipping(); }else { finishFromFragmentWithShipping(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9185/buggy-version/bluesnap-android.src.main.java.com.bluesnap.androidapi.views.fragments.NewCreditCardFragment.java", "BodyUseAPI": [], "Fixed commit": "90ed61334db28fd35a4cb755a1880c1523c69854", "Url": "https://api.github.com/repos/bluesnap/bluesnap-android-int", "Date": "2018-08-13T17:52:08Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flag) != 2) actionMode.addView(selectedMessagesCountTextView, org.telegram.ui.Components.LayoutHelper.createLinear(0, LayoutHelper.MATCH_PARENT, 1.0F, 65, 0, 0, 0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3068/buggy-version/TMessagesProj.src.main.java.org.telegram.ui.TelegraphSelectActivity.java", "BodyUseAPI": [], "Fixed commit": "a8c7270b3950cf4db40204d671040de5407f1c43", "Url": "https://api.github.com/repos/AnimusPetitor/studious-computing-machine", "Date": "2018-03-31T21:03:13Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(alarmBuilder.getRelatedAlarmList().isEmpty())) { java.util.List<org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm> relatedAlarmsWithExclusions = alarmBuilder.getRelatedAlarmList().stream().map(org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm::newBuilder).map(org.opennms.features.kafka.producer.AlarmEqualityChecker.Exclusions::defaultExclusions).map(OpennmsModelProtos.Alarm.Builder::build).collect(java.util.stream.Collectors.toList()); alarmBuilder.clearRelatedAlarm(); relatedAlarmsWithExclusions.forEach(alarmBuilder::addRelatedAlarm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1219/buggy-version/features.kafka.producer.src.main.java.org.opennms.features.kafka.producer.AlarmEqualityChecker.java", "BodyUseAPI": ["alarmBuilder.getRelatedAlarmList().stream().map(org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm::newBuilder).map(org.opennms.features.kafka.producer.AlarmEqualityChecker.Exclusions::defaultExclusions).map(OpennmsModelProtos.Alarm.Builder::build).collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)", "alarmBuilder.getRelatedAlarmList().stream().map(org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm::newBuilder).map(org.opennms.features.kafka.producer.AlarmEqualityChecker.Exclusions::defaultExclusions)", "alarmBuilder.getRelatedAlarmList().stream().map(org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm::newBuilder).map(org.opennms.features.kafka.producer.AlarmEqualityChecker.Exclusions::defaultExclusions).map(OpennmsModelProtos.Alarm.Builder::build)", "OpennmsModelProtos.Alarm.Builder.getRelatedAlarmList()", "alarmBuilder.getRelatedAlarmList().stream()", "alarmBuilder.getRelatedAlarmList().stream().map(org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm::newBuilder)", "OpennmsModelProtos.Alarm.Builder.clearRelatedAlarm()", "java.util.List<OpennmsModelProtos.Alarm>.forEach(alarmBuilder::addRelatedAlarm)"], "Fixed commit": "a5dcf7ea18c457a21dfce7d0db2a87ff541ebd62", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2018-09-14T21:56:59Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((holder.getItemViewType()) == (DISPLAYED_STATUS)) { final fr.gouv.etalab.mastodon.drawers.StatusListAdapter.ViewHolder viewHolder = ((fr.gouv.etalab.mastodon.drawers.StatusListAdapter.ViewHolder) (holder)); viewHolder.status_content.setEnabled(false); viewHolder.status_content.setEnabled(true); viewHolder.status_spoiler.setEnabled(false); viewHolder.status_spoiler.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/905/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.drawers.StatusListAdapter.java", "BodyUseAPI": [], "Fixed commit": "864cf71da8214f65736505d8291bf73c9a65e690", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-01-28T12:53:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ambariRepositoryVersionService.isVersionNewerOrEqualThanLimited(ambariRepo::getVersion, com.sequenceiq.cloudbreak.service.cluster.ambari.AmbariRepositoryVersionService.AMBARI_VERSION_2_7_2_0)) { ldapConfigs.put(\"ambari.ldap.advanced.collision_behavior\", \"convert\"); }else { ldapConfigs.put(\"ambari.ldap.advance.collision_behavior\", \"convert\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1942/buggy-version/core.src.main.java.com.sequenceiq.cloudbreak.service.cluster.ambari.AmbariLdapService.java", "BodyUseAPI": [], "Fixed commit": "0d512be1acecce313617d82881ae8dfd7d61e8ce", "Url": "https://api.github.com/repos/hortonworks/cloudbreak", "Date": "2018-10-24T07:19:45Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((kafkaMap == null) || (kafkaMap.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5354/buggy-version/src.main.java.com.feeyo.kafka.config.loader.KafkaLoad.java", "BodyUseAPI": [], "Fixed commit": "145dbf3811092938219a533ab94828b7abc01783", "Url": "https://api.github.com/repos/variflight/feeyo-redisproxy", "Date": "2018-05-04T10:44:45Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((kafkaMap) != null) && (kafkaMap.isEmpty())) { com.feeyo.kafka.config.loader.KafkaLoad.instance().load(kafkaMap); com.feeyo.kafka.admin.OffsetAdmin.getInstance().startUp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5354/buggy-version/src.main.java.com.feeyo.redis.engine.RedisEngineCtx.java", "BodyUseAPI": ["com.feeyo.kafka.config.loader.KafkaLoad.instance().load(java.util.Map<java.lang.String, com.feeyo.kafka.config.KafkaCfg>)"], "Fixed commit": "145dbf3811092938219a533ab94828b7abc01783", "Url": "https://api.github.com/repos/variflight/feeyo-redisproxy", "Date": "2018-05-04T10:44:45Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((survey.getMainScore()) != null) score = survey.getMainScore().getScore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8282/buggy-version/app.src.eyeseetea.java.org.eyeseetea.malariacare.strategies.AssessmentUnsentAdapterCosmeticsStrategy.java", "BodyUseAPI": ["survey.getMainScore().getScore()", "org.eyeseetea.malariacare.data.database.model.SurveyDB.getMainScore()"], "Fixed commit": "8dde8eb105120aaa0bf9a0f7e69b231d0d5d74c1", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2018-09-07T04:55:15Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cp5.get(controlP5.Textfield.class, \"Name\").getText().equals(\"\"))) { spieler.name = cp5.get(controlP5.Textfield.class, \"Name\").getText(); cp5.get(controlP5.Textfield.class, \"Name\").setVisible(false); cp5.get(controlP5.Bang.class, \"Weiter\").setVisible(false); font = createFont(\"Arial\", 18, true); textFont(font, 40); namegiven = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6124/buggy-version/src.Game.Hauptmenu.java", "BodyUseAPI": ["cp5.get(controlP5.Bang.class, \"Weiter\").setVisible(boolean)", "cp5.get(controlP5.Textfield.class, \"Name\").getText()", "controlP5.ControlP5.get(java.lang.Class,java.lang.String)", "controlP5.ControlP5.get(java.lang.Class,java.lang.String)", "controlP5.ControlP5.get(java.lang.Class,java.lang.String)", "cp5.get(controlP5.Textfield.class, \"Name\").setVisible(boolean)"], "Fixed commit": "095ee1a06c03b0c98e30bc48dbd7fe0878eb7bfb", "Url": "https://api.github.com/repos/Randy1919/ProjectRPG_Processing", "Date": "2018-02-08T00:17:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (approx >= (2 * 45)) approx = (2 * 45) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5159/buggy-version/gs-cv.src.main.java.org.genericsystem.cv.application.RadonTransformDemo.java", "BodyUseAPI": [], "Fixed commit": "cc4a7642a15c50c33892a20b4dbde58d21ce07d8", "Url": "https://api.github.com/repos/genericsystem/genericsystem2015", "Date": "2018-04-09T12:04:54Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.function.BiFunction<java.lang.Double, double[], java.lang.Double>.apply(int,double[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (approx < 0) approx = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5159/buggy-version/gs-cv.src.main.java.org.genericsystem.cv.application.RadonTransformDemo.java", "BodyUseAPI": [], "Fixed commit": "cc4a7642a15c50c33892a20b4dbde58d21ce07d8", "Url": "https://api.github.com/repos/genericsystem/genericsystem2015", "Date": "2018-04-09T12:04:54Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gyroHeader) != null) gyroHeader.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7112/buggy-version/core.src.com.esbjon.entities.Gyrocraft.java", "BodyUseAPI": [], "Fixed commit": "eba7e2783d46689bff16c83b3647a32cc1005d02", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2018-01-18T00:11:46Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonObject.getJSONObject(\"error\").getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(error.isEmpty())) return new visit.me.gil.mota.visitme.managers.ErrorManager.Error(visit.me.gil.mota.visitme.managers.ErrorManager.ErrorType.CUSTOM, error); else return new java.lang.Throwable(\"Error Desconocido\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7293/buggy-version/app.src.main.java.visit.me.gil.mota.visitme.managers.ErrorManager.java", "BodyUseAPI": [], "Fixed commit": "3abfd609ce38d55f6215d1bef37d431b688a8cee", "Url": "https://api.github.com/repos/VunterSlaush/visitme", "Date": "2018-06-06T01:44:10Z"},
{"Line": "=>792", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bp != null) { impl.setExclusiveMaximum(bp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3788/buggy-version/modules.swagger-parser.src.main.java.io.swagger.parser.util.SwaggerDeserializer.java", "BodyUseAPI": ["io.swagger.parser.util.ModelImpl.setExclusiveMaximum(java.lang.Boolean)"], "Fixed commit": "7d8a80f29dfc83871c3812a1194a130b133241b1", "Url": "https://api.github.com/repos/swagger-api/swagger-parser", "Date": "2018-05-04T06:07:36Z"},
{"Line": "=>797", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bp != null) { impl.setExclusiveMinimum(bp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3788/buggy-version/modules.swagger-parser.src.main.java.io.swagger.parser.util.SwaggerDeserializer.java", "BodyUseAPI": ["io.swagger.parser.util.ModelImpl.setExclusiveMinimum(java.lang.Boolean)"], "Fixed commit": "7d8a80f29dfc83871c3812a1194a130b133241b1", "Url": "https://api.github.com/repos/swagger-api/swagger-parser", "Date": "2018-05-04T06:07:36Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((goodsListBean.getData().get(i)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7973/buggy-version/SillyChildClient.app.src.main.java.com.sillykid.app.mall.goodslist.GoodsListActivity.java", "BodyUseAPI": [], "Fixed commit": "c56322c9776141528e0d1168ea037fc740bd5b01", "Url": "https://api.github.com/repos/921668753/SillyChildClient2-Android", "Date": "2018-10-08T03:44:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (allowMove) { if (skipNext) { java.lang.System.out.println(\"hit!\"); skipNext = false; }else { uiRef.movePiece(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5680/buggy-version/src.UI.GameTimer.java", "BodyUseAPI": [], "Fixed commit": "aee92d0a00094e773918f91f98e49b3438ab24b0", "Url": "https://api.github.com/repos/vamontchik/Tetris", "Date": "2018-07-18T08:53:31Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executor) != null) { return executor.isShutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3602/buggy-version/qa-syshub.src.main.java.com.quakearts.syshub.agent.ProcessingAgent.java", "BodyUseAPI": [], "Fixed commit": "4bcedff1e7ba9758b281b8c35d8e918d0f721b2c", "Url": "https://api.github.com/repos/kwakutwumasi/Quakearts-Webtools", "Date": "2018-05-05T13:59:37Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parentDirectory == null) { throw new java.lang.IllegalArgumentException((\"Path does not have a parent directory: \" + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4817/buggy-version/src.main.java.com.cloudbees.jenkins.support.SupportLogHandler.java", "BodyUseAPI": [], "Fixed commit": "5af1bb7977da0155bd5217094be021887e34eeab", "Url": "https://api.github.com/repos/jvz/support-core-plugin", "Date": "2018-05-11T23:02:03Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.runelite.client.util.Text.removeTags(event.getOption()).toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((option.equals(\"make one\")) && (config.makeAll())) { swap(\"make all\", option, target, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4420/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.menuentryswapper.MenuEntrySwapperPlugin.java", "BodyUseAPI": ["net.runelite.client.plugins.menuentryswapper.MenuEntrySwapperPlugin.swap(java.lang.String,java.lang.String,java.lang.String,boolean)"], "Fixed commit": "657920b2cfc674c1dd4dbcc51694546fdfbcc0a3", "Url": "https://api.github.com/repos/Pashweetie/runelite", "Date": "2018-07-03T08:48:32Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((etPassword.getText().toString().trim().length()) < (etPassword.getText().toString().length())) { org.mifos.mobilebanking.utils.Toaster.show(rootView, getString(R.string.error_validation_cannot_contain_leading_or_trailing_spaces, getString(R.string.password))); return false; }else if ((etUsername.getText().length()) < 6) { org.mifos.mobilebanking.utils.Toaster.show(rootView, getString(R.string.error_username_greater_than_six)); return false; }else if (!(Patterns.EMAIL_ADDRESS.matcher(etEmail.getText().toString()).matches())) { org.mifos.mobilebanking.utils.Toaster.show(rootView, getString(R.string.error_invalid_email)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2022/buggy-version/app.src.main.java.org.mifos.mobilebanking.ui.fragments.RegistrationFragment.java", "BodyUseAPI": [], "Fixed commit": "b8db2f1df1106ca1dd406b61738cec8331d7bc58", "Url": "https://api.github.com/repos/miPlodder/mifos-mobile", "Date": "2018-03-08T06:43:42Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) != (State.RESET)) { if (((mCurrentOffsetTop) > (com.meizu.code.frame.base.model.widget.refresh.SwipeRefreshLayout.START_POSITION)) && ((mAutoScoll) != null)) { mAutoScoll.scrollTo(com.meizu.code.frame.base.model.widget.refresh.SwipeRefreshLayout.START_POSITION, com.meizu.code.frame.base.model.widget.refresh.SwipeRefreshLayout.SCROLL_TO_TOP_DURATION); } changeState(State.COMPLETED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1919/buggy-version/codeframe.src.main.java.com.meizu.code.frame.base.model.widget.refresh.SwipeRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "7af724260c5ddf9b529e0e424d878d175249478e", "Url": "https://api.github.com/repos/Goldmxm/CodeFrame", "Date": "2018-08-13T17:51:27Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIsTouch) && ((mState) == (State.RESET))) { changeState(State.PULL); }else if (((!(mIsTouch)) && ((mCurrentOffsetTop) == (mEnableRefreshHeight))) && ((mState) != (State.REFRESHING))) { changeState(State.REFRESHING); }else if ((mCurrentOffsetTop) == (com.meizu.code.frame.base.model.widget.refresh.SwipeRefreshLayout.START_POSITION)) { changeState(State.RESET); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1919/buggy-version/codeframe.src.main.java.com.meizu.code.frame.base.model.widget.refresh.SwipeRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "7af724260c5ddf9b529e0e424d878d175249478e", "Url": "https://api.github.com/repos/Goldmxm/CodeFrame", "Date": "2018-08-13T17:51:27Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (codeName.equals(\"\")) l = java.util.Locale.getDefault(); else l = new java.util.Locale(sharedPref.getString(\"prefLanguage\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7265/buggy-version/app.src.main.java.org.sw24softwares.starkeverben.ResultActivity.java", "BodyUseAPI": [], "Fixed commit": "e0444f56ce337a28bed6b9f635d51164cf30e189", "Url": "https://api.github.com/repos/Sw24Softwares/StarkeVerben", "Date": "2018-05-14T11:15:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (codeName.equals(\"\")) l = java.util.Locale.getDefault(); else l = new java.util.Locale(sharedPref.getString(\"prefLanguage\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7265/buggy-version/app.src.main.java.org.sw24softwares.starkeverben.LessonFragment.java", "BodyUseAPI": [], "Fixed commit": "e0444f56ce337a28bed6b9f635d51164cf30e189", "Url": "https://api.github.com/repos/Sw24Softwares/StarkeVerben", "Date": "2018-05-14T11:15:19Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (codeName.equals(\"\")) l = java.util.Locale.getDefault(); else l = new java.util.Locale(sharedPref.getString(\"prefLanguage\", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7265/buggy-version/app.src.main.java.org.sw24softwares.starkeverben.SingleLessonFragment.java", "BodyUseAPI": [], "Fixed commit": "e0444f56ce337a28bed6b9f635d51164cf30e189", "Url": "https://api.github.com/repos/Sw24Softwares/StarkeVerben", "Date": "2018-05-14T11:15:19Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.alibaba.druid.sql.visitor.SQLSubqueryTableSource) (tableSource)).getSelect().getQueryBlock()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (queryBlock == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5437/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SchemaStatVisitor.java", "BodyUseAPI": [], "Fixed commit": "d4b2318663377208afc051b26e05c442a883b7d6", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-05-27T06:45:58Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((columnTableSource instanceof com.alibaba.druid.sql.visitor.SQLExprTableSource) && ((((com.alibaba.druid.sql.visitor.SQLExprTableSource) (columnTableSource)).getExpr()) instanceof com.alibaba.druid.sql.visitor.SQLName)) { com.alibaba.druid.sql.visitor.SQLName tableExpr = ((com.alibaba.druid.sql.visitor.SQLName) (((com.alibaba.druid.sql.visitor.SQLExprTableSource) (columnTableSource)).getExpr())); if (tableExpr instanceof com.alibaba.druid.sql.visitor.SQLIdentifierExpr) { tableName = ((com.alibaba.druid.sql.visitor.SQLIdentifierExpr) (tableExpr)).normalizedName(); }else if (tableExpr instanceof com.alibaba.druid.sql.visitor.SQLPropertyExpr) { tableName = ((com.alibaba.druid.sql.visitor.SQLPropertyExpr) (tableExpr)).normalizedName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5437/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SchemaStatVisitor.java", "BodyUseAPI": ["com.alibaba.druid.sql.visitor.SQLTableSource.getExpr()"], "Fixed commit": "d4b2318663377208afc051b26e05c442a883b7d6", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-05-27T06:45:58Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.visitor.SQLSelectItem.getExpr()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectItemExpr instanceof com.alibaba.druid.sql.visitor.SQLIdentifierExpr) { columnTableSource = ((com.alibaba.druid.sql.visitor.SQLIdentifierExpr) (selectItemExpr)).getResolvedTableSource(); }else if (selectItemExpr instanceof com.alibaba.druid.sql.visitor.SQLPropertyExpr) { columnTableSource = ((com.alibaba.druid.sql.visitor.SQLPropertyExpr) (selectItemExpr)).getResolvedTableSource(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5437/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SchemaStatVisitor.java", "BodyUseAPI": [], "Fixed commit": "d4b2318663377208afc051b26e05c442a883b7d6", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-05-27T06:45:58Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.visitor.SQLIdentifierExpr.getResolvedTableSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tableSource instanceof com.alibaba.druid.sql.visitor.SQLWithSubqueryClause.Entry) { return false; }else if (tableSource instanceof com.alibaba.druid.sql.visitor.SQLSubqueryTableSource) { com.alibaba.druid.sql.visitor.SQLSelectQueryBlock queryBlock = ((com.alibaba.druid.sql.visitor.SQLSubqueryTableSource) (tableSource)).getSelect().getQueryBlock(); if (queryBlock == null) { return false; } com.alibaba.druid.sql.visitor.SQLSelectItem selectItem = queryBlock.findSelectItem(x.nameHashCode64()); if (selectItem == null) { return false; } com.alibaba.druid.sql.visitor.SQLExpr selectItemExpr = selectItem.getExpr(); com.alibaba.druid.sql.visitor.SQLTableSource columnTableSource = null; if (selectItemExpr instanceof com.alibaba.druid.sql.visitor.SQLIdentifierExpr) { columnTableSource = ((com.alibaba.druid.sql.visitor.SQLIdentifierExpr) (selectItemExpr)).getResolvedTableSource(); }else if (selectItemExpr instanceof com.alibaba.druid.sql.visitor.SQLPropertyExpr) { columnTableSource = ((com.alibaba.druid.sql.visitor.SQLPropertyExpr) (selectItemExpr)).getResolvedTableSource(); } if ((columnTableSource instanceof com.alibaba.druid.sql.visitor.SQLExprTableSource) && ((((com.alibaba.druid.sql.visitor.SQLExprTableSource) (columnTableSource)).getExpr()) instanceof com.alibaba.druid.sql.visitor.SQLName)) { com.alibaba.druid.sql.visitor.SQLName tableExpr = ((com.alibaba.druid.sql.visitor.SQLName) (((com.alibaba.druid.sql.visitor.SQLExprTableSource) (columnTableSource)).getExpr())); if (tableExpr instanceof com.alibaba.druid.sql.visitor.SQLIdentifierExpr) { tableName = ((com.alibaba.druid.sql.visitor.SQLIdentifierExpr) (tableExpr)).normalizedName(); }else if (tableExpr instanceof com.alibaba.druid.sql.visitor.SQLPropertyExpr) { tableName = ((com.alibaba.druid.sql.visitor.SQLPropertyExpr) (tableExpr)).normalizedName(); } } }else { boolean skip = false; for (com.alibaba.druid.sql.visitor.SQLObject parent = x.getParent(); parent != null; parent = parent.getParent()) { if (parent instanceof com.alibaba.druid.sql.visitor.SQLSelectQueryBlock) { com.alibaba.druid.sql.visitor.SQLTableSource from = ((com.alibaba.druid.sql.visitor.SQLSelectQueryBlock) (parent)).getFrom(); if (from instanceof com.alibaba.druid.sql.dialect.odps.ast.OdpsValuesTableSource) { skip = true; break; } }else if (parent instanceof com.alibaba.druid.sql.visitor.SQLSelectQuery) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5437/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SchemaStatVisitor.java", "BodyUseAPI": [], "Fixed commit": "d4b2318663377208afc051b26e05c442a883b7d6", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-05-27T06:45:58Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listUserRepository.getByUserIdAndListId(userId, bookListRepository.findByName(listName).getId())) == null) { return (listUserRepository.save(new com.purebook.backend.entity.ListUser(userId, bookListRepository.findByName(listName).getId()))) != null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2572/buggy-version/src.main.java.com.purebook.backend.service.BookListService.java", "BodyUseAPI": ["com.purebook.backend.dao.ListUserRepository.save(com.purebook.backend.entity.ListUser)", "bookListRepository.findByName(listName).getId()", "com.purebook.backend.dao.BookListRepository.findByName(java.lang.String)"], "Fixed commit": "152f0b4fb4e2c1a21745291d255f89060f99eec1", "Url": "https://api.github.com/repos/cHaO5/purebook", "Date": "2018-04-02T14:53:43Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.coeligena.service.ReportTypeService.queryReportTypeById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (reportTypeDO == null) { reportTypeDO = new com.coeligena.model.ReportTypeDO(); reportTypeDO.setReportTypeContent(\"\u4e3e\u62a5\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7028/buggy-version/src.main.java.com.coeligena.controller.ReportController.java", "BodyUseAPI": [], "Fixed commit": "b83711f00e20a7cbf64817af5278599c2e1d280d", "Url": "https://api.github.com/repos/chromon/coeligena", "Date": "2018-10-01T14:36:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSong) != null) { currentSong.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3219/buggy-version/src.main.java.aud.io.audioplayer.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "9950573c6a2d5cb4a2f12b27a4b54987c14e5324", "Url": "https://api.github.com/repos/Comnus/Aud.io", "Date": "2018-01-16T12:15:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSong) != null) { currentSong.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3219/buggy-version/src.main.java.aud.io.audioplayer.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "9950573c6a2d5cb4a2f12b27a4b54987c14e5324", "Url": "https://api.github.com/repos/Comnus/Aud.io", "Date": "2018-01-16T12:15:47Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSong) != null) { currentSong.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3219/buggy-version/src.main.java.aud.io.audioplayer.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "9950573c6a2d5cb4a2f12b27a4b54987c14e5324", "Url": "https://api.github.com/repos/Comnus/Aud.io", "Date": "2018-01-16T12:15:47Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (boardRedrawRequired) { e.getCanvas().requestBoardRepaint(); e.getCanvas().repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/573/buggy-version/src.Engine.Handler.java", "BodyUseAPI": [], "Fixed commit": "89bb240e39ebae2e321eebdbfd3b4ad2d3b4643c", "Url": "https://api.github.com/repos/ifidefix/Chess", "Date": "2018-02-17T18:57:30Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (p != null) { totalValue += p.getPieceValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/573/buggy-version/src.Players.AI.AlphaBetaPlayer.java", "BodyUseAPI": ["pieces.Piece.getPieceValue()"], "Fixed commit": "89bb240e39ebae2e321eebdbfd3b4ad2d3b4643c", "Url": "https://api.github.com/repos/ifidefix/Chess", "Date": "2018-02-17T18:57:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tableToCompact != null) { logCompactionChoice(tableToCompact, maxSweptAfterCompact); }else { com.palantir.atlasdb.compact.CompactPriorityCalculator.log.info(\"Not compacting, because it does not appear that any table has been swept.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1818/buggy-version/atlasdb-impl-shared.src.main.java.com.palantir.atlasdb.compact.CompactPriorityCalculator.java", "BodyUseAPI": ["com.palantir.atlasdb.compact.CompactPriorityCalculator.logCompactionChoice(java.lang.String,long)"], "Fixed commit": "acd8f85edba939ac9a7c44ee1f6b42e417dcd5c9", "Url": "https://api.github.com/repos/palantir/atlasdb", "Date": "2018-03-08T15:04:16Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (performer != null) { performer.perform(getApplicationAndVersionNameConfig(), run, workspace, launcher, listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7600/buggy-version/src.main.java.com.fortify.integration.jenkins.ssc.FortifySSCJenkinsRecorder.java", "BodyUseAPI": ["com.fortify.integration.jenkins.ssc.describable.IFortifySSCPerformWithApplicationAndVersionNameJobConfig.perform(com.fortify.integration.jenkins.ssc.describable.FortifySSCApplicationAndVersionNameJobConfig,hudson.model.Run<?, ?>,hudson.FilePath,hudson.Launcher,hudson.model.TaskListener)"], "Fixed commit": "c413e9beece1438cd6d9644521345669338e4919", "Url": "https://api.github.com/repos/rsenden/fortify-integration-jenkins-ssc", "Date": "2018-01-14T09:56:42Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quantity) == 0) { displayPrice(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2799/buggy-version/app.src.main.java.com.example.android.justjava.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d537b41f1f1009dff0d5b4243df7ceacea514e27", "Url": "https://api.github.com/repos/anishainas/udacity_justjava", "Date": "2018-01-31T15:31:45Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quantity) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2799/buggy-version/app.src.main.java.com.example.android.justjava.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d537b41f1f1009dff0d5b4243df7ceacea514e27", "Url": "https://api.github.com/repos/anishainas/udacity_justjava", "Date": "2018-01-31T15:31:45Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clientDataRepository.findByFileHashAndClient(request.getFileHash(), client).isPresent()) return org.springframework.http.ResponseEntity.badRequest().header(\"message\", \"file with given hash already exists on this node\").body(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9784/buggy-version/src.main.java.com.soriole.dfsnode.service.ClientDataService.java", "BodyUseAPI": [], "Fixed commit": "c65df50ef836ec652628bcd4dbcb23dce8136a50", "Url": "https://api.github.com/repos/bipinkh/p2p", "Date": "2018-08-03T07:50:20Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(backupProvider.isPresent())) { com.netflix.exhibitor.core.backup.BackupManager.log.info(\"No backup provider configured. Skipping restore.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5498/buggy-version/exhibitor-core.src.main.java.com.netflix.exhibitor.core.backup.BackupManager.java", "BodyUseAPI": [], "Fixed commit": "2d0465835a8615a20ac80e3c134cd140578ad398", "Url": "https://api.github.com/repos/soabase/exhibitor", "Date": "2018-06-16T23:08:30Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((costResil) > 1) { costResil = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5091/buggy-version/src.mayagrations.Route.java", "BodyUseAPI": [], "Fixed commit": "89e324e84d605c1a4c94eba3a61332f211ce6fbf", "Url": "https://api.github.com/repos/ak202/Mayagrations", "Date": "2018-02-28T03:11:34Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (io.djigger.monitoring.java.mbeans.MBeanCollector.logger.isLoggable(java.util.logging.Level.FINE)) { io.djigger.monitoring.java.mbeans.MBeanCollector.logger.log(java.util.logging.Level.FINE, (((\"Found MBean Operation \" + operationName) + \" with signature \") + (java.util.Arrays.toString(mBeanParameterTypes)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7601/buggy-version/java-monitoring-commons.src.main.java.io.djigger.monitoring.java.mbeans.MBeanCollector.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String)"], "Fixed commit": "1105f5113c7b8842c402022b1275e65ee7ecb9ff", "Url": "https://api.github.com/repos/exense/djigger", "Date": "2018-01-18T19:43:28Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (medQueue.isEmpty()) { showStreakPopup(); }else { showQuestionPopup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2144/buggy-version/app.src.main.java.se.medituner.app.MojoScreen.java", "BodyUseAPI": [], "Fixed commit": "c3b8140e21b6b2b419754a73d6c18d3ff8c1d72f", "Url": "https://api.github.com/repos/le-SQUAD/Medituner-Kids", "Date": "2018-04-18T08:54:14Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["delight.nashornsandbox.internal.ThreadMonitor.getCheckInterval(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (waitTime == 0) { waitTime = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/411/buggy-version/src.main.java.delight.nashornsandbox.internal.ThreadMonitor.java", "BodyUseAPI": [], "Fixed commit": "86447ea6a572c90470bff56cb02cd2231cfb8c9f", "Url": "https://api.github.com/repos/javadelight/delight-nashorn-sandbox", "Date": "2018-01-26T05:46:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message.contains(\"[self]\")) || (message.contains(\"[mention\"))) message = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8378/buggy-version/Komeiji-chan.src.commands.GIFs.java", "BodyUseAPI": [], "Fixed commit": "6ce05d88fbcd9b7188e3b3d5e3771e60c434042b", "Url": "https://api.github.com/repos/VJsong02/Komeiji", "Date": "2018-01-08T01:31:25Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((viewType) == (android.support.v7.widget.RecyclerView.INVALID_TYPE)) { throw new java.lang.RuntimeException((\"A ViewItem cannot be associated to a view type delegate that has not been registered: \" + adapterViewTypeDelegate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3530/buggy-version/feature-adapter.src.main.java.com.groupon.featureadapter.ViewItem.java", "BodyUseAPI": [], "Fixed commit": "9924a8f3b5eab9713b126769348b94dc28343c4d", "Url": "https://api.github.com/repos/groupon/FeatureAdapter", "Date": "2018-08-07T21:06:13Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (matchingIds.get(id)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2273/buggy-version/processing.src.main.java.io.druid.segment.StringDimensionIndexer.java", "BodyUseAPI": [], "Fixed commit": "4519a3bf1c29f5caee9b346514b3fc7bad309bca", "Url": "https://api.github.com/repos/gianm/druid", "Date": "2018-06-06T23:04:21Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mShopCartAdapter.getData().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (goodsBean.isselected) { mTotalPrice -= count * (goodsBean.price); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3735/buggy-version/app.src.main.java.com.codersong.demo.ui.shopcart.activity.ShopCartActivity.java", "BodyUseAPI": [], "Fixed commit": "781f3b3538fe6859a88f2ade9d02af83a62df284", "Url": "https://api.github.com/repos/songguoping/AndroidDemoSummary", "Date": "2018-01-12T09:19:45Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDrawingView) != null) mDrawingView.postInvalidate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1441/buggy-version/LeonidsLib.src.main.java.com.plattysoft.leonids.ParticleSystem.java", "BodyUseAPI": [], "Fixed commit": "39db3e8131081dbd9e2382d83dcbbb1799930ff8", "Url": "https://api.github.com/repos/petitpre/Leonids", "Date": "2018-10-30T09:39:11Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.floragunn.dlic.auth.ldap.backend.LDAPAuthorizationBackend.log.isDebugEnabled()) { com.floragunn.dlic.auth.ldap.backend.LDAPAuthorizationBackend.log.debug(\"Roles for {} -> {}\", user.getName(), user.getRoles()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2346/buggy-version/src.main.java.com.floragunn.dlic.auth.ldap.backend.LDAPAuthorizationBackend.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,user.getName(),user.getRoles())"], "Fixed commit": "817954633b3b554fb691976c083aaad729bc48bf", "Url": "https://api.github.com/repos/floragunncom/search-guard-enterprise-modules", "Date": "2018-09-17T19:08:20Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.floragunn.dlic.auth.ldap.backend.LDAPAuthorizationBackend.log.isDebugEnabled()) { com.floragunn.dlic.auth.ldap.backend.LDAPAuthorizationBackend.log.debug(\"Try to get roles for {}\", authenticatedUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2346/buggy-version/src.main.java.com.floragunn.dlic.auth.ldap.backend.LDAPAuthorizationBackend.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "817954633b3b554fb691976c083aaad729bc48bf", "Url": "https://api.github.com/repos/floragunncom/search-guard-enterprise-modules", "Date": "2018-09-17T19:08:20Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.elisabeth.depressionsapp.services.WifiConnectionManager.getCurrentSsid(getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (wifi != null) { if (wifi.equals(\"eduroam\")) { IS_CONNECTED_TO_HOME_WIFI = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4294/buggy-version/DepressionsApp.app.src.main.java.com.example.elisabeth.depressionsapp.MainActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "9fb76e2132ee584c300baa532b5d5bb90564cf53", "Url": "https://api.github.com/repos/ottmann/maph", "Date": "2018-01-15T10:06:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (section.contains(field.getName())) { java.lang.Object val = jdz.bukkitUtils.config.AutoConfigFieldParsers.getParser(field.getType()).parse(section, field.getName()); field.set(this, val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3680/buggy-version/src.jdz.bukkitUtils.config.AutoConfig.java", "BodyUseAPI": ["java.lang.reflect.Field.getName()", "java.lang.reflect.Field.getType()", "java.lang.reflect.Field.set(jdz.bukkitUtils.config.AutoConfig,java.lang.Object)", "jdz.bukkitUtils.config.AutoConfigFieldParsers.getParser(java.lang.Class<?>)", "jdz.bukkitUtils.config.AutoConfigFieldParsers.getParser(field.getType()).parse(org.bukkit.configuration.ConfigurationSection,java.lang.String)"], "Fixed commit": "5d57e734734c09c05c1b28144d054fd5588e5233", "Url": "https://api.github.com/repos/Jonodonozym/JonosBukkitUtils", "Date": "2018-08-06T03:09:45Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ecf.provider.jgroups.container.JGroupsManagerContainer.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (c != null) c.sendAsynch(mess.getToContainerID(), serialize(mess));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/198/buggy-version/bundles.org.eclipse.ecf.provider.jgroups.src.org.eclipse.ecf.provider.jgroups.container.JGroupsManagerContainer.java", "BodyUseAPI": ["org.eclipse.ecf.provider.comm.ISynchAsynchConnection.sendAsynch(mess.getToContainerID(),serialize(mess))"], "Fixed commit": "d9b3b513b409ca2f6e8520b816f60528768619df", "Url": "https://api.github.com/repos/ECF/JGroups", "Date": "2018-03-01T23:33:18Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isServerRootOptionSet) { serverSharedDirConfig = new com.ibm.ws.kernel.boot.archive.DirEntryConfig((((packageArchiveEntryPrefix) + (com.ibm.ws.kernel.boot.internal.BootstrapConstants.LOC_AREA_NAME_SHARED)) + \"/\"), sharedDir, true, com.ibm.ws.kernel.boot.archive.DirPattern.PatternStrategy.IncludePreference); }else { serverSharedDirConfig = new com.ibm.ws.kernel.boot.archive.DirEntryConfig((((((packageArchiveEntryPrefix) + (com.ibm.ws.kernel.boot.internal.BootstrapConstants.LOC_AREA_NAME_USR)) + \"/\") + (com.ibm.ws.kernel.boot.internal.BootstrapConstants.LOC_AREA_NAME_SHARED)) + \"/\"), sharedDir, true, com.ibm.ws.kernel.boot.archive.DirPattern.PatternStrategy.IncludePreference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7125/buggy-version/dev.com.ibm.ws.kernel.boot.core.src.com.ibm.ws.kernel.boot.internal.commands.PackageProcessor.java", "BodyUseAPI": [], "Fixed commit": "1b7649a9c79cc5112a51536a00e9de9d8f7380bb", "Url": "https://api.github.com/repos/ayoho/open-liberty", "Date": "2018-10-19T15:08:59Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursor.moveToFirst()) { do { titles[cursor.getPosition()] = cursor.getString(RingtoneManager.TITLE_COLUMN_INDEX); } while (cursor.moveToNext() ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1389/buggy-version/preference-v7-ringtone.src.main.java.com.takisoft.fix.support.v7.preference.RingtonePreferenceDialogFragmentCompat.java", "BodyUseAPI": ["android.database.Cursor.moveToNext()", "android.database.Cursor.getString(RingtoneManager.TITLE_COLUMN_INDEX)", "android.database.Cursor.getPosition()"], "Fixed commit": "88520f62d1dcf38862842d3972997654a6b292e8", "Url": "https://api.github.com/repos/pavel-zolotov/Android-Support-Preference-V7-Fix", "Date": "2018-07-02T13:16:25Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (a != null) { return a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5044/buggy-version/src.main.java.org.concord.energy3d.simulation.PvCustomPrice.java", "BodyUseAPI": [], "Fixed commit": "9c290e026a954caee4871bc717a739dcb8f80b9b", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2018-01-27T18:52:21Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sender instanceof org.bukkit.entity.Player)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1345/buggy-version/src.com.imyvm.Command.java", "BodyUseAPI": [], "Fixed commit": "001253a848b81563e74868332205db3491774248", "Url": "https://api.github.com/repos/ImyvmCircle/ItemMail", "Date": "2018-03-11T16:55:11Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loggingOn) logger.info(\"Ore Dictionary Entry: Ore Name: %s, Ore ID: %s, Unlocalised Name: %s, Block ID: %s, Block Meta: %s, Registry Name: %s\", oreName, oreID, item.getUnlocalizedName(), net.minecraft.item.Item.getIdFromItem(item), meta, item.getRegistryName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2766/buggy-version/src.main.java.com.mcmoddev.mmdlogger.MMDLogger.java", "BodyUseAPI": [], "Fixed commit": "e082d3af4d4e4299112f6ca847890de7bf7533ed", "Url": "https://api.github.com/repos/MinecraftModDevelopmentMods/MMDLogger", "Date": "2018-01-02T01:00:30Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIndicator) != null) { hideIndicatorIcon(0); hideIndicatorIcon(((mSize) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1776/buggy-version/library.src.main.java.cc.colorcat.flipview.FlipView.java", "BodyUseAPI": [], "Fixed commit": "0d3eb7903fa1efa42ccfb92c5c517fc8a93d7b4d", "Url": "https://api.github.com/repos/ccolorcat/FlipView", "Date": "2018-08-31T09:39:31Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choiceList.size()) == 1) { ((android.widget.Button) (findViewById(R.id.create_google_calendar_event))).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9245/buggy-version/app.src.main.java.com.example.srisri.doodle.Polling.java", "BodyUseAPI": [], "Fixed commit": "a7e3e013ee5b94b4a9b43f4fad9ee122dfc9caba", "Url": "https://api.github.com/repos/sgoka001/Doodle", "Date": "2018-03-08T03:57:16Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yumu.hexie.model.distribution.region.MerchantRepository.findMechantByNameLike(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (merchant == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2215/buggy-version/hexiebk.src.main.java.com.yumu.hexie.service.impl.ScheduleServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "34c987b4da0c73882b0e5bfb48ce53000653fd08", "Url": "https://api.github.com/repos/linknabor/weifa", "Date": "2017-02-23T10:05:56Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["EquipmentInventorySlot.WEAPON.getSlotIdx()", "net.runelite.api.ItemContainer.getItems()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((items == null) || (weaponIdx >= (items.length))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5015/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.specialcounter.SpecialCounterPlugin.java", "BodyUseAPI": [], "Fixed commit": "8b179eb7999a866591251699dbc06c193c371193", "Url": "https://api.github.com/repos/LWestling/runelite", "Date": "2018-05-10T13:06:16Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aion.zero.impl.db.AionBlockStore.getBlockInfoForLevel(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentLevelBlocks.size()) == 0) { blocks.delete(bestLine.getHash()); }else { for (org.aion.zero.impl.db.AionBlockStore.BlockInfo bk_info : currentLevelBlocks) { blocks.delete(bk_info.getHash()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2255/buggy-version/modAionImpl.src.org.aion.zero.impl.db.AionBlockStore.java", "BodyUseAPI": [], "Fixed commit": "8b7d0d6d63b5082d6c7f2de38bba1573e4b0db1d", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-03-06T21:04:05Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog) != null) { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1740/buggy-version/advancedsmsmanager.src.main.java.ir.mtajik.android.advancedsmsmanager.view.SendSmsViewImpl.java", "BodyUseAPI": [], "Fixed commit": "0f0d6ec0a85fc05a50d3afb7e7bc3ab3c381aea8", "Url": "https://api.github.com/repos/mahdit83/advancedSmsManager", "Date": "2018-01-26T13:13:03Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressBar) != null) { progressBar.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1740/buggy-version/advancedsmsmanager.src.main.java.ir.mtajik.android.advancedsmsmanager.view.SendSmsViewImpl.java", "BodyUseAPI": [], "Fixed commit": "0f0d6ec0a85fc05a50d3afb7e7bc3ab3c381aea8", "Url": "https://api.github.com/repos/mahdit83/advancedSmsManager", "Date": "2018-01-26T13:13:03Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((helperWorkspacePointers) == null) { helperWorkspacePointers = new java.util.HashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5362/buggy-version/deeplearning4j.deeplearning4j-nn.src.main.java.org.deeplearning4j.nn.workspace.LayerWorkspaceMgr.java", "BodyUseAPI": [], "Fixed commit": "0c21d7c973415ae5f12748957f3d91fe9c66f6a9", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2018-09-05T01:48:40Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (analyzedClass.isAbstract()) { cw.visit(version, access, internalName, signature, superInternalName, interfaceInternalNamesNullable); }else { java.lang.String[] interfacesIncludingMixins = org.glowroot.agent.weaving.WeavingClassVisitor.getInterfacesIncludingShimsAndMixins(interfaceInternalNamesNullable, shimTypes, mixinTypes); cw.visit(version, access, internalName, signature, superInternalName, interfacesIncludingMixins); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3503/buggy-version/agent.core.src.main.java.org.glowroot.agent.weaving.WeavingClassVisitor.java", "BodyUseAPI": [], "Fixed commit": "02f99fc02dec3a52ab935068f52f810cf60fe870", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2018-01-14T03:28:49Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((\"true\".equalsIgnoreCase(primStr)) || (\"false\".equalsIgnoreCase(primStr))) res = java.lang.Boolean.parseBoolean(primStr); else res = primStr;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8885/buggy-version/src.main.java.randoop.util.heapcanonicalization.CanonicalHeap.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Fixed commit": "771b0f5eb9fc534e371fbb092b868170000d9f81", "Url": "https://api.github.com/repos/nmaguirre/randoop", "Date": "2018-04-19T23:42:38Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yiqiniu.easytrans.filter.EasyTransFilterChain.invokeFilterChain(java.util.Map<java.lang.String, java.lang.Object>,com.yiqiniu.easytrans.protocol.EasyTransRequest<?, ?>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((result.getException()) != null) && ((result.getException().getClass()) != (com.yiqiniu.easytrans.queue.consumer.EasyTransMsgInitializer.NeedToReconsumeLaterException.class))) { logger.error(\"Consume Error!\", result.getException()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5306/buggy-version/easytrans-core.src.main.java.com.yiqiniu.easytrans.queue.consumer.EasyTransMsgInitializer.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,result.getException())", "com.yiqiniu.easytrans.filter.EasyTransResult.getException()"], "Fixed commit": "a973dc5739eeb7380c6efa8757cbab2e19fb4e90", "Url": "https://api.github.com/repos/QNJR-GROUP/EasyTransaction", "Date": "2018-07-04T14:09:09Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(game.getBoard().inSpace())) && ((type) == (megamek.common.Sensor.TYPE_SPACECRAFT_RADAR))) { range = megamek.common.Sensor.LC_RADAR_GROUND_RANGE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3660/buggy-version/megamek.src.megamek.common.Sensor.java", "BodyUseAPI": [], "Fixed commit": "80e5dc255819a45cdabcf1ed12803c51f6337bac", "Url": "https://api.github.com/repos/sixlettervariables/megamek", "Date": "2018-07-27T19:47:56Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((snake.isOutOfBounds()) == true) { gameOver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7043/buggy-version/src._06_Snake._00_SnakeGame.java", "BodyUseAPI": [], "Fixed commit": "079025382d95fcac4866f567aebb944ef172eaad", "Url": "https://api.github.com/repos/league-level4-student/level4-module1-TheWrencat", "Date": "2018-10-19T01:52:27Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paths.length) == 0) { java.util.List<java.lang.Integer> ret = new java.util.ArrayList<>(); for (org.zkoss.zss.model.impl.Bucket<java.lang.String> group : this.navBucketTree) { ret.add(group.startPos); ret.add(group.endPos); } return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1056/buggy-version/zssmodel.src.org.zkoss.zss.model.impl.NavigationStructure.java", "BodyUseAPI": [], "Fixed commit": "5d2967bd939eb5163bf97bf3b49da1134d589391", "Url": "https://api.github.com/repos/dataspread/dataspread-web", "Date": "2018-06-04T18:00:13Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wellijohn.org.scrollviewwithstickheader.ScrollViewWithStickHeader.getRV(android.view.MotionEvent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (childRecyclerView != null) { int action = ev.getAction(); switch (action) { case android.view.MotionEvent.ACTION_DOWN : downY = ev.getY(); break; case android.view.MotionEvent.ACTION_MOVE : if (isBottom()) { return (!(((ev.getY()) - (downY)) < 0)) && (childRecyclerView.isScrolledToTop()); } break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3904/buggy-version/stickscrollview.src.main.java.wellijohn.org.scrollviewwithstickheader.ScrollViewWithStickHeader.java", "BodyUseAPI": ["wellijohn.org.scrollviewwithstickheader.ChildRecyclerView.isScrolledToTop()"], "Fixed commit": "26ba8d3cf616bc2f0299390730ccc49af01cf8c6", "Url": "https://api.github.com/repos/WelliJohn/StickScrollView", "Date": "2018-05-18T09:02:07Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jsonParser.nextToken()) == (com.fasterxml.jackson.core.JsonToken.END_ARRAY)) { return com.google.common.collect.ImmutableList.of(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6799/buggy-version/src.main.java.org.atlasapi.deer.client.model.types.Content.java", "BodyUseAPI": [], "Fixed commit": "126e8409a09e1b77dba4465031745dfcbf09a201", "Url": "https://api.github.com/repos/atlasapi/atlas-deer-client", "Date": "2018-01-10T11:32:22Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((driverStationFrontend) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3409/buggy-version/sumobots.driverstation.src.main.java.org.inspirerobotics.sumobots.driverstation.gui.GuiController.java", "BodyUseAPI": [], "Fixed commit": "6abb5b1d34da1f6b201b30ce4cdcfb00dcdb4ba9", "Url": "https://api.github.com/repos/DevOrc/sumobots", "Date": "2018-05-20T19:07:50Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((driverStationFrontend) != null) { if (!(driverStationFrontend.isNonFieldMode())) disableTimePeriodButtons(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3409/buggy-version/sumobots.driverstation.src.main.java.org.inspirerobotics.sumobots.driverstation.gui.ControlBar.java", "BodyUseAPI": [], "Fixed commit": "6abb5b1d34da1f6b201b30ce4cdcfb00dcdb4ba9", "Url": "https://api.github.com/repos/DevOrc/sumobots", "Date": "2018-05-20T19:07:50Z"},
{"Line": "=>6570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((searchValue.endsWith(\"\\\"\")) && (searchValue.startsWith(\"\\\"\")))) { if (!(searchValue.endsWith(\"*\"))) { searchValue = searchValue + \"*\"; } if (!(searchValue.startsWith(\"*\"))) { searchValue = \"*\" + searchValue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6585/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.utils.APIUtil.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "1ab4036369ebb0ef933f08acd0e0e1266f74bbb1", "Url": "https://api.github.com/repos/ChamNDeSilva/carbon-apimgt", "Date": "2018-02-28T16:46:59Z"},
{"Line": "=>6556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((searchValue.endsWith(\"\\\"\")) && (searchValue.startsWith(\"\\\"\")))) { if (!(searchValue.endsWith(\"*\"))) { searchValue = searchValue + \"*\"; } if (!(searchValue.startsWith(\"*\"))) { searchValue = \"*\" + searchValue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6585/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.utils.APIUtil.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "1ab4036369ebb0ef933f08acd0e0e1266f74bbb1", "Url": "https://api.github.com/repos/ChamNDeSilva/carbon-apimgt", "Date": "2018-02-28T16:46:59Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aksw.simba.squirrel.frontier.Frontier.getNextUris()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((uris != null) && ((uris.size()) > 0)) { workerGuard.putUrisForWorker(uriSetRequest.getIdOfWorker(), uris); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6775/buggy-version/src.main.java.org.aksw.simba.squirrel.components.FrontierComponent.java", "BodyUseAPI": ["org.aksw.simba.squirrel.frontier.impl.WorkerGuard.putUrisForWorker(uriSetRequest.getIdOfWorker(),java.util.List<org.aksw.simba.squirrel.data.uri.CrawleableUri>)"], "Fixed commit": "77e2016e127c0f07c4cf3594052b2b9496143b97", "Url": "https://api.github.com/repos/varunmaitreya/Squirrel", "Date": "2018-01-07T15:06:57Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(episodeShow.getString(com.techpearl.tvguide.JSONUtils.KEY_EPISODE_SHOW_NETWORK).equals(\"null\"))) { org.json.JSONObject episodeShowNetwork = episodeShow.getJSONObject(com.techpearl.tvguide.JSONUtils.KEY_EPISODE_SHOW_NETWORK); java.lang.String episodeShowNetworkName = episodeShowNetwork.getString(com.techpearl.tvguide.JSONUtils.KEY_EPISODE_SHOW_NETWORK_NAME); episodesContentValuesArray[i].put(ScheduleContract.ScheduleEntry.COLUMN_NETWORK_NAME, episodeShowNetworkName); }else if (!(episodeShow.getString(com.techpearl.tvguide.JSONUtils.KEY_EPISODE_SHOW_WEB_CHANNEL).equals(\"null\"))) { org.json.JSONObject episodeShowWebChannel = episodeShow.getJSONObject(com.techpearl.tvguide.JSONUtils.KEY_EPISODE_SHOW_WEB_CHANNEL); java.lang.String episodeShowWebChannelName = episodeShowWebChannel.getString(com.techpearl.tvguide.JSONUtils.KEY_EPISODE_SHOW_WEB_CHANNEL_NAME); episodesContentValuesArray[i].put(ScheduleContract.ScheduleEntry.COLUMN_NETWORK_NAME, episodeShowWebChannelName); }else { episodesContentValuesArray[i].put(ScheduleContract.ScheduleEntry.COLUMN_NETWORK_NAME, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4576/buggy-version/app.src.main.java.com.techpearl.tvguide.JSONUtils.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)", "episodeShow.getString(com.techpearl.tvguide.JSONUtils.KEY_EPISODE_SHOW_WEB_CHANNEL).equals(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "8f6977b5453e119f615c232d062fc31efd57872f", "Url": "https://api.github.com/repos/nourtaweel/tv_guide", "Date": "2018-02-09T14:28:44Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((groupsRounds.get(0).getStage()) == (gr.manolis.stelios.footie.core.peristence.dtos.Stage.FINISHED)) { groupsRounds.add(serviceUtils.getGroupsRound(season, 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4509/buggy-version/src.main.java.gr.manolis.stelios.footie.api.controllers.views.SeasonsController.java", "BodyUseAPI": ["java.util.List<gr.manolis.stelios.footie.core.peristence.dtos.rounds.GroupsRound>.add(serviceUtils.getGroupsRound(season, 2))"], "Fixed commit": "ab4f5728db979dc74ab406721facc4549fd1727d", "Url": "https://api.github.com/repos/Stylian/footie", "Date": "2018-09-05T10:12:34Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gr.manolis.stelios.footie.core.services.ServiceUtils.getGroupsRound(gr.manolis.stelios.footie.core.peristence.dtos.groups.Season,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((round1.getStage()) == (gr.manolis.stelios.footie.core.peristence.dtos.Stage.FINISHED)) { groupsPreviews.add(groupsPreview(season, 2, model)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4509/buggy-version/src.main.java.gr.manolis.stelios.footie.api.controllers.views.SeasonsController.java", "BodyUseAPI": [], "Fixed commit": "ab4f5728db979dc74ab406721facc4549fd1727d", "Url": "https://api.github.com/repos/Stylian/footie", "Date": "2018-09-05T10:12:34Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.commerce.product.model.CPDefinition.getCPInstances()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cpInstances.isEmpty()) { return com.liferay.petra.string.StringPool.BLANK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5069/buggy-version/commerce-product-definitions-web.src.main.java.com.liferay.commerce.product.definitions.web.display.context.BaseCPDefinitionsDisplayContext.java", "BodyUseAPI": [], "Fixed commit": "d0c265c6080bfdf172031d6241ac43f6cd1d35b0", "Url": "https://api.github.com/repos/Commando18/com-liferay-commerce", "Date": "2018-07-30T09:32:40Z"},
{"Line": "=>1358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.elasticsearch.common.Strings.hasText(suggestValue)) && (java.lang.Character.isLetter(suggestValue.charAt(0)))) { suggestInputs.add(suggestValue.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6942/buggy-version/src.main.java.org.elasticsearch.river.ubb.support.Harvester.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "73252407f39a3fb018f1db8d04bdf11c6e0fa9d4", "Url": "https://api.github.com/repos/ubbdst/elasticsearch-rdf-river", "Date": "2018-03-22T16:07:33Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.neo4j.ogm.metadata.MetaData.classInfo(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (classInfo == null) { throw new java.lang.IllegalArgumentException((((\"Class \" + (entity.getClass())) + \" is not a valid entity class. \") + \"Please check the entity mapping.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8164/buggy-version/core.src.main.java.org.neo4j.ogm.context.MappingContext.java", "BodyUseAPI": [], "Fixed commit": "58ff468cfd54c8078d3c259630f7034fcd655a1a", "Url": "https://api.github.com/repos/neo4j/neo4j-ogm", "Date": "2018-01-17T09:47:19Z"},
{"Line": "=>1501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(cells[i][1].equals(\"-1\"))) && (!(cells[i][2].equals(\"-1\")))) { sheetName = cells[i][0]; rowIndex = (java.lang.Integer.parseInt(cells[i][1])) - 1; colIndex = (java.lang.Integer.parseInt(cells[i][2])) - 1; }else { org.apache.poi.ss.usermodel.Name aNamedCell = xwb.getName(cells[i][0]); java.lang.String aNamedAddress = aNamedCell.getRefersToFormula(); org.apache.poi.ss.util.AreaReference[] arefs = org.apache.poi.ss.util.AreaReference.generateContiguous(aNamedAddress); org.apache.poi.ss.util.CellReference crefs = arefs[0].getFirstCell(); sheetName = crefs.getSheetName(); rowIndex = crefs.getRow(); colIndex = crefs.getCol(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1693/buggy-version/trump-biz.src.main.java.com.lombardrisk.commons.ExcelUtil.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "org.apache.poi.ss.usermodel.Workbook.getName(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "f424a29b55fa83b506eee8ae09c3ef10c9d9b080", "Url": "https://api.github.com/repos/flying0dancing/trump", "Date": "2018-09-14T04:05:11Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (prevImage != null) prevImage.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/745/buggy-version/src.main.java.MotionRecorder.java", "BodyUseAPI": ["IplImage.release()"], "Fixed commit": "d3c8143d407446a82033429e188a26500e5fac49", "Url": "https://api.github.com/repos/yinghaoawang/Webcam-Security", "Date": "2018-01-16T05:35:19Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.voltdb.iv2.LeaderAppointer.tmLog.isDebugEnabled()) { org.voltdb.iv2.LeaderAppointer.tmLog.debug(\"Creating MP repair blocker\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9488/buggy-version/src.frontend.org.voltdb.iv2.LeaderAppointer.java", "BodyUseAPI": ["org.voltcore.logging.VoltLogger.debug(java.lang.String)"], "Fixed commit": "7e1a6ce8cd185174b2613c3fe176c4c9fcf7ab4f", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2018-08-30T12:12:53Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.voltdb.rejoin.Iv2RejoinCoordinator.REJOINLOG.isDebugEnabled()) { org.voltdb.rejoin.Iv2RejoinCoordinator.REJOINLOG.debug((\"Rejoin fails to acquire lock:\" + blockerError)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9488/buggy-version/src.frontend.org.voltdb.rejoin.Iv2RejoinCoordinator.java", "BodyUseAPI": ["org.voltcore.logging.VoltLogger.debug(java.lang.String)"], "Fixed commit": "7e1a6ce8cd185174b2613c3fe176c4c9fcf7ab4f", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2018-08-30T12:12:53Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tapedoctor.ByteHelper.getInt2(byte[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rough > 32768) { rough -= 65536; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4231/buggy-version/src.tapedoctor.WavFile.java", "BodyUseAPI": [], "Fixed commit": "2425bb7f4694c9d7bc5c1747bbb741b2c70921ee", "Url": "https://api.github.com/repos/smart-fun/TapeDoctor", "Date": "2018-05-28T07:52:30Z"},
{"Line": "=>912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((context.getClass().getName().contains(\"MainActivity\")) || (context.getClass().getName().contains(\"MineFragment\")))) { com.common.cklibrary.utils.rx.RxBus.getInstance().post(new com.common.cklibrary.utils.rx.MsgEvent<java.lang.String>(\"RxBusLogOutEvent\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3227/buggy-version/SillyChildMerchant.app.src.main.java.com.yinglan.scm.retrofit.RequestClient.java", "BodyUseAPI": [], "Fixed commit": "2916ebd0baebae81d2623edbe4934e4a5a0ee731", "Url": "https://api.github.com/repos/921668753/SillyChildMerchant-Android", "Date": "2018-06-04T12:15:05Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connection instanceof com.mysql.jdbc.MySQLConnection) { com.mysql.jdbc.MySQLConnection mySqlConnection = ((com.mysql.jdbc.MySQLConnection) (connection)); isValid = com.ctrip.platform.dal.dao.helper.MySqlConnectionHelper.isValid(mySqlConnection, com.ctrip.platform.dal.dao.datasource.DataSourceValidator.DEFAULT_VALIDATE_TIMEOUT_IN_SECONDS); }else { isValid = connection.isValid(com.ctrip.platform.dal.dao.datasource.DataSourceValidator.DEFAULT_VALIDATE_TIMEOUT_IN_SECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2192/buggy-version/dal-client.src.main.java.com.ctrip.platform.dal.dao.datasource.DataSourceValidator.java", "BodyUseAPI": ["java.sql.Connection.isValid(int)"], "Fixed commit": "17329a955d18eb3e8cc15ed90e3c562a5c2a1618", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2018-01-23T07:50:55Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.M)) { if ((checkSelfPermission(Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.widget.Toast.makeText(this, \"You did not give permission to access Location.\", Toast.LENGTH_SHORT).show(); }else mMap.setMyLocationEnabled(true); }else mMap.setMyLocationEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4213/buggy-version/app.src.main.java.com.smdproject.smdproject.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a6b4ee6cdea80bdbdd67615739e08d93c277e326", "Url": "https://api.github.com/repos/abdullahkamran/SMDProject", "Date": "2018-04-25T19:51:54Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.polankam.pcrf.trafficgenerator.scenario.Scenario.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (scenariosForTypes.get(type).remove(scenario)) { currentScenariosCount.decrementAndGet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2297/buggy-version/src.main.java.cz.polankam.pcrf.trafficgenerator.client.Client.java", "BodyUseAPI": [], "Fixed commit": "794327b27685714ef90eace9e005614bcc296dc6", "Url": "https://api.github.com/repos/Neloop/traffirator", "Date": "2018-07-02T19:14:51Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.anky.connectid.data.ConnectionTag.getConnection_ids()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ids == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8529/buggy-version/app.src.main.java.me.anky.connectid.details.DetailsActivityPresenter.java", "BodyUseAPI": [], "Fixed commit": "d3bad66f5050dfb51dca4abc50e985d9bc928d56", "Url": "https://api.github.com/repos/anky21/Remember-Names", "Date": "2018-05-13T06:08:49Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vecLeaderToRetreatPos.getDirY()) == 0.0) { vecLeaderToRetreatPos.setDirY(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4475/buggy-version/CBot.src.unitControlModule.stateFactories.actions.executableActions.RetreatPositionCluster.java", "BodyUseAPI": ["bwapiMath.Vector.setDirY(int)"], "Fixed commit": "ba311b54912350896b3bc3ce3aefb9bcee5345ed", "Url": "https://api.github.com/repos/p1387h/CBot", "Date": "2018-04-15T16:39:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vecLeaderToRetreatPos.getDirX()) == 0.0) { vecLeaderToRetreatPos.setDirX(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4475/buggy-version/CBot.src.unitControlModule.stateFactories.actions.executableActions.RetreatPositionCluster.java", "BodyUseAPI": ["bwapiMath.Vector.setDirX(int)"], "Fixed commit": "ba311b54912350896b3bc3ce3aefb9bcee5345ed", "Url": "https://api.github.com/repos/p1387h/CBot", "Date": "2018-04-15T16:39:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (feedback) { toolbar = activity.findViewById(R.id.feedback_toolbar); }else { toolbar = activity.findViewById(R.id.ind_act_toolbar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1626/buggy-version/app.src.main.java.edu.grinnell.appdev.events.Activities.IndividualEventActivity.java", "BodyUseAPI": [], "Fixed commit": "91f42cb54418f3991b7421a1ed7b94b8b43fb985", "Url": "https://api.github.com/repos/GrinnellAppDev/Events-Android", "Date": "2018-10-14T19:18:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!encontrado) { out.print(\"<h1>USUARIO NO ENCONTRADO EN LA BASE DE DATOS</h1>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4844/buggy-version/src.java.Servlets.VerificarLogin.java", "BodyUseAPI": [], "Fixed commit": "08a5be7124f8b284ad4e25ca50be317a4e274031", "Url": "https://api.github.com/repos/LuisAlvaradoB/Aurora", "Date": "2018-10-29T13:00:10Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.String) { multiValues = new java.util.ArrayList<>(); multiValues.add(((java.lang.String) (value))); }else if (value instanceof java.util.List) { multiValues = ((java.util.List<java.lang.String>) (value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2142/buggy-version/app.sav.junit.runner.src.main.java.sav.junit.CommandLine.java", "BodyUseAPI": [], "Fixed commit": "39ec11f61f2ad67a4ad76641f7ced963b35b20db", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2018-07-19T09:07:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.ui.PlatformUI.isWorkbenchRunning()) { org.eclipse.e4.core.contexts.IEclipseContext eclipseContext = org.eclipse.ui.PlatformUI.getWorkbench().getService(org.eclipse.e4.core.contexts.IEclipseContext.class); if (eclipseContext != null) { eclipseContext.remove(DependencyTreePart.INJECTOR_KEY); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7999/buggy-version/plugins.org.slizaa.hierarchicalgraph.core.ui.dependencytree.src.org.slizaa.hierarchicalgraph.core.ui.dependencytree.internal.osgi.Activator.java", "BodyUseAPI": [], "Fixed commit": "bcb498ced5bba974b934b0e2e349336a2c432021", "Url": "https://api.github.com/repos/slizaa/slizaa-hierarchicalgraph-core", "Date": "2018-04-02T20:37:40Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.ui.PlatformUI.isWorkbenchRunning()) { org.eclipse.e4.core.contexts.IEclipseContext eclipseContext = org.eclipse.ui.PlatformUI.getWorkbench().getService(org.eclipse.e4.core.contexts.IEclipseContext.class); com.google.inject.Injector injector = com.google.inject.Guice.createInjector(new org.slizaa.hierarchicalgraph.core.ui.dependencytree.internal.osgi.DependencyTreeModule(eclipseContext)); eclipseContext.set(DependencyTreePart.INJECTOR_KEY, injector); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7999/buggy-version/plugins.org.slizaa.hierarchicalgraph.core.ui.dependencytree.src.org.slizaa.hierarchicalgraph.core.ui.dependencytree.internal.osgi.Activator.java", "BodyUseAPI": [], "Fixed commit": "bcb498ced5bba974b934b0e2e349336a2c432021", "Url": "https://api.github.com/repos/slizaa/slizaa-hierarchicalgraph-core", "Date": "2018-04-02T20:37:40Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(seedu.address.logic.parser.FindCommandParser.isValidPrefixFormat(trimmedArgs))) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4115/buggy-version/src.main.java.seedu.address.logic.parser.FindCommandParser.java", "BodyUseAPI": [], "Fixed commit": "7a8e4aa0401489cfd0164441caf2c4a91ecc294b", "Url": "https://api.github.com/repos/jill858/main", "Date": "2018-04-15T08:36:26Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSelectedSite()) != null) { long delayMs = getResources().getInteger(R.integer.fab_animation_delay); new android.os.Handler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { if ((isAdded()) && (((mFabView.getVisibility()) != (android.view.View.VISIBLE)) || ((mFabView.getTranslationY()) != 0))) { org.wordpress.android.util.AniUtils.showFab(mFabView, true); } } }, delayMs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5641/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.main.MySiteFragment.java", "BodyUseAPI": [], "Fixed commit": "c506b578e14dd2c2e59e4334f62fad5c47ca9250", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2018-01-26T01:05:01Z"},
{"Line": "=>1022", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((artwork.getPictureType()) == 8) { javafx.scene.image.Image artistImage = javafx.embed.swing.SwingFXUtils.toFXImage(((java.awt.image.BufferedImage) (artwork.getImage())), null); if (artistImage != null) return artistImage; }else if ((artwork.getPictureType()) == 12) { javafx.scene.image.Image writerImage = javafx.embed.swing.SwingFXUtils.toFXImage(((java.awt.image.BufferedImage) (artwork.getImage())), null); if (writerImage != null) return writerImage; }else if ((artwork.getPictureType()) == 13) { javafx.scene.image.Image logoImage = javafx.embed.swing.SwingFXUtils.toFXImage(((java.awt.image.BufferedImage) (artwork.getImage())), null); if (logoImage != null) return logoImage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8851/buggy-version/src.net.joshuad.hypnos.Track.java", "BodyUseAPI": ["org.jaudiotagger.tag.images.Artwork.getImage()", "org.jaudiotagger.tag.images.Artwork.getImage()", "org.jaudiotagger.tag.images.Artwork.getPictureType()", "org.jaudiotagger.tag.images.Artwork.getPictureType()", "javafx.embed.swing.SwingFXUtils.toFXImage(((java.awt.image.BufferedImage) (artwork.getImage())),<nulltype>)", "javafx.embed.swing.SwingFXUtils.toFXImage(((java.awt.image.BufferedImage) (artwork.getImage())),<nulltype>)", "org.jaudiotagger.tag.images.Artwork.getImage()", "javafx.embed.swing.SwingFXUtils.toFXImage(((java.awt.image.BufferedImage) (artwork.getImage())),<nulltype>)"], "Fixed commit": "6f4fcb4a6389b16d0a070dc7ad46263592da1022", "Url": "https://api.github.com/repos/JoshuaD84/HypnosMusicPlayer", "Date": "2018-01-11T01:45:46Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!handled) { pressureTile.handlePressureOff(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1410/buggy-version/core.src.com.lovely.games.TheFirstGate.java", "BodyUseAPI": [], "Fixed commit": "530d29491cb8e54949f09bfb73ef882cc01f1f23", "Url": "https://api.github.com/repos/seanoneillcode/the-first-gate", "Date": "2018-01-12T08:50:51Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldAdjustForWhiteStatusBar) { color = android.graphics.Color.parseColor(\"#B0B0B0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3163/buggy-version/navigation.src.main.java.me.listenzz.navigation.AwesomeFragment.java", "BodyUseAPI": [], "Fixed commit": "32dce48951662a16798b12e24d8fe24b91baff22", "Url": "https://api.github.com/repos/listenzz/AndroidNavigation", "Date": "2018-04-15T12:35:35Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.redpen.model.Document.getLastSection()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lastSection == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4749/buggy-version/redpen-core.src.main.java.cc.redpen.validator.document.UnexpandedAcronymValidator.java", "BodyUseAPI": [], "Fixed commit": "39973544f61e29fd1c31bf7ff8a63cbca4538d62", "Url": "https://api.github.com/repos/takahi-i/redpen", "Date": "2018-04-21T13:32:39Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isThere(\"10-ten-to-10-ten\"))) player.badges.add(\"10-ten-to-10-ten\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7324/buggy-version/Woo.java", "BodyUseAPI": [], "Fixed commit": "a65d79e0b1640c299cee19e20b9bf8512e19d775", "Url": "https://api.github.com/repos/ewong11/biolab", "Date": "2018-01-16T23:01:36Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.runtime.projectsetting.ProjectPreferenceManager.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((value == null) || ((value.length()) == 0)) { if (parameters.containsKey(MavenTemplateManager.KEY_PROJECT_NAME)) { projectPreferenceManager = getProjectPreferenceManager(); if ((projectPreferenceManager == null) || (projectSettingTemplateKey == null)) { throw new java.lang.NullPointerException(); } if ((projectSettingTemplateKey.length()) == 0) { throw new java.lang.IllegalArgumentException(\"The project setting key shoundn't be empty\"); } value = projectPreferenceManager.getValue(projectSettingTemplateKey); } if ((value == null) || ((value.length()) == 0)) { throw new java.lang.Exception((((\"Can't find the value by key \" + projectSettingTemplateKey) + \" in \") + (projectPreferenceManager.getQualifier()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5340/buggy-version/main.plugins.org.talend.designer.maven.src.main.java.org.talend.designer.maven.template.AbstractMavenTemplateManager.java", "BodyUseAPI": [], "Fixed commit": "1026481c48c798bedbd8a3428255421739cc996f", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2018-02-13T09:20:56Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((word.length()) == 1) { java.lang.System.out.println(\"bahakdfjd\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8918/buggy-version/proj1b.Palindrome.java", "BodyUseAPI": [], "Fixed commit": "d2cd6e5a9aba5486a2b74778fb9d36931f154c1e", "Url": "https://api.github.com/repos/michellesri/cs61b", "Date": "2018-02-17T23:04:16Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((last) == null) { first = null; }else { last.next = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9708/buggy-version/src.Chap05.DoublyLinkedApp.src.com.yasser.DoublyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "b62eeb84e0f665610d858a99d8dd26b9623d8e3b", "Url": "https://api.github.com/repos/yasserhussain1110/dsaj-lafore-solutions", "Date": "2018-08-05T09:07:06Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first) == null) { last = null; }else { first.prev = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9708/buggy-version/src.Chap05.DoublyLinkedApp.src.com.yasser.DoublyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "b62eeb84e0f665610d858a99d8dd26b9623d8e3b", "Url": "https://api.github.com/repos/yasserhussain1110/dsaj-lafore-solutions", "Date": "2018-08-05T09:07:06Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isActive) && (badgeHidesWhenActive)) { badge.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4682/buggy-version/bottom-bar.src.main.java.com.roughike.bottombar.BottomBarTab.java", "BodyUseAPI": [], "Fixed commit": "6d61af4a54e160b6d1a2c80556ab872f93b29c32", "Url": "https://api.github.com/repos/knaeckeKami/BottomBar", "Date": "2018-08-15T14:44:14Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N)) { uri = android.support.v4.content.FileProvider.getUriForFile(context, ((context.getApplicationContext().getPackageName()) + \".provider\"), file); }else { uri = android.net.Uri.fromFile(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3102/buggy-version/src.android.FileOpener.java", "BodyUseAPI": [], "Fixed commit": "610ccc42a96d9c78adf393ec0b2c5288bdc6d0cc", "Url": "https://api.github.com/repos/NaimishVerma17/cordova-plugin-fileopener", "Date": "2018-10-03T10:46:55Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.github.piyush1594.statsGenerator.StatsGenerator.token) == null) { com.github.piyush1594.statsGenerator.StatsGenerator.token = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4822/buggy-version/src.main.java.com.github.piyush1594.statsGenerator.StatsGenerator.java", "BodyUseAPI": [], "Fixed commit": "f3862e3351b67da1732eb77eb7fa3bb9ab23be1e", "Url": "https://api.github.com/repos/piyush-garg/osiostatsgenerator", "Date": "2018-02-05T11:09:14Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (stanzaId != null) message.setStanzaId(stanzaId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3665/buggy-version/xabber.src.main.java.com.xabber.android.data.message.AbstractChat.java", "BodyUseAPI": ["org.jivesoftware.smack.packet.Message.setStanzaId(java.lang.String)"], "Fixed commit": "a59d535193dbee468e9267c1d407eb690e16f39e", "Url": "https://api.github.com/repos/mirinae/xabber-android", "Date": "2018-03-23T07:15:48Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groupsToExecutor.keySet().size()) == 0) { return new java.util.HashSet<>(executorToChannels.keySet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5900/buggy-version/twister2.comms.src.java.edu.iu.dsc.tws.comms.core.TaskPlan.java", "BodyUseAPI": [], "Fixed commit": "115ef11681ed79b0e44418a6c6902fa502c2ae37", "Url": "https://api.github.com/repos/DSC-SPIDAL/twister2", "Date": "2018-07-18T19:49:34Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (executorToGroup.containsKey(executor)) { return executorToGroup.get(executor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5900/buggy-version/twister2.comms.src.java.edu.iu.dsc.tws.comms.core.TaskPlan.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "115ef11681ed79b0e44418a6c6902fa502c2ae37", "Url": "https://api.github.com/repos/DSC-SPIDAL/twister2", "Date": "2018-07-18T19:49:34Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof java.lang.String) { return obj.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5244/buggy-version/datab-converters.gson.src.main.java.datab.converter.gson.GsonConverter.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "b2b738aabf371f0976a669de344213938381e476", "Url": "https://api.github.com/repos/masich/DataB", "Date": "2018-06-02T09:33:15Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.softserve.edu.library.service.BookTakingService.takeBook(com.softserve.edu.library.dto.BookTakingDto)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (resultString.equals(\"This book cannot be taken\")) { req.setAttribute(\"thisBookCannotBeTaken\", \"display: block\"); }else if (resultString.equals(\"book was successfully added\")) { req.setAttribute(\"bookWasSuccessfullyAdded\", \"display: block\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/674/buggy-version/src.main.java.com.softserve.edu.library.servlet.BookTakingServlet.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "aa7e88d764f7c059c2ce44699a3ccecd30dd72e6", "Url": "https://api.github.com/repos/EvansShamChan/LibraryWebSite", "Date": "2018-07-10T10:38:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerQuitEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(player.isDead())) { player.setHealth(0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3029/buggy-version/Fusion.src.fusion.listeners.PlayerQuit.java", "BodyUseAPI": ["org.bukkit.entity.Player.setHealth(double)"], "Fixed commit": "1428720faf7c29f7acf7ba7ff64caa1c2fc0d053", "Url": "https://api.github.com/repos/GummyPvP/Fusion", "Date": "2018-04-05T19:29:01Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.randywebb.wlts.beans.Address.log.isTraceEnabled()) { org.randywebb.wlts.beans.Address.log.trace((\"Address: \" + addressString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6644/buggy-version/src.main.java.org.randywebb.wlts.beans.Address.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String)"], "Fixed commit": "966586026377e7abb9088a35a187921b9433c0ed", "Url": "https://api.github.com/repos/Speewack/wlts-import", "Date": "2018-05-07T00:53:09Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (token != null) { if (zserio.ast.TokenAST.isKeyword(token.getType())) return message + \" (reserved keyword)\"; if ((token.getType()) == (zserio.antlr.ZserioParserTokenTypes.EOF)) return \"Unexpected end of file: \" + message; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7445/buggy-version/compiler.core.src.zserio.tools.ZserioTool.java", "BodyUseAPI": ["zserio.ast.TokenAST.isKeyword(token.getType())", "antlr.Token.getType()", "antlr.Token.getType()"], "Fixed commit": "160a9654cd42c8b832e234f9dc60d4b72d57794d", "Url": "https://api.github.com/repos/ndsev/zserio", "Date": "2018-08-09T13:26:27Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.util.StringUtils.isEmpty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isConfirmEmpty) { model.addAttribute(\"passwordConfirmationError\", \"Password confirmation cannot be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9768/buggy-version/src.main.java.ua.yava.sweater.controller.RegistrationController.java", "BodyUseAPI": [], "Fixed commit": "d9a2909ea099332423f805329d3906b2f1db21e3", "Url": "https://api.github.com/repos/sage81/sweater", "Date": "2018-10-16T15:01:23Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mCursor.moveToFirst())) { insertDummyData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6610/buggy-version/app.src.main.java.com.example.mostafa.gplanettask.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "eb74569206e83ff19277d02c5c32ba52ca504ab8", "Url": "https://api.github.com/repos/mostafa07/gpnt-task", "Date": "2018-07-03T19:59:21Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mUserIdInputET.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((input.isEmpty()) || (input == null)) { android.widget.Toast.makeText(this, getString(R.string.invalid_input), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6610/buggy-version/app.src.main.java.com.example.mostafa.gplanettask.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "eb74569206e83ff19277d02c5c32ba52ca504ab8", "Url": "https://api.github.com/repos/mostafa07/gpnt-task", "Date": "2018-07-03T19:59:21Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAccordion())) { clearActive(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1783/buggy-version/gwt-material.src.main.java.gwt.material.design.client.ui.MaterialCollapsible.java", "BodyUseAPI": [], "Fixed commit": "8695fde4dcf29b426dae14159488df5e98c2a03f", "Url": "https://api.github.com/repos/GwtMaterialDesign/gwt-material", "Date": "2018-08-26T21:41:00Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.oauth2.provider.authentication.TokenExtractor.extract(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (preAuthentication != null) { try { org.springframework.security.core.Authentication authentication = this.authenticationManager.authenticate(preAuthentication); if (authentication != null) { org.springframework.security.core.context.SecurityContextHolder.getContext().setAuthentication(authentication); }else { org.springframework.security.core.context.SecurityContextHolder.clearContext(); } } catch (org.springframework.security.core.AuthenticationException exception) { com.example.gateway.config.SimpleFilter.logger.debug(\"AuthenticationException occurs \"); org.springframework.security.core.context.SecurityContextHolder.clearContext(); exception.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9563/buggy-version/gateway.src.main.java.com.example.gateway.config.SimpleFilter.java", "BodyUseAPI": ["org.springframework.security.authentication.AuthenticationManager.authenticate(org.springframework.security.core.Authentication)"], "Fixed commit": "481b2b8d466b267cfeea2fe08686672e0cfabfa4", "Url": "https://api.github.com/repos/zevt/api-gateway", "Date": "2018-06-16T09:40:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.parseLong(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((userStream.get(uid).getRating().get(movies.get(mid)).timestamp) < timestamp) userStream.get(uid).addRating(movies.get(mid), rating, timestamp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6917/buggy-version/P3_NetFlict.src.SimpleMovieRecommender.java", "BodyUseAPI": ["userStream.get(uid).addRating(movies.get(mid),double,long)", "java.util.Map<java.lang.Integer, Movie>.get(int)", "java.util.Map<java.lang.Integer, User>.get(int)"], "Fixed commit": "9cfdaf48fa08a68972b49916ecaa714458096d7f", "Url": "https://api.github.com/repos/Zensonize/MUICT15-ITCS208", "Date": "2018-04-18T06:45:19Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (imageupload) { com.example.android.imagehub.compressImage ci = new com.example.android.imagehub.compressImage(this); path = ci.compressImage(selectedImagePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6267/buggy-version/app.src.main.java.com.example.android.imagehub.Create_account.java", "BodyUseAPI": [], "Fixed commit": "ccbe1fa5ce8bf2dbbfc8a61b16318c230392d080", "Url": "https://api.github.com/repos/Jeet97/ImageHub", "Date": "2018-03-22T16:22:52Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_goto_profile)) { android.content.Intent mIntent = new android.content.Intent(this, com.bannuranurag.android.vikify.ProfileActivity.class); startActivity(mIntent); }else if (id == (R.id.sign_out)) { builder.setMessage(\"Do you want to signout?\").setCancelable(false).setPositiveButton(\"Yes\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int id) { finish(); signOut(); } }).setNegativeButton(\"No\", new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int id) { dialog.cancel(); } }); android.support.v7.app.AlertDialog alert = builder.create(); alert.setTitle(\"Signout\"); alert.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/352/buggy-version/app.src.main.java.com.bannuranurag.android.vikify.NavDraw.java", "BodyUseAPI": [], "Fixed commit": "13cb6002d8e9362cb422ea23b3381278e27ab4f5", "Url": "https://api.github.com/repos/Anurag26/VikifyFinalApp", "Date": "2018-09-16T11:42:06Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((next) != null) && ((next.getTime()) == t)) { previous = next; next = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7583/buggy-version/eu.quanticol.moonlight.core.src.main.java.eu.quanticol.moonlight.signal.Signal.java", "BodyUseAPI": [], "Fixed commit": "ccf47552a9fe7d12342d1f20df011966dff61c3c", "Url": "https://api.github.com/repos/Quanticol/MoonLight", "Date": "2018-10-31T10:20:47Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((termStore) instanceof org.linqs.psl.reasoner.admm.term.ADMMTermStore) { ((org.linqs.psl.reasoner.admm.term.ADMMTermStore) (termStore)).resetLocalVairables(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7131/buggy-version/psl-core.src.main.java.org.linqs.psl.application.learning.weight.WeightLearningApplication.java", "BodyUseAPI": [], "Fixed commit": "e405e38422db566139aa63dda9a2f1c0574444ad", "Url": "https://api.github.com/repos/eriq-augustine/psl", "Date": "2018-03-10T03:27:35Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.v_start)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (startView != null) { startView.performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7254/buggy-version/app.src.main.java.com.ybg.app.neishow.view.swipeCardView.SwipeFlingAdapterView.java", "BodyUseAPI": ["android.view.View.performClick()"], "Fixed commit": "5cbc2ef26bab9d8298fcf1fe269e30894785bc6e", "Url": "https://api.github.com/repos/yangbagang/NeiShow", "Date": "2018-04-04T10:50:32Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (stopView != null) { stopView.performClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7254/buggy-version/app.src.main.java.com.ybg.app.neishow.view.swipeCardView.SwipeFlingAdapterView.java", "BodyUseAPI": ["android.view.View.performClick()"], "Fixed commit": "5cbc2ef26bab9d8298fcf1fe269e30894785bc6e", "Url": "https://api.github.com/repos/yangbagang/NeiShow", "Date": "2018-04-04T10:50:32Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(userService.AddUser(user_key))) java.lang.System.out.println(\"\\n-------------user Add Fail---------------\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2960/buggy-version/chatbot-server.src.main.java.kr.or.connect.chatbotserver.api.ChatbotController.java", "BodyUseAPI": [], "Fixed commit": "ab8afe8c1fd8650143193435241afae504fb6dbb", "Url": "https://api.github.com/repos/sjw9650/chatbot", "Date": "2018-03-06T11:23:12Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((registrationModel) == null) { registrationModel = new net.bigmachini.mv_bigs.models.RegistrationModel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6671/buggy-version/app.src.main.java.net.bigmachini.mv_bigs.activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "4d87fbf45976ae5f667c42cfa3012ad4f542336e", "Url": "https://api.github.com/repos/bigmachini/mv_bigs", "Date": "2018-07-15T12:31:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(view.getContext()).getString(view.getContext().getString(R.string.prefs_camera_topic_edittext_key),view.getContext().getString(R.string.camera_topic))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (imageTopic.isEmpty()) cameraView.setTopicName(android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(\"edittext_camera_topic\", getString(R.string.camera_topic))); else cameraView.setTopicName(imageTopic);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/842/buggy-version/src.android_foo.control_app.src.main.java.com.robotca.ControlApp.Fragments.CameraViewFragment.java", "BodyUseAPI": ["org.ros.android.view.RosImageView<sensor_msgs.CompressedImage>.setTopicName(java.lang.String)"], "Fixed commit": "ae31c108e33d4ad7ba2982b9378916c0c3be04b6", "Url": "https://api.github.com/repos/iamzhuang/RobotCA", "Date": "2018-08-26T13:52:17Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(view.getContext()).getString(view.getContext().getString(R.string.prefs_camera_topic_edittext_key),view.getContext().getString(R.string.camera_topic))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (imageTopic.isEmpty()) cameraView.setTopicName(android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity()).getString(\"edittext_camera_topic\", getString(R.string.camera_topic))); else cameraView.setTopicName(imageTopic);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/842/buggy-version/src.android_foo.control_app.src.main.java.com.robotca.ControlApp.Fragments.OverviewFragment.java", "BodyUseAPI": ["org.ros.android.view.RosImageView<sensor_msgs.CompressedImage>.setTopicName(java.lang.String)"], "Fixed commit": "ae31c108e33d4ad7ba2982b9378916c0c3be04b6", "Url": "https://api.github.com/repos/iamzhuang/RobotCA", "Date": "2018-08-26T13:52:17Z"},
{"Line": "=>2552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query.getAlias(column.generateExprString(query))) != null) { return column; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/629/buggy-version/src.main.mondrian.rolap.SqlConstraintUtils.java", "BodyUseAPI": [], "Fixed commit": "81a5425f537864da53c31c61e0d45d6b7b0bfba1", "Url": "https://api.github.com/repos/svmalik/mondrian", "Date": "2018-06-28T00:05:46Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(com.buuz135.industrial.utils.RecipeUtils.RECIPE_DIR.exists())) || (result.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7257/buggy-version/src.main.java.com.buuz135.industrial.utils.RecipeUtils.java", "BodyUseAPI": [], "Fixed commit": "6244cc93bcb7094f1532d9e4feec6cd2df13bdbd", "Url": "https://api.github.com/repos/jansamohyl/Industrial-Foregoing", "Date": "2018-05-19T16:44:59Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (relativePath.equals(\"/\")) { return io.github.lukehutch.fastclasspathscanner.scanner.ScanSpec.ScanSpecPathMatch.ANCESTOR_OF_WHITELISTED_PATH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9100/buggy-version/src.main.java.io.github.lukehutch.fastclasspathscanner.scanner.ScanSpec.java", "BodyUseAPI": [], "Fixed commit": "7c281a38e61554c08ee02f53d8019c06bc3e7bdb", "Url": "https://api.github.com/repos/classgraph/classgraph", "Date": "2018-01-18T03:03:24Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((whitelistedPathPrefixes.contains(relativePath)) || (whitelistedPathsNonRecursive.contains(relativePath))) { return io.github.lukehutch.fastclasspathscanner.scanner.ScanSpec.ScanSpecPathMatch.AT_WHITELISTED_PATH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9100/buggy-version/src.main.java.io.github.lukehutch.fastclasspathscanner.scanner.ScanSpec.java", "BodyUseAPI": [], "Fixed commit": "7c281a38e61554c08ee02f53d8019c06bc3e7bdb", "Url": "https://api.github.com/repos/classgraph/classgraph", "Date": "2018-01-18T03:03:24Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cartDTO == null) { cartDTO = getCartDTOByCookie(request); redisUtil.add(java.lang.String.valueOf(id), cartDTO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8882/buggy-version/src.main.java.com.halo.service.CartService.java", "BodyUseAPI": [], "Fixed commit": "8673c84a4418f918db3f982eb8a82f79051bfbe3", "Url": "https://api.github.com/repos/MelloChan/halo-server", "Date": "2018-06-10T03:13:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.view.client.SingleSelectionModel<de.hdm.itprojektgruppe4.client.gui.BusinessObject>.getSelectedObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selection instanceof de.hdm.itprojektgruppe4.client.gui.Kontakt) { setSelectedKontakt(((de.hdm.itprojektgruppe4.client.gui.Kontakt) (selection))); com.google.gwt.user.client.ui.RootPanel.get(\"Details\").clear(); if (teilhaberschaft.equals(\"teilhaberschaft\")) { com.google.gwt.user.client.ui.RootPanel.get(\"Details\").add(new de.hdm.itprojektgruppe4.client.gui.KontaktForm(((de.hdm.itprojektgruppe4.client.gui.Kontakt) (selection)), teilhaberschaft)); }else { com.google.gwt.user.client.ui.RootPanel.get(\"Details\").add(new de.hdm.itprojektgruppe4.client.gui.KontaktForm(((de.hdm.itprojektgruppe4.client.gui.Kontakt) (selection)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/277/buggy-version/src.de.hdm.itprojektgruppe4.client.gui.KontaktlisteKontaktTreeViewModel.java", "BodyUseAPI": [], "Fixed commit": "ba78ffbdbc9ab5739296b6cf9b8f78360c472caf", "Url": "https://api.github.com/repos/Sebastian-Kramer/itprojektgruppe4", "Date": "2018-06-14T16:27:58Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shelter.get(\"name\").toLowerCase().contains(constraint.toString().toLowerCase())) || (shelter.get(\"restrictions\").toLowerCase().contains(constraint.toString().toLowerCase()))) { tempList.add(new edu.gatech.cs2340.shelterfinder.controllers.shelterAdapter.Tuple(shelter, (-1))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4030/buggy-version/app.src.main.java.edu.gatech.cs2340.shelterfinder.controllers.shelterAdapter.java", "BodyUseAPI": ["java.util.ArrayList<edu.gatech.cs2340.shelterfinder.controllers.shelterAdapter.Tuple<java.util.HashMap<java.lang.String, java.lang.String>, java.lang.Integer>>.add(edu.gatech.cs2340.shelterfinder.controllers.shelterAdapter.Tuple)"], "Fixed commit": "56a960cae1cf837600e86c4f42da3f574d5928d6", "Url": "https://api.github.com/repos/longoodr/CS2340-Team-35-Byte-Me", "Date": "2018-04-03T21:30:10Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(macro.getValue().trim().equals(\"\"))) { macros.put(macro.getKey(), macro.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8815/buggy-version/base.uk.ac.stfc.isis.ibex.ui.targets.src.uk.ac.stfc.isis.ibex.ui.targets.OpiTargetView.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "org.csstudio.opibuilder.util.MacrosInput.put(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "3f0343b08aa34e0a9e8165ba804f33f7881e3811", "Url": "https://api.github.com/repos/ISISComputingGroup/ibex_gui", "Date": "2018-10-10T16:40:47Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clue.Board.refutee) == currentTurn) { clue.Board.startTurn(clue.GUI.nextPlayer(currentTurn)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1869/buggy-version/Board.java", "BodyUseAPI": ["clue.GUI.nextPlayer(clue.Player)", "clue.Board.startTurn(clue.GUI.nextPlayer(currentTurn))"], "Fixed commit": "cf92bcec2e9d1c54319cd102ce87010e532a44a2", "Url": "https://api.github.com/repos/FrancisRaureti/swen225A2", "Date": "2018-08-27T03:52:22Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (deposit.getHasPersonalData().equals(\"No\")) { deposit.setPersonalDataStatement(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/64/buggy-version/datavault-webapp.src.main.java.org.datavaultplatform.webapp.controllers.DepositsController.java", "BodyUseAPI": ["org.datavaultplatform.common.request.CreateDeposit.setPersonalDataStatement(java.lang.String)"], "Fixed commit": "3e3ef7103b9bd06541006113e83a532ca57d13f3", "Url": "https://api.github.com/repos/DataVault/datavault", "Date": "2018-05-24T15:44:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nextVertex != null) shortestPathEndToStart.AddWaypoint(nextVertex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3175/buggy-version/src.business.algorithm.Dijkstra.java", "BodyUseAPI": ["business.algorithm.Path.AddWaypoint(business.algorithm.Vertex)"], "Fixed commit": "4b52d776276e6877e7cfd5f25a74001319671bac", "Url": "https://api.github.com/repos/SebastianFlosbach/AlgoDatSS18", "Date": "2018-06-07T20:50:15Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"catalogName\".equalsIgnoreCase(field)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2397/buggy-version/liquibase-core.src.main.java.liquibase.diff.output.changelog.AbstractChangeGenerator.java", "BodyUseAPI": [], "Fixed commit": "cc78b460ca769d535533582aac9ad6df3f33f9b9", "Url": "https://api.github.com/repos/Datical/liquibase", "Date": "2018-09-18T08:34:14Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"catalogName\".equalsIgnoreCase(field)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2397/buggy-version/liquibase-core.src.main.java.liquibase.diff.output.changelog.AbstractChangeGenerator.java", "BodyUseAPI": [], "Fixed commit": "cc78b460ca769d535533582aac9ad6df3f33f9b9", "Url": "https://api.github.com/repos/Datical/liquibase", "Date": "2018-09-18T08:34:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.child(\"users\").child(username).child(\"email\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (value == null) { login(\"notaname@email.com\", password); }else { login(value, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3087/buggy-version/ReminderApp.app.src.main.java.com.example.r2m.reminderapp.Login.java", "BodyUseAPI": ["com.example.r2m.reminderapp.Login.3.login(java.lang.String,java.lang.String)"], "Fixed commit": "ceb6de261f5c0acc83eca4d4bee41648659d1912", "Url": "https://api.github.com/repos/Snoople/reminderapp", "Date": "2018-04-01T16:10:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5596/buggy-version/src.main.java.com.winds.clipmaker.security.adapter.JwtAuthorizationFilter.java", "BodyUseAPI": [], "Fixed commit": "86fa52eb02369896ad06e6c9f1dbd1ebc703a554", "Url": "https://api.github.com/repos/NguyenMinhDung/ClipMaker", "Date": "2018-04-03T13:50:59Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.hyvar.evolution.util.HyEvolutionUtil.getValidTemporalElement(group.getTypes(),java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (type != null) { java.lang.StringBuffer buffer = new java.lang.StringBuffer(); buffer.append(((\"ID: \" + (group.getId())) + \", \\n\")); buffer.append((\"Type: \" + (type.getType()))); return buffer.toString(); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9366/buggy-version/plugins.de.darwinspl.feature.graphical.base.src.de.darwinspl.feature.graphical.base.editparts.DwGroupEditPart.java", "BodyUseAPI": ["java.lang.StringBuffer.append((\"Type: \" + (type.getType())))", "eu.hyvar.feature.HyGroupType.getType()"], "Fixed commit": "a0d87eef74deea3e22bcb7a60fbcd393155a059f", "Url": "https://api.github.com/repos/DarwinSPL/DarwinSPL", "Date": "2018-03-15T10:41:49Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.muzima.model.shr.kenyaemr.KenyaEmrShrModel.getImmunizations()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (immunizations != null) { for (com.muzima.model.shr.kenyaemr.Immunization immunization : immunizations) { encounters.add(com.muzima.utils.smartcard.KenyaEmrShrMapper.createJsonEncounterPayloadFromImmunization(immunization, patient)); } }else { android.util.Log.e(\"KenyaEmrShrMapper\", \"No Immunizations found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3846/buggy-version/app.src.main.java.com.muzima.utils.smartcard.KenyaEmrShrMapper.java", "BodyUseAPI": [], "Fixed commit": "c8cc9ad06892e97dc8a04325e2aa5c8244cc533d", "Url": "https://api.github.com/repos/muzima/muzima-android", "Date": "2018-03-22T12:31:57Z"},
{"Line": "=>890", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(otherOptionalMethodChoices.isEmpty())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5240/buggy-version/server.src.main.java.password.pwm.http.servlet.forgottenpw.ForgottenPasswordUtil.java", "BodyUseAPI": [], "Fixed commit": "b698ac8e098af5d29e8c1e1f1e0285ed3534c7f7", "Url": "https://api.github.com/repos/pwm-project/pwm", "Date": "2018-04-18T12:25:30Z"},
{"Line": "=>876", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collections.disjoint(java.util.Set<password.pwm.config.option.IdentityVerificationMethod>,java.util.Set<password.pwm.config.option.IdentityVerificationMethod>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!disJoint) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5240/buggy-version/server.src.main.java.password.pwm.http.servlet.forgottenpw.ForgottenPasswordUtil.java", "BodyUseAPI": [], "Fixed commit": "b698ac8e098af5d29e8c1e1f1e0285ed3534c7f7", "Url": "https://api.github.com/repos/pwm-project/pwm", "Date": "2018-04-18T12:25:30Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (listOfFiles != null) { for (int i = 0; i < (listOfFiles.length); i++) { if (listOfFiles[i].isFile()) { filesInDir.add(listOfFiles[i].getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7457/buggy-version/src.main.java.com.xebia.vulnmanager.util.IOUtil.java", "BodyUseAPI": ["java.io.File.isFile()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "8896b00e522378b52cd579a3d9561cfe77cfecdd", "Url": "https://api.github.com/repos/xebia-research/vulnmanager", "Date": "2018-03-08T13:04:18Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (chromatogramList != null) { chromatogramList.setParent(this); this.chromatogramList.setDataProcessingList(dataProcessingList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/12/buggy-version/src.main.java.com.alanmrace.jimzmlparser.mzml.Run.java", "BodyUseAPI": ["com.alanmrace.jimzmlparser.mzml.ChromatogramList.setParent(com.alanmrace.jimzmlparser.mzml.Run)"], "Fixed commit": "616f9f0bd3253d31ec3a6a1144cb0c9c69750b1c", "Url": "https://api.github.com/repos/AlanRace/jimzMLParser", "Date": "2018-01-04T13:19:53Z"},
{"Line": "=>2410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.smartdevicelink.transport.SdlRouterService.registeredApps) != null) { synchronized(REGISTERED_APPS_LOCK) { com.smartdevicelink.transport.SdlRouterService.PacketWriteTask peekTask = null; for (com.smartdevicelink.transport.SdlRouterService.RegisteredApp app : com.smartdevicelink.transport.SdlRouterService.registeredApps.values()) { peekTask = app.peekNextTask(); if (peekTask != null) { peekWeight = peekTask.getWeight(currentTime); if (peekWeight > currentPriority) { if (app.queuePaused) { app.notIt(); continue; } if (priorityApp != null) { priorityApp.notIt(); } currentPriority = peekWeight; priorityApp = app; } } } if (priorityApp != null) { return priorityApp.getNextTask(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2532/buggy-version/sdl_android.src.main.java.com.smartdevicelink.transport.SdlRouterService.java", "BodyUseAPI": [], "Fixed commit": "0c1dd2379ebb1ab43d1b91244eaebcddaa3dd887", "Url": "https://api.github.com/repos/shiniwat/sdl_android-1", "Date": "2018-04-09T11:22:47Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mETxtMessage.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(message)) { android.widget.Toast.makeText(getContext(), \"Message cannot be empty\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3901/buggy-version/app.src.main.java.com.example.adeba.se_im.ui.fragments.ChatFragment.java", "BodyUseAPI": [], "Fixed commit": "2165e5456dd6f2b8a401275cdb4009a32ae6cba4", "Url": "https://api.github.com/repos/Toyurc/SE-IM", "Date": "2018-10-30T22:19:29Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((identifier.getParent()) instanceof org.ballerinalang.plugins.idea.psi.BallerinaResourceDefinition) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1274/buggy-version/tool-plugins.intellij.src.main.java.org.ballerinalang.plugins.idea.codeinspection.BallerinaUnresolvedReferenceInspection.java", "BodyUseAPI": [], "Fixed commit": "77fda2fb0435f907b395863ab5956fd4bb82921b", "Url": "https://api.github.com/repos/nadeeshaan/ballerina", "Date": "2018-05-17T12:47:18Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((particle) != null) { metadataMap.set(MetadataIndex.AREAEFFECTCLOUD_PARTICLEID, particle.ordinal()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1697/buggy-version/src.main.java.net.glowstone.entity.GlowAreaEffectCloud.java", "BodyUseAPI": [], "Fixed commit": "049a46370a514b04d282888cefcaaadd13c574d0", "Url": "https://api.github.com/repos/Pr0methean/Glowstone", "Date": "2018-03-11T02:35:57Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((geoJson.contains(\"Feature\")) || (geoJson.contains(\"feature\"))) || (geoJson.contains(\"FEATURE\"))) { if (geoJson.contains(\"properties\")) { org.wololo.geojson.Feature feature = ((org.wololo.geojson.Feature) (org.wololo.geojson.GeoJSONFactory.create(geoJson))); return new java.util.ArrayList(feature.getProperties().keySet()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8546/buggy-version/core.src.main.java.org.datasyslab.geospark.formatMapper.FormatMapper.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "org.wololo.geojson.GeoJSONFactory.create(java.lang.String)"], "Fixed commit": "cb21f366adae9562730a9c368d8a49e898833c72", "Url": "https://api.github.com/repos/jiayuasu/GeoSpark", "Date": "2018-08-28T07:35:23Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg0.getType().isBuilding()) { ecgberht.Ecgberht.gs.inMap.updateMap(arg0, true); ecgberht.Ecgberht.gs.enemyBuildingMemory.remove(arg0); ecgberht.Ecgberht.gs.initAttackPosition = arg0.getTilePosition(); ecgberht.Ecgberht.gs.map.actualizaMapa(arg0.getTilePosition(), arg0.getType(), true); }else { ecgberht.Ecgberht.gs.initDefensePosition = arg0.getTilePosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2096/buggy-version/src.ecgberht.Ecgberht.java", "BodyUseAPI": ["ecgberht.Ecgberht.gs.map.actualizaMapa(arg0.getTilePosition(),arg0.getType(),boolean)", "ecgberht.Unit.getTilePosition()", "ecgberht.Ecgberht.gs.inMap.updateMap(ecgberht.Unit,boolean)", "ecgberht.Unit.getType()", "ecgberht.Unit.getTilePosition()", "ecgberht.Unit.getTilePosition()", "ecgberht.Ecgberht.gs.enemyBuildingMemory.remove(ecgberht.Unit)"], "Fixed commit": "89b3360fcdb9fcbebc189800dcac044999e17150", "Url": "https://api.github.com/repos/Jabbo16/Ecgberht", "Date": "2018-02-08T10:36:38Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, de.auktionmarkt.formular.state.FieldState>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (path.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9833/buggy-version/core.src.main.java.de.auktionmarkt.formular.state.applicator.DefaultFormStateApplicator.java", "BodyUseAPI": [], "Fixed commit": "5a50f70204969018bde3837e08437ce5213f1c50", "Url": "https://api.github.com/repos/auktion-markt/formular", "Date": "2018-04-13T13:06:16Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!required) result.put(\"\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9833/buggy-version/core.src.main.java.de.auktionmarkt.formular.specification.mapper.support.EntityFieldsMapper.java", "BodyUseAPI": [], "Fixed commit": "5a50f70204969018bde3837e08437ce5213f1c50", "Url": "https://api.github.com/repos/auktion-markt/formular", "Date": "2018-04-13T13:06:16Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((entityId.getType()) != null) { try { this.type = new java.net.URI(entityId.getType().toString()); } catch (java.net.URISyntaxException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1294/buggy-version/eu.neclab.iotplatform.ngsi.api.src.main.java.eu.neclab.iotplatform.ngsi.api.datamodel.EntityId.java", "BodyUseAPI": [], "Fixed commit": "0d788b54b551973984276c1bd18e19d3ab31d44e", "Url": "https://api.github.com/repos/FIWARE-Archive/iot.Aeron", "Date": "2018-01-23T14:52:19Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((vitalypanov.phototracker.utils.Utils.isNull(mService)) || (vitalypanov.phototracker.utils.Utils.isNull(mService.getCurrentTrack()))) || (vitalypanov.phototracker.utils.Utils.isNull(mService.getCurrentTrack().getPhotoFiles()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1106/buggy-version/app.src.main.java.vitalypanov.phototracker.fragment.RunningTrackShortInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "361d7153b419fbc008a30c21c1983e3acc6ba07d", "Url": "https://api.github.com/repos/panovvitalik/PhotoTracker", "Date": "2018-07-14T08:13:02Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (d == 0) { actionQueue.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7378/buggy-version/src.main.Entities.EntityProjectile.java", "BodyUseAPI": [], "Fixed commit": "45299ba904df82d143f56971ab81b8904f030a56", "Url": "https://api.github.com/repos/bxk21/notRTS", "Date": "2018-09-25T00:14:32Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Main.IS_TESTING) { java.lang.System.out.println((\"Action Timed out \" + (this))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7378/buggy-version/src.main.Action.java", "BodyUseAPI": [], "Fixed commit": "45299ba904df82d143f56971ab81b8904f030a56", "Url": "https://api.github.com/repos/bxk21/notRTS", "Date": "2018-09-25T00:14:32Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (name == null) { for (org.opengis.filter.expression.Expression n : names) { if (n instanceof org.opengis.filter.expression.Literal) { continue; } name = n; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9180/buggy-version/modules.extension.xsd.xsd-filter.src.main.java.org.geotools.filter.v1_0.OGCPropertyIsLikeTypeBinding.java", "BodyUseAPI": [], "Fixed commit": "d8aaeb8d4c555c0504810ed4f5e25474e926b972", "Url": "https://api.github.com/repos/ianturton/geotools", "Date": "2018-05-11T13:52:07Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geotools.xml.Node.getChildValues(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((names.size()) == 2) { name = ((org.opengis.filter.expression.Expression) (node.getChildValue(org.opengis.filter.expression.PropertyName.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9180/buggy-version/modules.extension.xsd.xsd-filter.src.main.java.org.geotools.filter.v1_0.OGCPropertyIsLikeTypeBinding.java", "BodyUseAPI": [], "Fixed commit": "d8aaeb8d4c555c0504810ed4f5e25474e926b972", "Url": "https://api.github.com/repos/ianturton/geotools", "Date": "2018-05-11T13:52:07Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getParentFile().exists())) { file.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2767/buggy-version/src.bms.tool.mdprocessor.MusicDownloadProcessor.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "f07baa698355695216e8759681b60eae2ee43dd0", "Url": "https://api.github.com/repos/ich59669/beatoraja", "Date": "2018-05-18T19:11:42Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((httpsURLConnection) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3233/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.client.HttpsConnection.java", "BodyUseAPI": [], "Fixed commit": "157b0b1c3b9f299e13461728c06507c18707f49c", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-01-14T18:03:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.contextReference.get()) == null) { apiResponse.setError(new java.lang.Error()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3233/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.asynctasks.RetrieveNotificationsAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "157b0b1c3b9f299e13461728c06507c18707f49c", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-01-14T18:03:20Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recordLine.isEmpty()) { recordLine = in.readLine(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5461/buggy-version/src.main.java.sales_data_analyzer.SalesFile.java", "BodyUseAPI": [], "Fixed commit": "7d95ceb48d5f5575116b49bfd9a42d93de01e6b8", "Url": "https://api.github.com/repos/alexgarzao/sales-data-analyzer", "Date": "2018-04-23T01:25:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.musicbrainz.mmd2.Work.getLanguageList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (languageList != null) { for (org.musicbrainz.mmd2.LanguageList.Language language : languageList.getLanguage()) adaptedWork.languages.add(language.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1152/buggy-version/mb-solrquerywriter.src.main.java.org.musicbrainz.search.solrwriter.moxy.WorkAdapter.java", "BodyUseAPI": ["org.musicbrainz.mmd2.LanguageList.getLanguage()"], "Fixed commit": "ef61a8d376729a4c6b66d86616ce3cc7a2e50719", "Url": "https://api.github.com/repos/metabrainz/mb-solr", "Date": "2018-05-29T10:21:40Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((requestCode == 1) && (data != null)) { com.virgiel.lustrumapp.LustrumRestClient.postSelfie(((android.graphics.Bitmap) (data.getExtras().get(\"data\"))), new com.loopj.android.http.JsonHttpResponseHandler() { @java.lang.Override public void onSuccess(int statusCode, cz.msebera.android.httpclient.Header[] headers, org.json.JSONObject response) { java.lang.System.out.println((\"Selfie posted: \" + response)); android.widget.Toast.makeText(getApplicationContext(), \"Selfie Posted\", Toast.LENGTH_SHORT).show(); retrieveSelfies(); } @java.lang.Override public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.String msg, java.lang.Throwable throwable) { java.lang.System.out.println((((((\"Something went wrong with selfie post\" + statusCode) + \", \") + msg) + \", \") + throwable)); } @java.lang.Override public void onFailure(int statusCode, cz.msebera.android.httpclient.Header[] headers, java.lang.Throwable throwable, org.json.JSONObject msg) { java.lang.System.out.println((\"Something went wrong with selfie post \" + msg)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/350/buggy-version/app.src.main.java.com.virgiel.lustrumapp.Activities.SelfieStreamActivity.java", "BodyUseAPI": ["com.virgiel.lustrumapp.LustrumRestClient.postSelfie(((android.graphics.Bitmap) (data.getExtras().get(\"data\"))),com.loopj.android.http.JsonHttpResponseHandler)", "data.getExtras().get(java.lang.String)", "android.content.Intent.getExtras()"], "Fixed commit": "980298db684f431c9b208668513d5f637f1851a5", "Url": "https://api.github.com/repos/JaspervanTilburg/LustrumApp", "Date": "2018-05-08T15:13:55Z"},
{"Line": "=>1395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x >= firstRangeSample) && (x <= lastRangeSample)) { final double val = noiseAzimuthBlocks[i].noiseMatrix[0][(x - firstRangeSample)]; if (removeThermalNoise) { return val; }else { return -val; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4010/buggy-version/s1tbx-op-calibration.src.main.java.org.esa.s1tbx.calibration.gpf.Sentinel1RemoveThermalNoiseOp.java", "BodyUseAPI": [], "Fixed commit": "50246b31d720a82274396fb7979a67571cfa0216", "Url": "https://api.github.com/repos/senbox-org/s1tbx", "Date": "2018-02-21T15:51:18Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(dy)) == 0) return super.onInterceptTouchEvent(ev);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8250/buggy-version/app.src.main.java.com.fan.collapsinglayout.CollapsingLayout.java", "BodyUseAPI": [], "Fixed commit": "0b459ff788beea41feabff6f1aeb541639a4d88f", "Url": "https://api.github.com/repos/fanyaopeng/CollapsingLayout", "Date": "2018-09-27T11:12:30Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getParentFile().exists())) { file.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/416/buggy-version/src.main.java.reposense.util.FileUtil.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "89653f90b1f8058b90faf4783af2d021cd69287b", "Url": "https://api.github.com/repos/reposense/RepoSense", "Date": "2018-05-18T13:36:25Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TaskManager.promptUserDesc(java.util.Scanner)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((desc.equals(\"c\")) || (desc == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8276/buggy-version/src.TaskManager.java", "BodyUseAPI": [], "Fixed commit": "13d2a6760bfe70339572515f9c9e3c4bb66c73d6", "Url": "https://api.github.com/repos/marcelaf7/TaskManager", "Date": "2018-05-11T20:01:31Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TaskManager.promptUserComplHrs(java.util.Scanner)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (complHrs < 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8276/buggy-version/src.TaskManager.java", "BodyUseAPI": [], "Fixed commit": "13d2a6760bfe70339572515f9c9e3c4bb66c73d6", "Url": "https://api.github.com/repos/marcelaf7/TaskManager", "Date": "2018-05-11T20:01:31Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["TaskManager.promptUserDeadln(java.util.Scanner)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (date == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8276/buggy-version/src.TaskManager.java", "BodyUseAPI": [], "Fixed commit": "13d2a6760bfe70339572515f9c9e3c4bb66c73d6", "Url": "https://api.github.com/repos/marcelaf7/TaskManager", "Date": "2018-05-11T20:01:31Z"},
{"Line": "=>1982", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getType()) instanceof boa.compiler.visitors.BoaArray) valueType = valueType.replace(\"[]\", \"[0]\"); else if ((((s.getType()) instanceof boa.compiler.visitors.BoaSet) || ((s.getType()) instanceof boa.compiler.visitors.BoaStack)) || ((s.getType()) instanceof boa.compiler.visitors.BoaMap)) valueType = valueType.replaceAll(\"<(.*)>\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7383/buggy-version/src.java.boa.compiler.visitors.CodeGeneratingVisitor.java", "BodyUseAPI": ["boa.compiler.visitors.BoaSet.getType()", "boa.compiler.visitors.BoaSet.getType()", "boa.compiler.visitors.BoaSet.getType()"], "Fixed commit": "e8357edab03078a490869ab4eb12b3cd2624f984", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-01-25T22:31:04Z"},
{"Line": "=>1974", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getType()) instanceof boa.compiler.visitors.BoaArray) valueType = valueType.replace(\"[]\", \"[0]\"); else if ((((s.getType()) instanceof boa.compiler.visitors.BoaSet) || ((s.getType()) instanceof boa.compiler.visitors.BoaStack)) || ((s.getType()) instanceof boa.compiler.visitors.BoaMap)) valueType = valueType.replaceAll(\"<(.*)>\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7383/buggy-version/src.java.boa.compiler.visitors.CodeGeneratingVisitor.java", "BodyUseAPI": ["boa.compiler.visitors.BoaStack.getType()", "boa.compiler.visitors.BoaStack.getType()", "boa.compiler.visitors.BoaStack.getType()"], "Fixed commit": "e8357edab03078a490869ab4eb12b3cd2624f984", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2018-01-25T22:31:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (authentication != null) { auditService.createAudit(authentication.getName(), AuditAction.LOGOUT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2470/buggy-version/src.main.java.org.sgc.rak.core.LogoutSuccessHandler.java", "BodyUseAPI": ["org.springframework.security.core.Authentication.getName()", "org.sgc.rak.services.AuditService.createAudit(authentication.getName(),AuditAction.LOGOUT)"], "Fixed commit": "1651994b4501a79eb726eecda9ffb8e0ae96ac87", "Url": "https://api.github.com/repos/bobbylight/random-acts-of-kinase", "Date": "2018-08-25T22:27:49Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.olive.gtaradio.Channel.showingChannel.equals(this)) { songs.get(currentSong).play(currentSongTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/969/buggy-version/com.example.olive.gtaradio.Channel.java", "BodyUseAPI": [], "Fixed commit": "39c9444156a4fb9fc70b09d9772359392ea7d056", "Url": "https://api.github.com/repos/nolatos/GTARadio", "Date": "2018-01-06T04:41:58Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/651/buggy-version/01Recursion.Recursion.java", "BodyUseAPI": [], "Fixed commit": "3b52faf88247a06a658aa89f43bcb85f171a97e4", "Url": "https://api.github.com/repos/RealMichael/MKS22X", "Date": "2018-03-15T02:29:23Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((op) == (kr.blogspot.charlie0301.wimple.impl.util.Calculator.OPERATOR.NONE)) && ((insertingPosition) == 0)) { ret = left = 0.0; resetStackedValue(); }else { ret = doShift(0, len); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8833/buggy-version/app.src.main.java.kr.blogspot.charlie0301.wimple.impl.util.Calculator.java", "BodyUseAPI": [], "Fixed commit": "31abd3950f2ed695954aabab26858c18a1142073", "Url": "https://api.github.com/repos/hallower/wimple", "Date": "2018-02-12T14:52:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((login != null) && (!(hasEverything()))) addRequest(new me.jfenn.attribouter.data.github.UserData(login));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6118/buggy-version/attribouter.src.main.java.me.jfenn.attribouter.wedges.TranslatorWedge.java", "BodyUseAPI": [], "Fixed commit": "e43800a76b1ab986c1409fb24a77f6522fe9dae8", "Url": "https://api.github.com/repos/fennifith/Attribouter", "Date": "2018-08-20T00:09:03Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((login != null) && (!(hasAll()))) addRequest(new me.jfenn.attribouter.data.github.UserData(login));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6118/buggy-version/attribouter.src.main.java.me.jfenn.attribouter.wedges.ContributorWedge.java", "BodyUseAPI": [], "Fixed commit": "e43800a76b1ab986c1409fb24a77f6522fe9dae8", "Url": "https://api.github.com/repos/fennifith/Attribouter", "Date": "2018-08-20T00:09:03Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewDragHelper) != null) { int action = android.support.v4.view.MotionEventCompat.getActionMasked(event); if (((mState) == (com.alium.nibo.lib.BottomSheetBehaviorGoogleMapsLike.STATE_DRAGGING)) && (action == (android.view.MotionEvent.ACTION_DOWN))) { return true; } mViewDragHelper.processTouchEvent(event); if (action == (android.view.MotionEvent.ACTION_DOWN)) { reset(); } if ((action == (android.view.MotionEvent.ACTION_MOVE)) && (!(mIgnoreEvents))) { if ((java.lang.Math.abs(((mInitialY) - (event.getY())))) > (mViewDragHelper.getTouchSlop())) { mViewDragHelper.captureChildView(child, event.getPointerId(event.getActionIndex())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6088/buggy-version/nibo_library.src.main.java.com.alium.nibo.lib.BottomSheetBehaviorGoogleMapsLike.java", "BodyUseAPI": [], "Fixed commit": "281eeb22f6efb4a16b4fcf7e55c60bd50b590fe4", "Url": "https://api.github.com/repos/aliumujib/Nibo", "Date": "2018-05-21T09:32:06Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user != null) { android.content.Intent signinIntent = new android.content.Intent(this, com.hersheys.recommender.pistachio.UserHomeActivity.class); this.startActivity(signinIntent); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7372/buggy-version/app.src.main.java.com.hersheys.recommender.pistachio.SignInActivity.java", "BodyUseAPI": [], "Fixed commit": "7462092aafa7fa790b4815b597b24aff0a0d38ca", "Url": "https://api.github.com/repos/pranavbudhwant/pistach.io", "Date": "2018-09-27T17:46:45Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getInventory()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4714/buggy-version/src.fr.thomapolis.polishub.listeners.ListenerPlayer.java", "BodyUseAPI": [], "Fixed commit": "a894bdce5904698fc60b498c59db48f7e318e556", "Url": "https://api.github.com/repos/thomapolis/PolisHub", "Date": "2018-07-14T10:13:32Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (width > 770) width = 770;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9836/buggy-version/app.src.main.java.com.danhasting.radar.AboutActivity.java", "BodyUseAPI": [], "Fixed commit": "84cbd2e229374ddb9dbeb66dfdef1fc4acfe9d33", "Url": "https://api.github.com/repos/dh4/WeatherRadar", "Date": "2018-03-17T05:05:49Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count == null) || (count.isEmpty())) { count = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9496/buggy-version/app.src.main.java.kz.ibragimov.salatcounter.model.SalatsModel.java", "BodyUseAPI": [], "Fixed commit": "2b0fbf53a813fedf761c46c0ba51be5e9479c3c9", "Url": "https://api.github.com/repos/mussa-ibragimov/salatcounter", "Date": "2018-03-23T16:48:53Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name == null) || (name.isEmpty())) { name = \"Salat: \" + (java.lang.String.valueOf(((salats.size()) + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9496/buggy-version/app.src.main.java.kz.ibragimov.salatcounter.model.SalatsModel.java", "BodyUseAPI": [], "Fixed commit": "2b0fbf53a813fedf761c46c0ba51be5e9479c3c9", "Url": "https://api.github.com/repos/mussa-ibragimov/salatcounter", "Date": "2018-03-23T16:48:53Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskLine.name.equals(name)) && (taskLine.cmd.equals(\"START\"))) stop = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3965/buggy-version/app.src.main.java.com.example.evan.taskmanager.TMModel.java", "BodyUseAPI": [], "Fixed commit": "d73a0257029c40b807c342b240bec670994166d7", "Url": "https://api.github.com/repos/CSUS-CSC-131-Spring2018/S3T7TM2", "Date": "2018-04-12T00:16:07Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.posY) < 0.0) { this.setDead(); }else if ((this.posY) > (((this.worldObj.provider) instanceof micdoodle8.mods.galacticraft.api.world.IExitHeight ? ((micdoodle8.mods.galacticraft.api.world.IExitHeight) (this.worldObj.provider)).getYCoordinateToTeleport() : 1200) + 100)) { for (net.minecraft.entity.Entity e : this.getPassengers()) { if (e instanceof net.minecraft.entity.player.EntityPlayerMP) { micdoodle8.mods.galacticraft.core.entities.player.GCPlayerStats stats = micdoodle8.mods.galacticraft.core.entities.player.GCPlayerStats.get(e); if (stats.isUsingPlanetSelectionGui()) { this.setDead(); } }else this.setDead(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3127/buggy-version/src.main.java.micdoodle8.mods.galacticraft.api.prefab.entity.EntitySpaceshipBase.java", "BodyUseAPI": [], "Fixed commit": "7c563fc5c593515051405a81334049927c876eeb", "Url": "https://api.github.com/repos/MJRLegends/Galacticraft", "Date": "2018-01-27T17:41:20Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rs.next()) return rs.getString(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2440/buggy-version/src.main.java.wraper.Listener.java", "BodyUseAPI": ["java.sql.ResultSet.getString(int)"], "Fixed commit": "547f9feb35fd44ae57d3391253dd4f34f2c44ac2", "Url": "https://api.github.com/repos/yuvalmizrahi2/Geographic-Application", "Date": "2018-01-18T18:39:16Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ingDisplay.length()) > 0) { tvRecipeIngredients.setText(ingDisplay.substring(0, ((ingDisplay.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6454/buggy-version/app.src.main.java.me.ivg2.foodapp.RecipeDetailFragment.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "86cb904407f145982c060f7a2048277df50650d9", "Url": "https://api.github.com/repos/TheOscars2/FoodApp", "Date": "2018-07-26T20:14:50Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((instDisplay.length()) > 0) { tvRecipeInstructions.setText(instDisplay.substring(0, ((instDisplay.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6454/buggy-version/app.src.main.java.me.ivg2.foodapp.RecipeDetailFragment.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "86cb904407f145982c060f7a2048277df50650d9", "Url": "https://api.github.com/repos/TheOscars2/FoodApp", "Date": "2018-07-26T20:14:50Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ret != null) logger.info((\"RESPONSE : \" + (ret.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4333/buggy-version/src.main.java.cn.liangjiateng.common.GlobalLogHandler.java", "BodyUseAPI": ["org.apache.log4j.Logger.info(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "1ef6d2584e1f753689f6637c9d524e08e5e40a13", "Url": "https://api.github.com/repos/toxicaker/blog", "Date": "2018-06-16T15:38:35Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getKingPosition(forWhite)) != null) { boolean kingindanger = false; java.util.ArrayList<Board.Position> dangerPositions = MoveGenerator.DangerChecker.getDangerPositions(this, forWhite); for (Board.Position p : dangerPositions) { if (((p.getX()) == (this.getKingPosition(forWhite).getX())) && ((p.getY()) == (this.getKingPosition(forWhite).getY()))) { kingindanger = true; break; } } return kingindanger; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1234/buggy-version/chessengine.src.main.java.Board.ChessBoard.java", "BodyUseAPI": ["Board.Position.getX()", "Board.ChessBoard.getKingPosition(boolean)", "MoveGenerator.DangerChecker.getDangerPositions(Board.ChessBoard,boolean)", "Board.ChessBoard.getKingPosition(boolean)", "Board.Position.getY()"], "Fixed commit": "514795aa8e3ce77b95f96b6b7329ad958497bad8", "Url": "https://api.github.com/repos/dbuech/Schachengine", "Date": "2018-07-14T08:55:59Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((order.getUpdateAt()) != null) { cOrder.setTime(order.getUpdateAt()); if ((((cOrder.get(java.util.Calendar.YEAR)) == (c.get(java.util.Calendar.YEAR))) && ((cOrder.get(java.util.Calendar.MONTH)) == (c.get(java.util.Calendar.MONTH)))) && ((cOrder.get(java.util.Calendar.DATE)) == (c.get(java.util.Calendar.DATE)))) { orders.add(order); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6316/buggy-version/src.main.java.edu.zufe.rms.service.OrderService.java", "BodyUseAPI": ["edu.zufe.rms.model.Order.getUpdateAt()", "java.util.Calendar.setTime(order.getUpdateAt())", "java.util.List<edu.zufe.rms.model.Order>.add(edu.zufe.rms.model.Order)"], "Fixed commit": "6a7db3db1f84f9eeec9333a7f27b002dde95cfb4", "Url": "https://api.github.com/repos/caoliangkun/restt_mgmt_sys", "Date": "2018-05-29T04:18:02Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flModifyRoot.getVisibility()) == (android.view.View.VISIBLE)) { modifyLoad(form.getUuid(), formLoad.getText().toString().trim(), flModify.getText().toString().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8060/buggy-version/app.src.main.java.cn.shomes.tfblue.BarCodeActivity.java", "BodyUseAPI": [], "Fixed commit": "f7c2636f0fd8e9fadb36757001689d7edd30cd98", "Url": "https://api.github.com/repos/kayoxu/TFBlue", "Date": "2018-10-23T18:10:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((second[0].length) == 1) { if ((second.length) == (first.length)) { for (int i = 0; i < (first.length); i++) { for (int j = 0; j < (first[0].length); j++) { values[i][j] = (first[i][j]) + (second[i][0]); } } }else { } }else if (((first.length) == (second.length)) && ((first[0].length) == (second[0].length))) { for (int i = 0; i < (first.length); i++) { for (int j = 0; j < (first[0].length); j++) { values[i][j] += (first[i][j]) + (second[i][j]); } } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9505/buggy-version/NNVisualizer.src.matrixMath.Operations.java", "BodyUseAPI": [], "Fixed commit": "78343c29ed3431e3e8a19cca1a70d76f28150057", "Url": "https://api.github.com/repos/williamlin1/NeuralNetwork", "Date": "2018-07-03T04:33:23Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (to == 0) { mIterator = new de.tischner.cobweb.util.collections.RangedListIterator(elements, from, elements.size()); }else { final java.util.Iterator<E> fromToEnd = new de.tischner.cobweb.util.collections.RangedListIterator(elements, from, elements.size()); final java.util.Iterator<E> startToTo = new de.tischner.cobweb.util.collections.RangedListIterator(elements, 0, to); mIterator = new de.tischner.cobweb.util.collections.DoubletonIterator(fromToEnd, startToTo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2219/buggy-version/backend.src.de.tischner.cobweb.util.collections.RangedOverflowListIterator.java", "BodyUseAPI": [], "Fixed commit": "643573aa906823dc1100071b9c356ba726b620a2", "Url": "https://api.github.com/repos/ZabuzaW/Cobweb", "Date": "2018-07-14T14:28:43Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (in != null) { try { in.close(); } catch (java.io.IOException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/388/buggy-version/src.main.java.io.nuls.api.utils.PropertiesUtils.java", "BodyUseAPI": [], "Fixed commit": "cf8335bdb1792dfb87ff2c1d7f216869dfd2b349", "Url": "https://api.github.com/repos/nuls-io/API-server", "Date": "2018-03-19T12:54:05Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(buffer.isEmpty())) { output.append(com.evan.pocketcalcplus.EquationPrettifier.convertStringToScientific(com.evan.pocketcalcplus.EquationPrettifier.concatenateBuffer(buffer))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8787/buggy-version/app.src.main.java.com.evan.pocketcalcplus.EquationPrettifier.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "com.evan.pocketcalcplus.EquationPrettifier.convertStringToScientific(java.lang.String)", "com.evan.pocketcalcplus.EquationPrettifier.concatenateBuffer(java.util.LinkedList<java.lang.Character>)"], "Fixed commit": "10bc4d3f256c4b273f4bf8b627acb3517ebcce74", "Url": "https://api.github.com/repos/MasterEric/CSI2999-2018WIN-Calculator", "Date": "2018-03-18T19:55:19Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(principal.getName().equals(library.getOwner()))) { return org.springframework.http.ResponseEntity.badRequest().body(library); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9741/buggy-version/src.com.jabb.jabbsee.controller.LibraryController.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity.badRequest().body(com.jabb.jabbsee.model.Library)"], "Fixed commit": "9bf7f6ef1e4512bed9e6e355d28ba0b1076d940c", "Url": "https://api.github.com/repos/JabbDevelopment/JabbSee_API", "Date": "2018-05-27T11:19:14Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(principal.getName().equals(library.getOwner()))) { return org.springframework.http.ResponseEntity.badRequest().body(library); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9741/buggy-version/src.com.jabb.jabbsee.controller.LibraryController.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity.badRequest().body(com.jabb.jabbsee.model.Library)"], "Fixed commit": "9bf7f6ef1e4512bed9e6e355d28ba0b1076d940c", "Url": "https://api.github.com/repos/JabbDevelopment/JabbSee_API", "Date": "2018-05-27T11:19:14Z"},
{"Line": "=>824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ocdReference.getHasIBMFinalWithDefault()) == false) { typeName = ((refElement.getCardinality()) == 1) ? ocdReference.getTypeName() : (ocdReference.getTypeName()) + \"-factory\"; }else { typeName = ((refElement.getCardinality()) == 1) ? ocdReference.getTypeName() : ocdReference.getTypeName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3205/buggy-version/dev.com.ibm.ws.config.src.com.ibm.ws.config.schemagen.internal.SchemaWriter.java", "BodyUseAPI": ["com.ibm.ws.config.schemagen.internal.TypeBuilder.OCDType.getTypeName()", "com.ibm.ws.config.schemagen.internal.TypeBuilder.OCDType.getTypeName()", "com.ibm.ws.config.schemagen.internal.TypeBuilder.OCDType.getTypeName()", "com.ibm.ws.config.schemagen.internal.TypeBuilder.OCDType.getTypeName()"], "Fixed commit": "06e1ee907ab97531819a083006f77b96bac1aac2", "Url": "https://api.github.com/repos/hlhoots/open-liberty", "Date": "2018-07-19T19:24:23Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!playerDrawn) && ((((arsprTiles[y][x].TILE_SIZE) * (((vTopLeft.y) - (player.getLocation().y)) + y)) + (player.nPixelY)) >= (player.nPixelY))) { player.draw(batch); playerDrawn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7487/buggy-version/core.src.gdx.pengwin.Release3_0.Chunk.java", "BodyUseAPI": ["gdx.pengwin.Release3_0.SprPlayer.draw(com.badlogic.gdx.graphics.g2d.SpriteBatch)"], "Fixed commit": "b6343d9ac32e2ba0e0582652129766046cc172c2", "Url": "https://api.github.com/repos/EricSchilha/PENGWIN", "Date": "2018-06-05T03:34:23Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (solr.containsKey(SolrFields.CONTENT_TYPE_SERVED)) { servedMime = ((java.lang.String) (solr.getField(SolrFields.CONTENT_TYPE_SERVED).getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8484/buggy-version/warc-indexer.src.main.java.uk.bl.wa.analyser.payload.WARCPayloadAnalysers.java", "BodyUseAPI": ["solr.getField(SolrFields.CONTENT_TYPE_SERVED).getValue()", "uk.bl.wa.solr.SolrRecord.getField(SolrFields.CONTENT_TYPE_SERVED)"], "Fixed commit": "64d050a3268e8cc43859cd63ef8e101ecf97b7a9", "Url": "https://api.github.com/repos/netarchivesuite/webarchive-discovery", "Date": "2018-03-13T09:24:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mid.length()) < (n)) comp = comp + (mid.substring(((n) + 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1358/buggy-version/src.hell.supersoul.magic.managers.ComboManager.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "806361bb68006bd065e4c001b2b55198c3c80f0c", "Url": "https://api.github.com/repos/SupersoulMC/SSMagic", "Date": "2018-05-01T10:28:24Z"},
{"Line": "=>932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (errorURL != null) { props.put(JavaEESecConstants.LOGIN_TO_CONTINUE_ERRORPAGE, errorURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3490/buggy-version/dev.com.ibm.ws.security.javaeesec.cdi.src.com.ibm.ws.security.javaeesec.cdi.extensions.JavaEESecCDIExtension.java", "BodyUseAPI": ["java.util.Properties.put(JavaEESecConstants.LOGIN_TO_CONTINUE_ERRORPAGE,java.lang.String)"], "Fixed commit": "f284b0b69e14a80b3ed62f19ca11aeeb9a5c0ee4", "Url": "https://api.github.com/repos/toshiyamamoto/open-liberty", "Date": "2018-01-30T19:44:57Z"},
{"Line": "=>937", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (contextRoot != null) { props.put(JavaEESecConstants.LOGIN_TO_CONTINUE_LOGIN_FORM_CONTEXT_ROOT, contextRoot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3490/buggy-version/dev.com.ibm.ws.security.javaeesec.cdi.src.com.ibm.ws.security.javaeesec.cdi.extensions.JavaEESecCDIExtension.java", "BodyUseAPI": ["java.util.Properties.put(JavaEESecConstants.LOGIN_TO_CONTINUE_LOGIN_FORM_CONTEXT_ROOT,java.lang.String)"], "Fixed commit": "f284b0b69e14a80b3ed62f19ca11aeeb9a5c0ee4", "Url": "https://api.github.com/repos/toshiyamamoto/open-liberty", "Date": "2018-01-30T19:44:57Z"},
{"Line": "=>929", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (loginURL != null) { props.put(JavaEESecConstants.LOGIN_TO_CONTINUE_LOGINPAGE, loginURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3490/buggy-version/dev.com.ibm.ws.security.javaeesec.cdi.src.com.ibm.ws.security.javaeesec.cdi.extensions.JavaEESecCDIExtension.java", "BodyUseAPI": ["java.util.Properties.put(JavaEESecConstants.LOGIN_TO_CONTINUE_LOGINPAGE,java.lang.String)"], "Fixed commit": "f284b0b69e14a80b3ed62f19ca11aeeb9a5c0ee4", "Url": "https://api.github.com/repos/toshiyamamoto/open-liberty", "Date": "2018-01-30T19:44:57Z"},
{"Line": "=>972", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (input != null) { if (!(input.startsWith(\"/\"))) { input = \"/\" + input; } if ((input.startsWith(contextRoot)) && ((input.charAt(contextRoot.length())) == '/')) { output = input.substring(contextRoot.length()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3490/buggy-version/dev.com.ibm.ws.security.javaeesec.cdi.src.com.ibm.ws.security.javaeesec.cdi.extensions.JavaEESecCDIExtension.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "f284b0b69e14a80b3ed62f19ca11aeeb9a5c0ee4", "Url": "https://api.github.com/repos/toshiyamamoto/open-liberty", "Date": "2018-01-30T19:44:57Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((step.getAuthToken()) != \"\") { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7306/buggy-version/src.main.java.org.sonarsource.scanner.jenkins.pipeline.WaitForQualityGateStep.java", "BodyUseAPI": [], "Fixed commit": "9a17984465d9655c470ab37ff9f991ccec3408db", "Url": "https://api.github.com/repos/abudaev/sonar-scanner-jenkins", "Date": "2018-04-25T14:54:16Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (migraCandidate.hasNeighbor()) { migraCandidate.addCandidate(org.elasql.server.migration.MigrationManager.vertexKeys.get(migraCandidate.getHotestNeighbor())); }else { java.lang.System.out.println(java.lang.String.format(\"This is %d iteration of look ahead, it cannot find more neighbor\", a)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2406/buggy-version/src.main.java.org.elasql.server.migration.MigrationManager.java", "BodyUseAPI": ["org.elasql.server.migration.Candidate.getHotestNeighbor()", "org.elasql.server.migration.Candidate.addCandidate(org.elasql.server.migration.MigrationManager.vertexKeys.get(migraCandidate.getHotestNeighbor()))", "java.util.HashMap<java.lang.Integer, org.elasql.server.migration.Vertex>.get(migraCandidate.getHotestNeighbor())"], "Fixed commit": "e2782d630c81652b3bbb97a3656f54e2e0066e5e", "Url": "https://api.github.com/repos/elasql/elasql", "Date": "2018-07-09T13:49:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (has) { chatHistory.deleteCharAt(((chatHistory.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5225/buggy-version/src.bg.chat.server.FileService.java", "BodyUseAPI": [], "Fixed commit": "c2ad6427279690ae2c4281d9aad60b194efd6c99", "Url": "https://api.github.com/repos/gdgenchev/Chat-Server", "Date": "2018-10-18T22:06:48Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PlayerInteractEvent.RightClickBlock.getEntityPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(playerIn.isCreative())) { playerIn.getHeldItem(hand).shrink(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2530/buggy-version/src.main.java.com.mowmaster.dust.handlers.PlaceableCrystals.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItem(net.minecraft.util.EnumHand)", "playerIn.getHeldItem(hand).shrink(int)"], "Fixed commit": "3d8f888ee3826ffc49d51572ccf2bb09deb9d1d1", "Url": "https://api.github.com/repos/Mowmaster/Dust", "Date": "2018-10-08T20:46:17Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getConfiguration().isSet(\"MySQL.Enabled\")) handleSQL();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8540/buggy-version/src.simplepets.brainsynder.PetCore.java", "BodyUseAPI": [], "Fixed commit": "8d5c70b76615a0f619e733ea5b03bf600cbaef65", "Url": "https://api.github.com/repos/brainsynder-Dev/SimplePets", "Date": "2018-01-15T19:47:46Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o instanceof java.lang.Integer) return ((java.lang.Integer) (o));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5211/buggy-version/src.main.java.com.appdynamics.extensions.solace.Helper.java", "BodyUseAPI": [], "Fixed commit": "e0fec507e8c13837c9269676a4a3b9865d1908f3", "Url": "https://api.github.com/repos/koverton/solace-monitoring-extension", "Date": "2018-04-04T18:04:39Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (svc.getName().equals(\"WEB\")) { result.put(ServiceMetrics.WebPort, svc.getListenPort().intValue()); result.put(ServiceMetrics.WebPortUp, (svc.getListenPortOperationalStatus().equals(\"Up\") ? 1 : 0)); com.solacesystems.semp_jaxb.r7_2_2.reply.RpcReply.Rpc.Show.Service.Services.Service2.Ssl ssl = svc.getSsl(); if (ssl != null) { result.put(ServiceMetrics.WebSslPort, ((int) (ssl.getListenPort()))); result.put(ServiceMetrics.WebSslPortUp, (ssl.getListenPortOperationalStatus().equals(\"Up\") ? 1 : 0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5211/buggy-version/src.main.java.com.appdynamics.extensions.solace.semp.r7_2_2.SempReplyFactory_r7_2_2.java", "BodyUseAPI": ["RpcReply.Rpc.Show.Service.Services.Service2.getListenPortOperationalStatus()", "java.util.Map<java.lang.String, java.lang.Object>.put(ServiceMetrics.WebPort,svc.getListenPort().intValue())", "RpcReply.Rpc.Show.Service.Services.Service2.getListenPort()", "svc.getListenPortOperationalStatus().equals(java.lang.String)", "RpcReply.Rpc.Show.Service.Services.Service2.getSsl()", "svc.getListenPort().intValue()", "java.util.Map<java.lang.String, java.lang.Object>.put(ServiceMetrics.WebPortUp,(svc.getListenPortOperationalStatus().equals(\"Up\") ? 1 : 0))"], "Fixed commit": "e0fec507e8c13837c9269676a4a3b9865d1908f3", "Url": "https://api.github.com/repos/koverton/solace-monitoring-extension", "Date": "2018-04-04T18:04:39Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isAlive()) p.getInjuries().clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1179/buggy-version/roles.Veteran.java", "BodyUseAPI": ["p.getInjuries().clear()", "shared.logic.Player.getInjuries()"], "Fixed commit": "4bd57a55d15bc58ec18eed0f6239615d524addcf", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2018-02-01T18:05:38Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog) != null) { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2432/buggy-version/app.src.main.java.com.ingsw_20.em17mobile.views.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "8f9d57b470fbaf0886108ab686aea502b5f5974a", "Url": "https://api.github.com/repos/andrea9293/EM17mobile---INGSW", "Date": "2018-04-20T18:09:18Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog) != null) { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2432/buggy-version/app.src.main.java.com.ingsw_20.em17mobile.views.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "8f9d57b470fbaf0886108ab686aea502b5f5974a", "Url": "https://api.github.com/repos/andrea9293/EM17mobile---INGSW", "Date": "2018-04-20T18:09:18Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (GUI.BasestationDB.url.contains(fileName)) { }else { GUI.BasestationDB.url += fileName; try (java.sql.Connection conn = java.sql.DriverManager.getConnection(GUI.BasestationDB.url)) { if (conn != null) { java.sql.DatabaseMetaData meta = conn.getMetaData(); java.sql.Statement stmt = conn.createStatement(); java.lang.String sql = \"CREATE TABLE IF NOT EXISTS BASESTATIONS \" + ((((\"(name VARCHAR(20) not NULL, \" + \" LATITUDE DOUBLE PRECISION not NULL, \") + \" LONGITUDE DOUBLE PRECISION not NULL, \") + \" MEASUREDPOWER DOUBLE PRECISION not NULL, \") + \" PRIMARY KEY ( name ))\"); stmt.executeUpdate(sql); } } catch (java.sql.SQLException e) { java.lang.System.out.println(e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5360/buggy-version/src.GUI.BasestationDB.java", "BodyUseAPI": [], "Fixed commit": "293fb1f45c565e7b4f8ba214b9577de3f24afc1b", "Url": "https://api.github.com/repos/ed343/Pheasants", "Date": "2018-04-14T11:09:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((poorListView.getItems().size()) > 0) { java.lang.String name = poorListView.getSelectionModel().getSelectedItem(); updateText(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6091/buggy-version/src.Control.StatsController.java", "BodyUseAPI": ["poorListView.getSelectionModel().getSelectedItem()", "javafx.scene.control.ListView.getSelectionModel()"], "Fixed commit": "818561eb92a8dd561a8c2f920d3ad3121a0b8e53", "Url": "https://api.github.com/repos/206TEAM/Project", "Date": "2018-10-07T05:47:21Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((naListView.getItems().size()) > 0) { java.lang.String name = naListView.getSelectionModel().getSelectedItem(); updateText(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6091/buggy-version/src.Control.StatsController.java", "BodyUseAPI": ["naListView.getSelectionModel().getSelectedItem()", "javafx.scene.control.ListView.getSelectionModel()"], "Fixed commit": "818561eb92a8dd561a8c2f920d3ad3121a0b8e53", "Url": "https://api.github.com/repos/206TEAM/Project", "Date": "2018-10-07T05:47:21Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((goodListView.getItems().size()) > 0) { java.lang.String name = goodListView.getSelectionModel().getSelectedItem(); updateText(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6091/buggy-version/src.Control.StatsController.java", "BodyUseAPI": ["javafx.scene.control.ListView<java.lang.String>.getSelectionModel()", "goodListView.getSelectionModel().getSelectedItem()"], "Fixed commit": "818561eb92a8dd561a8c2f920d3ad3121a0b8e53", "Url": "https://api.github.com/repos/206TEAM/Project", "Date": "2018-10-07T05:47:21Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (strSets.get(((strSets.size()) - 1)).isEmpty()) { strSets.remove(((strSets.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2261/buggy-version/java.parser.src.main.java.gov.lbl.parser.domain.Comment.java", "BodyUseAPI": ["java.util.List<java.lang.String>.remove(int)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "e499e605d664f958c3650a32e3ced13d41edf371", "Url": "https://api.github.com/repos/lbl-srg/modelica-json", "Date": "2018-03-07T17:26:57Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currToken.isNewline())) { edu.stanford.nlp.util.CoreMap nextSentence = sentences.get(currToken.get(CoreAnnotations.SentenceIndexAnnotation.class)); if (nextSentence.get(CoreAnnotations.ParagraphIndexAnnotation.class).equals(currQuoteBeginSentence.get(CoreAnnotations.ParagraphIndexAnnotation.class))) { isAloneInParagraph = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8469/buggy-version/src.edu.stanford.nlp.quoteattribution.Sieves.QMSieves.ConversationalSieve.java", "BodyUseAPI": ["java.util.List<edu.stanford.nlp.util.CoreMap>.get(currToken.get(CoreAnnotations.SentenceIndexAnnotation.class))", "edu.stanford.nlp.ling.CoreLabel.get(java.lang.Class)"], "Fixed commit": "dd808d39e60324f6322c583fd890e1f2d8ea4f5d", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2018-02-13T04:56:37Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((root.getBackground()) != null) { if (root instanceof com.qmuiteam.qmui.layout.IQMUILayout) { ((com.qmuiteam.qmui.layout.IQMUILayout) (root)).setRadius(getRootLayoutRadius(mContext)); }else { com.qmuiteam.qmui.layout.QMUIFrameLayout clipLayout = new com.qmuiteam.qmui.layout.QMUIFrameLayout(mContext); clipLayout.setRadius(getRootLayoutRadius(mContext)); clipLayout.addView(root); root = clipLayout; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2388/buggy-version/qmui.src.main.java.com.qmuiteam.qmui.widget.popup.QMUIPopup.java", "BodyUseAPI": ["com.qmuiteam.qmui.layout.QMUIFrameLayout.addView(android.view.View)"], "Fixed commit": "ff144a99050c38fbd80f304c511d60d5c613aa72", "Url": "https://api.github.com/repos/iZeroer/QMUI_Android", "Date": "2018-06-06T08:57:19Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alertDialog) != null) alertDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5077/buggy-version/app.src.main.java.com.oleynikov.hp.ggroup.activity.SplashActivity.java", "BodyUseAPI": [], "Fixed commit": "570bf5c04290cc91f8c297cb7db7272c4bc1947c", "Url": "https://api.github.com/repos/vladislove80/G_group", "Date": "2018-01-11T14:55:32Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextAstType == (com.puppycrawl.tools.checkstyle.api.TokenTypes.ENUM_CONSTANT_DEF)) { illegalToken = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9215/buggy-version/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.EnumTrailingCommaCheck.java", "BodyUseAPI": [], "Fixed commit": "bc2730a22bec2ae03924ee1e109abbcd1dffffff", "Url": "https://api.github.com/repos/kariem/sevntu.checkstyle", "Date": "2018-10-17T09:14:22Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getInt(java.lang.String)", "org.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((total_crime == 0) || (crime_tr == 0)) || (max == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4387/buggy-version/app.src.main.java.com.example.myapplication.LocationTracker.java", "BodyUseAPI": [], "Fixed commit": "c8f89edbaea655ac09f28fda4bec4704add8810a", "Url": "https://api.github.com/repos/bilalba/StatisticallySafeAndroid", "Date": "2018-01-14T15:13:03Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (crimeAtTime == 0.0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4387/buggy-version/app.src.main.java.com.example.myapplication.LocationTracker.java", "BodyUseAPI": [], "Fixed commit": "c8f89edbaea655ac09f28fda4bec4704add8810a", "Url": "https://api.github.com/repos/bilalba/StatisticallySafeAndroid", "Date": "2018-01-14T15:13:03Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastNotificationTime) != null) { android.text.format.Time now = new android.text.format.Time(); now.setToNow(); if (((now.toMillis(true)) - (lastNotificationTime.toMillis(true))) < 30000) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4387/buggy-version/app.src.main.java.com.example.myapplication.LocationTracker.java", "BodyUseAPI": [], "Fixed commit": "c8f89edbaea655ac09f28fda4bec4704add8810a", "Url": "https://api.github.com/repos/bilalba/StatisticallySafeAndroid", "Date": "2018-01-14T15:13:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (number.isIntegral()) { return number.longValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7180/buggy-version/src.main.java.com.fyr.talend.components.helper.JsonProcessingHelper.java", "BodyUseAPI": ["javax.json.JsonNumber.longValue()"], "Fixed commit": "c21f71a023b66d2c5979de375c2d21dbb37ed342", "Url": "https://api.github.com/repos/fyrz/fSolrTools", "Date": "2018-09-26T19:55:38Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (origin != null) { response.putHeader(\"Access-Control-Allow-Origin\", origin); response.putHeader(\"Vary\", \"Origin\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/280/buggy-version/web.src.main.java.com.blink.web.vertx.VertxWorker.java", "BodyUseAPI": ["io.vertx.core.http.HttpServerResponse.putHeader(java.lang.String,java.lang.String)"], "Fixed commit": "5df0f08d682aeab954f951f29b824988e7b73334", "Url": "https://api.github.com/repos/kasun90/blinkr", "Date": "2018-10-13T19:27:45Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (upload_id > 0) { workList.setUploadId(upload_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7286/buggy-version/server.play.app.controllers.WorkOrderController.java", "BodyUseAPI": ["controllers.WorkOrderList.setUploadId(java.lang.Integer)"], "Fixed commit": "73f990f619dbb13267f95d9e0a62dd58fba589aa", "Url": "https://api.github.com/repos/CarTLCapp/CarTLC", "Date": "2018-02-13T03:58:27Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.provider.DocumentsContract.getDocumentId(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(id))) { if (id.startsWith(\"raw:\")) { return id.replaceFirst(\"raw:\", \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6546/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.FileUtils.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "51c1816ce78146e5ffb08db9be1d230f0804a483", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2018-10-24T20:50:22Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fieldName.startsWith(\"SK_pred_java_primitive\")) { ar.edu.jdynalloy.binding.symboltable.FieldDescriptor fieldDescriptor_inv = new ar.edu.jdynalloy.binding.symboltable.FieldDescriptor(moduleName, (fieldName + \"_0\")); if (!(this.fieldsBinding.containsKey(fieldDescriptor_inv))) { for (ar.edu.jdynalloy.binding.symboltable.FieldDescriptor fd : this.fieldsBinding.keySet()) { if (fd.getFieldName().equals((fieldName + \"_0\"))) return this.fieldsBinding.get(fd); } }else { return this.fieldsBinding.get(fieldDescriptor); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6635/buggy-version/src.ar.edu.jdynalloy.binding.symboltable.SymbolTable.java", "BodyUseAPI": ["fd.getFieldName().equals(java.lang.String)"], "Fixed commit": "5cd490cfe4e87f3016dd605fb129423631083ccd", "Url": "https://api.github.com/repos/zeminlu/jdynalloy", "Date": "2018-06-15T17:31:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(extractedFontFolder.exists())) { if (!(extractedFontFolder.mkdir())) { throw new java.lang.RuntimeException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4038/buggy-version/src.com.github.capstone.Util.Helper.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "4eb5e8e75a539125da8256acfabb1b4765e86a9e", "Url": "https://api.github.com/repos/mocsarcade/twotris", "Date": "2018-02-19T23:39:39Z"},
{"Line": "=>1063", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstRun) { is.mark(is.available()); if (initIs != null) initIs.mark(initIs.available()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1419/buggy-version/dfu.src.main.java.no.nordicsemi.android.dfu.DfuBaseService.java", "BodyUseAPI": [], "Fixed commit": "6815654784a93bdb5eaf3fcd479ae6dc92564d2b", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-DFU-Library", "Date": "2018-10-17T13:01:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dieam.reactnativepushnotification.modules.RNPushNotification.getBundleFromIntent(android.content.Intent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (bundle != null) { bundle.putBoolean(\"foreground\", false); intent.putExtra(\"notification\", bundle); mJsDelivery.notifyNotification(bundle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5643/buggy-version/android.src.main.java.com.dieam.reactnativepushnotification.modules.RNPushNotification.java", "BodyUseAPI": ["android.os.Bundle.putBoolean(java.lang.String,boolean)", "com.dieam.reactnativepushnotification.modules.RNPushNotificationJsDelivery.notifyNotification(android.os.Bundle)", "android.content.Intent.putExtra(java.lang.String,android.os.Bundle)"], "Fixed commit": "1510612fd3015e2452b5fdfdbb5a47165cd82a9f", "Url": "https://api.github.com/repos/maxkomarychev/react-native-push-notification", "Date": "2018-07-31T02:48:02Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreCase) { return replaceIgnoreCase(replaceIgnoreCase(str, ((\"%\" + toReplace) + \"%\"), replaceWith), ((\"\\\\{\" + toReplace) + \"\\\\}\"), replaceWith); }else { return str.replace(toReplace, replaceWith); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3629/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Misc.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "5ce4cfeb38b32ca140022062b3fba19fa982cd76", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-03-04T20:56:57Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.quartz.JobDataMap.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (grmUtil.isOffline(productLineId)) { grmUtil.setOnline(productLineId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1806/buggy-version/grm.src.main.java.com.kuyun.grm.ReadDataJob.java", "BodyUseAPI": ["com.kuyun.grm.GrmUtil.setOnline(java.lang.String)"], "Fixed commit": "1f5d987a0f5e03fef7f8071264b23d2396d4d3cd", "Url": "https://api.github.com/repos/bobshi2005/dataCollection", "Date": "2018-02-27T13:38:54Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getCurrentItem().isSimilar(net.noodles.staffmodegui2.staffmodegui2.Inv.InvItems.MainInvItems.vanishMenu())) { if (!(player.hasPermission(\"staffmodegui.vanishmenu\"))) { player.sendMessage(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getPlugin().getConfig().getString(\"defaultMessage.noPermission\").replace(\"&\", \"\u00a7\")); } player.sendMessage(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getPlugin().getConfig().getString(\"vanishMenu.openGUI\").replace(\"&\", \"\u00a7\")); player.openInventory(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getInstance().getVanishInv().getInventory()); }else if (event.getCurrentItem().isSimilar(net.noodles.staffmodegui2.staffmodegui2.Inv.InvItems.MainInvItems.mobMenu())) { if (!(player.hasPermission(\"staffmodegui.mobmenu\"))) { player.sendMessage(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getPlugin().getConfig().getString(\"defaultMessage.noPermission\").replace(\"&\", \"\u00a7\")); } player.sendMessage(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getPlugin().getConfig().getString(\"mobMenu.openGUI\").replace(\"&\", \"\u00a7\")); player.openInventory(net.noodles.staffmodegui2.staffmodegui2.StaffModeGUI2.getInstance().getMobInv().getInventory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1159/buggy-version/src.main.java.net.noodles.staffmodegui2.staffmodegui2.Inv.MainInv.java", "BodyUseAPI": ["event.getCurrentItem().isSimilar(net.noodles.staffmodegui2.staffmodegui2.Inv.InvItems.MainInvItems.mobMenu())", "org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()"], "Fixed commit": "9771c87ac14df802a909a3c616e4db52a735ad39", "Url": "https://api.github.com/repos/BGHDDevelopment/StaffModeGUI2", "Date": "2018-09-23T00:40:20Z"},
{"Line": "=>3389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_shallUpdateScrollPos) { renderer.render(\"_listbox$shallUpdateScrollPos\", true); _shallUpdateScrollPos = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/715/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "adc99c83dbbd65dd832663ea2099574f385db24f", "Url": "https://api.github.com/repos/wenninghsu/zk", "Date": "2018-08-31T11:12:20Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (action.equals(\"editPhone\")) { }else if (action.equals(\"editHours\")) { }else if (action.equals(\"add\")) { us.addUser(username, address, arrayPhoneIdNew, password, firstname, lastname, role, email, hourlyRate); request.setAttribute(\"errorMessage\", \"User Added\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8683/buggy-version/src.java.servlets.UserServlet.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "938a10570d28a4611631ab84319eb54160982494", "Url": "https://api.github.com/repos/zsolttorok1/capstone", "Date": "2018-02-21T18:47:18Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eem209as.smartunlock.BLEUtils.getDeviceList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((deviceList != null) && ((deviceList.size()) != 0)) { postDataParams.put(\"bluetooth name\", deviceList.get(0).getName()); postDataParams.put(\"bluetooth MAC\", deviceList.get(0).getAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1192/buggy-version/SmartUnlock.app.src.main.java.eem209as.smartunlock.MainActivity.java", "BodyUseAPI": ["deviceList.get(0).getName()", "java.util.List<android.bluetooth.BluetoothDevice>.get(int)", "org.json.JSONObject.put(java.lang.String,deviceList.get(0).getName())", "deviceList.get(0).getAddress()", "java.util.List<android.bluetooth.BluetoothDevice>.get(int)", "org.json.JSONObject.put(java.lang.String,deviceList.get(0).getAddress())"], "Fixed commit": "a53d52912de6d85e5ce356ac3de11f6680bf6406", "Url": "https://api.github.com/repos/caiboyang/SmartUnlock", "Date": "2018-03-23T18:19:13Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nimbusds.openid.connect.sdk.claims.UserInfo.getStringListClaim(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (claims != null) { roles.addAll(claims); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4664/buggy-version/src.main.java.mx.nic.rdap.auth.openidc.AuthenticationFlow.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "657786759cb0c568c3db895c4efa30286e09a90e", "Url": "https://api.github.com/repos/pcarana/rdap-openidc-auth", "Date": "2018-04-25T21:49:19Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((payment.equals(\"fame\")) && ((GameSystem.currentPlay.getFame()) < (Room.upgradeTable[(rank - 2)][1]))) { GameSystem.display.println(\"Improper input: you cannot afford this upgrade.\"); }else { properInput = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1548/buggy-version/GameSystem.java", "BodyUseAPI": [], "Fixed commit": "e18fcd34d07e1b3a5101fe3246073dae69d8be0f", "Url": "https://api.github.com/repos/pickern/deadwood-usa", "Date": "2018-06-09T03:01:41Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((itemComboBox.getSelectedItem()) != null) { itemIndexSpinner.setValue(0); itemIndexSpinnerModel.setMaximum(((editor.getItemCount(((java.lang.String) (itemComboBox.getSelectedItem())))) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5198/buggy-version/GMG3D.src.EditorGUI.java", "BodyUseAPI": ["javax.swing.JComboBox<java.lang.String>.getSelectedItem()", "javax.swing.SpinnerNumberModel.setMaximum(((editor.getItemCount(((java.lang.String) (itemComboBox.getSelectedItem())))) - 1))", "Editor.getItemCount(java.lang.Object)"], "Fixed commit": "9475d7fb19e3ba7d0296dac0c01fa7d6a499dd75", "Url": "https://api.github.com/repos/GMGMaker/GMG3D", "Date": "2018-02-16T21:46:34Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4140/buggy-version/assignment2.extra.src.ExtraCreditApp.java", "BodyUseAPI": [], "Fixed commit": "4df42a8e7608349f92ece3cdb81fb8b249234013", "Url": "https://api.github.com/repos/bananos/dis2", "Date": "2018-04-29T19:55:55Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((icDay - iNewsDay) == 1) { publishedAt = (java.lang.String.valueOf((icDay - iNewsDay))) + \" day ago\"; }else { publishedAt = (java.lang.String.valueOf((icDay - iNewsDay))) + \" days ago\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/440/buggy-version/app.src.main.java.com.lequiz.practice.custom_query_utils.QueryUtilsCurrentAffairs.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)"], "Fixed commit": "7768f5e56af9d4fc433a5f2da448d93acfd338df", "Url": "https://api.github.com/repos/ramshekrana/Practice", "Date": "2018-10-27T07:41:44Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) user.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6622/buggy-version/app.src.main.java.com.meivaldi.comburchat.RegisterContinueActivity.java", "BodyUseAPI": [], "Fixed commit": "48c37523359e6c389f9fbb9d63b1befdd32ee8c4", "Url": "https://api.github.com/repos/meivaldi/combur-chat", "Date": "2018-01-02T00:53:26Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (score.getParts().get(i).getMeasures().get(j).getTime().getBeats().equals(\"\")) { score.getParts().get(i).getMeasures().get(j).getTime().setBeats(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7405/buggy-version/musicowl.src.main.java.de.wwu.music2rdf.converter.MusicXML2RDF.java", "BodyUseAPI": ["de.wwu.music2rdf.core.MusicScore.getParts()", "score.getParts().get(i).getMeasures().get(j).getTime().setBeats(java.lang.String)", "score.getParts().get(i).getMeasures().get(int)", "score.getParts().get(i).getMeasures()", "score.getParts().get(int)", "score.getParts().get(i).getMeasures().get(j).getTime()"], "Fixed commit": "f2a83c84889e92f7fcf0e696c4d6523170c1430a", "Url": "https://api.github.com/repos/jimjonesbr/musicowl", "Date": "2018-09-28T16:16:34Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (score.getParts().get(i).getMeasures().get(j).getTime().getBeatType().equals(\"\")) { score.getParts().get(i).getMeasures().get(j).getTime().setBeatType(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7405/buggy-version/musicowl.src.main.java.de.wwu.music2rdf.converter.MusicXML2RDF.java", "BodyUseAPI": ["score.getParts().get(i).getMeasures().get(int)", "score.getParts().get(i).getMeasures().get(j).getTime()", "de.wwu.music2rdf.core.MusicScore.getParts()", "score.getParts().get(int)", "score.getParts().get(i).getMeasures()", "score.getParts().get(i).getMeasures().get(j).getTime().setBeatType(java.lang.String)"], "Fixed commit": "f2a83c84889e92f7fcf0e696c4d6523170c1430a", "Url": "https://api.github.com/repos/jimjonesbr/musicowl", "Date": "2018-09-28T16:16:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getSecurityManager()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (sm != null) { sm.checkPermission(new org.elasticsearch.SpecialPermission()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7368/buggy-version/src.main.java.com.searchly.riemann.service.RiemannService.java", "BodyUseAPI": ["java.lang.SecurityManager.checkPermission(org.elasticsearch.SpecialPermission)"], "Fixed commit": "682c0d827fe1d28905e82a0f7c87d6ec2ddac28c", "Url": "https://api.github.com/repos/searchly/elasticsearch-monitoring-riemann-plugin", "Date": "2018-01-16T10:21:34Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Vector.elementAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((go instanceof com.siemens.mp.game.Sprite) && (go.getVisible())) { ((com.siemens.mp.game.Sprite) (go)).paint(g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5521/buggy-version/app.src.main.java.com.siemens.mp.game.GraphicObjectManager.java", "BodyUseAPI": [], "Fixed commit": "2958ac640089d5329f90c695eb60a3ffb8b23d42", "Url": "https://api.github.com/repos/nikita36078/J2ME-Loader", "Date": "2018-06-29T08:29:19Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.BASIC_PURIFIER) com.mjr.mjrlegendslib.util.ClientUtilities.registerBlockJson(Constants.TEXTURE_PREFIX, ExtraPlanets_Machines.BASIC_PURIFIER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8581/buggy-version/src.main.java.com.mjr.extraplanets.proxy.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "d0199513b067ee88c1114a6a01c9633b0f75bd69", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-03-06T02:33:39Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) != null) { return value.replace(((label) + \"#\"), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5766/buggy-version/src.main.java.com.terragoedge.edgeserver.EdgeFormData.java", "BodyUseAPI": [], "Fixed commit": "3ac60412d2ac85178c6c5b11e4795243cc219a5e", "Url": "https://api.github.com/repos/terragotech/streetlight", "Date": "2018-02-16T12:20:16Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (email == null) { emailET.setError(\"Required.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5464/buggy-version/app.src.main.java.emasterson.finalyearandroid.LoginRegistrationActivity.java", "BodyUseAPI": [], "Fixed commit": "b427a3ab17c1594a533920de12f873a1002caddd", "Url": "https://api.github.com/repos/EvanMasterson/FinalYearAndroid", "Date": "2018-05-12T10:46:55Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getMetaData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (metadata != null) { columnCount = metadata.getColumnCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9449/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.mysql.MySQL.java", "BodyUseAPI": ["java.sql.ResultSetMetaData.getColumnCount()"], "Fixed commit": "349855cc620faaf5707ce555d2d3e05a5619c8cc", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-07-26T20:38:41Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["readControllers[lowest].readNextLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (nextLine == null) entryCache[lowest] = null; else entryCache[lowest].parse(nextLine);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3474/buggy-version/src.projectOne.multiMergeSort.MultiMerge.java", "BodyUseAPI": ["entryCache[lowest].parse(java.lang.String)"], "Fixed commit": "1f65937e63868ce0ccb3cf57ccd10aadfbc44dbf", "Url": "https://api.github.com/repos/pcristo/ADT-W18", "Date": "2018-02-15T00:51:39Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.isEmpty()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/930/buggy-version/library.src.main.java.com.vansuita.pickimage.resolver.IntentResolver.java", "BodyUseAPI": [], "Fixed commit": "362ab7639e417bf43bdb36da23bfb06cf6322a31", "Url": "https://api.github.com/repos/SudoToEat/PickImage", "Date": "2018-06-01T09:34:48Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((writedCounter) > 100) { fileWriter.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4273/buggy-version/src.main.java.pers.steve.sensor.item.SensorIMU.java", "BodyUseAPI": [], "Fixed commit": "a65e946400e2196de8680f5adc5f98c4b978a18f", "Url": "https://api.github.com/repos/wystephen/SensorManager", "Date": "2018-01-08T12:25:14Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cellsNext[r][c]) == 0) { cellsNext[r][c] = cellsNow[r][c]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/647/buggy-version/src.PathFinderGame.java", "BodyUseAPI": [], "Fixed commit": "91cb93ada40dae75e66af9e20b6cf258de97cb28", "Url": "https://api.github.com/repos/Algorithms-DrBaharav/alg-shortestpath-2darray-student-blackharr", "Date": "2018-10-10T03:07:02Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cellsNext[r][c]) == 0) { cellsNext[r][c] = cellsNow[r][c]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/647/buggy-version/src.PathFinderGame.java", "BodyUseAPI": [], "Fixed commit": "91cb93ada40dae75e66af9e20b6cf258de97cb28", "Url": "https://api.github.com/repos/Algorithms-DrBaharav/alg-shortestpath-2darray-student-blackharr", "Date": "2018-10-10T03:07:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.physics.box2d.Contact.getFixtureA()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((getSpeed(fa.getBody().getLinearVelocity())) > 10) { ((models.entities.Box) (fa.getBody().getUserData())).isHit(true); gameWorld.addBodyToDestroy(fb); java.lang.System.out.println(getSpeed(fa.getBody().getLinearVelocity())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4898/buggy-version/core.src.models.GameCollision.java", "BodyUseAPI": ["((models.entities.Box) (fa.getBody().getUserData())).isHit(boolean)", "com.badlogic.gdx.physics.box2d.Fixture.getBody()", "com.badlogic.gdx.physics.box2d.Fixture.getBody()", "java.io.PrintStream.println(double)", "fa.getBody().getLinearVelocity()", "models.GameCollision.getSpeed(fa.getBody().getLinearVelocity())", "fa.getBody().getUserData()"], "Fixed commit": "5788569831a12113f865eee897d3294746f7b3c7", "Url": "https://api.github.com/repos/jorgenmortensen/CastleCrush", "Date": "2018-04-16T16:20:19Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context.getClass().getName().equals(com.example.pscurzytek.bakingapp.activities.RecipeDetailsActivity.class.getName())) { stepSelectedListener = ((com.example.pscurzytek.bakingapp.interfaces.OnStepSelectedListener) (context)); isBigScreen = stepSelectedListener.isBigScreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1161/buggy-version/app.src.main.java.com.example.pscurzytek.bakingapp.fragments.StepDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "ed87c6c330c9488073244cfb3dc40945cfbb753a", "Url": "https://api.github.com/repos/Stropek/baking-app", "Date": "2018-06-04T00:55:00Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[0]) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6886/buggy-version/src.main.java.io.github.switefaster.evalwar.command.CommandEvalWarSetup.java", "BodyUseAPI": [], "Fixed commit": "e59b10d9a7aa8993c3ca62858c7d2c48d02b2289", "Url": "https://api.github.com/repos/switefaster/EvaluationWar", "Date": "2018-01-09T04:00:06Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.b3log.symphony.repository.CommentRepository.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (null != originalCmt) { organizeComment(avatarViewMode, originalCmt); comment.put(Comment.COMMENT_T_ORIGINAL_AUTHOR_THUMBNAIL_URL, originalCmt.optString(Comment.COMMENT_T_AUTHOR_THUMBNAIL_URL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7251/buggy-version/src.main.java.org.b3log.symphony.service.CommentQueryService.java", "BodyUseAPI": ["org.json.JSONObject.optString(Comment.COMMENT_T_AUTHOR_THUMBNAIL_URL)", "org.b3log.symphony.service.CommentQueryService.organizeComment(int,org.json.JSONObject)", "org.json.JSONObject.put(Comment.COMMENT_T_ORIGINAL_AUTHOR_THUMBNAIL_URL,originalCmt.optString(Comment.COMMENT_T_AUTHOR_THUMBNAIL_URL))"], "Fixed commit": "45372c852750e036c778296503d9a6701eed2d82", "Url": "https://api.github.com/repos/b3log/symphony", "Date": "2018-08-08T12:46:28Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.devicehive.service.BaseUserService.findUserWithDeviceType(existingPlugin.getUserId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(userWithDeviceTypeVO.getAllDeviceTypesAvailable())) { principal.setAllDeviceTypesAvailable(false); principal.setDeviceTypeIds(userWithDeviceTypeVO.getDeviceTypes().stream().map(DeviceTypeVO::getId).collect(java.util.stream.Collectors.toSet())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8270/buggy-version/devicehive-common-service.src.main.java.com.devicehive.auth.rest.providers.JwtTokenAuthenticationProvider.java", "BodyUseAPI": ["userWithDeviceTypeVO.getDeviceTypes().stream()", "com.devicehive.auth.rest.providers.UserWithDeviceTypeVO.getDeviceTypes()", "com.devicehive.auth.HivePrincipal.setDeviceTypeIds(userWithDeviceTypeVO.getDeviceTypes().stream().map(DeviceTypeVO::getId).collect(java.util.stream.Collectors.toSet()))", "userWithDeviceTypeVO.getDeviceTypes().stream().map(DeviceTypeVO::getId).collect(java.util.stream.Collector<java.lang.Object, ?, java.util.Set<java.lang.Object>>)", "userWithDeviceTypeVO.getDeviceTypes().stream().map(DeviceTypeVO::getId)"], "Fixed commit": "1a16711f8900d47e405cb0575ba96d191764e1c0", "Url": "https://api.github.com/repos/devicehive/devicehive-java-server", "Date": "2018-02-26T12:03:51Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.startsWith(\"HTTP request failed\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1130/buggy-version/soap.src.main.java.com.zyy.soap.result.ResultUtil.java", "BodyUseAPI": [], "Fixed commit": "879d7ad1be3d04846d0e45b306d940e7ea91627c", "Url": "https://api.github.com/repos/peterzhen40/SoapAndroid", "Date": "2018-10-31T09:32:31Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.opensha.sha.calc.hazardMap.HazardCurveSetCalculator.D) java.lang.System.out.println((\"Max Source Cutoff: \" + (calcSettings.getMaxSourceDistance())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3180/buggy-version/src.org.opensha.sha.calc.hazardMap.HazardCurveSetCalculator.java", "BodyUseAPI": [], "Fixed commit": "7fc2686d60d24b350b3a7dc8ec874d702cc9cb10", "Url": "https://api.github.com/repos/pmpowers-usgs/opensha-core", "Date": "2018-02-17T01:37:15Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.alfresco.repo.content.transform.TransformerDebug.getNodeRef(org.alfresco.service.cmr.repository.TransformationOptions,boolean,long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(nodeRef.isEmpty())) { log(nodeRef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3867/buggy-version/src.main.java.org.alfresco.repo.content.transform.TransformerDebug.java", "BodyUseAPI": ["org.alfresco.repo.content.transform.TransformerDebug.log(java.lang.String)"], "Fixed commit": "32abc797f81a279d1c13951b1921d28109e43ea8", "Url": "https://api.github.com/repos/Alfresco/alfresco-repository", "Date": "2018-10-23T14:47:10Z"},
{"Line": "=>3105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gregtech.api.GregTech_API.mIC2Classic)) { GT_Values.RA.addFermentingRecipe(new net.minecraftforge.fluids.FluidStack(net.minecraftforge.fluids.FluidRegistry.getFluid(\"ic2biomass\"), 100), Materials.FermentedBiomass.getFluid(100), 150, false); GT_Values.RA.addPyrolyseRecipe(gregtech.loaders.postload.GT_ModHandler.getIC2Item(\"biochaff\", 1), Materials.Water.getFluid(1500), 2, GT_Values.NI, Materials.FermentedBiomass.getFluid(1500), 200, 10); GT_Values.RA.addPyrolyseRecipe(GT_Values.NI, new net.minecraftforge.fluids.FluidStack(net.minecraftforge.fluids.FluidRegistry.getFluid(\"ic2biomass\"), 1000), 2, GT_Values.NI, Materials.FermentedBiomass.getFluid(1000), 100, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6478/buggy-version/src.main.java.gregtech.loaders.postload.GT_MachineRecipeLoader.java", "BodyUseAPI": [], "Fixed commit": "482688c2d65f89d2f7f32623debe035caec72a9b", "Url": "https://api.github.com/repos/JohannesGaessler/GT5-Unofficial", "Date": "2018-02-06T15:11:36Z"},
{"Line": "=>3125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gregtech.api.GregTech_API.mIC2Classic)) { GT_Values.RA.addDistilleryRecipe(17, Materials.FermentedBiomass.getFluid(1000), new net.minecraftforge.fluids.FluidStack(net.minecraftforge.fluids.FluidRegistry.getFluid(\"ic2biogas\"), 1800), ItemList.IC2_Fertilizer.get(1, new java.lang.Object[0]), 1600, 8, false); GT_Values.RA.addDistilleryRecipe(1, Materials.Methane.getGas(1000), new net.minecraftforge.fluids.FluidStack(net.minecraftforge.fluids.FluidRegistry.getFluid(\"ic2biogas\"), 3000), GT_Values.NI, 160, 8, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6478/buggy-version/src.main.java.gregtech.loaders.postload.GT_MachineRecipeLoader.java", "BodyUseAPI": [], "Fixed commit": "482688c2d65f89d2f7f32623debe035caec72a9b", "Url": "https://api.github.com/repos/JohannesGaessler/GT5-Unofficial", "Date": "2018-02-06T15:11:36Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.svaleror.unionlulauncher.util.OSUtils.isWindows()) { git = org.eclipse.jgit.api.Git.cloneRepository().setFs(new com.svaleror.unionlulauncher.logic.FS_Win32_NoGit()).setURI(\"https://github.com/VSeryi/mcunionlu.git\").setDirectory(minecraftFolder).call(); }else { git = org.eclipse.jgit.api.Git.cloneRepository().setURI(\"https://github.com/VSeryi/mcunionlu.git\").setDirectory(minecraftFolder).call(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3500/buggy-version/launcher.project.src.main.java.com.svaleror.unionlulauncher.workers.UpdaterWorker.java", "BodyUseAPI": [], "Fixed commit": "f3387ba12d2f965725f235d2551640389924ec29", "Url": "https://api.github.com/repos/VSeryi/mcunionlu-launcher", "Date": "2018-01-16T22:44:00Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(commandArgs.equals(\"\"))) { final java.util.Set<java.lang.String> keywords = seedu.addressbook.AddressBook.extractKeywordsFromFindPersonArgs(commandArgs); personsFound = seedu.addressbook.AddressBook.getPersonsWithNameContainingAnyKeyword(keywords); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5679/buggy-version/src.seedu.addressbook.AddressBook.java", "BodyUseAPI": ["seedu.addressbook.AddressBook.extractKeywordsFromFindPersonArgs(java.lang.String)"], "Fixed commit": "b5d9f70085b1090706b2caa6457acb99ccdd7a2c", "Url": "https://api.github.com/repos/kush1509/addressbook-level1", "Date": "2018-01-30T13:40:35Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentColor) != null) { return new javax.swing.JColorChooser(currentColor); }else { return new javax.swing.JColorChooser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3315/buggy-version/src.main.java.org.sing_group.gc4s.input.JColorChooserButton.java", "BodyUseAPI": [], "Fixed commit": "e77124427bff80e53c684dc3ac4f3da3c003b5d2", "Url": "https://api.github.com/repos/sing-group/GC4S", "Date": "2018-01-17T13:05:59Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.dangernoodle.grt.steps.AddTeamsAndCollaborators.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ghUser == null) { logger.warn(\"failed to find user [{}]\", user); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8754/buggy-version/core.src.main.java.io.dangernoodle.grt.steps.AddTeamsAndCollaborators.java", "BodyUseAPI": [], "Fixed commit": "daf174565b77cb30b04e2b1b80cf803b1560131d", "Url": "https://api.github.com/repos/dangernoodle-io/github-repository-tools", "Date": "2018-05-06T03:22:12Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.dangernoodle.grt.steps.AddTeamsAndCollaborators.getTeam(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ghTeam == null) { logger.warn(\"failed to find team using slug [{}]\", team); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8754/buggy-version/core.src.main.java.io.dangernoodle.grt.steps.AddTeamsAndCollaborators.java", "BodyUseAPI": [], "Fixed commit": "daf174565b77cb30b04e2b1b80cf803b1560131d", "Url": "https://api.github.com/repos/dangernoodle-io/github-repository-tools", "Date": "2018-05-06T03:22:12Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numZero == 4) { android.widget.Toast.makeText(getApplicationContext(), \"Please select number of rooms!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4537/buggy-version/app.src.main.java.com.kangw.hotelreservationsystem.SearchResult.java", "BodyUseAPI": [], "Fixed commit": "69eaa9bb6b6318afe714681ad231d9e75aed7c07", "Url": "https://api.github.com/repos/kangwennlee/HotelReservationSystem", "Date": "2018-08-15T19:25:19Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (handler == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9226/buggy-version/src.mindroid.util.concurrent.AsyncAwait.java", "BodyUseAPI": [], "Fixed commit": "1d15e2ad6e470656b0320fbd5344f6010d8abcc0", "Url": "https://api.github.com/repos/Himmele/Mindroid.java", "Date": "2018-07-02T10:56:18Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(((entity.getRoomUser().getPosition().getZ()) - (roller.getPosition().getZ())))) >= 0.1) { if (((nextTile.getHighestItem()) != null) && (nextTile.getHighestItem().hasBehaviour(ItemBehaviour.ROLLER))) { nextPosition.setZ(((roller.getPosition().getZ()) + (roller.getDefinition().getTopHeight()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9687/buggy-version/Kepler-Server.src.main.java.org.alexdev.kepler.game.item.roller.EntityRollingAnalysis.java", "BodyUseAPI": ["org.alexdev.kepler.game.pathfinder.Position.setZ(((roller.getPosition().getZ()) + (roller.getDefinition().getTopHeight())))", "roller.getPosition().getZ()", "org.alexdev.kepler.game.item.Item.getPosition()", "roller.getDefinition().getTopHeight()", "org.alexdev.kepler.game.item.Item.getDefinition()"], "Fixed commit": "bacdd7a139d4b1ae7f5984aa2f80d60557d3fdb7", "Url": "https://api.github.com/repos/emansom/Kepler", "Date": "2018-07-19T12:30:35Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedWay.getJSONObject(\"tags\").has(\"name\")) selectedWay.put(\"name\", selectedWay.getJSONObject(\"tags\").getString(\"name\")); else selectedWay.put(\"name\", \"Unknown\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1574/buggy-version/src.com.commeto.assistant.ProcessingHandler.java", "BodyUseAPI": ["org.codehaus.jettison.json.JSONObject.put(java.lang.String,java.lang.String)", "selectedWay.getJSONObject(\"tags\").getString(java.lang.String)", "org.codehaus.jettison.json.JSONObject.put(java.lang.String,selectedWay.getJSONObject(\"tags\").getString(\"name\"))", "org.codehaus.jettison.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "393c6580c3fe7f126a24bdac27dc80bc2f5683cb", "Url": "https://api.github.com/repos/Valcking/MobileProfileAssistant", "Date": "2018-04-17T12:20:41Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delimeter.equals(\"/\")) { return new java.lang.String[]{ str.substring(0, i), str.substring(i) }; }else { return new java.lang.String[]{ str.substring(0, i), str.substring((i + (delimeter.length()))) }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7545/buggy-version/minijax-core.src.main.java.org.minijax.uri.MinijaxUriBuilder.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int)"], "Fixed commit": "93a4bfd92daeb0a7b0b530dbc72fb06752bd9a00", "Url": "https://api.github.com/repos/minijax/minijax", "Date": "2018-05-22T16:30:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(char,char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (qualifier.startsWith(\".\")) { qualifier = qualifier.substring(((qualifier.indexOf(\".\")) + 1), qualifier.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7623/buggy-version/tregression.src.main.tregression.separatesnapshots.diff.FilePairWithDiff.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "2df2f651aa99f09b0c7cb78ac656a77807812bd9", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2018-04-27T07:15:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1208/buggy-version/src.leetcode.Pathsum.java", "BodyUseAPI": [], "Fixed commit": "8089774711e41d9dc38d1b8ac0736ddb27bad0ab", "Url": "https://api.github.com/repos/nanofaroque/Life-coding", "Date": "2018-09-13T20:54:01Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (osName.toLowerCase().startsWith(\"mac\")) { LibC.INSTANCE.setenv(\"VLC_DATA_PATH\", \"/Applications/VLC.app/Contents/MacOS/share\", 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1242/buggy-version/src.org.teachothers.fishwatchr.FishWatchr.java", "BodyUseAPI": [], "Fixed commit": "9f3a115c9f27f2c5cf04b07c055250be70943000", "Url": "https://api.github.com/repos/himawari-san/FishWatchr", "Date": "2018-02-15T12:12:19Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(codes.fepi.lib.GameVar.paused)) { spawntime -= Gdx.graphics.getDeltaTime(); spawnEnemies(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2099/buggy-version/core.src.codes.fepi.manager.SpawnManager.java", "BodyUseAPI": [], "Fixed commit": "7c6d526eb94e6d52fb858fa74340209df630e39f", "Url": "https://api.github.com/repos/AUTplayed/FepiShoot", "Date": "2018-04-18T10:53:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.impl.client.CloseableHttpClient.execute(org.apache.http.client.methods.HttpPost)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((response.getStatusLine().getStatusCode()) == (org.apache.http.HttpStatus.SC_OK)) { org.apache.http.HttpEntity entity = response.getEntity(); if (entity != null) { org.json.JSONObject json = new org.json.JSONObject(org.apache.http.util.EntityUtils.toString(entity)); return json; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7307/buggy-version/image-analyzer.src.main.java.com.example.demo.ImageAnalysisService.java", "BodyUseAPI": ["org.apache.http.HttpResponse.getEntity()"], "Fixed commit": "d7117884437d10de169e0e6e95fb1bda40c6baa1", "Url": "https://api.github.com/repos/yaweiw/springonedemo", "Date": "2018-07-26T06:16:29Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.equalsIgnoreCase(kv.getValue(), \"N/A\"))) { org.openlmis.report.generator.StockOnHandStatus stockOnHandStatus = stockStatusService.getStockOnHandStatus(cmm, org.apache.commons.lang3.math.NumberUtils.toLong(kv.getValue()), productCode); styleMap.put(\"color\", stockOnHandStatus.getColor()); tmpValue.put(\"style\", styleMap); tmpValue.put(\"status\", stockOnHandStatus); }else { tmpValue.put(\"status\", StockOnHandStatus.NOT_EXIST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9281/buggy-version/modules.report.src.main.java.org.openlmis.report.generator.impl.NosDrugReportGenerator.java", "BodyUseAPI": ["org.openlmis.report.service.StockStatusService.getStockOnHandStatus(long,org.apache.commons.lang3.math.NumberUtils.toLong(kv.getValue()),java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "org.apache.commons.lang3.math.NumberUtils.toLong(java.lang.String)"], "Fixed commit": "2aacc16ce6e5c598fdcefd7e7d2bd8ed6619bf14", "Url": "https://api.github.com/repos/SIGLUS/open-lmis", "Date": "2018-10-23T14:02:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.smartregister.stock.openlmis.intent.helper.OpenLMISStockSyncHelper.getStockFromPayload(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((Stock_arrayList.size()) == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7120/buggy-version/openlmis-stock.src.main.java.org.smartregister.stock.openlmis.intent.helper.OpenLMISStockSyncHelper.java", "BodyUseAPI": [], "Fixed commit": "97c8a8c463c1a89d82d26f614f64864e5ed745a8", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client-stock", "Date": "2018-09-14T15:07:39Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)", "android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((user != null) && (pass != null)) { if (shared.getBoolean(\"only_wifi\", false)) { android.net.ConnectivityManager cm = ((android.net.ConnectivityManager) (c.getSystemService(Context.CONNECTIVITY_SERVICE))); if (cm != null) { android.net.NetworkInfo wifiNetwork = cm.getNetworkInfo(ConnectivityManager.TYPE_WIFI); if ((wifiNetwork != null) && (wifiNetwork.isConnected())) { new com.oliver.bathurst.individualproject.UpdateDatabase.SendLocationToDB(user, pass).execute(); } } }else { new com.oliver.bathurst.individualproject.UpdateDatabase.SendLocationToDB(user, pass).execute(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7508/buggy-version/app.src.main.java.com.oliver.bathurst.individualproject.UpdateDatabase.java", "BodyUseAPI": ["com.oliver.bathurst.individualproject.UpdateDatabase.SendLocationToDB.execute()", "com.oliver.bathurst.individualproject.UpdateDatabase.SendLocationToDB.execute()"], "Fixed commit": "798990e19c13ecbb9b7a97720331b7df8195a0ea", "Url": "https://api.github.com/repos/OliverBathurst/Individual-Project", "Date": "2018-01-04T17:22:31Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stats.hasAllResources())) { failure(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7478/buggy-version/projectpodship.src.main.java.podship.logic.TravelLogic.java", "BodyUseAPI": [], "Fixed commit": "9bf11c0017ecbb1b84431a92ee0e3ef2a3535de7", "Url": "https://api.github.com/repos/Granigan/otm-harjoitustyo", "Date": "2018-05-02T20:25:06Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flopedcards) < 5) { switch (flopedcards) { case 3 : kartentisch[3] = flop(lbC4); break; case 4 : kartentisch[4] = flop(lbC5); break; } (flopedcards)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4157/buggy-version/SlotPark.src.gui.PokerGUI.java", "BodyUseAPI": [], "Fixed commit": "636e4fb20b18bc7e9eed18bb0f7c4a64b2d74499", "Url": "https://api.github.com/repos/K3v0x/SlotPark", "Date": "2018-04-04T05:55:50Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"studentList\")) != null) { loadsStudentList(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1930/buggy-version/src.java.Controller.AdviserServlet.java", "BodyUseAPI": ["Controller.AdviserServlet.loadsStudentList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "b2c1a7c3429b716078853a4aa5c3970d5644dfca", "Url": "https://api.github.com/repos/EVeend/OnlineAdvisingProject", "Date": "2018-03-05T09:15:01Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGameOver()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4337/buggy-version/src.tictactoe.TicTacToeGame.java", "BodyUseAPI": [], "Fixed commit": "63df02731f026faadc19ddf5569712485a85e9ac", "Url": "https://api.github.com/repos/HarryBoxer/tictactoe", "Date": "2018-08-18T00:27:27Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rt.isArray()) { type = rt.describe(); type = type.replace(\"[]\", \"\"); }else if (rt.isPrimitive()) { type = rt.describe(); }else if (rt.isReferenceType()) { type = rt.asReferenceType().getQualifiedName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7189/buggy-version/src.amber.parser.AnnotationParser.java", "BodyUseAPI": ["com.github.javaparser.resolution.types.ResolvedType.isPrimitive()", "rt.asReferenceType().getQualifiedName()", "com.github.javaparser.resolution.types.ResolvedType.describe()", "com.github.javaparser.resolution.types.ResolvedType.describe()", "com.github.javaparser.resolution.types.ResolvedType.isReferenceType()", "com.github.javaparser.resolution.types.ResolvedType.asReferenceType()"], "Fixed commit": "b48c3abe1c9d4497a4139b05b3bc02e5ad33d7c8", "Url": "https://api.github.com/repos/Apoc-/Spectrum", "Date": "2018-03-06T19:48:39Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subList) == null) { subList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/952/buggy-version/app.src.main.java.com.example.nynic.yevtukh_subbook.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0f1310efb000f95f6ba0df761a2cc87fe7729368", "Url": "https://api.github.com/repos/xwafflecakex/yevtukh-SubBook", "Date": "2018-02-05T22:18:39Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((geom.XY.distanceToTarget(geom.XY.vectorToTarget(squirrel.getPosition(), targetEntity.getPosition()))) <= 1.0F) { squirrel.hit(this, ((entities.beasts.BadBeast) (targetEntity))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1970/buggy-version/src.core.FlattenedBoard.java", "BodyUseAPI": ["entities.squirrels.Squirrel.hit(core.FlattenedBoard,entities.Entity)"], "Fixed commit": "310896a669c984b5bf12806d57c1be80f2b01a70", "Url": "https://api.github.com/repos/smorfer/Prog2Project", "Date": "2018-04-17T08:39:59Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.Menu.findItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (null != item) item.setVisible(visible);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2937/buggy-version/src.main.java.au.com.tyo.app.ui.ActionBarMenu.java", "BodyUseAPI": ["android.view.MenuItem.setVisible(boolean)"], "Fixed commit": "f5318890e71a83a380b2d8b578ee668a7798d4ca", "Url": "https://api.github.com/repos/tyolab/CommonAppLib", "Date": "2018-01-10T04:29:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager(); at.stefanirndorfer.bakingapp.view.RecipeDetailFragment recipeDetailFragment = new at.stefanirndorfer.bakingapp.view.RecipeDetailFragment(); fragmentManager.beginTransaction().add(R.id.detail_fragment_container, recipeDetailFragment).commit(); if (mTwoPane) { at.stefanirndorfer.bakingapp.view.IngredientsFragment ingredientsFragment = new at.stefanirndorfer.bakingapp.view.IngredientsFragment(); fragmentManager.beginTransaction().add(R.id.ingredients_container, ingredientsFragment).commit(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8800/buggy-version/app.src.main.java.at.stefanirndorfer.bakingapp.view.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "53c4bb8e4d1d966e262118acfc9f20dcfdfc741d", "Url": "https://api.github.com/repos/silentLOL/Baking-App", "Date": "2018-10-20T06:02:11Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["put.getURI().getPort()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (port > 0) { org.apache.commons.httpclient.protocol.Protocol.registerProtocol(\"https\", new org.apache.commons.httpclient.protocol.Protocol(\"https\", new org.jivesoftware.sparkimpl.updater.EasySSLProtocolSocketFactory(), port)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/746/buggy-version/plugins.fileupload.src.main.java.org.jivesoftware.spark.plugin.fileupload.ChatRoomDecorator.java", "BodyUseAPI": ["org.apache.commons.httpclient.protocol.Protocol.registerProtocol(java.lang.String,org.apache.commons.httpclient.protocol.Protocol)"], "Fixed commit": "6a4e49196dea6d85a90a0ddfa5cc3a20c5408dfb", "Url": "https://api.github.com/repos/Alexander198961/Spark", "Date": "2018-02-27T06:07:32Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { value = java.lang.System.getenv(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1770/buggy-version/deployer.src.main.java.com.alibaba.otter.canal.deployer.CanalController.java", "BodyUseAPI": [], "Fixed commit": "7fd958a490d9a5bb1d42d43c84ddbc5e6bf4d6d4", "Url": "https://api.github.com/repos/alibaba/canal", "Date": "2018-08-03T09:48:32Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { value = properties.getProperty(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1770/buggy-version/deployer.src.main.java.com.alibaba.otter.canal.deployer.CanalController.java", "BodyUseAPI": [], "Fixed commit": "7fd958a490d9a5bb1d42d43c84ddbc5e6bf4d6d4", "Url": "https://api.github.com/repos/alibaba/canal", "Date": "2018-08-03T09:48:32Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!retVal) { long currentTimeMs = java.lang.System.currentTimeMillis(); this.durationMs = currentTimeMs - (this.startTimeMs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1971/buggy-version/AdaptiveVocabularyAssessmentModule.src.main.java.nl.mpi.tg.eg.frinex.adaptivevocabularyassessment.client.generic.BandStimuliProvider.java", "BodyUseAPI": [], "Fixed commit": "2b203f7865d0334da887f3085b28ecd9792e45cf", "Url": "https://api.github.com/repos/MPI-ExperimentGroup/ExperimentTemplate", "Date": "2018-05-16T08:46:01Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(availableToday.contains(food))) { food.setAvailable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4277/buggy-version/app.src.main.java.com.lshan.boilerfaves.Networking.MenuRetrievalTask.java", "BodyUseAPI": ["com.lshan.boilerfaves.Models.FoodModel.setAvailable(boolean)"], "Fixed commit": "e8c3ee533e9df55fe9e487b6cbc906d7946d478b", "Url": "https://api.github.com/repos/Purdue-ACM-SIGApp/BoilerFaves", "Date": "2018-04-10T23:50:14Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((FirsName.isEmpty()) || (lastName.isEmpty())) || (nickname.isEmpty())) || (EmailAddress.isEmpty())) || (Password.isEmpty())) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { builder = new android.app.AlertDialog.Builder(this, android.R.style.Theme_Material_Dialog_Alert); }else { builder = new android.app.AlertDialog.Builder(this); } builder.setTitle(\"You Must fill All fields\").setPositiveButton(android.R.string.ok, new android.content.DialogInterface.OnClickListener() { public void onClick(android.content.DialogInterface dialog, int which) { } }); android.app.AlertDialog alert = builder.create(); alert.show(); }else { attemptRegistration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6835/buggy-version/app.src.main.java.com.example.anafa.wearit.RegistrationActivity.java", "BodyUseAPI": [], "Fixed commit": "03abd56a87cf910cf67aa15e2c1d3f85c3a69db4", "Url": "https://api.github.com/repos/Mitelka/WearIt", "Date": "2018-10-11T13:53:32Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wList != null) && ((getActivity()) != null)) { wishAdapter = new com.easv.wishme.wishme_android.adapters.WishAdapter(getActivity(), R.layout.wish_item, wList); mWishList.setAdapter(wishAdapter); sortListByName(); mNoWishes.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5517/buggy-version/app.src.main.java.com.easv.wishme.wishme_android.fragments.WishesFragment.java", "BodyUseAPI": [], "Fixed commit": "7d5b88eeba663d33f8d63dfc48d04e36411cebb6", "Url": "https://api.github.com/repos/Yuki44/WishMe_AndroidApp", "Date": "2018-05-10T14:42:05Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(additionalContactNames.hasValue())) return contactablePlaneBodies;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2459/buggy-version/ihmc-common-walking-control-modules.src.main.java.us.ihmc.commonWalkingControlModules.highLevelHumanoidControl.factories.ContactableBodiesFactory.java", "BodyUseAPI": [], "Fixed commit": "5e5fc5a0f49fdee729639ac8915871bbd3499210", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2018-03-01T01:21:38Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (device.getName().equals(\"TEST\")) { android.widget.Toast.makeText(this, \"No device to find.\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1443/buggy-version/app.src.main.java.com.example.marta.blueteeth.TeacherConnectScreen.java", "BodyUseAPI": [], "Fixed commit": "7e7fb6b7b0f92a0647b4b7eefecf9e335391848d", "Url": "https://api.github.com/repos/Martydude15/BlueTeeth", "Date": "2018-04-21T00:35:57Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((currLoc + i) < (base_elements.length)) sb.append(base_elements[(currLoc + i)]).append(separator);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8879/buggy-version/src.main.java.com.streever.hadoop.hive.parse.honey.RipMergeBuild.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "aa2df35e85a2104176423bb641ae84b6c9056baf", "Url": "https://api.github.com/repos/dstreev/HiveHoney", "Date": "2018-07-03T20:09:14Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["comicChaColl.find(queryStr).first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resault != null) { return resault; }else { return new org.bson.Document(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8457/buggy-version/app.src.main.java.com.hiroshi.cimoc.core.Mongo.java", "BodyUseAPI": [], "Fixed commit": "8caf2dc6648cb006e43430b2c4b75f68dafb049f", "Url": "https://api.github.com/repos/feilongfl/Cimoc", "Date": "2018-04-03T07:33:54Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["comicBaseColl.find(queryStr).first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resault != null) { return resault; }else { return new org.bson.Document(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8457/buggy-version/app.src.main.java.com.hiroshi.cimoc.core.Mongo.java", "BodyUseAPI": [], "Fixed commit": "8caf2dc6648cb006e43430b2c4b75f68dafb049f", "Url": "https://api.github.com/repos/feilongfl/Cimoc", "Date": "2018-04-03T07:33:54Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items) != null) { adapter = new edu.gatech.cs2340.buzzTracker.controllers.DataItemListActivity.SimpleItemRecyclerViewAdapter(items); recyclerView.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7943/buggy-version/buzztracker.app.src.main.java.edu.gatech.cs2340.buzzTracker.controllers.DataItemListActivity.java", "BodyUseAPI": [], "Fixed commit": "5672ffcfb328cf99665a7658986b454b3b6e848a", "Url": "https://api.github.com/repos/jordangross61/unitedWayDonations", "Date": "2018-10-25T00:35:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(noClasses())) result = result.and(getInterfaceClassProperty().mapExpr(joinImplement, calcType, propChanges, changedWhere).getWhere());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7408/buggy-version/server.src.main.java.lsfusion.server.logics.property.ObjectValueProperty.java", "BodyUseAPI": [], "Fixed commit": "473af93b32fb0817ed6b3a3e2eaf32dd02108954", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-09-17T05:57:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(noClasses())) depends.add(getInterfaceClassProperty().property);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7408/buggy-version/server.src.main.java.lsfusion.server.logics.property.ObjectValueProperty.java", "BodyUseAPI": [], "Fixed commit": "473af93b32fb0817ed6b3a3e2eaf32dd02108954", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-09-17T05:57:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(noClasses())) result = result.and(getInterfaceClassProperty().mapInferInterfaceClasses(lsfusion.server.logics.property.infer.ExClassSet.notNull(commonValue), inferType), inferType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7408/buggy-version/server.src.main.java.lsfusion.server.logics.property.ObjectValueProperty.java", "BodyUseAPI": [], "Fixed commit": "473af93b32fb0817ed6b3a3e2eaf32dd02108954", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-09-17T05:57:20Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lennart.model.action.actionbuilders.ai.ActionVariables.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((action.equals(\"bet75pct\")) || (action.equals(\"raise\"))) { opponentHasInitiative = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6806/buggy-version/src.main.java.com.lennart.model.action.actionbuilders.ai.ContinuousTable.java", "BodyUseAPI": [], "Fixed commit": "137b64ee210af9a27b2c370b23c813b5fb96dc39", "Url": "https://api.github.com/repos/coconutsRhealthy/headsuphelper", "Date": "2018-09-06T07:50:47Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2256/buggy-version/src.main.java.com.acme.edu.IntMessage.java", "BodyUseAPI": [], "Fixed commit": "3c2ce03935df23f0cebb2976fec4bfd2e095234e", "Url": "https://api.github.com/repos/moslikt/java-junior", "Date": "2018-08-24T14:37:30Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_Register)) { android.content.Intent editIntent = new android.content.Intent(this, com.rollingpinbakery.rollingpinbakery.Register.class); startActivity(editIntent); }else if (id == (R.id.nav_Admin)) { android.content.Intent editIntent = new android.content.Intent(this, com.rollingpinbakery.rollingpinbakery.AdminMainActivity.class); startActivity(editIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2794/buggy-version/app.src.main.java.com.rollingpinbakery.rollingpinbakery.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "928008dc6c23d120a83786d29b798992fb04a6f9", "Url": "https://api.github.com/repos/Eienex/RollingpinBakery1", "Date": "2018-02-28T16:50:24Z"},
{"Line": "=>831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authTrouble && finalAttempt) { exToThrow = new com.gemstone.gemfire.cache.client.ServerConnectivityException(\"retry attempt exhaused while trying to authenticate user\", cause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2236/buggy-version/gemfire-core.src.main.java.com.gemstone.gemfire.cache.client.internal.OpExecutorImpl.java", "BodyUseAPI": [], "Fixed commit": "ba7afe59556c7810bc1fd5ac04d3a51bacdd8bbc", "Url": "https://api.github.com/repos/SnappyDataInc/snappy-store", "Date": "2018-03-08T19:21:58Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (blockletInfo)) { try { setBlockletInfoFromBinary(); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/152/buggy-version/core.src.main.java.org.apache.carbondata.core.indexstore.BlockletDetailInfo.java", "BodyUseAPI": [], "Fixed commit": "94acfa5012266d86e8e6e1d91392e1b8c46641c0", "Url": "https://api.github.com/repos/dhatchayani/carbondata", "Date": "2018-04-26T11:11:26Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (daysMap.containsKey(((com.fibno.srinis.milkmanager.MainActivity.DAY_PREFIX) + dayOfMonth))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3951/buggy-version/app.src.main.java.com.fibno.srinis.milkmanager.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e844f0277e62bde2d48f912e762186279d58c6c4", "Url": "https://api.github.com/repos/srinis777/MilkManager", "Date": "2018-08-04T08:58:13Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"jar\".equals(configUrl.getProtocol())) { existHome = java.nio.file.Paths.get(new java.net.URI(configUrl.getPath())).getParent().getParent(); org.exist.util.ConfigurationHelper.LOG.warn((config + \" file was found on the classpath, but inside a Jar file! Derived EXIST_HOME from Jar's parent folder: {}\"), existHome); }else { existHome = java.nio.file.Paths.get(configUrl.toURI()).getParent(); org.exist.util.ConfigurationHelper.LOG.debug(\"Got EXIST_HOME from classpath: {}\", existHome.toAbsolutePath().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7105/buggy-version/src.org.exist.util.ConfigurationHelper.java", "BodyUseAPI": ["java.net.URL.getPath()", "java.nio.file.Paths.get(java.net.URI)", "java.nio.file.Path.getParent()", "java.net.URL.toURI()", "java.nio.file.Paths.get(java.net.URI)", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()"], "Fixed commit": "19a91c02b23d3ddababdcaf039a2abb07159ba8e", "Url": "https://api.github.com/repos/joewiz/exist", "Date": "2018-07-13T11:42:02Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (name.equals(\"Holy See\")) { capital = \"Vatican City\"; }else if (name.equals(\"Luxembourg\")) { capital = \"Luxembourg City\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2276/buggy-version/app.src.main.java.dreadloaf.com.countryquiz.Country.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "9f5b83dece92bc75fb5c9558e5b2b44244a6c41a", "Url": "https://api.github.com/repos/AndrewPochapsky/CountryCapitals", "Date": "2018-07-10T16:19:44Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(sysProjectWithBLOBs.getCoverImage())) { projectVo.setCoverImage(((serverAddress) + (sysProjectWithBLOBs.getCoverImage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8116/buggy-version/src.main.java.com.cslg.finalab.service.impl.SysProjectServiceImpl.java", "BodyUseAPI": ["com.cslg.finalab.vo.ProjectVo.setCoverImage(((serverAddress) + (sysProjectWithBLOBs.getCoverImage())))", "com.cslg.finalab.model.SysProjectWithBLOBs.getCoverImage()"], "Fixed commit": "f06de66eaa8c4df4985cd93a6278ea48eb3884d7", "Url": "https://api.github.com/repos/972424611/finalab-backstage", "Date": "2018-08-26T04:45:32Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos.equals(kingPos)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/14/buggy-version/core.src.com.mygdx.game.models.Board.java", "BodyUseAPI": [], "Fixed commit": "a8b5be76bf28fe863b11ec5f1130a1fb1c43af6f", "Url": "https://api.github.com/repos/RomarioGiacholari/Chess-11", "Date": "2018-03-08T16:00:00Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userInput.getText().length()) == 0) { android.widget.Toast.makeText(this, \"Plaese enter a team number to scout\", Toast.LENGTH_LONG).show(); }else { com.example.stephenogden.a1595scoutingapp.MainActivity.number = java.lang.Integer.parseInt(userInput.getText().toString()); startActivity(new android.content.Intent(this, com.example.stephenogden.a1595scoutingapp.scouting.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3265/buggy-version/app.src.main.java.com.example.stephenogden.a1595scoutingapp.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "userInput.getText().toString()", "java.lang.Integer.parseInt(userInput.getText().toString())"], "Fixed commit": "d900e06b3b71feebd723e81e800f42857ad8e882", "Url": "https://api.github.com/repos/1595Dragons/Scouting-app", "Date": "2018-01-14T07:43:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sophisticated_wolves.compatibility.Compatibility.IS_WOLF_ARMOR_INSTALLED) { sophisticated_wolves.compatibility.CompatibilityWolfArmor.getWolfItems(((net.minecraft.entity.passive.EntityWolf) (pet)), nbt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4363/buggy-version/src.main.java.sophisticated_wolves.item.pet_carrier.WolfPetCarrier.java", "BodyUseAPI": [], "Fixed commit": "7e73b4131f9802b16365bcefba9a5943f1d6d3c7", "Url": "https://api.github.com/repos/NightKosh/Sophisticated-wolves", "Date": "2018-08-11T13:56:45Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mImpl.getView()) != null) { this.removeView(mImpl.getView()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1468/buggy-version/Camera.src.main.java.com.enfle.android.camera.CameraView.java", "BodyUseAPI": ["com.enfle.android.camera.CameraView.removeView(mImpl.getView())", "com.enfle.android.camera.CameraViewImpl.getView()"], "Fixed commit": "88fd6568008dd1961a651d4e1e119b5c87ebebb3", "Url": "https://api.github.com/repos/shbmbhrdwj/cameraview", "Date": "2018-05-04T07:36:42Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) return mp.isPlaying();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6989/buggy-version/app.src.main.java.es.uniovi.uo252406.simplefer.Logical.Player.java", "BodyUseAPI": [], "Fixed commit": "165d9f35acbfd7858b25f947151bda9a726ed166", "Url": "https://api.github.com/repos/mistermboy/peniapp", "Date": "2018-09-23T14:37:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (x != null) { x.setParent(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5897/buggy-version/src.main.java.com.alibaba.druid.sql.ast.expr.SQLNotExpr.java", "BodyUseAPI": [], "Fixed commit": "e92e385609f21afb32424569abfa9e592cb797df", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-08-28T09:38:17Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (x != null) { x.setParent(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5897/buggy-version/src.main.java.com.alibaba.druid.sql.ast.expr.SQLNotExpr.java", "BodyUseAPI": ["com.alibaba.druid.sql.ast.SQLExpr.setParent(com.alibaba.druid.sql.ast.expr.SQLNotExpr)"], "Fixed commit": "e92e385609f21afb32424569abfa9e592cb797df", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-08-28T09:38:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isValidAgent(computer.getName(), listener))) { return java.lang.Boolean.FALSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3052/buggy-version/plugin.src.main.java.io.jenkins.plugins.remotingkafka.KafkaComputerLauncher.java", "BodyUseAPI": [], "Fixed commit": "f8bd1e9b26f3e601d4e09d2a9528a855cf1b4735", "Url": "https://api.github.com/repos/pvtuan10/remoting-kafka-plugin", "Date": "2018-08-03T09:51:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { file.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3938/buggy-version/app.src.main.java.com.lcz.lrcedit.lrcedit.MainActivity.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "7ca1207f368538a338dca2e2bd847e555a15aa77", "Url": "https://api.github.com/repos/pwxc/LrcEdit-Android", "Date": "2018-05-13T13:53:43Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resourceUtil) == null) { resourceUtil = be.atbash.util.resource.ResourceUtil.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6738/buggy-version/impl.src.main.java.be.atbash.ee.security.octopus.keys.reader.KeyFilesHelper.java", "BodyUseAPI": [], "Fixed commit": "790615a002fe8955b472618da152d4b9fc63bb56", "Url": "https://api.github.com/repos/atbashEE/octopus-jwt-support", "Date": "2018-10-25T07:58:27Z"},
{"Line": "=>1093", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_mirrorMemberName) == null) || (_redoLogCompaction.equals(RedoLogCompaction.NONE))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8828/buggy-version/xap-core.xap-datagrid.src.main.java.com.gigaspaces.internal.cluster.node.impl.backlog.AbstractSingleFileGroupBacklog.java", "BodyUseAPI": [], "Fixed commit": "074acd2fe663a72c072a5517a4b1259a01f8ed8a", "Url": "https://api.github.com/repos/xap/xap", "Date": "2018-01-23T15:43:48Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mygdx.game.Grid_player.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sPlace.horizontal()) { if (((sPlace.getSize()) + xPos) > (gridSize)) { xPos = (gridSize) - (sPlace.getSize()); } if (yPos > ((gridSize) - 1)) { yPos = (gridSize) - 1; } }else { if (((sPlace.getSize()) + yPos) > (gridSize)) { yPos = (gridSize) - (sPlace.getSize()); } if (xPos > ((gridSize) - 1)) { xPos = (gridSize) - 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4643/buggy-version/core.src.com.mygdx.game.Grid_player.java", "BodyUseAPI": ["com.mygdx.game.Boat.getSize()", "com.mygdx.game.Boat.getSize()", "com.mygdx.game.Boat.getSize()", "com.mygdx.game.Boat.getSize()"], "Fixed commit": "2d509457b9ad0b7c8e91b83d165c89b0e3ac8483", "Url": "https://api.github.com/repos/TiagoC22/BatailleNavale", "Date": "2018-06-16T15:17:07Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (in != null) { mage.utils.properties.PropertiesUtil.properties.load(in); }else { mage.utils.properties.PropertiesUtil.logger.warn(\"No xmage.properties were found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6670/buggy-version/Mage.Common.src.main.java.mage.utils.properties.PropertiesUtil.java", "BodyUseAPI": [], "Fixed commit": "0df97e5d4b97fbd932cd32166213ec453eff143b", "Url": "https://api.github.com/repos/jmharmon/mage", "Date": "2018-10-12T18:17:24Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (range == 3) { friendBlogList = blogMapper.getFriendBlogList(userId); com.ytsssss.collaborationblog.service.Impl.BlogServiceImpl.logger.info((\"\u67e5\u8be2\u7ed3\u679c\u4e3a\uff1a\" + friendBlogList)); return friendBlogList; }else if (range == 4) { draftBlogList = blogMapper.getDraftBlogList(userId); com.ytsssss.collaborationblog.service.Impl.BlogServiceImpl.logger.info((\"\u67e5\u8be2\u7ed3\u679c\u4e3a\uff1a\" + draftBlogList)); return draftBlogList; }else if (range == 5) { allBlogList = blogMapper.getDraftBlogList(userId); allBlogList.addAll(blogMapper.getMyBlogList(userId)); com.ytsssss.collaborationblog.service.Impl.BlogServiceImpl.logger.info((\"\u67e5\u8be2\u7ed3\u679c\u4e3a\uff1a\" + allBlogList)); return allBlogList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3692/buggy-version/src.main.java.com.ytsssss.collaborationblog.service.Impl.BlogServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "55a7795d5d88e58233093ee6d499a6d13f6a4ef4", "Url": "https://api.github.com/repos/Ytsssss/CollaborationBlog", "Date": "2018-05-14T06:04:03Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFileExisting(file)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/776/buggy-version/src.main.java.com.philips.view.MainView.java", "BodyUseAPI": [], "Fixed commit": "1c31cd2a230646e9d546a4e80ba7d56427917287", "Url": "https://api.github.com/repos/kadange/Tool", "Date": "2018-10-07T04:25:31Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.philips.view.MainView.configFile) != null) { javax.swing.JOptionPane.showMessageDialog(null, \"Please select correct property file!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/776/buggy-version/src.main.java.com.philips.view.MainView.java", "BodyUseAPI": [], "Fixed commit": "1c31cd2a230646e9d546a4e80ba7d56427917287", "Url": "https://api.github.com/repos/kadange/Tool", "Date": "2018-10-07T04:25:31Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trimIdx > 0) ingredientString.delete((trimIdx - 1), trimIdx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4519/buggy-version/app.src.main.java.com.udacity.sandwichclub.DetailActivity.java", "BodyUseAPI": ["java.lang.StringBuilder.delete(int,int)"], "Fixed commit": "3f13ac1b12df801509287592b01e27b201354997", "Url": "https://api.github.com/repos/cgarai/MySandwich", "Date": "2018-05-09T20:43:14Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trimIdx > 0) akaString.delete((trimIdx - 1), trimIdx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4519/buggy-version/app.src.main.java.com.udacity.sandwichclub.DetailActivity.java", "BodyUseAPI": ["java.lang.StringBuilder.delete(int,int)"], "Fixed commit": "3f13ac1b12df801509287592b01e27b201354997", "Url": "https://api.github.com/repos/cgarai/MySandwich", "Date": "2018-05-09T20:43:14Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getDeclaredFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"serialVersionUID\".equals(field[i].getName())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7275/buggy-version/src.main.java.org.honey.osql.core.SqlLib.java", "BodyUseAPI": [], "Fixed commit": "9319b8de9598f6231c050fc6dcd164b19b508717", "Url": "https://api.github.com/repos/automvc/honey", "Date": "2018-07-09T13:34:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"serialVersionUID\".equals(fields[i].getName())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7275/buggy-version/src.main.java.org.honey.osql.core.HoneyUtil.java", "BodyUseAPI": [], "Fixed commit": "9319b8de9598f6231c050fc6dcd164b19b508717", "Url": "https://api.github.com/repos/automvc/honey", "Date": "2018-07-09T13:34:48Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (link.contains(\"http\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2690/buggy-version/app.src.main.java.com.example.cmq.musicapp.Song.java", "BodyUseAPI": [], "Fixed commit": "cd3991c9599668621a0bbe6432a4253352af06a4", "Url": "https://api.github.com/repos/manhquynh-github/MusicApp", "Date": "2018-01-03T14:26:20Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((csql) != null) && (!(csql.isEmpty()))) { if ((conditionExpr.length()) > 0) { conditionExpr.append((\" AND \" + (csql))); }else { conditionExpr.append((\" \" + (csql))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/200/buggy-version/core.src.main.java.edu.umich.verdict.relation.ApproxAggregatedRelation.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "92720d1051d69b0d46b5663012ca4399bf15e12e", "Url": "https://api.github.com/repos/mozafari/verdictdb", "Date": "2018-05-08T17:33:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (filter != null) com.gpl.rpg.AndorsTrail.util.ByteUtils.xorArray(hash, filter.getBytes());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4681/buggy-version/AndorsTrail.src.com.gpl.rpg.AndorsTrail.model.map.MapSection.java", "BodyUseAPI": ["com.gpl.rpg.AndorsTrail.util.ByteUtils.xorArray(byte[],byte[])", "java.lang.String.getBytes()"], "Fixed commit": "897a2e093913fe5b1582e3ac1cc263661fa82c3e", "Url": "https://api.github.com/repos/Zukero/andors-trail", "Date": "2018-09-07T16:01:20Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line[i]) == (Main.NO_SYMBOL_INDEX)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7980/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "66381a9be93b903152e5e3b83461a6b24cd782b8", "Url": "https://api.github.com/repos/VelbazhdSoftwareLLC/Fruit-Machine-Simulator-with-Excel-Interface", "Date": "2018-10-28T14:57:20Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Main.SCATTER_INDICES.contains(line[i])) == true) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7980/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "66381a9be93b903152e5e3b83461a6b24cd782b8", "Url": "https://api.github.com/repos/VelbazhdSoftwareLLC/Fruit-Machine-Simulator-with-Excel-Interface", "Date": "2018-10-28T14:57:20Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ordered.report.dao.CartonbookDao.getDeliveryDetailsEntity(com.ordered.report.models.OrderEntity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (deliveryDetailsEntity != null) { deliveryDetailsEntity.setOrderEntity(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1250/buggy-version/app.src.main.java.com.ordered.report.SyncAdapter.SyncAdapter.java", "BodyUseAPI": ["com.ordered.report.models.DeliveryDetailsEntity.setOrderEntity(<nulltype>)"], "Fixed commit": "881eaa0aa0589301700e6b847aa92557f1e35cae", "Url": "https://api.github.com/repos/snithishkumar/CartonPacking", "Date": "2018-03-07T12:47:02Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canGeneralizePremises()) { if (spPremises < (subProofPremises())) return (((\"Rule \" + (getName())) + \" requires at least \") + (subProofPremises())) + \" subproof(s) as premises\"; }else { if (spPremises != (subProofPremises())) return (((\"Rule \" + (getName())) + \" requires exactly \") + (subProofPremises())) + \" subproof(s) as premises\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1820/buggy-version/src.edu.rpi.aris.rules.Rule.java", "BodyUseAPI": [], "Fixed commit": "de50e167910c6fe43eb7a7070ca0d706a632eff1", "Url": "https://api.github.com/repos/Bram-Hub/Aris", "Date": "2018-02-23T17:05:02Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canGeneralizePremises()) { if ((claim.getPremises().length) < (requiredPremises())) return (((\"Rule \" + (getName())) + \" requires at least \") + (requiredPremises())) + \" premises\"; }else { if ((claim.getPremises().length) != (requiredPremises())) return (((\"Rule \" + (getName())) + \" requires exactly \") + (requiredPremises())) + \" premises\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1820/buggy-version/src.edu.rpi.aris.rules.Rule.java", "BodyUseAPI": [], "Fixed commit": "de50e167910c6fe43eb7a7070ca0d706a632eff1", "Url": "https://api.github.com/repos/Bram-Hub/Aris", "Date": "2018-02-23T17:05:02Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedInputStream.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input == (-1)) { if (isQuotedString) { throw new info.paulmchugh.stellariseditor.fileparser.StellarisSaveFileParseException((\"Illegal Token: Quoted object is terminated by EOF not an end qoute on line = \" + lineNo)); }else { break; } }else { if (((currentChar == '=') || (currentChar == '{')) || (currentChar == '}')) { info.paulmchugh.stellariseditor.fileparser.SaveFileToken lastToken = tokens.peekLast(); if (((lastToken != null) && (currentChar == '=')) && (((lastToken.getType()) == (TokenTypes.INTEGER)) || ((lastToken.getType()) == (TokenTypes.STRING)))) { tokens.removeLast(); if ((lastToken.getType()) == (TokenTypes.STRING)) { tokens.addLast(new info.paulmchugh.stellariseditor.fileparser.KeyToken(((\"\\\"\" + (((info.paulmchugh.stellariseditor.fileparser.StringToken) (lastToken)).getValue())) + \"\\\"\"))); }else { tokens.addLast(new info.paulmchugh.stellariseditor.fileparser.KeyToken(java.lang.Long.toString(((info.paulmchugh.stellariseditor.fileparser.IntegerToken) (lastToken)).getValue()))); } } if (currentChar == '=') tokens.addLast(new info.paulmchugh.stellariseditor.fileparser.SaveFileToken(TokenTypes.EQUALS_SIGN)); else if (currentChar == '{') tokens.addLast(new info.paulmchugh.stellariseditor.fileparser.SaveFileToken(TokenTypes.GROUP_OPEN)); else tokens.addLast(new info.paulmchugh.stellariseditor.fileparser.SaveFileToken(TokenTypes.GROUP_CLOSE)); }else if (currentChar > 32) { if (isQuotedString) { if (lastIsEscapeChar) { currentToken.append(currentChar); lastIsEscapeChar = false; }else if (currentChar == '\\\\') { lastIsEscapeChar = true; }else { currentToken.append(currentChar); } }else { if (((currentToken.length()) == 0) && (currentChar == '\"')) { isQuotedString = true; currentToken.append(currentChar); }else { currentToken.append(currentChar); } } }else { if (isQuotedString) { currentToken.append(currentChar); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/612/buggy-version/info.paulmchugh.stellariseditor.fileparser.GamestateTokenizer.java", "BodyUseAPI": [], "Fixed commit": "d7efc456c0e337f079f3227f5e0d77e6c9553379", "Url": "https://api.github.com/repos/paul-mchugh/StellarisSaveEditor", "Date": "2018-05-25T22:49:32Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((userSettings.getPrincipal()) == null) && (userSettingsManager.isLoginRequired())) throw new de.tweerlei.dbgrazer.web.exception.AccessDeniedException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8537/buggy-version/web.core.src.main.java.de.tweerlei.dbgrazer.web.controller.ConnectionController.java", "BodyUseAPI": [], "Fixed commit": "c206716713819e3f1fe3988737f5b767f46b7540", "Url": "https://api.github.com/repos/tweerlei/dbgrazer", "Date": "2018-09-19T18:47:17Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mContext) != null) && (!(android.text.TextUtils.isEmpty(info.pelleritoudacity.android.rcapstone.utility.Preference.getLastCategory(mContext))))) { position = getTabArrayList().indexOf(info.pelleritoudacity.android.rcapstone.utility.Preference.getLastCategory(mContext)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4351/buggy-version/app.src.main.java.info.pelleritoudacity.android.rcapstone.ui.activity.SubRedditActivity.java", "BodyUseAPI": ["info.pelleritoudacity.android.rcapstone.utility.Preference.getLastCategory(android.content.Context)", "getTabArrayList().indexOf(info.pelleritoudacity.android.rcapstone.utility.Preference.getLastCategory(mContext))"], "Fixed commit": "e0443b2ec0fb06d9b9d408d0eaac8b9c8be044a6", "Url": "https://api.github.com/repos/benepell/Capstone-Project", "Date": "2018-07-21T13:14:12Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (seedu.address.model.tag.Tag.isValidTagName(keyword)) { seedu.address.model.tag.Tag keyTag = new seedu.address.model.tag.Tag(keyword); if (personTagList.contains(keyTag)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4542/buggy-version/src.main.java.seedu.address.model.person.PersonContainsTagsPredicate.java", "BodyUseAPI": [], "Fixed commit": "139e87d93d8e5e81a458a7b3a7ce9bc5111a66b2", "Url": "https://api.github.com/repos/cambioforma/main", "Date": "2018-04-11T07:57:19Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.os.SystemClock.elapsedRealtime()) - (mLastClickTime)) < 1000) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4979/buggy-version/app.src.main.java.com.competers.app.utilocatecompanion.Dialogs.CreateAuditDialog.java", "BodyUseAPI": [], "Fixed commit": "910496d539135fc9ed054699de89d9e3fe58959a", "Url": "https://api.github.com/repos/ElliottHurykCompeters/U2PhotoAppAaronsVersion", "Date": "2018-08-15T20:06:19Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.size()) == 0) { java.lang.String query = ((getAllLearnedToRepeatQuery()) + \" limit \") + wordsLimit; result = executeSelect(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1116/buggy-version/app.src.main.java.com.waverunner.wordrunner.db.WRBaseHelper.java", "BodyUseAPI": [], "Fixed commit": "1ac4ed2481ccfc792f8485c82eff90a7473f3b86", "Url": "https://api.github.com/repos/MichaelKazarian/WordRunner", "Date": "2018-10-08T12:28:04Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeUpdate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (affectedRows == 0) { throw new java.sql.SQLException(\"plaseaza comanda failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8314/buggy-version/src.controller.PlaseazaComanda.java", "BodyUseAPI": [], "Fixed commit": "0f9574821c081a8f1965f8d56311fec971cca23a", "Url": "https://api.github.com/repos/DumitriuAdelina/IpShop", "Date": "2018-05-08T13:52:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getMaxDate(categorieName)) != null) { q = db.collection(\"categories\").document(categorieName).collection(\"News\").whereGreaterThan(\"date\", table.getMaxDate(categorieName)).orderBy(\"date\"); }else { q = db.collection(\"categories\").document(categorieName).collection(\"News\").orderBy(\"date\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9701/buggy-version/app.src.main.java.com.master1.newsapplication.androidproject.newsOfCategorie.java", "BodyUseAPI": ["db.collection(\"categories\").document(categorieName).collection(\"News\").whereGreaterThan(\"date\", table.getMaxDate(categorieName)).orderBy(java.lang.String)", "db.collection(\"categories\").document(java.lang.String)", "com.master1.newsapplication.androidproject.newsTable.getMaxDate(java.lang.String)", "db.collection(\"categories\").document(java.lang.String)", "db.collection(\"categories\").document(categorieName).collection(\"News\").whereGreaterThan(java.lang.String,table.getMaxDate(categorieName))", "db.collection(\"categories\").document(categorieName).collection(java.lang.String)", "db.collection(\"categories\").document(categorieName).collection(java.lang.String)", "db.collection(\"categories\").document(categorieName).collection(\"News\").orderBy(java.lang.String)"], "Fixed commit": "b0d7ee9205b9f8b440059f557302505f161f153c", "Url": "https://api.github.com/repos/hussein-awala/AndroidProject", "Date": "2018-05-28T13:56:54Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (ownerAsynConnection)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3356/buggy-version/sinnori.core_build.src.main.java.kr.pe.sinnori.client.connection.asyn.AsynSocketResource.java", "BodyUseAPI": [], "Fixed commit": "948d68892987f30ed5212f17f1cc60df150bba03", "Url": "https://api.github.com/repos/madang01/gitmadang", "Date": "2018-03-25T23:41:57Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lane.equals(\"merge_to_left\")) { turn = net.osmand.router.TurnType.C; }else if (lane.equals(\"merge_to_right\")) { turn = net.osmand.router.TurnType.C; }else if ((lane.equals(\"none\")) || (lane.equals(\"through\"))) { turn = net.osmand.router.TurnType.C; }else if (lane.equals(\"slight_right\")) { turn = net.osmand.router.TurnType.TSLR; }else if (lane.equals(\"slight_left\")) { turn = net.osmand.router.TurnType.TSLL; }else if (lane.equals(\"right\")) { turn = net.osmand.router.TurnType.TR; }else if (lane.equals(\"left\")) { turn = net.osmand.router.TurnType.TL; }else if (lane.equals(\"sharp_right\")) { turn = net.osmand.router.TurnType.TSHR; }else if (lane.equals(\"sharp_left\")) { turn = net.osmand.router.TurnType.TSHL; }else if (lane.equals(\"reverse\")) { turn = net.osmand.router.TurnType.TU; }else { turn = net.osmand.router.TurnType.C; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5137/buggy-version/OsmAnd-java.src.net.osmand.router.TurnType.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "df88bf74bec86e56384a36d9e735bb9a451e1be0", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2018-05-25T22:02:57Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tech.bison.trainee2017.chess.BiChess.yesNoInput(\"Zur\ufffdck zum Start?\", \"Wollen Sie zur\ufffdck zum Start?\"))) tech.bison.trainee2017.chess.BiChess.farmer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9528/buggy-version/Bi-Chess.src.tech.bison.trainee2017.chess.BiChess.java", "BodyUseAPI": [], "Fixed commit": "07511c3e550226ebecf1c03f6b03df21e8882ef6", "Url": "https://api.github.com/repos/linomeyer/trainee2017", "Date": "2018-05-02T09:45:49Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.readValueAsTree().at(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vault.isMissingNode()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4961/buggy-version/src.main.java.com.senstiveconfig.config.VaultConfigurationDeserializer.java", "BodyUseAPI": [], "Fixed commit": "0bd54b4b84b925cdaaaa4dc9a73e5fcee4924266", "Url": "https://api.github.com/repos/mustaine/sensitive-config", "Date": "2018-01-19T15:11:28Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sentencesDifferenceCharIdx - i) < 0) || (((sentencesDifferenceCharIdx - i) + (correction.length())) > (sentence.length()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3986/buggy-version/src.main.java.io.github.oserikov.languagetool.Utils.java", "BodyUseAPI": [], "Fixed commit": "f1484588c6e4ed904ca1aa3f541983625bb79b8e", "Url": "https://api.github.com/repos/oserikov/languagetool-suggestions-logs-features-extractor", "Date": "2018-05-10T18:59:17Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usaParentesis) { expression = (\"(\" + expression) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5693/buggy-version/AppMobile.app.src.main.java.ar.com.profebot.parser.container.TreeNode.java", "BodyUseAPI": [], "Fixed commit": "f73b00db7cc89f3ea36aca0aae17b34b52e99ca4", "Url": "https://api.github.com/repos/agustinsilva/profebot", "Date": "2018-06-15T23:54:42Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"-\".equals(coefficientString)) { coefficientString = \"-1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5693/buggy-version/AppMobile.app.src.main.java.ar.com.profebot.parser.container.TreeNode.java", "BodyUseAPI": [], "Fixed commit": "f73b00db7cc89f3ea36aca0aae17b34b52e99ca4", "Url": "https://api.github.com/repos/agustinsilva/profebot", "Date": "2018-06-15T23:54:42Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentById(R.id.fragment_container)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fragment instanceof com.danhasting.radar.fragments.SelectWundergroundFragment) && needKey) launchSelectionFragment(Source.WUNDERGROUND);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4380/buggy-version/app.src.main.java.com.danhasting.radar.SelectActivity.java", "BodyUseAPI": [], "Fixed commit": "b7bd3f0e6da1f799bf0dae84bc1b6f369ca93aa5", "Url": "https://api.github.com/repos/dh4/WeatherRadar", "Date": "2018-04-07T17:52:05Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.nio.file.Files.notExists(path)) { java.nio.file.Files.createDirectories(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6188/buggy-version/src.main.java.org.web3j.mavenplugin.JavaClassGeneratorMojo.java", "BodyUseAPI": ["java.nio.file.Files.createDirectories(java.nio.file.Path)"], "Fixed commit": "417492a385c3398788ab36a8725c11429bebd709", "Url": "https://api.github.com/repos/web3j/web3j-maven-plugin", "Date": "2018-08-24T13:41:51Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sendIntent.resolveActivity(getPackageManager())) != null) { startActivity(sendIntent); }else { warningToast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9647/buggy-version/app.src.main.java.valery.pankov.aamsk_exercise1.PreviewActivity.java", "BodyUseAPI": ["valery.pankov.aamsk_exercise1.PreviewActivity.startActivity(android.content.Intent)"], "Fixed commit": "2f03d4cc4013d09567b2b544be4cfcb90f182a30", "Url": "https://api.github.com/repos/LarsenFP/aamsk_exercise1", "Date": "2018-09-19T21:02:32Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.currentScreen.equals(FakeInvScreen.screenName)) { game.music.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4002/buggy-version/GarbagemanDemo.core.src.com.garbageman.game.UI.java", "BodyUseAPI": ["game.music.pause()"], "Fixed commit": "28522223ac03f7c7e5a204c674d5da59aaf0c66b", "Url": "https://api.github.com/repos/PangurbonB/garbageman", "Date": "2018-05-23T05:58:51Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xdi.oxd.server.persistence.PersistenceService.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ok) { rpMap.remove(oxdId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5448/buggy-version/oxd-server.src.main.java.org.xdi.oxd.server.service.RpService.java", "BodyUseAPI": [], "Fixed commit": "d9960ebd4e5aed0dc9ecae40925a65085ff9a3fb", "Url": "https://api.github.com/repos/GluuFederation/oxd", "Date": "2018-01-25T16:07:07Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((_ruleId) != null) && ((rule._ruleId) != null)) return java.util.Objects.equals(_ruleId, rule._ruleId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4759/buggy-version/src.main.java.com.imsweb.validation.entities.Rule.java", "BodyUseAPI": ["java.util.Objects.equals(java.lang.Long,java.lang.Long)"], "Fixed commit": "5430e23bc999fd6c8d093306422c67f3c11d187a", "Url": "https://api.github.com/repos/imsweb/validation", "Date": "2018-04-17T14:49:46Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_ruleId) != null) return java.util.Objects.hash(_ruleId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4759/buggy-version/src.main.java.com.imsweb.validation.entities.Rule.java", "BodyUseAPI": [], "Fixed commit": "5430e23bc999fd6c8d093306422c67f3c11d187a", "Url": "https://api.github.com/repos/imsweb/validation", "Date": "2018-04-17T14:49:46Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > 19) { md.putRating(MediaMetadataCompat.METADATA_KEY_RATING, rating); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6172/buggy-version/android.src.main.java.com.tanguyantoine.react.MusicControlModule.java", "BodyUseAPI": [], "Fixed commit": "c0a973e470081675f84a5d619b0ab4afc4a4a2c7", "Url": "https://api.github.com/repos/kesha-antonov/react-native-music-control", "Date": "2018-01-11T08:09:39Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(state.hasEnterDirection())) { state.initEnterDirection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5117/buggy-version/src.main.java.com.bergerkiller.bukkit.tc.controller.MinecartMember.java", "BodyUseAPI": ["com.bergerkiller.bukkit.tc.controller.components.RailState.initEnterDirection()"], "Fixed commit": "9d920c271f4b809a8c4a26a846a2523f05a32d4f", "Url": "https://api.github.com/repos/bergerhealer/TrainCarts", "Date": "2018-07-20T00:12:26Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (moveValidator != null) { return moveValidator.validate(); }else { throw new com.capgemini.chess.algorithms.implementation.exceptions.InvalidMoveException(\"No piece type has been given to validate a move pattern\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/7199/buggy-version/ChessAlgorithms.src.main.java.com.capgemini.chess.algorithms.implementation.BoardManager.java", "BodyUseAPI": ["com.capgemini.chess.algorithms.implementation.MoveValidator.validate()"], "Fixed commit": "9842a08fb65cd15abb75e6468959baf1396fc36f", "Url": "https://api.github.com/repos/Cekonieczny/StarterKitChess", "Date": "2018-07-23T09:12:15Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["A.layout()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (layout > 0) { methodBuilder.addStatement(((((dialogboot.compiler.DialogProcessor.ACTIVITY_PARAMETER_NAME) + \".\") + annotatedDialogVariableName) + \".setView ($L)\"), inflater); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3410/buggy-version/dialogboot-compiler.src.main.java.dialogboot.compiler.DialogProcessor.java", "BodyUseAPI": [], "Fixed commit": "80faf5358d4bee69de32734220192077c0bba81b", "Url": "https://api.github.com/repos/mnhmasum/DialogBoot", "Date": "2018-04-08T21:33:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (listOfFiles != null) { for (int i = 0; i < (listOfFiles.length); i++) { if (listOfFiles[i].isFile()) { filesInDir.add(listOfFiles[i].getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6417/buggy-version/src.main.java.com.xebia.vulnmanager.util.IOUtil.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.io.File.getName()", "java.io.File.isFile()"], "Fixed commit": "e16793d57aa1c755ae9c1f407042085f4ae77dc5", "Url": "https://api.github.com/repos/xebia-research/vulnmanager", "Date": "2018-03-08T13:04:18Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c == (cards.peek())) { destinationStack.push(cards.pop()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1288/buggy-version/src.game.cards.Tableau.java", "BodyUseAPI": ["java.util.Stack<game.cards.Card>.pop()", "java.util.Stack<game.cards.Card>.push(cards.pop())"], "Fixed commit": "a3674659c2949203c9c1050ca8ec07436e6b7882", "Url": "https://api.github.com/repos/aeris170/Solitaire", "Date": "2018-06-03T02:55:31Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (otherObject instanceof org.gjt.sp.jedit.syntax.Chunk.GlyphKey) { org.gjt.sp.jedit.syntax.Chunk.GlyphKey other = ((org.gjt.sp.jedit.syntax.Chunk.GlyphKey) (otherObject)); return ((token.equals(other.token)) && (font.equals(other.font))) && (context.equals(other.context)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4536/buggy-version/org.gjt.sp.jedit.syntax.Chunk.java", "BodyUseAPI": [], "Fixed commit": "b2323d270c44ae79381111ed4133e1d395ae0493", "Url": "https://api.github.com/repos/SOFE3980U-FinalProject-Team14/jEdit", "Date": "2018-03-30T02:32:23Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aClass.isAnnotation()) { visitAnnotationClass(((java.lang.Class<java.lang.annotation.Annotation>) (aClass))); }else if (aClass.isInterface()) { visitInterface(aClass); }else if (aClass.isEnum()) { visitEnum(aClass); }else { visitClass(aClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2471/buggy-version/src.main.java.spoon.support.visitor.java.JavaReflectionVisitorImpl.java", "BodyUseAPI": ["spoon.support.visitor.java.JavaReflectionVisitorImpl.visitInterface(java.lang.Class<?>)", "spoon.support.visitor.java.JavaReflectionVisitorImpl.visitEnum(java.lang.Class<?>)", "spoon.support.visitor.java.JavaReflectionVisitorImpl.visitClass(java.lang.Class<?>)", "java.lang.Class<?>.isEnum()", "java.lang.Class<?>.isInterface()"], "Fixed commit": "4f33c111038b3d1ecf5deafadc41913d22774db5", "Url": "https://api.github.com/repos/Egor18/spoon", "Date": "2018-01-03T10:32:33Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1648/buggy-version/ontodriver-jena.src.main.java.cz.cvut.kbss.ontodriver.jena.query.SelectResultSet.java", "BodyUseAPI": [], "Fixed commit": "6eff7ea5cfd0f5f22534b99ee32ce3c442c9a3fe", "Url": "https://api.github.com/repos/kbss-cvut/jopa", "Date": "2018-04-03T13:40:54Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token.equals(\"Logged-Out\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/6283/buggy-version/src.main.java.com.catchopportunity.springapico.company.CompanyService.java", "BodyUseAPI": [], "Fixed commit": "e84353d57e49c847d2b07a1854c848875d8e1552", "Url": "https://api.github.com/repos/berkyvz/spring-api-co", "Date": "2018-10-09T13:54:36Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prevEndpoint.compareTo(nextIncrementalValue)) < 0) { sb.append(checkColName); switch (incrementalMode) { case AppendRows : sb.append(\" > \"); break; case DateLastModified : sb.append(\" >= \"); break; default : throw new com.cloudera.sqoop.util.ImportException(\"Undefined comparison\"); } sb.append(prevEndpoint); sb.append(\" AND \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/543/buggy-version/src.java.org.apache.sqoop.tool.ImportTool.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "97508b428b0078ba113792c1ef49494f73a3cf3f", "Url": "https://api.github.com/repos/EverFi/sqoop", "Date": "2018-01-24T00:51:10Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (move) isJump(oldY, oldX, newY, newX);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9707/buggy-version/Board.java", "BodyUseAPI": [], "Fixed commit": "f25c45a19918b9411ec9bbbfc0c742714aa0ee74", "Url": "https://api.github.com/repos/401software/checkers", "Date": "2018-03-31T01:31:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uiLang == null) || ((uiLang.trim().length()) == 0)) { uiLang = Utils.Parameters.UILang; if ((uiLang == null) || ((uiLang.trim().length()) == 0)) { uiLang = getServletContext().getInitParameter(\"UILanguage\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2682/buggy-version/src.main.java.LoginAdmin.LoginAdmin.java", "BodyUseAPI": [], "Fixed commit": "8f0cade4b1aec610356056a290de022cb304ef4a", "Url": "https://api.github.com/repos/isl/THEMAS", "Date": "2018-02-22T12:23:14Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (annee == null) { annee = (java.time.Year.now().getValue()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/589/buggy-version/rade-ws-aramis.src.main.java.fr.aesn.rade.ws.aramis.impl.GeoAdminServiceExternePortImpl.java", "BodyUseAPI": [], "Fixed commit": "9a8d1ef68fe31bd69105ffd6ba23b3a0da54770e", "Url": "https://api.github.com/repos/mgimpel/rade", "Date": "2018-05-28T12:39:45Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((registry) != null) { registry.rebind(bindingName, chatManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/3987/buggy-version/src.server.ChatManagerServer.java", "BodyUseAPI": [], "Fixed commit": "f23135aa8839147da73dae090fcdfcc90fca3569", "Url": "https://api.github.com/repos/mrtsven/chatApp", "Date": "2018-01-13T19:24:01Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mailUtil.sendGenericMail(mailerAction, \"\", \"\", \"\", false)) { com.igp.handles.admin.mappers.Order.OrderMapper.logger.debug((((\"Mail successfully sent for assign/reassign of orderId \" + orderId) + \" with orderProductId \") + orderProductIdsWhichAreActuallyAssigned)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/8870/buggy-version/api.src.main.java.com.igp.handles.admin.mappers.Order.OrderMapper.java", "BodyUseAPI": [], "Fixed commit": "1e04b8652104f89cab8e75aeb155f35e88ff5a82", "Url": "https://api.github.com/repos/shashank-igp/newadminpanel", "Date": "2018-04-06T07:14:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (picture == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/898/buggy-version/app.src.main.java.com.example.android.emojify.Emojifier.java", "BodyUseAPI": [], "Fixed commit": "a049bbc99878fdd2326aab908dd0a2e86dba05b3", "Url": "https://api.github.com/repos/krizk93/AdvancedAndroid_Emojify", "Date": "2018-04-28T18:36:26Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.emojify.Emojifier.detectFacesAndOverLayEmoji(com.example.android.emojify.MainActivity,android.graphics.Bitmap)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (mresult == null) mImageView.setImageBitmap(mResultsBitmap); else mImageView.setImageBitmap(mresult);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/898/buggy-version/app.src.main.java.com.example.android.emojify.MainActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "a049bbc99878fdd2326aab908dd0a2e86dba05b3", "Url": "https://api.github.com/repos/krizk93/AdvancedAndroid_Emojify", "Date": "2018-04-28T18:36:26Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o.state) == null) { o.state = org.mitre.synthea.engine.Generator.DEFAULT_STATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2506/buggy-version/src.main.java.org.mitre.synthea.engine.Generator.java", "BodyUseAPI": [], "Fixed commit": "190540c36869b9ad6b95cb111282aabceec121a4", "Url": "https://api.github.com/repos/synthetichealth/synthea", "Date": "2018-05-31T13:36:21Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position > 1) { com.github.mikephil.charting.components.YAxis leftAxis = holder.chart.getAxisLeft(); leftAxis.setLabelCount(5, false); leftAxis.setAxisMaximum(4.0F); leftAxis.setAxisMinimum((-4.0F)); com.github.mikephil.charting.components.YAxis rightAxis = holder.chart.getAxisRight(); rightAxis.setLabelCount(5, false); rightAxis.setAxisMaximum(4.0F); rightAxis.setAxisMinimum((-4.0F)); }else { com.github.mikephil.charting.components.YAxis leftAxis = holder.chart.getAxisLeft(); leftAxis.setLabelCount(5, false); leftAxis.setAxisMinimum(0.0F); com.github.mikephil.charting.components.YAxis rightAxis = holder.chart.getAxisRight(); rightAxis.setLabelCount(5, false); rightAxis.setDrawGridLines(false); rightAxis.setAxisMinimum(0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/4569/buggy-version/app.src.main.java.com.agenthun.eseal.activity.ListViewLineChartActivity.java", "BodyUseAPI": [], "Fixed commit": "d90e922b1a851b15177ce3ea2644c8643a4d54e9", "Url": "https://api.github.com/repos/ecnuBeidou/ESeal", "Date": "2018-07-12T03:45:32Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(geText.getText().contains(osbText))) { final java.lang.String text = ((geText.getText()) + \"<br>OSBuddy Actively traded price: \") + (net.runelite.client.util.StackFormatter.formatNumber(result.getOverall_average())); geText.setText(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/9616/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.grandexchange.GrandExchangePlugin.java", "BodyUseAPI": ["net.runelite.api.widgets.Widget.setText(java.lang.String)", "net.runelite.api.widgets.Widget.getText()"], "Fixed commit": "d48c6badb4a482e461c4fa0e5458d65435187774", "Url": "https://api.github.com/repos/Asymons/runelite", "Date": "2018-08-20T14:08:38Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((metadataProperties.getApplication().get(key)) != null) { metadata.put(getKeyAsMetaData(key, applicationPrefix), metadataProperties.getApplication().get(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/1706/buggy-version/activiti-cloud-services-metadata.src.main.java.org.activiti.cloud.services.metadata.MetadataService.java", "BodyUseAPI": ["org.activiti.cloud.services.metadata.MetadataProperties.getApplication()", "metadataProperties.getApplication().get(java.lang.String)", "org.activiti.cloud.services.metadata.MetadataService.getKeyAsMetaData(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,metadataProperties.getApplication().get(key))"], "Fixed commit": "83c4f97c4eee59bda6abe2d6371d590742bb19e2", "Url": "https://api.github.com/repos/Activiti/activiti-cloud-service-common", "Date": "2018-04-27T12:34:39Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadata) != null) { tempMap.putAll(metadata); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2840/buggy-version/src.main.java.co.omise.models.Charge.java", "BodyUseAPI": [], "Fixed commit": "a5e0abb4c242b75e32df3578204a1667c0220bf9", "Url": "https://api.github.com/repos/omise/omise-java", "Date": "2018-07-13T09:46:46Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadata) != null) { tempMap.putAll(metadata); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2840/buggy-version/src.main.java.co.omise.models.Charge.java", "BodyUseAPI": [], "Fixed commit": "a5e0abb4c242b75e32df3578204a1667c0220bf9", "Url": "https://api.github.com/repos/omise/omise-java", "Date": "2018-07-13T09:46:46Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (data != null) { announcer = com.hippo.ehviewer.client.EhUrlOpener.parseUrl(data.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/5367/buggy-version/app.src.main.java.com.hippo.ehviewer.ui.MainActivity.java", "BodyUseAPI": ["android.net.Uri.toString()", "com.hippo.ehviewer.client.EhUrlOpener.parseUrl(data.toString())"], "Fixed commit": "e9875414a16afd46dfd0ad4fed3864e3ed376414", "Url": "https://api.github.com/repos/onlymash/EhViewer", "Date": "2018-04-02T07:47:26Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.fmi.avi.model.metar.METAR.getSurfaceWind()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (wind != null) { java.lang.StringBuilder builder = new java.lang.StringBuilder(); if (wind.isVariableDirection()) { builder.append(\"VRB\"); }else if (!(wind.getMeanWindDirection().getUom().equals(\"deg\"))) { throw new fi.fmi.avi.converter.tac.lexer.SerializingException((\"Mean wind direction unit is not 'deg': \" + (wind.getMeanWindDirection().getUom()))); }else { builder.append(java.lang.String.format(\"%03d\", wind.getMeanWindDirection().getValue().intValue())); } this.appendCommonWindParameters(builder, wind.getMeanWindSpeed(), wind.getMeanWindDirection(), wind.getWindGust()); tokenStr = builder.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V159/2643/buggy-version/src.main.java.fi.fmi.avi.converter.tac.lexer.impl.token.SurfaceWind.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,wind.getMeanWindDirection().getValue().intValue())", "fi.fmi.avi.model.metar.ObservedSurfaceWind.getMeanWindDirection()", "wind.getMeanWindDirection().getUom()", "fi.fmi.avi.model.metar.ObservedSurfaceWind.getMeanWindSpeed()", "wind.getMeanWindDirection().getValue().intValue()", "fi.fmi.avi.model.metar.ObservedSurfaceWind.isVariableDirection()", "wind.getMeanWindDirection().getUom().equals(java.lang.String)", "wind.getMeanWindDirection().getUom()", "fi.fmi.avi.model.metar.ObservedSurfaceWind.getMeanWindDirection()", "wind.getMeanWindDirection().getValue()", "fi.fmi.avi.model.metar.ObservedSurfaceWind.getMeanWindDirection()", "fi.fmi.avi.model.metar.ObservedSurfaceWind.getWindGust()", "fi.fmi.avi.model.metar.ObservedSurfaceWind.getMeanWindDirection()", "fi.fmi.avi.converter.tac.lexer.impl.token.SurfaceWind.Reconstructor.appendCommonWindParameters(java.lang.StringBuilder,wind.getMeanWindSpeed(),wind.getMeanWindDirection(),wind.getWindGust())", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "e452a51c8d888e337de546b5e77f491523a76873", "Url": "https://api.github.com/repos/fmidev/fmi-avi-messageconverter-tac", "Date": "2018-02-27T07:42:36Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (componentName == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2700/buggy-version/FairyPlugin.src.main.java.com.limpoxe.fairy.core.proxy.systemservice.AndroidAppIActivityManager.java", "BodyUseAPI": [], "Fixed commit": "e296152c8d75243ad71ef0f54255cffc540d124c", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2018-01-18T14:32:53Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bahmni.csv.KeyValue.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((dateString != null) && ((dateString.length()) > 0)) { getDateFromString(dateString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2209/buggy-version/admin.src.main.java.org.bahmni.module.admin.csv.service.CSVPatientService.java", "BodyUseAPI": ["org.bahmni.module.admin.csv.service.CSVPatientService.getDateFromString(java.lang.String)"], "Fixed commit": "71b01839ae46920596a37f0a6d84244b8af1d297", "Url": "https://api.github.com/repos/MSF-OCB/maadi-bahmni-core", "Date": "2018-10-29T07:00:16Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getExpr().accept(mwcompiler.symbols.tools.TypeCheckAstVisitor)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((exprType.typeSymbol) != (intTypeSymbol)) throwNotSupport(node.getOp(), exprType.typeSymbol, node.getStartLocation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5371/buggy-version/MWCompiler.src.mwcompiler.symbols.tools.TypeCheckAstVisitor.java", "BodyUseAPI": ["mwcompiler.symbols.tools.TypeCheckAstVisitor.throwNotSupport(node.getOp(),exprType.typeSymbol,node.getStartLocation())"], "Fixed commit": "4741e3fcc90a452a2ee19e8bcf1fc9eb6900c810", "Url": "https://api.github.com/repos/Michaelvll/MWCompiler", "Date": "2018-04-28T17:37:04Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (sub != null) { if (sub.isJsonObject()) { int key = this.get(sub.getAsJsonObject(), \"key\", keybind.getKey()); keybind.setBind(key); }else { keybind.setBind(sub.getAsInt()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3683/buggy-version/src.main.java.de.ellpeck.rockbottom.api.data.settings.Settings.java", "BodyUseAPI": ["de.ellpeck.rockbottom.api.data.settings.Keybind.setBind(sub.getAsInt())", "com.google.gson.JsonElement.isJsonObject()", "com.google.gson.JsonElement.getAsInt()", "de.ellpeck.rockbottom.api.data.settings.Settings.get(sub.getAsJsonObject(),java.lang.String,keybind.getKey())", "com.google.gson.JsonElement.getAsJsonObject()"], "Fixed commit": "0249cf9c00415563374b3a2c35e266cebdd13ab9", "Url": "https://api.github.com/repos/RockBottomGame/API", "Date": "2018-03-20T16:25:38Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (a > b) { return RationalNumber.gcd((a - b), b); }else { return RationalNumber.gcd(a, (b - a)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2341/buggy-version/RationalNumber.java", "BodyUseAPI": ["RationalNumber.gcd(int,int)", "RationalNumber.gcd(int,int)"], "Fixed commit": "fc2243537279d2513e5e53fbc389f274d344b3ef", "Url": "https://api.github.com/repos/jlin03/MKS21X-Numbers", "Date": "2018-10-16T21:21:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a == b) { return a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2341/buggy-version/RationalNumber.java", "BodyUseAPI": [], "Fixed commit": "fc2243537279d2513e5e53fbc389f274d344b3ef", "Url": "https://api.github.com/repos/jlin03/MKS21X-Numbers", "Date": "2018-10-16T21:21:40Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.p) == (other.getNumerator())) && ((this.q) == (other.getDenominator()))) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2341/buggy-version/RationalNumber.java", "BodyUseAPI": [], "Fixed commit": "fc2243537279d2513e5e53fbc389f274d344b3ef", "Url": "https://api.github.com/repos/jlin03/MKS21X-Numbers", "Date": "2018-10-16T21:21:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a == 0) || (b == 0)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2341/buggy-version/RationalNumber.java", "BodyUseAPI": [], "Fixed commit": "fc2243537279d2513e5e53fbc389f274d344b3ef", "Url": "https://api.github.com/repos/jlin03/MKS21X-Numbers", "Date": "2018-10-16T21:21:40Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list != null) { for (java.lang.Object item : list) { if (item != null) result.add(item.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2832/buggy-version/libK3b.src.main.java.de.k3b.io.ListUtils.java", "BodyUseAPI": [], "Fixed commit": "decf57353b3244442ec1a4be83181aa8df4b1add", "Url": "https://api.github.com/repos/k3b/ToGoZip", "Date": "2018-10-31T14:29:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dateString != null) { for (java.text.DateFormat formatCandidate : formatCandidates) { try { result = formatCandidate.parse(dateString); if (result != null) break; } catch (java.text.ParseException e) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2832/buggy-version/libK3b.src.main.java.de.k3b.io.DateUtil.java", "BodyUseAPI": ["java.text.DateFormat.parse(java.lang.String)"], "Fixed commit": "decf57353b3244442ec1a4be83181aa8df4b1add", "Url": "https://api.github.com/repos/k3b/ToGoZip", "Date": "2018-10-31T14:29:25Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.content.pm.ApplicationInfo>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (MyService.whitelist.contains(info.packageName)) { holder.appToggle.setChecked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7138/buggy-version/app.src.main.java.com.intelligencefactory.android.WhiteListAdapter.java", "BodyUseAPI": [], "Fixed commit": "6927e98e22dd2790451e826f683129a82a605ee0", "Url": "https://api.github.com/repos/lyx937131777/intelligencefactory", "Date": "2018-06-15T07:51:44Z"},
{"Line": "=>1092", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(filteredGroups.isEmpty())) return filteredGroups;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6300/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.SRDFScheduler.java", "BodyUseAPI": [], "Fixed commit": "66909632bb52fba8328f6b5c443076f83b5785ce", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2018-03-16T11:24:38Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res instanceof com.easy.adri.Promise) { com.easy.adri.Promise returnedPromise = ((com.easy.adri.Promise) (res)); returnedPromise.mNextPromise = mNextPromise; returnedPromise.mOnError = mOnError; if (returnedPromise.accepted) returnedPromise.accept(); else if ((returnedPromise.rejected) != null) returnedPromise.reject(returnedPromise.rejected); mNextPromise = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6383/buggy-version/src.main.java.com.easy.adri.Promise.java", "BodyUseAPI": [], "Fixed commit": "cd6952c176966d0c5c523600df8de70e8a851e6b", "Url": "https://api.github.com/repos/Sevauk/EasyAdri", "Date": "2018-10-20T10:29:32Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.mum.login.service.UserService.findByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getUserType()) != (edu.mum.common.UserType.CANDIDATE)) { return \"forward:/companies\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4939/buggy-version/src.main.java.edu.mum.getInterview.controller.GetInterviewController.java", "BodyUseAPI": [], "Fixed commit": "d5de5bae609359618c2ea28434e0ca77b7e15136", "Url": "https://api.github.com/repos/eddytnk/GetJobInterview", "Date": "2018-04-25T17:58:20Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.mum.login.service.UserService.findByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getUserType()) != (edu.mum.common.UserType.CANDIDATE)) { return \"forward:/companies\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4939/buggy-version/src.main.java.edu.mum.getInterview.controller.GetInterviewController.java", "BodyUseAPI": [], "Fixed commit": "d5de5bae609359618c2ea28434e0ca77b7e15136", "Url": "https://api.github.com/repos/eddytnk/GetJobInterview", "Date": "2018-04-25T17:58:20Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (internalReferable.isVisible()) { checkReference(internalReferable.getReferable(), referables, parentReferable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6420/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.naming.resolving.NameResolvingChecker.java", "BodyUseAPI": ["Group.InternalReferable.getReferable()", "com.jetbrains.jetpad.vclang.naming.resolving.NameResolvingChecker.checkReference(internalReferable.getReferable(),java.util.Map<java.lang.String, com.jetbrains.jetpad.vclang.naming.reference.LocatedReferable>,com.jetbrains.jetpad.vclang.naming.reference.LocatedReferable)"], "Fixed commit": "102405d798410ebd3bcb3e7a72008d10544477f8", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-06-01T18:56:50Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (internalReferable.isVisible()) { checkReference(internalReferable.getReferable(), referables, parentReferable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6420/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.naming.resolving.NameResolvingChecker.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.naming.resolving.NameResolvingChecker.checkReference(internalReferable.getReferable(),java.util.Map<java.lang.String, com.jetbrains.jetpad.vclang.naming.reference.LocatedReferable>,com.jetbrains.jetpad.vclang.naming.reference.LocatedReferable)", "Group.InternalReferable.getReferable()"], "Fixed commit": "102405d798410ebd3bcb3e7a72008d10544477f8", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-06-01T18:56:50Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(result.type.isInstance(org.arend.typechecking.visitor.ClassCallExpression.class))) { result.type = ((org.arend.typechecking.visitor.Expression) (expectedType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3153/buggy-version/src.main.java.org.arend.typechecking.visitor.CheckTypeVisitor.java", "BodyUseAPI": [], "Fixed commit": "615236dff4de6a81a9b25ef37e81811a0f4e8867", "Url": "https://api.github.com/repos/JetBrains/Arend", "Date": "2018-10-19T14:15:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hRate < 0) { hourlyRate.setText((\"Session Hourly Rate: -$\" + hR)); }else { hourlyRate.setText((\"Session Hourly Rate: $\" + hR)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8687/buggy-version/PokerJournal.app.src.main.java.com.example.ethan.pokerjournal.GameDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "8061cf278ca235c9d927cf1c1995af1b4a1d2c0d", "Url": "https://api.github.com/repos/EthanYu22/Bankroll-Breakdown-Continued", "Date": "2018-08-04T10:57:50Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nProfit < 0) { netProfit.setText((\"Session Net Profit: -$\" + nP)); }else { netProfit.setText((\"Session Net Profit: $\" + nP)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8687/buggy-version/PokerJournal.app.src.main.java.com.example.ethan.pokerjournal.GameDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "8061cf278ca235c9d927cf1c1995af1b4a1d2c0d", "Url": "https://api.github.com/repos/EthanYu22/Bankroll-Breakdown-Continued", "Date": "2018-08-04T10:57:50Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!concurrentModification) throw e;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9710/buggy-version/h2o-core.src.main.java.hex.grid.GridSearch.java", "BodyUseAPI": [], "Fixed commit": "4a8f92d4ff5cef62f69ec3ff7acc9c574c9a21eb", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2018-03-22T21:37:11Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.art.getClass()) != (Controllers.structs.Artikel.class)) { checkAdditionalTextFields(this.additionalLabelFilling1); checkAdditionalTextFields(this.additionalLabelFilling2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4187/buggy-version/src.Controllers.views.ArtikelDialogueController.java", "BodyUseAPI": [], "Fixed commit": "6c39fcf3a0b7647fbf7c1cf08eb00049a95a29c1", "Url": "https://api.github.com/repos/juliankrieger/LagerGUI", "Date": "2018-01-21T01:19:24Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (axis.isZero()) axis.x = circle.radius;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4488/buggy-version/core.src.com.advergame.bubble.physics.SAT.java", "BodyUseAPI": [], "Fixed commit": "19b96235012367a32e74b17c66ed97c21dcee83e", "Url": "https://api.github.com/repos/doc97/LilyPop", "Date": "2018-07-16T15:37:50Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (regex != null) { regex = regex.replaceAll(\"^\\\"|\\\"$\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9776/buggy-version/src.main.java.life.genny.services.BatchLoading.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "7c8f7bf332fd5df0a6ecb08114e2e6248a4e9989", "Url": "https://api.github.com/repos/genny-project/qwanda-services", "Date": "2018-07-05T03:51:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) <= 1) { java.lang.String[] empty = new java.lang.String[0]; return empty; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/393/buggy-version/bundles.specmate-scheduler.src.com.specmate.scheduler.SchedulerIteratorFactory.java", "BodyUseAPI": [], "Fixed commit": "a9a9dde9fd8409812678ca8faee0629de912409a", "Url": "https://api.github.com/repos/junkerm/specmate", "Date": "2018-09-04T14:53:52Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.optJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (authorDescription != null) authorName = authorDescription.optString(\"webTitle\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4958/buggy-version/app.src.main.java.com.vaishjanardhan.news4u.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.optString(java.lang.String)"], "Fixed commit": "ec6fdbfa731757057a7df55ba7d9c90008563a24", "Url": "https://api.github.com/repos/vaishnavi-janardhan/News4U", "Date": "2018-08-15T17:32:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canCraft) count++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4513/buggy-version/src.main.java.de.shyrik.justcraftingframes.common.Utils.java", "BodyUseAPI": [], "Fixed commit": "e385f8a049a60813ab4c8f28fb5522dbd55e7b34", "Url": "https://api.github.com/repos/Rikshy/ModularItemFrame", "Date": "2018-08-04T15:31:59Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((es.size()) > 0) { for (java.lang.Exception exception : es) { org.nutz.dao.util.Daos.log.debug(exception.getMessage(), exception); } throw ((java.lang.RuntimeException) (es.get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5285/buggy-version/src.org.nutz.dao.util.Daos.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Exception>.get(int)"], "Fixed commit": "3532a9e3a1bbca0d00d6738a51dc839b6c5d729f", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2018-01-10T05:09:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.allsochen.m2cmake.configuration.Properties.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((json == null) || (json.isEmpty())) { json = com.github.allsochen.m2cmake.configuration.JsonConfigBuilder.getInstance().create(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7895/buggy-version/src.com.github.allsochen.m2cmake.configuration.Configuration.java", "BodyUseAPI": [], "Fixed commit": "d10fd31e7cd2056e9275cd4dfaa80705e7ec04a9", "Url": "https://api.github.com/repos/Allsochen/clion-m2cmake", "Date": "2018-07-09T16:43:28Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((((requestCode == 1123) && (resultCode == (RESULT_OK))) && (dataIntent != null)) && ((dataIntent.getExtras()) != null)) { groupid = dataIntent.getExtras().getString(\"g_id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/105/buggy-version/app.src.main.java.com.smdproject.smdproject.MainGroupActivity.java", "BodyUseAPI": ["dataIntent.getExtras().getString(java.lang.String)", "android.content.Intent.getExtras()"], "Fixed commit": "cc7c2fba2344806f24eb5f37ccfbd0805a719fcf", "Url": "https://api.github.com/repos/abdullahkamran/SMDProject", "Date": "2018-04-28T10:25:53Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jasig.cas.web.support.WebUtils.getHttpServletRequest(org.springframework.webflow.execution.RequestContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((request.getParameter(\"verification_key\")) != null) || ((credential.getVerificationKey()) != null)) { return new org.springframework.webflow.execution.Event(this, \"invalidVerificationKey\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7837/buggy-version/cas-server-support-osf.src.main.java.io.cos.cas.authentication.handler.support.OpenScienceFrameworkPrincipalFromRequestRemoteUserNonInteractiveCredentialsAction.java", "BodyUseAPI": [], "Fixed commit": "288fdaf52cf3aebf9f287c1925048b7264ad9289", "Url": "https://api.github.com/repos/cslzchen/cas-overlay", "Date": "2018-08-31T15:18:45Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rep.hasControl()) { double scaling = rep.getControlScaling(); double sigStrength = 1 - (scaling / ((rep.getSignal().getHitCount()) / (rep.getControl().getHitCount()))); sigCount = sigStrength * (rep.getSignal().getHitCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8061/buggy-version/src.org.seqcode.deepseq.utils.RegionTagCounts.java", "BodyUseAPI": ["rep.getSignal().getHitCount()", "rep.getSignal().getHitCount()", "org.seqcode.deepseq.experiments.ControlledExperiment.getSignal()", "org.seqcode.deepseq.experiments.ControlledExperiment.getControlScaling()", "rep.getControl().getHitCount()", "org.seqcode.deepseq.experiments.ControlledExperiment.getSignal()", "org.seqcode.deepseq.experiments.ControlledExperiment.getControl()"], "Fixed commit": "5a302fb682154b2ee2569f3042914175ddefb68d", "Url": "https://api.github.com/repos/seqcode/seqcode-core", "Date": "2018-02-02T03:24:56Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fml.common.FMLCommonHandler.instance().getMinecraftServerInstance().getServer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((minecraftServer != null) && (!(minecraftServer.isSinglePlayer()))) { minecraftServer.sendMessage(net.blay09.mods.eirairc.util.Utils.translateToDefault(chatComponent)); }else { if ((net.minecraft.client.Minecraft.getMinecraft().player) != null) { net.minecraft.client.Minecraft.getMinecraft().player.sendMessage(chatComponent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6388/buggy-version/src.main.java.net.blay09.mods.eirairc.util.Utils.java", "BodyUseAPI": ["net.minecraft.server.MinecraftServer.sendMessage(net.minecraft.util.text.ITextComponent)"], "Fixed commit": "d6f3dae239943bf5ca47ded1ea69a138787537de", "Url": "https://api.github.com/repos/Txuritan/EiraIRC", "Date": "2018-01-01T00:47:21Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(this.sNB.equals(\"\"))) && (!(this.sNB.equals(null)))) { json.put(edu.aku.hassannaqvi.dss_census_sur.contracts.NewBornContract.newBornFup.COLUMN_SNB, ((this.sNB) == null ? org.json.JSONObject.NULL : new org.json.JSONObject(this.sNB))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5629/buggy-version/app.src.main.java.edu.aku.hassannaqvi.dss_census_sur.contracts.NewBornContract.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,((this.sNB) == null ? org.json.JSONObject.NULL : new org.json.JSONObject(this.sNB)))"], "Fixed commit": "98dde0bbafccdef5165e2511b2b8c58ac41565a6", "Url": "https://api.github.com/repos/shznaqvi/DSS-Census", "Date": "2018-10-09T11:35:56Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.tracecompass.tmf.ui.widgets.timegraph.model.ITimeEvent.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tid == (java.lang.Integer.MIN_VALUE)) { return TRANSPARENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1396/buggy-version/analysis.org.eclipse.tracecompass.analysis.os.linux.ui.src.org.eclipse.tracecompass.internal.analysis.os.linux.ui.views.resources.ResourcesPresentationProvider.java", "BodyUseAPI": [], "Fixed commit": "cf5d87fe4355780b9bd92b8135c339ee10db07de", "Url": "https://api.github.com/repos/lajoiepy/tracecompass", "Date": "2018-03-06T20:47:52Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (threadStateItemIndex < (org.eclipse.tracecompass.internal.analysis.os.linux.ui.views.resources.ResourcesPresentationProvider.STATE_MAP.size())) { threadStateItemIndex += org.eclipse.tracecompass.internal.analysis.os.linux.ui.views.resources.ResourcesPresentationProvider.STATE_MAP.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1396/buggy-version/analysis.org.eclipse.tracecompass.analysis.os.linux.ui.src.org.eclipse.tracecompass.internal.analysis.os.linux.ui.views.resources.ResourcesPresentationProvider.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, org.eclipse.tracecompass.tmf.ui.widgets.timegraph.StateItem>.size()"], "Fixed commit": "cf5d87fe4355780b9bd92b8135c339ee10db07de", "Url": "https://api.github.com/repos/lajoiepy/tracecompass", "Date": "2018-03-06T20:47:52Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (kunkku == null) { java.lang.System.out.println(\"Tallennuksesi on korruptoitunut tai sit\u00e4 ei ole. Aloita uusi peli.\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2829/buggy-version/src.kuningaskuntaSimulaatio.Kuningaskunta.java", "BodyUseAPI": [], "Fixed commit": "3bfb6f14b5b1abd7330d8668b7019a6048261d13", "Url": "https://api.github.com/repos/Santtinen/Kuningaskunta-Simulaatio", "Date": "2018-03-12T18:25:05Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5106/buggy-version/src.org.exist.xquery.value.AbstractSequence.java", "BodyUseAPI": [], "Fixed commit": "a8d3beee55e200a68abb27dc0d7b7ee1d4ddf500", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-07-05T11:41:42Z"},
{"Line": "=>909", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.internal.util.typedef.X.cause(java.lang.Exception,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (batchCause != null) { if (rowsAffected != null) { for (long cnt : batchCause.getLargeUpdateCounts()) rowsAffected.add(cnt); } err.set(batchCause.getErrorCode(), batchCause.getMessage()); }else err.set(((org.apache.ignite.internal.processors.query.IgniteSQLException) (e)).statusCode(), org.apache.ignite.internal.processors.odbc.odbc.OdbcUtils.tryRetrieveH2ErrorMessage(e));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5542/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.odbc.odbc.OdbcRequestHandler.java", "BodyUseAPI": ["org.apache.ignite.lang.IgniteBiTuple<java.lang.Integer, java.lang.String>.set(int,java.lang.String)", "java.sql.BatchUpdateException.getLargeUpdateCounts()", "java.sql.BatchUpdateException.getMessage()", "java.sql.BatchUpdateException.getErrorCode()"], "Fixed commit": "f57860fca9afa777d28c5133c592c76c6f28dc57", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2018-08-30T17:15:48Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (dot != (-1)) { return s.substring(0, dot); }else { return s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5583/buggy-version/STH.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "c8e16a80f29512d6c0341991397a99e72b6dfd35", "Url": "https://api.github.com/repos/njasi/LegendOfSeaver", "Date": "2018-08-26T03:31:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(Constants.REDIRECT_URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(redirectUri)) { token.setNote(AuthenticationManager.SET_REDIRECT_URI_AFTER_REQUIRED_ACTIONS, \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8282/buggy-version/keycloak.sms-provider.src.main.java.org.sunbird.keycloak.rest.RequiredActionLinkProvider.java", "BodyUseAPI": [], "Fixed commit": "d9c45f01439330a59c6521a62e762853989be82e", "Url": "https://api.github.com/repos/project-sunbird/sunbird-auth", "Date": "2018-09-27T10:28:26Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((s.length()) == 0) && ((mTextBuilder.length()) != 0)) mTextBuilder.setLength(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3543/buggy-version/library.src.main.java.me.dkzwm.widget.fet.FormattedEditText.java", "BodyUseAPI": ["java.lang.StringBuilder.setLength(int)"], "Fixed commit": "52e6011598633a320ff7e94226e8f0505b26218b", "Url": "https://api.github.com/repos/dkzwm/FormatEditText", "Date": "2018-03-14T07:49:08Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) != null) return type; else return com.cloudcraftgaming.discal.api.enums.announcement.AnnouncementType.UNIVERSAL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1992/buggy-version/API.src.main.java.com.cloudcraftgaming.discal.api.object.announcement.Announcement.java", "BodyUseAPI": [], "Fixed commit": "1f8149e7c5d459b4acf41a00e811b8a3d2f8b991", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2018-06-15T17:39:31Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.idea.svn.SvnVcs.getInfo(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == info) { throw new java.lang.RuntimeException(\"Can not get svn info\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9910/buggy-version/src.main.java.com.guyazhou.plugin.reviewboard.vcsprovider.svn.SvnVcsProvider.java", "BodyUseAPI": [], "Fixed commit": "26e9804d30f18bc0a658f3043d8c903dbc50be7b", "Url": "https://api.github.com/repos/asiaon123/review-board-support", "Date": "2018-07-27T04:35:05Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.ptis.domain.service.property.PropertyPersistenceService.find(java.lang.String,user.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (basicProp != null) errorMesg.append(\" for assessment number : \").append(basicProp.getUpicNo());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8932/buggy-version/egov.egov-ptis.src.main.java.org.egov.ptis.domain.service.property.PropertyPersistenceService.java", "BodyUseAPI": ["java.lang.StringBuilder.append(basicProp.getUpicNo())", "org.egov.ptis.domain.entity.property.BasicProperty.getUpicNo()"], "Fixed commit": "66fcd0a9a93b5b0bd708ca68152973c0714b5f92", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2018-04-19T08:59:00Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.end) != null) ch.awae.simtrack.controller.Log.info(\"Ende: \", new ch.awae.simtrack.model.position.TileEdgeCoordinate(this.end, this.endEdge));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3542/buggy-version/src.main.java.ch.awae.simtrack.controller.tools.PathFindingTool.java", "BodyUseAPI": [], "Fixed commit": "0ebc3eb31534b2dce6d6a5b55d4c72bcc55382c0", "Url": "https://api.github.com/repos/WaDosCh/SimTrack", "Date": "2018-01-27T00:08:23Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.start) != null) { ch.awae.simtrack.controller.Log.info(\"Start:\", new ch.awae.simtrack.model.position.TileEdgeCoordinate(this.start, this.startEdge)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3542/buggy-version/src.main.java.ch.awae.simtrack.controller.tools.PathFindingTool.java", "BodyUseAPI": [], "Fixed commit": "0ebc3eb31534b2dce6d6a5b55d4c72bcc55382c0", "Url": "https://api.github.com/repos/WaDosCh/SimTrack", "Date": "2018-01-27T00:08:23Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myMarker) == null) { android.widget.Toast.makeText(this, (\"\\u041d\\u044f\\u043c\\u0430 \\u0438\\u0437\\u0431\\u0440\\u0430\\u043d\\u043e \\u043c\\u044f\\u0441\\u0442\\u043e\\n\\u0417\\u0430 \\u0434\\u0430 \\u0438\\u0437\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u0442\\u0430\\u043a\\u043e\\u0432\\u0430 \\u043d\\u0430\\u0442\\u0438\\u0441\\u043d\\u0435\\u0442\\u0435 \\u043d\\u0430 \\u0436\\u0435\\u043b\\u0430\\u043d\\u043e\\u0442\\u043e \\u043e\\u0442 \\u0432\\u0430\\u0441 \\u043c\\u044f\\u0441\\u0442\\u043e \\u043d\\u0430 \\u043a\\u0430\\u0440\\u0442\\u0430\\u0442\\u0430 \\u0438\\u043b\\u0438\" + \"\u0438\u0437\u0431\u0435\u0440\u0435\u0442\u0435 \u0442\u0430\u043a\u043e\u0432\u0430 \u043e\u0442 \u0442\u044a\u0440\u0441\u0430\u0447\u043a\u0430\u0442\u0430.\"), Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3462/buggy-version/GoSportBG.app.src.main.java.com.kamenov.martin.gosportbg.maps.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "a3fdde3661ce9730a4ef44c68188f120bd2ef447", "Url": "https://api.github.com/repos/MartinKamenov/GoSport", "Date": "2018-09-10T17:03:49Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.endeavourhealth.core.terminology.TerminologyService.lookupSnomedTerm(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(term)) { org.endeavourhealth.transform.common.TransformWarnings.log(org.endeavourhealth.transform.barts.transforms.ProblemTransformer.LOG, parser, \"Failed to lookup Snomed term for code {}\", code); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5083/buggy-version/src.main.java.org.endeavourhealth.transform.barts.transforms.ProblemTransformer.java", "BodyUseAPI": [], "Fixed commit": "6659d51389b6233ab2b3f0affadebb9aa812d5b0", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-03-08T16:54:39Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.endeavourhealth.core.terminology.TerminologyService.lookupIcd10CodeDescription(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(term)) { org.endeavourhealth.transform.common.TransformWarnings.log(org.endeavourhealth.transform.barts.transforms.ProblemTransformer.LOG, parser, \"Failed to lookup ICD-10 term for code {}\", code); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5083/buggy-version/src.main.java.org.endeavourhealth.transform.barts.transforms.ProblemTransformer.java", "BodyUseAPI": [], "Fixed commit": "6659d51389b6233ab2b3f0affadebb9aa812d5b0", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-03-08T16:54:39Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((instancesCount)++) < (windowSize)) { return this.optimizer.createMonitor(set); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9558/buggy-version/src.main.java.de.heidelberg.pvs.diego.collectionswitch.context.impl.EmpiricalSetAllocationContext.java", "BodyUseAPI": [], "Fixed commit": "55b96549dd4393fed21d15832b03a81067e7b028", "Url": "https://api.github.com/repos/DiegoEliasCosta/collectionSwitch", "Date": "2018-05-09T08:57:14Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expansion.getValue().shouldUpdate()) { line.suggestCommand((\"/papi ecloud download \" + (expansion.getValue().getName()))); }else { line.suggestCommand((\"/papi ecloud info \" + (expansion.getValue().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7746/buggy-version/src.main.java.me.clip.placeholderapi.commands.ExpansionCloudCommands.java", "BodyUseAPI": ["me.rayzr522.jsonmessage.JSONMessage.suggestCommand((\"/papi ecloud info \" + (expansion.getValue().getName())))", "expansion.getValue().getName()", "expansion.getValue().getName()", "me.rayzr522.jsonmessage.JSONMessage.suggestCommand((\"/papi ecloud download \" + (expansion.getValue().getName())))", "java.util.Map.Entry<java.lang.Integer, me.clip.placeholderapi.expansion.cloud.CloudExpansion>.getValue()", "java.util.Map.Entry<java.lang.Integer, me.clip.placeholderapi.expansion.cloud.CloudExpansion>.getValue()"], "Fixed commit": "90bc3c8da1834618dc0c6ef1e6cc51666d3b76f7", "Url": "https://api.github.com/repos/PlaceholderAPI/PlaceholderAPI", "Date": "2018-10-20T20:30:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewController) != null) viewController.update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4653/buggy-version/src.udc.Model.java", "BodyUseAPI": [], "Fixed commit": "1798b9f04823abe9696a02459384fa9e89c8c24c", "Url": "https://api.github.com/repos/mig-amq/SWDESPA-FINAL", "Date": "2018-04-16T07:01:17Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastRowMetadata) != null) { lastRowMetadata.setSampleNbRows(count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3196/buggy-version/dataprep-backend-common.src.main.java.org.talend.dataprep.transformation.pipeline.node.SourceNode.java", "BodyUseAPI": [], "Fixed commit": "7aeee9acb1683804f3288f370d70d17b1ec94bc0", "Url": "https://api.github.com/repos/Talend/data-prep", "Date": "2018-05-11T15:05:18Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSocialNetworkManager) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3818/buggy-version/twitter.src.main.java.com.github.gorbin.asne.twitter.TwitterSocialNetwork.java", "BodyUseAPI": [], "Fixed commit": "085c16c84b03a3a5d52efea0bd1a698801cdc859", "Url": "https://api.github.com/repos/claudiabrito/ASNE", "Date": "2018-04-17T19:01:56Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(((getScrollY()) + scrollDistance))) > (java.lang.Math.abs(mContentView.getMeasuredHeight()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4751/buggy-version/pulldownmenu.src.main.java.com.younchen.pulldownmenu.DragContainer.java", "BodyUseAPI": [], "Fixed commit": "8c25f52a7fcf8e6eacc6c47bb3998a47142583bc", "Url": "https://api.github.com/repos/YounMario/PullDownView", "Date": "2018-06-06T07:42:35Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (imageCompression.Image_compression.scanImg.hasNext(\"#\")) imageCompression.Image_compression.scanImg.nextLine();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6323/buggy-version/Image_Compression.src.imageCompression.Image_compression.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "f00011adacbdcc4b13c9934956e998e717c9cb2f", "Url": "https://api.github.com/repos/cjr61/SDV-and-PCA", "Date": "2018-04-16T18:39:52Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (c == (org.eclipse.jdt.core.dom.TypeDeclaration.class)) { name = ((org.eclipse.jdt.core.dom.TypeDeclaration) (node)).getName(); }else { name = ((org.eclipse.jdt.core.dom.MethodDeclaration) (node)).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/839/buggy-version/dev.plugins.hu.elte.txtuml.validation.src.hu.elte.txtuml.validation.common.AbstractValidationProblem.java", "BodyUseAPI": [], "Fixed commit": "ef759fdcd116a4e3c5f113a6795c113156509090", "Url": "https://api.github.com/repos/ELTE-Soft/txtUML", "Date": "2018-10-15T20:38:28Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username.trim().equals(\"\")) { com.fmning.wpi_csa.helpers.Utils.showAlertMessage(getActivity(), getString(R.string.login_empty_username)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3855/buggy-version/app.src.main.java.com.fmning.wpi_csa.fragments.SettingFragment.java", "BodyUseAPI": [], "Fixed commit": "a5a9229a8a0b1c9c966257504e6cafbcf1c21720", "Url": "https://api.github.com/repos/DerekFangming/WPI_CSA_Android", "Date": "2018-01-19T20:54:46Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (password.trim().equals(\"\")) { com.fmning.wpi_csa.helpers.Utils.showAlertMessage(getActivity(), getString(R.string.login_empty_password)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3855/buggy-version/app.src.main.java.com.fmning.wpi_csa.fragments.SettingFragment.java", "BodyUseAPI": [], "Fixed commit": "a5a9229a8a0b1c9c966257504e6cafbcf1c21720", "Url": "https://api.github.com/repos/DerekFangming/WPI_CSA_Android", "Date": "2018-01-19T20:54:46Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (otp.getText().toString().equals(\"\")) { android.widget.Toast.makeText(getApplicationContext(), \"Enter OTP and Verify\", Toast.LENGTH_LONG).show(); }else if (otp.getText().toString().equals(\"1234\")) { android.content.Intent intent = new android.content.Intent(getApplication(), com.weather.sss.khoon.signup.class); intent.putExtra(\"aadhar\", aadhar.getText().toString()); startActivity(intent); }else { android.widget.Toast.makeText(getApplicationContext(), \"Incorrect OTP\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1302/buggy-version/app.src.main.java.com.weather.sss.khoon.aadharverifydonate.java", "BodyUseAPI": ["otp.getText().toString()", "otp.getText().toString().equals(java.lang.String)", "android.widget.EditText.getText()"], "Fixed commit": "ab48aaec64fd56329c7b5816b2c23cf8c4b478f3", "Url": "https://api.github.com/repos/SSS15181518/Khoon", "Date": "2018-10-28T02:05:58Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (branches[currentBranch].hasQueuedThreads()) { Tracer.arrive(currentBranch); branches[currentBranch].release(); Timer.advanceTime(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3765/buggy-version/src.Taxi.java", "BodyUseAPI": ["java.util.concurrent.Semaphore.release()", "Tracer.arrive(int)"], "Fixed commit": "4ee8e650a021911094c08eaf767e9d9d39c96a0b", "Url": "https://api.github.com/repos/mmorris44/CSC3002F_Assignment_4", "Date": "2018-05-18T14:55:30Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((branches[currentBranch].availablePermits()) > 0) { Tracer.depart(currentBranch); branches[currentBranch].acquire(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3765/buggy-version/src.Taxi.java", "BodyUseAPI": ["java.util.concurrent.Semaphore.acquire()", "Tracer.depart(int)"], "Fixed commit": "4ee8e650a021911094c08eaf767e9d9d39c96a0b", "Url": "https://api.github.com/repos/mmorris44/CSC3002F_Assignment_4", "Date": "2018-05-18T14:55:30Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.b3log.latke.util.CollectionUtils.jsonArrayToList(articleRepository.get(articleQuery).optJSONArray(Keys.RESULTS))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (articles.isEmpty()) { org.b3log.symphony.service.MailMgmtService.LOGGER.info(\"No article as newsletter to send\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9485/buggy-version/src.main.java.org.b3log.symphony.service.MailMgmtService.java", "BodyUseAPI": [], "Fixed commit": "724ffb505098402ad878c0b2ce60b43bb30fddfe", "Url": "https://api.github.com/repos/xiongba-me/symphony", "Date": "2018-02-27T08:36:55Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isPrecisionEnabled()) mathHelper = new com.github.Speentie8081.mandelbrot.implementations.PrecisionMathHelper(this, com.github.Speentie8081.mandelbrot.Mandelbrot.getPrecisionContext()); else mathHelper = new com.github.Speentie8081.mandelbrot.implementations.BasicMathHelper(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3707/buggy-version/src.main.java.com.github.Speentie8081.mandelbrot.implementations.BigDouble.java", "BodyUseAPI": [], "Fixed commit": "ffa70dfd1d1a4aaa19f86e308ec7a1cf891d9c75", "Url": "https://api.github.com/repos/java-mandelbrot/mandelbrot", "Date": "2018-09-11T20:12:49Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.metamodel.EntityType<?>.getIdType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idType.getPersistenceType().equals(Type.PersistenceType.BASIC)) { java.util.Iterator iterator = idAttributeSet.iterator(); if (!(iterator.hasNext())) { throw new java.lang.RuntimeException(((\"The entity type\" + (entityType.getName())) + \"does not have an Id!\")); } entityIdValues.put(((javax.persistence.metamodel.SingularAttribute) (iterator.next())).getName(), entityId); if (iterator.hasNext()) { throw new java.lang.RuntimeException(((\"Could not match the given entityId to the entity type specified in the view: the entity type\" + (entityType.getName())) + \"has more than one Id field!\")); } }else { for (java.lang.reflect.Field field : java.util.Arrays.asList(entityId.getClass().getDeclaredFields())) { field.setAccessible(java.lang.Boolean.TRUE); try { entityIdValues.put(field.getName(), field.get(entityId)); } catch (java.lang.IllegalAccessException e) { throw new java.lang.IllegalStateException(((\"Could not access field: \" + (field.getName())) + \".\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2224/buggy-version/entity-view.impl.src.main.java.com.blazebit.persistence.view.impl.EntityViewManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "7bae20f7c716d71c5d23e656c36f2339c14ed9e4", "Url": "https://api.github.com/repos/AFbenHassine/blaze-persistence", "Date": "2018-09-18T15:16:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["em.getMetamodel().entity(entityClass).getIdType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idType.getPersistenceType().equals(Type.PersistenceType.BASIC)) { java.util.Iterator iterator = idAttributeNames.iterator(); if (!(iterator.hasNext())) { throw new java.lang.RuntimeException(((\"The entity type\" + (entityClass.getName())) + \"does not have an Id!\")); } ownerIds.put(((java.lang.String) (iterator.next())), id); if (iterator.hasNext()) { throw new java.lang.RuntimeException(((\"Could not match the given entityId to the entity type specified in the view: the entity type\" + (entityClass.getName())) + \"has more than one Id field!\")); } }else { for (java.lang.reflect.Field field : java.util.Arrays.asList(id.getClass().getFields())) { try { ownerIds.put(field.getName(), field.get(id)); } catch (java.lang.IllegalAccessException e) { throw new java.lang.IllegalStateException((\"Cannot access id class property: \" + (e.getMessage())), e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2224/buggy-version/entity-view.impl.src.main.java.com.blazebit.persistence.view.impl.entity.FlusherBasedEntityLoader.java", "BodyUseAPI": [], "Fixed commit": "7bae20f7c716d71c5d23e656c36f2339c14ed9e4", "Url": "https://api.github.com/repos/AFbenHassine/blaze-persistence", "Date": "2018-09-18T15:16:24Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smhl.repository.game.GameRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (game.isFinished()) { this.gameService.reset(game); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3750/buggy-version/src.main.java.com.smhl.controller.ui.game.GameUIController.java", "BodyUseAPI": ["com.smhl.service.game.GameService.reset(com.smhl.entity.game.Game)"], "Fixed commit": "4849dc76e3650bbf247d1c5d2dc526c612282530", "Url": "https://api.github.com/repos/sPrizio/SMHL-API", "Date": "2018-10-13T17:50:17Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nick.getSkin()) == null) nick.mojangInfo();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2733/buggy-version/src.java.net.firecraftmc.shared.classes.model.player.FirecraftPlayer.java", "BodyUseAPI": ["net.firecraftmc.shared.classes.model.player.FirecraftPlayer.mojangInfo()"], "Fixed commit": "3962fadadbd6518b8a3dd0ceb74c8d07453b1508", "Url": "https://api.github.com/repos/Firestar311/FirecraftAPI", "Date": "2018-06-10T10:09:53Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configFile.isDirectory()) { return parse(dataConfigHomeDirectory, constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6809/buggy-version/main.java.io.github.azagniotov.stubby4j.yaml.YAMLParser.java", "BodyUseAPI": ["io.github.azagniotov.stubby4j.yaml.YAMLParser.constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile))", "io.github.azagniotov.stubby4j.yaml.YAMLParser.parse(java.lang.String,constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile)))", "io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(java.io.File)"], "Fixed commit": "4af6cbf021714e804465336d4f2e9fd9f63afc7c", "Url": "https://api.github.com/repos/asarkar/stubby4j", "Date": "2018-01-15T22:42:31Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(editText.getText().toString().equals(\"\"))) { tvHintTextView.animate().translationY((((-(rlContainer.getHeight())) / 2) - 10)); tvHintTextView.animate().translationX(hitLeftMargin); tvHintTextView.animate().scaleX(0.7F); tvHintTextView.animate().scaleY(0.7F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/185/buggy-version/edittextcustomlayout.src.main.java.com.swagat.edittextcustomlayout.EditTextCustomLayout.java", "BodyUseAPI": [], "Fixed commit": "0f9e5f5e5e71afaa66d74fa0da61532d3d3248c6", "Url": "https://api.github.com/repos/swagatnayak/CustomEDitText", "Date": "2018-07-20T06:25:53Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!canEdit) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3606/buggy-version/src.ui_main_panel.TermsTreePanel.java", "BodyUseAPI": [], "Fixed commit": "9510a54dba60697565ce3f3dea72d2c386f8b543", "Url": "https://api.github.com/repos/openefsa/catalogue-browser", "Date": "2018-02-21T07:11:31Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((skillName) != null) { return java.lang.String.format(\"%s (%d): %d \u279c %d\", skillName, skillNumber, ((destSkillLevel) - 1), destSkillLevel); }else { return java.lang.String.format(\"%d: %d \u279c %d\", skillNumber, ((destSkillLevel) - 1), destSkillLevel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2894/buggy-version/app.src.main.java.world.arshad.grandordercompanion.data.SkillUp.java", "BodyUseAPI": [], "Fixed commit": "1c8e76bf0010e3af021d61c789cc83e75c561406", "Url": "https://api.github.com/repos/nisegami/grand-order-companion", "Date": "2018-04-15T23:47:05Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mBluetoothGatt.writeCharacteristic(characteristic)) { result = \"writeCharacteristic OK\"; }else result = \"writeCharacteristic Error\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2408/buggy-version/app.src.main.java.com.zedfy.zedcon.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e5c5aa4d0b6cbc5ecab9e9c7bbc3d6c62b3ed5a5", "Url": "https://api.github.com/repos/gennady-melesh/Zedcon", "Date": "2018-02-13T16:54:58Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (payload != null) { java.lang.String message = new java.lang.String(msg, java.nio.charset.Charset.defaultCharset()); log.info((\"Received : \" + message)); controller.onMessageReceived(headers.getDestination(), message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9525/buggy-version/src.main.java.ru.stomp.MyStompSessionHandler.java", "BodyUseAPI": [], "Fixed commit": "9e36efc85705239d2308645ae902a290702a4490", "Url": "https://api.github.com/repos/pbarbashov/stomp-ui", "Date": "2018-10-02T07:32:24Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hcls.CommandProcessor.copyDir(fileInSourceDir, new java.io.File((((dest.toString()) + '/') + (fileInSourceDir.getName())))))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/178/buggy-version/src.hcls.CommandProcessor.java", "BodyUseAPI": [], "Fixed commit": "7504df2941573f86ca5ef288e74abe768a5c862a", "Url": "https://api.github.com/repos/bob1219/HyperCommandLineShell", "Date": "2018-06-06T12:06:41Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((accessToken) == null) { basis = null; logger.error((\"\u63d0\u53d6\u9a8c\u8bc1\u4fe1\u606f\u5931\u8d25\u3002Token is:\" + token)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2115/buggy-version/src.main.java.com.insight.usercenter.common.Verify.java", "BodyUseAPI": [], "Fixed commit": "356b47d137e7f4f2f62d3cfd525766c85492287b", "Url": "https://api.github.com/repos/xuanbg/insight.user-center", "Date": "2018-02-17T00:07:30Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firstSplit.length) == 0) { com.thebuyback.eve.service.AppraisalUtil.LOG.warn(\"The following text could not be appraised: {}\", raw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4938/buggy-version/src.main.java.com.thebuyback.eve.service.AppraisalUtil.java", "BodyUseAPI": [], "Fixed commit": "cdaa22187ffeb14a557857e90188517ad997fcbe", "Url": "https://api.github.com/repos/bahrmichael/the-buyback", "Date": "2018-01-26T11:36:15Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.governance.api.util.GovernanceUtils.getAllCheckListItemBeans(org.wso2.carbon.registry.core.Resource,org.wso2.carbon.governance.api.generic.dataobjects.GenericArtifact,APIConstants.API_LIFE_CYCLE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (checkListItemBeans != null) { for (org.wso2.carbon.governance.api.common.util.CheckListItemBean checkListItemBean : checkListItemBeans) { if (APIConstants.DEPRECATE_CHECK_LIST_ITEM.equals(checkListItemBean.getName())) { deprecateOldVersionsCheckListOrder = checkListItemBean.getOrder(); }else if (APIConstants.RESUBSCRIBE_CHECK_LIST_ITEM.equals(checkListItemBean.getName())) { makeKeysForwardCompatibleCheckListOrder = checkListItemBean.getOrder(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9346/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.executors.APIExecutor.java", "BodyUseAPI": [], "Fixed commit": "a6e7baba27f55e6124ebaeac8bab05b4aab1cfb8", "Url": "https://api.github.com/repos/sameeragunarathne/carbon-apimgt", "Date": "2018-10-02T10:25:18Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (amount >= (messages.size())) { return getAllMessages(); }else { return copyOfList(messages.subList(((messages.size()) - amount), messages.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3501/buggy-version/src.main.java.model.Channel.java", "BodyUseAPI": ["java.util.List<model.IMessage>.size()", "java.util.List<model.IMessage>.size()", "model.Channel.copyOfList(messages.subList(((messages.size()) - amount), messages.size()))", "java.util.List<model.IMessage>.subList(((messages.size()) - amount),messages.size())"], "Fixed commit": "0cd6df835633d11198786aa724df35816eadcc5b", "Url": "https://api.github.com/repos/rothen98/Together4Ever", "Date": "2018-10-04T16:34:44Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MyService.isRun) { (com.intelligencefactory.android.MainActivity.curtime)--; java.text.SimpleDateFormat format = new java.text.SimpleDateFormat(\"HH:mm\"); java.util.Date date = new java.util.Date((((com.intelligencefactory.android.MainActivity.curtime) * 60) * 1000)); text.setText(format.format(date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3957/buggy-version/app.src.main.java.com.intelligencefactory.android.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "de3d62f46177212b88e1ee08d3b5dc988726576f", "Url": "https://api.github.com/repos/lyx937131777/intelligencefactory", "Date": "2018-06-11T09:18:25Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((key) == null) { open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5460/buggy-version/src.main.java.edu.harvard.iq.dataverse.dataaccess.S3AccessIO.java", "BodyUseAPI": [], "Fixed commit": "d3beb4769542f13563dce1ae4edda0e156db7e8d", "Url": "https://api.github.com/repos/EC528-Dataverse-Scaling/dataverse", "Date": "2018-02-12T05:46:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getType()) != (org.bukkit.entity.EntityType.PLAYER)) e.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5522/buggy-version/src.main.java.com.jaoafa.MyMaid2.Command.Cmd_Ck.java", "BodyUseAPI": ["org.bukkit.entity.Entity.remove()"], "Fixed commit": "9b2abde3485499ec9f196e08e3c44ba8e0486386", "Url": "https://api.github.com/repos/jaoafa/MyMaid2", "Date": "2018-05-15T13:09:38Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dd.plist.BinaryPropertyListParser.parseUnsignedInt(byte[],int,int)", "com.dd.plist.BinaryPropertyListParser.parseUnsignedInt(byte[],int,int)", "com.dd.plist.BinaryPropertyListParser.parseUnsignedInt(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((offsetTableOffset + ((numObjects + 1) * offsetSize)) > (bytes.length)) { throw new com.dd.plist.PropertyListFormatException(\"The property list contains a corrupted object offset table.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6071/buggy-version/src.main.java.com.dd.plist.BinaryPropertyListParser.java", "BodyUseAPI": [], "Fixed commit": "723cc271130381b038e732cfac1715c6ab1bf38a", "Url": "https://api.github.com/repos/3breadt/dd-plist", "Date": "2018-06-14T09:08:20Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.parent) instanceof com.myreward.parser.metamodel.PackageMetaModel) { if ((this.repeatMetaModel) != null) { for (int index = 0; index < (this.preRepeatEventOpCodeListTemplate.length); index++) groupOpcodeList.add(java.lang.String.format(preRepeatEventOpCodeListTemplate[index], metaSymbol.getFullyQualifiedId(), java.lang.String.format(com.myreward.parser.metamodel.EventMetaModel.overrideTemplate, metaSymbol.version))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5344/buggy-version/src.main.java.com.myreward.parser.metamodel.EventMetaModel.java", "BodyUseAPI": [], "Fixed commit": "8f6dc1bddfa1ea43e04ff7e9541771997acc65fe", "Url": "https://api.github.com/repos/vippulpanditgit/myrewardengine", "Date": "2018-04-28T22:38:02Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (max == (-1)) { max = lineNumber.getLineNumber(); }else if (max < (lineNumber.getLineNumber())) { max = lineNumber.getLineNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1612/buggy-version/microbat.src.main.microbat.codeanalysis.bytecode.MethodFinderByLine.java", "BodyUseAPI": [], "Fixed commit": "5ea96681defe1e277c5bbc75efb1490bd716de11", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-04-05T15:37:46Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (min > (lineNumber.getLineNumber())) { min = lineNumber.getLineNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1612/buggy-version/microbat.src.main.microbat.codeanalysis.bytecode.MethodFinderByLine.java", "BodyUseAPI": ["org.apache.bcel.classfile.LineNumber.getLineNumber()"], "Fixed commit": "5ea96681defe1e277c5bbc75efb1490bd716de11", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-04-05T15:37:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((min <= (point.getLineNumber())) && ((point.getLineNumber()) <= max)) { this.setMethod(method); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1612/buggy-version/microbat.src.main.microbat.codeanalysis.bytecode.MethodFinderByLine.java", "BodyUseAPI": [], "Fixed commit": "5ea96681defe1e277c5bbc75efb1490bd716de11", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-04-05T15:37:46Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (spi.getClass().getName().contains(\"J2KImageReaderSpi\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8436/buggy-version/modules.storage.geotk-coverage-store.src.main.java.org.geotoolkit.coverage.filestore.FileCoverageStoreFactory.java", "BodyUseAPI": [], "Fixed commit": "300142e7bb8291671db690ffd4c521ecd41ad8f3", "Url": "https://api.github.com/repos/Geomatys/geotoolkit", "Date": "2018-03-30T08:05:27Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((args != null) && ((args.length) > 0)) { java.lang.System.out.println(org.matt.tools.CharacterEncoder.convert(args[0])); }else { java.lang.System.out.println(\"Usage: java -jar proxy-pwd-config.jar myPasswordToEncodeWithSp3ci@lChars!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5722/buggy-version/src.main.java.org.matt.tools.ProxyPasswordConfig.java", "BodyUseAPI": ["java.io.PrintStream.println(org.matt.tools.CharacterEncoder.convert(args[0]))", "org.matt.tools.CharacterEncoder.convert(java.lang.String)"], "Fixed commit": "56cbbc743e55554afec1eba0ff016c45b79d7565", "Url": "https://api.github.com/repos/m-dubois/proxy-pwd-config", "Date": "2018-01-26T16:41:42Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getThing().getStatus()) != (org.eclipse.smarthome.core.thing.ThingStatus.REMOVING)) { updateStatus(ThingStatus.OFFLINE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7097/buggy-version/org.openhab.binding.zigbee.src.main.java.org.openhab.binding.zigbee.handler.ZigBeeThingHandler.java", "BodyUseAPI": [], "Fixed commit": "1b0fed96f31a33ccc91638b35e5e0d24c259b963", "Url": "https://api.github.com/repos/hsudbrock/org.openhab.binding.zigbee", "Date": "2018-10-31T16:14:39Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count != (this.transpositionLevel)) { return text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6496/buggy-version/src.dkupert.cipher.TranspositionCipher.java", "BodyUseAPI": [], "Fixed commit": "83253444ae5af44c3d23018f58a78432537f065b", "Url": "https://api.github.com/repos/weiserjOrg1/verschluesselung3-dkupert-tgm", "Date": "2018-10-20T15:12:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.xxl.job.admin.core.conf.XxlJobAdminConfig.getAdminConfig().isMailSSL()) { email.setSslSmtpPort(com.xxl.job.admin.core.conf.XxlJobAdminConfig.getAdminConfig().getMailPort()); email.setSSLOnConnect(true); }else { email.setSmtpPort(java.lang.Integer.valueOf(com.xxl.job.admin.core.conf.XxlJobAdminConfig.getAdminConfig().getMailPort())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9259/buggy-version/xxl-job-admin.src.main.java.com.xxl.job.admin.core.util.MailUtil.java", "BodyUseAPI": [], "Fixed commit": "368260a4b3edef2b1a9d5fd8ea7fc05eee291ae1", "Url": "https://api.github.com/repos/411241940/xxl-job", "Date": "2018-04-20T09:56:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(data[position].image))) { com.squareup.picasso.Picasso.with(context).load(data[position].image).into(holder.imageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2867/buggy-version/app.src.main.java.com.example.maikhoi.bakingapp.Adapter.RecipeNameAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(context).load(data[position].image)", "com.squareup.picasso.Picasso.with(context).load(data[position].image).into(android.widget.ImageView)"], "Fixed commit": "af14882eb51dfbea96934b323bb898fad4142272", "Url": "https://api.github.com/repos/tqhuy1811/Baking-Project", "Date": "2018-02-10T23:51:36Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((flokesz.getBacked()) > 0) { flokesz.applyBackward(bear.getSpeed()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8743/buggy-version/FlokeszOwnEngine.src.main.java.com.mycompany.flokeszownengine.BL.Stage1.java", "BodyUseAPI": ["java.lang.Character.applyBackward(bear.getSpeed())"], "Fixed commit": "f03388956d2982695744eacf665a72c17cfc4de7", "Url": "https://api.github.com/repos/kissdavid0506/FlokeszWithOwnEngine", "Date": "2018-04-14T13:41:07Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (instance == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7840/buggy-version/src.main.java.org.jenkinsci.plugins.pluginusage.analyzer.JobAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "3b25c18c912b9936a8a03626898e811c7f2d262c", "Url": "https://api.github.com/repos/jenkinsci/plugin-usage-plugin", "Date": "2018-04-20T17:30:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (instance == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7840/buggy-version/src.main.java.org.jenkinsci.plugins.pluginusage.analyzer.JobCollector.java", "BodyUseAPI": [], "Fixed commit": "3b25c18c912b9936a8a03626898e811c7f2d262c", "Url": "https://api.github.com/repos/jenkinsci/plugin-usage-plugin", "Date": "2018-04-20T17:30:07Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jenkins == null) { return mapJobsPerPlugin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7840/buggy-version/src.main.java.org.jenkinsci.plugins.pluginusage.analyzer.JobCollector.java", "BodyUseAPI": [], "Fixed commit": "3b25c18c912b9936a8a03626898e811c7f2d262c", "Url": "https://api.github.com/repos/jenkinsci/plugin-usage-plugin", "Date": "2018-04-20T17:30:07Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alphabet instanceof com.milaboratory.core.sequence.AlphabetCaseSensitive) for (byte i = 0; i < codes; ++i) for (byte j = 0; j < codes; ++j) { if ((java.lang.Character.toLowerCase(alphabet.codeToSymbol(i))) == (java.lang.Character.toLowerCase(alphabet.codeToSymbol(j)))) matrix[(i + (codes * j))] = match; } else for (int i = 0; i < codes; ++i) matrix[(i + (codes * i))] = match;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2299/buggy-version/src.main.java.com.milaboratory.core.alignment.ScoringUtils.java", "BodyUseAPI": ["com.milaboratory.core.sequence.Alphabet<?>.codeToSymbol(byte)", "java.lang.Character.toLowerCase(alphabet.codeToSymbol(i))", "com.milaboratory.core.sequence.Alphabet<?>.codeToSymbol(byte)", "java.lang.Character.toLowerCase(alphabet.codeToSymbol(j))"], "Fixed commit": "dc479ad6cacf7ead89a564818a10f091909ddb8c", "Url": "https://api.github.com/repos/milaboratory/milib", "Date": "2017-10-30T11:30:24Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((ip == null) || (\"\".equals(ip))) ip = request.getRemoteAddr();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/729/buggy-version/AmericaOnWine.src.main.java.com.revature.americaonwine.util.CorsFilter.java", "BodyUseAPI": [], "Fixed commit": "2b6b901ea1eb1a854981265205ae6c49aacd3e63", "Url": "https://api.github.com/repos/JennGoodman/AmericaOnWine", "Date": "2018-02-17T23:27:47Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"0:0:0:0:0:0:0:1\".equals(ip)) ip = \"http://localhost:4200\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/729/buggy-version/AmericaOnWine.src.main.java.com.revature.americaonwine.util.CorsFilter.java", "BodyUseAPI": [], "Fixed commit": "2b6b901ea1eb1a854981265205ae6c49aacd3e63", "Url": "https://api.github.com/repos/JennGoodman/AmericaOnWine", "Date": "2018-02-17T23:27:47Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ure.ui.Icons.Icon.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clone.bgColor) != null) clone.bgColor = new ure.math.UColor(clone.bgColor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3439/buggy-version/src.main.java.ure.ui.Icons.Icon.java", "BodyUseAPI": [], "Fixed commit": "2d24c7e727b096ff4cb244b55a98c2da2f263306", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-08-19T00:44:33Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ure.ui.Icons.Icon.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clone.bgVariants) != null) { for (int i = 0; i < (clone.bgVariants.length); i++) clone.bgVariants[i] = new ure.math.UColor(clone.bgVariants[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3439/buggy-version/src.main.java.ure.ui.Icons.Icon.java", "BodyUseAPI": [], "Fixed commit": "2d24c7e727b096ff4cb244b55a98c2da2f263306", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-08-19T00:44:33Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ure.ui.Icons.Icon.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clone.fgColor) != null) clone.fgColor = new ure.math.UColor(clone.fgColor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3439/buggy-version/src.main.java.ure.ui.Icons.Icon.java", "BodyUseAPI": [], "Fixed commit": "2d24c7e727b096ff4cb244b55a98c2da2f263306", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-08-19T00:44:33Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ure.ui.Icons.Icon.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clone.fgVariants) != null) { for (int i = 0; i < (clone.fgVariants.length); i++) clone.fgVariants[i] = new ure.math.UColor(clone.fgVariants[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3439/buggy-version/src.main.java.ure.ui.Icons.Icon.java", "BodyUseAPI": [], "Fixed commit": "2d24c7e727b096ff4cb244b55a98c2da2f263306", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-08-19T00:44:33Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loading) loading = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6930/buggy-version/app.src.main.java.com.amol.starwarapp.ui.activity.CharacterActivity.java", "BodyUseAPI": [], "Fixed commit": "9e309621eb67bcb56c63831ca427f0fb169b385d", "Url": "https://api.github.com/repos/amol-d/StarWarApp", "Date": "2018-07-06T20:49:06Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.isChild) { moe.plushie.armourers_workshop.client.model.ModelHelper.disableChildModelScale(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/362/buggy-version/src.main.java.moe.plushie.armourers_workshop.client.render.tileEntity.RenderBlockMannequin.java", "BodyUseAPI": [], "Fixed commit": "147ae3b339168428932f41f8bcf2264afb64fcbf", "Url": "https://api.github.com/repos/RiskyKen/Armourers-Workshop", "Date": "2018-10-25T13:02:59Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.isChild) { moe.plushie.armourers_workshop.client.model.ModelHelper.enableChildModelScale(true, moe.plushie.armourers_workshop.client.render.tileEntity.RenderBlockMannequin.SCALE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/362/buggy-version/src.main.java.moe.plushie.armourers_workshop.client.render.tileEntity.RenderBlockMannequin.java", "BodyUseAPI": [], "Fixed commit": "147ae3b339168428932f41f8bcf2264afb64fcbf", "Url": "https://api.github.com/repos/RiskyKen/Armourers-Workshop", "Date": "2018-10-25T13:02:59Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prodSerDeliveryOrders) == null) { prodSerDeliveryOrders = new java.util.HashMap<java.lang.String, java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4341/buggy-version/src.main.java.org.iabako.server.tools.pdfgenerator.PdfTableDescriptor.java", "BodyUseAPI": [], "Fixed commit": "5bc9840cfbd1a2ac2f80d150a35ea75eec7538e2", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2018-04-23T14:35:52Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (path.startsWith(\"//ldml/identity/\")) { java.lang.String[] parts = path.split(\"\\\\[\"); if (parts[0].equals(previousIdentityPath)) { continue; }else { previousIdentityPath = parts[0]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4024/buggy-version/tools.java.org.unicode.cldr.tool.Ldml2JsonConverter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "abe003af644a6a83a0ae5bd187c8d8d6b1cc57cb", "Url": "https://api.github.com/repos/srl295/cldr", "Date": "2012-11-26T15:55:47Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(field.isAccessible())) { field.setAccessible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9223/buggy-version/myim-spring.src.main.java.com.im.spring.dao.AbstractJdbcDao.java", "BodyUseAPI": ["java.lang.reflect.Field.setAccessible(boolean)"], "Fixed commit": "4afdd25484ee5418ff2d7e3ab1ff063bd6aeecf7", "Url": "https://api.github.com/repos/ebert001/MyIm", "Date": "2018-09-27T03:10:00Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(field.isAccessible())) { field.setAccessible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9223/buggy-version/myim-spring.src.main.java.com.im.spring.dao.AbstractJdbcDao.java", "BodyUseAPI": ["java.lang.reflect.Field.setAccessible(boolean)"], "Fixed commit": "4afdd25484ee5418ff2d7e3ab1ff063bd6aeecf7", "Url": "https://api.github.com/repos/ebert001/MyIm", "Date": "2018-09-27T03:10:00Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(field.isAccessible())) { field.setAccessible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9223/buggy-version/myim-spring.src.main.java.com.im.spring.dao.AbstractJdbcDao.java", "BodyUseAPI": ["java.lang.reflect.Field.setAccessible(boolean)"], "Fixed commit": "4afdd25484ee5418ff2d7e3ab1ff063bd6aeecf7", "Url": "https://api.github.com/repos/ebert001/MyIm", "Date": "2018-09-27T03:10:00Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(field.isAccessible())) { field.setAccessible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9223/buggy-version/myim-spring.src.main.java.com.im.spring.dao.AbstractJdbcDao.java", "BodyUseAPI": ["java.lang.reflect.Field.setAccessible(boolean)"], "Fixed commit": "4afdd25484ee5418ff2d7e3ab1ff063bd6aeecf7", "Url": "https://api.github.com/repos/ebert001/MyIm", "Date": "2018-09-27T03:10:00Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMove) == (Moves.FREESTYLE)) { image.setImageResource(R.drawable.freestyle); }else { image.setImageResource(R.drawable.start); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5304/buggy-version/app.src.main.java.com.applications.duckle.danz.Play.java", "BodyUseAPI": [], "Fixed commit": "3bde378509a1504f2e757d67e5f6598aaadba7c3", "Url": "https://api.github.com/repos/dic15afr/Danz", "Date": "2018-05-17T17:57:43Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.childNodes.contains(n))) this.childNodes.add(n);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5593/buggy-version/src.Node.java", "BodyUseAPI": ["java.util.ArrayList<Node>.add(Node)"], "Fixed commit": "044e573d7e7bc6b6286521fe4aba658a9f704e93", "Url": "https://api.github.com/repos/bsircelj/Treset-FRI", "Date": "2018-06-03T12:36:46Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.messaging.MessageHeaders.get(KafkaHeaders.TOPIC)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (topicHeader == null) { org.springframework.util.Assert.state((defaultTopic != null), \"With no topic header, a defaultTopic is required\"); }else { throw new java.lang.IllegalStateException((((org.springframework.kafka.support.KafkaHeaders.TOPIC) + \" must be a String or byte[], not \") + (topicHeader.getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6807/buggy-version/spring-kafka.src.main.java.org.springframework.kafka.support.converter.MessagingMessageConverter.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "2c4ead517e5224337d29dd13c8f6b0dd429c4f77", "Url": "https://api.github.com/repos/garyrussell/spring-kafka", "Date": "2018-02-06T20:22:03Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.contains(\"<\")) { name = name.substring(0, name.indexOf(\"<\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/504/buggy-version/src.ca.weblite.asm.ClassFinder.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "ce5926b55d7a48ca101bfde60ecfe5131a70014f", "Url": "https://api.github.com/repos/shannah/mirah-ant", "Date": "2018-08-13T13:05:08Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scope.isTypeParameter(g)) { sb.append(\"T\").append(g); }else { sb.append(ca.weblite.asm.TypeUtil.getTypeSignature(g, scope, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/504/buggy-version/src.ca.weblite.asm.TypeUtil.java", "BodyUseAPI": ["ca.weblite.asm.TypeUtil.getTypeSignature(java.lang.String,ca.weblite.asm.ClassFinder,boolean)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "ce5926b55d7a48ca101bfde60ecfe5131a70014f", "Url": "https://api.github.com/repos/shannah/mirah-ant", "Date": "2018-08-13T13:05:08Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.okhttplib.OkHttpUtil.httpClient) == null) { com.okhttplib.helper.OkHttpHelper.Builder().helperInfo(packageHelperInfo(null)).build().doRequestAsync(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7397/buggy-version/okhttp3.src.main.java.com.okhttplib.OkHttpUtil.java", "BodyUseAPI": [], "Fixed commit": "0d5fda14d830d6f73a37fbd41295f5129b298fc5", "Url": "https://api.github.com/repos/MrZhousf/OkHttp3", "Date": "2018-02-06T01:56:47Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((httpInfo) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7397/buggy-version/okhttp3.src.main.java.com.okhttplib.helper.HttpHelper.java", "BodyUseAPI": [], "Fixed commit": "0d5fda14d830d6f73a37fbd41295f5129b298fc5", "Url": "https://api.github.com/repos/MrZhousf/OkHttp3", "Date": "2018-02-06T01:56:47Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.overture.codegen.ir.declarations.AVarDeclIR.getPattern()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pattern instanceof org.overture.codegen.ir.patterns.AIdentifierPatternIR) { continue; }else if (pattern instanceof org.overture.codegen.ir.patterns.AIgnorePatternIR) { org.overture.codegen.ir.patterns.AIdentifierPatternIR idPattern = getIdPattern(config.getIgnorePatternPrefix()); transAssistant.replaceNodeWith(pattern, idPattern); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8799/buggy-version/core.codegen.platform.src.main.java.org.overture.codegen.trans.patterns.PatternTrans.java", "BodyUseAPI": ["org.overture.codegen.trans.assistants.TransAssistantIR.replaceNodeWith(org.overture.codegen.ir.SPatternIR,org.overture.codegen.ir.patterns.AIdentifierPatternIR)"], "Fixed commit": "c5fccd228dd94e1d5d429245cba9bb6f2724b052", "Url": "https://api.github.com/repos/overturetool/overture", "Date": "2018-01-18T13:45:53Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mode) == (edu.harvard.iq.dataverse.EditDatafilesPage.FileEditMode.UPLOAD)) && (workingVersion.getFileMetadatas().isEmpty())) && (settingsWrapper.isRsyncUpload())) { setUpRsync(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8218/buggy-version/src.main.java.edu.harvard.iq.dataverse.EditDatafilesPage.java", "BodyUseAPI": [], "Fixed commit": "67d8296ea5bb91cc38d0517e9bdd7067796116fd", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2018-07-23T19:13:44Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((role.getColor()) == null) { color = \"#FFFFFF\"; }else { color = module.getHexFromColor(role.getColor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2901/buggy-version/src.main.java.sr.will.jarvis.module.smashbot.command.CommandFlairImport.java", "BodyUseAPI": ["sr.will.jarvis.module.smashbot.ModuleSmashBot.getHexFromColor(role.getColor())", "net.dv8tion.jda.core.entities.Role.getColor()"], "Fixed commit": "454512a9945f83d3d35a65ebdd1402e51c7e8eed", "Url": "https://api.github.com/repos/Willsr71/Jarvis", "Date": "2018-01-08T01:54:33Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (optionName != null) { java.lang.Object optionVal = options.getValue(optionName); data.add((optionVal == null ? com.oracle.truffle.r.runtime.data.RNull.instance : optionVal)); names.add(optionName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9619/buggy-version/com.oracle.truffle.r.nodes.builtin.src.com.oracle.truffle.r.nodes.builtin.base.OptionsFunctions.java", "BodyUseAPI": ["com.oracle.truffle.r.runtime.ROptions.ContextStateImpl.getValue(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "29dca29bab7576f5df59b6e1f6fdf8708f6fb4d0", "Url": "https://api.github.com/repos/oracle/fastr", "Date": "2018-09-26T14:31:42Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Currency.getInstance(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currency.getSymbol().equals(symbol)) { edit.remove(key); }else { edit.putString(key, symbol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/357/buggy-version/myExpenses.src.main.java.org.totschnig.myexpenses.model.Money.java", "BodyUseAPI": ["SharedPreferences.Editor.putString(java.lang.String,java.lang.String)"], "Fixed commit": "2e2dad9ad7a2827c21b6736706f2a032716b89be", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2018-01-30T12:46:25Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(additionalContactNames.hasValue())) return contactablePlaneBodies;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6440/buggy-version/ihmc-common-walking-control-modules.src.main.java.us.ihmc.commonWalkingControlModules.highLevelHumanoidControl.factories.ContactableBodiesFactory.java", "BodyUseAPI": [], "Fixed commit": "dae0428dea4132bfd5f52f37a65ee29085dba46c", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2018-03-01T01:21:38Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bibalex.eol.parser.DwcaParser.parseTaxon(org.gbif.dwca.record.StarRecord,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((taxon.getIdentifier()) == \"-100001\") { java.lang.System.out.println(\"hena\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8251/buggy-version/src.main.java.org.bibalex.eol.parser.DwcaParser.java", "BodyUseAPI": [], "Fixed commit": "e70a520d715afd7a933e69dfb9028b76857da2ff", "Url": "https://api.github.com/repos/EOL/Harvester_Java", "Date": "2018-07-11T13:10:07Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first.getOverriddenStatus()) != null ? !(first.getOverriddenStatus().equals(second.getOverriddenStatus())) : (second.getOverriddenStatus()) != null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2589/buggy-version/eureka-client.src.main.java.com.netflix.discovery.util.EurekaEntityComparators.java", "BodyUseAPI": [], "Fixed commit": "98231e6047302c6c37011289496e3d5dd72e9120", "Url": "https://api.github.com/repos/ebjwc/eureka", "Date": "2018-04-09T21:31:24Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crossover.techtrial.service.PanelService.findBySerial(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (panel == null) { return org.springframework.http.ResponseEntity.notFound().build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2255/buggy-version/src.main.java.com.crossover.techtrial.controller.PanelController.java", "BodyUseAPI": [], "Fixed commit": "bf1ddd90932434ec485f6a127299cc39172b97f1", "Url": "https://api.github.com/repos/ashfaq1701/cross-solar-java", "Date": "2018-07-10T12:01:09Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crossover.techtrial.service.PanelService.findBySerial(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (panel == null) { return org.springframework.http.ResponseEntity.notFound().build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2255/buggy-version/src.main.java.com.crossover.techtrial.controller.PanelController.java", "BodyUseAPI": [], "Fixed commit": "bf1ddd90932434ec485f6a127299cc39172b97f1", "Url": "https://api.github.com/repos/ashfaq1701/cross-solar-java", "Date": "2018-07-10T12:01:09Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["row.getCell((j + 1)).toString()", "row.getCell(j).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cn.jiguang.common.utils.StringUtils.isEmpty(answerCode)) || (cn.jiguang.common.utils.StringUtils.isEmpty(answerContent))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9148/buggy-version/AlandTrainingService.src.main.java.com.conedot.aland.training.manager.ExamManager.java", "BodyUseAPI": [], "Fixed commit": "7c14584053413b9a88230d8ac201e7a7fda5ec65", "Url": "https://api.github.com/repos/victorwang0526/AlandTraining", "Date": "2018-07-19T13:52:38Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getContentLengthLong()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nContentLength > (java.lang.Integer.MAX_VALUE)) throw new java.lang.IllegalStateException(\"Currently only payload with up to 2GB can be handled!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8179/buggy-version/as2-servlet.src.main.java.com.helger.as2servlet.AbstractAS2ReceiveXServletHandler.java", "BodyUseAPI": [], "Fixed commit": "b4b859de177c84ec5d0e0fb73cbaf11e6fa91778", "Url": "https://api.github.com/repos/phax/as2-lib", "Date": "2018-09-24T06:58:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date.isBefore(paymentRates.get(0).getDate())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2403/buggy-version/src.com.rweqx.model.Student.java", "BodyUseAPI": [], "Fixed commit": "a708b3b3db885fd53600f222eb49824895f142a6", "Url": "https://api.github.com/repos/iamtrex/TutorFinanceTracker", "Date": "2018-08-31T01:14:30Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < ((keywords.length) - 2)) { mergedKeywords.add(keywords[i]); }else { mergedKeywords.add(keywords[i]); mergedKeywords.add(keywords[(i + 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6505/buggy-version/src.main.java.seedu.address.logic.parser.NaturalLanguageIdentifier.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "9bd056626508b7be5a23932548e4ac5db820a13c", "Url": "https://api.github.com/repos/yungyung04/addressbook-level4", "Date": "2018-04-12T07:35:55Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.hollybits.socialpetnetwork.helper.PhotoManager.currentUser) == null) { com.hollybits.socialpetnetwork.helper.PhotoManager.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8945/buggy-version/app.src.main.java.com.hollybits.socialpetnetwork.helper.PhotoManager.java", "BodyUseAPI": [], "Fixed commit": "d393fd539c0285d087281d3fd9eaac326570281c", "Url": "https://api.github.com/repos/MaxKomarenski/SocialPetNetwork", "Date": "2018-09-13T14:46:54Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((c > 64) && (c < 91)) || ((c > 96) && (c < 123))) { lowerCase = java.lang.Character.isLowerCase(input[k].charAt(0)); }else { lowerCase = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9615/buggy-version/Prob10.Prob10.java", "BodyUseAPI": [], "Fixed commit": "d297cb41d1ccba0781cbcc64c452503d224dc094", "Url": "https://api.github.com/repos/Grey16/code_quest_2017", "Date": "2018-01-06T02:01:14Z"},
{"Line": "=>9074", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user.bot) { if (org.cloudveil.messenger.GlobalSecuritySettings.LOCK_DISABLE_BOTS) { return false; } return (!(allowedBots.containsKey(currentDialogId))) || (allowedBots.get(currentDialogId)); }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2855/buggy-version/TMessagesProj.src.main.java.org.telegram.messenger.MessagesController.java", "BodyUseAPI": [], "Fixed commit": "6a04c76bf29994686e9e5a49df428c273ab21a11", "Url": "https://api.github.com/repos/cloudveiltech/CloudVeilMessenger", "Date": "2018-02-09T15:49:55Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.lang.StringBuffer) { java.lang.StringBuffer newBuf = new java.lang.StringBuffer(((java.lang.StringBuffer) (obj))); return newBuf; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1016/buggy-version/com.craftinginterpreters.lox.Runtime.java", "BodyUseAPI": [], "Fixed commit": "81f46f0917aacf15ed3119f1fd3131edc469767f", "Url": "https://api.github.com/repos/luke-gru/jlox", "Date": "2018-05-27T19:04:49Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(velocity.isZero())) m_body.setAsleep(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1069/buggy-version/src.main.java.io.github.jevaengine.world.physics.dyn4j.Dyn4jBody.java", "BodyUseAPI": [], "Fixed commit": "56fc04e93aad11c48469c5f9220bce918e47135d", "Url": "https://api.github.com/repos/JeremyWildsmith/jevaengine", "Date": "2018-10-29T16:47:36Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.isNull()) return prompto.value.NullValue.instance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6331/buggy-version/Core.src.main.java.prompto.type.CategoryType.java", "BodyUseAPI": [], "Fixed commit": "b27efbba0fda1df1986b241e145bc42207c1366a", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2018-01-01T18:24:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextIndex < (schList.size())) { nextSlot = schList.get(nextIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1366/buggy-version/src.java.client.DisplayTimetable.java", "BodyUseAPI": ["java.util.ArrayList<domain.scheduleDetail>.get(int)"], "Fixed commit": "9e960a68c0fbc83b6ff3be0bc14df66efb55368e", "Url": "https://api.github.com/repos/alexgcm97/ClaSS", "Date": "2018-10-18T11:44:36Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebugEnabled()) { logDebug(java.lang.String.format((\"User: %s denied consent to share information with the service: \" + \"provider %s.\"), authenticatedUser.getAuthenticatedSubjectIdentifier(), applicationConfig.getApplicationName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2934/buggy-version/components.authentication-framework.org.wso2.carbon.identity.application.authentication.framework.src.main.java.org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.consent.ConsentMgtPostAuthnHandler.java", "BodyUseAPI": [], "Fixed commit": "04d6833cb1d8e03ccdca26f1e6ca6c10cfdba2a0", "Url": "https://api.github.com/repos/wso2/carbon-identity-framework", "Date": "2018-03-02T04:17:55Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (h == 16) setRowHeight(17);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/444/buggy-version/src.org.executequery.gui.browser.tree.SchemaTree.java", "BodyUseAPI": [], "Fixed commit": "0b95d6bfaeb13b2af43a873f640c000339b54cb9", "Url": "https://api.github.com/repos/red-soft-ru/redexpert", "Date": "2018-04-10T07:41:50Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sandwich.getIngredients().isEmpty()) || (sandwich.getIngredients().equals(\" \"))) { alsoKnownTV.setText(getResources().getString(R.string.not_avail)); }else { alsoKnownTV.setText(alsoKnownAs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9594/buggy-version/app.src.main.java.co.etornam.sandwichclub.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "1f4a831231dc783b4689cb147131d546bcb668ac", "Url": "https://api.github.com/repos/RegNex/sandwich-club-starter-code", "Date": "2018-07-27T17:48:28Z"},
{"Line": "=>2165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kthcorp.cmts.service.Items.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cont_type.contains(\"CcubeSeries\")) { toMetaOrigin = toMetaOrigin.replace(\"\uc601\ud654\", \"\uc2dc\ub9ac\uc988\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7096/buggy-version/src.main.java.com.kthcorp.cmts.service.ItemsTagsService.java", "BodyUseAPI": [], "Fixed commit": "5d260a639b1ab2ff5831efbb24f13a1d54b6db9e", "Url": "https://api.github.com/repos/swordKein/cmts", "Date": "2018-05-17T02:10:01Z"},
{"Line": "=>2146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kthcorp.cmts.service.Items.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cont_type.contains(\"CcubeSeries\")) { toMeta = toMeta.replace(\"\uc601\ud654\", \"\uc2dc\ub9ac\uc988\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7096/buggy-version/src.main.java.com.kthcorp.cmts.service.ItemsTagsService.java", "BodyUseAPI": [], "Fixed commit": "5d260a639b1ab2ff5831efbb24f13a1d54b6db9e", "Url": "https://api.github.com/repos/swordKein/cmts", "Date": "2018-05-17T02:10:01Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isTablet) && (mDetailFragment.onBack())) { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/935/buggy-version/app.src.main.java.com.hereticpurge.studentbakingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4b44684bbaeeab39445f4eec4e63183d54bb27f4", "Url": "https://api.github.com/repos/DanH3945/BakingApp", "Date": "2018-06-15T18:22:05Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTablet)) { timber.log.Timber.d((\"Back pressed. Backstack count: \" + (getFragmentManager().getBackStackEntryCount()))); if (((getFragmentManager().getBackStackEntryCount()) > 0) && (mDetailFragment.onBack())) { timber.log.Timber.d(\"Popping back stack\"); getFragmentManager().popBackStack(); }else if ((getFragmentManager().getBackStackEntryCount()) == 0) { timber.log.Timber.d(\"Calling super onBackPressed\"); super.onBackPressed(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/935/buggy-version/app.src.main.java.com.hereticpurge.studentbakingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4b44684bbaeeab39445f4eec4e63183d54bb27f4", "Url": "https://api.github.com/repos/DanH3945/BakingApp", "Date": "2018-06-15T18:22:05Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.get(\"name\")) != null) com.google.firebase.firestore.FirebaseFirestore.getInstance().collection(\"users\").document(mAuth.getUid()).set(data).addOnFailureListener(new com.google.android.gms.tasks.OnFailureListener() { @java.lang.Override public void onFailure(@android.support.annotation.NonNull java.lang.Exception e) { edu.nus.trailblazelearn.model.User.context.startActivity(new android.content.Intent(edu.nus.trailblazelearn.model.User.context.getApplicationContext(), edu.nus.trailblazelearn.exception.NetworkError.class)); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3612/buggy-version/app.src.main.java.edu.nus.trailblazelearn.model.User.java", "BodyUseAPI": ["com.google.firebase.firestore.FirebaseFirestore.getInstance().collection(\"users\").document(mAuth.getUid()).set(data).addOnFailureListener(com.google.android.gms.tasks.OnFailureListener)", "com.google.firebase.firestore.FirebaseFirestore.getInstance().collection(\"users\").document(mAuth.getUid()).set(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "499750e6589682046e2fc54048fb857693a26069", "Url": "https://api.github.com/repos/codeyogi911/TrailBlazeLearn", "Date": "2018-03-22T08:05:40Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.size()) > 1) { assignment4.Main.errorProcessing(input); }else { assignment4.Critter.displayWorld(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3223/buggy-version/src.assignment4.Main.java", "BodyUseAPI": ["assignment4.Main.errorProcessing(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "6f37f34d1019c291658e7858086c923d12a23bfb", "Url": "https://api.github.com/repos/a-gunter/EE422C", "Date": "2018-03-22T22:08:39Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posY + y) < (height - 1)) { if ((posX + x) < (width - 1)) { grid[(posY + y)][(posX + x)] = fillval; } if ((posX - x) > 0) { grid[(posY + y)][(posX - x)] = fillval; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2888/buggy-version/JMapper.src.landscapes.Tools.java", "BodyUseAPI": [], "Fixed commit": "199c8b47ecb861c0b9a89691bd012a9cb75a0398", "Url": "https://api.github.com/repos/Jrhenderson11/Mapper", "Date": "2018-01-16T22:51:14Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posY - y) > 0) { if ((posX + x) < (width - 1)) { grid[(posY - y)][(posX + x)] = fillval; } if ((posX - x) > 0) { grid[(posY - y)][(posX - x)] = fillval; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2888/buggy-version/JMapper.src.landscapes.Tools.java", "BodyUseAPI": [], "Fixed commit": "199c8b47ecb861c0b9a89691bd012a9cb75a0398", "Url": "https://api.github.com/repos/Jrhenderson11/Mapper", "Date": "2018-01-16T22:51:14Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lbjtoken.form.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tmp.equals(\"may\")) || (tmp.equals(\"sat\"))) { if (current.getLabel().startsWith(\"NNP\")) lbjtoken.type = \"B-null\"; }else lbjtoken.type = \"B-null\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6390/buggy-version/temporal-normalizer.src.main.java.edu.illinois.cs.cogcomp.temporal.normalizer.main.TemporalChunkerAnnotator.java", "BodyUseAPI": [], "Fixed commit": "58e88ee5e89debf13d49440f8cf3faee3acd3ad8", "Url": "https://api.github.com/repos/mssammon/illinois-cogcomp-nlp-1", "Date": "2018-06-14T21:14:02Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getProperty(\"aboutMe\")) != null) { aboutMe = ((java.lang.String) (entity.getProperty(\"aboutMe\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/974/buggy-version/src.main.java.codeu.model.store.persistence.PersistentDataStore.java", "BodyUseAPI": ["com.google.appengine.api.datastore.Entity.getProperty(java.lang.String)"], "Fixed commit": "520628266593c3ed3da0b072313d2a4a16b9f21e", "Url": "https://api.github.com/repos/summerwinter7/CodeU-Summer-2018", "Date": "2018-07-06T20:44:43Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(Listener.AUTHORIZATION_HEADER_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (((authHdr != null) && (authHdr.startsWith(\"Bearer\"))) && (com.centurylink.mdw.config.PropertyManager.getBooleanProperty(PropertyNames.MDW_JWT_PRESERVE, false))) headers.put(Listener.AUTHENTICATED_JWT, authHdr.replaceFirst(\"Bearer \", \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4231/buggy-version/mdw-hub.src.com.centurylink.mdw.hub.servlet.ServiceServlet.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(Listener.AUTHENTICATED_JWT,java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "6a50ec0ebb658391bec470705afd35a84ff89bd2", "Url": "https://api.github.com/repos/CenturyLinkCloud/mdw", "Date": "2018-08-08T20:59:34Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.repodriller.scm.SCM.getChangeSets()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((all.size()) < (this.numberOfCommits)) return all;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1772/buggy-version/src.main.java.org.repodriller.filter.range.NumOfCommits.java", "BodyUseAPI": [], "Fixed commit": "2953defbaad562c3326737e1900c8252e9d6deb8", "Url": "https://api.github.com/repos/ishepard/repodriller", "Date": "2018-07-03T10:14:51Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (full_access == true) { edu.indiana.d2i.sloan.db.DBOperations.getInstance().updateVmType(vmId, type, full_access); }else { edu.indiana.d2i.sloan.db.DBOperations.getInstance().updateVmType(vmId, VMType.RESEARCH.getName(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4092/buggy-version/webservice.src.main.java.edu.indiana.d2i.sloan.UpdateVm.java", "BodyUseAPI": ["edu.indiana.d2i.sloan.db.DBOperations.getInstance().updateVmType(java.lang.String,java.lang.String,java.lang.Boolean)"], "Fixed commit": "e03833d672deaecf5c8044a305f247759ac2ce41", "Url": "https://api.github.com/repos/htrc/HTRC-DataCapsules", "Date": "2018-09-04T16:19:40Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word.length()) > 0) { fullName += ((word.substring(0, 1).toUpperCase()) + (word.substring(1).toLowerCase())) + \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5309/buggy-version/src.seedu.addressbook.data.person.Name.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.lang.String.toLowerCase()", "java.lang.String.toUpperCase()"], "Fixed commit": "ef66399db8808a184f03be2df4b86397c7fb4285", "Url": "https://api.github.com/repos/Aquarinte/addressbook-level2", "Date": "2018-02-14T05:54:40Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((is.jacek.markowski.dictionary.keepest.main_activity.util.Loaders.Words.LoadAllWords.mSortOrder) != null) { return is.jacek.markowski.dictionary.keepest.main_activity.util.Loaders.Words.LoadAllWords.mSortOrder; }else { return is.jacek.markowski.dictionary.keepest.main_activity.util.Loaders.Words.SORT_BY_NAMES; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6878/buggy-version/app.src.main.java.is.jacek.markowski.dictionary.keepest.main_activity.util.Loaders.java", "BodyUseAPI": [], "Fixed commit": "48e105b12452d015db3f780f70176dcbe7500e2c", "Url": "https://api.github.com/repos/jacekm-git/Keepest-Android", "Date": "2018-04-29T14:38:46Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.button) != 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5765/buggy-version/src.main.java.org.mihalis.opal.roundedToolbar.RoundedToolbar.java", "BodyUseAPI": [], "Fixed commit": "4d996c6cebafcd1658e6e77acd65a200fa033d34", "Url": "https://api.github.com/repos/lcaron/opal", "Date": "2018-02-10T16:34:01Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.jjtGetChild(0)) instanceof com.cinchapi.ccl.v2.generated.ASTOr) { symbols.add(ParenthesisSymbol.LEFT); parenthesis = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8726/buggy-version/src.main.java.com.cinchapi.ccl.v2.generated.GrammarTokenizeVisitor.java", "BodyUseAPI": [], "Fixed commit": "13051ecff1e128d6bf44723cacecb843b548cee0", "Url": "https://api.github.com/repos/cinchapi/ccl", "Date": "2018-01-10T17:15:27Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parenthesis) { symbols.add(ParenthesisSymbol.RIGHT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8726/buggy-version/src.main.java.com.cinchapi.ccl.v2.generated.GrammarTokenizeVisitor.java", "BodyUseAPI": [], "Fixed commit": "13051ecff1e128d6bf44723cacecb843b548cee0", "Url": "https://api.github.com/repos/cinchapi/ccl", "Date": "2018-01-10T17:15:27Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parenthesis) { symbols.add(ParenthesisSymbol.RIGHT); parenthesis = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8726/buggy-version/src.main.java.com.cinchapi.ccl.v2.generated.GrammarTokenizeVisitor.java", "BodyUseAPI": [], "Fixed commit": "13051ecff1e128d6bf44723cacecb843b548cee0", "Url": "https://api.github.com/repos/cinchapi/ccl", "Date": "2018-01-10T17:15:27Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.jjtGetChild(1)) instanceof com.cinchapi.ccl.v2.generated.ASTOr) { symbols.add(ParenthesisSymbol.LEFT); parenthesis = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8726/buggy-version/src.main.java.com.cinchapi.ccl.v2.generated.GrammarTokenizeVisitor.java", "BodyUseAPI": [], "Fixed commit": "13051ecff1e128d6bf44723cacecb843b548cee0", "Url": "https://api.github.com/repos/cinchapi/ccl", "Date": "2018-01-10T17:15:27Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (longestIdx < (bufferIndex)) longestIdx = bufferIndex;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2213/buggy-version/src.main.java.io.bdrc.lucene.sa.SkrtWordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "ede05a7bd921a9a6e8b48008d62ecd6002135064", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2018-06-18T11:01:35Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nutz.json.entity.JsonEntity.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((jef.getMirror().isDateTimeLike()) && ((jef.getDataFormat()) != null)) { try { jef.setValue(obj, jef.getDataFormat().parseObject(java.lang.String.valueOf(val))); continue; } catch (java.lang.Throwable e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6213/buggy-version/src.org.nutz.mapl.impl.convert.ObjConvertImpl.java", "BodyUseAPI": ["org.nutz.json.entity.JsonEntityField.setValue(java.lang.Object,jef.getDataFormat().parseObject(java.lang.String.valueOf(val)))", "jef.getDataFormat().parseObject(java.lang.String)", "org.nutz.json.entity.JsonEntityField.getDataFormat()"], "Fixed commit": "48f537abdf52673dc5e62cf52cedefbc00857565", "Url": "https://api.github.com/repos/threefish/nutz", "Date": "2018-01-16T05:02:48Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filteredDALIMembers.size()) == 0) ShowToast(\"No DALI Members were found with the selected filters.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4222/buggy-version/app.src.main.java.com.almunt.dalidashboard.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c1153ff28d61d3d506f8e09cc0fd6332dfacf510", "Url": "https://api.github.com/repos/AleMunt/DALI-Dashboard-Android-App", "Date": "2018-02-11T22:19:31Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { messsageBefore.addReaction(com.vdurmont.emoji.EmojiParser.parseToUnicode(\":large_blue_circle:\")); }else if (i == 1) { messsageBefore.addReaction(com.vdurmont.emoji.EmojiParser.parseToUnicode(\":black_circle:\")); }else if (i == 2) { messsageBefore.addReaction(com.vdurmont.emoji.EmojiParser.parseToUnicode(\":red_circle:\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8991/buggy-version/src.main.java.com.mazawrath.beanbot.commands.ReactCommand.java", "BodyUseAPI": [], "Fixed commit": "4d2ed97f9b6295f42a716609ba2a9b06e8bd3e34", "Url": "https://api.github.com/repos/TehPsychedelic/beanBOT", "Date": "2018-09-21T02:48:25Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.isEmpty()) || (params.get(0).equals(\"help\"))) { return getDocumentation(params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3844/buggy-version/src.auramgolddiscordbot.commands.Get.java", "BodyUseAPI": ["auramgolddiscordbot.commands.Get.getDocumentation(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "529ec73b43d060618e5054e16d753783a31b9d49", "Url": "https://api.github.com/repos/auramgold/auramgold-discord-bot", "Date": "2018-02-03T03:56:31Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recorder.isRecording()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7516/buggy-version/blade-engine.src.com.bladecoder.engine.ui.defaults.DefaultSceneScreen.java", "BodyUseAPI": [], "Fixed commit": "12378e4175ebccec61a8d49e34f2ce98aca68184", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2018-06-08T12:50:27Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((key != null) && (value != null)) { params.put(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1978/buggy-version/netkits.src.main.java.com.lch.netkit.file.helper.CommonParams.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "447f618900f218acf5fc5f24656c099825f9afdb", "Url": "https://api.github.com/repos/lchli/NetKit", "Date": "2018-01-29T08:59:40Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((key != null) && (value != null)) { headers.put(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1978/buggy-version/netkits.src.main.java.com.lch.netkit.file.helper.CommonParams.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "447f618900f218acf5fc5f24656c099825f9afdb", "Url": "https://api.github.com/repos/lchli/NetKit", "Date": "2018-01-29T08:59:40Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((defaultPeers.length) == 0) { state.apply(); }else { applyInstanceTo(defaultPeers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2525/buggy-version/src.teaselib.util.ItemImpl.java", "BodyUseAPI": ["teaselib.util.ItemImpl.applyInstanceTo(java.lang.Object[])"], "Fixed commit": "80efebc794204510d7d91c4c6a3576c799614dd6", "Url": "https://api.github.com/repos/Citizen-Cane/teaselib", "Date": "2018-07-14T19:51:30Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((organization.getCodeRegistries()) != null) { organizationDto.setCodeRegistries(mapCodeRegistryDtos(organization.getCodeRegistries())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1241/buggy-version/src.main.java.fi.vm.yti.codelist.intake.service.impl.BaseService.java", "BodyUseAPI": ["fi.vm.yti.codelist.intake.service.impl.BaseService.mapCodeRegistryDtos(organization.getCodeRegistries())", "fi.vm.yti.codelist.common.dto.OrganizationDTO.setCodeRegistries(java.util.Set<fi.vm.yti.codelist.common.dto.CodeRegistryDTO>)", "fi.vm.yti.codelist.intake.model.Organization.getCodeRegistries()"], "Fixed commit": "5b4b195a3be59a980359448bebedf83d539d4b35", "Url": "https://api.github.com/repos/VRK-YTI/yti-codelist-content-intake-service", "Date": "2018-04-03T12:07:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oemPorts == 8081) { return java.lang.Integer.parseInt(response.body().string()); }else { java.lang.String tmp = response.body().string(); java.lang.String tmp1 = tmp.substring(((tmp.indexOf(\">\")) + 1), tmp.indexOf(\"</\")); java.lang.System.out.println(tmp1); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4594/buggy-version/oem-adapter.src.main.java.com.unicorn.oemadapter.service.OrderService.java", "BodyUseAPI": [], "Fixed commit": "d775313764876fa5ebe0cbfd5505105ffea1c964", "Url": "https://api.github.com/repos/TACUnicorn/Adapters", "Date": "2018-01-10T17:04:06Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNotEmpty(memberName)) team.getMembers().add(new objective.taskboard.data.UserTeam(memberName, teamName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6755/buggy-version/src.main.java.objective.taskboard.controller.TeamController.java", "BodyUseAPI": ["team.getMembers().add(objective.taskboard.data.UserTeam)"], "Fixed commit": "be13727023c0da2e906daabfb0a97ffa22aac5b8", "Url": "https://api.github.com/repos/objective-solutions/taskboard", "Date": "2018-05-04T20:27:34Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cmput301w18t09.orbid.User.getReviewList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((revList.size()) == 0) { rbRating.setVisibility(View.GONE); content.findViewById(R.id.noReviewText).setVisibility(View.VISIBLE); }else { content.findViewById(R.id.noReviewText).setVisibility(View.GONE); rbRating.setOnTouchListener(new android.view.View.OnTouchListener() { @java.lang.Override public boolean onTouch(android.view.View v, android.view.MotionEvent event) { android.content.Intent intent = new android.content.Intent(getActivity(), cmput301w18t09.orbid.ListReviewActivity.class); intent.putExtra(\"username\", username); startActivity(intent); return false; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3029/buggy-version/app.src.main.java.cmput301w18t09.orbid.UserProfileDialog.java", "BodyUseAPI": [], "Fixed commit": "4113582a9fe0712f41d0ef710e8801d45acbf6ce", "Url": "https://api.github.com/repos/CMPUT301W18T09/CDProjektBlue", "Date": "2018-04-07T19:54:46Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ietr.preesm.experiment.model.pimm.ConfigInputPort.getIncomingDependency()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (incomingDependency == null) { throw new org.ietr.preesm.experiment.model.PiGraphException(((((\"Actor config input port '\" + (a.getVertexPath())) + \".\") + (p.getName())) + \"' is not connected.\"), new java.lang.NullPointerException()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5096/buggy-version/plugins.org.ietr.preesm.pimm.algorithm.src.org.ietr.preesm.pimm.algorithm.pimm2sdf.visitor.StaticPiMM2SDFVisitor.java", "BodyUseAPI": [], "Fixed commit": "96866c7249a39a32603366a3e3e6807f29473a3e", "Url": "https://api.github.com/repos/preesm/preesm", "Date": "2018-07-10T07:29:38Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iterations == 5000) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5536/buggy-version/src.main.java.org.boomframework.core.BeanDefinitionResolver.java", "BodyUseAPI": [], "Fixed commit": "1757590377f9726ef7b5d8f06e423abb2204f0c8", "Url": "https://api.github.com/repos/krishp9/boom-framework", "Date": "2018-10-01T18:04:50Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stratos.game.plans.Dialogue.responseFor(stratos.game.plans.Actor,stratos.game.plans.Dialogue,stratos.game.plans.Dialogue,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (response != null) { response.recursionDepth = (this.recursionDepth) + 1; if ((response.recursionDepth) > 3) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5087/buggy-version/src.stratos.game.plans.Dialogue.java", "BodyUseAPI": [], "Fixed commit": "581cfaf86af44996a47c5e7ddffec00fdf25bd45", "Url": "https://api.github.com/repos/Morgan-Allen/Presidium-Graphics-Overhaul", "Date": "2018-01-14T18:33:21Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity_is_projectile && (Mappers.projectile.get(entity).parent.equals(queue.get(j)))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3341/buggy-version/src.xxx.screwdriver.frostysilence.systems.PhysicsSystem.java", "BodyUseAPI": [], "Fixed commit": "c798fd54a25228a2d607f5bc87230837a805097e", "Url": "https://api.github.com/repos/Screwdr1ver/frosty-silence", "Date": "2018-07-25T05:54:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((queue.get(j)) instanceof xxx.screwdriver.frostysilence.Projectile) && (Mappers.projectile.get(queue.get(j)).parent.equals(entity))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3341/buggy-version/src.xxx.screwdriver.frostysilence.systems.PhysicsSystem.java", "BodyUseAPI": [], "Fixed commit": "c798fd54a25228a2d607f5bc87230837a805097e", "Url": "https://api.github.com/repos/Screwdr1ver/frosty-silence", "Date": "2018-07-25T05:54:36Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 49) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4211/buggy-version/app.src.main.java.org.jak_linux.dns66.db.RuleDatabase.java", "BodyUseAPI": [], "Fixed commit": "4dad29e891f381c45db19cff756bded823ba5580", "Url": "https://api.github.com/repos/SvobodaJakub/dns66", "Date": "2018-04-23T04:26:28Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((user.getUsername()) != null) { org.springframework.context.ApplicationContext ctx = org.springframework.web.context.support.WebApplicationContextUtils.getWebApplicationContext(session.getServletContext()); com.springmvc.service.MyService service = ((com.springmvc.service.MyService) (ctx.getBean(\"MyService\"))); if (order != null) { service.updataUser(user.getUsername(), order); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8254/buggy-version/src.main.java.com.springmvc.listerener.SessionListerener.java", "BodyUseAPI": ["com.springmvc.service.MyService.updataUser(user.getUsername(),java.util.Map<java.lang.String, com.springmvc.model.ShopCart>)", "com.springmvc.model.User.getUsername()"], "Fixed commit": "8fa1bbdf1aec0e82307b6a0393ba915a0f746a27", "Url": "https://api.github.com/repos/q80727561/shopping", "Date": "2018-10-18T17:08:13Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gr.uom.java.xmi.diff.MovedClassToAnotherSourceFolder.separatorPosOfCommonSuffix(char,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (separatorPos == (-1)) { return new gr.uom.java.xmi.diff.RenamePattern(originalPath, movedPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5960/buggy-version/src.gr.uom.java.xmi.diff.MovedClassToAnotherSourceFolder.java", "BodyUseAPI": [], "Fixed commit": "e1a34e4c56c177cabea1f2385a045079f2ba9890", "Url": "https://api.github.com/repos/tsantalis/RefactoringMiner", "Date": "2018-04-06T21:39:18Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idleChannel) == null) { synchronized(this) { if ((idleChannel) == null) { if ((channel.isConnected()) && (!(channel.isClosed()))) { idleChannel = channel; } }else { channel.disconnect(); } } }else { channel.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8961/buggy-version/commons-vfs2.src.main.java.org.apache.commons.vfs2.provider.sftp.SftpFileSystem.java", "BodyUseAPI": [], "Fixed commit": "a212f383e71041594e17c1dfc270b4f872ead1ce", "Url": "https://api.github.com/repos/qxo/commons-vfs", "Date": "2018-04-24T05:35:26Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idleChannel) != null) { synchronized(this) { if ((idleChannel) != null) { channel = idleChannel; idleChannel = null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8961/buggy-version/commons-vfs2.src.main.java.org.apache.commons.vfs2.provider.sftp.SftpFileSystem.java", "BodyUseAPI": [], "Fixed commit": "a212f383e71041594e17c1dfc270b4f872ead1ce", "Url": "https://api.github.com/repos/qxo/commons-vfs", "Date": "2018-04-24T05:35:26Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.arvat.crmi.service.TelegramService.receiveMessage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (message != null) { if ((message.getPublisher()) == null) { if (message.getText().chars().allMatch(java.lang.Character::isDigit)) { if (telegramService.saveChatId(message)) { text = variableService.getProperty(\"telegram.bot.number_added\"); }else { text = variableService.getProperty(\"telegram.bot.number_bad\"); } }else { text = variableService.getProperty(\"telegram.bot.text_request\"); } }else { text = variableService.getProperty(\"telegram.bot.number_added\"); } telegramService.sendMessage(message.getId(), text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7484/buggy-version/src.main.java.org.arvat.crmi.controller.TelegramController.java", "BodyUseAPI": ["org.arvat.crmi.service.TelegramService.sendMessage(message.getId(),java.lang.String)", "message.getText().chars().allMatch(java.lang.Character::isDigit)", "org.arvat.crmi.service.TelegramService.saveChatId(org.arvat.crmi.model.Message)", "org.arvat.crmi.model.Message.getPublisher()", "message.getText().chars()", "org.arvat.crmi.model.Message.getId()", "org.arvat.crmi.model.Message.getText()"], "Fixed commit": "7e802c2a2462cecaa6bb1d0b6689c1a09b8b2a91", "Url": "https://api.github.com/repos/arvat/crmi", "Date": "2018-08-15T12:54:23Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.internalAPI) == null) && ((this.internalAPIUrls) == null)) { throw new java.lang.IllegalStateException(\"Synchronization api was not initialized properly (see Scheduler logs for details)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6483/buggy-version/scheduler.scheduler-node.src.main.java.org.ow2.proactive.scheduler.synchronization.SynchronizationWrapper.java", "BodyUseAPI": [], "Fixed commit": "1ae046501e103a2ad036b5fcd508633cedc1db20", "Url": "https://api.github.com/repos/pedrovelho/scheduling", "Date": "2018-10-04T09:31:18Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberOfElements) != 0) { java.lang.String consoleList = \"\"; for (int i = 0; i < (numberOfElements); i++) { if ((listArray[i]) instanceof java.lang.String) consoleList += (listArray[i]) + \" \"; else { consoleList += (listArray[i].toString()) + \", \"; if (i == ((numberOfElements) - 1)) consoleList = consoleList.substring(0, ((consoleList.length()) - 1)); } } consoleList = consoleList.substring(0, ((consoleList.length()) - 1)); java.lang.System.out.println(consoleList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8475/buggy-version/ArrayHeadTailListInterface.java", "BodyUseAPI": [], "Fixed commit": "a1c4531278574689e684527b1bd8efdd130d605a", "Url": "https://api.github.com/repos/m0nq/project-c", "Date": "2018-10-04T21:45:24Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.view) != null) { this.view.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5924/buggy-version/client-side.core.src.com.sketchy.game.Controllers.ClientController.java", "BodyUseAPI": [], "Fixed commit": "fe9e4b989e08f8cc874c6b003b51cd582395d670", "Url": "https://api.github.com/repos/Strand94/Sketchy", "Date": "2018-04-15T12:22:28Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((adList) == null) || ((adList.size()) == 0)) { ll_ad.setVisibility(View.GONE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3763/buggy-version/ZWBS-Android.app.src.main.java.com.ruitukeji.zwbs.main.GetOrderFragment.java", "BodyUseAPI": [], "Fixed commit": "063bf716606403bf4bcb07c58a2df96df155517e", "Url": "https://api.github.com/repos/921668753/wztx-driver-andriod", "Date": "2018-01-27T09:59:23Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.jena.sparql.core.Quad.isDefaultGraph(parsedQuad.getGraph())) { final org.rdfhdt.hdt.triples.TripleString triple = new org.rdfhdt.hdt.triples.TripleString(parsedQuad.getSubject().toString(), parsedQuad.getPredicate().toString(), parsedQuad.getObject().toString()); this.callback.processTriple(triple, 0); }else { final org.rdfhdt.hdt.triples.QuadString quad = new org.rdfhdt.hdt.triples.QuadString(parsedQuad.getSubject().toString(), parsedQuad.getPredicate().toString(), parsedQuad.getObject().toString(), parsedQuad.getGraph().toString()); this.callback.processQuad(quad, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5196/buggy-version/hdt-java-core.src.main.java.org.rdfhdt.hdt.rdf.parsers.RDFParserRIOT.java", "BodyUseAPI": ["org.apache.jena.sparql.core.Quad.getPredicate()", "org.apache.jena.sparql.core.Quad.getGraph()", "org.apache.jena.sparql.core.Quad.getPredicate()", "parsedQuad.getObject().toString()", "org.apache.jena.sparql.core.Quad.getObject()", "org.apache.jena.sparql.core.Quad.getSubject()", "org.apache.jena.sparql.core.Quad.getObject()", "parsedQuad.getGraph().toString()", "org.apache.jena.sparql.core.Quad.getSubject()", "parsedQuad.getSubject().toString()", "parsedQuad.getPredicate().toString()", "parsedQuad.getSubject().toString()", "parsedQuad.getObject().toString()", "parsedQuad.getPredicate().toString()"], "Fixed commit": "4c73510b02ea17f24b7729f2c7ca556f59f6a808", "Url": "https://api.github.com/repos/jm-gimenez-garcia/hdt-2-java", "Date": "2018-07-18T15:43:31Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myMap.containsKey(key)) == false) { myMap.put(key, new java.util.concurrent.atomic.LongAdder()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6293/buggy-version/src.BinaryClassificationNeuron.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.concurrent.atomic.LongAdder>.put(java.lang.String,java.util.concurrent.atomic.LongAdder)"], "Fixed commit": "aecf41fb1de07a3c3efd27ab9abb017ea44547b6", "Url": "https://api.github.com/repos/jf17/jneronetwork", "Date": "2018-07-29T17:15:55Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (whichWalk != null) { if (ss.equals(getString(R.string.pref_units_miles))) { congratsTextView.setText(((((\"Congrats, you have completed the \" + whichWalk) + \" walk, which covered a distance of \") + (java.lang.String.valueOf(whichDistance))) + \" miles.\")); }else if (ss.equals(getString(R.string.pref_units_km))) { congratsTextView.setText(((((\"Congrats, you have completed the \" + whichWalk) + \" walk, which covered a distance of \") + (java.lang.String.valueOf(whichDistance))) + \" Kms.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5336/buggy-version/app.src.main.java.com.example.android.practicewalkingapp.DetailsActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "56b1c8ca0d035c091cb0376744e8f7cb7d0339b3", "Url": "https://api.github.com/repos/RJLgit/PracticeWalkingAPP", "Date": "2018-07-24T10:02:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.target) != null) { boolean isConfidenceLow = ((unitControlModule.unitWrappers.PlayerUnit) (goapUnit)).isConfidenceBelowThreshold(); boolean isEnemyInWeaponRange = !(((unitControlModule.unitWrappers.PlayerUnit) (goapUnit)).getAllEnemyUnitsInWeaponRange().contains(this.target)); boolean isEnemyTooClose = ((unitControlModule.unitWrappers.PlayerUnitTerran_SiegeTank) (goapUnit)).isBelowSiegeRange(((bwapi.Unit) (this.target))); isDone = (isEnemyInWeaponRange || isConfidenceLow) || isEnemyTooClose; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7608/buggy-version/CBot.src.unitControlModule.stateFactories.actions.executableActions.AttackUnitActionTerran_SiegeTank_Bombard.java", "BodyUseAPI": [], "Fixed commit": "2f85e38c4632cdec4b93640e89b069e7b7a7c205", "Url": "https://api.github.com/repos/p1387h/CBot", "Date": "2018-02-11T16:53:03Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.dses.contains(ds))) { configTablesMapping(ds, arp); this.dses.add(ds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6019/buggy-version/src.main.java.com.jfinal.ext.config.JFinalConfigExt.java", "BodyUseAPI": ["com.jfinal.ext.config.JFinalConfigExt.configTablesMapping(java.lang.String,com.jfinal.plugin.activerecord.ActiveRecordPlugin)", "java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "dee3d4229f5f5b40d2a07823a86cf1d3fbad5657", "Url": "https://api.github.com/repos/E7du/jfinal-ext3", "Date": "2018-06-18T12:51:31Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((h == 0) && (t == 0)) && (u == 0)) return middleThreeNum = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5720/buggy-version/src.NumberReader.java", "BodyUseAPI": [], "Fixed commit": "557245d4d2793d206f959b506c8661b484f176ca", "Url": "https://api.github.com/repos/alenagir/FirstDemo", "Date": "2018-10-04T20:14:13Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.oauth2.provider.OAuth2Authentication.getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((user.getCompanyUsers().getvUserType()) == null) { additionalInfo.put(\"userType\", \"store_staff\"); }else { additionalInfo.put(\"userType\", user.getCompanyUsers().getvUserType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5670/buggy-version/backend.src.main.java.com.unityhealth.auth.service.CustomTokenEnhancer.java", "BodyUseAPI": ["user.getCompanyUsers().getvUserType()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,user.getCompanyUsers().getvUserType())", "com.unityhealth.auth.service.CustomUserDetails.getCompanyUsers()"], "Fixed commit": "3c507a7577f06eae1ad301a90997728dd3acdef0", "Url": "https://api.github.com/repos/sameerargadeuh/itherapeutics-angular", "Date": "2018-01-19T01:38:26Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.oauth2.provider.OAuth2Authentication.getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((user.getAccount().getUserType()) == null) { additionalInfo.put(\"userType\", \"store_staff\"); }else { additionalInfo.put(\"userType\", user.getAccount().getUserType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5670/buggy-version/backend.src.main.java.com.unityhealth.auth.service.CustomTokenEnhancer.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,user.getAccount().getUserType())", "user.getAccount().getUserType()", "com.unityhealth.auth.service.CustomUserDetails.getAccount()"], "Fixed commit": "3c507a7577f06eae1ad301a90997728dd3acdef0", "Url": "https://api.github.com/repos/sameerargadeuh/itherapeutics-angular", "Date": "2018-01-19T01:38:26Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (repl != obj) { out.removeRef(obj); out.writeObject(repl); out.replaceRef(repl, obj); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6405/buggy-version/src.main.java.com.alibaba.com.caucho.hessian.io.JavaSerializer.java", "BodyUseAPI": ["com.alibaba.com.caucho.hessian.io.AbstractHessianOutput.writeObject(java.lang.Object)", "com.alibaba.com.caucho.hessian.io.AbstractHessianOutput.removeRef(java.lang.Object)", "com.alibaba.com.caucho.hessian.io.AbstractHessianOutput.replaceRef(java.lang.Object,java.lang.Object)"], "Fixed commit": "72f25ac0ea7a2798b79cb4765d2fa7fd648b4b3c", "Url": "https://api.github.com/repos/nobodyiam/hessian-lite", "Date": "2018-07-05T05:48:33Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (data.contains(\"[Errno 2]\")) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1174/buggy-version/src.model.Server.java", "BodyUseAPI": [], "Fixed commit": "0179f3f0fc7ea4aa0fd355edc79b444da464740d", "Url": "https://api.github.com/repos/djarret1/SE2Snippopotamus_Rex", "Date": "2018-04-17T21:33:06Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.calendarId) == null) { this.calendarId = seedu.address.logic.CreateNewCalendar.execute(name.fullName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3776/buggy-version/src.main.java.seedu.address.storage.XmlAdaptedPerson.java", "BodyUseAPI": [], "Fixed commit": "79a273c8ec4b0ce738e66c76643e58381fc5a671", "Url": "https://api.github.com/repos/CS2103JAN2018-W15-B1/main", "Date": "2018-03-20T14:08:20Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sum > 21) java.lang.System.out.println(\"You risked it all and failed.\"); else if (dealerSum > sum) java.lang.System.out.println(((((\"You played well but \" + dealerSum) + \" was enough to beat your \") + sum) + \"!\")); else if (sum > dealerSum) { java.lang.System.out.println(((((\"You win with\" + sum) + \"! My \") + dealerSum) + \" just wasn't enough...\")); bank = (+bet) * 2; }else if (sum == dealerSum) { java.lang.System.out.println(((\"It's a draw! We both have \" + sum) + \".\")); bank = +bet; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6404/buggy-version/Blackjack.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "9eebf5931d54921a39eeda3922afa2070910cf43", "Url": "https://api.github.com/repos/michalakadam/blackjack", "Date": "2018-04-17T12:52:28Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.noclasspath) == null) { logger.warn(\"Spoon is currently use with the default noClasspath option set as true. Read the documentation for more information: http://spoon.gforge.inria.fr/launcher.html#about-the-classpath\"); this.noclasspath = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4470/buggy-version/src.main.java.spoon.support.StandardEnvironment.java", "BodyUseAPI": [], "Fixed commit": "7663d798499a164e8f7dec35ce813d563c9d38cb", "Url": "https://api.github.com/repos/Egor18/spoon", "Date": "2018-04-03T13:02:20Z"},
{"Line": "=>1373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((menuBar) != null) && (menuBar.contains(x, y))) { return menuBar; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/212/buggy-version/CodenameOne.src.com.codename1.ui.Form.java", "BodyUseAPI": [], "Fixed commit": "268c013601d9bb54bfe783146bbffd9c2bd6823f", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-09-26T17:07:32Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sinland.rpo.service.dao.ReportDao.getMinReportTime(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (minTime == null) { return java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3656/buggy-version/rpo-service.src.main.java.com.sinland.rpo.service.impl.OverviewService.java", "BodyUseAPI": [], "Fixed commit": "85145d08d987224b210022fd7b7d1fcd5ffef231", "Url": "https://api.github.com/repos/luteer/sl-rpo", "Date": "2018-08-17T04:48:58Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sinland.rpo.service.dao.RepairDao.getMinRepairTime(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (minTime == null) { return java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3656/buggy-version/rpo-service.src.main.java.com.sinland.rpo.service.impl.OverviewService.java", "BodyUseAPI": [], "Fixed commit": "85145d08d987224b210022fd7b7d1fcd5ffef231", "Url": "https://api.github.com/repos/luteer/sl-rpo", "Date": "2018-08-17T04:48:58Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.atomic.AtomicLong>.putIfAbsent(java.lang.String,java.util.concurrent.atomic.AtomicLong)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (previous != null) { rs = previous; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7071/buggy-version/store.src.main.java.org.apache.rocketmq.store.StoreStatsService.java", "BodyUseAPI": [], "Fixed commit": "fdc6e87cbe7adb8bc8f5991e06392eee73bc5151", "Url": "https://api.github.com/repos/ylh23y/rocketmq", "Date": "2018-03-28T15:36:05Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.atomic.AtomicLong>.putIfAbsent(java.lang.String,java.util.concurrent.atomic.AtomicLong)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (previous != null) { rs = previous; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7071/buggy-version/store.src.main.java.org.apache.rocketmq.store.StoreStatsService.java", "BodyUseAPI": [], "Fixed commit": "fdc6e87cbe7adb8bc8f5991e06392eee73bc5151", "Url": "https://api.github.com/repos/ylh23y/rocketmq", "Date": "2018-03-28T15:36:05Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((startDate != null) && (endDate != null)) { java.lang.System.out.println((\"user choose from date: \" + startDate)); java.lang.System.out.println((\"user choose todate: \" + endDate)); final java.sql.PreparedStatement ps = com.team80.SQLUtil.getConnection().prepareStatement((sql + \" AND PI.fromdate >= ? AND PI.todate <= ? \")); ps.setDate(1, startDate); ps.setDate(2, endDate); return ps.executeQuery(); }else if (startDate != null) { java.lang.System.out.println((\"user choose from date: \" + startDate)); final java.sql.PreparedStatement ps = com.team80.SQLUtil.getConnection().prepareStatement((sql + \" AND PI.fromdate >= ? \")); ps.setDate(1, startDate); return ps.executeQuery(); }else if (endDate != null) { java.lang.System.out.println((\"user choose todate: \" + endDate)); final java.sql.PreparedStatement ps = com.team80.SQLUtil.getConnection().prepareStatement((sql + \" AND PI.todate <= ? \")); ps.setDate(1, endDate); return ps.executeQuery(); }else { final java.sql.PreparedStatement ps = com.team80.SQLUtil.getConnection().prepareStatement(sql); return ps.executeQuery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2656/buggy-version/code.src.com.team80.SQLUtil.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.sql.PreparedStatement.setDate(int,java.sql.Date)", "java.io.PrintStream.println(java.lang.String)", "java.sql.PreparedStatement.setDate(int,java.sql.Date)", "java.sql.PreparedStatement.setDate(int,java.sql.Date)", "java.sql.PreparedStatement.setDate(int,java.sql.Date)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "bc83dfa70cb524fea64b6127829c4088ed608078", "Url": "https://api.github.com/repos/ziyaj/db_project", "Date": "2018-03-28T02:27:44Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column.equals(\"ppdini\")) { sqlData = (((\"and p.\" + column) + \" = '\") + data) + \"'\"; }else { sqlData = ((\"and p.\" + column) + \" = \") + data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/133/buggy-version/Dashboard.src.main.java.org.arpicoinsurance.groupit.dashboard.service.impl.InquiryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ff8c1ef29c668f45be77fd145e44459aaf26c51c", "Url": "https://api.github.com/repos/arpicoinsuranceit/Infosys", "Date": "2018-04-26T03:51:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column.equals(\"ppdini\")) { sqlData = (((\"and p.\" + column) + \" = '\") + data) + \"'\"; }else { sqlData = ((\"and p.\" + column) + \" = \") + data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/133/buggy-version/Dashboard.src.main.java.org.arpicoinsurance.groupit.dashboard.service.impl.InquiryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "ff8c1ef29c668f45be77fd145e44459aaf26c51c", "Url": "https://api.github.com/repos/arpicoinsuranceit/Infosys", "Date": "2018-04-26T03:51:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timestamp.isEmpty()) || (weight_entry.isEmpty())) return false; else { long isInserted = db.insert(ph.edu.upd.eee.weighttrack.DatabaseHelper.TABLE_NAME, null, input); return isInserted != (-1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5903/buggy-version/app.src.main.java.ph.edu.upd.eee.weighttrack.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "1c7351d1cc900fbf996dd4e7f0f35d1f11dea8c1", "Url": "https://api.github.com/repos/abquinquito/WeightTrack", "Date": "2018-02-15T04:48:26Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message instanceof com.masterinformatica.bingo.messages.BingoNumber) { generateNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9797/buggy-version/src.main.java.com.masterinformatica.bingo.actors.Diller.java", "BodyUseAPI": [], "Fixed commit": "3c2370fd9394c17db8fdf077c23b3450a2592fd8", "Url": "https://api.github.com/repos/jgmatu/BingoAkka", "Date": "2018-03-22T20:32:52Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["other.mind.rootBehaviour()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b instanceof stratos.game.plans.Dialogue) { stratos.game.plans.Dialogue o = ((stratos.game.plans.Dialogue) (b)); o.recursionDepth = (this.recursionDepth) + 1; if ((o.recursionDepth) >= 3) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7697/buggy-version/src.stratos.game.plans.Dialogue.java", "BodyUseAPI": [], "Fixed commit": "f56d28889d24b528cd72e41fe661aeed355d57f8", "Url": "https://api.github.com/repos/Morgan-Allen/Presidium-Graphics-Overhaul", "Date": "2018-01-15T11:46:27Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (coordList == null) { com.direwolf20.buildinggadgets.tools.GadgetUtils.setAnchor(stack, coordinates); tagCompound = stack.getTagCompound(); return coordinates; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3879/buggy-version/src.main.java.com.direwolf20.buildinggadgets.tools.GadgetUtils.java", "BodyUseAPI": [], "Fixed commit": "f1faedaf5551d9bd2fafbb4c429a10420d7b0f2a", "Url": "https://api.github.com/repos/Direwolf20-MC/BuildingGadgets", "Date": "2018-08-08T00:11:58Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { webView.loadUrl(\"http://www.halachipedia.com\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1998/buggy-version/app.src.main.java.mobile.halachipedia.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "211fc911dca8ede454ef4455ecdd627ea14c6674", "Url": "https://api.github.com/repos/Halachipedia/android", "Date": "2018-10-18T03:42:55Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof java.lang.Long) { pst.setLong(pos, ((java.lang.Long) (value))); }else if (value instanceof java.lang.Byte) { pst.setByte(pos, ((java.lang.Byte) (value))); }else if (value instanceof java.lang.Short) { pst.setShort(pos, ((java.lang.Short) (value))); }else if (value instanceof java.lang.Double) { pst.setDouble(pos, ((java.lang.Double) (value))); }else if (value instanceof java.lang.Float) { pst.setFloat(pos, ((java.lang.Float) (value))); }else if (value instanceof java.lang.Boolean) { pst.setBoolean(pos, ((java.lang.Boolean) (value))); }else if (value instanceof java.sql.Date) { pst.setDate(pos, ((java.sql.Date) (value))); }else if (value instanceof java.sql.Time) { pst.setTime(pos, ((java.sql.Time) (value))); }else if (value instanceof java.sql.Timestamp) { pst.setTimestamp(pos, ((java.sql.Timestamp) (value))); }else if (value instanceof java.util.Date) { pst.setTimestamp(pos, new java.sql.Timestamp(((java.util.Date) (value)).getTime())); }else if (value instanceof java.math.BigDecimal) { pst.setBigDecimal(pos, ((java.math.BigDecimal) (value))); }else if (value instanceof java.lang.Enum) { pst.setString(pos, ((java.lang.Enum<?>) (value)).name()); }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6400/buggy-version/GenericDAOs.ParameterType.BaseParameterType.src.main.java.net.sjr.sql.parametertype.BasicParameterType.java", "BodyUseAPI": [], "Fixed commit": "504d7551fda317455ba23a05c68536b3b59d9103", "Url": "https://api.github.com/repos/s-jr/Utils", "Date": "2017-08-16T13:33:58Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(line.contains(\"*/\"))) && (algorithmWriter.commentIsOn)) { line = reader.readLine(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5240/buggy-version/src.AlgorithmWriter.java", "BodyUseAPI": [], "Fixed commit": "a7e5f0daa271e3be179082d437643b8890dd3083", "Url": "https://api.github.com/repos/tuxdux/algorithm-writer", "Date": "2018-10-20T18:08:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.startsWith(\"/*\")) && (!(algorithmWriter.commentIsOn))) { algorithmWriter.commentIsOn = true; line = reader.readLine(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5240/buggy-version/src.AlgorithmWriter.java", "BodyUseAPI": [], "Fixed commit": "a7e5f0daa271e3be179082d437643b8890dd3083", "Url": "https://api.github.com/repos/tuxdux/algorithm-writer", "Date": "2018-10-20T18:08:17Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.startsWith(\"//\")) { line = reader.readLine(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5240/buggy-version/src.AlgorithmWriter.java", "BodyUseAPI": [], "Fixed commit": "a7e5f0daa271e3be179082d437643b8890dd3083", "Url": "https://api.github.com/repos/tuxdux/algorithm-writer", "Date": "2018-10-20T18:08:17Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.contains(\"*/\")) { algorithmWriter.commentIsOn = false; line = reader.readLine(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5240/buggy-version/src.AlgorithmWriter.java", "BodyUseAPI": [], "Fixed commit": "a7e5f0daa271e3be179082d437643b8890dd3083", "Url": "https://api.github.com/repos/tuxdux/algorithm-writer", "Date": "2018-10-20T18:08:17Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.tencent.angel.spark.ml.psf.embedding.ServerSentences.batches) == null) com.tencent.angel.spark.ml.psf.embedding.ServerSentences.batches = new int[numPartitions][][];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/679/buggy-version/spark-on-angel.mllib.src.main.java.com.tencent.angel.spark.ml.psf.embedding.ServerSentences.java", "BodyUseAPI": [], "Fixed commit": "f6e3e10028e38a0719cf4908fa44356bac633cc1", "Url": "https://api.github.com/repos/leleyu/angel", "Date": "2018-10-29T05:14:28Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.equalsIgnoreCase(kv.getValue(), \"N/A\"))) { org.openlmis.report.generator.StockOnHandStatus stockOnHandStatus = stockStatusService.getStockOnHandStatus(cmm, org.apache.commons.lang3.math.NumberUtils.toLong(kv.getValue()), productCode); styleMap.put(\"color\", stockOnHandStatus.getColor()); tmpValue.put(\"style\", styleMap); tmpValue.put(\"status\", stockOnHandStatus); }else { tmpValue.put(\"status\", StockOnHandStatus.NOT_EXIST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9813/buggy-version/modules.report.src.main.java.org.openlmis.report.generator.impl.NosDrugReportGenerator.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "org.openlmis.report.service.StockStatusService.getStockOnHandStatus(long,org.apache.commons.lang3.math.NumberUtils.toLong(kv.getValue()),java.lang.String)", "org.apache.commons.lang3.math.NumberUtils.toLong(java.lang.String)"], "Fixed commit": "8e7267a64fecde647f1346fe1e5758ef4225d2aa", "Url": "https://api.github.com/repos/SIGLUS/open-lmis", "Date": "2018-10-23T14:02:19Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.blade.ui.PlayerConnection.getService().getCurrentPosition()) > 5000) onPrevClicked(v);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8875/buggy-version/app.src.main.java.v.blade.ui.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "182e252d72f4a44dd539011faf8810ade9707f31", "Url": "https://api.github.com/repos/Valou3433/blade-player", "Date": "2018-07-21T16:19:25Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s[1].equals(Grammar.epsilon))) G.addProduction(s[0], s[1], s[2]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5584/buggy-version/T1.Utils.java", "BodyUseAPI": ["Grammar.addProduction(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "41dfe1bf3881771596eae4552fedbce8e6d4a5ef", "Url": "https://api.github.com/repos/jzatta/INE5421", "Date": "2018-05-20T02:48:32Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s[1].equals(Grammar.epsilon))) G.addProduction(s[0], s[1], s[2]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5584/buggy-version/T1.Utils.java", "BodyUseAPI": ["Grammar.addProduction(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "41dfe1bf3881771596eae4552fedbce8e6d4a5ef", "Url": "https://api.github.com/repos/jzatta/INE5421", "Date": "2018-05-20T02:48:32Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sub.getRateOptions()) != null) { query.setTimeSeries(sub.getMetric(), sub.getTags(), sub.aggregator(), sub.getRate(), sub.getRateOptions()); }else { query.setTimeSeries(sub.getMetric(), sub.getTags(), sub.aggregator(), sub.getRate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6563/buggy-version/src.core.TSQuery.java", "BodyUseAPI": ["net.opentsdb.core.TSSubQuery.getRate()", "net.opentsdb.core.TSSubQuery.getMetric()", "net.opentsdb.core.TSSubQuery.aggregator()", "net.opentsdb.core.TSSubQuery.getRate()", "net.opentsdb.core.TSSubQuery.getTags()", "net.opentsdb.core.Query.setTimeSeries(sub.getMetric(),sub.getTags(),sub.aggregator(),sub.getRate())", "net.opentsdb.core.TSSubQuery.getTags()", "net.opentsdb.core.TSSubQuery.aggregator()", "net.opentsdb.core.Query.setTimeSeries(sub.getMetric(),sub.getTags(),sub.aggregator(),sub.getRate(),sub.getRateOptions())", "net.opentsdb.core.TSSubQuery.getRateOptions()", "net.opentsdb.core.TSSubQuery.getMetric()"], "Fixed commit": "c1438bf5ceadf10a799f9ccaab583c9e2228b64f", "Url": "https://api.github.com/repos/pepperdata/opentsdb", "Date": "2018-05-08T02:01:46Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parentPath.endsWith(\"/\"))) { parentPath += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8546/buggy-version/src.main.java.maud.menu.BuildMenus.java", "BodyUseAPI": [], "Fixed commit": "7cd59b563bd5d83c4bfe7ef2389be3f08fcbe679", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2018-08-21T08:31:23Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.value) instanceof java.lang.String) return (\"\\\"\" + (this.value)) + \"\\\"\"; else if (((this.value) instanceof java.lang.Double) && (((java.lang.Double) (this.value)) == (java.lang.Math.floor(((java.lang.Double) (this.value)))))) return java.lang.Integer.toString(((java.lang.Double) (this.value)).intValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3648/buggy-version/src.main.java.net.darmo_creations.json.JsonValue.java", "BodyUseAPI": [], "Fixed commit": "12ce9614600d848143267ffd9c9a41c1ac644a19", "Url": "https://api.github.com/repos/Darmo117/JSON-4-Java", "Date": "2018-05-28T15:04:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeCondition) != null) active = activeCondition.evaluate(room);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7835/buggy-version/core.src.de.leifaktor.robbiemini.actor.Teleporter.java", "BodyUseAPI": [], "Fixed commit": "6a19fc3684d8e28ec33123b0be6dcabcd45ac56b", "Url": "https://api.github.com/repos/Leifa/robbiemini", "Date": "2018-04-08T11:01:16Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (next == 0) { next = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1749/buggy-version/src.java.ec.gob.senagua.model.method.InvoiceMethod.java", "BodyUseAPI": [], "Fixed commit": "903d4612db06c759c4b4d0b9d7c12a1ebaaaad89", "Url": "https://api.github.com/repos/AlexanderDa/Senagua", "Date": "2018-08-31T21:31:05Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ps != null) { try { ps.close(); } catch (java.lang.Exception e) { } ps = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2464/buggy-version/src.java.model.ModuleDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()"], "Fixed commit": "6afe0ef2e66b24ebf30873dd8b55c2b33fd52d22", "Url": "https://api.github.com/repos/DWuytack/Project", "Date": "2018-05-07T21:32:06Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rs != null) { try { rs.close(); } catch (java.sql.SQLException e) { } rs = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2464/buggy-version/src.java.model.ModuleDAO.java", "BodyUseAPI": ["java.sql.ResultSet.close()"], "Fixed commit": "6afe0ef2e66b24ebf30873dd8b55c2b33fd52d22", "Url": "https://api.github.com/repos/DWuytack/Project", "Date": "2018-05-07T21:32:06Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getBombsHeld(stack)) < 1) { setBagBombType(stack, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5345/buggy-version/src.main.java.zeldaswordskills.item.ItemBombBag.java", "BodyUseAPI": ["zeldaswordskills.item.ItemBombBag.setBagBombType(net.minecraft.item.ItemStack,int)"], "Fixed commit": "d1c35c01303cc755ac142ffc4652f949a2c3dc30", "Url": "https://api.github.com/repos/Spitfyre03/ZeldaSwordSkills", "Date": "2018-01-09T20:15:36Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["regular_grammar.RegularGrammar.getClone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key.equals(GAClone.getInitialSymbol())) { gnew.setProductions((initialSymbol + \"\"), (s + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1036/buggy-version/regular_languagens.src.regular_grammar.RG_Algorithms.java", "BodyUseAPI": [], "Fixed commit": "589dee56a56eed99f86e08aa43a8f9267bcfa7b6", "Url": "https://api.github.com/repos/acebr1/Regular_languages", "Date": "2018-06-03T17:48:52Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mCurrentlyRequestingLocationUpdates) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6481/buggy-version/app.src.main.java.com.app.minyaneto_android.ui.fragments.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "313e576c489094f5767a7842f1040de2877fd088", "Url": "https://api.github.com/repos/startach/minyaneto", "Date": "2018-02-22T15:09:50Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((data.length) == 1) && ((data[0]) == null)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5824/buggy-version/src.CustomArrayList.CustomArrayList.java", "BodyUseAPI": [], "Fixed commit": "2ef7ca9ea65f89e70c7237ae43c168dfadd4451e", "Url": "https://api.github.com/repos/Rephousa/DAT17C", "Date": "2018-09-10T08:55:01Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastItemsToShow) != null) && (!(lastItemsToShow.isEmpty()))) { java.util.List<T> extra = new java.util.ArrayList<>(); addExtraItems(extra, start, length); handler.onPreviousDataArrived(extra, start, length); }else { handler.onErrorRetrievingData(response.getStatusCode(), processError(response)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2919/buggy-version/src.main.java.org.reactome.web.scroller.client.provider.AbstractListAsyncDataProvider.java", "BodyUseAPI": [], "Fixed commit": "da8e0c2895abcda58d3504c0b2e407dc655e2497", "Url": "https://api.github.com/repos/reactome-pwp/infinite-scroller", "Date": "2018-05-16T10:58:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastItemsToShow) != null) && (!(lastItemsToShow.isEmpty()))) { java.util.List<T> extra = new java.util.ArrayList<>(); addExtraItems(extra, start, length); handler.onNewDataArrived(extra, start, length); }else { handler.onErrorRetrievingData(response.getStatusCode(), processError(response)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2919/buggy-version/src.main.java.org.reactome.web.scroller.client.provider.AbstractListAsyncDataProvider.java", "BodyUseAPI": [], "Fixed commit": "da8e0c2895abcda58d3504c0b2e407dc655e2497", "Url": "https://api.github.com/repos/reactome-pwp/infinite-scroller", "Date": "2018-05-16T10:58:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastItemsToShow) != null) && (!(lastItemsToShow.isEmpty()))) { java.util.List<T> extra = new java.util.ArrayList<>(); addExtraItems(extra, start, length); handler.onNextDataArrived(extra, start, length); }else { handler.onErrorRetrievingData(response.getStatusCode(), processError(response)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2919/buggy-version/src.main.java.org.reactome.web.scroller.client.provider.AbstractListAsyncDataProvider.java", "BodyUseAPI": [], "Fixed commit": "da8e0c2895abcda58d3504c0b2e407dc655e2497", "Url": "https://api.github.com/repos/reactome-pwp/infinite-scroller", "Date": "2018-05-16T10:58:59Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (neutralUrl != null) urlToCheck = neutralUrl; else continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1106/buggy-version/src.main.java.eu.openaire.doc_urls_retriever.util.url.UrlUtils.java", "BodyUseAPI": [], "Fixed commit": "9fbd6311d7eec8fe79035b719fc751ab1a126a6b", "Url": "https://api.github.com/repos/LSmyrnaios/DocUrlsRetriever", "Date": "2018-05-03T16:12:38Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.ActivityManager.getRunningAppProcesses()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (list != null) { for (android.app.ActivityManager.RunningAppProcessInfo appProcess : list) { if ((appProcess != null) && ((appProcess.pid) == (android.os.Process.myPid()))) { return appProcess.processName; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2747/buggy-version/FairyPlugin.src.main.java.com.limpoxe.fairy.util.ProcessUtil.java", "BodyUseAPI": [], "Fixed commit": "d27290681d2166c959af025e87b6d2d262871983", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2018-08-12T16:25:58Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) { java.awt.EventQueue.invokeLater(new java.lang.Runnable() { public void run() { try { webshopbot.Main window = new webshopbot.Main(); window.frame.setVisible(true); } catch (java.lang.Exception e) { e.printStackTrace(); } } }); }else if (args[0].equals(\"--help\")) { java.lang.System.out.println(\"Usage:...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3722/buggy-version/src.webshopbot.Main.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "1038f049e6073e41eeca1e1e175fb4c09d6d388a", "Url": "https://api.github.com/repos/logern5/webshopbot", "Date": "2018-01-24T02:38:18Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(order.getIsReturnNonFilledTank())) { filledTankSpinner.setSelection(1); filledTankSpinner.getSelectedItem(); }else { filledTankSpinner.setSelection(0); filledTankSpinner.getSelectedItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2226/buggy-version/app.src.main.java.com.example.chizkiyahuandchaskyh.takeandgo2.controller.main.Fragment.OrderUpdateFragment.java", "BodyUseAPI": [], "Fixed commit": "3fc47f668f60b2467eefdefe96a427221c096bf3", "Url": "https://api.github.com/repos/Chizkiyahu/TakeAndGo2", "Date": "2018-06-14T16:08:08Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((PartyId) != null) { com.crashlytics.android.Crashlytics.log(PartyId); PartyId = dataSnapshot.child(finalP).child(\"PartyId\").getValue().toString(); android.util.Log.d(\"PartyId\", PartyId); }else { es.dmoral.toasty.Toasty.error(this, \"Invalid party code. Registered correctly?\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5231/buggy-version/app.src.main.java.in.shaaan.ga_onlineorders.BuildOrder.java", "BodyUseAPI": [], "Fixed commit": "ae3144137d9e65e2de5867f414a0078c2f1df15d", "Url": "https://api.github.com/repos/Shaaan/GA", "Date": "2018-02-26T07:58:43Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theCard.isResource()) && (!(theCard.isVirtual()))) { if ((deck.isApex()) && (android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity()).getBoolean(\"pref_HideNonVirtualApex\", true))) { isNonVirtualOK = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1594/buggy-version/app.src.main.java.com.shuneault.netrunnerdeckbuilder.fragments.DeckCardsFragment.java", "BodyUseAPI": [], "Fixed commit": "5c8fa4c35d627da4d386c6d6cbcde47ea9c79134", "Url": "https://api.github.com/repos/ANRDigital/ANR-Deck-Builder", "Date": "2018-10-21T07:35:28Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.criteria) == null) { return (this.spec) != null ? this.spec.getCriteria() : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1381/buggy-version/src.main.java.com.mightwork.searchapi.specification.EntitySpecification.java", "BodyUseAPI": [], "Fixed commit": "88d8177ec351cdeae49d31176f73eaff1c0acc2d", "Url": "https://api.github.com/repos/magrifle/search-api", "Date": "2018-08-11T15:30:24Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((monthCalendarConfiguration.getWeekTitleLayoutId()) != (io.github.memfis19.cadar.settings.MonthCalendarConfiguration.NONE)) { for (int i = pos; i < (pos + 7); ++i) { initHeaderItem(monthHeaderView, i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1680/buggy-version/cadar.src.main.java.io.github.memfis19.cadar.view.MonthCalendar.java", "BodyUseAPI": [], "Fixed commit": "0174b7c32a7351d835d670fdbbb50eb35cf2a8ac", "Url": "https://api.github.com/repos/etienne-07/Cadar", "Date": "2018-01-26T13:38:04Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { value = properties.getProperty(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1001/buggy-version/deployer.src.main.java.com.alibaba.otter.canal.deployer.CanalController.java", "BodyUseAPI": [], "Fixed commit": "ffeec8fc86938b6fd3a7aa73135fc927f126bd58", "Url": "https://api.github.com/repos/lcybo/canal", "Date": "2018-08-03T09:48:32Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { value = java.lang.System.getenv(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1001/buggy-version/deployer.src.main.java.com.alibaba.otter.canal.deployer.CanalController.java", "BodyUseAPI": [], "Fixed commit": "ffeec8fc86938b6fd3a7aa73135fc927f126bd58", "Url": "https://api.github.com/repos/lcybo/canal", "Date": "2018-08-03T09:48:32Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 0) throw new java.lang.IllegalArgumentException(\"Frequency cannot be negative\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6415/buggy-version/Word.java", "BodyUseAPI": [], "Fixed commit": "e1cc8da8a429ff575825f432aee82b60834e8e96", "Url": "https://api.github.com/repos/psythrone/Mini_Project", "Date": "2018-05-15T20:01:45Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mod < 0) throw new java.lang.IllegalArgumentException(\"IllegalArgumentException\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6415/buggy-version/Word.java", "BodyUseAPI": [], "Fixed commit": "e1cc8da8a429ff575825f432aee82b60834e8e96", "Url": "https://api.github.com/repos/psythrone/Mini_Project", "Date": "2018-05-15T20:01:45Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mod < 0) throw new java.lang.IllegalArgumentException(\"IllegalArgumentException\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6415/buggy-version/Word.java", "BodyUseAPI": [], "Fixed commit": "e1cc8da8a429ff575825f432aee82b60834e8e96", "Url": "https://api.github.com/repos/psythrone/Mini_Project", "Date": "2018-05-15T20:01:45Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start < 0) || (multiplier < 0)) throw new java.lang.IllegalArgumentException(\"IllegalArgumentException\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6415/buggy-version/Word.java", "BodyUseAPI": [], "Fixed commit": "e1cc8da8a429ff575825f432aee82b60834e8e96", "Url": "https://api.github.com/repos/psythrone/Mini_Project", "Date": "2018-05-15T20:01:45Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(clientMessage.getContent().equalsIgnoreCase(\".quit!\"))) { server.broadcastMessage(clientMessage, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3772/buggy-version/src.main.java.com.codecool.krk.server.UserThread.java", "BodyUseAPI": ["com.codecool.krk.server.Server.broadcastMessage(com.codecool.krk.message.Message,com.codecool.krk.server.UserThread)"], "Fixed commit": "06e40be3b7d5469885f79b37ca3945dedbe30c82", "Url": "https://api.github.com/repos/PrzSal/slack-like-multithreaded-app", "Date": "2018-03-13T17:13:45Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((headerBytes.length) - headerByteLength) > 0) { requestBody = com.hibegin.common.util.BytesUtil.subBytes(headerBytes, headerByteLength, ((headerBytes.length) - headerByteLength)); }else { requestBody = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5103/buggy-version/src.main.java.com.hibegin.http.server.impl.HttpRequestDecoderImpl.java", "BodyUseAPI": ["com.hibegin.common.util.BytesUtil.subBytes(byte[],int,int)"], "Fixed commit": "9f23dd63a00cf56074248a82a42c268e147552e6", "Url": "https://api.github.com/repos/94fzb/simplewebserver", "Date": "2018-05-20T04:43:40Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (v instanceof variable.VariableList) { this.dictionary.put(keys.get(i).toString(), new variable.VariableList(((variable.VariableList) (v)))); }else if (v instanceof variable.VariableDictionary) { this.dictionary.put(keys.get(i).toString(), new variable.VariableDictionary(((variable.VariableDictionary) (v)))); }else { this.dictionary.put(keys.get(i).toString(), new variable.Variable(values.get(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7383/buggy-version/src.variable.VariableDictionary.java", "BodyUseAPI": [], "Fixed commit": "78fbad757631711b38733f6b09370adddd16bcc3", "Url": "https://api.github.com/repos/jpaffrath/jask", "Date": "2018-09-11T09:33:27Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stmtOrCallable) instanceof com.craftinginterpreters.lox.Stmt.Function) { com.craftinginterpreters.lox.Stmt.Function func = ((com.craftinginterpreters.lox.Stmt.Function) (stmtOrCallable)); java.lang.String funcName = null; if ((func.name) != null) { funcName = func.name.lexeme; }else { funcName = \"(anon)\"; } builder.append(((\"<\" + funcName) + \">\")); }else if ((stmtOrCallable) instanceof com.craftinginterpreters.lox.LoxCallable) { com.craftinginterpreters.lox.LoxCallable func = ((com.craftinginterpreters.lox.LoxCallable) (stmtOrCallable)); builder.append(func.toString()); }else { throw new java.lang.RuntimeException((((\"bad class given to stackframe. \" + \"Must be Throw or Callable, is: \") + (stmtOrCallable.getClass().getName())) + \". BUG\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8891/buggy-version/com.craftinginterpreters.lox.StackFrame.java", "BodyUseAPI": [], "Fixed commit": "82f5b2c427cbd2034a85ad3af23d0353edaa922b", "Url": "https://api.github.com/repos/luke-gru/jlox", "Date": "2018-05-29T17:17:41Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.max2idea.android.limbo.main.LimboService.service) != null) { com.max2idea.android.limbo.main.LimboService.service.stopForeground(true); com.max2idea.android.limbo.main.LimboService.service.stopSelf(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8814/buggy-version/limbo-android-lib.src.main.java.com.max2idea.android.limbo.main.LimboService.java", "BodyUseAPI": [], "Fixed commit": "b97e2a9463f90d20c82c172adf2bad3a290dda23", "Url": "https://api.github.com/repos/limboemu/limbo", "Date": "2018-07-08T15:15:43Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) { is = parent.getResourceAsStream(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/389/buggy-version/src.main.java.org.jboss.ws.common.utils.DelegateClassLoader.java", "BodyUseAPI": [], "Fixed commit": "fd0a2b044a0863049207ef770cecab89f4f32238", "Url": "https://api.github.com/repos/rsearls/jbossws-common", "Date": "2018-02-15T18:08:53Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result != 0) && (result != 1)) { java.lang.String sql = \"INSERT INTO registered_to(event_id, user_id, RSVP) VALUES (?,?,?)\"; getJdbcTemplate().update(sql, new java.lang.Object[]{ eventId, userId, 0 }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4714/buggy-version/src.main.java.com.beigeoranges.ecms.Dao.EventDao.java", "BodyUseAPI": [], "Fixed commit": "af7cc5ea9a7b97684c490331e7b15dd6a7192606", "Url": "https://api.github.com/repos/malynch7/ecms", "Date": "2018-07-15T23:51:40Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getAttackTarget()) != null) && ((getAttackTarget().isDead) || ((getAttackTarget().getHealth()) <= 0))) setAttackTarget(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5183/buggy-version/src.main.java.com.bobmowzie.mowziesmobs.server.entity.frostmaw.EntityFrostmaw.java", "BodyUseAPI": [], "Fixed commit": "44da61ee13517dda537715a28e2d74a0dd4b7842", "Url": "https://api.github.com/repos/BobMowzie/MowziesMobs", "Date": "2018-09-02T18:38:33Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPresenter) != null) { mPresenter.setProjectCurrentPage(currentPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8741/buggy-version/app.src.main.java.json.chao.com.wanandroid.ui.project.fragment.ProjectFragment.java", "BodyUseAPI": [], "Fixed commit": "e8aa2d568d393f027eeb3bf58bcc5fe27e96c50f", "Url": "https://api.github.com/repos/JsonChao/Awesome-WanAndroid", "Date": "2018-07-18T02:33:09Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.equals(\"\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2976/buggy-version/src.main.java.seedu.address.model.person.Appointment.java", "BodyUseAPI": [], "Fixed commit": "4fd0030eeb10864b8ef68d2b0e8e81c3cc379178", "Url": "https://api.github.com/repos/CS2103-AY1819S1-W16-3/main", "Date": "2018-10-12T15:03:57Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clients.get(i).isStart()) == true) { clients.get(i).sendMessage(str); }else { clientMap.remove(clients.remove(i)); count--; i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9873/buggy-version/src.com.hb.pocket.clientv2.commandline.command.SendMessageCommand.java", "BodyUseAPI": ["java.util.List<com.hb.pocket.clientv2.Client>.get(int)", "clients.get(i).sendMessage(java.lang.String)", "java.util.Map<com.hb.pocket.clientv2.Client, com.hb.pocket.clientv2.Client>.remove(clients.remove(i))", "java.util.List<com.hb.pocket.clientv2.Client>.remove(int)"], "Fixed commit": "8caa6240871d4af6c97b210dc6efae872813d057", "Url": "https://api.github.com/repos/hbinboy/PocketSocketPipelineClient", "Date": "2018-08-14T07:06:39Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.appplant.cordova.plugin.notification.trigger.MatchTrigger.getBaseTriggerDate(java.util.Date)", "de.appplant.cordova.plugin.notification.trigger.MatchTrigger.getCal(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cal.get(java.util.Calendar.MINUTE)) < (now.get(java.util.Calendar.MINUTE))) { addToDate(cal, now, java.util.Calendar.HOUR_OF_DAY, 1); }else { addToDate(cal, now, java.util.Calendar.HOUR_OF_DAY, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7005/buggy-version/src.android.notification.trigger.MatchTrigger.java", "BodyUseAPI": ["de.appplant.cordova.plugin.notification.trigger.MatchTrigger.addToDate(java.util.Calendar,java.util.Calendar,int,int)", "de.appplant.cordova.plugin.notification.trigger.MatchTrigger.addToDate(java.util.Calendar,java.util.Calendar,int,int)"], "Fixed commit": "b93cf65cc9d02676584bd03a6153ca3453b351fa", "Url": "https://api.github.com/repos/katzer/cordova-plugin-local-notifications", "Date": "2018-02-21T11:11:44Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smujsj16.ocr_notes.Service.DBService.getDbService().createNewUser(com.smujsj16.ocr_notes.Entity.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == 1) android.util.Log.d(TAG, \"\u6210\u529f\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/741/buggy-version/app.src.main.java.com.smujsj16.ocr_notes.module.TEST.java", "BodyUseAPI": [], "Fixed commit": "3386656e61e5a27ba603276742e65c44a4bb2fee", "Url": "https://api.github.com/repos/lancelee98/OcrNotes", "Date": "2018-10-09T10:13:06Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameTimer) == (-100)) gameTimer = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7262/buggy-version/core.src.com.mygdx.game.PongGame.java", "BodyUseAPI": [], "Fixed commit": "9f2e4c398dcc422248c436a13ee6cebd0c294a15", "Url": "https://api.github.com/repos/lurbean/COP4331-Project", "Date": "2018-10-07T23:58:48Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (audiences == null) { this.audiences = new java.util.HashSet(); }else { this.audiences = audiences; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2380/buggy-version/src.main.java.domain.Notification.java", "BodyUseAPI": [], "Fixed commit": "02b1f43b84f4659602006dc622be92ac62f3e097", "Url": "https://api.github.com/repos/freerjm/noti", "Date": "2018-02-15T06:36:46Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targets == null) { this.targets = new java.util.HashSet(); }else { this.targets = targets; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2380/buggy-version/src.main.java.domain.Notification.java", "BodyUseAPI": [], "Fixed commit": "02b1f43b84f4659602006dc622be92ac62f3e097", "Url": "https://api.github.com/repos/freerjm/noti", "Date": "2018-02-15T06:36:46Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (messages == null) { this.messages = new java.util.HashSet(); }else { this.messages = messages; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2380/buggy-version/src.main.java.domain.Notification.java", "BodyUseAPI": [], "Fixed commit": "02b1f43b84f4659602006dc622be92ac62f3e097", "Url": "https://api.github.com/repos/freerjm/noti", "Date": "2018-02-15T06:36:46Z"},
{"Line": "=>1283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl.getComponentMetaDataAccessor().getComponentMetaData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((cmd instanceof com.ibm.wsspi.webcontainer.metadata.WebComponentMetaData) || (cmd instanceof com.ibm.wsspi.webcontainer.metadata.WebCollaboratorComponentMetaData))) { cmd = com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl.getComponentMetaDataAccessor().getComponentMetaData(com.ibm.wsspi.webcontainer.metadata.WebComponentMetaData.class); if (cmd == null) { cmd = com.ibm.ws.threadContext.ComponentMetaDataAccessorImpl.getComponentMetaDataAccessor().getComponentMetaData(com.ibm.wsspi.webcontainer.metadata.WebCollaboratorComponentMetaData.class); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9503/buggy-version/dev.com.ibm.ws.webcontainer.security.src.com.ibm.ws.webcontainer.security.WebAppSecurityCollaboratorImpl.java", "BodyUseAPI": [], "Fixed commit": "f48482473ab1fc1b065cfcdc10fedcca00522b51", "Url": "https://api.github.com/repos/toshiyamamoto/open-liberty", "Date": "2018-02-17T19:21:38Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode != (com.emj365.plugins.AudioRecorderAPI.CALLBACK_CODE)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/476/buggy-version/src.android.com.emj365.plugins.AudioRecorderAPI.java", "BodyUseAPI": [], "Fixed commit": "d0988ed74501e281cdf4d1e7e02b48d82bcafbb9", "Url": "https://api.github.com/repos/sieman/cordova-plugin-audio-recorder-api", "Date": "2018-10-29T09:30:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.massivecraft.massivecore.util.InventoryUtil.getHelmet(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((helmet != null) && (helmet.getItemMeta().hasEnchant(Enchantment.BINDING_CURSE))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7487/buggy-version/src.com.massivecraft.massivehat.engine.EngineHatSwitch.java", "BodyUseAPI": [], "Fixed commit": "d4e68fbed95fdc76b85444061f79b9382a66ab7e", "Url": "https://api.github.com/repos/aprader1/MassiveHat", "Date": "2018-03-17T23:08:29Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((screenLabel.getText().equals(\"0\")) || (screenLabel.getText().equals(\"0.0\"))) { screenLabel.setText(\"(\"); }else if ((((((getLastChar()) == null) || ((getLastChar()) == '+')) || ((getLastChar()) == '-')) || ((getLastChar()) == '/')) || ((getLastChar()) == '*')) { screenLabel.setText(((screenLabel.getText()) + actionCommand)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7037/buggy-version/src.Calculator.java", "BodyUseAPI": ["javax.swing.JLabel.getText()", "javax.swing.JLabel.setText(java.lang.String)", "javax.swing.JLabel.setText(java.lang.String)"], "Fixed commit": "10300a6f647eca020f836d7360a652f34bd6a3a8", "Url": "https://api.github.com/repos/Hapsidra/rpn-calculator", "Date": "2018-10-24T03:54:35Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration<java.lang.Object>.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((key1.toString().indexOf(\".\")) == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1929/buggy-version/jsystem-core-projects.jsystemCore.src.main.java.jsystem.framework.scenario.ScenarioHelpers.java", "BodyUseAPI": [], "Fixed commit": "9fcc6f8887fbf7bc4fcc92df3a0bf94530d1b969", "Url": "https://api.github.com/repos/Top-Q/jsystem", "Date": "2018-08-08T11:39:22Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.charl.gamingnewz.Activities.Room.Room_Entities_and_Database.GamingNewZDatatbase.INSTANCE) == null) { synchronized(com.example.charl.gamingnewz.Activities.Room.Room_Entities_and_Database.GamingNewZDatatbase.class) { if ((com.example.charl.gamingnewz.Activities.Room.Room_Entities_and_Database.GamingNewZDatatbase.INSTANCE) == null) { com.example.charl.gamingnewz.Activities.Room.Room_Entities_and_Database.GamingNewZDatatbase.INSTANCE = android.arch.persistence.room.Room.databaseBuilder(context.getApplicationContext(), com.example.charl.gamingnewz.Activities.Room.Room_Entities_and_Database.GamingNewZDatatbase.class, \"Lucina-database\").build(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8518/buggy-version/app.src.main.java.com.example.charl.gamingnewz.Activities.Room.Room_Entities_and_Database.GamingNewZDatatbase.java", "BodyUseAPI": [], "Fixed commit": "02ec8972ca8d86f37602743fb4f984e0b72a7aaa", "Url": "https://api.github.com/repos/00198216/GamingNewZ", "Date": "2018-06-14T02:58:42Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == 0) { java.lang.System.out.print(i); }else if ((cell.getDroid()) == null) { java.lang.System.out.print(\"-\"); }else { java.lang.System.out.print(\"X\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1391/buggy-version/src.DroidGame.java", "BodyUseAPI": [], "Fixed commit": "e3e2f00cff80d555a592b25bc86d4068ca121900", "Url": "https://api.github.com/repos/moth-man/Droid-Wars", "Date": "2018-08-30T04:40:20Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.breadwallet.tools.sqlite.CurrencyDataSource.cursorToCurrency(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(curEntity.code.equals(\"BCH\"))) { currencies.add(curEntity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1823/buggy-version/app.src.main.java.com.breadwallet.tools.sqlite.CurrencyDataSource.java", "BodyUseAPI": ["java.util.List<com.breadwallet.presenter.entities.CurrencyEntity>.add(com.breadwallet.presenter.entities.CurrencyEntity)"], "Fixed commit": "9c1859ae5f912336f0ec7996261585cf603c8c4f", "Url": "https://api.github.com/repos/gig8/breadwallet-android", "Date": "2018-08-10T18:58:36Z"},
{"Line": "=>2220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.usage.client.impl.APIUsageStatisticsRestClientImpl.getDurationBreakdown(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((durationBreakdown.get(APIUsageStatisticsClientConstants.DURATION_MONTHS)) > 0) { granularity = org.wso2.carbon.apimgt.usage.client.APIUsageStatisticsClientConstants.DAYS_GRANULARITY; }else if ((durationBreakdown.get(APIUsageStatisticsClientConstants.DURATION_DAYS)) > 0) { granularity = org.wso2.carbon.apimgt.usage.client.APIUsageStatisticsClientConstants.HOURS_GRANULARITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6803/buggy-version/components.apimgt.org.wso2.carbon.apimgt.usage.org.wso2.carbon.apimgt.usage.client.src.main.java.org.wso2.carbon.apimgt.usage.client.impl.APIUsageStatisticsRestClientImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(APIUsageStatisticsClientConstants.DURATION_DAYS)"], "Fixed commit": "029f8eb4fadef285bd8621ea324238a9d4441023", "Url": "https://api.github.com/repos/tharinduwijewardane/carbon-apimgt", "Date": "2018-09-10T09:45:21Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadinstitute.hellbender.tools.walkers.validation.basicshortmutpileup.BasicSomaticShortMutationValidator.calculateBasicValidationResult(htsjdk.variant.variantcontext.Genotype,htsjdk.variant.variantcontext.Allele,org.broadinstitute.hellbender.utils.pileup.ReadPileup,int,int,int,org.broadinstitute.hellbender.utils.SimpleInterval,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (basicValidationResult != null) { results.add(basicValidationResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3235/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.walkers.validation.basicshortmutpileup.ValidateBasicSomaticShortMutations.java", "BodyUseAPI": ["java.util.List<org.broadinstitute.hellbender.tools.walkers.validation.basicshortmutpileup.BasicValidationResult>.add(org.broadinstitute.hellbender.tools.walkers.validation.basicshortmutpileup.BasicValidationResult)"], "Fixed commit": "78d0fc8183276414f0ab1e73ba384971a5f92c23", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2018-07-22T03:10:32Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.serviceAccounts().inNamespace(projectName).withName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (predicate.test(saResource.get())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3114/buggy-version/infrastructures.openshift.src.main.java.org.eclipse.che.workspace.infrastructure.openshift.project.OpenShiftProject.java", "BodyUseAPI": [], "Fixed commit": "79ca635619c7eb4106481bed39ff623c6c005e78", "Url": "https://api.github.com/repos/akorneta/che", "Date": "2018-02-07T12:21:03Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.enterprises.wasp.musicstructureapp.Info>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((currentSong.getSongNames()) != null) && ((currentSong.getAlbumName()) != null)) && ((currentSong.getArtistName()) != null)) temp = (((((\"\\nSong: \" + (currentSong.getSongNames())) + \"\\nAlbum: \") + (currentSong.getAlbumName())) + \"\\nArtist: \") + (currentSong.getArtistName())) + \"\\n\"; else temp = (\"\\n\" + (currentSong.getArtistName())) + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/767/buggy-version/app.src.main.java.com.enterprises.wasp.musicstructureapp.InfoAdapter.java", "BodyUseAPI": ["com.enterprises.wasp.musicstructureapp.Info.getArtistName()", "com.enterprises.wasp.musicstructureapp.Info.getAlbumName()", "com.enterprises.wasp.musicstructureapp.Info.getSongNames()", "com.enterprises.wasp.musicstructureapp.Info.getArtistName()"], "Fixed commit": "d8bfbf6dd9678f00b22daba47282a9ab2978ca4e", "Url": "https://api.github.com/repos/Wasp15/Music-Structure-App", "Date": "2018-02-08T08:01:44Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.db.bex.dbTrainingEnroll.service.ManagerRequestDto.getId()", "userRepository.findByMail(userEmail).getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((enrollmentRepository.findByUserIdAndTrainingId(userId, trainingId)) != null) throw new com.db.bex.dbTrainingEnroll.exceptions.MissingDataException(\"User already enrolled\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6380/buggy-version/src.main.java.com.db.bex.dbTrainingEnroll.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "e6c9b965017bc64ab1f64e58aaea97f5bb42c73c", "Url": "https://api.github.com/repos/ParaschivGeorge/dbTrainingEnroll", "Date": "2018-04-25T08:48:47Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ericsson.ei.jsonmerge.JSONArray.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (originJSONObject.has(key)) { valueForKey = originJSONObject.get(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8348/buggy-version/src.main.java.com.ericsson.ei.jsonmerge.MergePrepare.java", "BodyUseAPI": ["com.ericsson.ei.jsonmerge.JSONObject.get(java.lang.String)"], "Fixed commit": "92ce362133145ce18878ca25ae43656cb0fbbdfd", "Url": "https://api.github.com/repos/a-breid-ericsson/eiffel-intelligence", "Date": "2018-06-15T09:40:50Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getChildNodes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((childNodes.item(i).getNodeType()) == (org.w3c.dom.Node.ELEMENT_NODE)) { org.w3c.dom.Element child = ((org.w3c.dom.Element) (childNodes.item(i))); array.add(createNodeDatum(elementType, child, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3689/buggy-version/src.ly.stealth.xmlavro.DatumBuilder.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)"], "Fixed commit": "8af4448fd5603e09e4c583e7e794db9feab4fd00", "Url": "https://api.github.com/repos/DRIVER-EU/xml-avro", "Date": "2018-01-18T12:01:07Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((motionEvent.getEventTime()) - (motionEvent.getDownTime())) > 500) presenter.stopRecordingAudio(); else android.widget.Toast.makeText(this, getString(R.string.action_recording_error), Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6625/buggy-version/app.src.main.java.casa.com.yoquiero.view.ActionActivity.java", "BodyUseAPI": [], "Fixed commit": "3b6f6fe100c78c153c5ce65115daae679c64ea52", "Url": "https://api.github.com/repos/JoseManuelVasquez/YoQuiero", "Date": "2018-08-25T22:27:44Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isStream) dataSourceVersionPrevVersion++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9902/buggy-version/admin-api.src.main.java.org.csi.yucca.adminapi.util.ServiceUtil.java", "BodyUseAPI": [], "Fixed commit": "ea420fa023fcf11f79d7ee3d5aa8c6b35bfea8e9", "Url": "https://api.github.com/repos/csipiemonte/yucca-dataservice", "Date": "2018-03-14T14:46:16Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_cartController.isCartPresent(_user.get_username()))) Controllers.CartController.newSale(_user.get_username());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7753/buggy-version/src.Views.MainView.java", "BodyUseAPI": ["Views.User.get_username()", "Controllers.CartController.newSale(_user.get_username())"], "Fixed commit": "95038a96d91b3935b9880749b617fe316f1be1bc", "Url": "https://api.github.com/repos/asumee/Progetto-Ingegneria", "Date": "2018-02-17T16:38:18Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textArea.getText()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9258/buggy-version/src.de.kontext_e.idea.plugins.jqa.FindInNeo4jDatabaseAction.java", "BodyUseAPI": [], "Fixed commit": "df7d22f31db38d630bff1bc5ab1399e0f3af71b2", "Url": "https://api.github.com/repos/kontext-e/idea-jqa-plugin", "Date": "2018-04-12T11:13:05Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (object.isNull(key)) { map.put(key, null); }else { map.put(key, object.getString(key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7137/buggy-version/src.android.VWOCordovaPlugin.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,object.getString(key))", "org.json.JSONObject.getString(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,<nulltype>)"], "Fixed commit": "9508e7f148bf3641ad3ae6c2752704b71473237f", "Url": "https://api.github.com/repos/wingify/vwo-cordova-plugin", "Date": "2018-04-04T11:56:05Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((businessEntity.getAttachedUser()) == null) { businessEntity.setAttachedUser(getSessionUser()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5727/buggy-version/src.main.java.org.iabako.server.serviceimpl.business.AbstractServiceImpl.java", "BodyUseAPI": ["org.iabako.shared.entity.business.BusinessEntity.setAttachedUser(org.iabako.shared.entity.user.User)"], "Fixed commit": "77a6a5a42d9c7f66a22f17c5b5f64d369c91649c", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2018-02-14T06:19:20Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(actors.contains(actor))) actors.add(actor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5601/buggy-version/src.main.java.ure.sys.UCommander.java", "BodyUseAPI": ["java.util.ArrayList<ure.actors.UActor>.add(ure.actors.UActor)"], "Fixed commit": "6512be536bda1f3c35400fe886a492576df6b2ae", "Url": "https://api.github.com/repos/gilmore606/ure", "Date": "2018-07-23T03:00:48Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(num)) return java.lang.Double.NaN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3808/buggy-version/src.com.sciome.bmdexpress2.util.NumberManager.java", "BodyUseAPI": [], "Fixed commit": "d244aebce0523b83f93db74b4d81dc8fd82e0a7a", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2018-08-15T18:19:39Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStarted) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3406/buggy-version/app.src.main.java.com.example.seamus.wordfox.RoundResults.RoundEndPresenter.java", "BodyUseAPI": [], "Fixed commit": "a40cc12e70c026152bde77d315f3b24d141b9e92", "Url": "https://api.github.com/repos/seamus91g/WordFox", "Date": "2018-10-23T21:29:26Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.selectedWorld) != (gui.graphicHandlers.applicationSections.SinglePlayerInitializationSection.BACKTOMENU)) gameGui.disposeExitFrame();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3525/buggy-version/src.gui.graphicHandlers.applicationSections.SinglePlayerInitializationSection.java", "BodyUseAPI": [], "Fixed commit": "f2e366df0bdeacd682605602a9c1f4b43d17f598", "Url": "https://api.github.com/repos/AlecioP/MetalSlug001", "Date": "2018-10-15T19:49:54Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dataSnapshot.getKey().equals(\"post\"))) { to.rent.rentto.Models.Message message = dataSnapshot.getValue(to.rent.rentto.Models.Message.class); if (message.getAuthorID().equals(myUser.getUser_id())) { message.belongsToCurrentUser = true; }else { message.belongsToCurrentUser = false; } messageAdapter.add(message); messagesListView.scrollToPosition(((messageAdapter.messages.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7180/buggy-version/app.src.main.java.to.rent.rentto.Messages.ChatActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Fixed commit": "6cb60de3f6597281f68315a513b965d7f0352966", "Url": "https://api.github.com/repos/minhwebc/Rent.To", "Date": "2018-05-23T04:29:37Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPair()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6120/buggy-version/src.main.java.com.dy.teenpatti.model.Hand.java", "BodyUseAPI": [], "Fixed commit": "e29e9322c9127ad1f059210fca2319c029159a37", "Url": "https://api.github.com/repos/deepeshy/teenpatti", "Date": "2018-01-06T05:02:01Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callback == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9639/buggy-version/app.src.main.java.com.iclaude.scheduledrecorder.database.RecordingsRepository.java", "BodyUseAPI": [], "Fixed commit": "d7b6f72d217afb6358470e9a666d4c5de3715891", "Url": "https://api.github.com/repos/iClaude/ScheduledRecorder", "Date": "2018-03-13T19:24:00Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.appengine.api.datastore.Entity.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((titleString == null) || ((titleString.length()) == 0)) titleString = \"No Title\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8622/buggy-version/src.main.java.bloggy.BloggyCronServlet.java", "BodyUseAPI": [], "Fixed commit": "50b9402d685e481bea0f70acf5a624ca896a4534", "Url": "https://api.github.com/repos/janathaworth/Bloggy", "Date": "2018-10-13T22:12:08Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.appengine.api.datastore.Entity.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((contentString == null) || ((contentString.length()) == 0)) titleString = \"No Content\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8622/buggy-version/src.main.java.bloggy.BloggyCronServlet.java", "BodyUseAPI": [], "Fixed commit": "50b9402d685e481bea0f70acf5a624ca896a4534", "Url": "https://api.github.com/repos/janathaworth/Bloggy", "Date": "2018-10-13T22:12:08Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pagerAdapter) != null) && ((pagerAdapter.getItem(position)) != null)) ((com.velasco00036514.navigationproject.fragments.RestaurantListFragment) (pagerAdapter.getItem(position))).updateList(newList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3629/buggy-version/app.src.main.java.com.velasco00036514.navigationproject.activities.MainActivity.java", "BodyUseAPI": ["((com.velasco00036514.navigationproject.fragments.RestaurantListFragment) (pagerAdapter.getItem(position))).updateList(java.util.List<com.velasco00036514.navigationproject.models.Restaurant>)", "com.velasco00036514.navigationproject.adapters.RestaurantPagerAdapter.getItem(int)"], "Fixed commit": "351c474c6512173d7cdfd4e79f942974450be6b9", "Url": "https://api.github.com/repos/avelasco-p/TabLayoutExample", "Date": "2018-05-01T20:51:36Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((restaurantsAdapter) != null) restaurantsAdapter.updateList(l);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3629/buggy-version/app.src.main.java.com.velasco00036514.navigationproject.fragments.RestaurantListFragment.java", "BodyUseAPI": [], "Fixed commit": "351c474c6512173d7cdfd4e79f942974450be6b9", "Url": "https://api.github.com/repos/avelasco-p/TabLayoutExample", "Date": "2018-05-01T20:51:36Z"},
{"Line": "=>1456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((variableTableModel.getRowCount()) > index) variableTableModel.setValueAt(\"\", index, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8256/buggy-version/src.main.Java.Views.VisualizerWindow.java", "BodyUseAPI": ["javax.swing.table.DefaultTableModel.setValueAt(java.lang.String,int,int)"], "Fixed commit": "2870f1782e897d92825ed4eee5391680c34a228d", "Url": "https://api.github.com/repos/AaronHuemmecke/Sorting-Algorithm-Visualizer", "Date": "2018-07-03T23:52:25Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.springframework.util.StringUtils.hasText(underwrite.getInsuranceFee())) && (!(\"-\".equals(underwrite.getInsuranceFee())))) { insuranceFee += java.lang.Double.parseDouble(underwrite.getInsuranceFee()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5185/buggy-version/src.main.java.com.modelink.admin.controller.dashboard.DashboardKeywordController.java", "BodyUseAPI": ["com.modelink.reservation.bean.Underwrite.getInsuranceFee()", "java.lang.Double.parseDouble(underwrite.getInsuranceFee())"], "Fixed commit": "dfa3fbece874c9624e6d44e1ee35fa2f94db40c4", "Url": "https://api.github.com/repos/modelink/modelink-api", "Date": "2018-09-12T07:52:49Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.springframework.util.StringUtils.hasText(repellent.getInsuranceFee())) && (!(\"-\".equals(repellent.getInsuranceFee())))) { refundTotalAmount += java.lang.Double.valueOf(repellent.getInsuranceFee()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5185/buggy-version/src.main.java.com.modelink.admin.controller.dashboard.DashboardController.java", "BodyUseAPI": ["com.modelink.admin.controller.dashboard.Repellent.getInsuranceFee()", "java.lang.Double.valueOf(repellent.getInsuranceFee())"], "Fixed commit": "dfa3fbece874c9624e6d44e1ee35fa2f94db40c4", "Url": "https://api.github.com/repos/modelink/modelink-api", "Date": "2018-09-12T07:52:49Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.springframework.util.StringUtils.hasText(repellent.getInsuranceFee())) && (!(\"-\".equals(repellent.getInsuranceFee())))) { refundTotalAmount += java.lang.Double.valueOf(repellent.getInsuranceFee()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5185/buggy-version/src.main.java.com.modelink.admin.controller.dashboard.DashboardController.java", "BodyUseAPI": ["com.modelink.admin.controller.dashboard.Repellent.getInsuranceFee()", "java.lang.Double.valueOf(repellent.getInsuranceFee())"], "Fixed commit": "dfa3fbece874c9624e6d44e1ee35fa2f94db40c4", "Url": "https://api.github.com/repos/modelink/modelink-api", "Date": "2018-09-12T07:52:49Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.springframework.util.StringUtils.hasText(underwrite.getInsuranceFee())) && (!(\"-\".equals(underwrite.getInsuranceFee())))) { insuranceTotalAmount += java.lang.Double.valueOf(underwrite.getInsuranceFee()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5185/buggy-version/src.main.java.com.modelink.admin.controller.dashboard.DashboardController.java", "BodyUseAPI": ["java.lang.Double.valueOf(underwrite.getInsuranceFee())", "com.modelink.admin.controller.dashboard.Underwrite.getInsuranceFee()"], "Fixed commit": "dfa3fbece874c9624e6d44e1ee35fa2f94db40c4", "Url": "https://api.github.com/repos/modelink/modelink-api", "Date": "2018-09-12T07:52:49Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.springframework.util.StringUtils.hasText(underwrite.getInsuranceFee())) && (!(\"-\".equals(underwrite.getInsuranceFee())))) { amount = java.lang.Double.parseDouble(underwrite.getInsuranceFee()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5185/buggy-version/src.main.java.com.modelink.admin.controller.dashboard.DashboardController.java", "BodyUseAPI": ["java.lang.Double.parseDouble(underwrite.getInsuranceFee())", "com.modelink.admin.controller.dashboard.Underwrite.getInsuranceFee()"], "Fixed commit": "dfa3fbece874c9624e6d44e1ee35fa2f94db40c4", "Url": "https://api.github.com/repos/modelink/modelink-api", "Date": "2018-09-12T07:52:49Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<org.simpleflatmapper.map.mapper.PropertyMapping<T, ?, K>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(propertyMapping.getColumnDefinition().has(org.simpleflatmapper.map.property.OptionalProperty.class))) { invalidateKeys.add(propertyMapping.getColumnKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6171/buggy-version/sfm-map.src.main.java.org.simpleflatmapper.map.mapper.PropertyMappingsBuilder.java", "BodyUseAPI": ["org.simpleflatmapper.map.mapper.PropertyMapping<T, ?, K>.getColumnKey()", "java.util.List<K>.add(propertyMapping.getColumnKey())"], "Fixed commit": "5912c9d5296d041588f81533fabb80953e1d062e", "Url": "https://api.github.com/repos/arnaudroger/SimpleFlatMapper", "Date": "2018-10-09T14:56:31Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(search_query.equals(previous_search_query))) { previous_search_query = search_query; progressBar.setVisibility(View.VISIBLE); forceLoad(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6431/buggy-version/app.src.main.java.com.example.android.booklistingapp.BookLoader.java", "BodyUseAPI": [], "Fixed commit": "fb3f2b9337fa9b997cf4a4174d074a544e78316a", "Url": "https://api.github.com/repos/doppelledev/BookListingApp", "Date": "2018-08-12T21:01:31Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.isi.kcap.ontapi.KBAPI.getPropertyValue(edu.isi.kcap.ontapi.KBObject,edu.isi.kcap.ontapi.KBObject)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((locobj != null) && ((locobj.getValue()) != null)) return locobj.getValueAsString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4150/buggy-version/planner.src.main.java.edu.isi.wings.catalog.data.api.impl.kb.DataKB.java", "BodyUseAPI": ["edu.isi.kcap.ontapi.KBObject.getValueAsString()"], "Fixed commit": "0a8ec5a7f9fef988d2abe86b071003279a7429b9", "Url": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/wings", "Date": "2018-08-24T09:14:09Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.alauda.jenkins.devops.sync.util.AlaudaUtils.getAuthenticatedAlaudaClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (client == null) { io.alauda.jenkins.devops.sync.util.AlaudaUtils.logger.severe(\"Can't found alauda client.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8678/buggy-version/src.main.java.io.alauda.jenkins.devops.sync.util.AlaudaUtils.java", "BodyUseAPI": [], "Fixed commit": "b7d77c029cb57b33728e98bcac7c25c287f9248d", "Url": "https://api.github.com/repos/LinuxSuRen/alauda-devops-sync-plugin", "Date": "2018-08-02T10:52:56Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((searchBean.getLastTemplateCardPrinted()) != null) && ((searchBean.getLastTemplateCardPrinted().getId()) == null)) { searchBean.setLastTemplateCardPrinted(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4427/buggy-version/src.main.java.org.esupportail.sgc.web.manager.ManagerCardController.java", "BodyUseAPI": ["org.esupportail.sgc.web.manager.CardSearchBean.setLastTemplateCardPrinted(<nulltype>)"], "Fixed commit": "fb4672fbc74e90a2dec7d1c08eb64fb50651e72f", "Url": "https://api.github.com/repos/EsupPortail/esup-sgc", "Date": "2018-07-06T07:00:10Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((searchBean.getLastTemplateCardPrinted()) != null) && ((searchBean.getLastTemplateCardPrinted().getId()) == null)) { searchBean.setLastTemplateCardPrinted(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4427/buggy-version/src.main.java.org.esupportail.sgc.web.manager.ManagerCardController.java", "BodyUseAPI": ["org.esupportail.sgc.web.manager.CardSearchBean.setLastTemplateCardPrinted(<nulltype>)"], "Fixed commit": "fb4672fbc74e90a2dec7d1c08eb64fb50651e72f", "Url": "https://api.github.com/repos/EsupPortail/esup-sgc", "Date": "2018-07-06T07:00:10Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["forecastModel.aftershockList.getRupsAboveMag(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(largeAftershocks.isEmpty())) { for (org.opensha.sha.earthquake.observedEarthquake.ObsEqkRupture rup : aftershockPlotList) { if ((rup.getMag()) > maxMag) maxMag = rup.getMag(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8614/buggy-version/src.scratch.aftershockStatisticsETAS.ETAS_RateModel2D.java", "BodyUseAPI": [], "Fixed commit": "2fa559573fb0f84cfa5d9b1c7b964a871e098adb", "Url": "https://api.github.com/repos/mbarall/opensha-dev", "Date": "2018-05-07T17:52:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(MiddleText.equals(\"null\"))) middleTv.setText(MiddleText);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/792/buggy-version/a8parser2.src.main.java.com.megtag.a8parser2.a8.A8Designer.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "fa9f586c2d644e2be86dae909e7d90f58b8a1251", "Url": "https://api.github.com/repos/jerrymani33/A8_Module", "Date": "2018-01-08T12:21:18Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((RightText) != \"null\") rightTv.setText(RightText);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/792/buggy-version/a8parser2.src.main.java.com.megtag.a8parser2.a8.A8Designer.java", "BodyUseAPI": [], "Fixed commit": "fa9f586c2d644e2be86dae909e7d90f58b8a1251", "Url": "https://api.github.com/repos/jerrymani33/A8_Module", "Date": "2018-01-08T12:21:18Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((annoType.getName().equals(PSMAnnotationTypes.PPROPHET_ANNOTATION_TYPE_FDR)) && (tppResults.isHasIProphetResults())) { annoType.setDefaultFilterValue(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3366/buggy-version/src.main.org.yeastrc.limelight.xml.comettpp.builder.XMLBuilder.java", "BodyUseAPI": ["org.yeastrc.limelight.limelight_import.api.xml_dto.FilterablePsmAnnotationType.setDefaultFilterValue(<nulltype>)"], "Fixed commit": "dfad420995d49c130aec23a5d4db64013034692a", "Url": "https://api.github.com/repos/yeastrc/limelight-import-comet-tpp", "Date": "2018-09-18T21:29:23Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mRoom)) { mRoom = mSession.getDataHandler().getRoom(row.getEvent().roomId, false); if (null == (mRoom)) { org.matrix.androidsdk.util.Log.d(im.vector.adapters.VectorMessagesAdapterHelper.LOG_TAG, \"## displayReadReceipts () : the room is not available\"); avatarsListView.setVisibility(View.GONE); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9157/buggy-version/vector.src.main.java.im.vector.adapters.VectorMessagesAdapterHelper.java", "BodyUseAPI": [], "Fixed commit": "8e40cbd74ac9db0f9899bf367fb083999426434a", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2018-10-17T08:55:10Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.mobile.dao.ConceptDAO.findConceptsByUUID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (conceptTmp != null) { return new org.openmrs.mobile.dao.ConceptDAO().findConceptsByUUID(concept).getDisplay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/440/buggy-version/openmrs-mobil.openmrs-client.src.main.java.org.openmrs.mobile.models.Obscreate.java", "BodyUseAPI": [], "Fixed commit": "ae1abd1849d4daa590082e17cf8e8802b201ac4c", "Url": "https://api.github.com/repos/BarretIdol/openMRS-app", "Date": "2018-05-10T13:23:37Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.mobile.dao.ConceptDAO.findConceptsByUUID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (conceptsByUUID != null) { return conceptsByUUID.getDisplay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/440/buggy-version/openmrs-mobil.openmrs-client.src.main.java.org.openmrs.mobile.models.Observation.java", "BodyUseAPI": ["org.openmrs.mobile.models.Concept.getDisplay()"], "Fixed commit": "ae1abd1849d4daa590082e17cf8e8802b201ac4c", "Url": "https://api.github.com/repos/BarretIdol/openMRS-app", "Date": "2018-05-10T13:23:37Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.preibisch.mvrecon.fiji.plugin.fusion.DeconvolutionGUI.getComputeBlockThreadFactory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(net.preibisch.mvrecon.process.deconvolution.iteration.mul.ComputeBlockMulThreadCPUFactory.class.isInstance(cptf))) { mpicbg.spim.io.IOFunctions.println(\"For multiplicative deconvolution only CPU is supported so far, sorry. Please open a github issue and I'll implement it.\"); mpicbg.spim.io.IOFunctions.println(\"GITHUB page: https://github.com/PreibischLab/multiview-reconstruction/issues\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8207/buggy-version/src.main.java.net.preibisch.mvrecon.fiji.plugin.Image_Deconvolution.java", "BodyUseAPI": [], "Fixed commit": "5261b906058769b3007fbd9601e878c4bcc57ce3", "Url": "https://api.github.com/repos/PreibischLab/multiview-reconstruction", "Date": "2018-04-06T13:04:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((swissTournamentRunner.TntFileManager.t.dropped.size()) != 0) { output = (output.substring(0, ((output.length()) - 1))) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/996/buggy-version/src.swissTournamentRunner.TntFileManager.java", "BodyUseAPI": [], "Fixed commit": "c8e714461da07b5a391a4090f7e3e88b5aea2f92", "Url": "https://api.github.com/repos/Ferrerothorn/BTC", "Date": "2018-01-04T12:07:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((os1.getLots()) > (os2.getLots())) { j++; os2.add(); }else if ((os1.getLots()) < (os2.getLots())) { i++; os1.add(); }else if (((os1.getLots()) == (os2.getLots())) && ((os1.getLots()) == 0)) { i++; j++; os1.add(); os2.add(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9898/buggy-version/src.main.java.com.hal.mt4.strategy.monitor_margin.PickClosableOrdersAlgo.java", "BodyUseAPI": ["com.hal.mt4.strategy.monitor_margin.PickClosableOrdersAlgo.OrderSet.getLots()", "com.hal.mt4.strategy.monitor_margin.PickClosableOrdersAlgo.OrderSet.add()", "com.hal.mt4.strategy.monitor_margin.PickClosableOrdersAlgo.OrderSet.getLots()", "com.hal.mt4.strategy.monitor_margin.PickClosableOrdersAlgo.OrderSet.add()", "com.hal.mt4.strategy.monitor_margin.PickClosableOrdersAlgo.OrderSet.add()", "com.hal.mt4.strategy.monitor_margin.PickClosableOrdersAlgo.OrderSet.getLots()", "com.hal.mt4.strategy.monitor_margin.PickClosableOrdersAlgo.OrderSet.add()", "com.hal.mt4.strategy.monitor_margin.PickClosableOrdersAlgo.OrderSet.getLots()", "com.hal.mt4.strategy.monitor_margin.PickClosableOrdersAlgo.OrderSet.getLots()"], "Fixed commit": "309ab7639dde537092ba87b128b6f51dcc9ceecf", "Url": "https://api.github.com/repos/Lhfcws/hal", "Date": "2018-05-27T14:32:07Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.blakebr0.pickletweaks.config.ModConfig.confCheaperShovel) && ((tool.getItem()) instanceof net.minecraft.item.ItemSpade)) { repairCost = ((int) (java.lang.Math.max(1, (repairCost / 2)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3768/buggy-version/src.main.java.com.blakebr0.pickletweaks.feature.crafting.GridRepairRecipe.java", "BodyUseAPI": [], "Fixed commit": "416c2e72e2f9f91386134e15be92f79227d766d8", "Url": "https://api.github.com/repos/BlakeBr0/PickleTweaks", "Date": "2018-03-27T01:50:14Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element instanceof org.ballerinalang.plugins.idea.psi.IntegerLiteralNode) { annotateInteger(parent, holder); }else if (element instanceof org.ballerinalang.plugins.idea.psi.VariableReferenceNode) { annotateVariableReferenceNodes(((org.ballerinalang.plugins.idea.psi.VariableReferenceNode) (element)), holder); }else if (element instanceof org.ballerinalang.plugins.idea.psi.AnnotationDefinitionNode) { annotateAnnotationDefinitionNodes(((org.ballerinalang.plugins.idea.psi.AnnotationDefinitionNode) (element)), holder); }else if (element instanceof org.ballerinalang.plugins.idea.psi.ImportDeclarationNode) { annotateImportDeclarations(element, holder); }else if (element instanceof org.ballerinalang.plugins.idea.psi.PackageNameNode) { annotatePackageNameNodes(element, holder); }else if (element instanceof org.ballerinalang.plugins.idea.psi.GlobalVariableDefinitionNode) { annotateGlobalVariable(element, holder); }else if (parent instanceof org.ballerinalang.plugins.idea.psi.GlobalVariableDefinitionNode) { annotateGlobalVariable(parent, holder); }else if ((parent instanceof org.ballerinalang.plugins.idea.psi.DocumentationAttachmentNode) || (parent instanceof org.ballerinalang.plugins.idea.psi.DeprecatedTextNode)) { annotateDocumentation(parent, holder); }else if ((((((element instanceof org.ballerinalang.plugins.idea.psi.SingleBackTickDocInlineCodeNode) || (element instanceof org.ballerinalang.plugins.idea.psi.DoubleBackTickInlineCodeNode)) || (element instanceof org.ballerinalang.plugins.idea.psi.TripleBackTickInlineCodeNode)) || (element instanceof org.ballerinalang.plugins.idea.psi.SingleBackTickDeprecatedInlineCodeNode)) || (element instanceof org.ballerinalang.plugins.idea.psi.DoubleBackTickDeprecatedInlineCodeNode)) || (element instanceof org.ballerinalang.plugins.idea.psi.TripleBackTickDeprecatedInlineCodeNode)) { annotateInlineCode(element, holder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1554/buggy-version/tool-plugins.intellij.src.main.java.org.ballerinalang.plugins.idea.codeinsight.daemon.impl.BallerinaAnnotator.java", "BodyUseAPI": ["org.ballerinalang.plugins.idea.codeinsight.daemon.impl.BallerinaAnnotator.annotateImportDeclarations(com.intellij.psi.PsiElement,com.intellij.lang.annotation.AnnotationHolder)", "org.ballerinalang.plugins.idea.codeinsight.daemon.impl.BallerinaAnnotator.annotateGlobalVariable(com.intellij.psi.PsiElement,com.intellij.lang.annotation.AnnotationHolder)", "org.ballerinalang.plugins.idea.codeinsight.daemon.impl.BallerinaAnnotator.annotatePackageNameNodes(com.intellij.psi.PsiElement,com.intellij.lang.annotation.AnnotationHolder)", "org.ballerinalang.plugins.idea.codeinsight.daemon.impl.BallerinaAnnotator.annotateInlineCode(com.intellij.psi.PsiElement,com.intellij.lang.annotation.AnnotationHolder)"], "Fixed commit": "ff04de4e252f396f918cd07ccfa899112b499f2b", "Url": "https://api.github.com/repos/riyafa/ballerina", "Date": "2018-03-16T10:03:24Z"},
{"Line": "=>1197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o instanceof org.netxms.client.objects.TemplateGroup) { java.util.Set<org.netxms.client.objects.AbstractObject> children = ((org.netxms.client.objects.TemplateGroup) (o)).getAllChilds(AbstractObject.OBJECT_TEMPLATE); for (org.netxms.client.objects.AbstractObject child : children) { templates.put(((org.netxms.client.objects.Template) (child)).getObjectId(), ((org.netxms.client.objects.Template) (child))); idList.add(child.getObjectId()); } }else if (o instanceof org.netxms.client.objects.Template) { templates.put(((org.netxms.client.objects.Template) (o)).getObjectId(), ((org.netxms.client.objects.Template) (o))); idList.add(o.getObjectId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1599/buggy-version/src.java.netxms-eclipse.ServerConfig.src.org.netxms.ui.eclipse.serverconfig.views.ExportFileBuilder.java", "BodyUseAPI": ["java.util.Set<java.lang.Long>.add(o.getObjectId())", "org.netxms.client.objects.AbstractObject.getObjectId()"], "Fixed commit": "0cec26fdde5986c0ff36265f97d3c857d8a2f550", "Url": "https://api.github.com/repos/netxms/netxms", "Date": "2018-01-18T07:59:31Z"},
{"Line": "=>1189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o instanceof org.netxms.ui.eclipse.serverconfig.views.TemplateGroup) { java.util.Set<org.netxms.client.objects.AbstractObject> children = ((org.netxms.ui.eclipse.serverconfig.views.TemplateGroup) (o)).getAllChilds(AbstractObject.OBJECT_TEMPLATE); for (org.netxms.client.objects.AbstractObject child : children) { templates.put(((org.netxms.client.objects.Template) (child)).getObjectId(), ((org.netxms.client.objects.Template) (child))); idList.add(child.getObjectId()); } }else if (o instanceof org.netxms.client.objects.Template) { templates.put(((org.netxms.client.objects.Template) (o)).getObjectId(), ((org.netxms.client.objects.Template) (o))); idList.add(o.getObjectId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1599/buggy-version/webui.webapp.ServerConfig.src.org.netxms.ui.eclipse.serverconfig.views.ExportFileBuilder.java", "BodyUseAPI": ["org.netxms.client.objects.AbstractObject.getObjectId()", "java.util.Set<java.lang.Long>.add(o.getObjectId())"], "Fixed commit": "0cec26fdde5986c0ff36265f97d3c857d8a2f550", "Url": "https://api.github.com/repos/netxms/netxms", "Date": "2018-01-18T07:59:31Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evaluacion) == null) return \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2605/buggy-version/src.java.org.Evaluacion.java", "BodyUseAPI": [], "Fixed commit": "a7f6d1d2e17f7973553c46be746a4d6fc438d569", "Url": "https://api.github.com/repos/YoneMoreno/ArquitecturaSoftwareFrontControllerPractica1", "Date": "2018-03-24T08:05:57Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getUserLevel()) == 2) { android.content.Intent intent = new android.content.Intent(getActivity(), com.softmed.rucodia.activity.CreateProductActivity.class); startActivity(intent); }else if ((session.getUserLevel()) != 4) { android.content.Intent intent = new android.content.Intent(getActivity(), com.softmed.rucodia.activity.AddProductActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5570/buggy-version/app.src.main.java.com.softmed.rucodia.fragment.ProductsListFragment.java", "BodyUseAPI": ["com.softmed.rucodia.utils.SessionManager.getUserLevel()"], "Fixed commit": "60b101ab9550be11aa97a8619e8b030ba6269800", "Url": "https://api.github.com/repos/SoftmedTanzania/rucodia_agrodealer", "Date": "2018-07-04T17:04:55Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.mFacing) == (gregapi.data.CS.SIDE_Z_NEG)) || ((this.mFacing) == (gregapi.data.CS.SIDE_Z_POS))) { newBB = this.box(0, 0, 0.45, 1, 0.75, 0.55); if ((aAABB != null) && (aAABB.intersectsWith(newBB))) { aList.add(newBB); } }else { newBB = this.box(0.45, 0, 0, 0.55, 0.75, 1); if ((aAABB != null) && (aAABB.intersectsWith(newBB))) { aList.add(newBB); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9256/buggy-version/src.main.java.com.kbi.qwertech.tileentities.UpgradeDesk.java", "BodyUseAPI": [], "Fixed commit": "821d19cdf491389a795ad406bdb91990dfd592a7", "Url": "https://api.github.com/repos/Qwertygiy/qwertech", "Date": "2018-02-23T02:42:32Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ogP.equals(\"White\")) { invoker = 1; }else { invoker = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6733/buggy-version/src.MiniMax.java", "BodyUseAPI": [], "Fixed commit": "8d8439977c85ed473e124076613eab912747121a", "Url": "https://api.github.com/repos/StefanToni/amazonsAI", "Date": "2018-10-15T18:48:18Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (page != null) { page.toFront(); page.requestFocusInWindow(); }else { page = new lsfusion.client.dock.ClientFormDockable(navigator, canonicalName, formSID, remoteForm, this, closeListener, firstChanges); openForm(page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9675/buggy-version/desktop-client.src.main.java.lsfusion.client.dock.DockableManager.java", "BodyUseAPI": ["lsfusion.client.dock.ClientFormDockable.toFront()", "lsfusion.client.dock.ClientFormDockable.requestFocusInWindow()"], "Fixed commit": "647f885f54bad0684d421ed03ceb1d026aecbbeb", "Url": "https://api.github.com/repos/lsfusion/platform", "Date": "2018-09-21T14:04:37Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRoot(path.get(((path.size()) - 1))))) { return new java.util.ArrayList<java.lang.Integer>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7931/buggy-version/src.cfalcione.cs303.lab10.BreadthFirstSearch.java", "BodyUseAPI": [], "Fixed commit": "a9a1f6b86ca0e49b6cb478a9f341267ce28a0116", "Url": "https://api.github.com/repos/csfalcione/cs303-labs", "Date": "2018-04-19T04:25:48Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((depositCharge.isVirtual()) && (\"000\".equals(depositCharge.getCardDetails().getCvv()))) { LOGGER.warn(\"CVC of 000 found. This is probably a fuck-up on BDC. Blanking out CVC.\"); depositCharge.getCardDetails().setCvv(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1282/buggy-version/src.main.java.com.macbackpackers.services.PaymentProcessorService.java", "BodyUseAPI": ["com.macbackpackers.beans.Payment.getCardDetails()", "depositCharge.getCardDetails().setCvv(<nulltype>)"], "Fixed commit": "e65f41d8b9dd367b83e6b38064971bbda9d73c14", "Url": "https://api.github.com/repos/sirstudly/littlehotelier", "Date": "2018-02-08T23:16:19Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (authorsTopRatedPratilipiIds != null) { log.info((\"Got for TopAuthor-TopContent \" + (authorsTopRatedPratilipiIds.size()))); com.pratilipi.recommendations.dto.Pratilipi ptlp; for (java.lang.Long pId : authorsTopRatedPratilipiIds) { if (!(userReadPratilipiIds.contains(pId))) { ptlp = new com.pratilipi.recommendations.dto.Pratilipi(); ptlp.setPratilipiId(pId); meta = new java.util.HashMap<java.lang.String, java.lang.Object>(); meta.put(\"recommendationType\", \"TopAuthor-TopContent\"); ptlp.setMeta(meta); pratilipis.add(ptlp); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3021/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["org.apache.log4j.Logger.info(java.lang.String)", "java.util.List<java.lang.Long>.size()"], "Fixed commit": "69aa2e6dffa6f50b0c73f6fe426af7a7246867ea", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-04-03T11:37:09Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((teach.user) != null) { teach_builder.add(\"user\", it.cnr.istc.pst.exploraa.api.User.ADAPTER.adaptToJson(teach.user)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/665/buggy-version/ExPLoRAA-API.src.main.java.it.cnr.istc.pst.exploraa.api.User.java", "BodyUseAPI": ["it.cnr.istc.pst.exploraa.api.User.UserAdapter.adaptToJson(teach.user)", "javax.json.JsonObjectBuilder.add(java.lang.String,javax.json.JsonObject)"], "Fixed commit": "3e68377f2454c3f95effde311423d1ce9621951f", "Url": "https://api.github.com/repos/pstlab/ExPLoRAA", "Date": "2018-07-30T17:14:10Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((follow.user) != null) { follow_builder.add(\"user\", it.cnr.istc.pst.exploraa.api.User.ADAPTER.adaptToJson(follow.user)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/665/buggy-version/ExPLoRAA-API.src.main.java.it.cnr.istc.pst.exploraa.api.User.java", "BodyUseAPI": ["javax.json.JsonObjectBuilder.add(java.lang.String,javax.json.JsonObject)", "it.cnr.istc.pst.exploraa.api.User.UserAdapter.adaptToJson(follow.user)"], "Fixed commit": "3e68377f2454c3f95effde311423d1ce9621951f", "Url": "https://api.github.com/repos/pstlab/ExPLoRAA", "Date": "2018-07-30T17:14:10Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((follow.lesson) != null) { follow_builder.add(\"lesson\", Lesson.ADAPTER.adaptToJson(follow.lesson)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/665/buggy-version/ExPLoRAA-API.src.main.java.it.cnr.istc.pst.exploraa.api.User.java", "BodyUseAPI": ["Lesson.ADAPTER.adaptToJson(follow.lesson)", "javax.json.JsonObjectBuilder.add(java.lang.String,Lesson.ADAPTER.adaptToJson(follow.lesson))"], "Fixed commit": "3e68377f2454c3f95effde311423d1ce9621951f", "Url": "https://api.github.com/repos/pstlab/ExPLoRAA", "Date": "2018-07-30T17:14:10Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((teach.lesson) != null) { teach_builder.add(\"lesson\", Lesson.ADAPTER.adaptToJson(teach.lesson)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/665/buggy-version/ExPLoRAA-API.src.main.java.it.cnr.istc.pst.exploraa.api.User.java", "BodyUseAPI": ["javax.json.JsonObjectBuilder.add(java.lang.String,Lesson.ADAPTER.adaptToJson(teach.lesson))", "Lesson.ADAPTER.adaptToJson(teach.lesson)"], "Fixed commit": "3e68377f2454c3f95effde311423d1ce9621951f", "Url": "https://api.github.com/repos/pstlab/ExPLoRAA", "Date": "2018-07-30T17:14:10Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mention.begin) > 0) { edu.stanford.nlp.ling.CoreLabel prevWord = tokens.get(((mention.begin) - 1)); features.setCount((\"prevWordType:\" + (prevWord.tag())), 1); if (edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.punctuationForFeatures.contains(prevWord.lemma())) features.setCount((\"prevWordPunct:\" + (prevWord.lemma())), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3345/buggy-version/src.edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.java", "BodyUseAPI": ["java.util.List<edu.stanford.nlp.ling.CoreLabel>.get(((mention.begin) - 1))"], "Fixed commit": "4f3ef8ccbc41a655abee2f9c81c8a6a37ee0e276", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2018-01-15T04:06:38Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.pipeline.Annotation.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((mention.end) + 1) < (tokens.size())) { edu.stanford.nlp.ling.CoreLabel nextWord = tokens.get(((mention.end) + 1)); features.setCount((\"nextWordType:\" + (nextWord.tag())), 1); if (edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.punctuationForFeatures.contains(nextWord.lemma())) features.setCount((\"nextWordPunct:\" + (nextWord.lemma())), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3345/buggy-version/src.edu.stanford.nlp.quoteattribution.Sieves.training.SupervisedSieveTraining.java", "BodyUseAPI": ["java.util.List<edu.stanford.nlp.ling.CoreLabel>.get(((mention.end) + 1))"], "Fixed commit": "4f3ef8ccbc41a655abee2f9c81c8a6a37ee0e276", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2018-01-15T04:06:38Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["som.compiler.KernanClient.getKernanResponse()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (response.has(\"line\")) { errorMessage += (\" (@ line \" + (response.get(\"line\").getAsInt())) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3390/buggy-version/src.som.compiler.SourcecodeCompiler.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "response.get(\"line\").getAsInt()"], "Fixed commit": "4489fcb057a68a5a70ed2458e0530fd71af6299f", "Url": "https://api.github.com/repos/richard-roberts/SOMns", "Date": "2018-05-08T06:49:40Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gui.isClosing()) { bRun = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/460/buggy-version/GMG3D.src.Engine.java", "BodyUseAPI": [], "Fixed commit": "e3d1676205638c40e8a1186f9c845f448bf9a644", "Url": "https://api.github.com/repos/GMGMaker/GMG3D", "Date": "2018-02-15T21:48:53Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tok.equalsIgnoreCase(\"APPLIED\")) { types.add(RegistrationType.PRE_REGISTRATION); }else if (tok.equalsIgnoreCase(\"MINOR SURGERY\")) { types.add(RegistrationType.MINOR_SURGERY); }else if (tok.equalsIgnoreCase(\"Contraception\")) { types.add(RegistrationType.CONTRACEPTIVE_SERVICES); }else if (tok.equalsIgnoreCase(\"Child Health Surveillance\")) { types.add(RegistrationType.CHILD_HEALTH_SURVEILLANCE); }else if (tok.equalsIgnoreCase(\"Maternity\")) { types.add(RegistrationType.MATERNITY_SERVICES); }else if (tok.equalsIgnoreCase(\"Walk-in Patient\")) { types.add(RegistrationType.WALK_IN); }else if ((tok.equalsIgnoreCase(\"Other\")) || (tok.equalsIgnoreCase(\"Remotely Registered\"))) { types.add(RegistrationType.OTHER); }else { throw new org.endeavourhealth.core.exceptions.TransformException((\"Unmapped registration type \" + tok)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7147/buggy-version/src.main.java.org.endeavourhealth.transform.tpp.csv.transforms.patient.SRPatientRegistrationTransformer.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "80be4d000ed4d9cd0626106839bbc3a71f298117", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-08-11T11:34:16Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parent != null) { compare = parent.compareTo(e); if (compare > 0) { if ((parent.left.balance) == 0) { indicatorsOfNecessityOfRebalancing.set(((indicatorsOfNecessityOfRebalancing.size()) - 1), false); } }else if (compare < 0) { if ((parent.right.balance) == 0) { indicatorsOfNecessityOfRebalancing.set(((indicatorsOfNecessityOfRebalancing.size()) - 1), false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5320/buggy-version/src.ru.yaroslavskudarnov.BST.main.AVLTree.java", "BodyUseAPI": ["ru.yaroslavskudarnov.BST.main.AVLTree<E>.AVLTreeNode.compareTo(E)"], "Fixed commit": "c14e03bc9903e8c0d7600a7d6a3ef6134e12c6ed", "Url": "https://api.github.com/repos/YaroslavSkudarnov/search-trees", "Date": "2018-02-13T21:18:45Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sync.result) != null) { featuresForIconUrl = sync.result.featuresForIconUrl; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1861/buggy-version/mage.src.main.java.mil.nga.giat.mage.map.cache.StaticFeatureLayerRepository.java", "BodyUseAPI": [], "Fixed commit": "f557bd042ec5260f98ab0b65556252af7065c531", "Url": "https://api.github.com/repos/ngageoint/mage-android", "Date": "2018-06-01T17:26:45Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(io.nuls.kernel.utils.AddressTool.validAddress(keyStore.getAddress()))) { return io.nuls.account.service.impl.Result.getFailed(AccountErrorCode.ADDRESS_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6594/buggy-version/account-module.base.account-base.src.main.java.io.nuls.account.service.impl.AccountServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "88a2339fb2e1c711dada78703da45859c9946941", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-07-08T11:47:01Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (node != null) { pickManager.pickElements(pickManager.new com.net2plan.gui.plugins.networkDesign.topologyPane.plugins.PickStateInfo(node, java.util.Optional.empty())); callback.updateVisualizationAfterPick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8790/buggy-version/Net2Plan-GUI.Net2Plan-GUI-Plugins.Net2Plan-NetworkDesign.src.main.java.com.net2plan.gui.plugins.networkDesign.topologyPane.plugins.MoveNodePlugin.java", "BodyUseAPI": ["com.net2plan.gui.plugins.networkDesign.visualizationControl.PickManager.pickElements(com.net2plan.gui.plugins.networkDesign.topologyPane.plugins.PickStateInfo)"], "Fixed commit": "0c6eb6314e12cef3daa5ded5e5bba846e23e083e", "Url": "https://api.github.com/repos/girtel/Net2Plan", "Date": "2018-10-05T10:29:38Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.toRadians(manager.chassisRotation.getAngle())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((-(java.lang.Math.PI)) / 2) <= a) && (a <= 0)) { a += java.lang.Math.PI; }else if (((-(java.lang.Math.PI)) <= a) && (a <= ((-(java.lang.Math.PI)) / 2))) { a += java.lang.Math.PI; }else if ((((java.lang.Math.PI) / 2) <= a) && (a <= (java.lang.Math.PI))) { a = -((java.lang.Math.PI) - a); }else if ((0 <= a) && (a <= ((java.lang.Math.PI) / 2))) { a = ((-(java.lang.Math.PI)) / 2) - (((java.lang.Math.PI) / 2) - a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9281/buggy-version/src.classes.behavior.ViewMotionManager.java", "BodyUseAPI": [], "Fixed commit": "b5167fa17edcdd69a762c69744d58705ee220209", "Url": "https://api.github.com/repos/NandreyN/JFX_Game", "Date": "2018-04-10T13:27:58Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.content.ContextCompat.getDrawable(android.content.Context,R.drawable.ic_bottomsheet_new_background)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (background != null) { background.setColorFilter(new android.graphics.PorterDuffColorFilter(backgroundColor, PorterDuff.Mode.SRC_ATOP)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3835/buggy-version/countrypicker.src.main.java.com.mukesh.countrypicker.CountryPicker.java", "BodyUseAPI": ["android.graphics.drawable.Drawable.setColorFilter(android.graphics.PorterDuffColorFilter)"], "Fixed commit": "1e3f5aed73c53aa1d76ce9be882282f2fc29d7f9", "Url": "https://api.github.com/repos/mukeshsolanki/country-picker-android", "Date": "2018-09-01T11:18:58Z"},
{"Line": "=>1721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(url.trim().contains(\"missing.png\"))) && (!(((android.app.Activity) (context)).isFinishing()))) com.bumptech.glide.Glide.with(imageView.getContext()).asBitmap().load(url).thumbnail(0.1F).into(new com.bumptech.glide.request.target.SimpleTarget<android.graphics.Bitmap>() { @java.lang.Override public void onResourceReady(@android.support.annotation.NonNull android.graphics.Bitmap resource, com.bumptech.glide.request.transition.Transition<? super android.graphics.Bitmap> transition) { com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions.withCrossFade(); int width = resource.getWidth(); int height = resource.getHeight(); if (height < (fr.gouv.etalab.mastodon.helper.Helper.convertDpToPixel(200, context))) { double ratio = ((double) (fr.gouv.etalab.mastodon.helper.Helper.convertDpToPixel(200, context))) / ((double) (height)); width = ((int) (ratio * width)); height = ((int) (fr.gouv.etalab.mastodon.helper.Helper.convertDpToPixel(200, context))); resource = android.graphics.Bitmap.createScaledBitmap(resource, width, height, false); } imageView.setImageBitmap(resource); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8820/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.drawers.StatusListAdapter.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(imageView.getContext()).asBitmap().load(java.lang.String)", "com.bumptech.glide.Glide.with(imageView.getContext()).asBitmap().load(url).thumbnail(0.1F).into(com.bumptech.glide.request.target.SimpleTarget<android.graphics.Bitmap>)", "com.bumptech.glide.Glide.with(imageView.getContext()).asBitmap().load(url).thumbnail(float)"], "Fixed commit": "58cb083bd0bd03eb1b6e298631aee91e89b7a58c", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2018-04-28T13:26:34Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((animationTimer) != null) { animationTimer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3069/buggy-version/src.main.java.gui.Controller.java", "BodyUseAPI": [], "Fixed commit": "3bd83af401cda498b09cc6800194071473652a20", "Url": "https://api.github.com/repos/egedebruin/Trackscape", "Date": "2018-05-29T08:02:14Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) < 8) { res.substring(0, ((res.length()) - 1)); }else { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7020/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "655380fa310db30195e22a8baa7fdb2b5627758d", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-JJKistler", "Date": "2018-10-05T22:19:03Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((theString.equals(\"2\")) && (use_flower)) && (lottieAnimationView.isAnimating())) { lottieAnimationView.pauseAnimation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2912/buggy-version/app.src.main.java.com.example.dispensable.popal.CanvasActivity.java", "BodyUseAPI": ["com.airbnb.lottie.LottieAnimationView.pauseAnimation()"], "Fixed commit": "8269f446c6886a5a0521dd2830b5e598a9dbb861", "Url": "https://api.github.com/repos/dispensable/popal", "Date": "2018-08-31T03:52:48Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((params.length) == 5) { m.setSource(params[4]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4089/buggy-version/TraceReader.src.com.panda.trace.Trace.java", "BodyUseAPI": ["com.panda.trace.MethodDes.setSource(java.lang.String)"], "Fixed commit": "0ff994c3ffcb63be6dd52dc616a872310047762f", "Url": "https://api.github.com/repos/PATHofang1900/TraceReader", "Date": "2018-06-15T07:58:52Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outputStringError.toLowerCase().matches(\"(?s).* command not found\\n\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6470/buggy-version/plugins.edu.kit.ipd.sdq.modsim.hla.example.src.edu.kit.ipd.sdq.modsim.hla.example.docker.DockerWizard.java", "BodyUseAPI": [], "Fixed commit": "d60540c82e27a0381fb881f5d233a3ff8178b04c", "Url": "https://api.github.com/repos/MoSimEngine/EclipseHLAPlugin", "Date": "2018-09-17T12:28:52Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outputStringInput.matches(\"(?s)Docker version .*\")) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6470/buggy-version/plugins.edu.kit.ipd.sdq.modsim.hla.example.src.edu.kit.ipd.sdq.modsim.hla.example.docker.DockerWizard.java", "BodyUseAPI": [], "Fixed commit": "d60540c82e27a0381fb881f5d233a3ff8178b04c", "Url": "https://api.github.com/repos/MoSimEngine/EclipseHLAPlugin", "Date": "2018-09-17T12:28:52Z"},
{"Line": "=>3061", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOkToAutohide) == 0) { mShowButtons.setImageResource(android.R.drawable.arrow_up_float); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8575/buggy-version/app.src.main.java.com.quaap.launchtime.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "04ee77fc66e8607dcdf26c7de570b8fb2704bbe5", "Url": "https://api.github.com/repos/quaap/LaunchTime", "Date": "2018-07-11T21:12:44Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!errored) { cu.setImports(imports); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5535/buggy-version/src.main.java.org.walkmod.checkstyle.treewalkers.AvoidStarImport.java", "BodyUseAPI": [], "Fixed commit": "8afb71e2af2aad307ca946b17e06acc43402f235", "Url": "https://api.github.com/repos/walkmod/walkmod-checkstyle-plugin", "Date": "2018-04-01T20:09:47Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stdin.hasNext()) { input = stdin.nextLine(); if ((input.length()) > 0) { java.lang.System.out.println(\"Input required to be integer\"); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8104/buggy-version/Runner.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "638733b96340cece86ae2afacf1d9b610ac0be2b", "Url": "https://api.github.com/repos/panaman67/OOPProject", "Date": "2018-04-18T22:59:03Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)", "com.microsoft.appcenter.ingestion.models.one.Data.getProperties()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (destProperties.has(keys[i])) { com.microsoft.appcenter.utils.AppCenterLog.warn(com.microsoft.appcenter.ingestion.models.one.LOG_TAG, ((\"Property key '\" + (keys[i])) + \"' already has a value, the old value will be overridden.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8426/buggy-version/sdk.appcenter.src.main.java.com.microsoft.appcenter.ingestion.models.one.PartCUtils.java", "BodyUseAPI": ["com.microsoft.appcenter.utils.AppCenterLog.warn(com.microsoft.appcenter.ingestion.models.one.LOG_TAG,java.lang.String)"], "Fixed commit": "ca50e495a97a75f3db532e8773b45b0d27ec2142", "Url": "https://api.github.com/repos/Microsoft/AppCenter-SDK-Android", "Date": "2018-09-20T18:12:03Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(destProperties.isNull(keys[lastIndex]))) { com.microsoft.appcenter.utils.AppCenterLog.warn(com.microsoft.appcenter.ingestion.models.one.LOG_TAG, ((\"Property key '\" + (keys[lastIndex])) + \"' already has a value, the old value will be overridden.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8426/buggy-version/sdk.appcenter.src.main.java.com.microsoft.appcenter.ingestion.models.one.PartCUtils.java", "BodyUseAPI": ["com.microsoft.appcenter.utils.AppCenterLog.warn(com.microsoft.appcenter.ingestion.models.one.LOG_TAG,java.lang.String)"], "Fixed commit": "ca50e495a97a75f3db532e8773b45b0d27ec2142", "Url": "https://api.github.com/repos/Microsoft/AppCenter-SDK-Android", "Date": "2018-09-20T18:12:03Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mNeedsBuilt) { setSourcedOffenseDisplay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2426/buggy-version/app.src.main.java.com.finitemonkey.dougb.nflcrimewatch.ui.activities.SourcedOffensesActivity.java", "BodyUseAPI": [], "Fixed commit": "34a84c7067e46c0558b16a63778e1ba846abf8d8", "Url": "https://api.github.com/repos/thefinitemonkey/Capstone-Project", "Date": "2018-07-26T00:02:31Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) mNeedsBuilt = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2426/buggy-version/app.src.main.java.com.finitemonkey.dougb.nflcrimewatch.ui.activities.SourcedOffensesActivity.java", "BodyUseAPI": [], "Fixed commit": "34a84c7067e46c0558b16a63778e1ba846abf8d8", "Url": "https://api.github.com/repos/thefinitemonkey/Capstone-Project", "Date": "2018-07-26T00:02:31Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (region == null) { throw new java.lang.IllegalArgumentException(\"AWS Region cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2101/buggy-version/src.main.java.com.github.vfss3.S3FileSystemOptions.java", "BodyUseAPI": [], "Fixed commit": "e4d14bf0214e2ce85a6915a8d8aa6a883de4d5f9", "Url": "https://api.github.com/repos/abashev/vfs-s3", "Date": "2018-09-23T20:58:38Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.validator.FilenameValidatorWorkerImpl.getType(org.alfresco.service.cmr.repository.NodeRef)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ContentModel.TYPE_CONTENT.equals(type)) { if ((parts.size()) != 2) { throw new java.io.FileNotFoundException((((\"Fileextension not found, name: \" + fileName) + \", nodeRef: \") + nodeRef)); } if (regexSetup(filenameRegex, parts.get(0))) { throw new java.io.FileNotFoundException((\"Filename has invalid characters: \" + fileName)); } if (!(regexSetup(fileextensionRegex, parts.get(1)))) { throw new java.io.FileNotFoundException((\"Fileextension not whitelisted: \" + (parts.get(1)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8439/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.validator.FilenameValidatorWorkerImpl.java", "BodyUseAPI": [], "Fixed commit": "95533f87440c95bb70decebee1d6bc7aaf341395", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2018-01-16T05:49:15Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (EDatabaseTypeName.MSSQL.getDisplayName().equals(info.getDbType())) { createStatament = \"conn.createStatement()\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5247/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.properties.controllers.GuessSchemaProcess.java", "BodyUseAPI": [], "Fixed commit": "09a13f0e0c77d9e4698f19e8f3d8c4c148302886", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-10-15T03:08:48Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SettingsActivity.sharedPrefs) == null) { SettingsActivity.sharedPrefs = new com.kunaalkumar.ignis.SharedPrefs(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8748/buggy-version/app.src.main.java.com.kunaalkumar.ignis.activities.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "bf11a93992116a0442fe17178091c5e7089acd1d", "Url": "https://api.github.com/repos/KunaalKumar/Ignis", "Date": "2018-07-14T20:50:19Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((versionListing) == null) || (versionListing.isTruncated())) { versionListing = bucketLister.listVersions(); innerLoopIndex = 0; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1814/buggy-version/src.main.java.com.streamlio.connectors.aws.utils.S3VersionSummaryIterator.java", "BodyUseAPI": [], "Fixed commit": "9a4f0ec60d571626f5ab5a2b225d616b0dbd94d2", "Url": "https://api.github.com/repos/streamlio/s3-heron-connector", "Date": "2018-03-27T19:04:37Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bucketLister != null) { updateWindow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1814/buggy-version/src.main.java.com.streamlio.connectors.aws.utils.S3BucketPoller.java", "BodyUseAPI": [], "Fixed commit": "9a4f0ec60d571626f5ab5a2b225d616b0dbd94d2", "Url": "https://api.github.com/repos/streamlio/s3-heron-connector", "Date": "2018-03-27T19:04:37Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.Duration.getSeconds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (seconds > 30) { minutes++; }else if ((seconds == 30) && halfUp) { minutes++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8430/buggy-version/src.main.java.pl.grondek.workclock.controller.WorkTimeController.java", "BodyUseAPI": [], "Fixed commit": "e3b929ca008bcf13acc7a3d0a03ad746362138de", "Url": "https://api.github.com/repos/pgrondek/workclock", "Date": "2018-05-06T14:50:07Z"},
{"Line": "=>1770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (service != null) { org.talend.repository.model.IProxyRepositoryFactory factory = service.getProxyRepositoryFactory(); if (factory != null) { java.util.List<org.talend.core.model.properties.ProjectReference> references = org.talend.repository.ProjectManager.getInstance().getCurrentProject().getProjectReferenceList(true); for (org.talend.core.model.properties.ProjectReference ref : references) { toReturn.addAll(factory.getAll(new org.talend.core.model.general.Project(ref.getReferencedProject()), beansType)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9638/buggy-version/main.plugins.org.talend.repository.src.main.java.org.talend.repository.ui.wizards.exportjob.scriptsmanager.JobJavaScriptsManager.java", "BodyUseAPI": ["org.talend.repository.model.IProxyRepositoryService.getProxyRepositoryFactory()"], "Fixed commit": "a0f43998b0f69088de4b2da3656d13aebf922ff7", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2018-04-11T09:53:02Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getY()) < 0) player.setY(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4487/buggy-version/core.src.com.dmr.deathmarch.GameScreen.java", "BodyUseAPI": ["com.dmr.deathmarch.Player.setY(int)"], "Fixed commit": "80ef69d82066db529a9ace91c8f2f13663d2d116", "Url": "https://api.github.com/repos/Adam01010101F/DeathMarch", "Date": "2018-10-26T22:03:59Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getY()) > (720 - 120)) player.setY((720 - 120));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4487/buggy-version/core.src.com.dmr.deathmarch.GameScreen.java", "BodyUseAPI": ["com.dmr.deathmarch.Player.setY(int)"], "Fixed commit": "80ef69d82066db529a9ace91c8f2f13663d2d116", "Url": "https://api.github.com/repos/Adam01010101F/DeathMarch", "Date": "2018-10-26T22:03:59Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getRequestURL().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (path.contains(\"admin\")) { newUser.setRole(1); }else { newUser.setRole(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8072/buggy-version/src.main.java.com.feedz.servlets.UserServlet.java", "BodyUseAPI": [], "Fixed commit": "ca996726bcdc7648a3c592efd8c42157fb2adb51", "Url": "https://api.github.com/repos/gfriedm4/Feedz", "Date": "2018-05-13T22:07:52Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.booleanValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (subbed == true) { codeu.model.data.User user = userStore.getUser(username); user.addSubscription(conversationId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6/buggy-version/src.main.java.codeu.controller.ChatServlet.java", "BodyUseAPI": [], "Fixed commit": "4e35cc37c8084dee0ba2137b994ca46979f40f8d", "Url": "https://api.github.com/repos/vocatwk/CodeU-Nemo", "Date": "2018-07-20T05:04:01Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hmkcode.android.sqlite.MySQLiteHelper.getAllRecords(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((keywords == null) || ((keywords.length) == 0)) { startActivity(json, context); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4652/buggy-version/src.android.SMSReceiver.java", "BodyUseAPI": [], "Fixed commit": "30ae9ec681e62e730708138704d89239495aa181", "Url": "https://api.github.com/repos/Manja14/cordova-plugin-sms", "Date": "2018-07-28T11:41:26Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != null) me.zeroeightsix.jtcui.JTC.update(me.zeroeightsix.jtcui.JTC.getRootParent(parent));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4768/buggy-version/core.src.me.zeroeightsix.jtcui.Space.java", "BodyUseAPI": [], "Fixed commit": "b03227d5bbf28c657d13c91547e85b759da0a2cf", "Url": "https://api.github.com/repos/zeroeightysix/jtcui", "Date": "2018-09-19T19:29:59Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ninos.adapters.ChallengeAdapter.ChallengeViewHolder.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((postInfo.getCreatedAt()) != null) { java.lang.String date = dateUtil.formatDateToString(postInfo.getCreatedAt(), DateUtil.FULL_DATE); tv_created_time.setText(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3942/buggy-version/app.src.main.java.com.ninos.adapters.ChallengeAdapter.java", "BodyUseAPI": ["com.ninos.models.PostInfo.getCreatedAt()", "com.ninos.utils.DateUtil.formatDateToString(postInfo.getCreatedAt(),DateUtil.FULL_DATE)"], "Fixed commit": "4fa87787073dcecaa6d02b508e6aec64413827ba", "Url": "https://api.github.com/repos/ninosapp/Ninos", "Date": "2018-01-24T05:41:20Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lbjtoken.form.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tmp.equals(\"may\")) || (tmp.equals(\"sat\"))) { if (current.getLabel().startsWith(\"NNP\")) lbjtoken.type = \"B-null\"; }else lbjtoken.type = \"B-null\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6982/buggy-version/temporal-normalizer.src.main.java.edu.illinois.cs.cogcomp.temporal.normalizer.main.TemporalChunkerAnnotator.java", "BodyUseAPI": [], "Fixed commit": "305af39ca1d0ae99f7e767912e844e9f00f680a2", "Url": "https://api.github.com/repos/ttsygankova/cogcomp-nlp", "Date": "2018-06-14T21:14:02Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof com.mongodb.embedded.client.MongoClientEmbeddedException) { return ((com.mongodb.embedded.client.MongoClientEmbeddedException) (t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/804/buggy-version/driver-embedded.src.main.com.mongodb.embedded.client.MongoDBCAPIHelper.java", "BodyUseAPI": [], "Fixed commit": "bd7dc501a0ee61576106463103f3a61a22206cb2", "Url": "https://api.github.com/repos/rozza/mongo-java-driver", "Date": "2018-05-10T15:16:17Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (aggrs == null) { return dhbList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/325/buggy-version/src.main.java.com.elasticsearchcache.service.CacheService.java", "BodyUseAPI": [], "Fixed commit": "8acfe322af731df166ed912b231b55729b6dad76", "Url": "https://api.github.com/repos/lks21c/elasticsearch-cache", "Date": "2018-01-22T07:29:30Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisible()) { (health)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1542/buggy-version/src.com.oriruapp.oriru.Player.java", "BodyUseAPI": [], "Fixed commit": "e7d54ff0e6038c17b098fb32cda999629a067188", "Url": "https://api.github.com/repos/OriruApp/Oriru", "Date": "2018-08-13T16:28:13Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chars.length) > 100000) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2875/buggy-version/src.main.java.io.muserver.rest.StringEntityProviders.java", "BodyUseAPI": [], "Fixed commit": "84f4762e36257849756996ffd9e1e4aa4017a0e9", "Url": "https://api.github.com/repos/3redronin/mu-server", "Date": "2018-09-17T13:30:30Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mozilla.vrbrowser.ui.SessionStore.get().getCurrentUri()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (url == null) { url = \"\"; }else if (((url.startsWith(\"jar:\")) || (url.startsWith(\"resource:\"))) || (url.startsWith(\"about:\"))) { url = \"\"; }else if (org.mozilla.vrbrowser.ui.SessionStore.get().isHomeUri(url)) { url = org.mozilla.vrbrowser.ui.SessionStore.get().getHomeUri(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2018/buggy-version/app.src.common.shared.org.mozilla.vrbrowser.ui.SettingsWidget.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "8432e3cdcff94d3806ac0e8ef0bad6698002827f", "Url": "https://api.github.com/repos/andrenatal/FirefoxReality", "Date": "2018-09-06T14:57:00Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spotR - pieceR) == 2) { if ((board.getPiece((pieceR + 1), pieceF)) != null) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9243/buggy-version/src.Pawn.java", "BodyUseAPI": ["Board.getPiece(int,int)"], "Fixed commit": "ac478a3398f463a1ce170aadf58da04e7026a098", "Url": "https://api.github.com/repos/Alex-Alexiev/ChessBot", "Date": "2018-03-24T13:41:54Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spotR - pieceR) == (-2)) { if ((board.getPiece((pieceR - 1), pieceF)) != null) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9243/buggy-version/src.Pawn.java", "BodyUseAPI": ["Board.getPiece(int,int)"], "Fixed commit": "ac478a3398f463a1ce170aadf58da04e7026a098", "Url": "https://api.github.com/repos/Alex-Alexiev/ChessBot", "Date": "2018-03-24T13:41:54Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { binding.textView.setTransitionName(getString(R.string.text_view_transition_name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4769/buggy-version/app.src.main.java.com.example.roshaan.sharedelementtransition.fragmenttransition.StartFragment.java", "BodyUseAPI": [], "Fixed commit": "1f2b4e459aae5fd2a032bf69e8c6b3417fbe1b91", "Url": "https://api.github.com/repos/Roshaanf/Shared-element-transition-Android-", "Date": "2018-02-02T14:12:14Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((boxContainerRef.get()) != null) { boxContainerRef.get().setBackgroundColor(videoInfo.getBgColor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5519/buggy-version/giraffeplayer2.src.main.java.tcking.github.com.giraffeplayer2.GiraffePlayer.java", "BodyUseAPI": [], "Fixed commit": "c006807fd50e61f8744ac2e7cb1bf8f1164a88fa", "Url": "https://api.github.com/repos/tcking/GiraffePlayer2", "Date": "2018-01-05T05:54:24Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected != (mSelected)) && (swipeable.com.layoutmanager.touchelper.ItemTouchHelper.RecoverAnimation.inProgress)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8157/buggy-version/layoutmanager.src.main.java.swipeable.com.layoutmanager.touchelper.ItemTouchHelper.java", "BodyUseAPI": [], "Fixed commit": "82eee4cbd45183d5d8f2222b816472823764a3f5", "Url": "https://api.github.com/repos/nihad92/SwipeableCards", "Date": "2018-05-25T01:06:53Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSeed) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2044/buggy-version/modAionImpl.src.org.aion.zero.impl.blockchain.AionPendingStateImpl.java", "BodyUseAPI": [], "Fixed commit": "fdec033ab50a0521764e0212f7349056ce6aa992", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-04-13T20:51:45Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mChosenImagePathMap) != null) && (!(mChosenImagePathMap.isEmpty()))) && (mChosenImagePathMap.containsKey(position))) { mCbSelected.setChecked(true); }else { mCbSelected.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3290/buggy-version/photal.src.main.java.com.arjinmc.photal.activity.PreviewActivity.java", "BodyUseAPI": [], "Fixed commit": "545a830a4c5d2a088f2a26ba2fc1d432c16365b3", "Url": "https://api.github.com/repos/arjinmc/Photal", "Date": "2018-04-18T05:46:59Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compiler) == null) { compiler = new com.ybnf.compiler.impl.LuceneCompiler(service); com.yyd.semantic.common.impl.SemanticIntention.COMPILERS.put(service, compiler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4268/buggy-version/src.main.java.com.yyd.semantic.common.impl.SemanticIntention.java", "BodyUseAPI": [], "Fixed commit": "8afe4ec4e40ca9a4ad8c39db5941575d678f15cb", "Url": "https://api.github.com/repos/celeryrobo/yyd-semantics", "Date": "2018-03-09T07:43:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.choerodon.iam.infra.repository.impl.SystemSettingRepositoryImpl.queryAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(records.isEmpty())) { throw new io.choerodon.core.exception.CommonException(\"error.setting.already.one\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3550/buggy-version/src.main.java.io.choerodon.iam.infra.repository.impl.SystemSettingRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "a6b2a99428b6b344464af7c40beffb89c3634da5", "Url": "https://api.github.com/repos/choerodon/iam-service", "Date": "2018-10-17T11:24:16Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fossasia.phimpme.gallery.util.PreferenceUtil.getString(getString(R.string.upload_view_choice),getString(R.string.last_first))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (choiceofdisply.equals(getString(R.string.last_first))) { uploadHistoryAdapter.setResults(loadData(getString(R.string.last_first))); }else if (choiceofdisply.equals(getString(R.string.latest_first))) { uploadHistoryAdapter.setResults(loadData(getString(R.string.latest_first))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1189/buggy-version/app.src.main.java.org.fossasia.phimpme.uploadhistory.UploadHistory.java", "BodyUseAPI": ["java.lang.String.equals(getString(R.string.latest_first))"], "Fixed commit": "829352520cf95332fd68669690d952b1df961102", "Url": "https://api.github.com/repos/sauravvishal8797/phimpme-android", "Date": "2018-06-29T16:34:01Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(favphotomode)) && (!(allPhotoMode))) && (upoadhis)) { int c = current_image_pos; realm = io.realm.Realm.getDefaultInstance(); realm.executeTransaction(new io.realm.Realm.Transaction() { @java.lang.Override public void execute(io.realm.Realm realm) { io.realm.RealmResults<org.fossasia.phimpme.data.local.UploadHistoryRealmModel> uploadHistoryImagesModels = realm.where(org.fossasia.phimpme.data.local.UploadHistoryRealmModel.class).equalTo(\"pathname\", uploadhistory.get(current_image_pos).getPath()).findAll(); uploadHistoryImagesModels.deleteAllFromRealm(); } }); deletefromuploadhistorylist(uploadhistory.get(current_image_pos).getPath()); size_all = uploadhistory.size(); if ((size_all) > 0) { adapter.notifyDataSetChanged(); getSupportActionBar().setTitle((((((c + 1) + \" \") + (getString(R.string.of))) + \" \") + (size_all))); org.fossasia.phimpme.utilities.SnackBarHandler.show(parentView, getApplicationContext().getString(R.string.photo_deleted_from_fav_msg)); }else { onBackPressed(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1189/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.SingleMediaActivity.java", "BodyUseAPI": [], "Fixed commit": "829352520cf95332fd68669690d952b1df961102", "Url": "https://api.github.com/repos/sauravvishal8797/phimpme-android", "Date": "2018-06-29T16:34:01Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.java.sip.communicator.service.protocol.RemoteControlListener.getCallPeer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (deferredRemoteControlPeers.contains(peer.getAddress())) { fireRemoteControlGranted(peer); deferredRemoteControlPeers.remove(peer.getAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2859/buggy-version/src.net.java.sip.communicator.service.protocol.AbstractOperationSetDesktopSharingClient.java", "BodyUseAPI": ["net.java.sip.communicator.service.protocol.CallPeer.getAddress()", "net.java.sip.communicator.service.protocol.AbstractOperationSetDesktopSharingClient<T>.fireRemoteControlGranted(net.java.sip.communicator.service.protocol.CallPeer)", "java.util.List<java.lang.String>.remove(peer.getAddress())"], "Fixed commit": "69ad01b84bee64f5e7551657f76e24a50d681596", "Url": "https://api.github.com/repos/GNUDimarik/jitsi", "Date": "2018-10-08T12:09:59Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) == 0) { split = new java.lang.String[]{ \"\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/363/buggy-version/src.main.java.com.googlecode.lanterna.gui2.TextBox.java", "BodyUseAPI": [], "Fixed commit": "b3d392d810c134496a7690003ec6a4c3b59b0593", "Url": "https://api.github.com/repos/mabe02/lanterna", "Date": "2018-09-08T05:43:38Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.table.TableModel.getValueAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((endpoint.getHttpMethod().length()) > 4) { displayArea.append(endpoint.getHttpMethod().substring(14)); }else displayArea.append(endpoint.getHttpMethod());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4292/buggy-version/threadfix-scanner-plugin.burp.src.main.java.burp.BurpExtender.java", "BodyUseAPI": ["endpoint.getHttpMethod().substring(int)", "javax.swing.JTextArea.append(endpoint.getHttpMethod())", "javax.swing.JTextArea.append(endpoint.getHttpMethod().substring(14))", "Endpoint.Info.getHttpMethod()", "Endpoint.Info.getHttpMethod()"], "Fixed commit": "c76fd8a9f7225cd02b412263ecae50ad20b137d7", "Url": "https://api.github.com/repos/secdec/astam-correlator", "Date": "2018-02-09T14:11:43Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["social.entourage.android.view.EntourageTitleView.findViewById(R.id.title_separator)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (separator != null) separator.setVisibility((showSeparator ? VISIBLE : GONE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9892/buggy-version/app.src.main.java.social.entourage.android.view.EntourageTitleView.java", "BodyUseAPI": ["android.view.View.setVisibility((showSeparator ? VISIBLE : GONE))"], "Fixed commit": "cb0397245f19e017e593ca35d056a077c76635fb", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2018-10-08T09:18:34Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(local_prefix.endsWith(\"/\"))) { local_prefix = local_prefix + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6132/buggy-version/app.src.main.java.com.mikifus.padland.Utils.PadUrl.java", "BodyUseAPI": [], "Fixed commit": "d58b2dd03d5ecf6692b897981ccffa310b4d16bf", "Url": "https://api.github.com/repos/mikifus/padland", "Date": "2018-03-07T17:09:18Z"},
{"Line": "=>1546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tranquilizerTicks) == 0) { this.isSleeping = false; this.stayAwakeTime = 400; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5656/buggy-version/src.main.java.org.jurassicraft.server.entity.DinosaurEntity.java", "BodyUseAPI": [], "Fixed commit": "44273a2158c69a2ccaeb6a44253832c5a14f0a29", "Url": "https://api.github.com/repos/JurassiCraftTeam/JurassiCraft2", "Date": "2018-05-13T00:40:40Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["HibernateUtil.instance.sessionFactory.openSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(session.isConnected())) { net.socialgamer.cah.CahModule.LOG.error(\"Session disconnected!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9069/buggy-version/src.main.java.net.socialgamer.cah.CahModule.java", "BodyUseAPI": [], "Fixed commit": "91db05999534eee4f024528c1ff2e358dbc6057f", "Url": "https://api.github.com/repos/ajanata/PretendYoureXyzzy", "Date": "2018-02-16T00:27:53Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stmt.getValue().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ss.length) == 2) { prefix = ss[0]; gname = ss[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6667/buggy-version/src.org.eye.gui.TreeBuilder.java", "BodyUseAPI": [], "Fixed commit": "7d324e0e92ce1dab0a635be0242900cf68fda944", "Url": "https://api.github.com/repos/GuoyouZhang/eye", "Date": "2018-10-24T11:08:57Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.tree.DefaultMutableTreeNode.getUserObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ytn.getKeyword().equals(YangKeyword.YK_CONTAINER)) || (ytn.getKeyword().equals(YangKeyword.YK_LIST))) { menuPopup.add(menuItemExtendTree); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6667/buggy-version/src.org.eye.gui.EyeGui.java", "BodyUseAPI": [], "Fixed commit": "7d324e0e92ce1dab0a635be0242900cf68fda944", "Url": "https://api.github.com/repos/GuoyouZhang/eye", "Date": "2018-10-24T11:08:57Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (publishTime.equals(Const.TIME_REPRESENTS_NOW)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7304/buggy-version/src.main.java.teammates.common.datatransfer.attributes.FeedbackSessionAttributes.java", "BodyUseAPI": [], "Fixed commit": "e9a5a6933fdec62a62fde744bb59f0f6206b824e", "Url": "https://api.github.com/repos/whipermr5/teammates", "Date": "2018-03-14T05:56:02Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((publishTime.equals(Const.TIME_REPRESENTS_LATER)) || (publishTime.equals(Const.TIME_REPRESENTS_NEVER))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7304/buggy-version/src.main.java.teammates.common.datatransfer.attributes.FeedbackSessionAttributes.java", "BodyUseAPI": [], "Fixed commit": "e9a5a6933fdec62a62fde744bb59f0f6206b824e", "Url": "https://api.github.com/repos/whipermr5/teammates", "Date": "2018-03-14T05:56:02Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(cLoader.getDefaultInstanceName())) { cLoader.setDefaultInstanceName(name); }else { xyz.vopen.microservice.security.ext.ExtensionFactory.LOGGER.warn(((\"Interface @\" + aClass) + \" implements class must has only one default implement.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6839/buggy-version/security-common.src.main.java.xyz.vopen.microservice.security.ext.ExtensionFactory.java", "BodyUseAPI": [], "Fixed commit": "be9ccaa8b76011672c20e35117361f2174bbd033", "Url": "https://api.github.com/repos/CiNC0/tiffany-security", "Date": "2018-05-23T07:45:49Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yVel) >= 5) yVel = 5; else if ((yVel) <= (-5)) yVel = -5;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3387/buggy-version/src.PongV2.HumanPaddle.java", "BodyUseAPI": [], "Fixed commit": "af5cf16112868bb8c41891ee4db0bb99ceb94ae4", "Url": "https://api.github.com/repos/dlagge/Pong", "Date": "2018-08-28T11:00:13Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((bisector.startPoint) != null) && ((bisector.endPoint) != null)) g2d.drawLine(((int) (java.lang.Math.round(((bisector.startPoint.x) * (this.pixelFactor))))), (yMax - ((int) (java.lang.Math.round(((bisector.startPoint.y) * (this.pixelFactor)))))), ((int) (java.lang.Math.round(((bisector.endPoint.x) * (this.pixelFactor))))), (yMax - ((int) (java.lang.Math.round(((bisector.endPoint.y) * (this.pixelFactor)))))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/295/buggy-version/src.dt.VoronoiDiagram.java", "BodyUseAPI": ["java.lang.Math.round(((bisector.endPoint.y) * (this.pixelFactor)))", "java.lang.Math.round(((bisector.endPoint.x) * (this.pixelFactor)))", "java.awt.Graphics2D.drawLine(int,int,int,int)", "java.lang.Math.round(((bisector.startPoint.x) * (this.pixelFactor)))", "java.lang.Math.round(((bisector.startPoint.y) * (this.pixelFactor)))"], "Fixed commit": "b2930939d648f04d40dddd4ef1108c2b44fd14b8", "Url": "https://api.github.com/repos/LeeGlendenning/Quadrilateral-Delaunay-Triangulation", "Date": "2018-05-29T23:00:18Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (generateQuery) { generateSearchQuery(galAcct); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1613/buggy-version/store.src.java.com.zimbra.cs.gal.GalSearchControl.java", "BodyUseAPI": [], "Fixed commit": "4bee855fddc5a9eb327efe7db8b0391c6e171d6c", "Url": "https://api.github.com/repos/Zimbra/zm-mailbox", "Date": "2018-09-14T20:40:55Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (check) return Max + 1; else return Max;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7859/buggy-version/src.Dao.BookDao.java", "BodyUseAPI": [], "Fixed commit": "0e68eec3cc7cd8a087c7ee898215551450260aae", "Url": "https://api.github.com/repos/heroserth2/ebook", "Date": "2018-10-31T14:23:41Z"},
{"Line": "=>1745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dumpSource.indexOf(\"\u672c\u5c08\u6b04\u6b61\u8fce\")) > 0) { dumpSource = dumpSource.substring(0, dumpSource.indexOf(\"\u672c\u5c08\u6b04\u6b61\u8fce\")); }else { dumpSource = dumpSource.substring(0, dumpSource.indexOf(\"<p>\u8cc7\u6599\u4f86\u6e90\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9241/buggy-version/src.main.java.ohbot.OhBotController.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "ef18d6cbc606e7cade08bac917916730d604ae5e", "Url": "https://api.github.com/repos/ChonPiggy/OhBot", "Date": "2018-01-04T04:45:05Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (configuration != null) { loggedinUser = configuration.getOrDefault(LensConfConstants.SESSION_LOGGEDIN_USER, userName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6100/buggy-version/lens-server.src.main.java.org.apache.lens.server.BaseLensService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.getOrDefault(LensConfConstants.SESSION_LOGGEDIN_USER,java.lang.String)"], "Fixed commit": "11885b9812ecce9093c18259084de2c6c5ccbb02", "Url": "https://api.github.com/repos/RajashekharInmobi/lens", "Date": "2018-08-10T08:14:39Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<org.eclipse.xtext.resource.IEObjectDescription>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tempList != null) { for (org.eclipse.xtext.resource.IEObjectDescription tempDescription : tempList) { tempAdditionalImportedGlobalVariables.add(org.eclipse.xtext.resource.EObjectDescription.create(tempDescription.getName().getLastSegment(), tempDescription.getEObjectOrProxy())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4947/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.scoping.DSLScopeProvider.java", "BodyUseAPI": [], "Fixed commit": "f3e2ec5fb2e1b8f74ab9e0320e59e67ba0efa7e4", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2018-01-25T12:52:39Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (storeDetails != null) lblNewLabel.setText((((storeDetails.getStoreName().toUpperCase()) + \" , \") + (storeDetails.getCity().toUpperCase()))); else lblNewLabel.setText(\"Store Name Missing\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3789/buggy-version/src.com.shopbilling.ui.ManageStoreUI.java", "BodyUseAPI": [], "Fixed commit": "2351ae3c595dca9a3db44cbf405d0a27af2a26cf", "Url": "https://api.github.com/repos/kumbharvish/JavaFx_My_Store", "Date": "2018-01-05T16:52:22Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errors) != null) { for (java.lang.Error error : errors) { if ((sb.length()) > 0) sb.append(\" / \"); sb.append(error); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7325/buggy-version/src.main.java.com.opsmatters.newrelic.api.model.Errors.java", "BodyUseAPI": [], "Fixed commit": "ba6834de9c19eb00ec60f0df89f658bb46570394", "Url": "https://api.github.com/repos/opsmatters/newrelic-api", "Date": "2018-02-09T01:59:59Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tree.isLeaf()) set(tree.getLeaf());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4200/buggy-version/src.algebraic.manipulator.PathTree.java", "BodyUseAPI": [], "Fixed commit": "8655406ded8e2aa770a8da0b5864b349e57d41c1", "Url": "https://api.github.com/repos/adamAndMath/AlgebraicManipulator", "Date": "2018-01-27T12:59:54Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((person.getTags()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4467/buggy-version/src.main.java.seedu.address.model.person.TagContainsKeywordsPredicate.java", "BodyUseAPI": [], "Fixed commit": "6f72c7919517f2c108177c30a5d9e46b473f16a7", "Url": "https://api.github.com/repos/sarahgoh97/main", "Date": "2018-04-15T16:11:38Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.identity.common.internal.dto.AccessToken.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.microsoft.identity.common.adal.internal.util.StringExtensions.isNullOrBlank(scopeString))) { final java.lang.String[] scopeArray = scopeString.split(\"\\\\s+\"); scopeSet.addAll(java.util.Arrays.asList(scopeArray)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8702/buggy-version/common.src.main.java.com.microsoft.identity.common.internal.cache.MsalOAuth2TokenCache.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "b09873266c1f920c1e4ec546fa67ae5b866fb52a", "Url": "https://api.github.com/repos/AzureAD/microsoft-authentication-library-common-for-android", "Date": "2018-04-02T22:33:08Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ItemEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sqldeveloper.extension.excelimportexport.ExtensionResources.format(\"NOT_DELETE_BEFORE_IMPORT\").equals(chkSelected.getText())) { deleteBeforeImport = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3162/buggy-version/src.sqldeveloper.extension.excelimportexport.ImportDialog.java", "BodyUseAPI": [], "Fixed commit": "dc2dd14303a07d7ec458c26305aac3364ef8bb51", "Url": "https://api.github.com/repos/takahiden/excelimportexport", "Date": "2018-10-12T23:54:11Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fontWeight != null) { java.lang.String fW = fontWeight.toLowerCase(); if ((((fW.equals(SvgConstants.Attributes.BOLD)) || (fW.equals(\"700\"))) || (fW.equals(\"800\"))) || (fW.equals(\"900\"))) { isBold = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3343/buggy-version/svg.src.main.java.com.itextpdf.svg.renderers.impl.TextSvgNodeRenderer.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "8a767a9a7decac7dc149be86981b201031f6eb1f", "Url": "https://api.github.com/repos/csst0286/itext7", "Date": "2018-10-05T15:52:12Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.client.RestTemplate.exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((responseEntity.getStatusCode()) != (org.springframework.http.HttpStatus.OK)) { return responseEntity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6616/buggy-version/lib.src.main.java.ir.atitec.signalgo.HttpCore.java", "BodyUseAPI": [], "Fixed commit": "0d22a04c68df70565b55965db34afb3e1ae08035", "Url": "https://api.github.com/repos/hamedgramzi/signalGoClient", "Date": "2018-09-30T12:49:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mx.com.quiin.contactpicker.views.CommunicationViewHolder.getChildAdapterPosition()", "mx.com.quiin.contactpicker.views.CommunicationViewHolder.getParentAdapterPosition()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parentPosition != (android.support.v7.widget.RecyclerView.NO_POSITION)) && (childPosition != (android.support.v7.widget.RecyclerView.NO_POSITION))) { handleChildSelection(parentPosition, childPosition); collapseParent(parentPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2450/buggy-version/unifiedContactPicker.src.main.java.mx.com.quiin.contactpicker.adapters.ContactAdapter.java", "BodyUseAPI": ["mx.com.quiin.contactpicker.adapters.ContactAdapter.1.handleChildSelection(int,int)", "mx.com.quiin.contactpicker.adapters.ContactAdapter.1.collapseParent(int)"], "Fixed commit": "0745a97874f578a2a318e906aae4239928e17755", "Url": "https://api.github.com/repos/mobivangelism/UnifiedContactPicker", "Date": "2018-06-06T07:33:12Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.massivecraft.massivecore.util.InventoryUtil.getHelmet(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((helmet != null) && (helmet.getItemMeta().hasEnchant(Enchantment.BINDING_CURSE))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5840/buggy-version/src.com.massivecraft.massivehat.engine.EngineHatSwitch.java", "BodyUseAPI": [], "Fixed commit": "944ec8c20c01907a6d938ccbc9193c4a2ed1a66e", "Url": "https://api.github.com/repos/aprader1/MassiveHat", "Date": "2018-03-17T23:08:29Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (executionOutputSample.getStdOut().trim().equals(expectedSampleOutput)) { sampleStatus = \"<plainbold><font color=\\\"#66e621\\\">CORRECT</font></plainbold>\"; }else { sampleStatus = \"<plainbold><font color=\\\"#e62100\\\">WRONG</font></plainbold>\"; success = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7094/buggy-version/src.com.openhorizonsolutions.ltr.SolutionUploadHandler.java", "BodyUseAPI": [], "Fixed commit": "66429d75e7d17df320d84f475811b498467e5ae2", "Url": "https://api.github.com/repos/DrDab/LaunchTestRun", "Date": "2018-09-30T05:46:48Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (executionOutputJudge.getStdOut().trim().equals(expectedJudgeOutput)) { judgeStatus = \"<plainbold><font color=\\\"#66e621\\\">CORRECT</font></plainbold>\"; }else { judgeStatus = \"<plainbold><font color=\\\"#e62100\\\">WRONG</font></plainbold>\"; success = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7094/buggy-version/src.com.openhorizonsolutions.ltr.SolutionUploadHandler.java", "BodyUseAPI": [], "Fixed commit": "66429d75e7d17df320d84f475811b498467e5ae2", "Url": "https://api.github.com/repos/DrDab/LaunchTestRun", "Date": "2018-09-30T05:46:48Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javelin.controller.action.Breath.breath(javelin.model.unit.abilities.BreathWeapon,javelin.controller.action.area.Area,state.clone(hero),javelin.model.state.BattleState)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (outcomes.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/150/buggy-version/javelin.controller.action.Breath.java", "BodyUseAPI": [], "Fixed commit": "ee9fe1705dc2f8e71fedd9ada8a7387a3c67533e", "Url": "https://api.github.com/repos/tukkek/javelin", "Date": "2018-04-13T23:52:52Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((success[0]) && (success[1])) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4126/buggy-version/app.src.main.java.ca.dal.cs.softeng.UpdateUserSettings.java", "BodyUseAPI": [], "Fixed commit": "17cf31c07fca411fb6a30b6ea7ef1d4c6ea66988", "Url": "https://api.github.com/repos/T-Caines/CSCI3130", "Date": "2018-04-04T15:43:27Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((success[0]) && (success[1])) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4126/buggy-version/app.src.main.java.ca.dal.cs.softeng.UpdateUserSettings.java", "BodyUseAPI": [], "Fixed commit": "17cf31c07fca411fb6a30b6ea7ef1d4c6ea66988", "Url": "https://api.github.com/repos/T-Caines/CSCI3130", "Date": "2018-04-04T15:43:27Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (compoParent != null) { this.compParente = new pmb.music.AllMusic.model.Composition(compoParent.get(0), null, compoParent.get(1), pmb.music.AllMusic.model.RecordType.valueOf(compoParent.get(2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3986/buggy-version/src.main.java.pmb.music.AllMusic.view.DialogFileTable.java", "BodyUseAPI": [], "Fixed commit": "abf13f31381feb5ce18b6615db2fb04c362fb065", "Url": "https://api.github.com/repos/69pmb/AllMusic", "Date": "2018-05-18T14:53:44Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDeathEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((en == null) || ((en.getType()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7414/buggy-version/src.main.java.me.george.devpractice.Game.Listeners.Entities.Drops.java", "BodyUseAPI": [], "Fixed commit": "08cfe5d5baa32683d03ead7b0dcd895e932c744a", "Url": "https://api.github.com/repos/Lorm1/dpractice", "Date": "2018-03-09T18:51:56Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDeathEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((en == null) || ((en.getType()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7414/buggy-version/src.main.java.me.george.devpractice.Game.Listeners.Entities.Drops.java", "BodyUseAPI": [], "Fixed commit": "08cfe5d5baa32683d03ead7b0dcd895e932c744a", "Url": "https://api.github.com/repos/Lorm1/dpractice", "Date": "2018-03-09T18:51:56Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((e.getDrops()) == null) || (e.getDrops().contains(Material.AIR))) || (e.getDrops().isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/7414/buggy-version/src.main.java.me.george.devpractice.Game.Listeners.Entities.Drops.java", "BodyUseAPI": [], "Fixed commit": "08cfe5d5baa32683d03ead7b0dcd895e932c744a", "Url": "https://api.github.com/repos/Lorm1/dpractice", "Date": "2018-03-09T18:51:56Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tripEntry.getStopTimes().remove(org.onebusaway.transit_data_federation.services.transit_graph.StopTimeEntry)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rc) { return updateBlockIndices(tripEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6165/buggy-version/onebusaway-transit-data-federation.src.main.java.org.onebusaway.transit_data_federation.impl.transit_graph.TransitGraphImpl.java", "BodyUseAPI": [], "Fixed commit": "553dcdbbb41c79269169677d110271aaf47ae0d6", "Url": "https://api.github.com/repos/camsys/onebusaway-application-modules", "Date": "2018-08-16T17:54:26Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.identity.common.internal.net.ObjectMapper.serializeNestedJsonToMap(entry.getValue().toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (hashMap != null) { objectMap.putAll(hashMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9882/buggy-version/common.src.main.java.com.microsoft.identity.common.internal.net.ObjectMapper.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.putAll(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "131f6e6c2a18fe7e882e1e9b1c3d4ffe405e28ca", "Url": "https://api.github.com/repos/AzureAD/microsoft-authentication-library-common-for-android", "Date": "2018-09-01T00:44:17Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.String) { java.lang.String sv = java.lang.String.valueOf(value); return !(sv.isEmpty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/122/buggy-version/src.main.java.hsim.checkpoint.core.component.validationRule.check.MandatoryCheck.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "480761b529b161354f54f3430b3cf88915228d5a", "Url": "https://api.github.com/repos/ckpoint/CheckPoint", "Date": "2018-07-26T12:05:56Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vectorWrapper.getField().getName()", "org.apache.drill.exec.physical.impl.spill.RecordBatchSizer.getColumnSizeMap()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((columnSizeMap.get(columnName)) == null) { java.lang.System.out.println((\"incoming columns \" + columnSizeMap)); java.lang.System.out.println((\"offending column \" + columnName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/3733/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.aggregate.HashAggTemplate.java", "BodyUseAPI": ["java.io.PrintStream.println((\"incoming columns \" + columnSizeMap))", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "6ee8038c4c23e77a00ea6d18779b5208f4455e97", "Url": "https://api.github.com/repos/ilooner/drill", "Date": "2018-01-24T21:54:07Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width > 0) { width = (width - (getPaddingLeft())) - (getPaddingRight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/577/buggy-version/widget.FastTextView.src.main.java.com.lsjwzh.widget.text.FastTextView.java", "BodyUseAPI": [], "Fixed commit": "da1cb109460713d1ae8eaed106d1cf0e6292d886", "Url": "https://api.github.com/repos/lsjwzh/FastTextView", "Date": "2018-10-09T06:56:39Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width > 0) { width = (width - (getPaddingLeft())) - (getPaddingRight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/577/buggy-version/widget.FastTextView.src.main.java.com.lsjwzh.widget.text.ReadMoreTextView.java", "BodyUseAPI": [], "Fixed commit": "da1cb109460713d1ae8eaed106d1cf0e6292d886", "Url": "https://api.github.com/repos/lsjwzh/FastTextView", "Date": "2018-10-09T06:56:39Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasEmptySearchFields) { factory.disablePaging(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/9121/buggy-version/structr-core.src.main.java.org.structr.core.graph.search.SearchCommand.java", "BodyUseAPI": [], "Fixed commit": "f54db0208a0ffbf81ef1628c1b0db1420383ec26", "Url": "https://api.github.com/repos/ckramp/structr", "Date": "2018-01-17T14:03:57Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (uri == null) { importEcarFile(intent); }else if (cordova.hasPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE)) { importEcarFile(intent); }else { importingInProgress = true; displaySplashScreen(); cordova.requestPermission(this, 100, Manifest.permission.WRITE_EXTERNAL_STORAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5202/buggy-version/src.android.org.sunbird.SplashScreen.java", "BodyUseAPI": [], "Fixed commit": "07bdc88e9e72e8632df7ce3118db359ab34e3ab6", "Url": "https://api.github.com/repos/ankur01oct/cordova-plugin-sunbirdsplash", "Date": "2018-10-26T10:40:26Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.viewModel.contentRecyclerViewAdapter.isAllSelected()) { this.textViewSelectOrDeselectAll.setText(R.string.text_deselect_all); }else { this.textViewSelectOrDeselectAll.setText(R.string.text_select_all); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/906/buggy-version/app.src.main.java.de.juliusawen.coastercreditcounter.presentation.activities.elements.PickElementsActivity.java", "BodyUseAPI": [], "Fixed commit": "b44c9cd2aadb532b7f7cce290afb8c56ddde38ad", "Url": "https://api.github.com/repos/JuliusAwen/CoasterCreditCounter", "Date": "2018-10-09T16:13:02Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.zxing.Result.getResultPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((points.length) > 2) { pos = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8331/buggy-version/qrlibrary.src.main.java.com.sunyy.qrcode.mylibrary.DecodeHandler.java", "BodyUseAPI": [], "Fixed commit": "f24a69e3a5a9f1d4bb21cd15dec9bb2ac180696c", "Url": "https://api.github.com/repos/sunyangyang/QRCode", "Date": "2018-02-28T10:10:06Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isDelegatable()) { delegationType.getPermission().add(toPermission(p.getPermissionCode(), p.getPermissionDescription())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/2311/buggy-version/bemyndigelsesservice.src.main.java.dk.bemyndigelsesregister.bemyndigelsesservice.server.dao.ServiceTypeMapperImpl_20170801.java", "BodyUseAPI": ["dk.bemyndigelsesregister.bemyndigelsesservice.server.dao.ServiceTypeMapperImpl_20170801.toPermission(p.getPermissionCode(),p.getPermissionDescription())", "Metadata.DelegatablePermission.getPermissionCode()", "Metadata.DelegatablePermission.getPermissionDescription()", "delegationType.getPermission().add(dk.nsi.bemyndigelse._2017._08._01.SystemPermission)"], "Fixed commit": "9af22f6657258fb397f9eb3d70b84cbe11d10270", "Url": "https://api.github.com/repos/trifork/bemyndigelsesregister", "Date": "2018-04-18T13:40:08Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextInt(int)", "java.util.Random.nextInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fish.add(new model.Fish(w, l))) { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/6073/buggy-version/src.main.java.model.FishingShack.java", "BodyUseAPI": [], "Fixed commit": "907fa18ffef6e00533a21bad87d46cfa7486df4d", "Url": "https://api.github.com/repos/jpyneni3/Civilization_Game", "Date": "2016-10-25T21:20:17Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tregression.io.RegressionRetriever.getRelNode(java.util.List<microbat.model.trace.TraceNode>,java.sql.ResultSet,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (loopParent != null) { loopParent.addLoopChild(step); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1398/buggy-version/tregression.src.main.tregression.io.RegressionRetriever.java", "BodyUseAPI": ["microbat.model.trace.TraceNode.addLoopChild(microbat.model.trace.TraceNode)"], "Fixed commit": "c02bd36e807bd660c1fe5bde404a54c2317bc272", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2018-01-10T09:42:35Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tregression.io.RegressionRetriever.getRelNode(java.util.List<microbat.model.trace.TraceNode>,java.sql.ResultSet,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (controlDominator != null) { controlDominator.addControlDominatee(step); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1398/buggy-version/tregression.src.main.tregression.io.RegressionRetriever.java", "BodyUseAPI": ["microbat.model.trace.TraceNode.addControlDominatee(microbat.model.trace.TraceNode)"], "Fixed commit": "c02bd36e807bd660c1fe5bde404a54c2317bc272", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2018-01-10T09:42:35Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tregression.io.RegressionRetriever.getRelNode(java.util.List<microbat.model.trace.TraceNode>,java.sql.ResultSet,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (stepOver != null) { stepOver.setStepOverPrevious(step); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1398/buggy-version/tregression.src.main.tregression.io.RegressionRetriever.java", "BodyUseAPI": ["microbat.model.trace.TraceNode.setStepOverPrevious(microbat.model.trace.TraceNode)"], "Fixed commit": "c02bd36e807bd660c1fe5bde404a54c2317bc272", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2018-01-10T09:42:35Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tregression.io.RegressionRetriever.getRelNode(java.util.List<microbat.model.trace.TraceNode>,java.sql.ResultSet,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (stepIn != null) { stepIn.setStepInPrevious(step); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1398/buggy-version/tregression.src.main.tregression.io.RegressionRetriever.java", "BodyUseAPI": ["microbat.model.trace.TraceNode.setStepInPrevious(microbat.model.trace.TraceNode)"], "Fixed commit": "c02bd36e807bd660c1fe5bde404a54c2317bc272", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2018-01-10T09:42:35Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tregression.io.RegressionRetriever.getRelNode(java.util.List<microbat.model.trace.TraceNode>,java.sql.ResultSet,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (invocationParent != null) { invocationParent.addInvocationChild(step); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1398/buggy-version/tregression.src.main.tregression.io.RegressionRetriever.java", "BodyUseAPI": ["microbat.model.trace.TraceNode.addInvocationChild(microbat.model.trace.TraceNode)"], "Fixed commit": "c02bd36e807bd660c1fe5bde404a54c2317bc272", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2018-01-10T09:42:35Z"},
{"Line": "=>1271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n < 1) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8386/buggy-version/hutool-core.src.main.java.cn.hutool.core.util.NumberUtil.java", "BodyUseAPI": [], "Fixed commit": "aba489523dda4128177a4937cea839b53f65a2cc", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-03-03T16:07:33Z"},
{"Line": "=>1320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cn.hutool.core.util.StrUtil.isEmpty(str)) { return cn.hutool.core.util.StrUtil.str(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8386/buggy-version/hutool-core.src.main.java.cn.hutool.core.util.StrUtil.java", "BodyUseAPI": ["cn.hutool.core.util.StrUtil.str(java.lang.CharSequence)"], "Fixed commit": "aba489523dda4128177a4937cea839b53f65a2cc", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-03-03T16:07:33Z"},
{"Line": "=>2234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cn.hutool.core.util.StrUtil.isEmpty(str)) { return cn.hutool.core.util.StrUtil.str(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8386/buggy-version/hutool-core.src.main.java.cn.hutool.core.util.StrUtil.java", "BodyUseAPI": ["cn.hutool.core.util.StrUtil.str(java.lang.CharSequence)"], "Fixed commit": "aba489523dda4128177a4937cea839b53f65a2cc", "Url": "https://api.github.com/repos/looly/hutool", "Date": "2018-03-03T16:07:33Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ps != null) { ps.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/841/buggy-version/src.main.java.sg.edu.sutd.bank.webapp.service.TransactionCodesDAOImp.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()"], "Fixed commit": "8d753e50b89a82eaea1f0d6a33b8347dd08a6157", "Url": "https://api.github.com/repos/mqf20/bankwebapp", "Date": "2018-04-21T14:33:15Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ps != null) { ps.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/841/buggy-version/src.main.java.sg.edu.sutd.bank.webapp.service.ClientTransactionDAOImpl.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()"], "Fixed commit": "8d753e50b89a82eaea1f0d6a33b8347dd08a6157", "Url": "https://api.github.com/repos/mqf20/bankwebapp", "Date": "2018-04-21T14:33:15Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ps != null) { ps.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/841/buggy-version/src.main.java.sg.edu.sutd.bank.webapp.service.ClientInfoDAOImpl.java", "BodyUseAPI": ["java.sql.PreparedStatement.close()"], "Fixed commit": "8d753e50b89a82eaea1f0d6a33b8347dd08a6157", "Url": "https://api.github.com/repos/mqf20/bankwebapp", "Date": "2018-04-21T14:33:15Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.resteasy.core.ResourceMethodInvoker.getMethod()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (method.isAnnotationPresent(javax.annotation.security.PermitAll.class)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/4254/buggy-version/src.main.java.com.cyf.rest.interceptor.JwtRequestFilter.java", "BodyUseAPI": [], "Fixed commit": "52fb0e695c94ae739847a86e2d8bc648903f5931", "Url": "https://api.github.com/repos/chenyfxy/resteasy-security", "Date": "2018-07-13T09:07:44Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["top.guhanjie.wine.service.OrderService.getOrderById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (Order.SourceTypeEnum.RUSH.code().equalsIgnoreCase(order.getSourceType())) { orderService.finishOrderPay(order); java.util.Map<java.lang.String, java.lang.Object> res = success(); res.put(\"rush\", \"true\"); return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/8397/buggy-version/src.main.java.top.guhanjie.wine.controller.OrderController.java", "BodyUseAPI": ["top.guhanjie.wine.service.OrderService.finishOrderPay(top.guhanjie.wine.model.Order)"], "Fixed commit": "c0836ef628f6a9a8dd40882e63bac1da882548de", "Url": "https://api.github.com/repos/guhanjie/wine", "Date": "2018-05-06T14:00:48Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (frag == null) { initializeSearchFragmentAndSearchEpisodes(query); return true; }else { if (!(query.equals(\"\"))) { searchChannelQuery = query; channelSearchFragment.search(searchChannelQuery); resetSearch(); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/1349/buggy-version/app.src.main.java.appricottsoftware.clarity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "73d46003539c44357b5abfcda2bcd226d0def90d", "Url": "https://api.github.com/repos/AppricottSoftware/Clarity", "Date": "2018-03-11T02:55:36Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (bitmap != null) { android.opengl.GLUtils.texImage2D(GLES20.GL_TEXTURE_2D, 0, bitmap, 0); bitmap.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V160/5367/buggy-version/filter.src.main.java.vip.frendy.fliter.utils.OpenGlUtils.java", "BodyUseAPI": ["android.opengl.GLUtils.texImage2D(GLES20.GL_TEXTURE_2D,int,android.graphics.Bitmap,int)", "android.graphics.Bitmap.recycle()"], "Fixed commit": "78f1f99a1fafb770184de663d7a4226a6c273b14", "Url": "https://api.github.com/repos/hzhilt/KCamera", "Date": "2018-09-04T08:59:53Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkRed()) { return robotComponents.LineFollower.Status.INTERRUPTED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7640/buggy-version/legoMS3_vs2.src.robotComponents.LineFollower.java", "BodyUseAPI": [], "Fixed commit": "285619ad2006bedb3550c2d9f50632960d391e2d", "Url": "https://api.github.com/repos/tungnx94/LegoMS", "Date": "2018-01-08T09:12:10Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expression instanceof com.exxeta.iss.sonar.esql.tree.expression.LiteralTree) { target = ((com.exxeta.iss.sonar.esql.tree.expression.LiteralTree) (expression)).value().replace(\"'\", \"\"); }else if (expression instanceof com.exxeta.iss.sonar.esql.tree.impl.expression.PrefixExpressionTreeImpl) { com.exxeta.iss.sonar.esql.tree.impl.expression.PrefixExpressionTreeImpl prefixEx = ((com.exxeta.iss.sonar.esql.tree.impl.expression.PrefixExpressionTreeImpl) (expression)); target = (prefixEx.operator().text()) + (prefixEx.expression().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6908/buggy-version/esql-checks.src.main.java.com.exxeta.iss.sonar.esql.check.PropagateConsistencyCheck.java", "BodyUseAPI": [], "Fixed commit": "091dfaae9084b153796f53aa896267f3745fb1ed", "Url": "https://api.github.com/repos/EXXETA/sonar-esql-plugin", "Date": "2018-01-23T06:27:30Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((motionEvent.getAction()) == (android.view.MotionEvent.ACTION_UP)) || ((motionEvent.getAction()) == (android.view.MotionEvent.ACTION_CANCEL))) { mMove = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/142/buggy-version/library.src.main.java.com.adgvcxz.cardlayoutmanager.CardSnapHelper.java", "BodyUseAPI": [], "Fixed commit": "cbb108170135a5bb39088c127d6574e7f82fa186", "Url": "https://api.github.com/repos/adgvcxz/CardLayoutManager", "Date": "2018-08-01T07:54:26Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choice == 5) { java.lang.System.out.println(\"+----------------------------+\"); java.lang.System.out.println(\"| Display Schedule |\"); java.lang.System.out.println(\"+----------------------------+\"); }else if (choice == 6) { java.lang.System.out.println(\"+----------------------------+\"); java.lang.System.out.println(\"| Display Finished Subjects |\"); java.lang.System.out.println(\"+----------------------------+\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2275/buggy-version/Enrollment.src.studentrecords.StudentRecords.java", "BodyUseAPI": [], "Fixed commit": "008b2e960ab9815c80840f2d52dcef2b92153ad4", "Url": "https://api.github.com/repos/LostWell/DBASE-LAB", "Date": "2018-02-01T06:24:06Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) res = res.substring(0, 8);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2939/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "6814d5c7fe4db46716c14477cdeb1c02d29b6936", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-HoganZz", "Date": "2018-10-04T19:18:16Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (similarNodes.isEmpty()) { ((de.ovgu.cide.fstgen.ast.FSTTerminal) (conflictNode)).setBody(oppositeSideNodeContent); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/318/buggy-version/src.main.java.br.ufpe.cin.mergers.handlers.singlerenaming.MergeMethodsSingleRenamingHandler.java", "BodyUseAPI": [], "Fixed commit": "50ba9fe6f5de451a68b322548f48ef581effedab", "Url": "https://api.github.com/repos/gaabs/jFSTMerge", "Date": "2018-10-20T22:09:51Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadinstitute.hellbender.tools.walkers.mutect.FeatureContext.getValues(MTAC.germlineResource,org.broadinstitute.hellbender.tools.walkers.mutect.SimpleInterval)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(germline.isEmpty())) { final java.util.List<java.lang.Double> germlineAlleleFrequencies = germline.get(0).getAttributeAsDoubleList(VCFConstants.ALLELE_FREQUENCY_KEY, 0.0); if ((!(germlineAlleleFrequencies.isEmpty())) && ((germlineAlleleFrequencies.get(0)) > (MTAC.maxPopulationAlleleFrequency))) { return new org.broadinstitute.hellbender.utils.activityprofile.ActivityProfileState(refInterval, 0.0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8889/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.walkers.mutect.Mutect2Engine.java", "BodyUseAPI": ["germline.get(0).getAttributeAsDoubleList(VCFConstants.ALLELE_FREQUENCY_KEY,double)", "java.util.List<htsjdk.variant.variantcontext.VariantContext>.get(int)"], "Fixed commit": "274451f2c97bfa39d040114ea68fa917d08a17e9", "Url": "https://api.github.com/repos/bioinformagik/gatk", "Date": "2018-04-04T18:22:47Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (AbbrDictionary.containsKey(lookup)) { return AbbrDictionary.get(lookup); }else { return lookup; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5273/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.grandexchange.GrandExchangeSearchAbbreviations.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "03c4298b72a00891f5f60a81d0499b2288235e11", "Url": "https://api.github.com/repos/jeffreyjhaywood/runelite", "Date": "2018-10-24T00:55:49Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((finalList.get(((finalList.size()) - 1)).type) != (T_DELI)) finalList.add(delimToken);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6014/buggy-version/src.main.java.wikiparser.tokens.TokenList.java", "BodyUseAPI": ["java.util.List<wikiparser.tokens.Token>.add(wikiparser.tokens.Token)"], "Fixed commit": "328031edb1afa325e50e31ec147fdc133bb76a99", "Url": "https://api.github.com/repos/HabibSlim/WikiParser", "Date": "2018-05-11T10:04:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tokens.isEmpty()) return finalList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6014/buggy-version/src.main.java.wikiparser.tokens.TokenList.java", "BodyUseAPI": [], "Fixed commit": "328031edb1afa325e50e31ec147fdc133bb76a99", "Url": "https://api.github.com/repos/HabibSlim/WikiParser", "Date": "2018-05-11T10:04:48Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jaffa.api.ConfigApiCore.log.isDebugEnabled()) { org.jaffa.api.ConfigApiCore.log.debug((\"Unable to find \" + resourceFilename)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1567/buggy-version/jaffa-core.source.java.org.jaffa.api.ConfigApiCore.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "0d941c41cae506f34bc3d19fed1225a595fe4945", "Url": "https://api.github.com/repos/jaffa-projects/jaffa-framework", "Date": "2018-07-27T18:33:04Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.memoranda.util.Configuration.get(\"ON_MINIMIZE\").toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (min.equals(\"normal\")) { App.frame.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7004/buggy-version/src.main.java.memoranda.ui.AppFrame.java", "BodyUseAPI": [], "Fixed commit": "43aac8df8397faa00839839c2773ae31890da560", "Url": "https://api.github.com/repos/ser316asu/SER316-Gera-SPRING18", "Date": "2018-01-30T21:33:54Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (av != null) { if ((this.next) != null) { av.next = ((org.w3c.tidy.AttVal) (this.next.clone())); } if ((this.asp) != null) { av.asp = this.asp.cloneNode(false); } if ((this.php) != null) { av.php = this.php.cloneNode(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7496/buggy-version/src.main.java.org.w3c.tidy.AttVal.java", "BodyUseAPI": [], "Fixed commit": "6a7e751125795e02afdd78be84e6d229e4c9b2f0", "Url": "https://api.github.com/repos/jtidy/jtidy", "Date": "2018-02-25T04:58:04Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == \"\") result = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3970/buggy-version/src.classes.Formatter.java", "BodyUseAPI": [], "Fixed commit": "0caa36f7669823d69b6c896971c4cc144805e84a", "Url": "https://api.github.com/repos/Aaal-E/algebra-for-security-poly", "Date": "2018-10-02T13:43:12Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userInput.length()) < 1) { return false; }else if (java.lang.Character.isLetter(userInput.charAt(((userInput.length()) - 1)))) { return false; }else { try { java.lang.Double.parseDouble(userInput); return true; } catch (java.lang.NumberFormatException e) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4611/buggy-version/src.main.java.edu.ithaca.Group6.UIImpl.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.charAt(int)", "java.lang.Character.isLetter(char)"], "Fixed commit": "88b610cd8c926eea856b32f6769ee111271b8fc7", "Url": "https://api.github.com/repos/ColtonGarelli/Architecture-Advisor3000", "Date": "2018-04-07T21:06:21Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof com.mongodb.embedded.client.MongoClientEmbeddedException) { return ((com.mongodb.embedded.client.MongoClientEmbeddedException) (t)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9433/buggy-version/driver-embedded.src.main.com.mongodb.embedded.client.MongoDBCAPIHelper.java", "BodyUseAPI": [], "Fixed commit": "05f4465cd1a89b64a79a70a6f60bf5f33fa746cf", "Url": "https://api.github.com/repos/rozza/mongo-java-driver", "Date": "2018-05-10T15:16:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((tenderTasks != null) && (!(tenderTasks.isEmpty()))) { android.util.Log.v(kg.kloop.android.openbudgetapp.activities.TenderActivity.TAG, (\"tasks: \" + (tenderTasks.get(0).getTenderId()))); updateTaskViews(tenderTasks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5212/buggy-version/app.src.main.java.kg.kloop.android.openbudgetapp.activities.TenderActivity.java", "BodyUseAPI": ["java.util.ArrayList<kg.kloop.android.openbudgetapp.objects.TenderTask>.get(int)", "android.util.Log.v(java.lang.String,(\"tasks: \" + (tenderTasks.get(0).getTenderId())))", "tenderTasks.get(0).getTenderId()", "kg.kloop.android.openbudgetapp.activities.TenderActivity.1.updateTaskViews(java.util.ArrayList<kg.kloop.android.openbudgetapp.objects.TenderTask>)"], "Fixed commit": "8cd37af45bb4fe985733eaa60a08e23ba632ac35", "Url": "https://api.github.com/repos/AlexWalker28/OpenBudgetApp", "Date": "2018-10-17T16:07:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((tenderTaskWorks != null) && (!(tenderTaskWorks.isEmpty()))) { android.util.Log.v(kg.kloop.android.openbudgetapp.activities.TenderActivity.TAG, (\"works: \" + (tenderTaskWorks.get(0).getId()))); showTenderWork(tenderTaskWorks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5212/buggy-version/app.src.main.java.kg.kloop.android.openbudgetapp.activities.TenderActivity.java", "BodyUseAPI": ["tenderTaskWorks.get(0).getId()", "android.util.Log.v(java.lang.String,(\"works: \" + (tenderTaskWorks.get(0).getId())))", "java.util.ArrayList<kg.kloop.android.openbudgetapp.objects.TenderTaskWork>.get(int)", "kg.kloop.android.openbudgetapp.activities.TenderActivity.2.showTenderWork(java.util.ArrayList<kg.kloop.android.openbudgetapp.objects.TenderTaskWork>)"], "Fixed commit": "8cd37af45bb4fe985733eaa60a08e23ba632ac35", "Url": "https://api.github.com/repos/AlexWalker28/OpenBudgetApp", "Date": "2018-10-17T16:07:36Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 1) { java.lang.System.out.println(((\"The process took \" + counter) + \" to reach 1.\")); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/551/buggy-version/src.com.company.Hailstone.java", "BodyUseAPI": [], "Fixed commit": "e53b974597590f92b1a10487ff2c92e0b82128f8", "Url": "https://api.github.com/repos/riceplant/Assignment2RealJava", "Date": "2018-06-29T07:32:50Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (low >= high) { return new seedu.address.logic.commands.CommandResult(seedu.address.logic.commands.ExportCommand.MESSAGE_RANGE_ERROR); }else { try { exportRange(low, high, tag); } catch (seedu.address.model.person.exceptions.DuplicatePersonException e) { return new seedu.address.logic.commands.CommandResult(seedu.address.logic.commands.ExportCommand.MESSAGE_FAIL); } catch (java.lang.IndexOutOfBoundsException e) { return new seedu.address.logic.commands.CommandResult(seedu.address.logic.commands.ExportCommand.MESSAGE_OUT_OF_BOUNDS); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5696/buggy-version/src.main.java.seedu.address.logic.commands.ExportCommand.java", "BodyUseAPI": ["seedu.address.logic.commands.ExportCommand.exportRange(int,int,seedu.address.model.tag.Tag)"], "Fixed commit": "85ea23f05458fdf97b1e4c81313109a32153cde5", "Url": "https://api.github.com/repos/shanmu9898/main", "Date": "2018-03-18T15:21:28Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(currentXBoostSpeed)) < 0.5) { currentXBoostSpeed = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6076/buggy-version/src.main.java.com.ocelot.mod.game.core.entity.EntityItem.java", "BodyUseAPI": [], "Fixed commit": "886f4679b14ddebadbadf9ef3496c71cf4963201", "Url": "https://api.github.com/repos/Ocelot5836/SuperMarioWorldApplication", "Date": "2018-05-23T04:21:27Z"},
{"Line": "=>1770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (service != null) { org.talend.repository.model.IProxyRepositoryFactory factory = service.getProxyRepositoryFactory(); if (factory != null) { java.util.List<org.talend.core.model.properties.ProjectReference> references = org.talend.repository.ProjectManager.getInstance().getCurrentProject().getProjectReferenceList(true); for (org.talend.core.model.properties.ProjectReference ref : references) { toReturn.addAll(factory.getAll(new org.talend.core.model.general.Project(ref.getReferencedProject()), beansType)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9634/buggy-version/main.plugins.org.talend.repository.src.main.java.org.talend.repository.ui.wizards.exportjob.scriptsmanager.JobJavaScriptsManager.java", "BodyUseAPI": ["org.talend.repository.model.IProxyRepositoryService.getProxyRepositoryFactory()"], "Fixed commit": "ab2b3ae3df1935551e604c38d5d747385129015d", "Url": "https://api.github.com/repos/yanbasic/tdi-studio-se", "Date": "2018-04-11T09:50:22Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connection.getMetaData().getURL().startsWith(\"jdbc:postgresql:\")) { connection.setAutoCommit(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7554/buggy-version/src.main.java.r2rml.engine.R2RMLProcessor.java", "BodyUseAPI": ["java.sql.Connection.setAutoCommit(boolean)"], "Fixed commit": "34ae633d65fdc68f7a583ae02ed8e1a2ad4a2999", "Url": "https://api.github.com/repos/amalic/r2rml", "Date": "2018-09-17T21:26:39Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gitLabUserId == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1698/buggy-version/src.main.java.io.choerodon.devops.infra.persistence.impl.UserAttrRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "d0eaff746e0686046d1c7bc7cb04d04f146b0e3c", "Url": "https://api.github.com/repos/choerodon/devops-service", "Date": "2018-07-19T11:42:53Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (consumedParamIndex >= (parameters.length)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6093/buggy-version/src.main.java.com.cosium.vet.log.DefaultLogger.java", "BodyUseAPI": [], "Fixed commit": "e445ee90bcf8e140dc6d1e86ae656a8777e9b2fd", "Url": "https://api.github.com/repos/Cosium/vet", "Date": "2018-05-25T08:30:23Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index >= 0) { Main.solution[index] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1691/buggy-version/11.Subsets.java", "BodyUseAPI": [], "Fixed commit": "668bbcbde4e07f20ff11fe01e39a0b5a8a78749c", "Url": "https://api.github.com/repos/VTU-CS-LAB/Design-and-Analysis-of-Algorithm-Laboratory", "Date": "2018-05-20T05:25:25Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orderBookItem.getSize().signum()) != 0) { asks.put(orderBookItem.getPrice(), orderBookItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8834/buggy-version/xchange-hitbtc.src.main.java.info.bitrich.xchangestream.hitbtc.dto.HitbtcWebSocketOrderBook.java", "BodyUseAPI": ["java.util.Map<java.math.BigDecimal, org.knowm.xchange.hitbtc.v2.dto.HitbtcOrderLimit>.put(orderBookItem.getPrice(),org.knowm.xchange.hitbtc.v2.dto.HitbtcOrderLimit)", "org.knowm.xchange.hitbtc.v2.dto.HitbtcOrderLimit.getPrice()"], "Fixed commit": "b1c09371a4bf3464b16fc52b4c8ee4218c5514fc", "Url": "https://api.github.com/repos/pchertalev/xchange-stream", "Date": "2018-04-16T11:29:47Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orderBookItem.getSize().signum()) != 0) { bids.put(orderBookItem.getPrice(), orderBookItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8834/buggy-version/xchange-hitbtc.src.main.java.info.bitrich.xchangestream.hitbtc.dto.HitbtcWebSocketOrderBook.java", "BodyUseAPI": ["java.util.Map<java.math.BigDecimal, org.knowm.xchange.hitbtc.v2.dto.HitbtcOrderLimit>.put(orderBookItem.getPrice(),org.knowm.xchange.hitbtc.v2.dto.HitbtcOrderLimit)", "org.knowm.xchange.hitbtc.v2.dto.HitbtcOrderLimit.getPrice()"], "Fixed commit": "b1c09371a4bf3464b16fc52b4c8ee4218c5514fc", "Url": "https://api.github.com/repos/pchertalev/xchange-stream", "Date": "2018-04-16T11:29:47Z"},
{"Line": "=>722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.util.BytesRef.utf8ToString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(fieldValue)) { addTerm(fieldChars, fieldValue, fieldBuilder, termBuilder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9185/buggy-version/solr6.x.src.main.java.org.apache.solr.handler.component.QueryAutoFilteringComponent.java", "BodyUseAPI": ["org.apache.solr.handler.component.QueryAutoFilteringComponent.addTerm(org.apache.lucene.util.CharsRef,java.lang.String,SynonymMap.Builder,SynonymMap.Builder)"], "Fixed commit": "df9f2cd4fc5208797ad4b411ed43f85048f10b03", "Url": "https://api.github.com/repos/GastonGonzalez/query-autofiltering-component", "Date": "2018-10-15T14:20:55Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.cerc.jdb.core.Record.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val instanceof java.math.BigInteger) field.setLong(obj, ((java.math.BigInteger) (val)).longValue()); else field.setLong(obj, ((java.lang.Long) (val)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6031/buggy-version/src.main.java.cn.cerc.jdb.dao.DaoUtil.java", "BodyUseAPI": [], "Fixed commit": "ce958be36580328402250572cd5c1434795d436c", "Url": "https://api.github.com/repos/cn-cerc/summer-db", "Date": "2018-10-28T06:28:56Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getAttachments()) != null) { for (java.lang.String path : request.getAttachments()) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4667/buggy-version/src.com.credit.system.dao.impl.RequestDaoImpl.java", "BodyUseAPI": ["com.credit.system.entity.Request.getAttachments()"], "Fixed commit": "8b29e4f683c7b5497cc82e0f2c64fa83202a5ab5", "Url": "https://api.github.com/repos/IvanTkachev/TP_Lab_Final", "Date": "2018-05-27T20:38:02Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kategorie.equals(\"Buecher\")) { textFieldRegisseur.setText(\"abx\"); textFieldFilmstudio.setText(\"xyz\"); }else if (kategorie.equals(\"Videospiele\")) { textFieldFilmstudio.setText(\"xyz\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9172/buggy-version/src.GUI.GUIMedienHinzufuegen.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "1abf62f8e734ebe4456b241a28d256e4008f3681", "Url": "https://api.github.com/repos/Skeeve4711/Medienverleih", "Date": "2018-01-24T06:45:10Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rowdy.nodes.expression.Expression.get(rowdy.nodes.expression.EXPRESSIONS,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exprs == null) { return runner.fetch(leftValue, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5444/buggy-version/src.rowdy.nodes.expression.Expression.java", "BodyUseAPI": [], "Fixed commit": "5f0eb82a437d2590e7e5161914a7d941856d1cef", "Url": "https://api.github.com/repos/redferret/rowdy", "Date": "2018-02-13T20:04:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (picture != null) { this.picture = picture; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8722/buggy-version/src.main.java.data.Person.java", "BodyUseAPI": [], "Fixed commit": "3da2b2ad5752e5d767e6b6b15a1cfe52b000b08b", "Url": "https://api.github.com/repos/PeterEdtu/DTU_Guide_group9", "Date": "2018-05-08T19:47:17Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((startTime != null) && (endTime != null)) { extCondition.append((((\" time >= \" + startTime) + \" and time <= \") + endTime)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/884/buggy-version/src.main.java.com.track.store.dog.manager.RecordManager.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "4d05077d2f8ba5db9b98d3cf6bd437f9a525f5a3", "Url": "https://api.github.com/repos/wlwx520/paint-store", "Date": "2018-02-08T14:24:18Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (univalent != null) { template.setUnivalent(univalent); condition.add(\"univalent\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/884/buggy-version/src.main.java.com.track.store.dog.manager.RecordManager.java", "BodyUseAPI": ["com.track.store.dog.bean.Record.setUnivalent(java.lang.Double)"], "Fixed commit": "4d05077d2f8ba5db9b98d3cf6bd437f9a525f5a3", "Url": "https://api.github.com/repos/wlwx520/paint-store", "Date": "2018-02-08T14:24:18Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (count != null) { template.setCount(count); condition.add(\"count\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/884/buggy-version/src.main.java.com.track.store.dog.manager.RecordManager.java", "BodyUseAPI": ["com.track.store.dog.bean.Record.setCount(java.lang.Double)"], "Fixed commit": "4d05077d2f8ba5db9b98d3cf6bd437f9a525f5a3", "Url": "https://api.github.com/repos/wlwx520/paint-store", "Date": "2018-02-08T14:24:18Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (partner != null) { template.setPartner(partner); condition.add(\"partner\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/884/buggy-version/src.main.java.com.track.store.dog.manager.RecordManager.java", "BodyUseAPI": ["com.track.store.dog.bean.Record.setPartner(java.lang.String)"], "Fixed commit": "4d05077d2f8ba5db9b98d3cf6bd437f9a525f5a3", "Url": "https://api.github.com/repos/wlwx520/paint-store", "Date": "2018-02-08T14:24:18Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (inOrOut != null) { template.setInOrOut(inOrOut); condition.add(\"inOrOut\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/884/buggy-version/src.main.java.com.track.store.dog.manager.RecordManager.java", "BodyUseAPI": ["com.track.store.dog.bean.Record.setInOrOut(java.lang.String)"], "Fixed commit": "4d05077d2f8ba5db9b98d3cf6bd437f9a525f5a3", "Url": "https://api.github.com/repos/wlwx520/paint-store", "Date": "2018-02-08T14:24:18Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (goods != null) { template.setGoods(goods); condition.add(\"goods\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/884/buggy-version/src.main.java.com.track.store.dog.manager.RecordManager.java", "BodyUseAPI": ["com.track.store.dog.bean.Record.setGoods(java.lang.String)"], "Fixed commit": "4d05077d2f8ba5db9b98d3cf6bd437f9a525f5a3", "Url": "https://api.github.com/repos/wlwx520/paint-store", "Date": "2018-02-08T14:24:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (freight != null) { template.setFreight(freight); condition.add(\"freight\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/884/buggy-version/src.main.java.com.track.store.dog.manager.RecordManager.java", "BodyUseAPI": ["com.track.store.dog.bean.Record.setFreight(java.lang.Double)"], "Fixed commit": "4d05077d2f8ba5db9b98d3cf6bd437f9a525f5a3", "Url": "https://api.github.com/repos/wlwx520/paint-store", "Date": "2018-02-08T14:24:18Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset >= (stops.size())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5870/buggy-version/SwarzedzkiBus.app.src.main.java.com.wblachowski.swarzedzkibus.adapters.FavouritesAdapter.java", "BodyUseAPI": [], "Fixed commit": "52a279f9728a4386af820d7c55c8e4a0cb03dd8f", "Url": "https://api.github.com/repos/wblachowski/SwarzedzkiBusV2", "Date": "2018-03-27T09:39:33Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { com.facebook.stetho.Stetho.initializeWithDefaults(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4117/buggy-version/demo.src.main.java.com.midtrans.demo.DemoApp.java", "BodyUseAPI": [], "Fixed commit": "1f63dfe443a0d51c21971fc910c8f8a97116d311", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2018-03-19T12:11:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((source.getAppointment()) == null) { appointment = null; }else { appointment = source.getAppointment().value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8377/buggy-version/src.main.java.seedu.address.storage.XmlAdaptedPerson.java", "BodyUseAPI": [], "Fixed commit": "3ecaf14afc9287585310f21ea00f99d571eb1832", "Url": "https://api.github.com/repos/limzk1994/main", "Date": "2018-03-27T18:34:12Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.yanxiu.gphone.faceshowadmin_android.db.SpManager.getCurrentClassInfo()) == null) { handler.sendEmptyMessageDelayed(com.yanxiu.gphone.faceshowadmin_android.MainActivity.GET_RED_POINT, 10000); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5243/buggy-version/app.src.main.java.com.yanxiu.gphone.faceshowadmin_android.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "756850945bf0d33b7668d971b32661d5fcc37bee", "Url": "https://api.github.com/repos/caileiYanxiu/FaceShowAdmin_Android", "Date": "2018-05-03T08:28:40Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInPlainMode(xi, yi))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6817/buggy-version/src.java.org.stathissideris.ascii2image.text.TextGrid.java", "BodyUseAPI": [], "Fixed commit": "980c218888328333bfd2c3f1ceb5a0c07ba1d736", "Url": "https://api.github.com/repos/dakusui/ditaa", "Date": "2018-10-28T05:07:09Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vast == 1) { java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2955/buggy-version/src.kuningaskuntaSimulaatio.Kuningas.java", "BodyUseAPI": [], "Fixed commit": "156063a7e68502225a2b64f7d58c4c0d3efc91da", "Url": "https://api.github.com/repos/Santtinen/Kuningaskunta-Simulaatio", "Date": "2018-02-21T14:01:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operationFieldPathList.size()) == 0) return ((org.apache.beam.sdk.values.PCollection<org.apache.avro.generic.IndexedRecord>) ((org.apache.beam.sdk.values.PCollection) (indexedRecordPCollection.getPipeline().apply(org.apache.beam.sdk.transforms.Create.empty(org.apache.beam.sdk.coders.AvroCoder.of(org.talend.daikon.avro.AvroUtils.createEmptySchema()))))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9705/buggy-version/components.components-processing.processing-runtime.src.main.java.org.talend.components.processing.runtime.aggregate.AggregateRuntime.java", "BodyUseAPI": [], "Fixed commit": "6d965774106ffb16536da2762cdab3be570136d7", "Url": "https://api.github.com/repos/Talend/components", "Date": "2018-03-14T10:56:21Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (potato.contains(CTMCtoACTMC.get(i))) { soln[i] = 1; }else { soln[i] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3293/buggy-version/prism.src.explicit.ACTMCPotatoData.java", "BodyUseAPI": [], "Fixed commit": "c879f35e983abd9bf2ef953f9410d2a428c81dab", "Url": "https://api.github.com/repos/VojtechRehak/prism-gsmp", "Date": "2018-01-20T23:11:44Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["htsjdk.samtools.SAMRecord.getReadBases()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nowReadPos0 >= (bases.length)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3777/buggy-version/src.main.java.com.github.lindenb.jvarkit.tools.biostar.Biostar214299.java", "BodyUseAPI": [], "Fixed commit": "75eb6710cd228d26d80cbfb3c3ea8bdbcbdf6bff", "Url": "https://api.github.com/repos/lindenb/jvarkit", "Date": "2018-02-12T16:50:16Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sessionFormRequest != null) { org.springframework.beans.BeanUtils.copyProperties(((uk.gov.dft.bluebadge.webapp.la.controller.request.OrderBadgeIndexFormRequest) (sessionFormRequest)), formRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3872/buggy-version/src.main.java.uk.gov.dft.bluebadge.webapp.la.controller.OrderBadgeIndexController.java", "BodyUseAPI": [], "Fixed commit": "1850aac8a0c1c16dfaf5bbde30ff20114c75e2fd", "Url": "https://api.github.com/repos/dft-bluebadge/la-webapp", "Date": "2018-07-02T15:58:45Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameMode.equals(\"Collaborative\")) { playerFile = htmlGenerator.generatePlayerFile(players, playerTeam[i], i, turnNo, mapSize, map, players[i].isVisited); }else if (gameMode.equals(\"Single\")) { playerFile = htmlGenerator.generatePlayerFile(players, (-1), i, turnNo, mapSize, map, players[i].isVisited); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5746/buggy-version/src.main.java.Part2_Multiplayer_Game.Tressure_Finder_Game.GameEngine.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "7a7503c119dfff362b380589136ed220fc24a9d6", "Url": "https://api.github.com/repos/dillu24/CPS2002_SE_GD", "Date": "2018-04-28T17:43:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((facesContext.getViewRoot()) == null) { javax.faces.component.UIViewRoot viewRoot = new javax.faces.component.UIViewRoot(); viewRoot.setRenderKitId(\"HTML_BASIC\"); viewRoot.setViewId(\"/index.xhtml\"); facesContext.setViewRoot(viewRoot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5407/buggy-version/action.src.main.java.com.manorrock.oyena.action.ActionLifecycle.java", "BodyUseAPI": ["javax.faces.context.FacesContext.setViewRoot(javax.faces.component.UIViewRoot)"], "Fixed commit": "7fb0ddcdc3507c96a40c94ab34bf8083f29cda96", "Url": "https://api.github.com/repos/manorrock/oyena", "Date": "2018-03-26T22:45:27Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action == (Action.CREATE)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3115/buggy-version/molgenis-data-security.src.main.java.org.molgenis.data.security.owned.RowLevelSecurityRepositoryDecorator.java", "BodyUseAPI": [], "Fixed commit": "9d712aca0f2d509d8c2fabbe04edf46b17c8382f", "Url": "https://api.github.com/repos/fdlk/molgenis", "Date": "2018-04-18T11:17:01Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (database != null) { if ((((com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage) (database.getStorage().getUnderlying())).getLSN()) != null) { return new com.orientechnologies.orient.server.distributed.impl.task.OUpdateDatabaseStatusTask.OUpdateResult(((com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage) (database.getStorage().getUnderlying())).getLSN()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8567/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OUpdateDatabaseStatusTask.java", "BodyUseAPI": ["database.getStorage().getUnderlying()", "com.orientechnologies.orient.core.db.ODatabaseDocumentInternal.getStorage()", "database.getStorage().getUnderlying()", "com.orientechnologies.orient.core.db.ODatabaseDocumentInternal.getStorage()", "((com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage) (database.getStorage().getUnderlying())).getLSN()", "((com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage) (database.getStorage().getUnderlying())).getLSN()"], "Fixed commit": "8eefd5c38046ab8202d1b39e557ffca172b7229c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2018-08-17T16:03:38Z"},
{"Line": "=>1967", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((src1.substring(0, 1).equals(\"q\")) && (src2.substring(0, 1).equals(\"q\"))) { o.printf(\"\\t\\tmov\\t\\t%s, %s\\n\", temp, src2); src2 = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9861/buggy-version/Compiler.src.NASM.NASMBuilder.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "8eac1f1c65d9a9261295d8783e50180d5e865e16", "Url": "https://api.github.com/repos/Ldhlwh/Compiler", "Date": "2018-06-08T11:19:50Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user.getUsername().equals(com.chatapp.threadripper.utils.Preferences.getCurrentUser().getUsername())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7966/buggy-version/app.src.main.java.com.chatapp.threadripper.utils.ModelUtils.java", "BodyUseAPI": [], "Fixed commit": "d17b9f5b1525ea6b3233ff2258321b26736bb9d5", "Url": "https://api.github.com/repos/BetaVN/Threadripper_ChatApp", "Date": "2018-10-27T17:12:04Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.commerce.organization.service.impl.CommerceOrganizationLocalServiceImpl.fetchGroup(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (group == null) { return new com.liferay.portal.kernel.search.BaseModelSearchResult(java.util.Collections.<com.liferay.portal.kernel.model.Organization>emptyList(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3960/buggy-version/commerce-organization-service.src.main.java.com.liferay.commerce.organization.service.impl.CommerceOrganizationLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "5e499ed660e7a235ddc4d41b23938a06ee0f4c9a", "Url": "https://api.github.com/repos/Commando18/com-liferay-commerce", "Date": "2018-08-31T10:25:26Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (id == null) { return \"redirect:/incidences/list\"; }else { asw.inci_manager.inci_manager_gest.entities.Incidence incidence = incidenceService.getIncidenceById(id); model.addAttribute(\"incidence\", incidence); return \"/incidences/view\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6875/buggy-version/src.main.java.asw.inci_manager.inci_manager_gest.controllers.IncidenceController.java", "BodyUseAPI": ["asw.inci_manager.inci_manager_gest.services.IncidenceService.getIncidenceById(java.lang.Long)"], "Fixed commit": "bc1df14d6348adaad2854ebc98ad1f6a0bbd74f0", "Url": "https://api.github.com/repos/Arquisoft/InciManager_e3b", "Date": "2018-03-23T23:35:02Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lockTime < 0) { outputDto.setStatus(2); }else if (lockTime == 0) { outputDto.setStatus(0); }else if (lockTime > (io.nuls.kernel.constant.NulsConstant.BlOCKHEIGHT_TIME_DIVIDE)) { if (lockTime > currentTime) { outputDto.setStatus(1); }else { outputDto.setStatus(0); } }else { if (lockTime > bestHeight) { outputDto.setStatus(1); }else { outputDto.setStatus(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7951/buggy-version/ledger-module.utxo.ledger-utxo-rpc.src.main.java.io.nuls.ledger.rpc.resource.TransactionResource.java", "BodyUseAPI": [], "Fixed commit": "d6950fab87104fe1fff4d5359d3fc0e8b6a7f0ca", "Url": "https://api.github.com/repos/facjas/nuls", "Date": "2018-06-07T08:20:42Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.therandomlabs.curseapi.minecraft.Mod.title()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (title.equals(CurseProject.UNKNOWN_TITLE)) { title = \"Deleted project\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/859/buggy-version/src.main.java.com.therandomlabs.changeloggenerator.ChangelogGenerator.java", "BodyUseAPI": [], "Fixed commit": "a6067a78b3fc94fce1191beeaf1469f6deb69208", "Url": "https://api.github.com/repos/TheRandomLabs/ChangelogGenerator", "Date": "2018-06-17T03:21:00Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.metatavu.kuntaapi.server.rest.model.Event.getStart()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (eventStart == null) { logger.severe(() -> java.lang.String.format(\"Event %s does not have start time\", event.getId())); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5187/buggy-version/src.main.java.fi.otavanopisto.kuntaapi.server.integrations.linkedevents.LinkedEventsEventProvider.java", "BodyUseAPI": [], "Fixed commit": "d5aeb648f1f81a9aee2d4fddb05b48a26d3f4966", "Url": "https://api.github.com/repos/Metatavu/kunta-api-server", "Date": "2018-04-16T12:42:17Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mPlayer.isPlaying()) mPlayer.pause();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2742/buggy-version/library.src.main.java.com.shxhzhxx.sdk.ui.VideoViewer.java", "BodyUseAPI": ["android.media.MediaPlayer.pause()"], "Fixed commit": "693927c77051d0ed1046976e9c2cb0832298c545", "Url": "https://api.github.com/repos/shxhzhxx/AndroidSDK", "Date": "2018-08-23T07:12:03Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(model.isReadOnlyMode())) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6476/buggy-version/j2me.form-entry.src.org.javarosa.formmanager.view.chatterbox.Chatterbox.java", "BodyUseAPI": [], "Fixed commit": "6e28f31d2d7e523edc0ec9b4173e8d839563d909", "Url": "https://api.github.com/repos/joeflack4/xform-test.py", "Date": "2010-06-10T19:20:53Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.ivg2.foodapp.FoodItemRepository.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((food.getImageURL()) == null) { com.bumptech.glide.Glide.with(context).load(R.drawable.fooditemplaceholder).into(viewHolder.foodImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1735/buggy-version/app.src.main.java.me.ivg2.foodapp.FridgeGridAdapter.java", "BodyUseAPI": [], "Fixed commit": "21857a021221e692c31d765f11257a453a41d51e", "Url": "https://api.github.com/repos/TheOscars2/FoodApp", "Date": "2018-07-27T17:50:09Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((capacity) == null) { capacity = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3498/buggy-version/src.main.java.com.icesoft.msdb.domain.Engine.java", "BodyUseAPI": [], "Fixed commit": "ef19391dfd6bbd1445d85c1e450961b17dbe75c2", "Url": "https://api.github.com/repos/iclavijos/msdb", "Date": "2018-01-15T21:59:53Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((address.getAddress()) instanceof java.net.Inet6Address) { try { java.net.Inet4Address inet4 = org.red5.client.net.rtmp.RTMPClient.getInet4AddressByName(server); address = new java.net.InetSocketAddress(inet4, port); } catch (java.net.UnknownHostException e) { org.red5.client.net.rtmp.RTMPClient.log.error(\"Cast to IPv4 FAILED: {}\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9890/buggy-version/src.main.java.org.red5.client.net.rtmp.RTMPClient.java", "BodyUseAPI": [], "Fixed commit": "b7367b30ef2926329e9d54a8a842bd83a666c376", "Url": "https://api.github.com/repos/videogorillas/red5-client", "Date": "2018-02-22T14:09:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!configurationAndObjectStoresAreConfigured) { configurationAndObjectStoresAreConfigured = (awsCanaryServiceIntegration.isEnabled()) && (awsCanaryServiceIntegration.isS3Enabled()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4938/buggy-version/halyard-config.src.main.java.com.netflix.spinnaker.halyard.config.validate.v1.canary.CanaryValidator.java", "BodyUseAPI": [], "Fixed commit": "8c76026bd1a5b0c11df1d34afed72769c4fa17a0", "Url": "https://api.github.com/repos/anshrma/halyard", "Date": "2018-06-21T18:47:25Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!configurationAndObjectStoresAreConfigured) { configurationAndObjectStoresAreConfigured = (googleCanaryServiceIntegration.isEnabled()) && (googleCanaryServiceIntegration.isGcsEnabled()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4938/buggy-version/halyard-config.src.main.java.com.netflix.spinnaker.halyard.config.validate.v1.canary.CanaryValidator.java", "BodyUseAPI": [], "Fixed commit": "8c76026bd1a5b0c11df1d34afed72769c4fa17a0", "Url": "https://api.github.com/repos/anshrma/halyard", "Date": "2018-06-21T18:47:25Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n.isEnabled()) { if (!configurationAndObjectStoresAreConfigured) { p.addProblem(Problem.Severity.WARNING, \"There is no account of type CONFIGURATION_STORE and OBJECT_STORE configured.\").setRemediation(\"Enable GCS or S3 and ensure that the relevant Google or AWS canary account is also enabled.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4938/buggy-version/halyard-config.src.main.java.com.netflix.spinnaker.halyard.config.validate.v1.canary.CanaryValidator.java", "BodyUseAPI": [], "Fixed commit": "8c76026bd1a5b0c11df1d34afed72769c4fa17a0", "Url": "https://api.github.com/repos/anshrma/halyard", "Date": "2018-06-21T18:47:25Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tasksPerJob > 1) { if (i == 0) { out.println(((((((\"qsub -N \\\"task_\" + (i + 1)) + \"\\\" -t \") + ((i * tasksPerJob) + 1)) + \"-\") + ((i + 1) * tasksPerJob)) + \" ./task.sh\")); }else { out.println(((((((((\"qsub -N \\\"task_\" + (i + 1)) + \"\\\" -t \") + ((i * tasksPerJob) + 1)) + \"-\") + ((i + 1) * tasksPerJob)) + \" -hold_jid task_\") + i) + \" ./task.sh\")); } }else { if (i == 0) { out.println(((((\"qsub -N \\\"task_\" + (i + 1)) + \"\\\" -t \") + ((i * tasksPerJob) + 1)) + \" ./task.sh\")); }else { out.println(((((((\"qsub -N \\\"task_\" + (i + 1)) + \"\\\" -t \") + ((i * tasksPerJob) + 1)) + \" -hold_jid task_\") + i) + \" ./task.sh\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8271/buggy-version/src.main.java.com.clustering.scripting.BatchGenerator.java", "BodyUseAPI": ["java.io.PrintWriter.println(java.lang.String)", "java.io.PrintWriter.println(java.lang.String)", "java.io.PrintWriter.println(java.lang.String)", "java.io.PrintWriter.println(java.lang.String)"], "Fixed commit": "ae0323e441c3852335aabcefbcd6059ede931796", "Url": "https://api.github.com/repos/PreibischLab/image-clustering", "Date": "2018-10-02T08:34:33Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentArea[playerId]) == (Area.additionalDice)) { currentArea[playerId] = nextArea[playerId]; stealDice(playerId, fieldId, Area.additionalDice); currentArea[playerId] = null; nextArea[playerId] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9656/buggy-version/src.games.gsClever.Logic.MainLogic.java", "BodyUseAPI": ["games.gsClever.Logic.MainLogic.stealDice(int,int,Area.additionalDice)"], "Fixed commit": "7a332d6ed7d520aabe0fd220a9c73f62d1307055", "Url": "https://api.github.com/repos/nicoonator/gsclever", "Date": "2018-07-13T11:33:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((LastPeriodEventCount) != 0) priority = ((double) (days)) / (LastPeriodEventCount); else priority = java.lang.Double.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5843/buggy-version/Android.ItHappenedAndroid.app.src.main.java.ru.lod_misis.ithappened.Statistics.Facts.AllTrackingsStatistics.FrequencyTrendChangingFact.java", "BodyUseAPI": [], "Fixed commit": "078a0f61b4c8f08b872089e91e246ba42dad92f0", "Url": "https://api.github.com/repos/LeagueOfDevelopers/ItHappened", "Date": "2018-06-13T20:04:45Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastRequestID == (-1)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4070/buggy-version/src.main.java.com.rohitawate.restaurant.util.history.HistoryManager.java", "BodyUseAPI": [], "Fixed commit": "43ffac247830f3d604f62e6f93610023dd1ebdbb", "Url": "https://api.github.com/repos/RohitAwate/Everest", "Date": "2018-02-22T09:14:29Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configFile.isDirectory()) { return parse(dataConfigHomeDirectory, constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9398/buggy-version/main.java.io.github.azagniotov.stubby4j.yaml.YAMLParser.java", "BodyUseAPI": ["io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(java.io.File)", "io.github.azagniotov.stubby4j.yaml.YAMLParser.parse(java.lang.String,constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile)))", "io.github.azagniotov.stubby4j.yaml.YAMLParser.constructInputStream(io.github.azagniotov.stubby4j.yaml.YAMLMerger.merge(configFile))"], "Fixed commit": "fc62b4dbc83977ed7af45b7022022068079fc56b", "Url": "https://api.github.com/repos/asarkar/stubby4j", "Date": "2018-01-15T22:42:31Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arrangedRectList.size()) == 1) { arrangedRectList.get(0).right = getWidth(); return arrangedRectList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2212/buggy-version/calendar.src.main.java.com.framgia.library.calendardayview.CalendarDayView.java", "BodyUseAPI": ["java.util.ArrayList<android.graphics.Rect>.get(int)"], "Fixed commit": "28b30cd8688b64c561e5497e005c0a304631a2f7", "Url": "https://api.github.com/repos/kaodim/kaodim-android-calendar", "Date": "2018-03-07T03:54:33Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((issueFolder.exists()) && (issueFolder.isDirectory())) org.apache.commons.io.FileUtils.cleanDirectory(issueFolder);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4018/buggy-version/src.main.java.com.citi.service.file.impl.LogFileServiceImpl.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)"], "Fixed commit": "cc63246735104470d9ebe4dedad6e837684f4264", "Url": "https://api.github.com/repos/strikecbu/TraceLogMonitor", "Date": "2018-06-11T08:21:31Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (myS.contains(\"/dspot_properties_files\")) { myS = myS.replaceAll(\"/dspot_properties_files\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5343/buggy-version/eu.stamp.eclipse.dspot.wizard.src.eu.stamp.wp4.dspot.wizard.DSpotWizardPage1.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "4abc6965287104966df420fc9688944dec0eb960", "Url": "https://api.github.com/repos/STAMP-project/stamp-ide", "Date": "2018-07-04T13:11:37Z"},
{"Line": "=>1354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sql_table) == \"fac_db\") { java.sql.PreparedStatement pst2 = conn.prepareStatement(((\"DROP TABLE \" + (edit_id.getText())) + \"\")); pst2.execute(); pst2.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8920/buggy-version/src.vr.admin_panel.java", "BodyUseAPI": [], "Fixed commit": "5ffa909b364ee1e64d3128b6aabad2b35dc63104", "Url": "https://api.github.com/repos/athulanilthomas/faculty-feedback-management-system", "Date": "2018-02-19T15:11:59Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) < 8) { res = res.substring(0, res.length()); }else { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8357/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "494185097c2913f63d9892fa4d68d375c074c30b", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-wilso982", "Date": "2018-09-26T20:48:14Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userName.equals(\"head\")) { android.content.SharedPreferences pref = android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); android.content.SharedPreferences.Editor editor = pref.edit(); editor.putString(\"empID\", \"E003\"); editor.putString(\"deptID\", \"CPSC\"); editor.commit(); android.content.Intent intent = new android.content.Intent(); intent.setClass(this, com.example.wanglu.stationerystore.Navigation.NavigationForHead.class); startActivity(intent); }else if (userName.equals(\"arch\")) { android.content.SharedPreferences pref = android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); android.content.SharedPreferences.Editor editor = pref.edit(); editor.putString(\"empID\", \"E010\"); editor.putString(\"deptID\", \"ARCH\"); editor.commit(); android.content.Intent intent = new android.content.Intent(); intent.setClass(this, com.example.wanglu.stationerystore.Navigation.NavigationForHead.class); startActivity(intent); }else if (userName.equals(\"manager\")) { android.content.SharedPreferences pref = android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext()); android.content.SharedPreferences.Editor editor = pref.edit(); editor.putString(\"empID\", \"E011\"); editor.putString(\"deptID\", \"STOR\"); editor.commit(); android.content.Intent intent = new android.content.Intent(); intent.setClass(this, com.example.wanglu.stationerystore.Navigation.NavigationForManager.class); startActivity(intent); }else { android.widget.Toast.makeText(this, \"Please use correct username\", Toast.LENGTH_SHORT).show(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4449/buggy-version/app.src.main.java.com.example.wanglu.stationerystore.LoginActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "11c8000ce961850f330ed10de137d06e26798238", "Url": "https://api.github.com/repos/SA46Team5a/AD---Android", "Date": "2018-08-02T14:01:01Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i != j) { if (occasions.get(i).equals(occasions.get(j))) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3214/buggy-version/src.main.java.seedu.address.model.occasion.UniqueOccasionList.java", "BodyUseAPI": ["occasions.get(i).equals(occasions.get(j))", "java.util.List<seedu.address.model.occasion.Occasion>.get(int)", "java.util.List<seedu.address.model.occasion.Occasion>.get(int)"], "Fixed commit": "a91ae728406cb84be1e2961304817f69eca298e2", "Url": "https://api.github.com/repos/KongZijin/main", "Date": "2018-10-25T14:27:02Z"},
{"Line": "=>1304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(filter.equals(org.ecocean.EncounterQueryProcessor.SELECT_FROM_ORG_ECOCEAN_ENCOUNTER_WHERE))) { filter += \" && \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7515/buggy-version/src.main.java.org.ecocean.EncounterQueryProcessor.java", "BodyUseAPI": [], "Fixed commit": "80ac1c7140b0461cf8a2cf1660a143f176f62a32", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2018-07-30T22:37:08Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((name != null) && (name != \"\")) { java.lang.String uiColorString = coloredProjectElement.getAttribute(abapci.xml.ColoredProjectModelXml.PROJECT_UI_COLOR_ATTRIBUTE); abapci.domain.UiColor uiColor = abapci.domain.UiColor.valueOf(uiColorString); coloredProjects.add(new abapci.domain.ColoredProject(name, uiColor)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6459/buggy-version/eclipsePlugin.abapCI.src.abapci.xml.ColoredProjectModelXml.java", "BodyUseAPI": ["java.util.List<abapci.domain.ColoredProject>.add(abapci.domain.ColoredProject)"], "Fixed commit": "850d0d3b24d3d6f72672e2a56fee369d081f04e4", "Url": "https://api.github.com/repos/andau/abapCI", "Date": "2018-06-13T20:52:06Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((that.dimension()) != (this.dimension())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8743/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "e5a26a346bd3b6ae5936e97fb850c2c8e8f02291", "Url": "https://api.github.com/repos/jdvalera/8puzzle", "Date": "2018-01-12T07:27:18Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getGui()) instanceof micdoodle8.mods.galacticraft.core.client.gui.screen.GuiCelestialSelection) { if (net.minecraft.client.settings.GameSettings.isKeyDown(micdoodle8.mods.galacticraft.core.tick.KeyHandlerClient.galaxyMap)) { event.setGui(new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(true, null, net.minecraftforge.server.permission.PermissionAPI.hasPermission(com.mjr.mjrlegendslib.util.MCUtilities.getMinecraft().player, Constants.PERMISSION_CREATE_STATION))); }else { event.setGui(new com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection(false, null, net.minecraftforge.server.permission.PermissionAPI.hasPermission(com.mjr.mjrlegendslib.util.MCUtilities.getMinecraft().player, Constants.PERMISSION_CREATE_STATION))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8811/buggy-version/src.main.java.com.mjr.extraplanets.client.handlers.MainHandlerClient.java", "BodyUseAPI": ["net.minecraftforge.client.event.GuiOpenEvent.setGui(com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection)", "net.minecraftforge.client.event.GuiOpenEvent.setGui(com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection)"], "Fixed commit": "3bbe5dbb7b84fe919807e67af6b219be76146af2", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-02T15:46:42Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (AVPosition >= 0) AVs = new java.lang.Integer(altName.substring((AVPosition - 1), AVPosition)).intValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3530/buggy-version/core.src.java.com.pb.mtctm2.abm.ctramp.HouseholdAutoOwnershipModel.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Integer.intValue()"], "Fixed commit": "d1aa19191e78206aee295c1f9a35361fc47f3dfc", "Url": "https://api.github.com/repos/BayAreaMetro/travel-model-two", "Date": "2018-04-17T15:59:30Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (CVPosition >= 0) CVs = new java.lang.Integer(altName.substring((CVPosition - 1), CVPosition)).intValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3530/buggy-version/core.src.java.com.pb.mtctm2.abm.ctramp.HouseholdAutoOwnershipModel.java", "BodyUseAPI": ["java.lang.Integer.intValue()", "java.lang.String.substring(int,int)"], "Fixed commit": "d1aa19191e78206aee295c1f9a35361fc47f3dfc", "Url": "https://api.github.com/repos/BayAreaMetro/travel-model-two", "Date": "2018-04-17T15:59:30Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["1.getData(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list == null) { list = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3786/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.EditGUI.EditGUIButton.java", "BodyUseAPI": [], "Fixed commit": "da34cde71bc9128891cb0cd406dbbed645523b68", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-09-16T19:11:45Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readBytes < 0) { com.turn.ttorrent.client.network.WorkingReceiver.logger.debug(\"channel {} is closed by other peer\", socketChannel); return new com.turn.ttorrent.client.network.ShutdownAndRemovePeerProcessor(myPeerUID, myContext).processAndGetNext(socketChannel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8606/buggy-version/ttorrent-client.src.main.java.com.turn.ttorrent.client.network.WorkingReceiver.java", "BodyUseAPI": [], "Fixed commit": "72c1fb94417a4b8ea2e771a2bb9aef72c49addba", "Url": "https://api.github.com/repos/JetBrains/ttorrent-lib", "Date": "2018-03-21T18:35:42Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((int) (temp1.getData().charAt(0))) != 32) { char letter = ((char) (((char) (temp1.getData().charAt(0))) + incrdecr)); temp1.setData(java.lang.Character.toString(letter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7012/buggy-version/src.Project4.LinkedList.java", "BodyUseAPI": ["Project4.Node.setData(java.lang.String)", "Project4.Node.getData()", "temp1.getData().charAt(int)"], "Fixed commit": "0f07f27f5a384002ec2c70a539fb4710f9b6a4c7", "Url": "https://api.github.com/repos/Rand3rino/MixandUnMixPrj4", "Date": "2018-04-13T03:43:24Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((int) (temp.getData().charAt(0))) != 32) { if (((int) (temp.getData().charAt(0))) == 33) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7012/buggy-version/src.Project4.LinkedList.java", "BodyUseAPI": ["temp.getData().charAt(int)", "Project4.Node.getData()"], "Fixed commit": "0f07f27f5a384002ec2c70a539fb4710f9b6a4c7", "Url": "https://api.github.com/repos/Rand3rino/MixandUnMixPrj4", "Date": "2018-04-13T03:43:24Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (controller.haveAWinner()) { pause(\"\\n\\n **** **** **** HAS GANADO LA PARTIDA **** **** ****\\n\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6784/buggy-version/deepspace.src.UI.TextUI.java", "BodyUseAPI": [], "Fixed commit": "bf30ad668c4ac5b20aeef4fe327469a876ab3418", "Url": "https://api.github.com/repos/antoniogamiz/PDOO-Java", "Date": "2018-05-08T16:55:34Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (line == null) { throw new java.io.IOException(\"Incorrect file format: Fewer edges than specified.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1213/buggy-version/src.graphs.graph.GraphReader.java", "BodyUseAPI": [], "Fixed commit": "c65018ed6392edfc8cdc613f0715ed8d542e502d", "Url": "https://api.github.com/repos/Mangara/GraphCore", "Date": "2018-01-17T16:02:58Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(documentSnapshot.exists())) { android.util.Log.d(com.alitoyou.Me.EditUserProfile.UserAddressActivity.ADDRESSDIR, \"NO DOC\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7314/buggy-version/app.src.main.java.com.alitoyou.Me.EditUserProfile.UserAddressActivity.java", "BodyUseAPI": [], "Fixed commit": "1acce379c36f23e7b72c211c7f987783e9dba905", "Url": "https://api.github.com/repos/singtolee/ALITOYOUANDROID", "Date": "2018-10-20T16:03:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.vdab.repositories.FiliaalRepository.read(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (optionalFiliaal.isPresent()) { if (!(optionalFiliaal.get().getWerknemers().isEmpty())) { throw new be.vdab.exceptions.FiliaalHeeftNogWerknemersException(); } filiaalRepository.delete(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4024/buggy-version/src.main.java.be.vdab.services.DefaultFiliaalService.java", "BodyUseAPI": ["optionalFiliaal.get().getWerknemers().isEmpty()", "java.util.Optional<be.vdab.entities.Filiaal>.get()", "optionalFiliaal.get().getWerknemers()"], "Fixed commit": "fa37d9f040880c31e53763a227d86fd7a978e424", "Url": "https://api.github.com/repos/lookslikeitsnot/groenetenen", "Date": "2018-06-14T15:13:24Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((favorites) != null) { if (isMentor) { favorites.add(objects.get(i).getMentee()); }else { favorites.add(objects.get(i).getMentor()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8609/buggy-version/app.src.main.java.me.chrislewis.mentorship.DetailsMatchesFragment.java", "BodyUseAPI": [], "Fixed commit": "c0fece2731f2b57bddaa678b682fa682f1a3986f", "Url": "https://api.github.com/repos/MattsTeam/MentorMe", "Date": "2018-08-10T20:43:14Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((favorites) != null) { favorites.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8609/buggy-version/app.src.main.java.me.chrislewis.mentorship.DetailsMatchesFragment.java", "BodyUseAPI": [], "Fixed commit": "c0fece2731f2b57bddaa678b682fa682f1a3986f", "Url": "https://api.github.com/repos/MattsTeam/MentorMe", "Date": "2018-08-10T20:43:14Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status[position].equals(\"abort\")) { holder.acceptBtn.setText(\"client Cancelled\"); holder.acceptBtn.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9301/buggy-version/app.src.main.java.malcolmmaima.dishi.View.Adapters.ReceivedOrdersAdapter.java", "BodyUseAPI": [], "Fixed commit": "5f88b957aa2683fda217fb8c60cf21917f602d8f", "Url": "https://api.github.com/repos/malcolmmaima/Dishi", "Date": "2018-07-21T10:35:13Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.entity) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8131/buggy-version/src.main.java.mchorse.blockbuster.common.tileentity.TileEntityModel.java", "BodyUseAPI": [], "Fixed commit": "2dc1dbd58e7d47a99593ebdb5bbfe69ddfbe7a75", "Url": "https://api.github.com/repos/mchorse/blockbuster", "Date": "2018-04-27T07:47:43Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((highscore) == button) { new HighScoreBoard(score); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/983/buggy-version/BeCrystaled.Window.java", "BodyUseAPI": [], "Fixed commit": "92667381b063c65eaef34766fb0030cd5cb27c5a", "Url": "https://api.github.com/repos/cwcrystal8/AP-CS-Final-Project", "Date": "2018-01-16T15:29:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editText.getText().toString().equals(\"\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1389/buggy-version/app.src.main.java.com.wordpress.dnvsoft.youtubelite.menus.SeekDurationMenu.java", "BodyUseAPI": [], "Fixed commit": "1a809c21ab773c2a213e6d6a00f75e3ca928b6d5", "Url": "https://api.github.com/repos/jdinkov/YouTubeLite", "Date": "2018-10-05T19:04:52Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (fbuser != null) { android.util.Log.d(\"email\", fbuser.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9578/buggy-version/app.src.main.java.edu.gatech.cs2340.homefullshelter.view.LoginActivity.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseUser.getEmail()", "android.util.Log.d(java.lang.String,fbuser.getEmail())"], "Fixed commit": "ab1ce1d1baed05bff1de748f18da9574492e6504", "Url": "https://api.github.com/repos/gkarnati3/Team77BobTheBuilderssssssss", "Date": "2018-04-09T01:55:45Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.ui.auth.IdpResponse.fromResultIntent(android.content.Intent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (response != null) { android.util.Log.e(\"Login failed\", (\"\" + (response.getErrorCode()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9578/buggy-version/app.src.main.java.edu.gatech.cs2340.homefullshelter.view.LoginActivity.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,(\"\" + (response.getErrorCode())))", "com.firebase.ui.auth.IdpResponse.getErrorCode()"], "Fixed commit": "ab1ce1d1baed05bff1de748f18da9574492e6504", "Url": "https://api.github.com/repos/gkarnati3/Team77BobTheBuilderssssssss", "Date": "2018-04-09T01:55:45Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras().getParcelable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (curr == null) { throw new java.lang.NullPointerException(\"The current shelter is empty.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9578/buggy-version/app.src.main.java.edu.gatech.cs2340.homefullshelter.view.VacancyView.java", "BodyUseAPI": [], "Fixed commit": "ab1ce1d1baed05bff1de748f18da9574492e6504", "Url": "https://api.github.com/repos/gkarnati3/Team77BobTheBuilderssssssss", "Date": "2018-04-09T01:55:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.enoy.burst.bot.model.ChatWallet.getThresholdMode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Objects.isNull(thresholdMode)) { thresholdMode = io.enoy.burst.bot.model.ThresholdMode.DEFAULT_THRESHOLD_MODE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4353/buggy-version/burst-mining-pool-bot-controller.src.main.java.io.enoy.burst.bot.controller.service.threshold.ThresholdCheckerService.java", "BodyUseAPI": [], "Fixed commit": "66a87fe4f78d3396547efd88a67a3fe71195b860", "Url": "https://api.github.com/repos/enoy19/burst-mining-pool-bot", "Date": "2018-07-07T16:01:36Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.ioTHubConnectionType) == (com.microsoft.azure.sdk.iot.device.transport.amqps.IoTHubConnectionType.USE_TRANSPORTCLIENT)) { if ((this.transportClient.getTransportClientState()) == (TransportClient.TransportClientState.OPENED)) { throw new java.lang.IllegalStateException(((\"setOption \" + (SET_CERTIFICATE_PATH)) + \" only works when the transport is closed\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3591/buggy-version/device.iot-device-client.src.main.java.com.microsoft.azure.sdk.iot.device.DeviceClient.java", "BodyUseAPI": [], "Fixed commit": "42bb4fc3742e5237d4d9b188ea181ce90850591e", "Url": "https://api.github.com/repos/Azure/azure-iot-sdk-java", "Date": "2018-09-25T21:41:37Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((queryArr.length) > 1) { queryValue = queryArr[1].trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6787/buggy-version/src.main.java.se.romram.server.RelaxRequest.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "c696c109e5a93f755d215215f8f0f515c83e221c", "Url": "https://api.github.com/repos/mlromramse/relax", "Date": "2018-05-21T08:30:22Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.identityCliConfig.get(\"base_url_env\")) != null) { java.lang.String baseUrlEnv = this.identityCliConfig.get(\"base_url_env\").toString(); java.lang.String baseUrl = java.lang.System.getenv(baseUrlEnv); if (org.apache.commons.lang3.StringUtils.isNotEmpty(baseUrl)) { propertiesBean.setBaseUrl(baseUrl); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3798/buggy-version/src.main.java.com.crowdin.cli.commands.Commands.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "23d4cc2536f2b46b72bffc8183bcac213d5caa86", "Url": "https://api.github.com/repos/crowdin/crowdin-cli-2", "Date": "2018-06-11T13:18:08Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.identityCliConfig.get(\"project_identifier_env\")) != null) { java.lang.String projectIdentifierEnv = this.identityCliConfig.get(\"project_identifier_env\").toString(); java.lang.String projectIdentifier = java.lang.System.getenv(projectIdentifierEnv); if (org.apache.commons.lang3.StringUtils.isNotEmpty(projectIdentifier)) { propertiesBean.setProjectIdentifier(projectIdentifier); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3798/buggy-version/src.main.java.com.crowdin.cli.commands.Commands.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "23d4cc2536f2b46b72bffc8183bcac213d5caa86", "Url": "https://api.github.com/repos/crowdin/crowdin-cli-2", "Date": "2018-06-11T13:18:08Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.identityCliConfig.get(\"api_key_env\")) != null) { java.lang.String apiKeyEnv = this.identityCliConfig.get(\"api_key_env\").toString(); java.lang.String apiKey = java.lang.System.getenv(apiKeyEnv); if (org.apache.commons.lang3.StringUtils.isNotEmpty(apiKey)) { propertiesBean.setApiKey(apiKey); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3798/buggy-version/src.main.java.com.crowdin.cli.commands.Commands.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "23d4cc2536f2b46b72bffc8183bcac213d5caa86", "Url": "https://api.github.com/repos/crowdin/crowdin-cli-2", "Date": "2018-06-11T13:18:08Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.identityCliConfig.get(\"base_path_env\")) != null) { java.lang.String basePathEnv = this.identityCliConfig.get(\"base_path_env\").toString(); java.lang.String basePath = java.lang.System.getenv(basePathEnv); if (org.apache.commons.lang3.StringUtils.isNotEmpty(basePath)) { propertiesBean.setBasePath(basePath); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3798/buggy-version/src.main.java.com.crowdin.cli.commands.Commands.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "23d4cc2536f2b46b72bffc8183bcac213d5caa86", "Url": "https://api.github.com/repos/crowdin/crowdin-cli-2", "Date": "2018-06-11T13:18:08Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jobInfo.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6824/buggy-version/src.main.java.org.datadog.jenkins.plugins.datadog.DatadogUtilities.java", "BodyUseAPI": [], "Fixed commit": "3de783a2ecee677f43476dabe59c50733e639000", "Url": "https://api.github.com/repos/DataDog/jenkins-datadog-plugin", "Date": "2018-07-25T16:10:44Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isJ1) { java.lang.System.out.println(\"Joueur 1, \ufffd vous\"); }else { java.lang.System.out.println(\"Joueur 2, \ufffd vous\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5871/buggy-version/HearthStone.src.partie.Jeu.java", "BodyUseAPI": [], "Fixed commit": "21830e70566d58ea9020a44e097036c60fedc100", "Url": "https://api.github.com/repos/Nexxow/HearthstonePatterns", "Date": "2018-01-12T21:36:07Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonNode.get(\"row\").get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (columnsArray == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/230/buggy-version/ksql-rest-app.src.main.java.io.confluent.ksql.rest.util.JsonUtil.java", "BodyUseAPI": [], "Fixed commit": "9c96123e611eca8f0e0901c9fe05db9dde9cf402", "Url": "https://api.github.com/repos/rodesai/ksql", "Date": "2018-05-29T22:56:10Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ref != null) { ch.interlis.iom_j.itf.IomObject structvalue = createIomObject(\"REF\", null); structvalue.setobjectrefoid(ref); iomObj.addattrobj(maintableref, structvalue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1232/buggy-version/src.main.java.ch.interlis.iom_j.itf.ItfReader.java", "BodyUseAPI": ["ch.interlis.iom_j.itf.IomObject.setobjectrefoid(java.lang.String)"], "Fixed commit": "c0ce1e3cc99d370baa2ac62f995841adb7ee1382", "Url": "https://api.github.com/repos/claeis/iox-ili", "Date": "2018-09-05T06:31:26Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.interlis.iom_j.itf.ItfReader.splitItfLine(itfLine.getContent())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((propv.length) < 2) { throw new ch.interlis.iox.IoxException(itfLine.getLineNumber(), (\"missing reference to maintable \" + (aclass.getScopedName()))); }else { ref = propv[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1232/buggy-version/src.main.java.ch.interlis.iom_j.itf.ItfReader.java", "BodyUseAPI": [], "Fixed commit": "c0ce1e3cc99d370baa2ac62f995841adb7ee1382", "Url": "https://api.github.com/repos/claeis/iox-ili", "Date": "2018-09-05T06:31:26Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fragment instanceof armands9186.gmail.com.androidshop.CategoriesFragment) { getSupportFragmentManager().beginTransaction().replace(R.id.container, fragment, \"FragmentTag\").commit(); }else { getSupportFragmentManager().beginTransaction().replace(R.id.container, fragment, \"FragmentTag\").addToBackStack(null).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4841/buggy-version/app.src.main.java.armands9186.gmail.com.androidshop.MainActivity.java", "BodyUseAPI": ["getSupportFragmentManager().beginTransaction().replace(R.id.container,android.support.v4.app.Fragment,java.lang.String)", "getSupportFragmentManager().beginTransaction().replace(R.id.container,android.support.v4.app.Fragment,java.lang.String)", "getSupportFragmentManager().beginTransaction().replace(R.id.container, fragment, \"FragmentTag\").addToBackStack(null).commit()", "getSupportFragmentManager().beginTransaction().replace(R.id.container, fragment, \"FragmentTag\").commit()", "getSupportFragmentManager().beginTransaction().replace(R.id.container, fragment, \"FragmentTag\").addToBackStack(<nulltype>)"], "Fixed commit": "0837376cf17bc1923786f58412aee0aaf3cfa8e7", "Url": "https://api.github.com/repos/armands9186/AndroidShop", "Date": "2018-07-24T08:17:19Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ingredient == null) { return \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5422/buggy-version/src.main.java.mezz.jei.plugins.vanilla.ingredients.FluidStackHelper.java", "BodyUseAPI": [], "Fixed commit": "a3ceb5142d5c4e7ab056c47632dbdafbb7bae293", "Url": "https://api.github.com/repos/mezz/JustEnoughItems", "Date": "2018-01-02T07:13:38Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.get(Keys.IS_SNEAKING).orElse(false)) { player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.RED, \"You can not use this sign while sneaking\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9615/buggy-version/src.main.java.me.nentify.servershops.events.BlockEventHandler.java", "BodyUseAPI": ["org.spongepowered.api.entity.living.player.Player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.RED, \"You can not use this sign while sneaking\"))"], "Fixed commit": "0dc84fdcc2f501e1d091a9b7395b2c9c1426b549", "Url": "https://api.github.com/repos/LukeJS/ServerShops", "Date": "2016-09-02T18:48:25Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.length()) == 0) return java.util.Optional.empty();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/215/buggy-version/src.main.java.ru.naumen.sd40.log.parser.time.TopTimeParser.java", "BodyUseAPI": [], "Fixed commit": "1d88921e96497e8904b177f61552e181a6654eb0", "Url": "https://api.github.com/repos/Van10000/liquid-log", "Date": "2018-10-20T22:28:14Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.TextView.getSelectionStart()", "android.widget.TextView.getSelectionEnd()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((android.text.TextUtils.isEmpty(getText())) || (startIndex == (-1))) || (endIndex == (-1))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2231/buggy-version/library.src.main.java.me.solidev.library.GetWordTextView.java", "BodyUseAPI": [], "Fixed commit": "9e00ca2da0c73d743fce198c9de57a494b3cd9a1", "Url": "https://api.github.com/repos/AlbertSnow/GetWordTextView", "Date": "2018-07-25T07:42:28Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.rohmio.gw2.tools.model.Settings.settings) == null) { de.rohmio.gw2.tools.model.Settings.settings = new de.rohmio.gw2.tools.model.Settings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6493/buggy-version/GW2Tools.src.main.java.de.rohmio.gw2.tools.model.Settings.java", "BodyUseAPI": [], "Fixed commit": "4893c6e377fb21a00a6078e51d3481f9520a043b", "Url": "https://api.github.com/repos/SuppenNudel/GW2", "Date": "2018-10-18T18:54:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offer == null) && ((requirement != null) && ((requirement.size()) > 0))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8214/buggy-version/streampipes-pipeline-management.src.main.java.org.streampipes.manager.matching.v2.DomainPropertyMatch.java", "BodyUseAPI": [], "Fixed commit": "37f34350f77cfd1fc094cec7831a3eb67a245790", "Url": "https://api.github.com/repos/streampipes/streampipes-ce", "Date": "2018-04-22T13:20:30Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3862/buggy-version/modules.core.petra.petra-io.src.main.java.com.liferay.petra.io.unsync.UnsyncByteArrayInputStream.java", "BodyUseAPI": [], "Fixed commit": "7e70c389393e412891c854155f05d5e75fdfb91d", "Url": "https://api.github.com/repos/christopherbryanboyd/liferay-portal", "Date": "2017-10-18T23:29:17Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.getUser().getState().equals(\"MOVE\")) { s.getUser().setSpeed(Constants.PLAYER_SPEED); updates.getUpdates().get(s.getUser().getName()).setSpeed(PLAYER_SPEED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3613/buggy-version/src.Broadcaster.java", "BodyUseAPI": ["s.getUser().getName()", "updates.getUpdates().get(s.getUser().getName())", "Session.getUser()", "updates.getUpdates().get(s.getUser().getName()).setSpeed(PLAYER_SPEED)", "Session.getUser()", "s.getUser().setSpeed(Constants.PLAYER_SPEED)"], "Fixed commit": "b1106a56c8f10e7d6bc6fede5168835f49857b9b", "Url": "https://api.github.com/repos/ahndwon/BrawlGameServer", "Date": "2018-05-23T08:35:43Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.getUser().getState().equals(\"SWIFT\")) { s.getUser().setSpeed(Constants.PLAYER_SPEED_SWIFT); updates.getUpdates().get(s.getUser().getName()).setSpeed(PLAYER_SPEED_SWIFT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3613/buggy-version/src.Broadcaster.java", "BodyUseAPI": ["updates.getUpdates().get(s.getUser().getName()).setSpeed(PLAYER_SPEED_SWIFT)", "updates.getUpdates().get(s.getUser().getName())", "s.getUser().setSpeed(Constants.PLAYER_SPEED_SWIFT)", "Session.getUser()", "Session.getUser()", "s.getUser().getName()"], "Fixed commit": "b1106a56c8f10e7d6bc6fede5168835f49857b9b", "Url": "https://api.github.com/repos/ahndwon/BrawlGameServer", "Date": "2018-05-23T08:35:43Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (portalInfoFolder.exists()) { java.lang.String[] entries = portalInfoFolder.list(); for (java.lang.String s : entries) { java.io.File currentFile = new java.io.File(portalInfoFolder.getPath(), s); currentFile.delete(); } portalInfoFolder.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1866/buggy-version/src.main.java.org.cbioportal.staging.services.ValidationServiceImpl.java", "BodyUseAPI": ["java.io.File.list()", "java.io.File.getPath()", "java.io.File.delete()"], "Fixed commit": "33a54eece781052604cea44a82f41f087566bd14", "Url": "https://api.github.com/repos/thehyve/cbioportal-staging", "Date": "2018-02-15T14:51:20Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(additionalContactNames.hasValue())) return contactablePlaneBodies;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2791/buggy-version/ihmc-common-walking-control-modules.src.main.java.us.ihmc.commonWalkingControlModules.highLevelHumanoidControl.factories.ContactableBodiesFactory.java", "BodyUseAPI": [], "Fixed commit": "2112834f5497d4c6a4e8483bc7fcca624be303db", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2018-03-01T01:21:38Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.repository.getBlockStore().getBestBlock()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bestBlock != null) { bestBlock.setCumulativeDifficulty(repository.getBlockStore().getTotalDifficultyForHash(bestBlock.getHash())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5862/buggy-version/modAionImpl.src.org.aion.zero.impl.AionHub.java", "BodyUseAPI": ["org.aion.zero.impl.types.AionBlock.getHash()", "repository.getBlockStore().getTotalDifficultyForHash(bestBlock.getHash())", "org.aion.zero.impl.types.AionBlock.setCumulativeDifficulty(repository.getBlockStore().getTotalDifficultyForHash(bestBlock.getHash()))"], "Fixed commit": "67712be5108f3d0e98163740ea31d2bb39ac017c", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-06-01T19:36:58Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bestBlock != null) { bestBlock.setCumulativeDifficulty(repository.getBlockStore().getTotalDifficultyForHash(bestBlock.getHash())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5862/buggy-version/modAionImpl.src.org.aion.zero.impl.AionHub.java", "BodyUseAPI": ["repository.getBlockStore().getTotalDifficultyForHash(bestBlock.getHash())", "org.aion.zero.impl.types.AionBlock.getHash()", "org.aion.zero.impl.types.AionBlock.setCumulativeDifficulty(repository.getBlockStore().getTotalDifficultyForHash(bestBlock.getHash()))"], "Fixed commit": "67712be5108f3d0e98163740ea31d2bb39ac017c", "Url": "https://api.github.com/repos/aionnetwork/aion", "Date": "2018-06-01T19:36:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stdOut.isPresent())) { if (stdErr.isPresent()) { stdOut = stdErr; stdErr = java.util.Optional.empty(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8095/buggy-version/img-to-webp-lib.src.main.java.de.phip1611.img_to_webp.lib.service.impl.ProcessExecServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "91552ff8a0f088103d64dc3ae2e1471f8bd03a3b", "Url": "https://api.github.com/repos/phip1611/img-to-webp-spring-service", "Date": "2018-07-29T17:08:09Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (floderBean != null) { floderBean.setFirstImgPath(imagePath); floderBean.gainNum(); floderMap.put(floderId, floderBean); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8717/buggy-version/ImagePicker.src.main.java.com.lwkandroid.imagepicker.data.ImageDataModel.java", "BodyUseAPI": ["com.lwkandroid.imagepicker.data.ImageFloderBean.setFirstImgPath(java.lang.String)", "android.support.v4.util.ArrayMap<java.lang.String, com.lwkandroid.imagepicker.data.ImageFloderBean>.put(java.lang.String,com.lwkandroid.imagepicker.data.ImageFloderBean)", "com.lwkandroid.imagepicker.data.ImageFloderBean.gainNum()"], "Fixed commit": "260b9acabe91071f82f029794ce788b6a0226a37", "Url": "https://api.github.com/repos/mutoukenji/ImagePicker", "Date": "2018-10-20T09:53:11Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8717/buggy-version/ImagePicker.src.main.java.com.lwkandroid.imagepicker.data.ImageDataModel.java", "BodyUseAPI": [], "Fixed commit": "260b9acabe91071f82f029794ce788b6a0226a37", "Url": "https://api.github.com/repos/mutoukenji/ImagePicker", "Date": "2018-10-20T09:53:11Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < ((size) - 1)) { str = str + \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1968/buggy-version/SuperArray.java", "BodyUseAPI": [], "Fixed commit": "6346f96fb37ef1c4ed152402991ac0a0bffc438b", "Url": "https://api.github.com/repos/gnakim/MKS21X-SuperArray", "Date": "2018-10-26T03:52:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == (data.length)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1968/buggy-version/SuperArray.java", "BodyUseAPI": [], "Fixed commit": "6346f96fb37ef1c4ed152402991ac0a0bffc438b", "Url": "https://api.github.com/repos/gnakim/MKS21X-SuperArray", "Date": "2018-10-26T03:52:46Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < ((size) - 1)) { str = str + \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1968/buggy-version/SuperArray.java", "BodyUseAPI": [], "Fixed commit": "6346f96fb37ef1c4ed152402991ac0a0bffc438b", "Url": "https://api.github.com/repos/gnakim/MKS21X-SuperArray", "Date": "2018-10-26T03:52:46Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((widget.getSize()) == 4) { views = new android.widget.RemoteViews(packageName, R.layout.widget_scroll_layout); }else { if (useLargeFont) { views = new android.widget.RemoteViews(packageName, R.layout.widget_1x2_large); }else { views = new android.widget.RemoteViews(packageName, R.layout.widget_1x2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8488/buggy-version/src.main.java.nitezh.ministock.activities.widget.WidgetView.java", "BodyUseAPI": [], "Fixed commit": "864e5da3fe43de1397c9a1bb45e0e17c77a5012f", "Url": "https://api.github.com/repos/karlogonzales/ministocks-390", "Date": "2018-03-15T17:44:19Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (widgetSize == 4) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8488/buggy-version/src.main.java.nitezh.ministock.activities.PreferencesActivity.java", "BodyUseAPI": [], "Fixed commit": "864e5da3fe43de1397c9a1bb45e0e17c77a5012f", "Url": "https://api.github.com/repos/karlogonzales/ministocks-390", "Date": "2018-03-15T17:44:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["comiot.client.raspberry.device.DeviceRaspberryDS18B20.parseValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (temperatureNewValue > (TEMPERATURE_INVALID_VALUE)) { temperatureLastValid = temperatureNewValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7183/buggy-version/comiot.comiot-client-raspberry.src.main.java.comiot.client.raspberry.device.DeviceRaspberryDS18B20.java", "BodyUseAPI": [], "Fixed commit": "c1ebcc81d5cc56225cb83cf5e22ced0c9313808c", "Url": "https://api.github.com/repos/hectorgastaminza/comiot", "Date": "2018-09-01T19:47:26Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.N)) { builder.setContent(remoteViews); }else { builder.setCustomContentView(remoteViews); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8547/buggy-version/app.src.main.java.com.tony.stepcounter.service.StepCounterService.java", "BodyUseAPI": [], "Fixed commit": "2c2f71b9f4cbd3cfba9c8314121acad62068b53e", "Url": "https://api.github.com/repos/bluesky456/StepCounter", "Date": "2018-05-15T09:29:32Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"NHSL\".equalsIgnoreCase(routeId)) { transitType = org.septa.android.app.TransitType.NHSL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4836/buggy-version/app.src.main.java.org.septa.android.app.notifications.PushNotificationManager.java", "BodyUseAPI": [], "Fixed commit": "dcee88af2d3eeb0c40a0f3b978304f763a5f092e", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2018-07-24T19:51:54Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"NHSL\".equalsIgnoreCase(routeId)) { transitType = org.septa.android.app.TransitType.NHSL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4836/buggy-version/app.src.main.java.org.septa.android.app.notifications.PushNotificationManager.java", "BodyUseAPI": [], "Fixed commit": "dcee88af2d3eeb0c40a0f3b978304f763a5f092e", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2018-07-24T19:51:54Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"NHSL\".equalsIgnoreCase(routeId)) { transitType = org.septa.android.app.TransitType.NHSL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4836/buggy-version/app.src.main.java.org.septa.android.app.notifications.PushNotificationManager.java", "BodyUseAPI": [], "Fixed commit": "dcee88af2d3eeb0c40a0f3b978304f763a5f092e", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2018-07-24T19:51:54Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<javax.swing.Box>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((b.getUsedHeight()) == 0.0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8753/buggy-version/src.com.m2e4.gui.BppCFrame.java", "BodyUseAPI": [], "Fixed commit": "6a1fd393dca2c3894e90f853d8a0cd02cb6a1f4f", "Url": "https://api.github.com/repos/jetenergy/KBS2a", "Date": "2018-06-05T13:36:22Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (requestBodyJson != null) request = createAndInitRequest(operation, requestBodyJson); else request = createAndInitRequest(operation);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4920/buggy-version/service.app.controllers.BaseController.java", "BodyUseAPI": ["controllers.BaseController.createAndInitRequest(java.lang.String,com.fasterxml.jackson.databind.JsonNode)"], "Fixed commit": "446da93ec8633b1501b794dea4456e829ac2569c", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-service", "Date": "2018-09-18T10:09:27Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(entity.getRoomUser().getPosition().equals(roller.getPosition()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2833/buggy-version/Kepler-Server.src.main.java.org.alexdev.kepler.game.room.tasks.ProcessRollerTask.java", "BodyUseAPI": [], "Fixed commit": "f7f8034cdec850b5ee9e53c7adcc56b66cc0df1d", "Url": "https://api.github.com/repos/emansom/Kepler", "Date": "2018-05-30T12:45:59Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(nukkitcoders.mobplugin.RouteFinderThreadPool.executor.isShutdown())) && (!(nukkitcoders.mobplugin.RouteFinderThreadPool.executor.isTerminating()))) nukkitcoders.mobplugin.RouteFinderThreadPool.executor.execute(t);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/23/buggy-version/src.main.java.nukkitcoders.mobplugin.RouteFinderThreadPool.java", "BodyUseAPI": ["java.util.concurrent.ThreadPoolExecutor.execute(nukkitcoders.mobplugin.runnable.RouteFinderSearchTask)"], "Fixed commit": "19ba2fb206e5b2cf21a9b7eff858361b69734621", "Url": "https://api.github.com/repos/leifis80/mob-plugin", "Date": "2018-08-05T14:21:07Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i >= (sData.length)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7645/buggy-version/src.main.java.pl.klimas7.ekwreader.tool.builders.PersonBuilder.java", "BodyUseAPI": [], "Fixed commit": "630a9b4e4d234c03d8e9290fb5af80a4cf00041c", "Url": "https://api.github.com/repos/klimas7/ekwreader", "Date": "2018-01-12T20:38:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.tabbara.mohammad.uielements.JobDoneToggle.on.containsKey(getId()))) { com.tabbara.mohammad.uielements.JobDoneToggle.on.put(getId(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9002/buggy-version/uielements.src.main.java.com.tabbara.mohammad.uielements.JobDoneToggle.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Boolean>.put(getId(),boolean)"], "Fixed commit": "b52a7615a907cc540d4be8c0a1eb8040b02a47f5", "Url": "https://api.github.com/repos/Mohammad-Tabbara/uielements_chip", "Date": "2018-02-16T23:14:34Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(task.isSuccessful())) && (flag)) { mProgress.dismiss(); android.widget.Toast.makeText(this, \"Email address wrong or your password is too easy please change your password.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/712/buggy-version/app.src.main.java.com.example.user.keepingmeontrack.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "2a5c9c02b4dacc763f908d505dcfd8428696b8cb", "Url": "https://api.github.com/repos/kubrahebes/KeepingMeOnTrack", "Date": "2018-02-21T13:02:29Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret == 120) ret--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6874/buggy-version/src.uk.ac.cam.ia.group14.detail.DetailPanel.java", "BodyUseAPI": [], "Fixed commit": "a08094c5e734def53c12876ae508510b029d9de3", "Url": "https://api.github.com/repos/Abrasam/WeatherApp", "Date": "2018-05-20T22:51:11Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ignoreId == null) { return repository.search(keyword, org.springframework.data.domain.PageRequest.of(0, 10)); }else { return repository.search(keyword, ignoreId, org.springframework.data.domain.PageRequest.of(0, 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8320/buggy-version/src.main.java.com.zmdev.goldenbag.service.impl.UserServiceImpl.java", "BodyUseAPI": ["com.zmdev.goldenbag.service.impl.UserServiceImpl.search(java.lang.String,java.lang.Long,org.springframework.data.domain.PageRequest.of(0, 10))"], "Fixed commit": "e5f2bf98bdd3b90a5bb01a8eb9f362ba141f3b23", "Url": "https://api.github.com/repos/wq1019/golden-bag-backend", "Date": "2018-07-26T02:32:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.mozilla.focus.Inject.isScreenCaptureAnimationEnabled())) { mLottieAnimationView.setRepeatCount(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7196/buggy-version/app.src.main.java.org.mozilla.focus.fragment.ScreenCaptureDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "596dfb716f412abc4ec7f0bcc6db878fafacd90e", "Url": "https://api.github.com/repos/mozilla-tw/Rocket", "Date": "2018-08-17T06:23:18Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jarFilePath.startsWith(\"file\")) { jarFilePath = jarFilePath.substring(5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2525/buggy-version/src.main.java.heap.stark.yaml.generator.utils.ServiceClassBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "659e8fc18ee741f2274579cfb084df0de698a39c", "Url": "https://api.github.com/repos/heapStark/yaml-generator", "Date": "2018-06-17T04:53:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((crimeAdapter) == null) { crimeAdapter = new com.notgodzilla.criminalintent.CrimeListFragment.CrimeAdapter(crimes); crimeRecyclerView.setAdapter(crimeAdapter); }else { crimeAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5953/buggy-version/app.src.main.java.com.notgodzilla.criminalintent.CrimeListFragment.java", "BodyUseAPI": [], "Fixed commit": "73876d7e12ef8df09c3c182c814d8ae18c54461f", "Url": "https://api.github.com/repos/notgodzilla/android-big-nerd-ranch-criminal-intent-app", "Date": "2018-07-06T02:15:55Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSize()) == (com.ubs.sai.SimpleQueueImpl.CAPACITY)) throw new java.lang.IllegalStateException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2443/buggy-version/src.main.java.com.ubs.sai.SimpleQueueImpl.java", "BodyUseAPI": [], "Fixed commit": "d90ee1d8486c31f641501941c420534f90385bde", "Url": "https://api.github.com/repos/mehtamu29/sanbox", "Date": "2018-08-05T12:57:58Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (toastText != null) { chosenSemester = ((java.lang.String) (toastText.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1068/buggy-version/app.src.main.java.com.example.macx.projecttimetable.activities.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.getText()"], "Fixed commit": "30efb18d4ce30445250bbde8b7aed6dbffe82a9d", "Url": "https://api.github.com/repos/MaciejCmiel/Timetable-App", "Date": "2018-04-22T21:54:06Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(locked)) updated = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5738/buggy-version/src.main.java.com.matt.forgehax.mods.ShulkerViewer.java", "BodyUseAPI": [], "Fixed commit": "dcc6a8e8e61526706160cedc22ed7f68fb16d3d2", "Url": "https://api.github.com/repos/VADemon/ForgeHax", "Date": "2018-09-09T00:00:28Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (digitIndex >= (s.length())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/989/buggy-version/src.main.java.org.scijava.parse.Literals.java", "BodyUseAPI": [], "Fixed commit": "188e5b9f3e0563f135eeec74e379c45974f1865c", "Url": "https://api.github.com/repos/scijava/parsington", "Date": "2018-07-26T21:57:13Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".contains(java.lang.String.valueOf(s.charAt(0))))) { java.lang.System.out.print((s + \" \")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5536/buggy-version/Main.java", "BodyUseAPI": ["java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "19de7b8e307c7047e1fb9caff48d0c184d2b3ca8", "Url": "https://api.github.com/repos/Manato2cc/Phonetic", "Date": "2018-03-15T06:27:56Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((builder.values) != null) { this.values = new java.util.ArrayList(builder.values); java.util.Collections.sort(this.values); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8412/buggy-version/warehouse.query-core.src.main.java.datawave.core.iterators.DatawaveFieldIndexListIteratorJexl.java", "BodyUseAPI": [], "Fixed commit": "d78fec759489992c65794023ee786f90044154c1", "Url": "https://api.github.com/repos/NationalSecurityAgency/datawave", "Date": "2018-08-14T16:58:47Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (owaName == \"restAPI\") { return \"manage.form\"; }else { return \"redirect:manage.form\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1632/buggy-version/omod.src.main.java.org.openmrs.module.owa.web.controller.OwaManageController.java", "BodyUseAPI": [], "Fixed commit": "390734d585d6877d4cf90aa2531c16cacd4cdd14", "Url": "https://api.github.com/repos/Charpell/openmrs-module-owa", "Date": "2018-01-03T09:32:28Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Notification_MP.isPlaying()) { com.personal.hung1.checkbus.DisplayBusTiming.isAlarmSound = false; }else if ((com.personal.hung1.checkbus.DisplayBusTiming.isAlarmEnabled) && (com.personal.hung1.checkbus.DisplayBusTiming.isAlarmSound)) { Notification_MP.start(); com.personal.hung1.checkbus.DisplayBusTiming.isAlarmSound = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9474/buggy-version/app.src.main.java.com.personal.hung1.checkbus.DisplayBusTiming.java", "BodyUseAPI": ["android.media.MediaPlayer.start()"], "Fixed commit": "a7f2eebd1bf68365ad555f8dced21dfd61a071a3", "Url": "https://api.github.com/repos/dinhquanghung1310/CheckBusAndroid", "Date": "2017-12-09T04:18:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(\" \\t\")) { line = line.replaceFirst(\" \\t\", \"\\t\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2691/buggy-version/modules.util.source-formatter.src.main.java.com.liferay.source.formatter.checks.JSONWhitespaceCheck.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "4980e7d01d9eaa8c732af38cce078a7e466a07e4", "Url": "https://api.github.com/repos/petershin/liferay-portal", "Date": "2018-05-04T19:37:27Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lwjgl.opengl.Display.wasResized()) { for (java.awt.Button b : buttons.keySet()) { if ((buttons.get(b)) instanceof com.github.capstone.Scene.Game) { buttons.put(b, new com.github.capstone.Scene.Game()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3601/buggy-version/src.com.github.capstone.Scene.Menu.java", "BodyUseAPI": [], "Fixed commit": "2b71262f8bb8b84905455cd50e108ba3235c084c", "Url": "https://api.github.com/repos/mocsarcade/twotris", "Date": "2018-02-20T14:43:55Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.yuu.qrcode.camera.CameraManager.get()) != null) me.yuu.qrcode.camera.CameraManager.get().closeDriver();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4540/buggy-version/lib.src.main.java.me.yuu.qrcode.core.QRCodeScaner.java", "BodyUseAPI": [], "Fixed commit": "ce912e543127d59a10d926a24c8cfeec0d6ef270", "Url": "https://api.github.com/repos/LambertCoding/LiteQRCode", "Date": "2018-08-23T13:30:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.vk.sdk.VKAccessToken.currentToken()) != null) { android.content.Intent mainActivityIntent = new android.content.Intent(this, allteran.vkphotosaver.activities.MainActivity.class); mainActivityIntent.putExtra(Consts.INTENT_USER_ID, com.vk.sdk.VKAccessToken.currentToken().userId); mainActivityIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); startActivity(mainActivityIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8784/buggy-version/app.src.main.java.allteran.vkphotosaver.activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "d8efa260c8d0251e6753e42c022a1d70755a6e13", "Url": "https://api.github.com/repos/Allteran/VKPhotoSaver", "Date": "2018-10-09T14:50:19Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["userTV.getSelectionModel().getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(((user.getUsername().getText().equals(\"Replace with Username\")) && (user.getName().getText().equals(\"Replace with Name\"))) && (user.getPassword().getText().equals(\"Replace with Password\")))) { loginPackage.DBConnection.getInstance().upDateUser(user, name, userName, password); }else if (((user.getUsername().getText().equals(\"Replace with Username\")) && (user.getName().getText().equals(\"Replace with Name\"))) && (user.getPassword().getText().equals(\"Replace with Password\"))) { loginPackage.DBConnection.getInstance().saveNewUser(name, userName, password); obList.add(new model.User(userName, password, name)); for (int i = 0; i < (obList.size()); i++) { if (obList.get(i).getUsername().getText().equals(\"Replace with Username\")) { obList.remove(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4225/buggy-version/maven-project.src.main.java.controller.UserManagerController.java", "BodyUseAPI": ["user.getUsername().getText().equals(java.lang.String)", "user.getName().getText()", "user.getName().getText().equals(java.lang.String)", "user.getPassword().getText().equals(java.lang.String)", "user.getPassword().getText()", "user.getUsername().getText()", "model.User.getUsername()", "model.User.getPassword()", "loginPackage.DBConnection.getInstance().upDateUser(model.User,java.lang.String,java.lang.String,java.lang.String)", "model.User.getName()"], "Fixed commit": "bc1eed59ab2eb4e73b990d4fc5c8bc4d09f25c37", "Url": "https://api.github.com/repos/stefanleithenmayr/Lagerverwaltung", "Date": "2018-02-20T22:17:35Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (removeOptional) dependency.setOptional(null); else if ((optional) != null) dependency.setOptional(optional);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4455/buggy-version/butterfly-utilities.src.main.java.com.paypal.butterfly.utilities.operations.pom.PomChangeDependency.java", "BodyUseAPI": [], "Fixed commit": "3177f3f7f2b95ce11df28d81d3bb646e0c24ac33", "Url": "https://api.github.com/repos/paypal/butterfly", "Date": "2018-08-20T15:09:16Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.currentlyMockedClasses.size()) > 0) { this.resetClasses(this.currentlyMockedClasses.toArray(new java.lang.Class<?>[this.currentlyMockedClasses.size()])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3555/buggy-version/core.src.main.java.com.roscopeco.moxy.impl.asm.classmock.ASMClassMockEngine.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Class<?>>.size()", "java.util.HashSet<java.lang.Class<?>>.toArray(java.lang.Class<?>[])", "com.roscopeco.moxy.impl.asm.classmock.ASMClassMockEngine.resetClasses(java.lang.Class<?>[])"], "Fixed commit": "b3119e241869e684a3c826c1e94983bfe8c3dc4c", "Url": "https://api.github.com/repos/roscopeco/moxy", "Date": "2018-06-30T12:10:19Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDataset.isEmpty()) { emptyView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7484/buggy-version/app.src.main.java.com.merlinsbeard.flashcardspro.SetViewActivity.java", "BodyUseAPI": [], "Fixed commit": "12918d23ddc88ac31e28b8c9ea061cc049ac8196", "Url": "https://api.github.com/repos/smheffron/FlashcardsPro", "Date": "2018-04-12T02:01:58Z"},
{"Line": "=>1006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resolveFromConfig) { internal = org.structr.core.app.StructrApp.getConfiguration().getNodeEntityClass(typeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2547/buggy-version/structr-core.src.main.java.org.structr.schema.export.StructrTypeDefinition.java", "BodyUseAPI": [], "Fixed commit": "8c06ac6e43ff4089724cc99f37b70ce4357886da", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-10-22T23:42:14Z"},
{"Line": "=>995", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (typeName.contains(\".\")) { try { internal = java.lang.Class.forName(typeName); resolveFromConfig = false; } catch (java.lang.ClassNotFoundException ex) { resolveFromConfig = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2547/buggy-version/structr-core.src.main.java.org.structr.schema.export.StructrTypeDefinition.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "8c06ac6e43ff4089724cc99f37b70ce4357886da", "Url": "https://api.github.com/repos/structr/structr", "Date": "2018-10-22T23:42:14Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((voucherDTO.getSupplierId()) != null) { ph.royaltek.inventory.service.Supplier supplier = supplierRepository.findOne(voucherDTO.getSupplierId()); if (supplier != null) { voucher.setSupplier(supplier); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7628/buggy-version/src.main.java.ph.royaltek.inventory.service.ProjectService.java", "BodyUseAPI": ["ph.royaltek.inventory.service.SupplierRepository.findOne(voucherDTO.getSupplierId())", "ph.royaltek.inventory.service.VoucherDTO.getSupplierId()"], "Fixed commit": "5cd83a8dac6259ee0588dc7fb0935736d6d98228", "Url": "https://api.github.com/repos/borgytan/inventory2", "Date": "2018-03-01T08:14:12Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["V.getColumn(0).dup()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wK.isScalar()) { wK = wK.div(org.nd4j.linalg.ops.transforms.Transforms.abs(wK)); }else { wK = org.nd4j.linalg.ops.transforms.Transforms.unitVec(wK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8475/buggy-version/src.main.java.nz.ac.waikato.cms.adams.multiway.algorithm.MultiLinearPLS.java", "BodyUseAPI": ["org.nd4j.linalg.ops.transforms.Transforms.unitVec(org.nd4j.linalg.api.ndarray.INDArray)", "org.nd4j.linalg.ops.transforms.Transforms.abs(org.nd4j.linalg.api.ndarray.INDArray)", "org.nd4j.linalg.api.ndarray.INDArray.div(org.nd4j.linalg.ops.transforms.Transforms.abs(wK))"], "Fixed commit": "60fdeae63b4d8a02add24cd9645a51a7b7580ab5", "Url": "https://api.github.com/repos/waikato-datamining/multiway-algorithms", "Date": "2018-09-13T14:45:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hits.length) == 0) throw new java.lang.Exception();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/195/buggy-version/src.cl.uchile.dcc.facet.web.InstancesServlet.java", "BodyUseAPI": [], "Fixed commit": "0013285464185c8c507797ad355a9b37216d2b15", "Url": "https://api.github.com/repos/joseignm/GraFa", "Date": "2018-03-02T19:38:56Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getClickCount()) == 2) { editor.updateUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1102/buggy-version/Iplementierung.DIbugger.src.dibugger.userinterface.ProgramPanel.java", "BodyUseAPI": [], "Fixed commit": "e90d1cd2f439623416cc6dd3e739de7aeafa208b", "Url": "https://api.github.com/repos/JoanaP1997/PSE", "Date": "2018-03-15T13:11:14Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileName) != null) { new java.awt.Paint(fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/629/buggy-version/MenuBar.java", "BodyUseAPI": [], "Fixed commit": "050f4a85c9722a83e93801baf5d251edd25b94c4", "Url": "https://api.github.com/repos/narang-amit/Final_Project", "Date": "2018-01-22T02:07:55Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overarchingRegion.equals(\"asia\")) { android.util.Log.d(\"Country\", \"Region is Asia\"); length -= 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1259/buggy-version/app.src.main.java.dreadloaf.com.countryquiz.Country.java", "BodyUseAPI": [], "Fixed commit": "e4ac7ed24f084d8e5733385194a4fd60de2b35f4", "Url": "https://api.github.com/repos/AndrewPochapsky/CountryCapitals", "Date": "2018-07-12T21:52:06Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Dictionary.searchWord(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((check.size()) > 1) add = \"s\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2604/buggy-version/Dictionary.DictionaryManagement.java", "BodyUseAPI": [], "Fixed commit": "e9056e6a377ea05a9f86fb8cb69fbb5f1b8817a2", "Url": "https://api.github.com/repos/longhoang08/OOP-UET", "Date": "2018-10-07T09:34:05Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results.size()) > 1) add = \"s\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2604/buggy-version/Dictionary.DictionaryCommandline.java", "BodyUseAPI": [], "Fixed commit": "e9056e6a377ea05a9f86fb8cb69fbb5f1b8817a2", "Url": "https://api.github.com/repos/longhoang08/OOP-UET", "Date": "2018-10-07T09:34:05Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((seminarGroup.getLeader()) != null) { groupResponseVO.setLeader(xmu.crms.utils.ModelUtils.UserToUserResponseVO(seminarGroup.getLeader())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5910/buggy-version/src.main.java.xmu.crms.utils.ModelUtils.java", "BodyUseAPI": ["xmu.crms.utils.GroupResponseVO.setLeader(xmu.crms.utils.UserResponseVO)", "xmu.crms.utils.SeminarGroup.getLeader()", "xmu.crms.utils.ModelUtils.UserToUserResponseVO(seminarGroup.getLeader())"], "Fixed commit": "b4116f4271e317b0a3ff490df67b0c43bb5bfb81", "Url": "https://api.github.com/repos/pocketstars/CourseManageSystem", "Date": "2018-01-01T10:11:50Z"},
{"Line": "=>807", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["VideoCodec.VideoDecoderLite.decodeFrameYUV(Client.FrameInfo,int[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (buf != null) mDecoder.releaseBuffer(buf);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8664/buggy-version/library.src.main.java.org.easydarwin.video.EasyPlayerClient.java", "BodyUseAPI": ["VideoCodec.VideoDecoderLite.releaseBuffer(java.nio.ByteBuffer)"], "Fixed commit": "011db3fa0260321abe901dcb2a5d54b11a9dab46", "Url": "https://api.github.com/repos/EasyDSS/EasyPlayer-RTMP-Android", "Date": "2018-01-06T05:42:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hit) onGround = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5093/buggy-version/src.com.pile.entity.Entity.java", "BodyUseAPI": [], "Fixed commit": "70b18c31ce89530421bfff710455daa6dd4fd88b", "Url": "https://api.github.com/repos/juggy1233/Pile", "Date": "2018-06-07T16:37:13Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((filter.getAtivo()) != null) && (!(filter.getAtivo()))) { predicates.add(builder.isFalse(root.get(Pessoa_.ativo))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/513/buggy-version/src.main.java.com.silvio.algamoneyapi.repository.pessoa.PessoaRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "81ba8a8c8ed4de559ddd222bfb4e5a0826a9d348", "Url": "https://api.github.com/repos/silviocoutinho/algamoney", "Date": "2018-09-17T16:36:07Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((a.getAltLoc()) == null) { ffx.xray.RefinementModel.logger.severe(java.lang.String.format(\" Atom %s has a null alternate location. Likely cause: attempting X-ray refinement from a .xyz file\", a)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/587/buggy-version/modules.xray.src.main.java.ffx.xray.RefinementModel.java", "BodyUseAPI": [], "Fixed commit": "ecdb61faae7c7930faf8da8f366c90c6146f0ff7", "Url": "https://api.github.com/repos/mjschnie/ffx", "Date": "2018-07-02T19:56:00Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (accZIndex)) { this.data[i] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3349/buggy-version/src.com.crusaders.gauntlet.java.util.GauntletData.java", "BodyUseAPI": [], "Fixed commit": "c529538ff79b1c9c73c9aeffd684b925b793589f", "Url": "https://api.github.com/repos/TsvetelinKostadinv/CrusadersGauntlet", "Date": "2018-08-25T13:17:32Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.getStartDate()) == null) { command.setStartDate(new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9227/buggy-version/src.main.java.dk.taskplanner.services.TaskServiceImpl.java", "BodyUseAPI": ["dk.taskplanner.commands.TaskCommand.setStartDate(java.util.Date)"], "Fixed commit": "2ecfb0d294024e33a14bd3d6982f6fd830b6a37e", "Url": "https://api.github.com/repos/tbyrresen/taskplanner", "Date": "2018-05-14T17:45:57Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduledExecutorService) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2227/buggy-version/flinkx-core.src.main.java.com.dtstack.flinkx.writer.ErrorLimiter.java", "BodyUseAPI": [], "Fixed commit": "29befea4e58e7ad40adf1e3a19648b06b0665825", "Url": "https://api.github.com/repos/DTStack/flinkx", "Date": "2018-06-25T03:51:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (util.Validators.fieldBlank(tag.getTagId())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7410/buggy-version/src.main.java.uaa.service.app.log.AppLogEachService.java", "BodyUseAPI": [], "Fixed commit": "51234d82f4c82e542a9295a95ef8dfe954cb3764", "Url": "https://api.github.com/repos/xuxueyang/gediaoUaa", "Date": "2018-08-01T16:58:57Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.ZonedDateTime.now()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tmp.getDayOfMonth()) < 9) { sb.append(\"0\"); sb.append(tmp.getDayOfMonth()); }else { sb.append(tmp.getDayOfMonth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7410/buggy-version/src.main.java.uaa.web.rest.util.CommonUtil.java", "BodyUseAPI": ["java.time.ZonedDateTime.getDayOfMonth()", "java.time.ZonedDateTime.getDayOfMonth()", "java.lang.StringBuffer.append(int)", "java.lang.StringBuffer.append(int)"], "Fixed commit": "51234d82f4c82e542a9295a95ef8dfe954cb3764", "Url": "https://api.github.com/repos/xuxueyang/gediaoUaa", "Date": "2018-08-01T16:58:57Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.ac.dicp.group1809.utilities.proteomics_framework.model.definition.proteomics.Peptide.getEnd()", "cn.ac.dicp.group1809.utilities.proteomics_framework.model.definition.proteomics.Peptide.getStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((start == 0) || (end == 0)) { cn.ac.dicp.group1809.utilities.proteomics_toolkit.NGlycoMotifParser.logger.warn(\"Peptide position in protein has not been set.\"); cn.ac.dicp.group1809.utilities.proteomics_toolkit.PeptideParser.setPosition(peptide, protein); start = peptide.getStart(); end = peptide.getEnd(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/837/buggy-version/src.main.java.cn.ac.dicp.group1809.utilities.proteomics_toolkit.NGlycoMotifParser.java", "BodyUseAPI": [], "Fixed commit": "978369298ab4e3599c001738ada61c5e350e098c", "Url": "https://api.github.com/repos/ZhengFang9502/proteomics-toolkit", "Date": "2018-09-30T08:53:55Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((day01.swomfire.restaurantapp.RequestOrderActivity.listHashMap) != null) { for (java.util.Map.Entry<data.model.Category, java.util.List<model.DishInItemList>> entry : day01.swomfire.restaurantapp.RequestOrderActivity.listHashMap.entrySet()) { for (model.DishInItemList dishInItemList : entry.getValue()) { if (dishInItemList.isSelected()) { day01.swomfire.restaurantapp.RequestOrderActivity.dishInItemLists.add(dishInItemList); newQuantity += dishInItemList.getQuantity(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9853/buggy-version/RestaurantApp.app.src.main.java.day01.swomfire.restaurantapp.RequestOrderActivity.java", "BodyUseAPI": [], "Fixed commit": "cd3d1fd42c7d7145fa085dece0f93bf826770d2e", "Url": "https://api.github.com/repos/swomfire/Spring2018AndroidApp", "Date": "2018-03-21T06:39:33Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((day01.swomfire.restaurantapp.RequestOrderActivity.listHashMap) != null) { for (java.util.Map.Entry<data.model.Category, java.util.List<model.DishInItemList>> entry : day01.swomfire.restaurantapp.RequestOrderActivity.listHashMap.entrySet()) { for (model.DishInItemList dishInItemList : entry.getValue()) { if (dishInItemList.isSelected()) { dishInItemList.setSelected(false); dishInItemList.setQuantity(1); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9853/buggy-version/RestaurantApp.app.src.main.java.day01.swomfire.restaurantapp.RequestOrderActivity.java", "BodyUseAPI": [], "Fixed commit": "cd3d1fd42c7d7145fa085dece0f93bf826770d2e", "Url": "https://api.github.com/repos/swomfire/Spring2018AndroidApp", "Date": "2018-03-21T06:39:33Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHandler) == null) { mHandler = new android.os.Handler(android.os.Looper.getMainLooper()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8514/buggy-version/app.src.main.java.com.example.kevin.easyeventbus.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8987affb09a5216cbf0c7fc85c202e1eea3623e4", "Url": "https://api.github.com/repos/yinkaiwen/EasyEventBus", "Date": "2018-01-26T00:06:41Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count != 0) { max[i] += (count * (log2((((double) (count)) / ((double) (array.getNumRows())))))) * sFactor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5355/buggy-version/src.main.org.deidentifier.arx.metric.v2.MetricMDNUNMEntropyPrecomputed.java", "BodyUseAPI": [], "Fixed commit": "c4e2e5d3382489b34120bc0b91e965a126d104bb", "Url": "https://api.github.com/repos/RaffaelBild/arx", "Date": "2018-01-24T08:04:39Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Deque<java.lang.String>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(last.equals(\"\"))) { java.lang.String[] cards = last.split(\" \"); for (int i = 0; i < (cards.length); i++) cardStack.push(core.impl.CardImpl.valueOf(cards[(((cards.length) - 1) - i)])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6330/buggy-version/src.core.impl.BoxImpl.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "6160941640f53cdf5b517f14168473ee0f142e6e", "Url": "https://api.github.com/repos/yu132/OOP", "Date": "2018-04-03T13:36:58Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params == null) { params = new java.lang.Object[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9662/buggy-version/src.main.java.com.kmecpp.jlib.reflection.Reflection.java", "BodyUseAPI": [], "Fixed commit": "1de9aaf121d441f69d38f809483334a2ed225eb4", "Url": "https://api.github.com/repos/kmecpp/JLib", "Date": "2018-07-21T16:32:22Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getState()) == (org.terasology.input.ButtonState.DOWN)) || ((event.getState()) == (org.terasology.input.ButtonState.UP))) { if ((getPlayerCount()) == 1) { if (!(time.isPaused())) { time.setPaused(true); }else { time.setPaused(false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4055/buggy-version/engine.src.main.java.org.terasology.logic.players.MenuControlSystem.java", "BodyUseAPI": [], "Fixed commit": "c5519f36333adfb6cd7bd181ee8b5e4c300c26e0", "Url": "https://api.github.com/repos/Arihant-Joshi/Terasology", "Date": "2018-03-26T16:46:42Z"},
{"Line": "=>1120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fIsDirty) { askAboutSaving(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9564/buggy-version/src.org.sil.lingtree.view.RootLayoutController.java", "BodyUseAPI": [], "Fixed commit": "263aeaad15c842360ab498148ea9387cc4cb5097", "Url": "https://api.github.com/repos/sillsdev/lingtree", "Date": "2018-03-09T21:12:31Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((playlist.getName()) != null) if (playlist.getName().toLowerCase().contains(q)) tr.add(playlist);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5042/buggy-version/app.src.main.java.v.blade.library.LibraryService.java", "BodyUseAPI": ["playlist.getName().toLowerCase().contains(java.lang.String)", "java.util.ArrayList<v.blade.library.LibraryObject>.add(v.blade.library.Playlist)", "v.blade.library.Playlist.getName()", "playlist.getName().toLowerCase()"], "Fixed commit": "ade929c85f801a5d1a8e2efe88cd6561ba3aacbd", "Url": "https://api.github.com/repos/Valou3433/blade-player", "Date": "2018-06-10T09:49:22Z"},
{"Line": "=>974", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spotifyPlaylistsCache.exists()) && ((spotifyPlaylistsCache.listFiles()) != null)) for (java.io.File f : spotifyPlaylistsCache.listFiles()) f.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5042/buggy-version/app.src.main.java.v.blade.library.Source.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "ade929c85f801a5d1a8e2efe88cd6561ba3aacbd", "Url": "https://api.github.com/repos/Valou3433/blade-player", "Date": "2018-06-10T09:49:22Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((param.getName()) != null) { if (param.getName().equals(resolvedParameter.getName())) { matched = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/688/buggy-version/modules.swagger-parser.src.main.java.io.swagger.parser.processors.ParameterProcessor.java", "BodyUseAPI": ["param.getName().equals(resolvedParameter.getName())", "io.swagger.models.parameters.Parameter.getName()"], "Fixed commit": "de62b78feca41b5743469eb7bc5f0e437056a9f5", "Url": "https://api.github.com/repos/swagger-api/swagger-parser", "Date": "2018-04-13T01:58:52Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b != null) return b;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5584/buggy-version/source.AlmostWorst.java", "BodyUseAPI": [], "Fixed commit": "128c171ab856a2327d997962e12e34ff8b6b8b25", "Url": "https://api.github.com/repos/aghiles1/algoComp2", "Date": "2018-01-05T16:42:06Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) >= 8) res = res.substring(0, 8);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/443/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "47166ca175e4dac0531f136febb3c04f84ab946e", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-Shangyint", "Date": "2018-09-27T19:11:57Z"},
{"Line": "=>831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current_parking) != null) { current_parking.remove(); current_parking = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6710/buggy-version/app.src.main.java.io.github.digital_travel_guide.digitaltravelguide.Las_Vegas_MapActivity.java", "BodyUseAPI": [], "Fixed commit": "4e278cdddab7550a6a3d4c086aa6e0488e09d99b", "Url": "https://api.github.com/repos/digital-travel-guide/digital-travel-guide", "Date": "2018-04-16T18:48:07Z"},
{"Line": "=>1115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (templateProps != null) { fr.openent.competences.controllers.ExportPDFController.log.error((((\"processing error : \\ntemplateProps : \" + (templateProps.toString())) + \"\\ntemplateName : \") + templateName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7759/buggy-version/src.main.java.fr.openent.competences.controllers.ExportPDFController.java", "BodyUseAPI": ["org.vertx.java.core.logging.Logger.error((((\"processing error : \\ntemplateProps : \" + (templateProps.toString())) + \"\\ntemplateName : \") + templateName))", "org.vertx.java.core.json.JsonObject.toString()"], "Fixed commit": "d7f24092c90e52590002e1cb7915b8722e6347a8", "Url": "https://api.github.com/repos/OPEN-ENT-NG/competences", "Date": "2018-02-23T17:10:17Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bio.knowledge.database.repository.EvidenceRepository.findByEvidenceId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entry == null) { throw new java.lang.RuntimeException(((\"Null Evidence entry for statementId: '\" + statementId) + \"'?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7492/buggy-version/server.src.main.java.bio.knowledge.server.blackboard.Blackboard.java", "BodyUseAPI": [], "Fixed commit": "2fcdadcf5e29ef9846cfa8121591947ffd4e84a1", "Url": "https://api.github.com/repos/NCATS-Tangerine/beacon-aggregator", "Date": "2018-04-09T18:04:48Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numericHandel.NumericUtilCustom.isEmpty(ipAddress)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8250/buggy-version/src.main.java.numericHandel.NumericUtilCustom.java", "BodyUseAPI": [], "Fixed commit": "84748c734d3b1702b937f3128d80b08bf8fdf1e1", "Url": "https://api.github.com/repos/a39676/toolPacksG", "Date": "2018-05-28T03:48:39Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str == null) || ((strLen = str.length()) == 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8250/buggy-version/src.main.java.numericHandel.NumericUtilCustom.java", "BodyUseAPI": [], "Fixed commit": "84748c734d3b1702b937f3128d80b08bf8fdf1e1", "Url": "https://api.github.com/repos/a39676/toolPacksG", "Date": "2018-05-28T03:48:39Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.nuls.account.service.impl.AccountServiceImpl.getAccountByAddress(io.nuls.account.service.impl.Base58.encode(address))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == account) { return io.nuls.kernel.model.Result.getFailed(AccountErrorCode.ACCOUNT_NOT_EXIST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8050/buggy-version/account-module.base.account-base.src.main.java.io.nuls.account.service.impl.AccountServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6ee1e08582adb2db5650f32a05d9970c1cb5a3dc", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-05-19T08:55:49Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.nuls.account.service.impl.AccountServiceImpl.getAccountByAddress(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == account) { return io.nuls.kernel.model.Result.getFailed(AccountErrorCode.ACCOUNT_NOT_EXIST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8050/buggy-version/account-module.base.account-base.src.main.java.io.nuls.account.service.impl.AccountServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6ee1e08582adb2db5650f32a05d9970c1cb5a3dc", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-05-19T08:55:49Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.startsWith(\"0x\")) { data = data.substring(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5180/buggy-version/appcoins.appcoins-sdk.src.main.java.com.asf.appcoins.sdk.entity.factory.TransactionFactory.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "b9f75cb641bea68b3469f121f3824bd1e7f820c1", "Url": "https://api.github.com/repos/AppStoreFoundation/asf-sdk", "Date": "2018-03-13T20:22:03Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIndex()) == 265450) java.lang.System.out.println(\"stop here\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3799/buggy-version/src.main.java.org.adoptopenjdk.jheappo.heapdump.HeapDumpSegment.java", "BodyUseAPI": [], "Fixed commit": "61686180c2ff2b02d3f7192e37a994ce0b2cff3c", "Url": "https://api.github.com/repos/AdoptOpenJDK/jheappo", "Date": "2018-04-28T10:53:00Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vandendaelen.k9.entities.EntityK9.getOwnerId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((player.getUniqueID()) == ownerID) { net.minecraft.client.Minecraft.getMinecraft().displayGuiScreen(new com.vandendaelen.k9.gui.K9Gui(getOwnerId(), dimension)); return net.minecraft.util.EnumActionResult.SUCCESS; }else { com.vandendaelen.k9.utils.helpers.PlayerHelper.sendMessage(player, \"Isn't your K9 !\", true); return net.minecraft.util.EnumActionResult.FAIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6369/buggy-version/src.main.java.com.vandendaelen.k9.entities.EntityK9.java", "BodyUseAPI": ["com.vandendaelen.k9.utils.helpers.PlayerHelper.sendMessage(net.minecraft.entity.player.EntityPlayer,java.lang.String,boolean)"], "Fixed commit": "7823015297311d806009f3637223b868fd568662", "Url": "https://api.github.com/repos/LotuxPunk/K9", "Date": "2018-07-02T22:20:52Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transitioningActivity) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/235/buggy-version/app.src.main.java.com.danthecodinggui.recipes.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3780bea3723b631e985d3f6214d79b1ae6995373", "Url": "https://api.github.com/repos/DantheCodingGui/CookBook", "Date": "2018-09-12T21:19:37Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["userDropDownList.getSelectionModel().getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (newUserNameFromList == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1886/buggy-version/BalancerInterpreter.src.main.java.org.balancer.controllers.UserScreenController.java", "BodyUseAPI": [], "Fixed commit": "6c1343218a571a720c6dce81e942960c12829f92", "Url": "https://api.github.com/repos/sajmonidesos/JanekStepInterpreter", "Date": "2018-06-18T18:40:13Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rowStoneNumber > 0) { Gomoku.StoneType stoneType = ((message[((Gomoku.AbstractSocket.headLength) + 2)]) == 1) ? StoneType.BLACK : StoneType.WHITE; for (int index = 0; index < rowStoneNumber; ++index) indexOfRowStones.add(((message[(((Gomoku.AbstractSocket.headLength) + 3) + index)]) & 255)); for (int index = 0; index < rowStoneNumber; ++index) { try { int i = message[((((Gomoku.AbstractSocket.headLength) + 3) + rowStoneNumber) + (2 * index))]; int j = message[(((((Gomoku.AbstractSocket.headLength) + 3) + rowStoneNumber) + (2 * index)) + 1)]; rowStones.add(new Gomoku.Stone(i, j, stoneType)); } catch (Gomoku.StoneOutOfBoardRangeException ignored) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6366/buggy-version/src.Gomoku.AbstractSocket.java", "BodyUseAPI": [], "Fixed commit": "29dfe0eaced040a2312c14a91153d729ca0cc293", "Url": "https://api.github.com/repos/AndrewHo1998/GomokuWithChatProject", "Date": "2018-06-12T03:27:05Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position > (android.support.v7.widget.RecyclerView.NO_POSITION)) { mAdapter.notifyItemChanged(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7331/buggy-version/app.src.main.java.info.pelleritoudacity.android.rcapstone.ui.fragment.SubscribeFragment.java", "BodyUseAPI": ["info.pelleritoudacity.android.rcapstone.ui.adapter.SubscribeAdapter.notifyItemChanged(int)"], "Fixed commit": "e1b9230f9207786871173c589ec8566d5697958e", "Url": "https://api.github.com/repos/benepell/Capstone-Project", "Date": "2018-08-26T08:55:11Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pointsBean.getType()) == 2) setOverLay(pointsBean.getType(), pointsBean);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6393/buggy-version/app.src.main.java.com.cn.bent.sports.view.activity.MapActivity.java", "BodyUseAPI": ["ScenicPointsEntity.PointsBean.getType()", "com.cn.bent.sports.view.activity.MapActivity.9.setOverLay(pointsBean.getType(),ScenicPointsEntity.PointsBean)"], "Fixed commit": "6f1777d125e6ca701788b2cb05b1fcb4b45d3ed9", "Url": "https://api.github.com/repos/cd031116/BentSports", "Date": "2018-04-18T01:08:35Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getOptionAsString(\"model_id\")) != null) { model_id = this.getOptionAsString(\"model_id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5571/buggy-version/ModelRerank.source.edu.cmu.learnsphere.d3m.data.ModelRerankMain.java", "BodyUseAPI": [], "Fixed commit": "a0e2a9afadad6da1030248a378cf255200237719", "Url": "https://api.github.com/repos/LearnSphere/WorkflowComponents", "Date": "2018-07-20T08:08:35Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((KMP.readLine.equals(\"\")) == false) { java.lang.System.out.print(((((KMP.readLine.substring(0, (i - 1))) + (KMP.ANSI_RED)) + (KMP.readLine.substring(i, (i + (KMP.pattern.length()))))) + (KMP.ANSI_RESET))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1688/buggy-version/KMP.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.io.PrintStream.print(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "da7b8c7089814021d56a1ea58f96077b1a8e148f", "Url": "https://api.github.com/repos/Relux-the-Relux/Software-Engineering-Assignment-8", "Date": "2018-01-08T09:19:42Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((robot.getRobotConnection()) != null) robot.getRobotConnection().endConnection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3596/buggy-version/sumobots.driverstation.src.main.java.org.inspirerobotics.sumobots.driverstation.DriverStationBackend.java", "BodyUseAPI": ["robot.getRobotConnection().endConnection()", "org.inspirerobotics.sumobots.driverstation.robot.Robot.getRobotConnection()"], "Fixed commit": "7714143e4ba14e99e25f28af72da04d2c92e1cd6", "Url": "https://api.github.com/repos/DevOrc/sumobots", "Date": "2018-06-15T19:55:17Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bbuf) == (-1)) { throw new java.io.IOException(\"Could not read next bit. End of stream reached\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6319/buggy-version/src.main.java.jj2000.j2k.codestream.reader.PktHeaderBitReader.java", "BodyUseAPI": [], "Fixed commit": "a8343e45feb78043af86a026f4655c27c28a9e8b", "Url": "https://api.github.com/repos/clockard/jai-imageio-jpeg2000", "Date": "2018-02-16T19:50:02Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opponentIncrementalBetSize) == 0) { opponentIncrementalBetSize = opponentTotalBetSize; }else { opponentIncrementalBetSize = (opponentTotalBetSize) - ((myStackAtStartOfHand) - (myStack)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7095/buggy-version/src.main.java.com.lennart.model.computergame.ComputerGameNew.java", "BodyUseAPI": [], "Fixed commit": "e1301583f5e258652e3d649804162fd0b29e9497", "Url": "https://api.github.com/repos/coconutsRhealthy/headsuphelper", "Date": "2018-03-16T16:10:36Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(oAuth.getRefreshToken()))) { editor.putString(\"refreshToken\", aesObfuscator.obfuscate(oAuth.getRefreshToken(), \"refreshToken\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1928/buggy-version/app.src.main.java.pt.caixamagica.aptoide.uploader.util.StoredCredentialsManager.java", "BodyUseAPI": ["com.google.android.vending.licensing.AESObfuscator.obfuscate(oAuth.getRefreshToken(),java.lang.String)", "pt.caixamagica.aptoide.uploader.webservices.json.OAuth.getRefreshToken()", "SharedPreferences.Editor.putString(java.lang.String,aesObfuscator.obfuscate(oAuth.getRefreshToken(), \"refreshToken\"))"], "Fixed commit": "4e56740dfdab3b593553e327902e0b21e44dda4d", "Url": "https://api.github.com/repos/Aptoide/aptoide-uploader", "Date": "2018-02-06T18:43:34Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.momoko.es.jpa.author.adapter.AuthorAdapter.adaptAuthorEntity(this.authorRepository.findOneByAuthorUrlIs(urlAuthor),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((authorDTO.getAvatar()) != null) { authorDTO.setAvatar((imageServer + (authorDTO.getAvatar()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/912/buggy-version/momoko-backend-jpa.src.main.java.com.momoko.es.jpa.author.service.AuthorServiceImpl.java", "BodyUseAPI": ["com.momoko.es.api.author.dto.AuthorDTO.setAvatar((imageServer + (authorDTO.getAvatar())))", "com.momoko.es.api.author.dto.AuthorDTO.getAvatar()"], "Fixed commit": "b9fd1edc3e41fd52b8c98c973ddad9ebaabca49c", "Url": "https://api.github.com/repos/Maetro/MomokoWeb", "Date": "2018-10-30T00:03:15Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.momoko.es.jpa.author.adapter.AuthorAdapter.adaptAuthorEntity(this.authorRepository.findOneByAuthorUrlIs(urlAuthor),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((authorDTO.getAuthorHeaderImage()) != null) { authorDTO.setAuthorHeaderImage((imageServer + (authorDTO.getAuthorHeaderImage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/912/buggy-version/momoko-backend-jpa.src.main.java.com.momoko.es.jpa.author.service.AuthorServiceImpl.java", "BodyUseAPI": ["com.momoko.es.api.author.dto.AuthorDTO.setAuthorHeaderImage((imageServer + (authorDTO.getAuthorHeaderImage())))", "com.momoko.es.api.author.dto.AuthorDTO.getAuthorHeaderImage()"], "Fixed commit": "b9fd1edc3e41fd52b8c98c973ddad9ebaabca49c", "Url": "https://api.github.com/repos/Maetro/MomokoWeb", "Date": "2018-10-30T00:03:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (param > (-1)) { uri = uri.substring(0, param); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4167/buggy-version/src.main.java.com.springboot.shiro.filter.PermissionFilter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "acb8c46cd8879fbfc26d6418ba4caac1508450ca", "Url": "https://api.github.com/repos/ztgreat/springboot-shiro", "Date": "2018-10-30T06:17:09Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(out.isEmpty())) { text.append(((\"DeltaDoc for \" + (type.toString())) + \"\\n\")); text.append((out + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2063/buggy-version/de.setsoftware.reviewtool.summary.src.de.setsoftware.reviewtool.summary.DeltaDocTechnique.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "bb0b7fb0feeabf4fbc297050937ed952b2a3482d", "Url": "https://api.github.com/repos/kristovschulz/reviewtool", "Date": "2018-04-24T14:16:17Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"--help\".equals(input)) { ru.tsc.bda.Echo.printHelpAndExit(); return; }else { try { consumers = java.lang.Integer.parseInt(input); } catch (java.lang.NumberFormatException e) { throw new java.lang.RuntimeException(((\"Number of consumers required as input, got \\\"\" + input) + \"\\\" instead.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1578/buggy-version/src.main.java.ru.tsc.bda.App.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "3c07a0b6eda30468df6789c88d0b107a321155ab", "Url": "https://api.github.com/repos/stasmihailov/trainee_task3", "Date": "2018-05-18T12:49:27Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.get(key)) instanceof java.util.List) { java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append(\"[\"); for (java.lang.Object item : ((java.util.List) (args.get(key)))) { sb.append(java.lang.String.format(\"\\\"%s\\\"\", ((java.lang.String) (item)))); } sb.append(\"]\"); value = sb.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4978/buggy-version/src.main.java.org.bigml.binding.resources.Source.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "04c8a6d5b2ad4c37ce4a6e01734c8930378678b0", "Url": "https://api.github.com/repos/javinp/bigml-java", "Date": "2018-07-23T12:40:46Z"},
{"Line": "=>1292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.currentGalaxyName.equalsIgnoreCase(\"galaxy.milky_way\"))) this.selectedParent = this.currentGalaxyMainSystem;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6432/buggy-version/src.main.java.com.mjr.extraplanets.client.gui.screen.CustomCelestialSelection.java", "BodyUseAPI": [], "Fixed commit": "84934936f4d82774b4db9b94c66e00003f91b892", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2018-02-19T00:31:41Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (settingChanged) { timelineList.setAdapter(null); trendList.setAdapter(null); mentionList.setAdapter(null); setTabContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8972/buggy-version/app.src.main.java.org.nuclearfog.twidda.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b7c6b89e31377d137364e1821a75726a02b73c0f", "Url": "https://api.github.com/repos/NudeDude/Shitter", "Date": "2018-03-27T20:32:38Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(beanFactory.containsBeanDefinition(entry.getKey()))) { beanFactory.registerBeanDefinition(entry.getKey(), entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6225/buggy-version/isle-sofa-boot-starter.src.main.java.com.alipay.sofa.isle.loader.DynamicSpringContextLoader.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, org.springframework.beans.factory.config.BeanDefinition>.getValue()", "org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(entry.getKey(),entry.getValue())", "java.util.Map.Entry<java.lang.String, org.springframework.beans.factory.config.BeanDefinition>.getKey()"], "Fixed commit": "be66043117b7527f61083584310ca7c5b81fc826", "Url": "https://api.github.com/repos/alipay/sofa-boot", "Date": "2018-08-02T02:16:51Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((manager) != null) { manager.getPlayer().stop(playIdleSong); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2622/buggy-version/src.main.java.com.ascargon.rocketshow.song.SetList.java", "BodyUseAPI": [], "Fixed commit": "44411e4de21e9a1f3a172783aaf23218cb99e9be", "Url": "https://api.github.com/repos/moritzvieli/RocketShow", "Date": "2018-01-28T17:13:11Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.mycat.MycatServer.getInstance().getConfig().getSystem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((system != null) && (system.isGlobalTableCheckSwitchOn())) result = io.mycat.server.interceptor.impl.GlobalTableUtil.interceptSQL(result, sqlType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9663/buggy-version/src.main.java.io.mycat.server.interceptor.impl.DefaultSqlInterceptor.java", "BodyUseAPI": [], "Fixed commit": "d3b4b454b42b39873e71a9253d5ca427523d73ed", "Url": "https://api.github.com/repos/lizhanke/Mycat-Server", "Date": "2016-01-07T03:49:09Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Looper.getMainLooper()) != (android.os.Looper.myLooper())) { com.eastwood.common.router.ActivityResultUtil.MainHandler mainHandler = new com.eastwood.common.router.ActivityResultUtil.MainHandler(android.os.Looper.getMainLooper()); mainHandler.post(new java.lang.Runnable() { @java.lang.Override public void run() { com.eastwood.common.router.ActivityResultUtil.InnerFragment innerFragment = com.eastwood.common.router.ActivityResultUtil.getFragment(activity); innerFragment.startForResult(intent, requestCode, callback); } }); }else { com.eastwood.common.router.ActivityResultUtil.InnerFragment innerFragment = com.eastwood.common.router.ActivityResultUtil.getFragment(activity); innerFragment.startForResult(intent, requestCode, callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4659/buggy-version/router.src.main.java.com.eastwood.common.router.ActivityResultUtil.java", "BodyUseAPI": [], "Fixed commit": "b675e11af5ff2976bc46516f2657a13664cbf43e", "Url": "https://api.github.com/repos/EastWoodYang/AnnoRouter", "Date": "2018-08-01T08:28:50Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2012/buggy-version/src.main.java.algorithms.stacks_queues.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "a6e61c290b05f20d8dca4c4a481a284a91caf28e", "Url": "https://api.github.com/repos/vorobey92/sandbox", "Date": "2018-08-14T08:28:21Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["genesis.getBlock().getHeader()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((header.getNumber()) == (genesisHeader.getNumber())) { previousHeader = header; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7262/buggy-version/pantheon.src.main.java.tech.pegasys.pantheon.util.BlockchainImporter.java", "BodyUseAPI": [], "Fixed commit": "5fa4ed6fb0a9e167bedeeac20270359a692330c9", "Url": "https://api.github.com/repos/macfarla/pantheon", "Date": "2018-10-26T19:10:03Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((diffx != 0.0) || (diffy != 0.0)) { com.t_oster.visicut.VisicutModel.getInstance().firePartUpdated(getSelectedPart()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1078/buggy-version/src.com.t_oster.visicut.gui.PreviewPanelKeyboardMouseHandler.java", "BodyUseAPI": [], "Fixed commit": "c2227a567ee4193411fa9723babd43e24d31130c", "Url": "https://api.github.com/repos/mgmax/VisiCut", "Date": "2018-08-22T17:12:31Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(q.getQuestionStateHistories().isEmpty())) { return q.getQuestionStateHistories().get(((q.getQuestionStateHistories().size()) - 1)).getDateOccurred().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9351/buggy-version/src.main.java.uk.gov.hmcts.reform.coh.controller.question.QuestionResponseMapper.java", "BodyUseAPI": [], "Fixed commit": "3566ecf0ce531ef663b505f2853a770ab0a6707a", "Url": "https://api.github.com/repos/hmcts/rpa-coh-continuous-online-resolution", "Date": "2018-07-06T15:09:52Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idx < 0) || (idx >= (size()))) { throw new java.lang.IndexOutOfBoundsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1092/buggy-version/SuperArray.java", "BodyUseAPI": [], "Fixed commit": "98bc1f8d30025af7db7ab4662d7c88b514137ce7", "Url": "https://api.github.com/repos/awang02/MKS21X-SuperArray", "Date": "2018-10-31T04:45:59Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i % 5) == 0) { java.lang.System.out.println(\"Buzz\"); }else if ((i % 3) == 0) { java.lang.System.out.println(\"Java\"); }else { java.lang.System.out.println(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1973/buggy-version/chapter3-JavaBuzz.exercises.JavaBuzz.java", "BodyUseAPI": ["java.io.PrintStream.println(int)"], "Fixed commit": "7aa450b7370ae1c2c5150b3d7d0ef193883ce386", "Url": "https://api.github.com/repos/asiaantczak/intro_to_java", "Date": "2018-07-27T15:20:41Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) getSupportActionBar().hide();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1462/buggy-version/Android.app.src.main.java.catglo.com.deliverydroid.homeScreen.HomeScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "69c5c171809880762a45c5e605be2c79c84e6251", "Url": "https://api.github.com/repos/marchold/DeliveryDroid_v3", "Date": "2018-10-15T15:09:07Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mCurrentIndex = savedInstanceState.getInt(com.example.thejcode24.geoquiz.QuizActivity.KEY_INDEX, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/311/buggy-version/GeoQuiz.app.src.main.java.com.example.thejcode24.geoquiz.QuizActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String,int)"], "Fixed commit": "6bdeceb8591f7575f7d823499861478311e5670e", "Url": "https://api.github.com/repos/thejcode24/Big-Nerd-Ranch-Android-3rd", "Date": "2018-09-15T22:11:56Z"},
{"Line": "=>929", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"(((\\\\s\\\\s)|(\\\\d\\\\d))?((\\\\s)|(\\\\d))((\\\\s)|(\\\\d)))\".equals(regex)) || (\"(((\\\\s\\\\s)|(\\\\d\\\\d))((\\\\s)|(\\\\d))((\\\\s)|(\\\\d)))\".equals(regex))) { if (val.isEmpty()) return true; reg = \"(\\\\s\\\\s|\\\\d\\\\d)(\\\\s|\\\\d)?(\\\\s|\\\\d)?\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9589/buggy-version/src.main.java.com.imsweb.validation.functions.MetafileContextFunctions.java", "BodyUseAPI": [], "Fixed commit": "6e5c6bbb5371a0366aa9533647809056d79664fd", "Url": "https://api.github.com/repos/imsweb/validation", "Date": "2018-08-29T18:34:26Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (vCrs != null) { invertYAxis = !(vCrs.isPositiveUpwards()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8304/buggy-version/graphics.src.main.java.uk.ac.rdg.resc.edal.graphics.Charting.java", "BodyUseAPI": ["uk.ac.rdg.resc.edal.position.VerticalCrs.isPositiveUpwards()"], "Fixed commit": "2e36101d852463a790a26b8601d63f19d4c7919b", "Url": "https://api.github.com/repos/Reading-eScience-Centre/edal-java", "Date": "2018-01-31T11:18:06Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dataDir.exists())) { dataDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2174/buggy-version/src.main.java.org.culpan.mythrasmanager.UserConfiguration.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "e5d0c03067e847ff8d7bf44fcb4910d534f7f966", "Url": "https://api.github.com/repos/hculpan/mythrasmanager", "Date": "2018-08-24T13:56:28Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProgressBar) != null) mProgressBar.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4267/buggy-version/app.src.main.java.com.example.sc1111.finastrahack.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "440ba47c5526492999fccfccff74ebf5a32b3215", "Url": "https://api.github.com/repos/SusanJRChen/FinastraHack", "Date": "2018-02-20T20:41:47Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eus.ixa.ixa.pipe.ml.tok.RuleBasedTokenizer.DEBUG) { java.lang.System.err.printf(\"ixa-pipe-tok tokenized %d tokens at %.2f tokens per second.%n\", noTokens, toksPerSecond); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6436/buggy-version/src.main.java.eus.ixa.ixa.pipe.ml.tok.RuleBasedTokenizer.java", "BodyUseAPI": [], "Fixed commit": "afdae2e9cb895ec827f045614a37b418720014cd", "Url": "https://api.github.com/repos/ixa-ehu/ixa-pipe-ml", "Date": "2018-10-16T09:45:50Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.buffer.ChannelBuffer.bytesBefore(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nonNullBytes >= 0) buffer.readByte();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2655/buggy-version/stomp-common.src.main.java.org.projectodd.stilts.stomp.protocol.StompFrameCodec.java", "BodyUseAPI": [], "Fixed commit": "1b7f3f6ec3092c2a64de56ccb9252c3cbc11eee9", "Url": "https://api.github.com/repos/scrible/stilts", "Date": "2018-03-02T22:25:49Z"},
{"Line": "=>1619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (entry != null) { newEntry.cookie = entry.cookie; newEntry.type_spec_flags = entry.type_spec_flags; newEntry.value = entry.value.copy(); }else { newEntry.value = org.robolectric.res.android.ResourceTypes.Res_value.NULL_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1479/buggy-version/resources.src.main.java.org.robolectric.res.android.CppAssetManager2.java", "BodyUseAPI": ["org.robolectric.res.android.ResourceTypes.Res_value.copy()"], "Fixed commit": "be7ada0ed0bc6dcb17ee38fa10610ff7aff0de11", "Url": "https://api.github.com/repos/robolectric/robolectric", "Date": "2018-08-14T21:45:06Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.paris.lutece.portal.service.util.AppPropertiesService.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(org.apache.commons.lang.StringUtils.isEmpty(strCriteriaKey))) && (!(org.apache.commons.lang.StringUtils.isEmpty(strCriteriaToken)))) { strParameter += java.text.MessageFormat.format(strCriteriaKey, strCriteriaToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1430/buggy-version/src.java.fr.paris.lutece.plugins.easyrulesbot.modules.ldap.service.SearchValueProcessor.java", "BodyUseAPI": ["java.text.MessageFormat.format(java.lang.String,java.lang.String)"], "Fixed commit": "8de3b484908040ab6840a1908cc7f375e1643e43", "Url": "https://api.github.com/repos/lutece-platform/lutece-chat-module-easyrulesbot-ldap", "Date": "2018-07-03T10:56:36Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUnique) { io.kommunicate.Kommunicate.startOrGetConversation(context, groupName, agents, bots, startChatHandler); }else { io.kommunicate.Kommunicate.startNewConversation(context, groupName, agents, bots, false, startChatHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7763/buggy-version/kommunicate.src.main.java.io.kommunicate.Kommunicate.java", "BodyUseAPI": [], "Fixed commit": "b26234eb344cc2d2452d268ccac59b04a9255455", "Url": "https://api.github.com/repos/Kommunicate-io/Kommunicate-Android-Chat-SDK", "Date": "2018-10-31T13:55:45Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportFragmentManager().getBackStackEntryCount()) > 1) { getSupportFragmentManager().popBackStack(); }else { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7763/buggy-version/kommunicateui.src.main.java.com.applozic.mobicomkit.uiwidgets.conversation.activity.ConversationActivity.java", "BodyUseAPI": [], "Fixed commit": "b26234eb344cc2d2452d268ccac59b04a9255455", "Url": "https://api.github.com/repos/Kommunicate-io/Kommunicate-Android-Chat-SDK", "Date": "2018-10-31T13:55:45Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((splitIndex == 0) || (splitIndex >= ((data.size()) - 1))) { java.lang.System.out.println(\"Adsas\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2154/buggy-version/JSAT.src.jsat.linear.vectorcollection.KDTree.java", "BodyUseAPI": [], "Fixed commit": "305d3ca49ae0d43e6163034c6b1ab2ee46d55682", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2018-01-17T23:16:52Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((file.contains(\"/\")) || (file.contains(\"\\\\\"))) { int index = (Main.isUnix) ? file.lastIndexOf(\"/\") : file.lastIndexOf(\"\\\\\"); java.lang.System.out.println(((index + \" : \") + (file.length()))); file = file.substring((index + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3527/buggy-version/TCPH2HClient.java", "BodyUseAPI": [], "Fixed commit": "a48f8eb6f57e111b95d1ba1caf74b7c9f8f4c8b5", "Url": "https://api.github.com/repos/Billith/TORrent-project", "Date": "2018-10-16T21:34:14Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (en.hasETypeFlag(Entity.ETYPE_FIGHTER_SQUADRON)) { autoVisualRange = 14; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/511/buggy-version/megamek.src.megamek.client.ui.swing.widget.GeneralInfoMapSet.java", "BodyUseAPI": [], "Fixed commit": "c6ed45529971c245a4883720b10818325b44ead1", "Url": "https://api.github.com/repos/mkerensky/megamek", "Date": "2018-04-20T20:51:44Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getHeader(AccessConstants.TOKEN)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(token)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3231/buggy-version/sys.src.main.java.com.zhp.sys.interceptor.SystemLogAspect.java", "BodyUseAPI": [], "Fixed commit": "001b6dbb95c6ec824348745d1eba20bb922baf8c", "Url": "https://api.github.com/repos/bioangel/lihe_website-backend", "Date": "2018-03-23T11:19:27Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.unidata.util.GuiUtils.showYesNoCancelDialog(<nulltype>,(\"Save changes to station model: \" + (stationModel.getName())),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (javax.swing.JOptionPane.NO_OPTION)) { clearAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2378/buggy-version/ucar.unidata.ui.symbol.StationModelCanvas.java", "BodyUseAPI": [], "Fixed commit": "b386c8660de829b2cf96589e09944a5f997bfaad", "Url": "https://api.github.com/repos/mcidasv/mcidasv", "Date": "2018-04-09T15:10:36Z"},
{"Line": "=>1664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parts.length()) > 0) { parts.append(value); value = parts.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5589/buggy-version/java_source.de.lmu.ifi.bio.watchdog.xmlParser.XMLParser.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "f23b628aa0c890f18b95d5067935d0fd66274278", "Url": "https://api.github.com/repos/klugem/watchdog", "Date": "2018-07-06T14:26:25Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (runConfig instanceof org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) { jet.setRemoteSlaveServerName(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).getServer()); jet.setLoggingRemoteWork(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).isLogRemoteExecutionLocally()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7822/buggy-version/plugins.engine-configuration.ui.src.main.java.org.pentaho.di.engine.ui.RunConfigurationDelegate.java", "BodyUseAPI": [], "Fixed commit": "ba7c5312630c0ff0fd3e2034c74a12d4e51694e5", "Url": "https://api.github.com/repos/bmorrise/pentaho-kettle", "Date": "2018-03-29T16:32:44Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jet.getRunConfiguration()) != null) { if (jet.getRunConfiguration().equals(key)) { try { org.pentaho.di.core.extension.ExtensionPointHandler.callExtensionPoint(job.getLogChannel(), KettleExtensionPoint.JobEntryTransSave.id, new java.lang.Object[]{ job, runConfig.getName() }); } catch (org.pentaho.di.core.exception.KettleException e) { spoonSupplier.get().getLog().logBasic((\"Unable to set run configuration in job \" + (job.getName()))); } jet.setRunConfiguration(runConfig.getName()); if (runConfig instanceof org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) { jet.setRemoteSlaveServerName(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).getServer()); jet.setLoggingRemoteWork(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).isLogRemoteExecutionLocally()); } jet.setChanged(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7822/buggy-version/plugins.engine-configuration.ui.src.main.java.org.pentaho.di.engine.ui.RunConfigurationDelegate.java", "BodyUseAPI": ["org.pentaho.di.job.entries.trans.JobEntryTrans.setLoggingRemoteWork(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).isLogRemoteExecutionLocally())", "org.pentaho.di.job.entries.trans.JobEntryTrans.getRunConfiguration()", "org.pentaho.di.job.entries.trans.JobEntryTrans.setRemoteSlaveServerName(((org.pentaho.di.engine.configuration.impl.pentaho.DefaultRunConfiguration) (runConfig)).getServer())", "org.pentaho.di.job.entries.trans.JobEntryTrans.setRunConfiguration(runConfig.getName())", "org.pentaho.di.job.entries.trans.JobEntryTrans.setChanged()", "jet.getRunConfiguration().equals(java.lang.String)"], "Fixed commit": "ba7c5312630c0ff0fd3e2034c74a12d4e51694e5", "Url": "https://api.github.com/repos/bmorrise/pentaho-kettle", "Date": "2018-03-29T16:32:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (process != null) { process.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2031/buggy-version/zkc.src.main.java.android.serialport.api.SerialPort.java", "BodyUseAPI": ["java.lang.Process.destroy()"], "Fixed commit": "11032bb5b4a05b346029e31135a34de5893033ee", "Url": "https://api.github.com/repos/bingohf/BarScanNFCWriter", "Date": "2018-03-11T01:55:43Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((weightedElements) == null) || (weightedElements.isEmpty())) { throw new com.softwaremagico.tm.random.exceptions.InvalidRandomElementSelectedException(\"No elements to select\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3852/buggy-version/think-machine-core.src.main.java.com.softwaremagico.tm.random.RandomSelector.java", "BodyUseAPI": [], "Fixed commit": "de376a65639405f6b02832aef8956f60575db032", "Url": "https://api.github.com/repos/jorgehortelano/ThinkMachine", "Date": "2018-07-23T08:32:05Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) != (serverNum)) { array_of_nodes[serverNum].addTreeNeighbours(parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5503/buggy-version/src.Server.java", "BodyUseAPI": [], "Fixed commit": "5211f8b18129098e5a1c949e5a172431257bb158", "Url": "https://api.github.com/repos/tanussingh/Project-2", "Date": "2018-10-29T16:11:38Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endDate.length()) < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6995/buggy-version/src.main.java.se.kth.id1212.globalapps.view.ApplicationCreator.java", "BodyUseAPI": [], "Fixed commit": "3a3d332abd5b389f218254298930dbae9f546f22", "Url": "https://api.github.com/repos/Zhirpoon/GlobAppProj", "Date": "2018-03-06T15:08:54Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startDate.length()) < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6995/buggy-version/src.main.java.se.kth.id1212.globalapps.view.ApplicationCreator.java", "BodyUseAPI": [], "Fixed commit": "3a3d332abd5b389f218254298930dbae9f546f22", "Url": "https://api.github.com/repos/Zhirpoon/GlobAppProj", "Date": "2018-03-06T15:08:54Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (term instanceof it.unibz.inf.ontop.spec.mapping.serializer.BNode) { sb.append(((it.unibz.inf.ontop.spec.mapping.serializer.BNode) (term)).getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8062/buggy-version/mapping.sql.core.src.main.java.it.unibz.inf.ontop.spec.mapping.serializer.TargetQueryRenderer.java", "BodyUseAPI": [], "Fixed commit": "f4d5c855c3f881cd7def3ba449c0fb386aec7012", "Url": "https://api.github.com/repos/fanavarro/ontop", "Date": "2018-02-13T12:08:42Z"},
{"Line": "=>1838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["one.lindegaard.MobHunting.PlaceholderAPICompat.getPlaceHolders().get(getPlayer(killer, killed).getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (p != null) { p.setTotal_assists(((p.getTotal_assists()) + 1)); one.lindegaard.MobHunting.PlaceholderAPICompat.getPlaceHolders().put(getPlayer(killer, killed).getUniqueId(), p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4466/buggy-version/src.one.lindegaard.MobHunting.MobHuntingManager.java", "BodyUseAPI": ["one.lindegaard.MobHunting.placeholder.PlaceHolderData.setTotal_assists(((p.getTotal_assists()) + 1))", "one.lindegaard.MobHunting.placeholder.PlaceHolderData.getTotal_assists()", "one.lindegaard.MobHunting.PlaceholderAPICompat.getPlaceHolders().put(getPlayer(killer, killed).getUniqueId(),one.lindegaard.MobHunting.placeholder.PlaceHolderData)"], "Fixed commit": "3d55e504af3649c6caa3903b0566769232466676", "Url": "https://api.github.com/repos/Rocologo/MobHunting", "Date": "2018-07-31T13:38:15Z"},
{"Line": "=>1831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["one.lindegaard.MobHunting.PlaceholderAPICompat.getPlaceHolders().get(getPlayer(killer, killed).getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (p != null) { p.setTotal_kills(((p.getTotal_kills()) + 1)); one.lindegaard.MobHunting.PlaceholderAPICompat.getPlaceHolders().put(getPlayer(killer, killed).getUniqueId(), p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4466/buggy-version/src.one.lindegaard.MobHunting.MobHuntingManager.java", "BodyUseAPI": ["one.lindegaard.MobHunting.PlaceholderAPICompat.getPlaceHolders().put(getPlayer(killer, killed).getUniqueId(),one.lindegaard.MobHunting.placeholder.PlaceHolderData)", "one.lindegaard.MobHunting.placeholder.PlaceHolderData.setTotal_kills(((p.getTotal_kills()) + 1))", "one.lindegaard.MobHunting.placeholder.PlaceHolderData.getTotal_kills()"], "Fixed commit": "3d55e504af3649c6caa3903b0566769232466676", "Url": "https://api.github.com/repos/Rocologo/MobHunting", "Date": "2018-07-31T13:38:15Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((machineOS.length()) == 8) { java.lang.System.out.println((\"OS of machine is: \" + machineOS)); fr = new java.io.FileReader(new java.io.File(\"src/p39.obj\")); fr2 = new java.io.FileReader(new java.io.File(\"src/p39.obj\")); }else { java.lang.System.out.println(\"OS of machine is not Mac \"); fr = new java.io.FileReader(new java.io.File(\"src\\\\p39.obj\")); fr2 = new java.io.FileReader(new java.io.File(\"src\\\\p39.obj\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4101/buggy-version/src.engine.OBJLoader.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "2edaa3afae7554d3e1c688d20ea19fdf564527e8", "Url": "https://api.github.com/repos/SimonRoelandt/PenO-Testbed-poging-3", "Date": "2018-04-17T12:43:21Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bookings.getNow(room)) != null) { flux.message(util.LineProtocolUtil.protocolLine(room, bookings.getNow(room))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3807/buggy-version/src.main.java.speaker.CustomerNameSpeaker.java", "BodyUseAPI": ["util.LineProtocolUtil.protocolLine(building.Room,bookings.getNow(room))", "speaker.FluxLogger.message(util.LineProtocolUtil.protocolLine(room, bookings.getNow(room)))", "dao.BookingDAO.getNow(building.Room)"], "Fixed commit": "9b8b26a42e3816231fe51c92871edd3c014fde39", "Url": "https://api.github.com/repos/jstelwag/iot-monitor", "Date": "2018-01-02T19:22:59Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (norm < 0.01) { norm = 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2466/buggy-version/src.main.java.io.anserini.util.FeatureVector.java", "BodyUseAPI": [], "Fixed commit": "5325d28d21768f93270cda0660364ec17ca9d688", "Url": "https://api.github.com/repos/Victor0118/Anserini", "Date": "2018-08-02T17:28:03Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (done) { java.util.Stack<AirportNode> backtrack = new java.util.Stack<>(); backtrack.push(target); AirportNode currentAirport = target; double step = distance.get(target); AirportNode minAirport = null; double minDistance = java.lang.Double.MAX_VALUE; while ((step - 1) >= 0) { for (AirportNode nextAirport : currentAirport.getNeighborAirports()) { if ((distance.get(nextAirport)) < minDistance) { minAirport = nextAirport; minDistance = distance.get(minAirport); } } step = distance.get(minAirport); backtrack.push(minAirport); currentAirport = minAirport; } java.util.List<AirportNode> finalPath = new java.util.LinkedList<>(); while (!(backtrack.isEmpty())) { finalPath.add(backtrack.pop()); } for (AirportNode test : finalPath) { java.lang.System.out.println(test.getNodeName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7333/buggy-version/FlightPlan.java", "BodyUseAPI": [], "Fixed commit": "d5413752882f61e8d2a1311faf79b22391cb25f2", "Url": "https://api.github.com/repos/JohnMushattWPI/AirTrafficMap", "Date": "2018-01-09T15:50:32Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.getNodeType()) == (org.w3c.dom.Node.TEXT_NODE)) { if ((node.getNodeValue().trim().length()) > 0) { this.setText(node.getNodeValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9498/buggy-version/src.net.kurttrue.www.isgihgen.EasyElement.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeValue()", "java.lang.String.length()", "net.kurttrue.www.isgihgen.EasyElement.setText(java.lang.String)", "java.lang.String.trim()", "org.w3c.dom.Node.getNodeValue()"], "Fixed commit": "2c83f097950ad3607a385359baec28f227684427", "Url": "https://api.github.com/repos/kurttrue/isgihgen", "Date": "2018-02-03T15:50:44Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.toString(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rawROEValue.length()) < 4) { rawROEValue = rawROEValue + \"00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4882/buggy-version/src.main.java.com.timelessapps.javafxtemplate.helpers.scraper.ND3ROE.java", "BodyUseAPI": [], "Fixed commit": "082678f4c2c1021dc66c023424c04d7cc0adbf96", "Url": "https://api.github.com/repos/mt9304/stock-analyzer", "Date": "2018-09-27T05:33:36Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.toString(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rawROEValue.length()) < 4) { rawROEValue = rawROEValue + \"00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4882/buggy-version/src.main.java.com.timelessapps.javafxtemplate.helpers.scraper.ND3ROE.java", "BodyUseAPI": [], "Fixed commit": "082678f4c2c1021dc66c023424c04d7cc0adbf96", "Url": "https://api.github.com/repos/mt9304/stock-analyzer", "Date": "2018-09-27T05:33:36Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((guiTest.texture2D) == null) || ((guiTest.matrix3f) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6377/buggy-version/graphics.src.main.java.net.warpgame.engine.graphics.rendering.gui.GuiRenderer.java", "BodyUseAPI": [], "Fixed commit": "2422424ceac879ed0bd05ac9288db00b70204bd1", "Url": "https://api.github.com/repos/WarpOrganization/warp", "Date": "2018-08-14T20:16:31Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(result.isRevert())) { program.spendAllEnergy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8240/buggy-version/src.main.java.org.tron.common.runtime.Runtime.java", "BodyUseAPI": [], "Fixed commit": "afb118ef9d827bed774a639fa106bda0d2d7656c", "Url": "https://api.github.com/repos/tronprotocol/java-tron", "Date": "2018-08-21T09:11:22Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.isEmpty()) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3385/buggy-version/dhis-2.dhis-api.src.main.java.org.hisp.dhis.textpattern.StringMethodType.java", "BodyUseAPI": [], "Fixed commit": "48219a96d70f14a9a35d56c6b4bd58d774f518a8", "Url": "https://api.github.com/repos/hispindia/dhis2-Core", "Date": "2018-05-24T12:50:21Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((object.getPageId()) != null) && ((object.getPageId()) != \"\")) { a3.com.convo.GlideApp.with(context).load(object.getCoverUrl()).into(ivCover); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9527/buggy-version/app.src.main.java.a3.com.convo.adapters.CardAdapter.java", "BodyUseAPI": ["a3.com.convo.GlideApp.with(context).load(object.getCoverUrl())", "a3.com.convo.Models.Page.getCoverUrl()", "a3.com.convo.GlideApp.with(context).load(object.getCoverUrl()).into(android.widget.ImageView)"], "Fixed commit": "d2ac8f3fbcfda9e8fad57dc9f0fb5ad1209481db", "Url": "https://api.github.com/repos/alex-goodman/convo", "Date": "2018-07-24T01:01:33Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (exchangesymbol.equals(\"NIFTY\")) { exchangesymbol = \"NSENIFTY\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/858/buggy-version/src.com.incurrency.algorithms.eodmaintenance.Eodmaintenance.java", "BodyUseAPI": [], "Fixed commit": "77415110c0eef94277f88b1c3ef85fda5248337f", "Url": "https://api.github.com/repos/pankaj3009/strategies", "Date": "2018-07-10T08:28:40Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ograndebe.x2d.Sheet.getRow(sheet.getFirstRowNum())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firstRow.getCell(firstRow.getLastCellNum())) == null) { lastCell--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5591/buggy-version/src.main.java.com.github.ograndebe.x2d.DataRetriever.java", "BodyUseAPI": [], "Fixed commit": "f10d87b6a662afc3bea3766872cc2344b2e28015", "Url": "https://api.github.com/repos/ograndebe/x2d", "Date": "2018-03-20T11:10:40Z"},
{"Line": "=>7496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smartdevicelink.proxy.SystemCapabilityManager.getCapability(SystemCapabilityType.VIDEO_STREAMING)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (capability != null) { resolution = capability.getPreferredResolution(); }else { com.smartdevicelink.proxy.DisplayCapabilities dispCap = ((com.smartdevicelink.proxy.DisplayCapabilities) (_systemCapabilityManager.getCapability(SystemCapabilityType.DISPLAY))); if (dispCap != null) { resolution = dispCap.getScreenParams().getImageResolution(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4850/buggy-version/sdl_android.src.main.java.com.smartdevicelink.proxy.SdlProxyBase.java", "BodyUseAPI": ["com.smartdevicelink.proxy.VideoStreamingCapability.getPreferredResolution()"], "Fixed commit": "1767363782e56b4ca8c6096eb36a1743b8917631", "Url": "https://api.github.com/repos/shiniwat/sdl_android-1", "Date": "2018-10-17T15:09:28Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (parameters != null) { for (java.lang.Object value : parameters.values()) { internalFormat(rpcVersion, value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4850/buggy-version/sdl_android.src.main.java.com.smartdevicelink.proxy.RPCStruct.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, java.lang.Object>.values()"], "Fixed commit": "1767363782e56b4ca8c6096eb36a1743b8917631", "Url": "https://api.github.com/repos/shiniwat/sdl_android-1", "Date": "2018-10-17T15:09:28Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mageRoll == 2) { mage.fireBall(mageWeapon, barbarian); }else { mage.fireWall(mageWeapon, barbarian); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9577/buggy-version/week-03.day-05.PVP.src.Main.java", "BodyUseAPI": [], "Fixed commit": "25e3d2d8aeb24f5e5e81e05b4313f18f386f6348", "Url": "https://api.github.com/repos/green-fox-academy/IstvanN", "Date": "2018-08-17T10:33:17Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.size()) == 0) { this._hasNext = false; return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6288/buggy-version/src.main.java.sparksoniq.spark.iterator.SparkRuntimeIterator.java", "BodyUseAPI": [], "Fixed commit": "7bbce93d6c3d3db25079b80506c24286e67ca2df", "Url": "https://api.github.com/repos/Sparksoniq/sparksoniq", "Date": "2018-08-23T22:07:45Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerAlreadyLoggedIn()) Server.userOnline.remove(currentPlayer.getUserName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9293/buggy-version/server.src.main.java.model.ClientHandler.java", "BodyUseAPI": [], "Fixed commit": "a17c6734a79479d30d659b3f56743099770706d1", "Url": "https://api.github.com/repos/elenadonts/goGame", "Date": "2018-03-13T12:02:42Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<it.communitysmart.and.client.model.Article>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((mArticle.getComments()) != null) && (!(mArticle.getComments().isEmpty()))) { holder.txtTotalComments.setText(it.communitysmart.and.utils.Utils.getTotalComments(mArticle.getComments())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5081/buggy-version/app.src.main.java.it.communitysmart.and.ui.adapter.ArticleListRecycleAdapter.java", "BodyUseAPI": ["it.communitysmart.and.client.model.Article.getComments()", "android.widget.TextView.setText(it.communitysmart.and.utils.Utils.getTotalComments(mArticle.getComments()))", "it.communitysmart.and.utils.Utils.getTotalComments(mArticle.getComments())"], "Fixed commit": "9155318e61400baf597178c6c713e442b43a06a7", "Url": "https://api.github.com/repos/Community-Tech/android", "Date": "2018-01-24T10:14:38Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ymwang.park.service.impl.ChargeMapper.parkCharge(addChargeDto.getUserId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (charge == null) { throw new com.ymwang.park.utils.BizException(\"api.charge.noPark\", \"\u60a8\u6ca1\u6709\u8f66\u8f86\u9a76\u5165\u8bb0\u5f55\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6782/buggy-version/src.main.java.com.ymwang.park.service.impl.ChargeServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1da4ab70ed9aff244d3ec19c3f2a2235a3f7afdd", "Url": "https://api.github.com/repos/RemixSeven/park", "Date": "2018-05-29T14:16:52Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return new com.esri.core.geometry.ogc.OGCMultiPoint(this.getEsriSpatialReference());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6351/buggy-version/src.main.java.com.esri.core.geometry.ogc.OGCCurve.java", "BodyUseAPI": [], "Fixed commit": "9d596176fa4d6bd663590a7d1a32d911996b0c2a", "Url": "https://api.github.com/repos/Esri/geometry-api-java", "Date": "2018-05-11T16:45:55Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6351/buggy-version/src.main.java.com.esri.core.geometry.ogc.OGCLineString.java", "BodyUseAPI": [], "Fixed commit": "9d596176fa4d6bd663590a7d1a32d911996b0c2a", "Url": "https://api.github.com/repos/Esri/geometry-api-java", "Date": "2018-05-11T16:45:55Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTabbedPane.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3239/buggy-version/src.main.java.ch.psi.utils.swing.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "757abf1cb4f1ef5ff6dcd1ff2422d02b84eb1ba7", "Url": "https://api.github.com/repos/paulscherrerinstitute/pshell", "Date": "2018-08-29T11:54:15Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSuccessful) { formatedLogBuilder.append(compileLog.replace(\"\\n\", \"\\n\\n\")); formatedLogBuilder.append(\"\\nCompile Error, Time = 0 ms, Memory = 0 KB, Score = 0.\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1284/buggy-version/judger.src.main.java.org.verwandlung.voj.judger.application.ApplicationDispatcher.java", "BodyUseAPI": [], "Fixed commit": "cfcfe408d1e39dfdf3ba75a63037c8e09a7c405e", "Url": "https://api.github.com/repos/hzxie/voj", "Date": "2018-02-21T13:06:57Z"},
{"Line": "=>786", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.danikula.videocache.HttpProxyCacheServer.getCacheFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(videoFile.exists())) { if (!(videoFile.getParentFile().exists())) { videoFile.getParentFile().mkdirs(); } videoFile.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9434/buggy-version/app.src.main.java.me.ccrama.redditslide.util.GifUtils.java", "BodyUseAPI": ["java.io.File.exists()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.mkdirs()", "java.io.File.createNewFile()"], "Fixed commit": "008d7feddab3f1e4e67a66e61fd9297908ba8fd6", "Url": "https://api.github.com/repos/PiwwowPants/Slide", "Date": "2018-02-22T02:49:50Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["basketbandit.core.modules.ModuleMusic.getMusicManager(e.getGuild().getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (manager.player.isPaused()) { manager.player.setPaused(false); e.getTextChannel().sendMessage(\"Resuming playback of...\").queue(); new basketbandit.core.commands.CommandCurrentTrack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6990/buggy-version/src.main.java.basketbandit.core.commands.CommandPlay.java", "BodyUseAPI": ["manager.player.setPaused(boolean)"], "Fixed commit": "d799305f325bd2554e75e8c85cf49a65da8908b1", "Url": "https://api.github.com/repos/BasketBandit/BasketBandit-Java", "Date": "2018-05-25T18:17:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCheckedIn()) { charges.add(new hotel.entities.ServiceCharge(serviceType, cost)); java.lang.System.out.println(\"Service charge has been added\"); }else { java.lang.System.out.println(\"There are not any booking rooms , Cannot be add service record\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6506/buggy-version/entities.Booking.java", "BodyUseAPI": [], "Fixed commit": "15b43e44ccfb718a93136a0952f8ba94eae0e554", "Url": "https://api.github.com/repos/muthukumaranapcpropct/Assignment4", "Date": "2018-10-15T10:29:54Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(\".\")) { input = \"0.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8491/buggy-version/app.src.main.java.zz.interactivecalculatorstage2.maths.Calculation.java", "BodyUseAPI": [], "Fixed commit": "5f4ddc5e892f7b59d8bd0eee0e9642ae1b9842a7", "Url": "https://api.github.com/repos/ankit-learns/interactive-calculator-stage2", "Date": "2018-02-12T19:41:16Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(\".\")) { input = \"0.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8491/buggy-version/app.src.main.java.zz.interactivecalculatorstage2.maths.Calculation.java", "BodyUseAPI": [], "Fixed commit": "5f4ddc5e892f7b59d8bd0eee0e9642ae1b9842a7", "Url": "https://api.github.com/repos/ankit-learns/interactive-calculator-stage2", "Date": "2018-02-12T19:41:16Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetAngle > (java.lang.Math.toRadians(270))) && ((pAngle) < ((java.lang.Math.PI) / 2))) { pAngle += 2 * (java.lang.Math.PI); }else if (((pAngle) > (java.lang.Math.toRadians(270))) && (targetAngle < ((java.lang.Math.PI) / 2))) { targetAngle += 2 * (java.lang.Math.PI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7400/buggy-version/src.Missile.java", "BodyUseAPI": [], "Fixed commit": "0d9c3112ca12da130076239621b7e27b1d1962dd", "Url": "https://api.github.com/repos/BiscuitDarren/KingOfTheSkies", "Date": "2018-05-09T18:56:14Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.parseBoolean(respBody.getString(\"isMemberIdExisting\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isMemberIdExist) { isSSNExist = java.lang.Boolean.parseBoolean(respBody.getString(\"isSSNExisting\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5466/buggy-version/src.main.cs.batch.POSItemProcessor.java", "BodyUseAPI": [], "Fixed commit": "27ca609ad8cb97e0d058503eb994dac6e305f7f2", "Url": "https://api.github.com/repos/shaunak-kar/cs-batch-poc", "Date": "2018-10-17T09:51:19Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstCard) isFirstCard = !(isFirstCard);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7815/buggy-version/app.src.main.java.hajaredeluxe.cardsagainsthumanity.core.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "9403a1d9aac6d8529470ef95804a542ac5758aab", "Url": "https://api.github.com/repos/maakinoh/EvilCards", "Date": "2018-04-07T14:25:29Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (inputStream != null) { try { inputStream.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9661/buggy-version/smart-home-server.src.smarthome.appliance.Light.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "f8cd332b96eadbd58d46265e5917db67e17f21f9", "Url": "https://api.github.com/repos/WallfacerRZD/SmartHomeSystem", "Date": "2018-06-12T01:56:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dell.petshow.vtas.mapper.SpUptimeMapper.selectLatestOneByArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (spUptime != null) { java.lang.String latestVersion = spUptime.getVersion(); if (versionMap.containsKey(latestVersion)) { versionMap.put(latestVersion, ((versionMap.get(latestVersion)) + 1)); }else { versionMap.put(latestVersion, 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8354/buggy-version/src.main.java.com.dell.petshow.vtas.service.impl.ArrayInfoServiceImpl.java", "BodyUseAPI": ["com.dell.petshow.vtas.entity.SpUptime.getVersion()"], "Fixed commit": "4db5b03bdedee420cd656b66317dfdf2d978ff53", "Url": "https://api.github.com/repos/mpthink/performanceWeb", "Date": "2018-06-04T09:50:40Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vars.length) > 0) { var0 = vars[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/913/buggy-version/src.main.java.com.renjietech.sms.controller.IndexController.java", "BodyUseAPI": [], "Fixed commit": "85f47914089447d9413b822eefbf5ae99e857738", "Url": "https://api.github.com/repos/ssyangchn/sms", "Date": "2018-04-03T07:30:23Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query1.length()) < 21) { query1 += \"WHERE \"; }else { query1 += \"AND \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/79/buggy-version/app.src.main.java.com.geotask.myapplication.QueryBuilder.SQLQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "56f6017b0f349e69fa364076ba4798f3d638266d", "Url": "https://api.github.com/repos/CMPUT301W18T23/GeoTask", "Date": "2018-04-07T17:47:43Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query1.length()) < 21) { query1 += \"WHERE \"; }else { query1 += \"AND \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/79/buggy-version/app.src.main.java.com.geotask.myapplication.QueryBuilder.SQLQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "56f6017b0f349e69fa364076ba4798f3d638266d", "Url": "https://api.github.com/repos/CMPUT301W18T23/GeoTask", "Date": "2018-04-07T17:47:43Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent.getBooleanExtra(Intent.EXTRA_REPLACING, false)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9011/buggy-version/app.src.main.java.eu.faircode.xlua.XService.java", "BodyUseAPI": [], "Fixed commit": "d69873acb64fa53add2e76a6cce599d79ef88702", "Url": "https://api.github.com/repos/M66B/XPrivacyLua", "Date": "2018-01-07T09:04:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.noeska.dynamicblocksmod.item.ItemBase.1.getName(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) return defaultLook;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/619/buggy-version/src.main.java.com.noeska.dynamicblocksmod.item.ItemBase.java", "BodyUseAPI": [], "Fixed commit": "ba9a589543d7f73ba14d2447ab959ece4d4661ee", "Url": "https://api.github.com/repos/mvdhoning/dynamicblocks", "Date": "2018-01-28T15:35:42Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (createUnambiguous) { java.util.regex.Matcher wwwMatcher = uk.bl.wa.util.Normalisation.WWW_PREFIX.matcher(url); if (wwwMatcher.matches()) { url = (wwwMatcher.group(1)) + (wwwMatcher.group(2)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6297/buggy-version/warc-indexer.src.main.java.uk.bl.wa.util.Normalisation.java", "BodyUseAPI": [], "Fixed commit": "811ba797126716069307c23d5328e844c94511c9", "Url": "https://api.github.com/repos/netarchivesuite/webarchive-discovery", "Date": "2018-05-28T11:33:25Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bouncycastle.openssl.PEMParser.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parsed instanceof org.bouncycastle.openssl.PEMKeyPair)) { throw new org.cloudfoundry.credhub.util.PrivateKeyReader.UnsupportedFormatException(\"format of private key is not supported.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9397/buggy-version/src.main.java.org.cloudfoundry.credhub.util.PrivateKeyReader.java", "BodyUseAPI": [], "Fixed commit": "4963fc096b91fff021f0c584ea1b0f6b4c5e5cfa", "Url": "https://api.github.com/repos/cloudfoundry-incubator/credhub", "Date": "2018-02-09T17:13:08Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bouncycastle.openssl.PEMParser.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parsed instanceof org.bouncycastle.openssl.PEMKeyPair)) { throw new org.cloudfoundry.credhub.util.PrivateKeyReader.UnsupportedFormatException(\"format of private key is not supported.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9397/buggy-version/src.main.java.org.cloudfoundry.credhub.util.PrivateKeyReader.java", "BodyUseAPI": [], "Fixed commit": "4963fc096b91fff021f0c584ea1b0f6b4c5e5cfa", "Url": "https://api.github.com/repos/cloudfoundry-incubator/credhub", "Date": "2018-02-09T17:13:08Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (healthy) { fileState = smartClient.getFileState(src); if (fileState.getFileStage().equals(FileState.FileStage.PROCESSING)) { throw new java.io.IOException((((\"Cannot open \" + src) + \" when it is under PROCESSING to \") + (fileState.getFileType()))); } }else { fileState = new org.smartdata.model.FileState(src, org.smartdata.model.FileState.FileType.NORMAL, org.smartdata.model.FileState.FileStage.DONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/376/buggy-version/smart-hadoop-support.smart-hadoop-client.src.main.java.org.smartdata.hdfs.client.SmartDFSClient.java", "BodyUseAPI": [], "Fixed commit": "8bb09a1088d608f403669597520024a7116bf263", "Url": "https://api.github.com/repos/PHILO-HE/SSM", "Date": "2018-02-01T09:30:12Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chessGame.ChessBoard.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chessBoard.isEnemy(this, destination)) { throw new java.lang.RuntimeException(\"\uac00\ub824\ub294 \uc704\uce58\uc5d0 \uc801\uad70\uc774 \uc788\uc2b5\ub2c8\ub2e4.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1411/buggy-version/src.main.java.pieces.unitInfo.PawnInfo.java", "BodyUseAPI": [], "Fixed commit": "86feebb1b31e10b5d2c108ef4c16a85d6ba87832", "Url": "https://api.github.com/repos/LarryJung/java-chess", "Date": "2018-09-21T09:34:49Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.child(\"lon\").getValue()", "dataSnapshot.child(\"lat\").getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((latObj == null) || (lonObj == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7987/buggy-version/app.src.main.java.com.example.arunathungathurthi.tracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b5bced4f8091c69307e409a1a21832bd62c360ef", "Url": "https://api.github.com/repos/aruna79/Trackerapp", "Date": "2018-07-25T22:20:16Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (title != null) { request.setAttribute(\"title\", title); }else { request.setAttribute(\"title\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6303/buggy-version/project2.src.main.java.Editor.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "52e5889de880c0ad81f07ff7c06991eff0d0f354", "Url": "https://api.github.com/repos/Masami96/CS144", "Date": "2018-01-28T06:58:19Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (body != null) { request.setAttribute(\"body\", body); }else { request.setAttribute(\"body\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6303/buggy-version/project2.src.main.java.Editor.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "52e5889de880c0ad81f07ff7c06991eff0d0f354", "Url": "https://api.github.com/repos/Masami96/CS144", "Date": "2018-01-28T06:58:19Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((binder) != null) { binder.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9017/buggy-version/android.src.main.java.guichaguri.trackplayer.TrackModule.java", "BodyUseAPI": [], "Fixed commit": "3f8da8b0633599ada5f3917d9a69b88af3fd07d9", "Url": "https://api.github.com/repos/Voxist/react-native-track-player", "Date": "2018-04-12T08:57:52Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.userInput)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (userInput.getText().toString().equals(userName)) { java.util.List<java.lang.String> textArray = new java.util.ArrayList<java.lang.String>(2); textArray.add(\"Ah, nice.\"); textArray.add(((\"Welcome back \" + (userName)) + \"!\")); animateText(textArray, new survey.android.futuretek.ch.ft_survey.AnimationListDone() { public void done() { activateNextButton(); } }); }else { getDatabase().put(\"usersName\", userInput.getText().toString()); java.util.List<java.lang.String> textArray = new java.util.ArrayList<java.lang.String>(2); textArray.add(\"Ah, nice.\"); textArray.add(((\"Hi \" + (userName)) + \"! You have been added to the database!\")); animateText(textArray, new survey.android.futuretek.ch.ft_survey.AnimationListDone() { public void done() { activateNextButton(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3582/buggy-version/app.src.main.java.survey.android.futuretek.ch.ft_survey.MainActivity.java", "BodyUseAPI": ["userInput.getText().toString()", "getDatabase().put(java.lang.String,userInput.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "b5a5fb088eb9a58e74ac95feb3d8a3a79406a736", "Url": "https://api.github.com/repos/metafounder/android", "Date": "2018-05-13T12:38:44Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(alarmBuilder.getRelatedAlarmList().isEmpty())) { java.util.List<org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm> relatedAlarmsWithExclusions = alarmBuilder.getRelatedAlarmList().stream().map(org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm::newBuilder).map(org.opennms.features.kafka.producer.AlarmEqualityChecker.Exclusions::defaultExclusions).map(OpennmsModelProtos.Alarm.Builder::build).collect(java.util.stream.Collectors.toList()); alarmBuilder.clearRelatedAlarm(); relatedAlarmsWithExclusions.forEach(alarmBuilder::addRelatedAlarm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3500/buggy-version/features.kafka.producer.src.main.java.org.opennms.features.kafka.producer.AlarmEqualityChecker.java", "BodyUseAPI": ["alarmBuilder.getRelatedAlarmList().stream().map(org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm::newBuilder).map(org.opennms.features.kafka.producer.AlarmEqualityChecker.Exclusions::defaultExclusions).map(OpennmsModelProtos.Alarm.Builder::build)", "OpennmsModelProtos.Alarm.Builder.clearRelatedAlarm()", "alarmBuilder.getRelatedAlarmList().stream().map(org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm::newBuilder)", "alarmBuilder.getRelatedAlarmList().stream()", "java.util.List<OpennmsModelProtos.Alarm>.forEach(alarmBuilder::addRelatedAlarm)", "alarmBuilder.getRelatedAlarmList().stream().map(org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm::newBuilder).map(org.opennms.features.kafka.producer.AlarmEqualityChecker.Exclusions::defaultExclusions).map(OpennmsModelProtos.Alarm.Builder::build).collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)", "OpennmsModelProtos.Alarm.Builder.getRelatedAlarmList()", "alarmBuilder.getRelatedAlarmList().stream().map(org.opennms.features.kafka.producer.model.OpennmsModelProtos.Alarm::newBuilder).map(org.opennms.features.kafka.producer.AlarmEqualityChecker.Exclusions::defaultExclusions)"], "Fixed commit": "1b95d397150be7032e4934d6f08eaf32840616d6", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2018-09-14T21:56:59Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entry.getValue().isEmpty())) { for (java.lang.String offering : entry.getValue()) { observationTypes.addAll(getObservationTypes(offering)); } }else { observationTypes.addAll(getObservationTypes(entry.getKey())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9599/buggy-version/core.gc-dao.src.main.java.org.n52.sos.ds.GetCapabilitiesDAO.java", "BodyUseAPI": ["org.n52.sos.ds.GetCapabilitiesDAO.getObservationTypes(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.util.Set<java.lang.String>>.getKey()", "java.util.Map.Entry<java.lang.String, java.util.Set<java.lang.String>>.getValue()", "java.util.Set<java.lang.String>.addAll(java.util.Collection<java.lang.String>)"], "Fixed commit": "76fb7c0da6a2a7a6f4b210bb4d4710541ccf9ed5", "Url": "https://api.github.com/repos/52North/SOS", "Date": "2018-06-29T06:37:07Z"},
{"Line": "=>1181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entry.getValue().isEmpty())) { for (java.lang.String offering : entry.getValue()) { procedures.addAll(getProceduresForOffering(offering, version)); } }else { procedures.addAll(getProceduresForOffering(entry.getKey(), version)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9599/buggy-version/core.gc-dao.src.main.java.org.n52.sos.ds.GetCapabilitiesDAO.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.util.Set<java.lang.String>>.getValue()", "org.n52.sos.ds.GetCapabilitiesDAO.getProceduresForOffering(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.util.Set<java.lang.String>>.getKey()", "java.util.Collection<java.lang.String>.addAll(java.util.Collection<java.lang.String>)"], "Fixed commit": "76fb7c0da6a2a7a6f4b210bb4d4710541ccf9ed5", "Url": "https://api.github.com/repos/52North/SOS", "Date": "2018-06-29T06:37:07Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((again = new java.util.Scanner(java.lang.System.in).nextLine()).length()) != 0) { switch (again.charAt(0)) { case 'n' : case 'N' : return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7562/buggy-version/TicTacToe.Main.java", "BodyUseAPI": [], "Fixed commit": "8746d4dfd8c07d4092254db4aae629427b5e7798", "Url": "https://api.github.com/repos/fr440305/intro-to-java", "Date": "2018-02-09T22:57:27Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.pentaho.di.core.KettleEnvironment.setConcurrentProperties) { java.lang.System.setProperties(org.pentaho.di.core.ConcurrentMapProperties.convertProperties(java.lang.System.getProperties())); org.pentaho.di.core.KettleEnvironment.setConcurrentProperties = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7172/buggy-version/engine.src.main.java.org.pentaho.di.core.KettleEnvironment.java", "BodyUseAPI": [], "Fixed commit": "f5ee8aa85e8e27fb2579458250c946f93396387c", "Url": "https://api.github.com/repos/ccaspanello/pentaho-kettle", "Date": "2018-08-08T16:57:18Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (octave.contains(\" \")) octave = octave.substring(0, octave.lastIndexOf(\" \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6765/buggy-version/Java.MusicalNote.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "aec72e49da4115c44099aa9fb8bd3c26ba8fc859", "Url": "https://api.github.com/repos/ShadowKing345/Final-Fantasy-XIV-Music-Box", "Date": "2018-10-01T07:39:43Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (note.contains(\" \")) note = note.substring(0, note.lastIndexOf(' '));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6765/buggy-version/Java.MusicalNote.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "aec72e49da4115c44099aa9fb8bd3c26ba8fc859", "Url": "https://api.github.com/repos/ShadowKing345/Final-Fantasy-XIV-Music-Box", "Date": "2018-10-01T07:39:43Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nameEditText.getText().toString().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((names.length) > 0) { ca.dal.cs.athletemonitor.athletemonitor.utilities.StringJoiner sj = new ca.dal.cs.athletemonitor.athletemonitor.utilities.StringJoiner(\" \"); for (int i = 0; i < ((names.length) - 1); i++) sj.add(names[i]); firstName = sj.toString(); lastName = names[((names.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8026/buggy-version/app.src.main.java.ca.dal.cs.athletemonitor.athletemonitor.UserInformationEditActivity.java", "BodyUseAPI": ["ca.dal.cs.athletemonitor.athletemonitor.utilities.StringJoiner.add(java.lang.String)"], "Fixed commit": "c10b3858c16da9854bdf43c0a970be97d4884d4d", "Url": "https://api.github.com/repos/NicholasBarreyre/SEProject", "Date": "2018-03-19T18:24:06Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultStartCamera) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/665/buggy-version/library.src.main.java.com.jz.image_selector.ImageSelectorActivity.java", "BodyUseAPI": [], "Fixed commit": "0a999da6f6355bc0844e22cc71188fa343c48688", "Url": "https://api.github.com/repos/1izheng/image_selector", "Date": "2018-05-24T01:50:00Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(buf.isReadable(4))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2021/buggy-version/src.main.java.com.crowsofwar.avatar.common.network.DataTransmitters.java", "BodyUseAPI": [], "Fixed commit": "6943d78a46f19269170a3d41287851bad949d615", "Url": "https://api.github.com/repos/ProjectKorra/AvatarMod", "Date": "2018-09-24T16:00:48Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameter instanceof io.swagger.models.parameters.AbstractSerializableParameter) { io.swagger.models.parameters.AbstractSerializableParameter abstractSerializableParameter = ((io.swagger.models.parameters.AbstractSerializableParameter) (parameter)); type = abstractSerializableParameter.getType(); }else { type = \"not-accessible\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5789/buggy-version/src.main.java.swurg.utils.ExtensionHelper.java", "BodyUseAPI": [], "Fixed commit": "82d40fdcc4b3fb3051c4085d3240ef431081a00a", "Url": "https://api.github.com/repos/PortSwigger/openapi-parser", "Date": "2018-07-03T00:41:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userInSession != null) { model.addAttribute(\"nameError\", \"A user is already logged in\"); return \"user/register\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4847/buggy-version/src.main.java.MoneyManager.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "6acd54e44120da71099fad0d5138ec86af8b6fde", "Url": "https://api.github.com/repos/Brian-McGirk/Money-Manager", "Date": "2018-06-14T15:31:22Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.toLowerCase().equals(\"david\")) { match.setActivePlayer(new net.hundredtickets.yahtzee.model.Scorecard(this.davidCard)); match.setPassivePlayer(new net.hundredtickets.yahtzee.model.Scorecard(this.melCard)); }else { match.setActivePlayer(new net.hundredtickets.yahtzee.model.Scorecard(this.melCard)); match.setPassivePlayer(new net.hundredtickets.yahtzee.model.Scorecard(this.davidCard)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3709/buggy-version/src.main.java.net.hundredtickets.yahtzee.MatchController.java", "BodyUseAPI": [], "Fixed commit": "19f3bf60d96de1c03038c51e82c9444dfd15704d", "Url": "https://api.github.com/repos/dschuld/yahtzee", "Date": "2018-01-27T10:18:52Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type instanceof java.lang.Class) && (((java.lang.Class) (type)).isArray())) { final java.lang.Class<?> cls = ((java.lang.Class<?>) (type)); com.google.common.base.Optional<org.raml.pojotoraml.types.RamlType> ramlType = org.raml.pojotoraml.types.ScalarType.fromType(cls.getComponentType()); return org.raml.pojotoraml.types.CollectionRamlType.of(ramlType.or(new com.google.common.base.Supplier<org.raml.pojotoraml.types.RamlType>() { @java.lang.Override public org.raml.pojotoraml.types.RamlType get() { return org.raml.pojotoraml.types.ComposedRamlType.forClass(cls.getComponentType(), adjuster.adjustTypeName(cls.getComponentType(), cls.getComponentType().getSimpleName(), parser)); } })); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8090/buggy-version/pojo-to-raml.src.main.java.org.raml.pojotoraml.types.RamlTypeFactory.java", "BodyUseAPI": [], "Fixed commit": "9f060498c427854424d7f396b21fdb597ee1a07e", "Url": "https://api.github.com/repos/mulesoft-labs/raml-java-tools", "Date": "2018-01-27T20:23:58Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mWeightEditText.getText().toString().trim()", "mNameEditText.getText().toString().trim()", "mBreedEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((mCurrentPetUri) == null) && (android.text.TextUtils.isEmpty(name))) && (android.text.TextUtils.isEmpty(breed))) && (android.text.TextUtils.isEmpty(weightString))) && ((mGender) == (com.example.android.pets.data.PetContract.PetEntry.GENDER_UNKNOWN))) { android.widget.Toast.makeText(this, R.string.editor_insert_pet_failed_empty, Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3073/buggy-version/app.src.main.java.com.example.android.pets.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "d58e5dd67614979e9168872c5e0033a1921109e5", "Url": "https://api.github.com/repos/GregoryWilusz/ABND_PetsApp", "Date": "2018-06-07T07:33:42Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (mod == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9795/buggy-version/src.Actions.RunWithArguments.java", "BodyUseAPI": [], "Fixed commit": "525621e2647b60f60ca31f703c3b8f859f57b9ff", "Url": "https://api.github.com/repos/chrispan68/Run-With-Arguments", "Date": "2018-07-26T21:54:36Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.actionSystem.AnActionEvent.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (proj == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9795/buggy-version/src.Actions.DebugWithArguments.java", "BodyUseAPI": [], "Fixed commit": "525621e2647b60f60ca31f703c3b8f859f57b9ff", "Url": "https://api.github.com/repos/chrispan68/Run-With-Arguments", "Date": "2018-07-26T21:54:36Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (mod == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9795/buggy-version/src.Actions.DebugWithArguments.java", "BodyUseAPI": [], "Fixed commit": "525621e2647b60f60ca31f703c3b8f859f57b9ff", "Url": "https://api.github.com/repos/chrispan68/Run-With-Arguments", "Date": "2018-07-26T21:54:36Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4494/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "125c865b4ca40cb7c3332f86b11a6434117703e8", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-lintopher0315", "Date": "2018-10-04T13:28:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == 2) { return Bishop.validate(color, from, to); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9877/buggy-version/Pieces.java", "BodyUseAPI": [], "Fixed commit": "d1f330ab13f8841e959df5b8c7878ef0d1ba0cf5", "Url": "https://api.github.com/repos/georgezheng999/Chess-Two-Player", "Date": "2018-01-17T21:48:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.madonasyombua.growwithgoogleteamproject.ui.fragment.RegisterFragment.1.extractText(binding.editUsername)", "com.madonasyombua.growwithgoogleteamproject.ui.fragment.RegisterFragment.1.extractText(binding.editPassword)", "com.madonasyombua.growwithgoogleteamproject.ui.fragment.RegisterFragment.1.extractText(binding.editEmail)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((username_txt.isEmpty()) || (email_txt.isEmpty())) || (password_txt.isEmpty())) { android.widget.Toast.makeText(getContext(), \"Username and password are required\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5115/buggy-version/app.src.main.java.com.madonasyombua.growwithgoogleteamproject.ui.fragment.RegisterFragment.java", "BodyUseAPI": [], "Fixed commit": "72d66b9b1ed7071d6fcabb632ec4247da0d28abd", "Url": "https://api.github.com/repos/Madonahs/Devsfolio", "Date": "2018-02-26T19:22:24Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["trunine.smashattack.Frag_Notes_Create.titleEditor.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newTitle.isEmpty()) { newTitle = \"Title\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1975/buggy-version/app.src.main.java.trunine.smashattack.Frag_Notes_Create.java", "BodyUseAPI": [], "Fixed commit": "41546cacf800d5f5260c094ffb78dd822f67030d", "Url": "https://api.github.com/repos/kcpaxton/SmashAttack", "Date": "2018-04-01T02:44:02Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reference.getNodeId().getParentId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mid == 0) && (parentId.equals(NodeId.DOCUMENT_NODE))) { mid = getLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7621/buggy-version/src.org.exist.dom.persistent.NewArrayNodeSet.java", "BodyUseAPI": [], "Fixed commit": "354c7a23b0cb2160d93b4c98183c539cb8ea0b8b", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2018-08-11T04:29:17Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (em.contains(vet)) { em.remove(vet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4125/buggy-version/src.main.java.org.springframework.samples.petclinic.repository.jpa.JpaVetRepositoryImpl.java", "BodyUseAPI": ["javax.persistence.EntityManager.remove(org.springframework.samples.petclinic.model.Vet)"], "Fixed commit": "2e8915d451e4d954a861c5aa6ddfa991a0816f73", "Url": "https://api.github.com/repos/cair2015/spring-petclinic-rest", "Date": "2018-07-15T06:11:13Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((res.size()) != ((size.get()) * (size.get()))) { java.lang.System.out.println(\"Map is not valid!\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1731/buggy-version/src.main.java.Main.java", "BodyUseAPI": [], "Fixed commit": "1e7c3ddfb7582250d6bb34c0ca6130343606a03a", "Url": "https://api.github.com/repos/bondars95/n-puzzle", "Date": "2018-03-23T12:51:39Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mx.com.cesarcorona.directorio.activities.CloseTomeActivity.isOpenNow(negocioSeleccionado)) { openStatus.setBackgroundColor(getResources().getColor(R.color.colorAbierto)); openStatus.setText(\"Abierto\"); java.lang.String[] dateKeys = mx.com.cesarcorona.directorio.Utils.DateUtils.getCurrentDatKeys(); if ((dateKeys != null) && ((dateKeys.length) > 0)) { horarioNegocio.setText(mx.com.cesarcorona.directorio.Utils.DateUtils.formatDate(negocioSeleccionado.getDiasAbiertos().get(dateKeys[0]), negocioSeleccionado.getDiasAbiertos().get(dateKeys[1]))); } }else { horarioNegocio.setText(\"Cerrado\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1711/buggy-version/app.src.main.java.mx.com.cesarcorona.directorio.activities.NegocioDetailActivity.java", "BodyUseAPI": ["negocioSeleccionado.getDiasAbiertos().get(java.lang.String)", "mx.com.cesarcorona.directorio.Utils.DateUtils.formatDate(negocioSeleccionado.getDiasAbiertos().get(dateKeys[0]),negocioSeleccionado.getDiasAbiertos().get(dateKeys[1]))", "mx.com.cesarcorona.directorio.pojo.Negocio.getDiasAbiertos()", "negocioSeleccionado.getDiasAbiertos().get(java.lang.String)", "android.widget.TextView.setText(mx.com.cesarcorona.directorio.Utils.DateUtils.formatDate(negocioSeleccionado.getDiasAbiertos().get(dateKeys[0]), negocioSeleccionado.getDiasAbiertos().get(dateKeys[1])))", "mx.com.cesarcorona.directorio.pojo.Negocio.getDiasAbiertos()"], "Fixed commit": "d96e9ab823b3fcd5181af040a7f7fbdb3a7f7a6f", "Url": "https://api.github.com/repos/cccorona/DirectorioApp", "Date": "2018-02-20T17:39:51Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spring.springboot.dao.SampleDao.insertSelective(org.spring.springboot.domain.SampleWithBLOBs)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count == 1) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8892/buggy-version/src.main.java.org.spring.springboot.service.impl.SampleService.java", "BodyUseAPI": [], "Fixed commit": "557498824cc9ba786eea48ded75402edc0fd151a", "Url": "https://api.github.com/repos/MezereonXP/springboot-mybatis", "Date": "2018-04-14T05:48:49Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultSpans == null) { defaultSpans = java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9817/buggy-version/tehreer-android.src.main.java.com.mta.tehreer.layout.Typesetter.java", "BodyUseAPI": [], "Fixed commit": "9fdd08e42a24ff0d19113e0efba09e438e977bdb", "Url": "https://api.github.com/repos/mta452/Tehreer-Android", "Date": "2018-01-08T16:29:20Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (ORIENTATION_LANDSCAPE)) { android.widget.FrameLayout.LayoutParams params = ((android.widget.FrameLayout.LayoutParams) (addLayout.getLayoutParams())); params.setMargins(params.getMarginStart(), 0, params.getMarginEnd(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6246/buggy-version/app.src.main.java.com.example.user2.fuelcalc.ui.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "2770822ac85b604343fa5fad4b2033f25a8ec852", "Url": "https://api.github.com/repos/CyberSoftStudio/FuelCalc", "Date": "2018-08-02T11:07:02Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (direction != null) { setDirection(direction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7338/buggy-version/src.main.java.com.hackerhop.game.core.player.Player.java", "BodyUseAPI": ["com.hackerhop.game.core.player.Player.setDirection(com.hackerhop.game.core.player.Direction)"], "Fixed commit": "3c202ef99035418d8d6276f93e0a57bb4d0a71a3", "Url": "https://api.github.com/repos/nicovank/HackerHop", "Date": "2018-04-27T03:27:50Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (messageProcessor instanceof org.mule.processor.chain.DynamicMessageProcessorContainer) { dynamicMessageProcessorContainers.add(((org.mule.processor.chain.DynamicMessageProcessorContainer) (messageProcessor))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8869/buggy-version/core.src.main.java.org.mule.processor.chain.SubflowInterceptingChainLifecycleWrapper.java", "BodyUseAPI": [], "Fixed commit": "ab4dc07b41d68dbd0b8384b38205c911a275cff0", "Url": "https://api.github.com/repos/mulesoft/mule", "Date": "2018-04-20T18:54:26Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previousState.equals(state)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9016/buggy-version/deployments.rainbow-brass.src.main.java.org.sa.rainbow.brass.adaptation.PrismPolicy.java", "BodyUseAPI": [], "Fixed commit": "c4c7e45ed20347a15febc1db66a35575e702d2bc", "Url": "https://api.github.com/repos/cmu-able/rainbow", "Date": "2018-08-09T19:38:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hiekn.kse.service.impl.PostServiceImpl.pageSelect(com.hiekn.kse.bean.PostBean)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((postBean.getPageSize()) < ((postBeanList.size()) + (indexTopData.size()))) { postBeanList = postBeanList.subList(0, ((postBean.getPageSize()) - (indexTopData.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1374/buggy-version/src.main.java.com.hiekn.kse.service.impl.PostServiceImpl.java", "BodyUseAPI": ["com.hiekn.kse.bean.PostBean.getPageSize()", "java.util.List<com.hiekn.kse.bean.PostBean>.size()", "java.util.List<com.hiekn.kse.bean.PostBean>.subList(int,((postBean.getPageSize()) - (indexTopData.size())))"], "Fixed commit": "788891d5fb4cd2a57809ac16ecf326e5ab878885", "Url": "https://api.github.com/repos/kse-music/boot", "Date": "2018-07-17T08:50:59Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.isSuccessful()) { java.lang.System.out.println((\"************----------- response : \" + (response.body().string()))); callback.onResponse(response.body().string()); }else { callback.onResponse(\"Failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2399/buggy-version/NRLWalletSDK.src.main.java.module.nrlwallet.com.nrlwalletsdk.Coins.NRLStellar.java", "BodyUseAPI": ["module.nrlwallet.com.nrlwalletsdk.abstracts.NRLCallback.onResponse(response.body().string())", "response.body().string()", "response.body().string()", "java.io.PrintStream.println((\"************----------- response : \" + (response.body().string())))", "okhttp3.Response.body()", "okhttp3.Response.body()"], "Fixed commit": "0803da5f30d9f4f72047c9d405d7624ed56286db", "Url": "https://api.github.com/repos/norestlabs/mousewallet-android-sdk", "Date": "2018-07-15T05:13:54Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SCMSource.SourceByItem.findSource(build.getParent())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(s instanceof com.cloudbees.jenkins.plugins.bitbucket.BitbucketSCMSource)) { if (com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.containsKey(buildName)) { s = com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.get(buildName); }else { return; } }else { com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.sourceCache.put(buildName, s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4289/buggy-version/src.main.java.com.cloudbees.jenkins.plugins.bitbucket.BitbucketBuildStatusNotifications.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.lang.String, jenkins.scm.api.SCMSource>.put(java.lang.String,jenkins.scm.api.SCMSource)"], "Fixed commit": "1d3ed3068d55036b415b809863b3df0e5589133a", "Url": "https://api.github.com/repos/benjaminfuchs/bitbucket-branch-source-plugin", "Date": "2018-04-06T23:51:21Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(ze.getName().contains(firstDirectoryPart))) || (!(ze.getName().matches(pattern)))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8699/buggy-version/src.main.java.net.kosto.util.ResourceUtils.java", "BodyUseAPI": [], "Fixed commit": "35a4af9ab6b0d3535040c31bf79a3f24cdf5c246", "Url": "https://api.github.com/repos/kkrakovych/database-maven-plugin", "Date": "2018-06-27T20:08:16Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(message)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6338/buggy-version/library.src.main.java.com.cuttingedge.adapter2recycler.Adapter.ModularAdapter.java", "BodyUseAPI": [], "Fixed commit": "f513d75c42ede265add1562e10c206a887f12f58", "Url": "https://api.github.com/repos/maxxx/Modular2Recycler", "Date": "2018-02-26T06:46:22Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((smsSendParamDto.getCodeLength()) == 4) { code = \"8888\"; }else { code = \"888888\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9065/buggy-version/kangaroo-mod-system.src.main.java.io.github.pactstart.system.facade.impl.SmsServiceFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "eb9cb7845a27829156baecfeb94367baf4718a42", "Url": "https://api.github.com/repos/PactStart/kangaroo", "Date": "2018-07-06T11:45:52Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextArea.getSelectionStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((startpos < (headerlength)) && (endpos >= (headerlength))) { javax.swing.JOptionPane.showMessageDialog(this, \"<HTML>header\uff5ebody\u306b\u307e\u305f\u304c\u308b\u7bc4\u56f2\u9078\u629e\u306f\u3067\u304d\u307e\u305b\u3093\u3002<BR>header/body\u3069\u3061\u3089\u304b\u4e00\u65b9\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002</HTML>\", \"\u7bc4\u56f2\u9078\u629e\u30a8\u30e9\u30fc\", javax.swing.JOptionPane.ERROR_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8519/buggy-version/src.main.java.burp.ResponseTracker.java", "BodyUseAPI": [], "Fixed commit": "fd6b6136daa154dc8a34a9405ff2362564fb559c", "Url": "https://api.github.com/repos/gdgd009xcd/AutoMacroBuilder", "Date": "2018-05-09T15:01:06Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mMilestoneModel.getCurrentMileStone().visits) != null) { visits = mMilestoneModel.getCurrentMileStone().visits; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1037/buggy-version/app.src.main.java.dk.adamino.rehabilitation.GUI.Evaluations.VisitListActivity.java", "BodyUseAPI": ["dk.adamino.rehabilitation.GUI.Model.MilestoneModel.getCurrentMileStone()"], "Fixed commit": "0566d567f6b0b9be29289c8347f0dbed7bc251f1", "Url": "https://api.github.com/repos/onero/Rehabilitation-Android", "Date": "2018-05-15T09:37:33Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method.getReturnType().getName().equalsIgnoreCase(java.lang.Void.class.getSimpleName())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2797/buggy-version/EasyRest.src.main.java.com.easyrest.ioc.remote.EasyRestProxy.java", "BodyUseAPI": [], "Fixed commit": "6ea1df75f1add0f3691119a56d650a4b76b3ba75", "Url": "https://api.github.com/repos/liuhongyuand/EasyRest-NAS", "Date": "2018-05-01T05:57:34Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((openInventory) != (player.getInventory())) { player.getInventory().add(openInventory.get(index)); openInventory.remove(index); }else { java.lang.System.out.println(index); java.lang.System.out.println(openInventory.size()); if (((openInventory.size()) != 0) && (index < (openInventory.size()))) { resourceManager.generateInfo(openInventory.get(index), index, this); resourceManager.setInfoOpened(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8104/buggy-version/src.main.java.me.meczka.main.Main.java", "BodyUseAPI": ["player.getInventory().add(openInventory.get(index))", "me.meczka.sprites.Player.getInventory()"], "Fixed commit": "7836344ba36337592f459c10801c8a8a43bbf56c", "Url": "https://api.github.com/repos/Meczka/DG", "Date": "2018-05-06T10:44:59Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!attributeSignatureFound) { throw new io.opensaber.registry.middleware.MiddlewareHaltException(java.lang.String.format(io.opensaber.registry.middleware.impl.SignaturePresenceValidator.SIGNATURE_NOT_FOUND, predicateStr)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/356/buggy-version/java.middleware.registry-middleware.signature-presence-validation.src.main.java.io.opensaber.registry.middleware.impl.SignaturePresenceValidator.java", "BodyUseAPI": [], "Fixed commit": "fbc4acd4cf7c19a2579cc36f3b53eb481d23f4b9", "Url": "https://api.github.com/repos/project-sunbird/open-saber", "Date": "2018-09-16T10:27:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.getValue().toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (downloadUrl != null) { com.squareup.picasso.Picasso.get().load(downloadUrl).into(profileImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3043/buggy-version/app.src.main.java.com.example.zhouyepang.instagramapp.Profile.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.get().load(downloadUrl).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.get().load(java.lang.String)"], "Fixed commit": "01b194a07854a1ca7dc388dec7e4eb3d90319b23", "Url": "https://api.github.com/repos/zhouyepang/InstagramApp", "Date": "2018-10-21T08:53:02Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (db != null) { io.nuls.db.manager.LevelDBManager.AREAS.put(areaFile.getName(), db); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5964/buggy-version/db-module.leveldb.db-leveldb.src.main.java.io.nuls.db.manager.LevelDBManager.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, io.nuls.db.manager.DB>.put(java.lang.String,io.nuls.db.manager.DB)"], "Fixed commit": "b94f1a67161a68a958557b22f31f65fafe72ab41", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-05-06T11:01:48Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!createIfMissing) && (!(file.exists()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5964/buggy-version/db-module.leveldb.db-leveldb.src.main.java.io.nuls.db.manager.LevelDBManager.java", "BodyUseAPI": [], "Fixed commit": "b94f1a67161a68a958557b22f31f65fafe72ab41", "Url": "https://api.github.com/repos/nuls-io/nuls", "Date": "2018-05-06T11:01:48Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.caspar.binancebot.MainActivity.round(double,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (overAll > 0) { overallText.setTextColor(Color.GREEN); }else { overallText.setTextColor(Color.RED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4554/buggy-version/app.src.main.java.com.example.caspar.binancebot.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "470d18f5e6c8ebeb5d44887150a7216d012d3e68", "Url": "https://api.github.com/repos/casrulesgit/android-wear-binanceBot", "Date": "2018-05-15T14:54:20Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.caspar.binancebot.MainActivity.round(double,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (overAll > 0) { overallText.setTextColor(Color.GREEN); }else { overallText.setTextColor(Color.RED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4554/buggy-version/app.src.main.java.com.example.caspar.binancebot.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "470d18f5e6c8ebeb5d44887150a7216d012d3e68", "Url": "https://api.github.com/repos/casrulesgit/android-wear-binanceBot", "Date": "2018-05-15T14:54:20Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.kanteen.persistance.repository.IParentRepository.findParentByAccountId(account.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parentOpt.isPresent()) { io.kanteen.persistance.entity.Parent parent = modelMapper.map(parentOpt.get(), io.kanteen.persistance.entity.Parent.class); return parent.isAdmin(); }else { throw new io.kanteen.exception.NotFoundException(\"Account found but not linked to parent or admin...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3256/buggy-version/src.main.java.io.kanteen.service.impl.AccountService.java", "BodyUseAPI": ["org.modelmapper.ModelMapper.map(parentOpt.get(),java.lang.Class)", "java.util.Optional<io.kanteen.persistance.entity.Parent>.get()"], "Fixed commit": "cb68febe7ba1c136ab32109a2249c93b41160c35", "Url": "https://api.github.com/repos/robusta-code/kanteen", "Date": "2018-09-05T14:43:50Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.application.mgt.ApplicationManagementService.getApplicationExcludingFileBasedSPs(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (serviceProvider != null) { serviceProvider.setApplicationName(applicationName); serviceProvider.setDescription((\"Service Provider for application \" + applicationName)); org.wso2.carbon.identity.application.common.model.ServiceProviderProperty[] serviceProviderProperties = new org.wso2.carbon.identity.application.common.model.ServiceProviderProperty[1]; org.wso2.carbon.identity.application.common.model.ServiceProviderProperty serviceProviderProperty = new org.wso2.carbon.identity.application.common.model.ServiceProviderProperty(); serviceProviderProperty.setName(APIConstants.APP_DISPLAY_NAME); serviceProviderProperty.setValue(displayName); serviceProviderProperties[0] = serviceProviderProperty; serviceProvider.setSpProperties(serviceProviderProperties); serviceProvider.setApplicationName(applicationName); serviceProvider.setDescription((\"Service Provider for application \" + applicationName)); appMgtService.updateApplication(serviceProvider, tenantDomain, userName); org.wso2.carbon.apimgt.keymgt.service.APIKeyMgtSubscriberService.log.debug((\"Service Provider Name Updated to : \" + applicationName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5517/buggy-version/components.apimgt.org.wso2.carbon.apimgt.keymgt.src.main.java.org.wso2.carbon.apimgt.keymgt.service.APIKeyMgtSubscriberService.java", "BodyUseAPI": ["org.wso2.carbon.identity.application.common.model.ServiceProvider.setDescription(java.lang.String)", "org.wso2.carbon.identity.application.common.model.ServiceProvider.setApplicationName(java.lang.String)", "org.wso2.carbon.identity.application.common.model.ServiceProvider.setSpProperties(org.wso2.carbon.identity.application.common.model.ServiceProviderProperty[])", "org.wso2.carbon.identity.application.mgt.ApplicationManagementService.updateApplication(org.wso2.carbon.identity.application.common.model.ServiceProvider,java.lang.String,java.lang.String)", "org.wso2.carbon.identity.application.common.model.ServiceProvider.setDescription(java.lang.String)", "org.wso2.carbon.identity.application.common.model.ServiceProvider.setApplicationName(java.lang.String)"], "Fixed commit": "00d8876a8e475c8ab294a3116db8975ff00990de", "Url": "https://api.github.com/repos/fazlan-nazeem/carbon-apimgt", "Date": "2018-08-21T09:28:02Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.params.length) != (tr.params.length)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6243/buggy-version/src.org.sango_lang.PTypeRefSkel.java", "BodyUseAPI": [], "Fixed commit": "75eb3026b415a70edf2852249ba8a77a148dda41", "Url": "https://api.github.com/repos/i-akym/sango0", "Date": "2018-08-11T09:27:14Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.management.service.impl.AdminUserServiceImpl.getItem(cn.management.domain.admin.AdminUser)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (findUser == null) { throw new cn.management.exception.SysException(\"\u6240\u7f16\u8f91\u6570\u636e\u4e0d\u5b58\u5728\uff01\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3953/buggy-version/src.main.java.cn.management.service.impl.AdminUserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0206c94e80b725b5574e5aae4cc6e40f446fea7c", "Url": "https://api.github.com/repos/DGUTGraduationDesign/management", "Date": "2018-02-24T07:17:32Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((meta.getLabel()) != null) { ret.setName(meta.getLabel()); }else { ret.setName(meta.getPackageName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3358/buggy-version/src.main.java.de.onyxbits.raccoon.repo.AndroidAppDao.java", "BodyUseAPI": ["net.dongliu.apk.parser.bean.ApkMeta.getPackageName()", "de.onyxbits.raccoon.repo.AndroidApp.setName(meta.getLabel())", "de.onyxbits.raccoon.repo.AndroidApp.setName(meta.getPackageName())", "net.dongliu.apk.parser.bean.ApkMeta.getLabel()"], "Fixed commit": "e98a3fb9328877185a4a6847334d9007cf4dc3c9", "Url": "https://api.github.com/repos/onyxbits/raccoon4", "Date": "2018-09-13T11:27:06Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (leafTraversal != null) { graphTraversals.add(traversal.asAdmin().clone().local(__.optional(leafTraversal)).path()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8072/buggy-version/runtime.runtime-domain.src.main.java.org.umlg.runtime.collection.persistent.PropertyTree.java", "BodyUseAPI": ["traversal.asAdmin().clone().local(__.optional(leafTraversal)).path()", "org.umlg.runtime.collection.persistent.PropertyTree.optional(org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversal<org.umlg.runtime.collection.persistent.Vertex, org.umlg.runtime.collection.persistent.Vertex>)", "traversal.asAdmin().clone().local(__.optional(leafTraversal))", "java.util.List<org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversal<org.umlg.runtime.collection.persistent.Vertex, org.apache.tinkerpop.gremlin.process.traversal.Path>>.add(traversal.asAdmin().clone().local(__.optional(leafTraversal)).path())"], "Fixed commit": "1c65d67ee7cc1afde2cae6dcfd5e3024cc7fa233", "Url": "https://api.github.com/repos/pietermartin/umlg", "Date": "2018-06-02T08:53:07Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (graphTraversals.isEmpty()) { graphTraversals.add(traversal.path()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8072/buggy-version/runtime.runtime-domain.src.main.java.org.umlg.runtime.collection.persistent.PropertyTree.java", "BodyUseAPI": ["java.util.List<org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversal<org.umlg.runtime.collection.persistent.Vertex, org.apache.tinkerpop.gremlin.process.traversal.Path>>.add(traversal.path())"], "Fixed commit": "1c65d67ee7cc1afde2cae6dcfd5e3024cc7fa233", "Url": "https://api.github.com/repos/pietermartin/umlg", "Date": "2018-06-02T08:53:07Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((ch != ' ') && (ch != '\\t')) && (ch != '\\u0000')) && (ch != '\\n')) && (ch != '\\r')) { tableModelError.addRow(new java.lang.Object[]{ codeCurrLineNum + 1, \"\u4e0d\u5408\u6cd5\u5b57\u7b26\" + ch }); jTableErrorInfo.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9906/buggy-version/LexicalAnalysis.src.main.java.LexicalAnalysis.java", "BodyUseAPI": ["javax.swing.table.DefaultTableModel.addRow(java.lang.Object[])"], "Fixed commit": "617c5a50bcb1e074bf64ee2b422f265902fd96ab", "Url": "https://api.github.com/repos/MYxu/CompiliePrincipleExperiment", "Date": "2018-06-02T04:32:13Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEdit) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9341/buggy-version/src.main.java.utilities.CheckInput.java", "BodyUseAPI": [], "Fixed commit": "444b93b019d483f63b1695c14828017c36e18680", "Url": "https://api.github.com/repos/wongpiwat/The-Water", "Date": "2018-01-09T10:58:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.activiti.cloud.services.core.SecurityPoliciesApplicationService.definitionKeysAllowedForRBPolicy(org.activiti.cloud.services.security.SecurityPolicy)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((keys != null) || (!(keys.isEmpty()))) && (securityPoliciesService.policiesDefined())) { query.processDefinitionId(\"1\").processDefinitionId(\"2\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4652/buggy-version/activiti-cloud-services-runtime-bundle.activiti-cloud-services-core.src.main.java.org.activiti.cloud.services.core.SecurityPoliciesApplicationService.java", "BodyUseAPI": [], "Fixed commit": "51cb749135c7aa732a767e59e84da40a513c17af", "Url": "https://api.github.com/repos/Activiti/activiti-cloud-runtime-bundle-service", "Date": "2018-02-19T12:28:38Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.oasp.module.basic.common.api.reflect.OaspPackage.of(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(targetPkg.isValid())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3277/buggy-version/src.main.java.io.oasp.ide.sonarqube.common.impl.DevonArchitectureCheck.java", "BodyUseAPI": [], "Fixed commit": "f23eb5f74a72302016098e31aa2efef7e727ad0f", "Url": "https://api.github.com/repos/devonfw-forge/sonarqube-devon-plugin", "Date": "2018-03-22T12:09:36Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof AST.ArrayType)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8525/buggy-version/src.AST.ArrayType.java", "BodyUseAPI": [], "Fixed commit": "4e9ee16ee5707500a80e34604e1a253d653ba9eb", "Url": "https://api.github.com/repos/New-bottle/Compiler", "Date": "2018-05-03T14:00:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.hunt0r.bilanz.model.Money.subtract(me.hunt0r.bilanz.model.Money,me.hunt0r.bilanz.model.Money.multiply(getDeductionAnnual(), (year - (getSinceValue()))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((money.getValue()) < 0) return new me.hunt0r.bilanz.model.Money(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4708/buggy-version/Bilanz.mobile.src.main.java.me.hunt0r.bilanz.model.DeductionItem.java", "BodyUseAPI": [], "Fixed commit": "cf8bb41a0c919b7182c8361a6a169b686a83d02a", "Url": "https://api.github.com/repos/TheRedHunt/Bilanz", "Date": "2018-01-16T21:24:09Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btnPlay) != null) btnPlay.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2512/buggy-version/src.br.com.carlosrafaelgn.fplay.ActivityBrowser2.java", "BodyUseAPI": [], "Fixed commit": "764a739c58565354a79fdc563b7fef1ca0cda1ab", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2018-07-04T20:55:50Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btnAdd) != null) btnAdd.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2512/buggy-version/src.br.com.carlosrafaelgn.fplay.ActivityBrowser2.java", "BodyUseAPI": [], "Fixed commit": "764a739c58565354a79fdc563b7fef1ca0cda1ab", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2018-07-04T20:55:50Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sep2) != null) sep2.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2512/buggy-version/src.br.com.carlosrafaelgn.fplay.ActivityBrowser2.java", "BodyUseAPI": [], "Fixed commit": "764a739c58565354a79fdc563b7fef1ca0cda1ab", "Url": "https://api.github.com/repos/carlosrafaelgn/FPlayAndroid", "Date": "2018-07-04T20:55:50Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(column.isArtificialColumn)) { iloColumn = iloColumn.and(masterData.cplex.column(resourceBoundConstraints[column.associatedPricingProblem.capacityTypeS][column.associatedPricingProblem.originNodeO], 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8311/buggy-version/src.cg.master.Master.java", "BodyUseAPI": ["masterData.cplex.column(resourceBoundConstraints[column.associatedPricingProblem.capacityTypeS][column.associatedPricingProblem.originNodeO],int)", "cg.master.IloColumn.and(masterData.cplex.column(resourceBoundConstraints[column.associatedPricingProblem.capacityTypeS][column.associatedPricingProblem.originNodeO], 1))"], "Fixed commit": "947c025dcbb460317d3566f5fd35fcba5a79d5d2", "Url": "https://api.github.com/repos/JAIMX/SNDRC", "Date": "2018-01-05T09:27:54Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSong) != null) { currentSong.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4159/buggy-version/src.main.java.aud.io.audioplayer.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "5a617bbb5af30fffc631b473ba027840b79574cb", "Url": "https://api.github.com/repos/Comnus/Aud.io", "Date": "2018-01-16T12:17:54Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSong) != null) { currentSong.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4159/buggy-version/src.main.java.aud.io.audioplayer.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "5a617bbb5af30fffc631b473ba027840b79574cb", "Url": "https://api.github.com/repos/Comnus/Aud.io", "Date": "2018-01-16T12:17:54Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSong) != null) { currentSong.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4159/buggy-version/src.main.java.aud.io.audioplayer.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "5a617bbb5af30fffc631b473ba027840b79574cb", "Url": "https://api.github.com/repos/Comnus/Aud.io", "Date": "2018-01-16T12:17:54Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ms.solve(com.junifer.maze.MazeSolver.startX, com.junifer.maze.MazeSolver.startY)) { ms.printMaze(); }else { java.lang.System.out.println(\"The maze could not be solved\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2162/buggy-version/src.main.java.com.junifer.maze.MazeSolver.java", "BodyUseAPI": ["com.junifer.maze.MazeSolver.printMaze()"], "Fixed commit": "c56112780231203fde79c769ba8fbb8b37172e5d", "Url": "https://api.github.com/repos/eoinreilly93/MazeSolver", "Date": "2018-01-27T01:07:08Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((locs.length) > 0) { for (int c = 0; c < (locs.length); c++) { if ((dest.equals(locs[c])) && ((locs[c]) != null)) { addOrNot = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/256/buggy-version/src.db.TbDBBean.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "74cc8a79b3f1545a9d0ea51d6a62ccca1cd2b841", "Url": "https://api.github.com/repos/ggTravelers/Travelers", "Date": "2018-10-17T17:37:21Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.from) == ((this.to) - 1)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3854/buggy-version/src.main.java.com.github.jferard.csvsniffer.Part.java", "BodyUseAPI": [], "Fixed commit": "d9716da0dc75b494c0fbe494a7e4f906d2114f61", "Url": "https://api.github.com/repos/jferard/pgloaderutils", "Date": "2017-03-28T20:31:05Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.getIgnored().isEmpty()) { sql = sql.replace(\"{ignored}\", \"\"); }else { java.lang.StringBuilder sb = new java.lang.StringBuilder(); for (java.util.UUID u : player.getIgnored()) { sb.append(u.toString()); if (!(player.getIgnored().get(((player.getIgnored().size()) - 1)).equals(u))) { sb.append(\":\"); } } sql = sql.replace(\"{ignored}\", sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1712/buggy-version/src.java.net.firecraftmc.shared.classes.model.Database.java", "BodyUseAPI": ["net.firecraftmc.shared.classes.model.FirecraftPlayer.getIgnored()", "net.firecraftmc.shared.classes.model.FirecraftPlayer.getIgnored()", "net.firecraftmc.shared.classes.model.FirecraftPlayer.getIgnored()", "player.getIgnored().get(((player.getIgnored().size()) - 1))", "player.getIgnored().size()", "player.getIgnored().get(((player.getIgnored().size()) - 1)).equals(java.util.UUID)"], "Fixed commit": "dffb7186eb8b7ce54be043c6ae2ee388c4ddb7e8", "Url": "https://api.github.com/repos/Firestar311/FirecraftAPI", "Date": "2018-06-04T22:21:45Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMessageEditText) != null) { mMessageEditText.setFilters(new android.text.InputFilter[]{ new android.text.InputFilter.LengthFilter(friendly_msg_length.intValue()) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1507/buggy-version/android-start.app.src.main.java.com.google.firebase.codelab.friendlychat.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "29747f76c8dbdb8d7aa0cc199b73d959a670e2b1", "Url": "https://api.github.com/repos/ankithu/White-Cane", "Date": "2018-10-14T01:00:30Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((batchid == null) || (batchid.equals(\"NULL\"))) { query = sess.createSQLQuery(((((((((\"UPDATE UserPolicyCode SET Code = \" + codeid) + \" WHERE (Email = '\") + email) + \"' and DocumentID = '\") + docid) + \"' and TablesID = \") + tableID) + \" AND isNull(BatchID))\")); }else { query = sess.createSQLQuery(((((((((((\"UPDATE UserPolicyCode SET Code = \" + codeid) + \" WHERE (Email = '\") + email) + \"' and DocumentID = '\") + docid) + \"' and TablesID = \") + tableID) + \" AND BatchID = \") + batchid) + \");\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5476/buggy-version/src.main.java.edu.temple.cla.policydb.ppdpapp.api.daos.DocumentDAOImpl.java", "BodyUseAPI": ["org.hibernate.Session.createSQLQuery(java.lang.String)"], "Fixed commit": "1f98c6624f6063b057acf3f68ffa67b451835d00", "Url": "https://api.github.com/repos/pwolfgang/ppdpapp", "Date": "2018-03-13T18:06:36Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { userSet.addUser(newUser); android.content.Intent intent = new android.content.Intent(this, edu.gatech.cs2340.donationtracker.Controller.WelcomeScreenActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9447/buggy-version/app.src.main.java.edu.gatech.cs2340.donationtracker.Controller.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "b520b2af91c7f0b4aee2e2757a43836542c2467e", "Url": "https://api.github.com/repos/acpollmann/DonationTracker", "Date": "2018-10-01T18:48:36Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (databaseInterface.getDatabaseType().equals(\"sqlserver\")) { if (((column.size()) * batchSize) >= (com.dtstack.flinkx.rdb.outputformat.JdbcOutputFormat.SQL_SERVER_MAX_PARAMETER_MARKER)) { batchSize = (com.dtstack.flinkx.rdb.outputformat.JdbcOutputFormat.SQL_SERVER_MAX_PARAMETER_MARKER) / (column.size()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6800/buggy-version/flinkx-rdb.src.main.java.com.dtstack.flinkx.rdb.outputformat.JdbcOutputFormat.java", "BodyUseAPI": [], "Fixed commit": "a72b83dabb29ba5cca5e3529aa2fae97f1a7b396", "Url": "https://api.github.com/repos/DTStack/flinkx", "Date": "2018-10-30T09:29:10Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (path.equals(\"File sending unsuccessful!\")) { java.lang.System.out.println((((ChatClient.GREEN_BOLD) + \"File sending unsuccessful!\") + (ChatClient.RESET))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/4020/buggy-version/src.ChatClient.java", "BodyUseAPI": [], "Fixed commit": "f43b540d79b3b35eb050e109e2934f37cef4b16d", "Url": "https://api.github.com/repos/DimitarPetrov/JavaProject-ChatServer", "Date": "2018-01-31T09:06:03Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.selectedEntity.getPayrolls()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((payrolls != null) && (!(payrolls.isEmpty()))) { for (com.movill.model.entity.Payroll payroll : payrolls) { payroll.setInstalment(this.selectedEntity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1562/buggy-version/src.com.movill.jsf.managedbeans.TaxInstalmentFormBean.java", "BodyUseAPI": [], "Fixed commit": "09751b5de863135eb6d773905254856f8f08cdb1", "Url": "https://api.github.com/repos/wlsnchen/Movill-Books", "Date": "2018-07-20T17:49:33Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.exists()) { classpaths.add(projectClassPath[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7154/buggy-version/org.jtool.eclipse.src.main.java.org.jtool.eclipse.javamodel.builder.BytecodeClassStore.java", "BodyUseAPI": [], "Fixed commit": "6094343d9ae0ac20a2b82f7d1517b7dcc525cab1", "Url": "https://api.github.com/repos/katsuhisamaruyama/jxplatform2", "Date": "2018-09-10T09:24:06Z"},
{"Line": "=>2831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (JdbcConstants.MYSQL.equals(dbType)) { if (lexer.identifierEquals(FnvHash.Constants.USING)) { lexer.nextToken(); java.lang.String indexType = lexer.stringVal; item.setType(indexType); accept(Token.IDENTIFIER); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/630/buggy-version/src.main.java.com.alibaba.druid.sql.parser.SQLStatementParser.java", "BodyUseAPI": [], "Fixed commit": "27abec586f27295aabdce986947d17bf8ab8153a", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-05-25T13:20:20Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameEntry.getScore()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((newScore < 0) || (newScore > (java.lang.Integer.MAX_VALUE))) || ((entries[4]) != null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7758/buggy-version/ClassesParaAvaliacao.ScoresBuggedImpl.java", "BodyUseAPI": [], "Fixed commit": "15b3a63c8d3e5f17a951ab13a2fa4448d2fa96dc", "Url": "https://api.github.com/repos/dudupqv/t1_verval", "Date": "2018-09-17T21:56:14Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.getElementsByClass(\"product-info-stock-sku\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stockSKUel == null) { toytec.ItemStockChecker.logger.info((\"Couldn't get stock block for item: \" + itemLink)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6576/buggy-version/src.main.java.toytec.ItemStockChecker.java", "BodyUseAPI": [], "Fixed commit": "5649886bd53c0468b48ff52b2787ada8cbdcf09d", "Url": "https://api.github.com/repos/milkds/toytec_production", "Date": "2018-10-25T11:08:08Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((frames.ProzessAllocated.printedOnce) == 1) { int reply = javax.swing.JOptionPane.showConfirmDialog(null, \"Du hast bereits gedruckt, willst es nochmal tun?\", \"Achtung\", javax.swing.JOptionPane.YES_NO_OPTION); if (reply == (javax.swing.JOptionPane.NO_OPTION)) { return frames.ProzessAllocated.model; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2690/buggy-version/src.frames.ProzessAllocated.java", "BodyUseAPI": [], "Fixed commit": "10fb4edb2bc1a513fd0d659c407504b361463c64", "Url": "https://api.github.com/repos/schoeppeandreas/Lable_Print_Warehouse", "Date": "2018-02-23T14:01:35Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWifiManager) != null) { if (wiseasily.poolbroadcast.PoolBroadcastScanWifi.autoEnableWifi) { mWifiManager.setWifiEnabled(true); } mWifiManager.startScan(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3387/buggy-version/wiseasily.src.main.java.wiseasily.poolbroadcast.PoolBroadcastScanWifi.java", "BodyUseAPI": [], "Fixed commit": "af25ce175b26044cbadddc0b69cd3c6308f30144", "Url": "https://api.github.com/repos/eFishery/wiseasily", "Date": "2018-08-20T07:58:43Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mScanHandler) != null) && ((mScanRunnable) != null)) { mScanHandler.removeCallbacks(mScanRunnable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3387/buggy-version/wiseasily.src.main.java.wiseasily.poolbroadcast.PoolBroadcastScanWifi.java", "BodyUseAPI": [], "Fixed commit": "af25ce175b26044cbadddc0b69cd3c6308f30144", "Url": "https://api.github.com/repos/eFishery/wiseasily", "Date": "2018-08-20T07:58:43Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContext) != null) { mContext.unregisterReceiver(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3387/buggy-version/wiseasily.src.main.java.wiseasily.poolbroadcast.PoolBroadcastScanWifi.java", "BodyUseAPI": [], "Fixed commit": "af25ce175b26044cbadddc0b69cd3c6308f30144", "Url": "https://api.github.com/repos/eFishery/wiseasily", "Date": "2018-08-20T07:58:43Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showLog) { android.util.Log.d(logTag, ((url) + \" --> cancel \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7625/buggy-version/websocket2.src.main.java.com.dhh.websocket.RxWebSocketUtil.java", "BodyUseAPI": [], "Fixed commit": "1f3ead317b6bbf5d0e5ed5e5e3822acf6d4aee9e", "Url": "https://api.github.com/repos/dhhAndroid/RxWebSocket", "Date": "2018-04-13T06:50:25Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends org.onetwo.boot.plugin.core.WebPlugin>.getSimpleName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (clsName.endsWith(org.onetwo.boot.plugin.core.PluginMeta.PLUGIN_POSTFIX)) { clsName = org.apache.commons.lang3.StringUtils.substringBefore(clsName, org.onetwo.boot.plugin.core.PluginMeta.PLUGIN_POSTFIX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3098/buggy-version/core.modules.boot.src.main.java.org.onetwo.boot.plugin.core.PluginMeta.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)"], "Fixed commit": "9488a2e0fa46793b32191486fae2d136302d5bcb", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2018-01-03T10:24:36Z"},
{"Line": "=>2112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taxonId == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7325/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationViewerActivity.java", "BodyUseAPI": [], "Fixed commit": "64db9f959118f0071068b0a5efde3379448a6115", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2018-03-06T13:42:53Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebugEnabled()) { logDebug(java.lang.String.format((\"User: %s denied consent to share information with the service: \" + \"provider %s\"), authenticatedUser.getAuthenticatedSubjectIdentifier(), applicationConfig.getApplicationName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3907/buggy-version/components.authentication-framework.org.wso2.carbon.identity.application.authentication.framework.src.main.java.org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.consent.ConsentMgtPostAuthnHandler.java", "BodyUseAPI": [], "Fixed commit": "d27ed1cfcb51e9435e0476a0528663209d51a10a", "Url": "https://api.github.com/repos/omindu/carbon-identity-framework", "Date": "2018-03-02T04:17:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((group.getUsers()) == null) { userGroupInfoDTO.setNumMembers(1); }else { userGroupInfoDTO.setNumMembers(group.getUsers().size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2036/buggy-version/src.main.java.co.grandcircus.challengeaccepted.MemberController.java", "BodyUseAPI": ["co.grandcircus.challengeaccepted.dto.UserGroupInfoDTO.setNumMembers(group.getUsers().size())", "co.grandcircus.challengeaccepted.entity.Group.getUsers()", "group.getUsers().size()"], "Fixed commit": "0edbb4225996e48979760f0d8fb2af6aa82cbc7a", "Url": "https://api.github.com/repos/VirginiaCordero/challenge_accepted", "Date": "2018-09-18T18:45:57Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wrong_key_numbers) { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), \"\u041a\u0430\u0436\u0434\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u043a\u043b\u044e\u0447\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 0 \u0438 \u043c\u0435\u043d\u044c\u0448\u0435 10^8\", Toast.LENGTH_LONG); toast.show(); }else { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), \"\u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043b\u044f \u043f\u0443\u0441\u0442\u044b\", Toast.LENGTH_SHORT); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/3130/buggy-version/app.src.main.java.com.example.andrey.mathinformer.Programs.Crypter.java", "BodyUseAPI": [], "Fixed commit": "86c3e6c131b2d1a9758bf56d7ef9dc576ad9a2cb", "Url": "https://api.github.com/repos/raskolnikoff1147/MathInformer", "Date": "2018-09-03T17:42:46Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameGrabber.Price.getCurrency()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ratesMap.containsKey(currency))) { return GameGrabber.PriceQueryTask.TYPE_FAILED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1999/buggy-version/app.src.main.java.GameGrabber.PriceQueryTask.java", "BodyUseAPI": [], "Fixed commit": "b099f3409201887184868f0848cadd5826f813b6", "Url": "https://api.github.com/repos/Dounx/NintendoSwitchEShopHelper", "Date": "2018-03-31T17:16:05Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mChatBox.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (text.isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Please enter a message\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1765/buggy-version/app.src.main.java.de.sanemind.smsgateway.MessageListActivity.java", "BodyUseAPI": [], "Fixed commit": "4f7c0292365ddc8684e07dbd571d45b6c9ad0e29", "Url": "https://api.github.com/repos/Craeckie/SMSGateway-Android", "Date": "2018-04-20T14:07:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == (-1)) position = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1765/buggy-version/app.src.main.java.de.sanemind.smsgateway.MessageList.java", "BodyUseAPI": [], "Fixed commit": "4f7c0292365ddc8684e07dbd571d45b6c9ad0e29", "Url": "https://api.github.com/repos/Craeckie/SMSGateway-Android", "Date": "2018-04-20T14:07:36Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) value = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2160/buggy-version/src.main.java.org.magic.api.interfaces.abstracts.AbstractMTGPlugin.java", "BodyUseAPI": [], "Fixed commit": "5a1006a462958f7086dae79055e90d685182c151", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2018-04-10T13:33:13Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["genepi.mut.objects.VariantLine.detectMinorFWD(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (minorFWD != '-') { minors.add(minorFWD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6453/buggy-version/src.main.java.genepi.mut.objects.VariantLine.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Character>.add(char)"], "Fixed commit": "7dc51eda17bd02e45aad9d95eba5acbd4b91a47f", "Url": "https://api.github.com/repos/seppinho/mutation-server", "Date": "2018-06-15T12:15:45Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.month.equals(currentMonth))) { java.lang.String dt = (this.month) + \"-01\"; cond = java.lang.String.format(\"starttime < '%s' and expiretime >= '%s' \", dt, dt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5969/buggy-version/java-tools.OsmAndServerUtilities.src.main.java.net.osmand.data.changeset.OsmAndLiveReports.java", "BodyUseAPI": [], "Fixed commit": "8cb886cc376174e604b69429f3622545c423e496", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-tools", "Date": "2018-09-16T12:41:25Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.smartdata.hdfs.action.ListFileAction.getFileInfo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (hdfsFileStatus == null) { appendLog(\"File not found!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2246/buggy-version/smart-hadoop-support.smart-hadoop.src.main.java.org.smartdata.hdfs.action.ListFileAction.java", "BodyUseAPI": [], "Fixed commit": "ee43b9c68cc157f151e8406754e0a3084268807c", "Url": "https://api.github.com/repos/PHILO-HE/SSM", "Date": "2018-08-27T07:47:17Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.FileSystem.getFileStatus(org.apache.hadoop.fs.Path)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (status == null) { appendLog(\"File not found!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2246/buggy-version/smart-hadoop-support.smart-hadoop.src.main.java.org.smartdata.hdfs.action.ListFileAction.java", "BodyUseAPI": [], "Fixed commit": "ee43b9c68cc157f151e8406754e0a3084268807c", "Url": "https://api.github.com/repos/PHILO-HE/SSM", "Date": "2018-08-27T07:47:17Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (combination != null) { setBackground(java.awt.Color.white); setOpaque(true); update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9604/buggy-version/src.main.java.com.github.deliberateq.qsort.gui.DataGraphPanel.java", "BodyUseAPI": [], "Fixed commit": "061dbeeabaab4789ef9f6456f8ca57fa2d81d959", "Url": "https://api.github.com/repos/davidmoten/DeliberateQ", "Date": "2018-08-02T01:37:22Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!bEncrypt) && (finalLength != (cryptedBytes.length))) { finalBytes = new byte[finalLength]; java.lang.System.arraycopy(cryptedBytes, 0, finalBytes, 0, finalLength); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1528/buggy-version/src.main.java.com.peersafe.chainsql.crypto.Aes256.java", "BodyUseAPI": ["java.lang.System.arraycopy(byte[],int,byte[],int,int)"], "Fixed commit": "26b28e3fec4f91df8330b02c5b644f903bd1743f", "Url": "https://api.github.com/repos/ChainSQL/java-chainsql-api", "Date": "2018-06-07T06:09:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((barCode == null) || (barCode.isEmpty())) || (barCode == \"null\")) { barCode = ua.com.dquality.udrive.constants.Const.DEFAULT_BARCODE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/21/buggy-version/app.src.main.java.ua.com.dquality.udrive.viewmodels.models.HomeModel.java", "BodyUseAPI": [], "Fixed commit": "f6c91d86f4a463edc17426b0b51fcc3925133715", "Url": "https://api.github.com/repos/dquality/UDRIVE", "Date": "2018-05-24T19:47:33Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lines != (this.lines)) { println(); print0((ucase ? \"AND \" : \"and \")); }else { print0((ucase ? \" AND \" : \" and \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2418/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.java", "BodyUseAPI": [], "Fixed commit": "6c1dee00048e7a391dfaab9c3d36df4a62c4239f", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-05-27T05:45:05Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.visitor.SQLBetweenExpr.getBeginExpr()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (beginExpr instanceof com.alibaba.druid.sql.visitor.SQLBinaryOpExpr) { com.alibaba.druid.sql.visitor.SQLBinaryOpExpr binaryOpBegin = ((com.alibaba.druid.sql.visitor.SQLBinaryOpExpr) (beginExpr)); incrementIndent(); if ((binaryOpBegin.isBracket()) || (binaryOpBegin.getOperator().isLogical())) { print('('); printExpr(beginExpr); print(')'); }else { printExpr(beginExpr); } decrementIndent(); }else { printExpr(beginExpr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2418/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.java", "BodyUseAPI": ["com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.printExpr(com.alibaba.druid.sql.visitor.SQLExpr)", "com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.printExpr(com.alibaba.druid.sql.visitor.SQLExpr)", "com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.printExpr(com.alibaba.druid.sql.visitor.SQLExpr)"], "Fixed commit": "6c1dee00048e7a391dfaab9c3d36df4a62c4239f", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2018-05-27T05:45:05Z"},
{"Line": "=>756", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (that instanceof org.eclipse.ceylon.compiler.typechecker.tree.Tree.ObjectDefinition) { ((org.eclipse.ceylon.compiler.typechecker.tree.Tree.ObjectDefinition) (that)).getDeclarationModel().getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6931/buggy-version/typechecker.src.org.eclipse.ceylon.compiler.typechecker.analyzer.RefinementVisitor.java", "BodyUseAPI": [], "Fixed commit": "ad6a3330c86746e5e16c2a9da65971271539aea2", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2018-04-19T00:28:46Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bus_booking.SelectBusOption.passvaluefrom.equals(bus_booking.SelectBusOption.passvalueto)) { javax.swing.JOptionPane.showMessageDialog(null, \"!!!!!!! Please select correct choice ..\"); }else { new bus_booking.CheckSeat().setVisible(true); this.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5614/buggy-version/Bus_booking.src.bus_booking.SelectBusOption.java", "BodyUseAPI": [], "Fixed commit": "fd1753a8d5ae0ea3ace817e14c2208c36304cc67", "Url": "https://api.github.com/repos/CodeRovers/Busbooking", "Date": "2018-08-27T19:53:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((search_parameters[1]) == \"all\") { query = \"\"; }else { query = (\"{\\\"query\\\" : {\\\"term\\\" : { \\\"message\\\" : \\\"\" + (search_parameters[0])) + \"\\\"} }}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/9921/buggy-version/app.src.main.java.ca.ualberta.cs.lonelytwitter.ElasticsearchTweetController.java", "BodyUseAPI": [], "Fixed commit": "17318285b5d3e4a726a7daa857fe4ec44afe5764", "Url": "https://api.github.com/repos/gnassar97/lonelyTwitter", "Date": "2018-02-09T19:49:37Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["itemsTV.getSelectionModel().getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((item != null) && ((item.getChildren().size()) != 0)) { loginPackage.DBConnection.getInstance().deleteProductWithItems(java.lang.Integer.parseInt(item.getValue().getId())); this.refresh(); }else if ((item != null) && ((item.getChildren().size()) != 0)) { loginPackage.DBConnection.getInstance().deleteItemWithExemplars(java.lang.Integer.parseInt(item.getValue().getId())); this.refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/2631/buggy-version/maven-project.src.main.java.controller.ShowItemsController.java", "BodyUseAPI": ["loginPackage.DBConnection.getInstance().deleteProductWithItems(int)", "java.lang.Integer.parseInt(item.getValue().getId())", "javafx.scene.control.TreeItem<model.Product>.getValue()", "javafx.scene.control.TreeItem<model.Product>.getChildren()", "loginPackage.DBConnection.getInstance().deleteItemWithExemplars(int)", "item.getValue().getId()", "java.lang.Integer.parseInt(item.getValue().getId())", "item.getChildren().size()", "javafx.scene.control.TreeItem<model.Product>.getValue()", "item.getValue().getId()"], "Fixed commit": "d4405e0fc1efbd1705f9711a672140de814c19e5", "Url": "https://api.github.com/repos/stefanleithenmayr/Lagerverwaltung", "Date": "2018-02-27T19:12:26Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.matrix.data.LibMatrixCuDNN.getSparsePointer(org.apache.sysml.runtime.instructions.gpu.context.GPUContext,org.apache.sysml.runtime.controlprogram.caching.MatrixObject,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inPointer.nnz) < 0) { throw new org.apache.sysml.runtime.DMLRuntimeException(\"Unknown number of nonzeroes in denseIm2col\"); }else if ((inPointer.nnz) > 0) { getCudaKernels(gCtx).launchKernel(\"sparse_dense_im2col\", org.apache.sysml.runtime.instructions.gpu.context.ExecutionConfig.getConfigForSimpleVectorOperations(toInt(inPointer.nnz)), inPointer.val, inPointer.rowPtr, inPointer.colInd, im2colPointer, inPointer.nnz, N, ((C * H) * W), (H * W), W, R, S, P, Q, (P * Q), (R * S), ((N * P) * Q), stride_h, stride_w, pad_h, pad_w); if (org.apache.sysml.api.DMLScript.FINEGRAINED_STATISTICS) org.apache.sysml.utils.GPUStatistics.maintainCPMiscTimes(instName, GPUInstruction.MISC_TIMER_SPARSE_IM2COL_KERNEL, ((java.lang.System.nanoTime()) - t1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7249/buggy-version/src.main.java.org.apache.sysml.runtime.matrix.data.LibMatrixCuDNN.java", "BodyUseAPI": ["org.apache.sysml.runtime.matrix.data.LibMatrixCuDNN.toInt(inPointer.nnz)", "org.apache.sysml.runtime.instructions.gpu.context.ExecutionConfig.getConfigForSimpleVectorOperations(toInt(inPointer.nnz))", "getCudaKernels(gCtx).launchKernel(java.lang.String,org.apache.sysml.runtime.instructions.gpu.context.ExecutionConfig.getConfigForSimpleVectorOperations(toInt(inPointer.nnz)),inPointer.val,inPointer.rowPtr,inPointer.colInd,jcuda.Pointer,inPointer.nnz,long,long,long,long,int,int,int,int,int,int,long,int,int,int,int)"], "Fixed commit": "c24836eb7ec065453a97a5a35cdd934301d1fe87", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-01-18T21:33:06Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((com.demo.meli.nfcdemo.NfcApplication) (getApplication())).amIWaitingForPayment())) { stopSelf(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/7362/buggy-version/app.src.main.java.com.demo.meli.nfcdemo.NfcCardEmulationService.java", "BodyUseAPI": [], "Fixed commit": "5a770fe803e5c710332a1d92593ed7764a7437de", "Url": "https://api.github.com/repos/leitosalma/nfc_android_sample", "Date": "2018-07-03T18:33:07Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contacts.containsKey(name)) { java.lang.System.out.println(\"Sorry this contact already exists. \"); }else { contacts.put(name, number); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6815/buggy-version/src.contacts.Contact.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "c8e46a17f32c08be2bb82536093d4eb74cb752cb", "Url": "https://api.github.com/repos/Hunter-Houts/codeup-java-exercises", "Date": "2018-10-01T13:58:10Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.knowm.xchange.exmo.service.ExmoAccountServiceRaw.userInfo(org.knowm.xchange.exmo.service.ExmoAccountServiceRaw,org.knowm.xchange.exmo.service.ExmoAccountServiceRaw,exchange.getNonceFactory())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((map.get(\"error\")) != null) { throw new org.knowm.xchange.exceptions.ExchangeException(map.get(\"error\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/5929/buggy-version/xchange-exmo.src.main.java.org.knowm.xchange.exmo.service.ExmoAccountServiceRaw.java", "BodyUseAPI": ["java.util.Map.get(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "12b8f063476efbf9750cea6d1f0368fc6eff2544", "Url": "https://api.github.com/repos/golart/XChange", "Date": "2018-10-05T13:41:47Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.ca.cwds.data.persistence.cms.BaseOtherAdultInPlacemtHome.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fullName.contains(\" \"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8531/buggy-version/api-core-cms.src.main.java.gov.ca.cwds.data.persistence.cms.BaseOtherAdultInPlacemtHome.java", "BodyUseAPI": [], "Fixed commit": "0ea19a73706b937aeea5cfb4b64e3779f8d32e58", "Url": "https://api.github.com/repos/ca-cwds/api-core", "Date": "2018-06-06T00:43:36Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.ca.cwds.data.persistence.cms.BaseOtherAdultInPlacemtHome.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fullName.contains(\" \"))) { return fullName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8531/buggy-version/api-core-cms.src.main.java.gov.ca.cwds.data.persistence.cms.BaseOtherAdultInPlacemtHome.java", "BodyUseAPI": [], "Fixed commit": "0ea19a73706b937aeea5cfb4b64e3779f8d32e58", "Url": "https://api.github.com/repos/ca-cwds/api-core", "Date": "2018-06-06T00:43:36Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.ca.cwds.data.persistence.cms.BaseOtherChildInPlacemtHome.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fullName.contains(\" \"))) { return fullName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8531/buggy-version/api-core-cms.src.main.java.gov.ca.cwds.data.persistence.cms.BaseOtherChildInPlacemtHome.java", "BodyUseAPI": [], "Fixed commit": "0ea19a73706b937aeea5cfb4b64e3779f8d32e58", "Url": "https://api.github.com/repos/ca-cwds/api-core", "Date": "2018-06-06T00:43:36Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.ca.cwds.data.persistence.cms.BaseOtherChildInPlacemtHome.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fullName.contains(\" \"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8531/buggy-version/api-core-cms.src.main.java.gov.ca.cwds.data.persistence.cms.BaseOtherChildInPlacemtHome.java", "BodyUseAPI": [], "Fixed commit": "0ea19a73706b937aeea5cfb4b64e3779f8d32e58", "Url": "https://api.github.com/repos/ca-cwds/api-core", "Date": "2018-06-06T00:43:36Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exoPlayer) != null) { currentExoPlayerPosition = exoPlayer.getContentPosition(); playWhenReady = exoPlayer.getPlayWhenReady(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/1046/buggy-version/app.src.main.java.com.example.thagadur.bakingappudacity.fragments.RecipeStepExoplayerFragment.java", "BodyUseAPI": [], "Fixed commit": "164c05d470922a77ee998ae5bd213fce199bbe86", "Url": "https://api.github.com/repos/rahulthagadur/BakingAppUdacity", "Date": "2018-03-26T08:53:55Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!success) this.plugin.sendMessage(this.player, this.plugin.getL10n().getMessage(\"autosellItemFailed\").arg(\"item\", (((i.getType().toString()) + \":\") + (i.getDurability()))).str());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/6399/buggy-version/src.main.java.me.nexadn.unitedshops.ui.AutoSellGui.java", "BodyUseAPI": [], "Fixed commit": "f163d32b213576630a583bcd6a488ab11cc35f59", "Url": "https://api.github.com/repos/NexAdn/UnitedShops", "Date": "2018-09-22T11:17:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (entries != null) { for (int i = 0; i < n; i++) { if ((entries[i]) instanceof java.lang.String) { java.lang.Object[] newEntries = new java.lang.Object[n]; if (i > 0) { java.lang.System.arraycopy(entries, 0, newEntries, 0, i); } do { java.lang.Object t = entries[i]; newEntries[(i++)] = (t instanceof java.lang.String) ? remapper.mapType(((java.lang.String) (t))) : t; } while (i < n ); return newEntries; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/509/buggy-version/asm-commons.src.main.java.org.objectweb.asm.commons.MethodRemapper.java", "BodyUseAPI": ["java.lang.System.arraycopy(java.lang.Object[],int,java.lang.Object[],int,int)"], "Fixed commit": "0f24cf3206d90cd6980003719cd3de29fc6ac9eb", "Url": "https://api.github.com/repos/JetBrains/intellij-deps-asm", "Date": "2018-02-11T09:49:42Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((worldEnvironment) != null) { configFile.set(\"worldEnvironment\", worldEnvironment.name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8266/buggy-version/src.main.java.io.github.dre2n.dungeonsxl.world.WorldConfig.java", "BodyUseAPI": [], "Fixed commit": "c4dda419455fc97b4260506ca841edd6df5867a9", "Url": "https://api.github.com/repos/DRE2N/DungeonsXL", "Date": "2018-04-21T13:39:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(updatedPath.toString().contains(uk.gov.justice.schema.catalog.CatalogUpdater.CLASSPATH))) { final java.lang.String schema = org.apache.commons.io.IOUtils.toString(updatedPath.toUri().toURL(), java.nio.charset.StandardCharsets.UTF_8); try (final javax.json.JsonReader reader = createReader(new java.io.StringReader(schema))) { final javax.json.JsonObject jsonObject = reader.readObject(); if (jsonObject.containsKey(\"id\")) { final java.lang.String id = jsonObject.getString(\"id\"); schemaIdsToRawJsonSchemaCache.put(id, schema); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/8264/buggy-version/catalog-core.src.main.java.uk.gov.justice.schema.catalog.CatalogUpdater.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toString(java.net.URL,java.nio.charset.Charset)", "java.nio.file.Path.toUri()", "java.net.URI.toURL()"], "Fixed commit": "260722966a1e5115b5d6b30399dd9d43a331bd63", "Url": "https://api.github.com/repos/CJSCommonPlatform/json-schema-catalog", "Date": "2018-07-19T13:28:17Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newRole.equals(\"Moderator\")) { java.lang.System.out.println(\"Mod\"); us.updateUserWithModRole(us.findByEmail(newRoleEmailAddress)); }else if (newRole.equals(\"Admin\")) { java.lang.System.out.println(\"Admin\"); us.updateUserWithAdminRole(us.findByEmail(newRoleEmailAddress)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/949/buggy-version/src.main.java.com.lab206.controllers.AdminController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "19245bb020b695e6968c600c8e9411d21e58298f", "Url": "https://api.github.com/repos/Manzurka/Lab206-Project", "Date": "2018-07-19T16:28:59Z"},
{"Line": "=>754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sequence == 1) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V161/725/buggy-version/echo_master_service.modules.nifi-manager.src.main.java.in.dream_lab.echo.nifi.NifiDeployer.java", "BodyUseAPI": [], "Fixed commit": "55d0c13318ef1bc7297085e4d1e0a95eba26b808", "Url": "https://api.github.com/repos/dream-lab/echo", "Date": "2018-06-19T20:36:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["polisHub.getAPI().getPolisPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (polisPlayer.getRank().getPerms().contains(\"hub.inventory\")) { if (!(player.getGameMode().equals(GameMode.CREATIVE))) { event.setCancelled(true); } }else { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2700/buggy-version/src.fr.thomapolis.polishub.listeners.ListenerPlayer.java", "BodyUseAPI": [], "Fixed commit": "38180f43f814a436738f82488feabf0963aa9a12", "Url": "https://api.github.com/repos/thomapolis/PolisHub", "Date": "2018-07-14T09:05:38Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (args != null) { dibugger.debuglogic.antlrparser.WlangParser.FilledArgumentContext argument = args.filledArgument(); dibugger.debuglogic.interpreter.Term argumentTerm = this.termGenVisitor.visit(argument.term()); arguments.add(argumentTerm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1580/buggy-version/Iplementierung.DIbugger.src.dibugger.debuglogic.interpreter.CommandGenerationVisitor.java", "BodyUseAPI": ["dibugger.debuglogic.antlrparser.WlangParser.FilledArglistContext.filledArgument()"], "Fixed commit": "671e984379e2892ae0e14fdcb0c808dc123325d1", "Url": "https://api.github.com/repos/JoanaP1997/PSE", "Date": "2018-01-25T12:52:41Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dibugger.debuglogic.interpreter.Scope.getValueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) throw new dibugger.debuglogic.exceptions.VariableNotFoundException((-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1580/buggy-version/Iplementierung.DIbugger.src.dibugger.debuglogic.interpreter.VariableTerm.java", "BodyUseAPI": [], "Fixed commit": "671e984379e2892ae0e14fdcb0c808dc123325d1", "Url": "https://api.github.com/repos/JoanaP1997/PSE", "Date": "2018-01-25T12:52:41Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!existMac) { lblNewLabel.setText(\"no macs like this in the database\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7559/buggy-version/GUI_WiFi_Location.src.Algorithms.Algorithm1Panel.java", "BodyUseAPI": [], "Fixed commit": "94e82b70666c1df44d26e2e3c2cf2b857cbe66ae", "Url": "https://api.github.com/repos/IdanHol/OOP_project", "Date": "2018-01-04T00:29:35Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loginUser.getFromUrl().equals(null)) || (loginUser.getFromUrl().equals(\"\"))) { return (\"redirect:\" + (retrieveUiAddress())) + \"reports\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3511/buggy-version/NMSReportingSuite.src.main.java.com.beehyv.nmsreporting.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "b85646fdb4d7bd5f144b05a3ae96c670251ddac5", "Url": "https://api.github.com/repos/motech-implementations/nms-mis", "Date": "2018-03-09T07:43:06Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((target.compareTo(\"Broadcast\")) == 0) ClientApplication.out.writeUTF((\"0|all|\" + text)); else ClientApplication.out.writeUTF((((\"0|\" + target) + \"|\") + text));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8432/buggy-version/src.ClientApplication.java", "BodyUseAPI": ["java.io.DataOutputStream.writeUTF(java.lang.String)"], "Fixed commit": "2b03c986256a14f71cf45d4030b77ade867f5da3", "Url": "https://api.github.com/repos/BrandonGower-Winter/CSC3ChatApp", "Date": "2018-03-18T22:47:18Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObject2.getString(\"status\").equalsIgnoreCase(\"success\")) { android.widget.Toast.makeText(getContext(), jsonObject2.getString(\"status\"), Toast.LENGTH_LONG).show(); org.json.JSONObject jsonObject = new org.json.JSONObject(jsonObject2.getString(\"result\")); apiUser = new com.medicalstorefinder.medicalstorelocator.Models.ApiUser(); apiUser.setID(jsonObject.getInt(\"id\")); apiUser.setFirst_Name(jsonObject.getString(\"firstname\")); apiUser.setLast_Name(jsonObject.getString(\"lastname\")); apiUser.setRegMobile(jsonObject.getString(\"mobile\")); apiUser.setAddress(jsonObject.getString(\"address\")); apiUser.setShop_Name(jsonObject.getString(\"shopname\")); apiUser.setEmail(jsonObject.getString(\"email\")); apiUser.setPasswords(jsonObject.getString(\"password\")); apiUser.setUserRole(jsonObject.getString(\"role\")); sharedPreference.clearSharedPreference(getContext(), Constants.PREF_IS_USER); sharedPreference.createSharedPreference(getActivity(), Constants.PREF_IS_USER); sharedPreference.putValue(getContext(), Constants.PREF_IS_USER, Constants.PREF_KEY_USER_ID, java.lang.String.valueOf(apiUser.getID())); sharedPreference.putValue(getContext(), Constants.PREF_IS_USER, Constants.PREF_KEY_USER_Email, apiUser.getEmail()); sharedPreference.putValue(getContext(), Constants.PREF_IS_USER, Constants.PREF_KEY_USER_PASS, getPassword); sharedPreference.putValue(getContext(), Constants.PREF_IS_USER, Constants.PREF_KEY_USER_PHONE, getMobileNo); sharedPreference.putValue(getContext(), Constants.PREF_IS_USER, Constants.PREF_KEY_USER_Address, apiUser.getAddress()); sharedPreference.putValue(getContext(), Constants.PREF_IS_USER, Constants.PREF_KEY_USER_SHOP_NAME, apiUser.getShop_Name()); sharedPreference.putValue(getContext(), Constants.PREF_IS_USER, Constants.PREF_KEY_USER_FIRST_NAME, apiUser.getFirst_Name()); sharedPreference.putValue(getContext(), Constants.PREF_IS_USER, Constants.PREF_KEY_USER_LAST_NAME, apiUser.getLast_Name()); sharedPreference.putValue(getContext(), Constants.PREF_IS_USER, \"ServiceProvider\", apiUser.getUserRole()); android.content.Intent myIntent = new android.content.Intent(getActivity(), com.medicalstorefinder.medicalstorelocator.Activity.UserActivity.class); getActivity().startActivity(myIntent); getActivity().finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/896/buggy-version/app.src.main.java.com.medicalstorefinder.medicalstorelocator.Fragments.Login_Fragment.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "android.widget.Toast.makeText(getContext(), jsonObject2.getString(\"status\"), Toast.LENGTH_LONG).show()", "org.json.JSONObject.getString(java.lang.String)", "android.widget.Toast.makeText(getContext(),jsonObject2.getString(\"status\"),Toast.LENGTH_LONG)"], "Fixed commit": "d147fa986a2216805808301bff4baa4bf50750d0", "Url": "https://api.github.com/repos/rahul007hr/MedicalStoreLocator", "Date": "2018-07-16T20:37:22Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pendingResult) != null) pendingResult.success(imagePathList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3109/buggy-version/android.src.main.java.com.vitanov.multiimagepicker.MultiImagePickerPlugin.java", "BodyUseAPI": [], "Fixed commit": "1c9ef3d5ae01308e03ad124f4f9fc184501a7fa9", "Url": "https://api.github.com/repos/Sh1d0w/multi_image_picker", "Date": "2018-08-19T12:02:36Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pendingResult) != null) pendingResult.success(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3109/buggy-version/android.src.main.java.com.vitanov.multiimagepicker.MultiImagePickerPlugin.java", "BodyUseAPI": [], "Fixed commit": "1c9ef3d5ae01308e03ad124f4f9fc184501a7fa9", "Url": "https://api.github.com/repos/Sh1d0w/multi_image_picker", "Date": "2018-08-19T12:02:36Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"java.class.path\").indexOf(\".jar\")) < 48) { java.security.CodeSource src = dalclassbagger.Baggui.class.getProtectionDomain().getCodeSource(); if (src != null) { java.net.URL jar = src.getLocation(); java.util.zip.ZipInputStream zip = new java.util.zip.ZipInputStream(jar.openStream()); while (true) { java.util.zip.ZipEntry e = zip.getNextEntry(); if (e == null) break; java.lang.String name = e.getName(); if (name.startsWith(\"profiles/\")) { if ((name.length()) > 9) list.add(name.substring(9, ((name.length()) - 5))); } } }else { java.lang.System.out.println(\"failed to read profile directory\"); } }else { java.io.File folder = new java.io.File(\"src/profiles\"); for (final java.io.File fileEntry : folder.listFiles()) list.add(fileEntry.getName().substring(0, ((fileEntry.getName().length()) - 5))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4290/buggy-version/src.dalclassbagger.Baggui.java", "BodyUseAPI": [], "Fixed commit": "7463ac2c2c637cdbaf6cbfcf3d2cbcb8569c30c1", "Url": "https://api.github.com/repos/DetectiveBurb/DalClassBaggingTool", "Date": "2018-07-06T13:21:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbei.ice.storage.model.Entry.getFolders()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((entryFolders == null) || (entryFolders.isEmpty())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8499/buggy-version/src.main.java.org.jbei.ice.lib.entry.EntryAuthorization.java", "BodyUseAPI": [], "Fixed commit": "8777e1bfc237592cf15b88a468b64275d6e89b6e", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2018-02-12T23:48:44Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (marks.isEmpty()) { this.durations.add(new io.tracer.TraceDuration(start, end, this.name)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4185/buggy-version/src.main.java.io.tracer.TraceInfo.java", "BodyUseAPI": [], "Fixed commit": "7d2a60831c43207afd130bff4d922fe41470ad49", "Url": "https://api.github.com/repos/xytosis/tracer", "Date": "2018-10-20T22:39:00Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arrayPosition != (-1)) { com.example.subscriptiontracker.Subscription currentObject = subsArray.get(arrayPosition); subsArray.remove(currentObject); android.content.Intent intent = new android.content.Intent(this, com.example.subscriptiontracker.SubsList.class); saveInFile(); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/614/buggy-version/app.src.main.java.com.example.subscriptiontracker.EditSub.java", "BodyUseAPI": ["java.util.ArrayList<com.example.subscriptiontracker.Subscription>.get(int)"], "Fixed commit": "7469a5bd518f67ee217904e67e75c7195811f06c", "Url": "https://api.github.com/repos/TannerShmoog/tdloeppk-SubBook", "Date": "2018-02-05T18:47:44Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spoofax.interpreter.terms.IStrategoTerm.getAttachment(ImploderAttachment.TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (it == null) { return createNonTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode), ((org.spoofax.interpreter.terms.IStrategoAppl) (oldNode)).getName(), leftToken, rightToken, children, false, false, false); }else { return createNonTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode), ((org.spoofax.interpreter.terms.IStrategoAppl) (oldNode)).getName(), leftToken, rightToken, children, it.isCompletion(), it.isNestedCompletion(), it.isSinglePlaceholderCompletion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8015/buggy-version/org.spoofax.jsglr.src.org.spoofax.jsglr.client.imploder.TermTreeFactory.java", "BodyUseAPI": ["org.spoofax.jsglr.client.imploder.ImploderAttachment.isNestedCompletion()", "org.spoofax.jsglr.client.imploder.TermTreeFactory.createNonTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode),((org.spoofax.interpreter.terms.IStrategoAppl) (oldNode)).getName(),org.spoofax.jsglr.client.imploder.IToken,org.spoofax.jsglr.client.imploder.IToken,java.util.List<org.spoofax.interpreter.terms.IStrategoTerm>,it.isCompletion(),it.isNestedCompletion(),it.isSinglePlaceholderCompletion())", "org.spoofax.jsglr.client.imploder.ImploderAttachment.isCompletion()", "org.spoofax.jsglr.client.imploder.ImploderAttachment.isSinglePlaceholderCompletion()"], "Fixed commit": "998a3ab75685920917fbc0facddb5372149259bc", "Url": "https://api.github.com/repos/metaborg/jsglr", "Date": "2018-06-02T15:47:19Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spoofax.interpreter.terms.IStrategoTerm.getAttachment(ImploderAttachment.TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (it == null) { return createStringTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode), leftToken, rightToken, ((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue(), false); }else { return createStringTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode), leftToken, rightToken, ((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue(), (!(((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue().equals(it.toString())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8015/buggy-version/org.spoofax.jsglr.src.org.spoofax.jsglr.client.imploder.TermTreeFactory.java", "BodyUseAPI": ["org.spoofax.jsglr.client.imploder.ImploderAttachment.toString()", "org.spoofax.jsglr.client.imploder.TermTreeFactory.createStringTerminal(org.spoofax.jsglr.client.imploder.ImploderAttachment.getSort(oldNode),org.spoofax.jsglr.client.imploder.IToken,org.spoofax.jsglr.client.imploder.IToken,((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue(),(!(((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue().equals(it.toString()))))", "((org.spoofax.interpreter.terms.IStrategoString) (oldNode)).stringValue().equals(it.toString())"], "Fixed commit": "998a3ab75685920917fbc0facddb5372149259bc", "Url": "https://api.github.com/repos/metaborg/jsglr", "Date": "2018-06-02T15:47:19Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controllerDay) != null) controllerDay.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6685/buggy-version/studywithema.src.main.java.org.md2k.studywithema.AbstractActivityBasics.java", "BodyUseAPI": [], "Fixed commit": "4626209f98769887722407e61f86a2c08172ff1d", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-StudyWithEMA", "Date": "2018-02-28T18:31:38Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((cConfig) == null) || ((cConfig.ui) == null)) || ((cConfig.ui.home_screen) == null)) || ((cConfig.ui.home_screen.day) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6685/buggy-version/studywithema.src.main.java.org.md2k.studywithema.AbstractActivityBasics.java", "BodyUseAPI": [], "Fixed commit": "4626209f98769887722407e61f86a2c08172ff1d", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-StudyWithEMA", "Date": "2018-02-28T18:31:38Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controllerDay) != null) controllerDay.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6685/buggy-version/studywithema.src.main.java.org.md2k.studywithema.AbstractActivityBasics.java", "BodyUseAPI": [], "Fixed commit": "4626209f98769887722407e61f86a2c08172ff1d", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-StudyWithEMA", "Date": "2018-02-28T18:31:38Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mk.configuration.Configuration.getMeshSizeX()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((position.getY()) > (meshSize - (border))) position.setY((meshSize - (border)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/894/buggy-version/src.main.java.com.mk.models.physics.Walker.java", "BodyUseAPI": ["com.mk.models.geometries.Position.setY(int)"], "Fixed commit": "a1e4d956b806947b5582205a79ca68e4198ac780", "Url": "https://api.github.com/repos/SiL3x/sioxdla3d", "Date": "2018-08-23T21:52:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((music.getType()) == (MusicBean.Type.LOCAL)) { metaData.putBitmap(MediaMetadataCompat.METADATA_KEY_ALBUM_ART, com.minardwu.yiyue.utils.CoverLoader.getInstance().loadThumbnail(music)); }else { metaData.putBitmap(MediaMetadataCompat.METADATA_KEY_ALBUM_ART, music.getOnlineMusicCover()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5696/buggy-version/app.src.main.java.com.minardwu.yiyue.service.MediaSessionManager.java", "BodyUseAPI": ["MediaMetadataCompat.Builder.putBitmap(MediaMetadataCompat.METADATA_KEY_ALBUM_ART,com.minardwu.yiyue.utils.CoverLoader.getInstance().loadThumbnail(music))", "com.minardwu.yiyue.model.MusicBean.getOnlineMusicCover()", "MediaMetadataCompat.Builder.putBitmap(MediaMetadataCompat.METADATA_KEY_ALBUM_ART,music.getOnlineMusicCover())", "com.minardwu.yiyue.utils.CoverLoader.getInstance().loadThumbnail(com.minardwu.yiyue.model.MusicBean)"], "Fixed commit": "a32b9d58632c901dc8af1503bfa782a5663304f8", "Url": "https://api.github.com/repos/MinardWu/YiYueMusic", "Date": "2018-02-04T06:53:25Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.minardwu.yiyue.application.AppCache.getCurrentService()) instanceof com.minardwu.yiyue.service.PlayOnlineMusicService) { com.minardwu.yiyue.application.AppCache.getCurrentService().next(); }else { com.minardwu.yiyue.application.AppCache.getCurrentService().prev(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5696/buggy-version/app.src.main.java.com.minardwu.yiyue.service.MediaSessionManager.java", "BodyUseAPI": [], "Fixed commit": "a32b9d58632c901dc8af1503bfa782a5663304f8", "Url": "https://api.github.com/repos/MinardWu/YiYueMusic", "Date": "2018-02-04T06:53:25Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.results) != null) { this.logger.info((\"Results: \" + (this.results.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8684/buggy-version/quiz-service.src.main.java.quiz.service.QuizService.java", "BodyUseAPI": [], "Fixed commit": "e4fdbdb5570c515126d15b467109d8e5954440dd", "Url": "https://api.github.com/repos/veronikapazderska/quizApp", "Date": "2018-08-27T14:06:57Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.results.containsKey(questionAnswer.getUsername())) { this.results.put(questionAnswer.getUsername(), ((this.results.get(questionAnswer.getUsername())) + 0)); }else { this.results.put(questionAnswer.getUsername(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8684/buggy-version/quiz-service.src.main.java.quiz.service.QuizService.java", "BodyUseAPI": ["api.question.QuestionAnswer.getUsername()", "java.util.Map<java.lang.String, java.lang.Integer>.put(questionAnswer.getUsername(),int)", "java.util.Map<java.lang.String, java.lang.Integer>.get(questionAnswer.getUsername())", "api.question.QuestionAnswer.getUsername()", "java.util.Map<java.lang.String, java.lang.Integer>.put(questionAnswer.getUsername(),((this.results.get(questionAnswer.getUsername())) + 0))", "api.question.QuestionAnswer.getUsername()"], "Fixed commit": "e4fdbdb5570c515126d15b467109d8e5954440dd", "Url": "https://api.github.com/repos/veronikapazderska/quizApp", "Date": "2018-08-27T14:06:57Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getObjectMapper().writeValueAsString(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((x = str.indexOf(\"}\")) != (-1)) { index += x; index2 += x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6076/buggy-version/lib.src.main.java.ir.atitec.signalgo.HttpCore.java", "BodyUseAPI": [], "Fixed commit": "0820e2de04e5eb80f09132d1c7a67b1792f291a4", "Url": "https://api.github.com/repos/hamedgramzi/signalGoClient", "Date": "2018-02-12T13:18:39Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!rootPasswdError) { java.lang.System.out.println(\"Clear the cache of memory for all servers!\"); }else { java.lang.System.out.println(\"The password of root user is ERROR! Continue to generate data ...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3064/buggy-version/src.edu.ecnu.touchstone.run.Touchstone.java", "BodyUseAPI": [], "Fixed commit": "c2ae6c38c0bf7f456a1492c3babeee905701bee2", "Url": "https://api.github.com/repos/daseECNU/Touchstone", "Date": "2018-07-18T09:16:58Z"},
{"Line": "=>814", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GUI.BoardPanel.getMousePosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mousePt == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7284/buggy-version/GUI.java", "BodyUseAPI": [], "Fixed commit": "f0247a3204067bb5ce3acc46278c8e1d87c1cd8c", "Url": "https://api.github.com/repos/kbhadury/Minesweeper", "Date": "2018-06-30T21:39:26Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"jar\".equals(configUrl.getProtocol())) { existHome = java.nio.file.Paths.get(new java.net.URI(configUrl.getPath())).getParent().getParent(); org.exist.util.ConfigurationHelper.LOG.warn((config + \" file was found on the classpath, but inside a Jar file! Derived EXIST_HOME from Jar's parent folder: {}\"), existHome); }else { existHome = java.nio.file.Paths.get(configUrl.toURI()).getParent(); org.exist.util.ConfigurationHelper.LOG.debug(\"Got EXIST_HOME from classpath: {}\", existHome.toAbsolutePath().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2400/buggy-version/src.org.exist.util.ConfigurationHelper.java", "BodyUseAPI": ["java.nio.file.Paths.get(java.net.URI)", "java.net.URL.getPath()", "java.nio.file.Path.getParent()", "java.nio.file.Path.getParent()", "java.nio.file.Paths.get(java.net.URI)", "java.nio.file.Path.getParent()", "java.net.URL.toURI()"], "Fixed commit": "541957f861a816f0a68def50d8bf7dd2c2e005c3", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2018-07-13T11:42:02Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(errors.isEmpty())) { throw new org.identifiers.org.cloud.ws.register.models.PrefixRegistrationRequestValidatorException(java.lang.String.join(\"\\n\", errors)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5549/buggy-version/src.main.java.org.identifiers.org.cloud.ws.register.models.PrefixRegistrationRequestValidatorCrossedRegexPatternAndExampleIdentifier.java", "BodyUseAPI": ["java.lang.String.join(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "f3d58b6013e68b829d8be95dedad6b5fc1b05743", "Url": "https://api.github.com/repos/identifiers-org/cloud-ws-register", "Date": "2018-02-02T11:23:59Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(selectedAaeinspo.getFiled6())) { field5_2.setValue(java.time.LocalDate.parse(selectedAaeinspo.getFiled6(), dateFormatter)); }else if (((selectedAaeinspDto.getBsWorkcoming()) != null) && ((selectedAaeinspDto.getBsWorkcoming().getFiled2()) != null)) { field5_2.setValue(java.time.LocalDate.parse(selectedAaeinspDto.getBsWorkcoming().getFiled2(), dateFormatter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7069/buggy-version/src.com.gtm.csims.offline.scene.inspection.FactbookTab.java", "BodyUseAPI": [], "Fixed commit": "65261d3d71d63efe832e59f4fa80b8b82dc45298", "Url": "https://api.github.com/repos/YangYongZhi/csims_offline", "Date": "2018-04-08T09:47:52Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((selectedAaeinspDto.getBsWorkcoming()) != null) && ((selectedAaeinspDto.getBsWorkcoming().getFiled2()) != null)) { field2_10.setValue(java.time.LocalDate.parse(selectedAaeinspDto.getBsWorkcoming().getFiled2(), dateFormatter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7069/buggy-version/src.com.gtm.csims.offline.scene.inspection.TalkTab.java", "BodyUseAPI": [], "Fixed commit": "65261d3d71d63efe832e59f4fa80b8b82dc45298", "Url": "https://api.github.com/repos/YangYongZhi/csims_offline", "Date": "2018-04-08T09:47:52Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7783/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "414d433f4aae56f9904643303c2f4a5d026f23da", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(shardingRuleConfigurations.isEmpty())) { orchestrationFacade.init(io.shardingsphere.proxy.Bootstrap.getOrchestrationConfiguration(serverConfiguration, shardingRuleConfigurations)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7520/buggy-version/sharding-proxy.src.main.java.io.shardingsphere.proxy.Bootstrap.java", "BodyUseAPI": ["io.shardingsphere.jdbc.orchestration.internal.OrchestrationFacade.init(io.shardingsphere.jdbc.orchestration.config.OrchestrationProxyConfiguration)", "io.shardingsphere.proxy.Bootstrap.getOrchestrationConfiguration(io.shardingsphere.proxy.config.YamlProxyServerConfiguration,java.util.Collection<io.shardingsphere.proxy.config.YamlProxyShardingRuleConfiguration>)"], "Fixed commit": "52c509d5fa0a31e52641944eda59d73c872a6b05", "Url": "https://api.github.com/repos/beckhampu/sharding-sphere", "Date": "2018-09-10T10:26:41Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.shardingsphere.jdbc.orchestration.internal.config.ConfigurationService.loadProxyConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((schemaRuleMap.get(each.getKey()).getMasterSlaveRule()) != null) { schemaRuleMap.get(each.getKey()).getMasterSlaveRule().getSlaveDataSourceNames().remove(disabledDataSourceName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7520/buggy-version/sharding-orchestration.sharding-orchestration-core.src.main.java.io.shardingsphere.jdbc.orchestration.internal.state.datasource.DataSourceService.java", "BodyUseAPI": ["schemaRuleMap.get(each.getKey()).getMasterSlaveRule().getSlaveDataSourceNames().remove(java.lang.String)", "schemaRuleMap.get(each.getKey()).getMasterSlaveRule().getSlaveDataSourceNames()", "java.util.Map.Entry<java.lang.String, java.util.Collection<java.lang.String>>.getKey()", "schemaRuleMap.get(each.getKey()).getMasterSlaveRule()", "java.util.Map<java.lang.String, io.shardingsphere.core.api.config.ProxySchemaRule>.get(java.lang.String)"], "Fixed commit": "52c509d5fa0a31e52641944eda59d73c872a6b05", "Url": "https://api.github.com/repos/beckhampu/sharding-sphere", "Date": "2018-09-10T10:26:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((rids != null) && ((rids.size()) > 0)) { for (org.mushare.tsukuba.domain.Room room : roomDao.findByRids(rids)) { if ((!(room.getReceiver().equals(user))) && (!(room.getSender().equals(user)))) { continue; } rooms.remove(room); existingRooms.add(new org.mushare.tsukuba.bean.RoomBean(room, org.mushare.tsukuba.bean.RoomBean.RoomBeanStatus, room.getSender().equals(user))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/579/buggy-version/src.main.java.org.mushare.tsukuba.service.impl.RoomManagerImpl.java", "BodyUseAPI": ["org.mushare.tsukuba.service.impl.RoomManagerImpl.findByRids(java.util.List<java.lang.String>)"], "Fixed commit": "82e88bea0ee24d11ef82a275a42029bd19d48817", "Url": "https://api.github.com/repos/MuShare/Tsukuba-Server", "Date": "2018-03-07T13:42:42Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.aop.support.AopUtils.isAopProxy(rocketMQListener)) { interfaces = org.springframework.aop.support.AopUtils.getTargetClass(rocketMQListener).getGenericInterfaces(); }else { interfaces = rocketMQListener.getClass().getGenericInterfaces(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8663/buggy-version/rocketmq-spring-boot-starter.src.main.java.org.apache.rocketmq.spring.starter.core.DefaultRocketMQListenerContainer.java", "BodyUseAPI": ["org.springframework.aop.support.AopUtils.getTargetClass(org.apache.rocketmq.spring.starter.core.RocketMQListener)", "org.springframework.aop.support.AopUtils.getTargetClass(rocketMQListener).getGenericInterfaces()", "org.apache.rocketmq.spring.starter.core.RocketMQListener.getClass()", "rocketMQListener.getClass().getGenericInterfaces()"], "Fixed commit": "9e1917d16974b2a78e87b2f8f07978a25c7fe009", "Url": "https://api.github.com/repos/1479005017/rocketmq-externals", "Date": "2018-02-27T07:08:54Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.agpalace.willow.structure.RedBlackTree.Node.isBlackNode(brother.left)) && (com.agpalace.willow.structure.RedBlackTree.Node.isBlackNode(brother.right))) { brother.toRed(); node = node.parent; }else { if (((brother.right) == null) && (com.agpalace.willow.structure.RedBlackTree.Node.isBlackNode(brother.left))) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2772/buggy-version/src.main.java.com.agpalace.willow.structure.RedBlackTree.java", "BodyUseAPI": ["com.agpalace.willow.structure.RedBlackTree.Node<E>.toRed()", "com.agpalace.willow.structure.RedBlackTree.Node.isBlackNode(com.agpalace.willow.structure.RedBlackTree.Node<E>)"], "Fixed commit": "2114f40d07f364147c1ff77566377526bb6e6df0", "Url": "https://api.github.com/repos/flycash/willow", "Date": "2018-03-30T14:30:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lineCount == 0) { java.lang.System.out.println(\"\u6ca1\u6709\u8bc6\u522b\u5230\u6587\u5b57\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4904/buggy-version/src.main.java.com.bonult.money.MakingMoneyWithQA.java", "BodyUseAPI": [], "Fixed commit": "3135b12e3a1348214562ff0f1f53c1b7b9ee5cb5", "Url": "https://api.github.com/repos/bonult/LiveToTheEnd_QA", "Date": "2018-01-15T07:54:47Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (damage > 0) { edu.ycp.cs320.IslandAdventure.controller.Weapon weapon = new edu.ycp.cs320.IslandAdventure.controller.Weapon(itemName, itemName, player.getLocation(), damage); inventory.addItem(weapon, 1); }else if (damage < 0) { edu.ycp.cs320.IslandAdventure.controller.Armor armor = new edu.ycp.cs320.IslandAdventure.controller.Armor(itemName, itemName, player.getLocation(), (-damage)); inventory.addItem(armor, 1); }else { edu.ycp.cs320.IslandAdventure.controller.Item item = new edu.ycp.cs320.IslandAdventure.controller.Item(itemName, itemName, player.getLocation(), 0); inventory.addItem(item, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7880/buggy-version/src.edu.ycp.cs320.IslandAdventure.controller.ActionController.java", "BodyUseAPI": [], "Fixed commit": "f259929540c611cba0eda353dd5548b77bfb8de0", "Url": "https://api.github.com/repos/Nolan-Hamilton/IslandAdventure", "Date": "2018-05-01T16:41:53Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPath()) != null) { path = getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3920/buggy-version/org.jtool.macrorecorder.src.org.jtool.macrorecorder.macro.CompoundMacro.java", "BodyUseAPI": [], "Fixed commit": "1f72e637aedc120f654eb40807328d6a98a6ccee", "Url": "https://api.github.com/repos/katsuhisamaruyama/ChangeMacroRecorder", "Date": "2018-01-10T01:05:09Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageStart + messageSize) > (bytes.length)) messageEnd = bytes.length; else messageEnd = messageStart + messageSize;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5987/buggy-version/homework1.src.TCPClient.java", "BodyUseAPI": [], "Fixed commit": "fce0de57eb5e16cac2a26259f99064a82027b371", "Url": "https://api.github.com/repos/stephendicerce/csc445", "Date": "2018-03-05T04:29:02Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageStart + messageSize) > (bytes.length)) messageEnd = bytes.length; else messageEnd = messageStart + messageSize;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5987/buggy-version/homework1.src.TCPServer.java", "BodyUseAPI": [], "Fixed commit": "fce0de57eb5e16cac2a26259f99064a82027b371", "Url": "https://api.github.com/repos/stephendicerce/csc445", "Date": "2018-03-05T04:29:02Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursorY) != (Editor.STARTING_Y)) { while ((buffer.currText().getY()) > ((cursorY) - (java.lang.Math.floor(textHeight)))) { buffer.prevCurr(); } while ((buffer.prevText().getX()) > (cursorX)) { buffer.prevCurr(); } updateCursor(buffer.currText().getX(), buffer.currText().getY()); setCursor(cursorX, cursorY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2662/buggy-version/Editor.java", "BodyUseAPI": [], "Fixed commit": "3e9ea2beb850d22f5c7edf9a7fbe714f9ee14289", "Url": "https://api.github.com/repos/jeremyd1/text_editor", "Date": "2018-05-23T03:50:32Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(audioSettings.getWriteFiles())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7919/buggy-version/app.src.main.java.cityfreqs.com.pilfershush.assist.WriteProcessor.java", "BodyUseAPI": [], "Fixed commit": "bf0379a8f8f8311ec0f37904375e9449e39c3775", "Url": "https://api.github.com/repos/kaputnikGo/PilferShush_prod", "Date": "2018-06-12T05:10:55Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGlobal)) result = new java.lang.StringBuilder(((((binding.generateCName()) + \" \") + (obj.generateCName())) + \" = \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5936/buggy-version/src.feder.SyntaxTreeElement.java", "BodyUseAPI": [], "Fixed commit": "bb881aaeb5e98295c9e9f538c3a7ebf07f21bbe0", "Url": "https://api.github.com/repos/codefionn/feder", "Date": "2018-04-10T18:54:28Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tail) - (head)) <= ((s.length) / 4)) { resize(((s.length) / 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6621/buggy-version/src.ArrayStringQueue.java", "BodyUseAPI": ["ArrayStringQueue.resize(int)"], "Fixed commit": "b01cac55acce48a0c873ba8981cc467d377b3fdf", "Url": "https://api.github.com/repos/divsmith/basic-structures", "Date": "2018-04-01T22:08:01Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getEntityType(loc.getX(), loc.getY())) != (EntityType.NONE)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9451/buggy-version/src.core.FlattenedBoard.java", "BodyUseAPI": [], "Fixed commit": "22e35b9743626aa42ed187ee2cd0c8bf31fb28a6", "Url": "https://api.github.com/repos/smorfer/Prog2Project", "Date": "2018-04-17T08:15:52Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mGoogleApiClient.isConnected()) Auth.GoogleSignInApi.signOut(mGoogleApiClient);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4802/buggy-version/app.src.main.java.com.example.toshimishra.photolearn.MainActivity.java", "BodyUseAPI": ["Auth.GoogleSignInApi.signOut(com.google.android.gms.common.api.GoogleApiClient)"], "Fixed commit": "7e4b08f9f95ac10590f94da239f47edd4b840954", "Url": "https://api.github.com/repos/SharanyaMenon/project_new_structure", "Date": "2018-03-21T16:19:35Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mGoogleApiClient.isConnected()) Auth.GoogleSignInApi.signOut(mGoogleApiClient);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4802/buggy-version/app.src.main.java.com.example.toshimishra.photolearn.MainActivity.java", "BodyUseAPI": ["Auth.GoogleSignInApi.signOut(com.google.android.gms.common.api.GoogleApiClient)"], "Fixed commit": "7e4b08f9f95ac10590f94da239f47edd4b840954", "Url": "https://api.github.com/repos/SharanyaMenon/project_new_structure", "Date": "2018-03-21T16:19:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != (soldater.johannas.model.Player.FALLING)) { state = soldater.johannas.model.Player.JUMPING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7259/buggy-version/alesk-the-unicorn.core.src.soldater.johannas.model.Player.java", "BodyUseAPI": [], "Fixed commit": "b6f8d13c2084a5d0f12fe5c4de78d4d248268b4b", "Url": "https://api.github.com/repos/Putzies/aleks-the-game", "Date": "2018-04-03T21:56:54Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((part) == (com.github.informatievlaanderen.oslo_ea_to_rdf.convert.ea.NormalizedEAConnector.ConnectionPart.ASSOCIATION_TO_DESTINATION)) return \"1\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3486/buggy-version/src.main.java.com.github.informatievlaanderen.oslo_ea_to_rdf.convert.ea.NormalizedEAConnector.java", "BodyUseAPI": [], "Fixed commit": "24aa52d9a0cb655c8293c1cec2d12d7eff7a8854", "Url": "https://api.github.com/repos/Informatievlaanderen/OSLO-EA-to-RDF", "Date": "2018-08-24T09:12:43Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((part) == (com.github.informatievlaanderen.oslo_ea_to_rdf.convert.ea.NormalizedEAConnector.ConnectionPart.DESTINATION_TO_ASSOCIATION)) return \"1\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3486/buggy-version/src.main.java.com.github.informatievlaanderen.oslo_ea_to_rdf.convert.ea.NormalizedEAConnector.java", "BodyUseAPI": [], "Fixed commit": "24aa52d9a0cb655c8293c1cec2d12d7eff7a8854", "Url": "https://api.github.com/repos/Informatievlaanderen/OSLO-EA-to-RDF", "Date": "2018-08-24T09:12:43Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thread) != null) { thread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7802/buggy-version/ZWBS-Android.app.src.main.java.com.ruitukeji.zwbs.getorder.selectioncity.addresssearch.AddressSearchActivity.java", "BodyUseAPI": [], "Fixed commit": "00c6addc906450224d1978c9643f5b8d6a07eefa", "Url": "https://api.github.com/repos/921668753/wztx-driver-andriod", "Date": "2018-03-07T08:40:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.contains(\".\")) return java.lang.Double.parseDouble(item);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8110/buggy-version/src.Jconf.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "6663f7ae686e4f13e645a508487c4362c2856916", "Url": "https://api.github.com/repos/jaxke/JConf", "Date": "2018-07-11T17:49:42Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount <= 0) { throw new com.github.ontio.sdk.exception.SDKException(com.github.ontio.common.ErrorCode.NullKeyOrValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/171/buggy-version/app.src.main.java.com.github.ontio.sdk.manager.OntAssetTx.java", "BodyUseAPI": [], "Fixed commit": "c391e9404c08e2e9b7b647a270d4d100f0c9023d", "Url": "https://api.github.com/repos/nlpxdc/ontology-andriod-sdk", "Date": "2018-05-14T11:06:38Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((Q == null) || ((Q.getAffineXCoord()) == null)) || ((Q.getAffineYCoord()) == null)) { throw new com.github.ontio.sdk.exception.SDKException(com.github.ontio.common.ErrorCode.KeyAddressPwdNotMatch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/171/buggy-version/app.src.main.java.com.github.ontio.account.Account.java", "BodyUseAPI": [], "Fixed commit": "c391e9404c08e2e9b7b647a270d4d100f0c9023d", "Url": "https://api.github.com/repos/nlpxdc/ontology-andriod-sdk", "Date": "2018-05-14T11:06:38Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prefix.length) == 0) { throw new com.github.ontio.sdk.exception.SDKException(com.github.ontio.common.ErrorCode.ParamError); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/171/buggy-version/app.src.main.java.com.github.ontio.account.Account.java", "BodyUseAPI": [], "Fixed commit": "c391e9404c08e2e9b7b647a270d4d100f0c9023d", "Url": "https://api.github.com/repos/nlpxdc/ontology-andriod-sdk", "Date": "2018-05-14T11:06:38Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configAll) { configuration = ibisManager.getConfigurations().get(0); configAll = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4910/buggy-version/core.src.main.java.nl.nn.adapterframework.webcontrol.pipes.ShowEnvironmentVariables.java", "BodyUseAPI": [], "Fixed commit": "6dbc1915af67bb055b890d46c304e58853ea16e8", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2018-04-20T19:44:53Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((playerName != null) && (player != null)) && (player instanceof org.bukkit.command.ConsoleCommandSender)) { try { name = name.replace(\"%player%\", \"CONSOLE\"); } catch (java.lang.Exception e) { if (me.RockinChaos.itemjoin.handlers.ServerHandler.hasDebuggingMode()) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1617/buggy-version/src.me.RockinChaos.itemjoin.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "0c05e44b0ea527523992d397dc0afd1084f0d497", "Url": "https://api.github.com/repos/RockinChaos/ItemJoin", "Date": "2018-08-19T20:32:30Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (type == null) { type = eu.europeana.corelib.edm.utils.SchemaOrgTypeFactory.getType(proxy.getDcSubject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/368/buggy-version/corelib-storage.src.main.java.eu.europeana.corelib.edm.utils.SchemaOrgTypeFactory.java", "BodyUseAPI": [], "Fixed commit": "ac30b37553ba1465e07bd2f8f31ebdbf14417635", "Url": "https://api.github.com/repos/europeana/corelib", "Date": "2018-09-10T10:43:53Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.exploredPoints.isEmpty())) { final com.google.android.gms.maps.model.LatLng lastLocation = this.exploredPoints.get(((this.exploredPoints.size()) - 1)); double distance = com.esri.core.geometry.GeometryEngine.geodesicDistance(new com.esri.core.geometry.Point(newLocation.latitude, newLocation.longitude), new com.esri.core.geometry.Point(lastLocation.latitude, lastLocation.longitude), com.esri.core.geometry.SpatialReference.create(SpatialReference.WKID_WGS84), ((com.esri.core.geometry.LinearUnit) (com.esri.core.geometry.Unit.create(LinearUnit.Code.METER)))); if (distance > 250) { this.exploredPoints.clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7983/buggy-version/app.src.main.java.com.szymon.hackathonapplication.activities.MapActivity.java", "BodyUseAPI": ["java.util.List<com.google.android.gms.maps.model.LatLng>.get(((this.exploredPoints.size()) - 1))", "java.util.List<com.google.android.gms.maps.model.LatLng>.size()", "java.util.List<com.google.android.gms.maps.model.LatLng>.clear()"], "Fixed commit": "f25742fd7c5bed616a5f3673942c26b9390ce47f", "Url": "https://api.github.com/repos/Verdant90/msciwe_klarnecistki_hackathon", "Date": "2018-04-15T05:12:33Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hashMap.containsKey(item)) { int curNum = ((int) (hashMap.get((item + \"\")))); if (curNum > preNum) { result += curNum - (2 * preNum); }else { result += curNum; } preNum = curNum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3728/buggy-version/src.main.java.Util.RomanToIntegerService.java", "BodyUseAPI": ["java.util.HashMap.get(java.lang.String)"], "Fixed commit": "65c947010c2e82310a2b7da8062b560e5b0966e0", "Url": "https://api.github.com/repos/wangyushuai/TDD-MerchantsGrideToTheGalaxy", "Date": "2018-08-27T06:38:32Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (planet.contains(\"eris\")) name = \"planet.Eris\"; else if (planet.contains(\"pluto\")) name = \"planet.Pluto\"; else if (planet.contains(\"ceres\")) name = \"planet.Ceres\"; else if (planet.contains(\"kuiperbelt\")) name = \"planet.kuiperBelt\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3380/buggy-version/src.main.java.com.mjr.planetprogression.item.ResearchPaper.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "a2b7e4b4a87114301f9e38116a986e6349ce8cec", "Url": "https://api.github.com/repos/MJRLegends/Planet-Progression", "Date": "2018-03-25T18:07:28Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.dataPublisherPool) != null) { org.wso2.carbon.apimgt.gateway.throttling.publisher.DataProcessAndPublishingAgent agent = org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.dataPublisherPool.get(); agent.setDataReference(applicationLevelThrottleKey, applicationLevelTier, apiLevelThrottleKey, apiLevelTier, subscriptionLevelThrottleKey, subscriptionLevelTier, resourceLevelThrottleKey, resourceLevelTier, authorizedUser, apiContext, apiVersion, appTenant, apiTenant, appId, messageContext, authenticationContext); if (org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.log.isDebugEnabled()) { org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.log.debug(((((((\"Publishing throttle data from gateway to traffic-manager for: \" + apiContext) + \" with ID: \") + (messageContext.getMessageID())) + \" started\") + \" at \") + (new java.text.SimpleDateFormat(\"[yyyy.MM.dd HH:mm:ss,SSS zzz]\").format(new java.util.Date())))); } executor.execute(agent); if (org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.log.isDebugEnabled()) { org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.log.debug(((((((\"Publishing throttle data from gateway to traffic-manager for: \" + apiContext) + \" with ID: \") + (messageContext.getMessageID())) + \" ended\") + \" at \") + (new java.text.SimpleDateFormat(\"[yyyy.MM.dd HH:mm:ss,SSS zzz]\").format(new java.util.Date())))); } }else { org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.log.debug(\"Throttle data publisher pool is not initialized.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/272/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.throttling.publisher.ThrottleDataPublisher.java", "BodyUseAPI": [], "Fixed commit": "7ae5cd0ffb54aca3575908872dfe8010773186f8", "Url": "https://api.github.com/repos/Krishanx92/carbon-apimgt", "Date": "2018-06-10T07:29:00Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayer) != null) { mediaPlayer.release(); android.util.Log.d(\"RELEASE ME!!!\", \"RELEAAAAAAAASE MEEEEEEE!!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3707/buggy-version/app.src.main.java.com.example.android.miwok.WordAdapter.java", "BodyUseAPI": [], "Fixed commit": "41aab942369eb958f9c3bb6ea47aacecf6173ba0", "Url": "https://api.github.com/repos/ccojocea/Miwok", "Date": "2018-04-14T16:31:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mediaPlayer) != null) && (mediaPlayer.isPlaying())) { mediaPlayer.stop(); mediaPlayer.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3707/buggy-version/app.src.main.java.com.example.android.miwok.WordAdapter.java", "BodyUseAPI": ["android.media.MediaPlayer.release()", "android.media.MediaPlayer.stop()"], "Fixed commit": "41aab942369eb958f9c3bb6ea47aacecf6173ba0", "Url": "https://api.github.com/repos/ccojocea/Miwok", "Date": "2018-04-14T16:31:14Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (modelConfig.isRegression()) { ideal[(outputIndex++)] = floatValue; }else { if (modelConfig.getTrain().isOneVsAll()) { ideal[(outputIndex++)] = ((java.lang.Float.compare(floatValue, trainerId)) == 0) ? 1.0F : 0.0F; }else { if ((modelConfig.getTags().size()) == 2) { int ideaIndex = ((int) (floatValue)); ideal[0] = (ideaIndex == 0) ? 1.0F : 0.0F; }else { int ideaIndex = ((int) (floatValue)); ideal[ideaIndex] = 1.0F; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8618/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.nn.NNWorker.java", "BodyUseAPI": ["ml.shifu.shifu.core.dtrain.nn.NNWorker.getTrain()", "ml.shifu.shifu.core.dtrain.nn.NNWorker.getTags()", "modelConfig.getTrain().isOneVsAll()", "modelConfig.getTags().size()"], "Fixed commit": "67a48f49452489a45e2f69162f571e4139598c57", "Url": "https://api.github.com/repos/WenkaiBai/shifu", "Date": "2018-03-29T18:17:25Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentRow[(columnIndex - 1)]) instanceof java.math.BigInteger) { return new java.math.BigDecimal(((java.math.BigInteger) (currentRow[(columnIndex - 1)]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1520/buggy-version/eth-jdbc-driver.src.main.java.com.impetus.eth.jdbc.EthResultSet.java", "BodyUseAPI": [], "Fixed commit": "da7010a3ceccaa6b51f6913b6efc51032299bf21", "Url": "https://api.github.com/repos/ashishkshukla/eth-jdbc-connector", "Date": "2018-08-23T13:51:01Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((operation instanceof com.owncloud.android.operations.CreateFolderOperation) && ((result.getHttpPhrase()) != null)) && ((result.getHttpPhrase().length()) > 0)) { if (((result.getHttpCode()) == 405) && (result.getHttpPhrase().equalsIgnoreCase(f.format(R.string.method_not_allowed)))) { return ((((com.owncloud.android.operations.CreateFolderOperation) (operation)).getNewFolderName()) + \" \") + (f.format(R.string.folder_already_exists)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2958/buggy-version/src.com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.java", "BodyUseAPI": ["com.owncloud.android.lib.common.operations.RemoteOperationResult.getHttpPhrase()", "com.owncloud.android.lib.common.operations.RemoteOperationResult.getHttpCode()", "result.getHttpPhrase().equalsIgnoreCase(java.lang.String)"], "Fixed commit": "a30516f3417807bdff888182f849ff900db730ab", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-10-02T05:24:30Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((\"SystemC\".compareTo(tokenString)) != 0) moduleStack.push(tokenString);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5771/buggy-version/com.minres.scviewer.database.vcd.src.com.minres.scviewer.database.vcd.VCDDbLoader.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.push(java.lang.String)"], "Fixed commit": "0833bca1bd4ac8f88c3bc2e16dc7aeae8eebc72c", "Url": "https://api.github.com/repos/Minres/SCViewer", "Date": "2018-07-16T11:17:58Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (components_i == null) components_i = qnPath.getComponent(i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4000/buggy-version/extensions.indexes.lucene.src.org.exist.indexing.lucene.NodePathPattern.java", "BodyUseAPI": [], "Fixed commit": "74d61b0adfa14b4fea1ca63ea25386745bbc70e1", "Url": "https://api.github.com/repos/sten1ee/exist", "Date": "2018-09-26T18:13:59Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (language == null) { return wrapper; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1121/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": [], "Fixed commit": "d03ec2d26278d95ce55b137a696b1fc96b3218dc", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-04-12T13:30:23Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == prefix) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9109/buggy-version/src.main.java.com.pinterest.secor.parser.PatternDateMessageParser.java", "BodyUseAPI": [], "Fixed commit": "570251382f65fe9a6766835d0d0c41f72a3c8fdf", "Url": "https://api.github.com/repos/ilimi-in/secor", "Date": "2018-08-08T07:30:19Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mImpl.getView()) != null) { this.removeView(mImpl.getView()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5690/buggy-version/Camera.src.main.java.com.enfle.android.camera.view.CameraView.java", "BodyUseAPI": ["com.enfle.android.camera.view.CameraView.removeView(mImpl.getView())", "com.enfle.android.camera.preview.CameraViewImpl.getView()"], "Fixed commit": "02e0b749276b540093daafd7935ba0c2285239fc", "Url": "https://api.github.com/repos/shbmbhrdwj/cameraview", "Date": "2018-05-04T11:37:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SWEProject.Main.Controller.Repository.CartRepository.findOneByUser_username(user.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(storeProductRepository.existsByNameAndCarts_Id(storeProductName, cart.getId()))) { cart.addProduct(storeProduct); storeProduct.addCart(cart); storeProductRepository.save(storeProduct); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8571/buggy-version/src.main.java.SWEProject.Main.Controller.CartController.java", "BodyUseAPI": ["SWEProject.Main.Controller.Repository.StoreProductRepository.save(SWEProject.Main.Controller.Entities.StoreProduct)", "SWEProject.Main.Controller.Entities.StoreProduct.addCart(SWEProject.Main.Controller.Entities.Cart)", "SWEProject.Main.Controller.Entities.Cart.addProduct(SWEProject.Main.Controller.Entities.StoreProduct)"], "Fixed commit": "c617f31ada400eea22434676134c03e71bfbf7de", "Url": "https://api.github.com/repos/ahmeditalia/SWE2", "Date": "2018-04-25T17:25:11Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().query(MoviesDbContract.FavoriteMoviesTable.buildUriWithApiId(movie.id),<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9445/buggy-version/app.src.main.java.com.example.ibrahim.popularmoviesstage2.DetailActivity.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "e3eedaee2625c9e0572f693c685eb5c18acfb85d", "Url": "https://api.github.com/repos/IbrahimYousre/PopularMoviesStage2", "Date": "2018-03-13T03:33:47Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectedSearchItem) != null) { getResourcesProvider().trackChildrenScreen(mSelectedSearchItem, mSite.getId()); }else if (mPaymentMethodSearch.hasSearchItems()) { getResourcesProvider().trackChildrenScreen(mPaymentMethodSearch.getGroups().get(0), mSite.getId()); }else { throw new java.lang.IllegalStateException(\"No payment method available to track\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4395/buggy-version/sdk.src.main.java.com.mercadopago.presenters.PaymentVaultPresenter.java", "BodyUseAPI": [], "Fixed commit": "1f333f791cd3ca947edd9b16f10d334435379793", "Url": "https://api.github.com/repos/mercadopago/px-android", "Date": "2018-04-03T18:39:07Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exoPlayer) != null) { playerStopPosition = exoPlayer.getCurrentPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8267/buggy-version/app.src.main.java.com.kpcode4u.prasanthkumar.bakingapp.UI.ItemDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "7dbb86fa68e5e50981b921e8101bc6fcc0ec4398", "Url": "https://api.github.com/repos/PrasanthKumarKatta/BakingApp", "Date": "2018-07-20T16:35:32Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { downloadNow = downloadNow.replace(\"\\n\", \"\"); remindMeLater = remindMeLater.replace(\"\\n\", \"\"); goToNTA = goToNTA.replace(\"\\n\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4585/buggy-version/app.src.main.java.org.septa.android.app.database.update.DatabaseUpgradeUtils.java", "BodyUseAPI": [], "Fixed commit": "39093b4961395abde704b618a45d6c52844f3e9c", "Url": "https://api.github.com/repos/septadev/SEPTA-Android", "Date": "2018-08-13T14:09:42Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.GetterUtil.getBoolean(getInitParameter(\"javax.portlet.automaticResourceDispatching\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (autoForward) { super.serveResource(resourceRequest, resourceResponse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8516/buggy-version/portal-kernel.src.com.liferay.portal.kernel.portlet.LiferayPortlet.java", "BodyUseAPI": [], "Fixed commit": "d8ab4ec6a33d915ee30402ecec24f33d41bb1997", "Url": "https://api.github.com/repos/koor4356/liferay-portal", "Date": "2018-05-24T23:52:16Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response.getSuccess()) { db.addUser(response); android.widget.Toast.makeText(getContext(), \"successfull operation\", Toast.LENGTH_SHORT).show(); android.util.Log.e(\"login\", (\" Token: \" + (response.token.token))); updateProfile(response.token.token); showSnackBarMessage(\"Sending user details..\"); }else if (!(response.getSuccess())) { showSnackBarMessage(response.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4346/buggy-version/app.src.main.java.tech.iosd.benefit.OnBoardingFragments.Login.java", "BodyUseAPI": ["tech.iosd.benefit.Model.Response.getMessage()", "tech.iosd.benefit.OnBoardingFragments.Login.updateProfile(response.token.token)", "android.util.Log.e(java.lang.String,(\" Token: \" + (response.token.token)))", "tech.iosd.benefit.OnBoardingFragments.Login.showSnackBarMessage(response.getMessage())", "tech.iosd.benefit.Model.Response.getSuccess()", "tech.iosd.benefit.Model.DatabaseHandler.addUser(tech.iosd.benefit.Model.Response)"], "Fixed commit": "46fbb1d6d7d169c5e9ba014f3b60bb769d8228cf", "Url": "https://api.github.com/repos/IOSD/beneFIT", "Date": "2018-06-14T10:45:57Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.webdevassignment2.repositories.CourseRepository.findById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (data.isPresent()) { com.example.webdevassignment2.services.Course course = data.get(); newModule.setCourse(course); return moduleRepository.save(newModule); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8357/buggy-version/src.main.java.com.example.webdevassignment2.services.ModuleService.java", "BodyUseAPI": ["java.util.Optional<com.example.webdevassignment2.services.Course>.get()"], "Fixed commit": "d8f26d15986ea613d54c3e1400da034db322befb", "Url": "https://api.github.com/repos/Priyaranjan1993/Webdev-Summer-Assignment-2", "Date": "2018-06-01T12:50:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (line == null) { close = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8394/buggy-version/greenserver.src.za.ac.sun.cs.green.server.GreenServer.java", "BodyUseAPI": [], "Fixed commit": "e890d69939b5f82d540834a9a131708e3086b2b6", "Url": "https://api.github.com/repos/gladtbx/green-solver", "Date": "2018-04-12T22:16:14Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configuration.databaseType) == null) { throw new org.apache.maven.plugin.MojoExecutionException(net.kosto.configuration.UNKNOWN_DATABASE_TYPE.message()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/470/buggy-version/src.main.java.net.kosto.configuration.Configuration.java", "BodyUseAPI": [], "Fixed commit": "d4ed3bb37e581de792396915e4be409e36d5301a", "Url": "https://api.github.com/repos/kkrakovych/database-maven-plugin", "Date": "2018-08-26T07:26:50Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tenue.isLock(player))) { equip(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3735/buggy-version/src.fr.thomapolis.polishub.itemseffect.leatherarmor.IEABNovice.java", "BodyUseAPI": ["fr.thomapolis.polishub.itemseffect.leatherarmor.IEABNovice.equip(org.bukkit.entity.Player)"], "Fixed commit": "14ccb99a9301a085e712ddb37ca09ef9d5cefccf", "Url": "https://api.github.com/repos/thomapolis/PolisHub", "Date": "2018-07-14T14:14:06Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tenue.isLock(player))) { equip(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3735/buggy-version/src.fr.thomapolis.polishub.itemseffect.leatherarmor.IEACNovice.java", "BodyUseAPI": ["fr.thomapolis.polishub.itemseffect.leatherarmor.IEACNovice.equip(org.bukkit.entity.Player)"], "Fixed commit": "14ccb99a9301a085e712ddb37ca09ef9d5cefccf", "Url": "https://api.github.com/repos/thomapolis/PolisHub", "Date": "2018-07-14T14:14:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tenue.isLock(player))) { equip(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3735/buggy-version/src.fr.thomapolis.polishub.itemseffect.leatherarmor.IEALNovice.java", "BodyUseAPI": ["fr.thomapolis.polishub.itemseffect.leatherarmor.IEALNovice.equip(org.bukkit.entity.Player)"], "Fixed commit": "14ccb99a9301a085e712ddb37ca09ef9d5cefccf", "Url": "https://api.github.com/repos/thomapolis/PolisHub", "Date": "2018-07-14T14:14:06Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trackFragment) == null) { trackFragment = com.awolity.trakr.view.main.bottom.BottomSheetTrackFragment.newInstance(getString(R.string.bottom_sheet_label_track)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6560/buggy-version/app.src.main.java.com.awolity.trakr.view.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b7e138d79a39feb1a4a6816b013e525bff99ae34", "Url": "https://api.github.com/repos/vokod/Trakr", "Date": "2018-08-16T06:28:27Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chartsFragment) == null) { chartsFragment = com.awolity.trakr.view.main.bottom.BottomSheetChartsFragment.newInstance(getString(R.string.bottom_sheet_label_charts)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6560/buggy-version/app.src.main.java.com.awolity.trakr.view.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b7e138d79a39feb1a4a6816b013e525bff99ae34", "Url": "https://api.github.com/repos/vokod/Trakr", "Date": "2018-08-16T06:28:27Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pointFragment) == null) { pointFragment = com.awolity.trakr.view.main.bottom.BottomSheetPointFragment.newInstance(getString(R.string.bottom_sheet_label_point)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6560/buggy-version/app.src.main.java.com.awolity.trakr.view.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b7e138d79a39feb1a4a6816b013e525bff99ae34", "Url": "https://api.github.com/repos/vokod/Trakr", "Date": "2018-08-16T06:28:27Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(io.anuke.mindustry.net.Net.client())) { io.anuke.mindustry.world.Placement.placeBlock(x, y, result, rotation, effects, sound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9674/buggy-version/core.src.io.anuke.mindustry.input.InputHandler.java", "BodyUseAPI": [], "Fixed commit": "357fc37a7939a4575474378db44632bc8c7b1d82", "Url": "https://api.github.com/repos/hellomouse/Mindustry", "Date": "2018-03-22T23:21:35Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.semakula.Main.diary1.getChecklist().isEmpty()) { java.lang.System.out.println(\"No Surahs to remove!\"); }else { java.lang.System.out.println(\"Enter Surah name to remove: \"); java.lang.String name_removal = com.semakula.Main.scanner.next(); com.semakula.Main.removeSurah(name_removal); com.semakula.Main.scanner.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4080/buggy-version/src.com.semakula.Main.java", "BodyUseAPI": [], "Fixed commit": "7fa9a20d81f2ffc0f26de8472a55641213d9bc34", "Url": "https://api.github.com/repos/SennaSemakula/Quran-Diary", "Date": "2018-05-02T19:43:17Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.getMethod().equalsIgnoreCase(\"OPTIONS\")) && (request.getHeader(\"access-control-request-headers\").equalsIgnoreCase(JWTUtil.JWT_HTTP_HEADER))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7578/buggy-version/src.main.java.com.ctg.flagadmin.web.interceptor.PostStarMessageInterceptor.java", "BodyUseAPI": [], "Fixed commit": "dd9e5b17b29622ece86a46b3ba40bbcf840382e2", "Url": "https://api.github.com/repos/TGclub/TGproject_flagadmin", "Date": "2018-04-26T13:43:34Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4534/buggy-version/src.main.java.com.github.TKnudsen.DMandML.model.supervised.classifier.evaluation.ClassPredictionProbabilityScore.java", "BodyUseAPI": [], "Fixed commit": "add05af0fe8a7c96bc3b08e0425bcac03360aef3", "Url": "https://api.github.com/repos/TKnudsen/DMandML", "Date": "2018-10-18T07:28:33Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getItemId()) == (R.id.addAlbum_btn)) { android.content.Intent intent = new android.content.Intent(this, com.example.apdem.photo_album.AddAlbumActivity.class); startActivityForResult(intent, com.example.apdem.photo_album.HomeScreenActivity.REQ_CODE_ADD_ALBUM); }else if ((item.getItemId()) == (R.id.search_btn)) { android.content.Intent intent = new android.content.Intent(this, com.example.apdem.photo_album.SearchByTagActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5790/buggy-version/app.src.main.java.com.example.apdem.photo_album.HomeScreenActivity.java", "BodyUseAPI": ["android.view.MenuItem.getItemId()"], "Fixed commit": "130eb894ec095af1c548fc1f062e73b86d456384", "Url": "https://api.github.com/repos/TL-Yao/Photo_Album", "Date": "2018-04-30T07:51:13Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.wynprice.secretroomsmod.SecretCompatibility.MALISISDOORS) { net.minecraftforge.fml.common.registry.GameRegistry.registerTileEntity(com.wynprice.secretroomsmod.intergration.malisisdoors.SecretMalisisTileEntityDoor.class, ((com.wynprice.secretroomsmod.SecretRooms5.MODID) + (com.wynprice.secretroomsmod.intergration.malisisdoors.SecretMalisisTileEntityDoor.class.getSimpleName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/32/buggy-version/src.main.java.com.wynprice.secretroomsmod.proxy.CommonProxy.java", "BodyUseAPI": [], "Fixed commit": "a9c7812daa43183dca3a9275f6814460577851fe", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2018-03-05T21:06:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apereo.cas.support.oauth.validator.token.BaseOAuth20TokenRequestValidator.getRegisteredService(org.pac4j.core.context.J2EContext,org.pac4j.core.profile.UserProfile)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (registeredService == null) { org.apereo.cas.support.oauth.validator.token.LOGGER.warn(\"No registered service found\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6883/buggy-version/support.cas-server-support-oauth.src.main.java.org.apereo.cas.support.oauth.validator.token.BaseOAuth20TokenRequestValidator.java", "BodyUseAPI": [], "Fixed commit": "c167dd7dbeb0b5af2512c90839da99d779a1f298", "Url": "https://api.github.com/repos/gagarski/cas", "Date": "2018-08-14T22:37:27Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg.startsWith(QueryConstants.LITERAL_LG_ARGS_PARAMPREFIX)) { java.lang.String expectedLiteralParam = (QueryConstants.LITERAL_ARGS_PARAMPREFIX) + (arg.substring(((arg.indexOf(\"_\")) + 1))); if (!(params.contains(expectedLiteralParam))) { check = (((\"Arg syntax is incorrect : query does not have a literal variable \" + expectedLiteralParam) + \" corresponding to lang \") + arg) + \" variable\"; return check; }else { litLangParams.put(expectedLiteralParam, arg); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4431/buggy-version/src.main.java.io.bdrc.ldspdi.sparql.QueryFileParser.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "1ca010f331e820eab3fa3869daf1e9076fba5883", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lds-pdi", "Date": "2018-02-02T13:13:42Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(arg.startsWith(QueryConstants.LITERAL_LG_ARGS_PARAMPREFIX))) && ((query.indexOf((\"?\" + arg))) == (-1))) { check = (\"Arg syntax is incorrect : query does not have a ?\" + arg) + \" variable\"; return check; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4431/buggy-version/src.main.java.io.bdrc.ldspdi.sparql.QueryFileParser.java", "BodyUseAPI": [], "Fixed commit": "1ca010f331e820eab3fa3869daf1e9076fba5883", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lds-pdi", "Date": "2018-02-02T13:13:42Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.redditimages.redditgram.Utils.FeedFetchUtils.parseFeedJSON(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((subredditFeedData.allPostItemData.size()) > 0) { mAfterTable.put(subredditFeedData.allPostItemData.get(0).subreddit, subredditFeedData.after); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4024/buggy-version/app.src.main.java.com.example.redditimages.redditgram.Utils.FeedProcessingUtils.java", "BodyUseAPI": ["subredditFeedData.allPostItemData.get(int)", "java.util.HashMap<java.lang.String, java.lang.String>.put(subredditFeedData.allPostItemData.get(0).subreddit,subredditFeedData.after)"], "Fixed commit": "632a44a032c066ec0c59a96824dd5f4c6b89f47c", "Url": "https://api.github.com/repos/jawhnypoh/RedditGram", "Date": "2018-04-04T23:59:12Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.columnRatios.length) > (this.rowRatios.length)) { area = ((width * width) * (this.rowRatios.length)) / (this.columnRatios.length); }else { area = ((height * (this.columnRatios.length)) / (this.rowRatios.length)) * height; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5125/buggy-version/app.src.main.java.com.example.root.scanner.Scanner.ScannerCameraViewListener.java", "BodyUseAPI": [], "Fixed commit": "03ee907600f2e816cf9a41659f0a47dc7f1dbefe", "Url": "https://api.github.com/repos/jovan-djukic/Scanner", "Date": "2018-03-01T17:20:00Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mCamera) != null) { android.hardware.Camera.Parameters parameters = mCamera.getParameters(); parameters.setFlashMode(Camera.Parameters.FLASH_MODE_TORCH); mCamera.setParameters(parameters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5125/buggy-version/openCVLibrary340.src.main.java.org.opencv.android.JavaCameraView.java", "BodyUseAPI": [], "Fixed commit": "03ee907600f2e816cf9a41659f0a47dc7f1dbefe", "Url": "https://api.github.com/repos/jovan-djukic/Scanner", "Date": "2018-03-01T17:20:00Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getItemId()) == (R.id.sign_out_menu)) { mFirebaseAuth.signOut(); return true; }else { return super.onOptionsItemSelected(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2571/buggy-version/app.src.main.java.com.google.firebase.udacity.friendlychat.MainActivity.java", "BodyUseAPI": ["android.support.v7.app.AppCompatActivity.onOptionsItemSelected(android.view.MenuItem)"], "Fixed commit": "6da7e6f2c9a4b62a6058dce507ec5cc4d47e9885", "Url": "https://api.github.com/repos/winston-legion/firebase-test", "Date": "2018-07-25T19:47:11Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(io.github.jbaero.chvault.functions.Permissions.getPerms(t).hasGroupSupport())) { throw new com.laytonsmith.core.exceptions.CRE.CREInvalidPluginException(\"Your permissions plugin does not appear to support groups.\", t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5304/buggy-version/src.main.java.io.github.jbaero.chvault.functions.Permissions.java", "BodyUseAPI": [], "Fixed commit": "81c9ca4b93109af35b6ac3bbdf29359b60ccb125", "Url": "https://api.github.com/repos/jb-aero/CHVault", "Date": "2018-10-05T04:29:12Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((high - low) == 1) { return (arr[high]) > (arr[low]) ? arr[low] : arr[high]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9724/buggy-version/src.athletic.FindSmallRotationArr.java", "BodyUseAPI": [], "Fixed commit": "edaa14235fc8c3343addedbeb48504b1a59bbb39", "Url": "https://api.github.com/repos/unDeathDream/baseJava", "Date": "2018-07-07T07:33:54Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(i.toString().contains(\"{PRIMARY WORKING COPY}\"))) { processUnary(javaFile, besouro.listeners.JavaStructureChangeListener.CHANGE_OPERATION, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4122/buggy-version/src.besouro.listeners.JavaStructureChangeListener.java", "BodyUseAPI": ["besouro.listeners.JavaStructureChangeListener.processUnary(org.eclipse.core.resources.IResource,java.lang.String,org.eclipse.jdt.core.IJavaElementDelta)"], "Fixed commit": "3505d65d8edc7082904afe7c669d5c1102c5df28", "Url": "https://api.github.com/repos/altitdb/butterfly", "Date": "2018-04-24T01:40:33Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.bdrc.lucene.sa.SkrtWordTokenizer.isValidCharWithinSandhi(ioBuffer.get(bufferIndex))) { bufferIndex = longestIdx; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6807/buggy-version/src.main.java.io.bdrc.lucene.sa.SkrtWordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "222b378539957b9dc1e29b3830cec0191cac74a7", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2018-06-18T12:25:15Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((continuation) != null) { result += getContinuationProgramState().hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8051/buggy-version/src.main.java.il.ac.bgu.cs.bp.bpjs.model.BThreadSyncSnapshot.java", "BodyUseAPI": [], "Fixed commit": "4752875d58f5329c54e8fdd0fbf721bdb4ec98c6", "Url": "https://api.github.com/repos/acepace/BPjs", "Date": "2018-05-02T15:28:30Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value >= 20) { return new coinpurse.BankNote(value, coinpurse.ConsoleDialog.CURRENCY); }else { return new coinpurse.Coin(value, coinpurse.ConsoleDialog.CURRENCY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3662/buggy-version/src.coinpurse.ConsoleDialog.java", "BodyUseAPI": [], "Fixed commit": "efb44de8d7f58e65420715543b6540f4d747eed0", "Url": "https://api.github.com/repos/OOP2018/coinpurse-First529", "Date": "2018-02-07T12:05:46Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastName.contains(\"-\")) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1172/buggy-version/src.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "17da01888b7cd5a1e1c3ec9cfa75c46222c64529", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-urasyazici", "Date": "2018-09-27T19:53:10Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yeastrc.proxl.xml.metamorph.reader.StaticModProcessor.createInstance().processStaticModsFromResults(java.util.Map<org.yeastrc.proxl.xml.metamorph.objects.MetaMorphReportedPeptide, java.util.Collection<org.yeastrc.proxl.xml.metamorph.objects.MetaMorphPSM>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((staticMods.keySet().size()) > 1) { org.yeastrc.proxl_import.api.xml_dto.StaticModifications smods = new org.yeastrc.proxl_import.api.xml_dto.StaticModifications(); proxlInputRoot.setStaticModifications(smods); for (java.lang.String moddedResidue : staticMods.keySet()) { org.yeastrc.proxl_import.api.xml_dto.StaticModification xmlSmod = new org.yeastrc.proxl_import.api.xml_dto.StaticModification(); xmlSmod.setAminoAcid(moddedResidue); xmlSmod.setMassChange(staticMods.get(moddedResidue)); smods.getStaticModification().add(xmlSmod); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5067/buggy-version/src.main.org.yeastrc.proxl.xml.metamorph.builder.XMLBuilder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.math.BigDecimal>.keySet()", "org.yeastrc.proxl_import.api.xml_dto.StaticModification.setMassChange(java.math.BigDecimal)", "java.util.Map<java.lang.String, java.math.BigDecimal>.get(java.lang.String)"], "Fixed commit": "848b4dbf65e54b2a0c78ac65f3271627dd4a9005", "Url": "https://api.github.com/repos/yeastrc/proxl-import-metamorpheus", "Date": "2018-04-19T17:17:30Z"},
{"Line": "=>899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == 0) { j = size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3851/buggy-version/src.main.java.org.util.string.StringUtil.java", "BodyUseAPI": [], "Fixed commit": "6133008ec43f9a4d66952e7470ffde3ed42bd112", "Url": "https://api.github.com/repos/VLysak/utils", "Date": "2018-04-30T16:35:09Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (view.isSummaryBottomSheetHidden()) { view.showRecenterBtn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8589/buggy-version/libandroid-navigation-ui.src.main.java.com.mapbox.services.android.navigation.ui.v5.NavigationPresenter.java", "BodyUseAPI": ["NavigationContract.View.showRecenterBtn()"], "Fixed commit": "b467b645e4fa7e14ca66a00e7f0d8103798d0b73", "Url": "https://api.github.com/repos/mapbox/mapbox-navigation-android", "Date": "2018-06-13T15:57:51Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((org.example.define.define.Variable) (e)).isVariantKeyword()) && (!variantKeyword)) { this.error(\"Invalid variant keyword\", e, DefinePackage.eINSTANCE.getVariable_VariantKeyword(), org.example.define.validation.DefineValidator.INVALID_VARIANT_KEYWORD); }else { ((org.example.define.define.Variable) (e)).setVariantKeyword(variantKeyword); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6840/buggy-version/org.example.define.xtend-gen.org.example.define.validation.DefineValidator.java", "BodyUseAPI": ["org.example.define.define.Variables.setVariantKeyword(boolean)"], "Fixed commit": "2b7180a2d766fa520a95a3b677296925ef843202", "Url": "https://api.github.com/repos/bobbyfisher1/playground", "Date": "2018-07-27T18:53:50Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_tripleEquals_1) { ((org.example.define.define.Variable) (e)).setVariableType(helpingVariableType); }else { org.example.define.define.BasicType _variableType_2 = ((org.example.define.define.Variable) (e)).getVariableType(); boolean _tripleNotEquals = helpingVariableType != _variableType_2; if (_tripleNotEquals) { this.error(\"Multiple type definition\", e, DefinePackage.eINSTANCE.getVariable_VariableType(), org.example.define.validation.DefineValidator.MULTIPLE_TYPE_DEFINITION); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6840/buggy-version/org.example.define.xtend-gen.org.example.define.validation.DefineValidator.java", "BodyUseAPI": [], "Fixed commit": "2b7180a2d766fa520a95a3b677296925ef843202", "Url": "https://api.github.com/repos/bobbyfisher1/playground", "Date": "2018-07-27T18:53:50Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (req != null) { javax.servlet.http.HttpServletRequestWrapper wrapper = new javax.servlet.http.HttpServletRequestWrapper(req); extraAuditData.put(\"HTTP_SERVLET_REQUEST\", wrapper); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3553/buggy-version/dev.com.ibm.ws.webcontainer.security.src.com.ibm.ws.webcontainer.security.WebAppSecurityCollaboratorImpl.java", "BodyUseAPI": [], "Fixed commit": "0559e85eed186fc475f56fbb86da0ec60ddbf49f", "Url": "https://api.github.com/repos/OpenLiberty/open-liberty", "Date": "2018-08-25T14:03:03Z"},
{"Line": "=>760", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._request) != null) { java.lang.String addr = this._request.getRemoteAddr(); if ((com.ibm.websphere.ras.TraceComponent.isAnyTracingEnabled()) && (com.ibm.ws.webcontainer.srt.SRTServletRequest.logger.isLoggable(java.util.logging.Level.FINE))) { com.ibm.ws.webcontainer.srt.SRTServletRequest.logger.logp(java.util.logging.Level.FINE, com.ibm.ws.webcontainer.srt.SRTServletRequest.CLASS_NAME, \"getRemoteAddr\", ((((\"this->\" + (this)) + \": \") + \" address --> \") + addr)); } return addr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3553/buggy-version/dev.com.ibm.ws.webcontainer.src.com.ibm.ws.webcontainer.srt.SRTServletRequest.java", "BodyUseAPI": [], "Fixed commit": "0559e85eed186fc475f56fbb86da0ec60ddbf49f", "Url": "https://api.github.com/repos/OpenLiberty/open-liberty", "Date": "2018-08-25T14:03:03Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(vals[2].contains(\"ensor\"))) { return \"unknown event : \" + (vals[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8293/buggy-version/src.main.java.pivot_table_sort_of.pivot_table.PivotDataApp.java", "BodyUseAPI": [], "Fixed commit": "e3854ee80741a94e7d7d61187a585d6f5189c477", "Url": "https://api.github.com/repos/chrisxkeith/pivot-table-sort-of", "Date": "2018-07-02T23:02:30Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grid[1][1]) == (-1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5852/buggy-version/src.main.java.com.whishkey.tictactoe.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a25b636572b9c6070e00276c4423167a953a9830", "Url": "https://api.github.com/repos/jansenmtan/TTToe", "Date": "2018-02-16T23:45:12Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(flagPlaced[x][y])) gameOver(x, y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1692/buggy-version/app.src.main.java.com.example.deepd.minesweeper.MainActivity.java", "BodyUseAPI": ["com.example.deepd.minesweeper.MainActivity.gameOver(int,int)"], "Fixed commit": "c3a1e32535b06e6626720002e12edabe32e4e00b", "Url": "https://api.github.com/repos/diptangsu/Minesweeper", "Date": "2018-05-20T09:54:26Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getAttribute(\"isResearcher\")) != null) { isResearcher = ((java.lang.Boolean) (request.getAttribute(\"isResearcher\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8600/buggy-version/src.main.java.nz.org.nesi.account.controller.RequestAccountController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Fixed commit": "fb38b6d0b3642f9c4268fcf5f8e485793e3a2285", "Url": "https://api.github.com/repos/nesi/ssp", "Date": "2018-05-13T23:18:06Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getAttribute(\"isAdviser\")) != null) { isAdviser = ((java.lang.Boolean) (request.getAttribute(\"isAdviser\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8600/buggy-version/src.main.java.nz.org.nesi.account.controller.RequestAccountController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Fixed commit": "fb38b6d0b3642f9c4268fcf5f8e485793e3a2285", "Url": "https://api.github.com/repos/nesi/ssp", "Date": "2018-05-13T23:18:06Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getComponent().getSize().getWidth()) > (maximumSize.getWidth())) e.getComponent().setSize(maximumSize);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4744/buggy-version/src.zachary.mohling.tictactoe.GameBoard.java", "BodyUseAPI": ["java.awt.Component.setSize(java.awt.Dimension)", "java.awt.event.ComponentEvent.getComponent()"], "Fixed commit": "67a52eed7904c61aba04769e38aa4c5703971741", "Url": "https://api.github.com/repos/zmohling/TicTacToe", "Date": "2018-09-29T05:56:44Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.common.cklibrary.common.ViewInject.mToast) == null) { com.common.cklibrary.common.ViewInject.mToast = android.widget.Toast.makeText(context, null, duration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8175/buggy-version/SillyChildClient.Cklibrary.src.main.java.com.common.cklibrary.common.ViewInject.java", "BodyUseAPI": [], "Fixed commit": "dae1c1196658972ed203d4647ea1a4396f59ab23", "Url": "https://api.github.com/repos/921668753/SillyChildClient-Android", "Date": "2018-07-03T08:44:10Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ftEnt.inode.indirect) == (-1)) { block = null; }else { SysLib.rawread(ftEnt.inode.indirect, block); ftEnt.inode.indirect = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3025/buggy-version/FileSystem.java", "BodyUseAPI": ["SysLib.rawread(ftEnt.inode.indirect,byte[])"], "Fixed commit": "361b64afce744c58914a9ed9b4693624aceb57f9", "Url": "https://api.github.com/repos/hiroyuan/CSS430_Final", "Date": "2018-03-10T07:18:26Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (adapter != null) { adapter.replaceImageViewFilm(film); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9893/buggy-version/app.src.main.java.com.sasfmlzr.findfilm.fragment.DiscoverFilmFragment.java", "BodyUseAPI": ["com.sasfmlzr.findfilm.adapter.DiscoverRecyclerAdapter.replaceImageViewFilm(DiscoverMovieRequest.ResultsField)"], "Fixed commit": "5e855a606da6bd1297e36ef958cfa6e406a50320", "Url": "https://api.github.com/repos/sasfmlzr/findfilm", "Date": "2018-06-01T13:42:40Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.app.webui.jsptag.ItemTag.getViewOptions(org.dspace.core.Context,javax.servlet.http.HttpServletRequest,org.dspace.app.webui.jsptag.ItemTag,java.lang.String,bitstreams[k])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((viewOptions.size()) > 2) { out.print(\"<li role=\\\"separator\\\" class=\\\"divider\\\"></li> \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9159/buggy-version/dspace-jspui.src.main.java.org.dspace.app.webui.jsptag.ItemTag.java", "BodyUseAPI": [], "Fixed commit": "2982655fa7694a6ffa2727e63585bccfb2ff6a28", "Url": "https://api.github.com/repos/4Science/DSpace", "Date": "2018-06-06T09:41:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTest) { csv = new java.io.File(\"employees.csv\"); }else { csv = new java.io.File(seedu.address.logic.commands.ExportEmployeesCommand.EXPORT_FILE_PATH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7615/buggy-version/src.main.java.seedu.address.logic.commands.ExportEmployeesCommand.java", "BodyUseAPI": [], "Fixed commit": "f89d82cc770c6c9b405ba79623d756f31ec98aeb", "Url": "https://api.github.com/repos/CS2103JAN2018-W15-B1/main", "Date": "2018-04-10T15:47:45Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qmuiteam.qmui.widget.MeasureSpec.getMode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (widthMode == (MeasureSpec.AT_MOST)) { setMeasuredDimension(java.lang.Math.min(widthSize, ((child.getMeasuredWidth()) + paddingHor)), heightMeasureSpec); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/188/buggy-version/qmui.src.main.java.com.qmuiteam.qmui.widget.QMUITabSegment.java", "BodyUseAPI": [], "Fixed commit": "e53359054b25cccd3f40f6e9bb92e6c056ebbd35", "Url": "https://api.github.com/repos/iZeroer/QMUI_Android", "Date": "2018-05-21T13:18:38Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.ViewGroup.findViewById(R.id.jz_tiny_id)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tinyJzvd != null) { vp.removeView(tinyJzvd); if ((tinyJzvd.textureViewContainer) != null) tinyJzvd.textureViewContainer.removeView(JZMediaManager.textureView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2818/buggy-version/jiaozivideoplayer.src.main.java.cn.jzvd.JZVideoPlayer.java", "BodyUseAPI": ["android.view.ViewGroup.removeView(cn.jzvd.JZVideoPlayer)", "android.view.ViewGroup.removeView(JZMediaManager.textureView)"], "Fixed commit": "01a98531f6431d042096db9014b9a0bb5ac52d53", "Url": "https://api.github.com/repos/sproypef/JiaoZiVideoPlayer", "Date": "2018-01-12T17:41:33Z"},
{"Line": "=>1804", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) != null) { android.widget.Toast.makeText(getContext(), R.string.tour_info_error_chat_message, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8885/buggy-version/app.src.main.java.social.entourage.android.map.tour.information.TourInformationFragment.java", "BodyUseAPI": [], "Fixed commit": "0a6488f2ba7b0e6df334ed1585ed56dba11ebb17", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2018-01-30T15:33:16Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vids.size()) == 0) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/90/buggy-version/app.src.main.java.com.hitstreamr.hitstreamrbeta.VideoResultAdapter.java", "BodyUseAPI": [], "Fixed commit": "7f5aaafd380597e84b5e592d3480e28ef816f5e4", "Url": "https://api.github.com/repos/HitStreamr/BETA-app", "Date": "2018-10-15T19:40:14Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (evt.getPropertyName().equals(DrawingTreeNode.IS_FOCUSED.getName())) { if ((evt.getSource()) instanceof org.openflexo.fge.Drawing.GeometricNode) { getPaintManager().repaint(this); } }else if (evt.getPropertyName().equals(DrawingNeedsToBeRedrawn.EVENT_NAME)) { getPaintManager().invalidate(getDrawing().getRoot()); getPaintManager().repaint(this); }else if ((evt.getSource()) instanceof org.openflexo.fge.GeometricGraphicalRepresentation) { getPaintManager().invalidate(getDrawing().getRoot()); getPaintManager().repaint(this); }else if (evt.getPropertyName().equals(ContainerNode.LAYOUT_DECORATION_KEY)) { getPaintManager().invalidate(getDrawing().getRoot()); getPaintManager().repaint(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/623/buggy-version/diana-swing.src.main.java.org.openflexo.fge.swing.view.JDrawingView.java", "BodyUseAPI": ["java.lang.String.equals(DrawingNeedsToBeRedrawn.EVENT_NAME)", "java.beans.PropertyChangeEvent.getSource()", "java.beans.PropertyChangeEvent.getSource()", "java.beans.PropertyChangeEvent.getPropertyName()", "java.lang.String.equals(ContainerNode.LAYOUT_DECORATION_KEY)", "java.beans.PropertyChangeEvent.getPropertyName()"], "Fixed commit": "a3f6e391514346c5606d137b72b2434df4c619f0", "Url": "https://api.github.com/repos/openflexo-team/diana", "Date": "2018-06-24T21:26:48Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalCredits == 0) { gpaOverall = 0; }else { gpaOverall = totalQualityPoints / totalCredits; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9040/buggy-version/GpaModel.java", "BodyUseAPI": [], "Fixed commit": "2aa847080e29bb34834f6103963240a34485aec9", "Url": "https://api.github.com/repos/SleekPanther/gpa-calculator", "Date": "2018-01-03T16:36:06Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((label) == null) { object.put(\"label\", this.name.trim()); }else { object.put(\"label\", this.label.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1129/buggy-version/geoprism-server.src.main.java.net.geoprism.data.etl.excel.FieldInfoContentsHandler.java", "BodyUseAPI": [], "Fixed commit": "982f0afa561886052cfc5b49566bb2a105110bfe", "Url": "https://api.github.com/repos/terraframe/geoprism", "Date": "2018-02-01T22:06:41Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Ch2p5SumLists.sum(Ch2p5SumLists.Node,Ch2p5SumLists.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nRet.carry) != 0) sumNode = new Ch2p5SumLists.Node(nRet.carry, sumNode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4666/buggy-version/pi.career_cup.Ch2p5SumLists.java", "BodyUseAPI": [], "Fixed commit": "5f76c742fbd4ef4c0d1b144a680007f20cd2fb87", "Url": "https://api.github.com/repos/r3t2/practice_ds_algos", "Date": "2018-02-05T01:03:58Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((api) == null) { api = me.max.lemonmobcoins.common.LemonMobCoins.getLemonMobCoinsAPI(); if ((api) == null) return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3292/buggy-version/src.main.java.me.max.lemonmobcoinsexpansion.LemonMobCoinsExpansion.java", "BodyUseAPI": [], "Fixed commit": "b90d2e8927b4e6b9cee90f657d97677023b35aa3", "Url": "https://api.github.com/repos/PlaceholderAPI/LemonMobCoins-Expansion", "Date": "2018-08-16T19:54:10Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((images.size()) > 1) log.warn((\"ROIs can only have one image, attaching ROIs to image: \" + (images.get(((images.size()) - 1)).getId())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3055/buggy-version/src.main.java.net.imagej.omero.ModuleAdapter.java", "BodyUseAPI": ["java.util.List<omero.gateway.model.ImageData>.get(((images.size()) - 1))", "images.get(((images.size()) - 1)).getId()", "java.util.List<omero.gateway.model.ImageData>.size()", "org.scijava.log.LogService.warn((\"ROIs can only have one image, attaching ROIs to image: \" + (images.get(((images.size()) - 1)).getId())))"], "Fixed commit": "7c162c99462fce408fe52c1da17161e464302ac1", "Url": "https://api.github.com/repos/imagej/imagej-omero", "Date": "2018-03-20T17:33:10Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.cIdFetcher.getState()) == (java.lang.Thread.State.TERMINATED)) { this.cIdFetcher = generateNewFetcher(); this.cIdFetcher.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2152/buggy-version/src.main.java.hwr.sem4.csa.management.IdManager.java", "BodyUseAPI": [], "Fixed commit": "267c112512c52101df9b78506bddbdd93804e032", "Url": "https://api.github.com/repos/JohnAEX/FlattaskServer", "Date": "2018-06-08T15:30:38Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { if (principal == null) { com.steven.hicks.filters.RequestDispatcher dispatcher = request.getRequestDispatcher(\"/portal/login.jsp\"); dispatcher.forward(request, response); chain.doFilter(httpRequest, httpResponse); } user = hSession.get(com.steven.hicks.entities.User.class, principal.getName()); session.setAttribute(\"user\", user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2192/buggy-version/src.main.java.com.steven.hicks.filters.PortalUserFilter.java", "BodyUseAPI": [], "Fixed commit": "d1e6603d1619ed026620d5a60488e34614115e39", "Url": "https://api.github.com/repos/shicks255/resumeSite", "Date": "2018-03-16T02:48:27Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((testMethods.size()) > 1) { testMethodName = testMethod.getName(); }else { testMethodName = (defaultTestMethodName == null) ? testMethod.getName() : defaultTestMethodName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6500/buggy-version/src.main.java.xltutil.runner.AnnotationRunner.java", "BodyUseAPI": [], "Fixed commit": "f8c84dc52d694050ef44a6d480643d2823fb83fb", "Url": "https://api.github.com/repos/Xceptance/xlt-multi-browser", "Date": "2018-01-24T18:23:18Z"},
{"Line": "=>1133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enableLock) { getLock().openLock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2637/buggy-version/app.src.main.java.com.dchip.door.smartdoorsdk.deviceControl.DeviceImpl.java", "BodyUseAPI": [], "Fixed commit": "4b67699d4c7b32492708c186dab9661e0ea8ade3", "Url": "https://api.github.com/repos/llakcs/SDoor", "Date": "2018-02-27T06:46:39Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.userCooldownTickThread) != null) this.userCooldownTickThread.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7409/buggy-version/src.com.mjr.TwitchBot.java", "BodyUseAPI": [], "Fixed commit": "7e9cf4425b72c738290ee8af513fca2e9bbd4a39", "Url": "https://api.github.com/repos/MJRLegends/MJRBot-Server", "Date": "2018-07-12T03:34:26Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.followersThread) != null) this.followersThread.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7409/buggy-version/src.com.mjr.TwitchBot.java", "BodyUseAPI": [], "Fixed commit": "7e9cf4425b72c738290ee8af513fca2e9bbd4a39", "Url": "https://api.github.com/repos/MJRLegends/MJRBot-Server", "Date": "2018-07-12T03:34:26Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getFollowersThread) != null) this.getFollowersThread.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7409/buggy-version/src.com.mjr.TwitchBot.java", "BodyUseAPI": [], "Fixed commit": "7e9cf4425b72c738290ee8af513fca2e9bbd4a39", "Url": "https://api.github.com/repos/MJRLegends/MJRBot-Server", "Date": "2018-07-12T03:34:26Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.pointsThread) != null) this.pointsThread.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7409/buggy-version/src.com.mjr.TwitchBot.java", "BodyUseAPI": [], "Fixed commit": "7e9cf4425b72c738290ee8af513fca2e9bbd4a39", "Url": "https://api.github.com/repos/MJRLegends/MJRBot-Server", "Date": "2018-07-12T03:34:26Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getViewersThread) != null) this.getViewersThread.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7409/buggy-version/src.com.mjr.TwitchBot.java", "BodyUseAPI": [], "Fixed commit": "7e9cf4425b72c738290ee8af513fca2e9bbd4a39", "Url": "https://api.github.com/repos/MJRLegends/MJRBot-Server", "Date": "2018-07-12T03:34:26Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.announcementsThread) != null) this.announcementsThread.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7409/buggy-version/src.com.mjr.TwitchBot.java", "BodyUseAPI": [], "Fixed commit": "7e9cf4425b72c738290ee8af513fca2e9bbd4a39", "Url": "https://api.github.com/repos/MJRLegends/MJRBot-Server", "Date": "2018-07-12T03:34:26Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conn.getResponseCode()) < (java.net.HttpURLConnection.HTTP_BAD_REQUEST)) { inputs = conn.getInputStream(); }else { inputs = conn.getErrorStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7190/buggy-version/app.src.main.java.com.sebastianrask.bettersubscription.tasks.GetLiveStreamURL.java", "BodyUseAPI": ["java.net.HttpURLConnection.getInputStream()", "java.net.HttpURLConnection.getErrorStream()"], "Fixed commit": "43790d4d0465e4d8933a5250af9bef2d00033da0", "Url": "https://api.github.com/repos/SebastianRask/Pocket-Plays-for-Twitch", "Date": "2018-09-15T12:32:59Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.safframework.tony.common.utils.Preconditions.isBlank(request.getUserAgent())) { java.lang.String ua = com.cv4j.netdiscovery.core.utils.UserAgent.getUserAgent(); if (com.safframework.tony.common.utils.Preconditions.isNotBlank(ua)) { httpGet.setHeader(\"User-Agent\", ua); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9719/buggy-version/extra.src.main.java.com.cv4j.netdiscovery.extra.downloader.httpclient.HttpManager.java", "BodyUseAPI": [], "Fixed commit": "03332fb4d82af7c3ad6e86b94fc895ae3b0a0ffe", "Url": "https://api.github.com/repos/fengzhizi715/NetDiscovery", "Date": "2018-02-02T08:08:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.hasPermission(\"bungeereports.player\")) { p.openInventory(inv); }else p.sendMessage(((org.bukkit.ChatColor.RED) + \"\u0423 \u0432\u0430\u0441 \u043d\u0435\u0442 \u043f\u0440\u0430\u0432!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1310/buggy-version/src.main.java.ru.frostdelta.bungeereports.gui.UserUI.java", "BodyUseAPI": ["org.bukkit.entity.Player.openInventory(org.bukkit.inventory.Inventory)", "org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.RED) + \"\u0423 \u0432\u0430\u0441 \u043d\u0435\u0442 \u043f\u0440\u0430\u0432!\"))"], "Fixed commit": "d4975d8ab91a43c8b637b0264fcab722c6a46055", "Url": "https://api.github.com/repos/FrostDelta123/BungeeReports", "Date": "2018-07-28T21:32:07Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((armands9186.gmail.com.androidshop.Cart.cart) == null) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9286/buggy-version/app.src.main.java.armands9186.gmail.com.androidshop.Cart.java", "BodyUseAPI": [], "Fixed commit": "2f4507d1885afea48db5bf1fc08a8c51d3017b76", "Url": "https://api.github.com/repos/armands9186/AndroidShop", "Date": "2018-07-24T08:13:04Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((armands9186.gmail.com.androidshop.Cart.cart) != null) { mOrderAdapter.setData(armands9186.gmail.com.androidshop.Cart.cart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9286/buggy-version/app.src.main.java.armands9186.gmail.com.androidshop.Cart.java", "BodyUseAPI": [], "Fixed commit": "2f4507d1885afea48db5bf1fc08a8c51d3017b76", "Url": "https://api.github.com/repos/armands9186/AndroidShop", "Date": "2018-07-24T08:13:04Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4114/buggy-version/src.main.java.com.mtf.admin.controller.BulletinController.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "b07697cecf793693356d1135e409502530ac1716", "Url": "https://api.github.com/repos/kenshirokk/makemoney001", "Date": "2018-01-29T13:01:43Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vec.length) < 2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2983/buggy-version/src.main.java.SortAlgos.java", "BodyUseAPI": [], "Fixed commit": "1101253811611a3cb314c3a6377b90597f8e2c22", "Url": "https://api.github.com/repos/tcyubahi/tcyubahi_review", "Date": "2018-02-20T04:17:45Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numOfHumans + numOfAI) < 2) { userInterface.print(\"Well.. we need at least 2 players...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1899/buggy-version/PreparePlayers.java", "BodyUseAPI": [], "Fixed commit": "c7734239c6f47a3b4835aebb9432920e218dd3a2", "Url": "https://api.github.com/repos/CodecoolKRK20173/battle-of-cards-nowagrupadocelowa", "Date": "2018-08-23T13:12:55Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newThrowable instanceof ca.uhn.fhir.rest.server.exceptions.BaseServerResponseException) { ca.uhn.fhir.rest.server.exceptions.BaseServerResponseException fhirException = ((ca.uhn.fhir.rest.server.exceptions.BaseServerResponseException) (newThrowable)); if (((fhirException.getCause()) instanceof org.openlmis.hapifhir.service.ExternalApiException) || ((fhirException.getCause()) instanceof org.openlmis.hapifhir.i18n.BaseMessageException)) { newThrowable = fhirException.getCause(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1803/buggy-version/src.main.java.org.openlmis.hapifhir.i18n.MessageExceptionHandlingInterceptor.java", "BodyUseAPI": [], "Fixed commit": "516ce4bc546165eec414fd87e65f43cfa311a20e", "Url": "https://api.github.com/repos/OpenLMIS/openlmis-hapifhir", "Date": "2018-10-15T13:47:14Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((presentation.getSize()) > 1) presentation.remove(currentslide); else { presentation.insert(new Model.Slide()); presentation.remove((currentslide + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7363/buggy-version/src.Model.GuiFacade.java", "BodyUseAPI": ["Model.PresentationComponent.remove(int)", "Model.PresentationComponent.insert(Model.Slide)", "Model.PresentationComponent.remove(int)"], "Fixed commit": "62e0e5c5483ad30fda01282be05199edf40a5421", "Url": "https://api.github.com/repos/HichamOUNL/EvertVerduin-HichamChafik", "Date": "2018-04-30T21:09:33Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.wy.utils.StrUtils.isNotBlank(user.getUserIcon())) { user.setUserIcon((((com.wy.common.Constant.FILE_HTTP) + \"/\") + (user.getUserIcon()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9003/buggy-version/bms-server.src.main.java.com.wy.service.UserService.java", "BodyUseAPI": ["com.wy.entity.User.getUserIcon()", "com.wy.entity.User.setUserIcon((((com.wy.common.Constant.FILE_HTTP) + \"/\") + (user.getUserIcon())))"], "Fixed commit": "73937d8a8dbebdba86257ea6b0e154b387b4dacb", "Url": "https://api.github.com/repos/mygodness100/BooksMS", "Date": "2018-10-17T08:45:00Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.mounth) < 10) && ((this.day) < 10)) { str = ((((\"\" + (this.year)) + \"-0\") + (this.mounth)) + \"-0\") + (this.day); }else if (((this.mounth) < 10) && ((this.day) >= 10)) { str = ((((\"\" + (this.year)) + \"-0\") + (this.mounth)) + \"-\") + (this.day); }else if (((this.mounth) < 10) && ((this.day) >= 10)) { str = ((((\"\" + (this.year)) + \"-0\") + (this.mounth)) + \"-0\") + (this.day); }else if (((this.mounth) >= 10) && ((this.day) < 10)) { str = ((((\"\" + (this.year)) + \"-\") + (this.mounth)) + \"-0\") + (this.day); }else if (((this.mounth) >= 10) && ((this.day) >= 10)) { str = ((((\"\" + (this.year)) + \"-\") + (this.mounth)) + \"-\") + (this.day); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8643/buggy-version/ZerLiProject_G13.Zer-Li.src.Customer.Date.java", "BodyUseAPI": [], "Fixed commit": "8ef3d7214bbd71c8dc42463c1502cfefe485d1fd", "Url": "https://api.github.com/repos/HobbitWarrior/ZerLiG13Beta1.5", "Date": "2018-01-13T12:54:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((in1.getDataType()) == (Expression.DataType.SCALAR)) && ((in2.getDataType()) == (Expression.DataType.SCALAR))) throw new org.apache.sysml.runtime.DMLRuntimeException(\"GPU : Unsupported GPU builtin operations on 2 scalars\"); else if (isMatrixMatrix && (opcode.equals(\"solve\"))) return new org.apache.sysml.runtime.instructions.gpu.MatrixMatrixBuiltinGPUInstruction(new org.apache.sysml.runtime.matrix.operators.BinaryOperator(func), in1, in2, out, opcode, str, 2); else if (isMatrixScalar && ((opcode.equals(\"min\")) || (opcode.equals(\"max\")))) return new org.apache.sysml.runtime.instructions.gpu.ScalarMatrixBuiltinGPUInstruction(new org.apache.sysml.runtime.matrix.operators.BinaryOperator(func), in1, in2, out, opcode, str, 2); else throw new org.apache.sysml.runtime.DMLRuntimeException((\"GPU : Unsupported GPU builtin operations on a matrix and a scalar:\" + opcode));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9904/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.BuiltinBinaryGPUInstruction.java", "BodyUseAPI": [], "Fixed commit": "26c9e402c84dc8f20e5844ff7bc1ecf4501d4528", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2018-01-19T23:54:17Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastName.length()) < 6) { x = (lastName.length()) + 1; }else { x = 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7752/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "4af4b5a65cd3f74747ba40ad9ac253f67e433b89", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-kassarl", "Date": "2018-09-25T18:28:45Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ds.getKey().length()) > 10) if (ds.getValue(qa.edu.qu.cmps312.safedrivingapplication.models.User.class).getType().equals(\"Driver\")) { mBossContacts.add(ds.getValue(qa.edu.qu.cmps312.safedrivingapplication.models.User.class).getUserName()); }else { mBossName.add(ds.getValue(qa.edu.qu.cmps312.safedrivingapplication.models.User.class).getUserName()); e.putString(\"BossKey\", ds.getKey()); e.apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6763/buggy-version/app.src.main.java.qa.edu.qu.cmps312.safedrivingapplication.activities.MainActivity.java", "BodyUseAPI": ["ds.getValue(qa.edu.qu.cmps312.safedrivingapplication.models.User.class).getType()", "SharedPreferences.Editor.putString(java.lang.String,ds.getKey())", "java.util.ArrayList<java.lang.String>.add(ds.getValue(qa.edu.qu.cmps312.safedrivingapplication.models.User.class).getUserName())", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "ds.getValue(qa.edu.qu.cmps312.safedrivingapplication.models.User.class).getUserName()", "com.google.firebase.database.DataSnapshot.getKey()", "ds.getValue(qa.edu.qu.cmps312.safedrivingapplication.models.User.class).getType().equals(java.lang.String)", "com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)", "java.util.ArrayList<java.lang.String>.add(ds.getValue(qa.edu.qu.cmps312.safedrivingapplication.models.User.class).getUserName())", "ds.getValue(qa.edu.qu.cmps312.safedrivingapplication.models.User.class).getUserName()"], "Fixed commit": "444ff456fa07c8319828572a5dabc109260b449e", "Url": "https://api.github.com/repos/Suleiman-sk1404832/SafeDrivingApplication", "Date": "2018-05-20T08:27:46Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (power < 1000) power = 1000;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5419/buggy-version/app.src.main.java.com.iclaude.scheduledrecorder.ui.fragments.record.AudioLevelView.java", "BodyUseAPI": [], "Fixed commit": "1cdd9b4ad043b1f6db1c94e47f4ec62b47f67fda", "Url": "https://api.github.com/repos/iClaude/ScheduledRecorder", "Date": "2018-04-27T18:10:52Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (project.isPublic()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7347/buggy-version/src.main.java.biocode.fims.authorizers.QueryAuthorizer.java", "BodyUseAPI": [], "Fixed commit": "54342ec14583fee1b1edb44bc02fa98aea50f03a", "Url": "https://api.github.com/repos/biocodellc/biocode-fims-commons", "Date": "2018-08-18T22:58:09Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.length()) > 8) { res = res.substring(0, 8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4645/buggy-version/src.StringUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "081abd0921c4fdb8b90d60ec4d5067cc87d5319a", "Url": "https://api.github.com/repos/Purdue-CS193/lab-3-HI123123", "Date": "2018-09-25T18:18:21Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getIsDisabled()) { logger.log(\"Ignored (disabled)\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5598/buggy-version/eyes.selenium.java.src.main.java.com.applitools.eyes.selenium.Eyes.java", "BodyUseAPI": [], "Fixed commit": "d1454cbbe6b3426e08227c71df070218a256a702", "Url": "https://api.github.com/repos/applitools/eyes.sdk.java3", "Date": "2018-09-11T22:01:46Z"},
{"Line": "=>2299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getIsDisabled()) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5598/buggy-version/eyes.selenium.java.src.main.java.com.applitools.eyes.selenium.Eyes.java", "BodyUseAPI": [], "Fixed commit": "d1454cbbe6b3426e08227c71df070218a256a702", "Url": "https://api.github.com/repos/applitools/eyes.sdk.java3", "Date": "2018-09-11T22:01:46Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (regions != null) { if (regions.isAC()) { this.acRegions = regions; acNums = new int[acRegions.size()]; }else { this.afRegions = regions; afNums = new int[acRegions.size()]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3131/buggy-version/src.main.java.org.bgi.flexlab.zhangyong.vcfptvcount.VariantStatistics.java", "BodyUseAPI": [], "Fixed commit": "5ecec75afa5ce44cceb1f81e727f4ee9d6f2a0a4", "Url": "https://api.github.com/repos/zym1905/bioinformatics", "Date": "2018-09-12T08:11:53Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datamelt.neo4j.csv.NodesCollection.getNode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (key != (node.getKeyAttributeIndex())) { java.lang.String value = columns.get(key); values.add(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4981/buggy-version/src.main.java.com.datamelt.neo4j.csv.NodesCollector.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "6e9f7dc21aebb0f8f7231adb7b956933a6a6a1d3", "Url": "https://api.github.com/repos/uwegeercken/neo4j-csv-processor", "Date": "2018-02-15T11:35:26Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((profileEntity.getPhoto()) != null) { profileDto.setPhotoName(profileEntity.getPhoto().getPublicFileName()); profileDto.setPhotoUrl(com.maxvi.lifeblog.service.util.UrlGenerator.getUrlForImage(profileEntity.getPhoto())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9530/buggy-version/src.main.java.com.maxvi.lifeblog.service.conversion.Converters.java", "BodyUseAPI": ["com.maxvi.lifeblog.model.ProfileEntity.getPhoto()", "com.maxvi.lifeblog.service.user.dto.ProfileDto.setPhotoName(profileEntity.getPhoto().getPublicFileName())", "profileEntity.getPhoto().getPublicFileName()", "com.maxvi.lifeblog.service.user.dto.ProfileDto.setPhotoUrl(com.maxvi.lifeblog.service.util.UrlGenerator.getUrlForImage(profileEntity.getPhoto()))", "com.maxvi.lifeblog.service.util.UrlGenerator.getUrlForImage(profileEntity.getPhoto())", "com.maxvi.lifeblog.model.ProfileEntity.getPhoto()"], "Fixed commit": "2b483a1cc05a2193ed3cbe683afb07b70022a8a6", "Url": "https://api.github.com/repos/derzolew/LifeblogServer", "Date": "2018-05-06T00:59:22Z"},
{"Line": "=>1228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(accuString[2])) != 0) { currentAccuracy = java.lang.Double.parseDouble(accuString[2]); java.lang.System.out.println(currentAccuracy); }else { currentAccuracy = java.lang.Double.parseDouble(accuString[3]); java.lang.System.out.println(currentAccuracy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/932/buggy-version/SSS_JAVA_SERVER.src.SSS_SERVER_CLASSES_FOR_MOBILE.Client_Handler.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "a0177c2b3911fc5f745d6b641527a899032a6d7f", "Url": "https://api.github.com/repos/isaiah4lyf/PJE4A_PROJECT", "Date": "2018-10-12T09:48:52Z"},
{"Line": "=>1282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.parseInt(accuString[2])) != 0) { currentAccuracy = java.lang.Double.parseDouble(accuString[2]); java.lang.System.out.println(currentAccuracy); }else { currentAccuracy = java.lang.Double.parseDouble(accuString[3]); java.lang.System.out.println(currentAccuracy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/932/buggy-version/SSS_JAVA_SERVER.src.SSS_SERVER_CLASSES_FOR_MOBILE.Client_Handler.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "a0177c2b3911fc5f745d6b641527a899032a6d7f", "Url": "https://api.github.com/repos/isaiah4lyf/PJE4A_PROJECT", "Date": "2018-10-12T09:48:52Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contextSequence == null) { if (contextItem == null) { throw new org.exist.xquery.functions.fn.XPathException(this, ErrorCodes.XPDY0002, \"Context item is absent\"); } contextSequence = contextItem.toSequence(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6610/buggy-version/src.org.exist.xquery.functions.fn.FnHasChildren.java", "BodyUseAPI": [], "Fixed commit": "8e736b288a13dbcb99716a75eb151948f0a0eb67", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2018-02-23T13:28:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offeredCourseDetailed.isRequested()) { requestButton.setText(\"Cancel\"); }else { requestButton.setText(\"Request\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7877/buggy-version/app.src.main.java.inc.talentedinc.view.activities.OfferedCourseDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "e4d4d571a22c0f843215f3855342b38a4fd65f13", "Url": "https://api.github.com/repos/ShimaaSamirAdly/TalentedInc", "Date": "2018-06-18T13:02:04Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slot < (this.items.size())) this.callItem(slot, event);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7359/buggy-version/src.main.java.io.github.nexadn.unitedshops.ui.Pager.java", "BodyUseAPI": ["io.github.nexadn.unitedshops.ui.Pager.callItem(int,org.bukkit.event.inventory.InventoryClickEvent)"], "Fixed commit": "7a17047fbd57723224bec4fe2b01b367031d6d51", "Url": "https://api.github.com/repos/NexAdn/UnitedShops", "Date": "2018-05-21T16:54:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((feature.getGeometry()) != null) { com.vividsolutions.jts.io.geojson.GeoJsonWriter converter = new com.vividsolutions.jts.io.geojson.GeoJsonWriter(); entity.addProperty(new org.apache.olingo.commons.api.data.Property(null, PROP_FEATURE, org.apache.olingo.commons.api.data.ValueType.PRIMITIVE, converter.write(feature.getGeometry()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3555/buggy-version/src.main.java.org.n52.sta.mapping.FeatureOfInterestMapper.java", "BodyUseAPI": ["org.apache.olingo.commons.api.data.Entity.addProperty(org.apache.olingo.commons.api.data.Property)", "org.n52.series.db.beans.FeatureEntity.getGeometry()", "com.vividsolutions.jts.io.geojson.GeoJsonWriter.write(feature.getGeometry())"], "Fixed commit": "a56d005bbed244fa38264f2de9324011bd052674", "Url": "https://api.github.com/repos/52North/sensor-things", "Date": "2018-09-21T09:38:27Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mImpl.getView()) != null) { this.removeView(mImpl.getView()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5582/buggy-version/library.src.main.java.com.google.android.cameraview.CameraView.java", "BodyUseAPI": ["com.google.android.cameraview.CameraView.removeView(mImpl.getView())", "com.google.android.cameraview.CameraViewImpl.getView()"], "Fixed commit": "df15c0b2ebc46d10f896fbd401e3207a2eb51ee4", "Url": "https://api.github.com/repos/WayLoCode/cameraview", "Date": "2018-07-11T02:17:17Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (javelin.Javelin.DEBUG) { assert tournament == null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8593/buggy-version/javelin.view.screen.WorldScreen.java", "BodyUseAPI": [], "Fixed commit": "d4bb3bac7a3b6a507674afb8bad69e2bc47c7340", "Url": "https://api.github.com/repos/tukkek/javelin", "Date": "2018-02-21T01:02:19Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < (com.mta.tehreer.unicode.BidiClass.all.length)) { return com.mta.tehreer.unicode.BidiClass.all[index]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4340/buggy-version/tehreer-android.src.main.java.com.mta.tehreer.unicode.BidiClass.java", "BodyUseAPI": [], "Fixed commit": "03923041d1cdeffdb3771c55141a7a180d5a1794", "Url": "https://api.github.com/repos/mta452/Tehreer-Android", "Date": "2018-06-13T17:12:44Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isEnd) { result.sampleEnd(); isEnd = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/999/buggy-version/src.main.java.com.yxzhm.jmeter.CommandSampler.java", "BodyUseAPI": [], "Fixed commit": "114294d436a99305b7e7c69b847bf0598cb8960d", "Url": "https://api.github.com/repos/yxzhm/JMeterHttpNMSPSamplers", "Date": "2018-06-07T10:21:34Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shotHeight) == (-1)) { configuredPosition = !(shooter.inScalePosition()); }else { configuredPosition = shooter.inScalePosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6467/buggy-version/src.com._2491nomythic.tempest.commands.buttonboard.Configure.java", "BodyUseAPI": [], "Fixed commit": "706953d7d673f26a8a4f22a79cbcf86fe2255cd0", "Url": "https://api.github.com/repos/2491-NoMythic/2018-Robot", "Date": "2018-03-09T20:43:19Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.openflexo.http.connector.rm.HttpVirtualModelInstanceResource.HttpVirtualModelInstanceResourceImpl.getResourceCenter()) instanceof org.openflexo.foundation.FlexoProject) { editor = org.openflexo.http.connector.rm.HttpVirtualModelInstanceResource.HttpVirtualModelInstanceResourceImpl.getServiceManager().getProjectLoaderService().getEditorForProject(((org.openflexo.foundation.FlexoProject<?>) (org.openflexo.http.connector.rm.HttpVirtualModelInstanceResource.HttpVirtualModelInstanceResourceImpl.getResourceCenter()))); }else if ((org.openflexo.http.connector.rm.HttpVirtualModelInstanceResource.HttpVirtualModelInstanceResourceImpl.getResourceCenter().getDelegatingProjectResource()) != null) { editor = org.openflexo.http.connector.rm.HttpVirtualModelInstanceResource.HttpVirtualModelInstanceResourceImpl.getServiceManager().getProjectLoaderService().getEditorForProject(org.openflexo.http.connector.rm.HttpVirtualModelInstanceResource.HttpVirtualModelInstanceResourceImpl.getResourceCenter().getDelegatingProjectResource().getFlexoProject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9104/buggy-version/http-connector.src.main.java.org.openflexo.http.connector.rm.HttpVirtualModelInstanceResource.java", "BodyUseAPI": [], "Fixed commit": "537a91018d05cf5e02e4bb24b071eee4fad078e0", "Url": "https://api.github.com/repos/openflexo-team/openflexo-http", "Date": "2018-01-01T17:42:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (extractorConfig == null) { throw new org.graylog2.ConfigurationException(\"Missing configuration.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6230/buggy-version/graylog2-server.src.main.java.org.graylog2.inputs.extractors.SplitAndIndexExtractor.java", "BodyUseAPI": [], "Fixed commit": "912c39de4b0351cbac194127e025135cdfb8730f", "Url": "https://api.github.com/repos/Graylog2/graylog2-server", "Date": "2018-03-02T09:25:25Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(org.apache.commons.lang3.StringUtils.trimToEmpty(correctAnswer))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1628/buggy-version/edofox-service.src.main.java.com.rns.web.edo.service.util.CommonUtils.java", "BodyUseAPI": [], "Fixed commit": "c246c5461b62bd1d4973fdf4243a46b18b77fc86", "Url": "https://api.github.com/repos/ajaxkulkarni/edofox-service", "Date": "2018-04-30T09:16:09Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, com.google_voltpatches.common.util.concurrent.ListeningExecutorService>.remove(eds.getPartitionId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (les == null) { throw new java.lang.IllegalStateException(((((\"Export Data Source for table: \" + (eds.getTableName())) + \", partition: \") + (eds.getPartitionId())) + \" frees unallocated executor\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2089/buggy-version/src.frontend.org.voltdb.export.ExecutorFactory.java", "BodyUseAPI": [], "Fixed commit": "18ae6474f6f59769d536c68c748f7f024d4ad31e", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2018-10-09T21:32:32Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endX == (screenX)) endX--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4829/buggy-version/app.src.main.java.com.softwareoverflow.colorfall.game_pieces.Piece.java", "BodyUseAPI": [], "Fixed commit": "383598dadef9a127e094ec8e0e363942b415de23", "Url": "https://api.github.com/repos/AlexNewton1/ColorFall", "Date": "2018-08-06T18:46:51Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (os.contains(\"win\")) { ramo.klevis.Run.LOGGER.info(\"Working under Windows OS family requires some additional steps...\"); ramo.klevis.Run.setHadoopHomeEnvironmentVariable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/27/buggy-version/src.main.java.ramo.klevis.Run.java", "BodyUseAPI": [], "Fixed commit": "6765420169867249b09027f7cc442cf271d40fc7", "Url": "https://api.github.com/repos/Evegen55/DigitRecognizer", "Date": "2018-05-04T21:13:25Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (B == null) { return A; }else { IntList res = new IntList(A.first, null); IntList ptr = res; A = A.rest; while (A != null) { ptr.rest = new IntList(A.first, null); A = A.rest; ptr = ptr.rest; } ptr.rest = new IntList(B.first, null); ptr = ptr.rest; B = B.rest; while (B != null) { ptr.rest = new IntList(B.first, null); B = B.rest; ptr = ptr.rest; } return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8713/buggy-version/lab2.Intlist.IntList.java", "BodyUseAPI": [], "Fixed commit": "bdbf5d67210632ffce747e12e8b0003b1c792938", "Url": "https://api.github.com/repos/doekeeper/CS61b", "Date": "2018-10-04T06:12:54Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obolibrary.robot.ExceptionHelper.getExceptionID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (exceptionID != null) { java.lang.System.out.println(org.obolibrary.robot.ExceptionHelper.trimExceptionID(msg)); java.lang.System.out.println((\"For details see: http://robot.obolibrary.org/\" + exceptionID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/498/buggy-version/robot-command.src.main.java.org.obolibrary.robot.ExceptionHelper.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8c11321bcca2864de10e3b5abe6d49d11f3b8fa6", "Url": "https://api.github.com/repos/rctauber/robot", "Date": "2018-08-13T14:13:21Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiles[index]) != (currentTile)) { tiles[index] = currentTile; autoSolidRectangle(xT, yT, currentTile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1699/buggy-version/Arget2DCore.src.com.argetgames.arget2d.tilemap.TilemapEditor.java", "BodyUseAPI": [], "Fixed commit": "e82ddafcbf6bcde105218e67b449514ca0e6ba11", "Url": "https://api.github.com/repos/arget4me/ArgetJavaRenderer", "Date": "2018-10-25T08:43:11Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["twitter4j.Status.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tweet == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4342/buggy-version/app.src.main.java.com.github.moko256.twitlatte.text.TwitterStringUtils.java", "BodyUseAPI": [], "Fixed commit": "ab408bef439e78bfb2f8780cdffd0a4f0f95bfc1", "Url": "https://api.github.com/repos/moko256/twitlatte", "Date": "2018-06-09T12:06:58Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string == null) { throw new java.lang.RuntimeException(\"addValue name cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6913/buggy-version/src.main.java.waazdoh.datamodel.WObject.java", "BodyUseAPI": [], "Fixed commit": "bc2e11cf9d957e2c49d57f6916cee6fa8cdac358", "Url": "https://api.github.com/repos/CollabThings/collabthings.core", "Date": "2018-07-21T22:01:04Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainAppLocalDb.db.userPreviewDao()) != null) { if ((MainAppLocalDb.db.userPreviewDao().getUserPreviewByUserId(userId)) != null) { user = MainAppLocalDb.db.userPreviewDao().getUserPreviewByUserId(userId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7519/buggy-version/app.src.main.java.com.example.eliavmenachi.myapplication.Models.User.UserPreviewAsyncDao.java", "BodyUseAPI": [], "Fixed commit": "b642fc49f8762f950fdbd33fe435932cf301d983", "Url": "https://api.github.com/repos/OrForte/Sale-App", "Date": "2018-08-04T11:51:13Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainAppLocalDb.db.userPreviewDao()) != null) { if ((MainAppLocalDb.db.userPreviewDao().getUsersPreview()) != null) { user = MainAppLocalDb.db.userPreviewDao().getUsersPreview(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7519/buggy-version/app.src.main.java.com.example.eliavmenachi.myapplication.Models.User.UserPreviewAsyncDao.java", "BodyUseAPI": [], "Fixed commit": "b642fc49f8762f950fdbd33fe435932cf301d983", "Url": "https://api.github.com/repos/OrForte/Sale-App", "Date": "2018-08-04T11:51:13Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (users != null) { if ((users[0]) != null) { MainAppLocalDb.db.userDao().insertUsers(users); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7519/buggy-version/app.src.main.java.com.example.eliavmenachi.myapplication.Models.User.UserAsynchDao.java", "BodyUseAPI": ["MainAppLocalDb.db.userDao().insertUsers(com.example.eliavmenachi.myapplication.Entities.User[])"], "Fixed commit": "b642fc49f8762f950fdbd33fe435932cf301d983", "Url": "https://api.github.com/repos/OrForte/Sale-App", "Date": "2018-08-04T11:51:13Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainAppLocalDb.db.userDao()) != null) { if ((MainAppLocalDb.db.userDao().getUserByUserId(userId)) != null) { user = MainAppLocalDb.db.userDao().getUserByUserId(userId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7519/buggy-version/app.src.main.java.com.example.eliavmenachi.myapplication.Models.User.UserAsynchDao.java", "BodyUseAPI": [], "Fixed commit": "b642fc49f8762f950fdbd33fe435932cf301d983", "Url": "https://api.github.com/repos/OrForte/Sale-App", "Date": "2018-08-04T11:51:13Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entryField.getText().equals(\"\"))) { userCalculationInput = userCalculationInput.substring(0, ((userCalculationInput.length()) - 1)); entryField.setText(userCalculationInput); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1720/buggy-version/Calculator.app.src.main.java.com.example.priya.calculator.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "b0983bd46a0981179ee7d44a317d54908d9bc9a2", "Url": "https://api.github.com/repos/priyaVora/MobileApplications", "Date": "2018-07-11T04:03:09Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parameterValue == null) { return defaultDDMFormFieldParameterValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8444/buggy-version/modules.apps.forms-and-workflow.dynamic-data-mapping.dynamic-data-mapping-type-radio.src.main.java.com.liferay.dynamic.data.mapping.type.radio.internal.RadioDDMFormFieldValueRequestParameterRetriever.java", "BodyUseAPI": [], "Fixed commit": "dc83c06b51fd6315b953c40330e02b794130b856", "Url": "https://api.github.com/repos/zhangyan0701/liferay-portal", "Date": "2017-07-19T13:52:52Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parameterValue == null) { return defaultDDMFormFieldParameterValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8444/buggy-version/modules.apps.forms-and-workflow.dynamic-data-mapping.dynamic-data-mapping-type-checkbox.src.main.java.com.liferay.dynamic.data.mapping.type.checkbox.internal.CheckboxDDMFormFieldValueRequestParameterRetriever.java", "BodyUseAPI": [], "Fixed commit": "dc83c06b51fd6315b953c40330e02b794130b856", "Url": "https://api.github.com/repos/zhangyan0701/liferay-portal", "Date": "2017-07-19T13:52:52Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zmdev.goldenbag.service.UserService.register(user.getPhone(),CertificateType.PhoneNum,user.getPassword())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userId == 0) { throw new com.zmdev.goldenbag.exception.ModelNotFoundException(\"\u7528\u6237\u521b\u5efa\u5931\u8d25\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7447/buggy-version/src.main.java.com.zmdev.goldenbag.service.impl.UserServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0c1802c3f63846965072e0276aacf40e8aa0d8ec", "Url": "https://api.github.com/repos/ty666/golden-bag-backend", "Date": "2018-08-02T17:32:50Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fingerPrintCallback) != null) fingerPrintCallback.onFingerPrintException(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4884/buggy-version/app.src.main.java.com.keepassdroid.fingerprint.FingerPrintHelper.java", "BodyUseAPI": [], "Fixed commit": "32fb536a9229a5f4871690a3ad30fc99ac612092", "Url": "https://api.github.com/repos/Kunzisoft/KeePassDX", "Date": "2018-02-02T14:47:43Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(value.getOwnerId())) { context.buildConstraintViolationWithTemplate(\"Required ownerId\").addConstraintViolation(); valid = false; }else if (!(ownerRepository.findById(value.getOwnerId()).isPresent())) { context.buildConstraintViolationWithTemplate((\"Invalid ownerId \" + (value.getOwnerId()))).addConstraintViolation(); valid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/64/buggy-version/roomboo-api.src.main.java.org.lab.roomboo.api.model.validation.BookingRequestValidator.java", "BodyUseAPI": ["org.lab.roomboo.api.model.BookingRequest.getOwnerId()", "context.buildConstraintViolationWithTemplate((\"Invalid ownerId \" + (value.getOwnerId()))).addConstraintViolation()", "org.lab.roomboo.api.model.BookingRequest.getOwnerId()", "ownerRepository.findById(value.getOwnerId()).isPresent()", "javax.validation.ConstraintValidatorContext.buildConstraintViolationWithTemplate((\"Invalid ownerId \" + (value.getOwnerId())))", "org.lab.roomboo.domain.repository.ReserveOwnerRepository.findById(value.getOwnerId())"], "Fixed commit": "df8ac7a39c116baa3535aa03e67189d6f7801465", "Url": "https://api.github.com/repos/labcabrera/roomboo", "Date": "2018-07-25T14:39:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.getTo()) == null) { context.buildConstraintViolationWithTemplate(\"Required to\").addConstraintViolation(); valid = false; }else if (value.getTo().isBefore(java.time.LocalDateTime.now())) { context.buildConstraintViolationWithTemplate(\"End date must be after the current date\").addConstraintViolation(); valid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/64/buggy-version/roomboo-api.src.main.java.org.lab.roomboo.api.model.validation.BookingRequestValidator.java", "BodyUseAPI": ["value.getTo().isBefore(java.time.LocalDateTime)", "org.lab.roomboo.api.model.BookingRequest.getTo()"], "Fixed commit": "df8ac7a39c116baa3535aa03e67189d6f7801465", "Url": "https://api.github.com/repos/labcabrera/roomboo", "Date": "2018-07-25T14:39:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.getFrom()) == null) { context.buildConstraintViolationWithTemplate(\"Required from\").addConstraintViolation(); valid = false; }else if (value.getFrom().isBefore(java.time.LocalDateTime.now())) { context.buildConstraintViolationWithTemplate(\"Start date must be after the current date\").addConstraintViolation(); valid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/64/buggy-version/roomboo-api.src.main.java.org.lab.roomboo.api.model.validation.BookingRequestValidator.java", "BodyUseAPI": ["org.lab.roomboo.api.model.BookingRequest.getFrom()", "value.getFrom().isBefore(java.time.LocalDateTime)"], "Fixed commit": "df8ac7a39c116baa3535aa03e67189d6f7801465", "Url": "https://api.github.com/repos/labcabrera/roomboo", "Date": "2018-07-25T14:39:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((value.getFrom()) != null) && ((value.getTo()) != null)) && (value.getFrom().isAfter(value.getTo()))) { context.buildConstraintViolationWithTemplate(\"Start date can not be after end date\").addConstraintViolation(); valid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/64/buggy-version/roomboo-api.src.main.java.org.lab.roomboo.api.model.validation.BookingRequestValidator.java", "BodyUseAPI": [], "Fixed commit": "df8ac7a39c116baa3535aa03e67189d6f7801465", "Url": "https://api.github.com/repos/labcabrera/roomboo", "Date": "2018-07-25T14:39:43Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model) != null) model.setTabView(value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1986/buggy-version/src.scubase3.ScubaController.java", "BodyUseAPI": [], "Fixed commit": "86915d1734cc3e535905f48abcd14d861afa64f5", "Url": "https://api.github.com/repos/craw0117/ScubaSE3", "Date": "2018-05-11T00:53:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a == b) throw new java.lang.IllegalArgumentException(\"in place reversal not done yet\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2874/buggy-version/src.main.java.nom.bdezonia.zorbage.algorithm.CopyBackward.java", "BodyUseAPI": [], "Fixed commit": "d755d5e58314b4aff06454e3941c00c65a8c528a", "Url": "https://api.github.com/repos/bdezonia/zorbage", "Date": "2018-08-22T02:27:10Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 1) { SpaceshipGenetics.usage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2524/buggy-version/SpaceshipGenetics.java", "BodyUseAPI": [], "Fixed commit": "45ee213d25085d9c7976ceef77991d60c7c28c7a", "Url": "https://api.github.com/repos/dxt9140/SpaceshipGenetics", "Date": "2018-03-02T20:46:52Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.zero.activity.MainActivity.2.getApplication()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(mainApplication.isOnline())) { android.widget.Toast.makeText(this, \"\u60a8\u8fd8\u672a\u767b\u5f55\uff0c\u8bf7\u5148\u767b\u5f55\", Toast.LENGTH_SHORT).show(); }else { httpThread(1, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3398/buggy-version/app.src.main.java.com.example.zero.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "af7e598dea277b6bb94adbd82bb51ef0bc35fb58", "Url": "https://api.github.com/repos/abcdddxy/GreenTravel_New", "Date": "2018-05-04T07:59:55Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pan.equals(\"ROUTES\")) { routeB_actionPerformed(null); }else if (pan.equals(\"EVENTS\")) { busB_actionPerformed(null); }else if (pan.equals(\"SCHEDULE\")) { DScheduleB_actionPerformed(null); }else if (pan.equals(\"FILES\")) { filesB_actionPerformed(null); }else if (pan.equals(\"EVENTS\")) { DScheduleB_actionPerformed(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5376/buggy-version/src.main.java.memoranda.ui.WorkPanel.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "7945e436bf359b436e40992d328277c452eeb90b", "Url": "https://api.github.com/repos/ser316asu-2018/Babelsberg", "Date": "2018-04-22T23:08:21Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bank != null) { additionalParamsMap.put(com.stripe.android.model.SourceParams.FIELD_BANK, bank); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3428/buggy-version/stripe.src.main.java.com.stripe.android.model.SourceParams.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "499fa537f13bf470a27c5b2fe7740f624ceb4972", "Url": "https://api.github.com/repos/NewAmsterdamLabs/stripe-android", "Date": "2018-05-16T18:18:37Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(additionalParamsMap.isEmpty())) { params.setApiParameterMap(additionalParamsMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3428/buggy-version/stripe.src.main.java.com.stripe.android.model.SourceParams.java", "BodyUseAPI": ["com.stripe.android.model.SourceParams.setApiParameterMap(java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "499fa537f13bf470a27c5b2fe7740f624ceb4972", "Url": "https://api.github.com/repos/NewAmsterdamLabs/stripe-android", "Date": "2018-05-16T18:18:37Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cn.com.yikangbao.untils.common.StringUtil.isEmpty(eventKey))) { eventKey = eventKey.replace(WechatConfigParams.WECHAT_PREFIX_QRCODE_EVENT_KEY, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6979/buggy-version/ins-wechat.src.main.java.cn.com.yikangbao.event.listener.wechat.WechatUserSubscribeEventListener.java", "BodyUseAPI": ["java.lang.String.replace(WechatConfigParams.WECHAT_PREFIX_QRCODE_EVENT_KEY,java.lang.String)"], "Fixed commit": "a3605cd6eb63052d585506c4104e3c32d96a2e5c", "Url": "https://api.github.com/repos/juyecys/ykb-web", "Date": "2018-02-26T07:51:53Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(newpassword))) { admindetails.setPassword(newpassword); admindetails = usermanager.encryptPW(admindetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9393/buggy-version/src.main.java.com.bowlink.rr.controller.sysAdminController.java", "BodyUseAPI": ["com.bowlink.rr.model.User.setPassword(java.lang.String)"], "Fixed commit": "1649d59558bb3074574eab913d708a4304196baa", "Url": "https://api.github.com/repos/bowlinktech/rapidregistryTZ", "Date": "2018-08-27T17:39:05Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((coeff != 0) && (k < 64)) { component[JPG.zigZagMap[k]] = coeff; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3377/buggy-version/src.main.java.com.ociweb.jpgRaster.HuffmanDecoder.java", "BodyUseAPI": [], "Fixed commit": "a950f16966563d2635d80d5a53b6dc6978f013d6", "Url": "https://api.github.com/repos/oci-pronghorn/JPG-Raster", "Date": "2018-03-14T01:32:17Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (managerSucceed) { factory = getFactory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6492/buggy-version/bdse-kvnode.src.main.java.ru.csc.bdse.kv.db.postgres.PostgresPersistentKeyValueApi.java", "BodyUseAPI": [], "Fixed commit": "b54f0f19683d3db562b07be80e429e9e6db103d2", "Url": "https://api.github.com/repos/equivalence1/csc-bdse", "Date": "2018-02-27T20:26:13Z"},
{"Line": "=>943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jitsi.impl.protocol.xmpp.colibri.ColibriConferenceIQ.getContent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((content != null) && ((content.getChannelCount()) > 0)) { java.lang.String channelId = content.getChannel(0).getID(); send |= colibriBuilder.addRtpDescription(descriptionMap.get(contentName), contentName, channelId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7793/buggy-version/src.main.java.org.jitsi.impl.protocol.xmpp.colibri.ColibriConferenceImpl.java", "BodyUseAPI": ["ColibriConferenceIQ.Content.getChannel(int)", "content.getChannel(0).getID()"], "Fixed commit": "d07096a6d2c56eee5c74c12669b99f3e0dafaf7a", "Url": "https://api.github.com/repos/pstros/jicofo", "Date": "2018-01-31T06:44:28Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ps.getConnection().getMetaData().getDatabaseProductName().equals(\"PostgreSQL\")) { java.sql.Blob content = ps.getConnection().createBlob(); content.setBytes(1, jsonObj.toString().getBytes()); ps.setBlob(i, content); }else { java.sql.Clob content = ps.getConnection().createClob(); content.setString(1, jsonObj.toString()); ps.setClob(i, content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5993/buggy-version/lib.taskana-core.src.main.java.pro.taskana.impl.persistence.MapTypeHandler.java", "BodyUseAPI": ["java.sql.Connection.createClob()", "java.sql.PreparedStatement.setClob(int,java.sql.Clob)", "java.sql.PreparedStatement.getConnection()", "java.sql.PreparedStatement.getConnection()", "java.sql.Connection.createBlob()", "java.sql.PreparedStatement.setBlob(int,java.sql.Blob)"], "Fixed commit": "0f17a420303f912b8396aeeee8e27b336b58aba5", "Url": "https://api.github.com/repos/mustaphazorgati/taskana", "Date": "2018-04-23T08:48:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((watchList != null) && ((watchList.getWatchedTickers()) != null)) { for (com.gzhang.screener.models.WatchedTicker watchedTicker : watchList.getWatchedTickers()) { tickers.add(new com.gzhang.screener.models.iomodels.WatchedTickerOutput(watchedTicker)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2148/buggy-version/src.main.java.com.gzhang.screener.models.iomodels.WatchListOutput.java", "BodyUseAPI": [], "Fixed commit": "3855bd71f154e5938888527a458d64ae83d09d24", "Url": "https://api.github.com/repos/GarlandZhang/screener", "Date": "2018-10-17T01:14:39Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(JsonKey.SKILLS)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isEmpty(skillList)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6289/buggy-version/actors.user.src.main.java.org.sunbird.user.actors.UserManagementActor.java", "BodyUseAPI": [], "Fixed commit": "74dd56514ba00036fe021143de357f78d034ecbe", "Url": "https://api.github.com/repos/project-sunbird/sunbird-lms-mw", "Date": "2018-10-04T10:13:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) throw new java.lang.IllegalArgumentException(\"Value cannot be null.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3846/buggy-version/src.main.java.com.igufguf.kingdomcraft.api.models.flags.KingdomFlag.java", "BodyUseAPI": [], "Fixed commit": "ff07136758496bc09ec9f4e6d1fb47ada4a7883e", "Url": "https://api.github.com/repos/jorisguffens/KingdomCraft", "Date": "2018-09-05T17:02:53Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (threshold != null) { values.add(threshold.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4489/buggy-version/mojio-sdk-model.src.main.java.io.moj.java.sdk.model.values.DeviceConfiguration.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "io.moj.java.sdk.model.values.DeviceConfiguration.DisturbanceThreshold.getKey()"], "Fixed commit": "617f991b2357bb2afd6fbf3c652cc0be89724e4f", "Url": "https://api.github.com/repos/mojio/mojio-java-sdk", "Date": "2018-04-03T21:45:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((values != null) && (!(values.isEmpty()))) { return io.moj.java.sdk.model.values.DeviceConfiguration.DisturbanceThreshold.fromKey(values.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4489/buggy-version/mojio-sdk-model.src.main.java.io.moj.java.sdk.model.values.DeviceConfiguration.java", "BodyUseAPI": ["io.moj.java.sdk.model.values.DeviceConfiguration.DisturbanceThreshold.fromKey(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "617f991b2357bb2afd6fbf3c652cc0be89724e4f", "Url": "https://api.github.com/repos/mojio/mojio-java-sdk", "Date": "2018-04-03T21:45:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.tag()) instanceof okhttp3.Request) { url = ((okhttp3.Request) (request.tag())).url().toString(); }else { url = request.url().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3901/buggy-version/library-base.src.main.java.com.boildcoffee.base.network.util.InterceptorUtils.java", "BodyUseAPI": ["((okhttp3.Request) (request.tag())).url().toString()", "okhttp3.Request.url()", "((okhttp3.Request) (request.tag())).url()", "okhttp3.Request.tag()", "request.url().toString()"], "Fixed commit": "232e913f74eaef0ae156cef8ce071beb19728893", "Url": "https://api.github.com/repos/aii1991/AndroidRapidDev", "Date": "2018-04-22T10:07:33Z"},
{"Line": "=>1132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (clImage != clReducedImage) { clReducedImage.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6245/buggy-version/src.main.java.clearcl.imagej.kernels.Kernels.java", "BodyUseAPI": ["clearcl.ClearCLImage.close()"], "Fixed commit": "56e4ae097b480ed8aefd97a3969642877088dfdd", "Url": "https://api.github.com/repos/ClearControl/clearclij", "Date": "2018-09-20T09:51:10Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == lo) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1555/buggy-version/AlgorithmsInJava.quickSort.QuickSort.java", "BodyUseAPI": [], "Fixed commit": "44e28adcbc6f058903881bb218105dac997464ef", "Url": "https://api.github.com/repos/linj2n/data-structure-and-some-tiny-code-chips", "Date": "2018-01-12T02:27:07Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == hi) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1555/buggy-version/AlgorithmsInJava.quickSort.QuickSort.java", "BodyUseAPI": [], "Fixed commit": "44e28adcbc6f058903881bb218105dac997464ef", "Url": "https://api.github.com/repos/linj2n/data-structure-and-some-tiny-code-chips", "Date": "2018-01-12T02:27:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n + 1) < (numbers.length)) animation_stupid((n + 1), cur);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5345/buggy-version/VisuAlgOl-Android.app.src.main.java.com.olympiad_algorithms.visualgol_android.StupidSort.java", "BodyUseAPI": ["com.olympiad_algorithms.visualgol_android.StupidSort.2.animation_stupid(int,long)"], "Fixed commit": "73087c8a7d9c9b81b320ce0292e0f066ff8e423f", "Url": "https://api.github.com/repos/NikitaChampion/VisuAlgOl", "Date": "2018-09-18T18:37:54Z"},
{"Line": "=>998", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((strSplit[1].split(\"\\\\.\").length) > 0) { java.lang.String vId = strSplit[1].split(\"\\\\.\")[0]; if (!(accession.equals(vId))) { throw new org.sbolstandard.core2.SBOLConversionException(\"Warning: id in version does not match id in accession\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3792/buggy-version/core2.src.main.java.org.sbolstandard.core2.GenBank.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "cd8a253ab0180e1304c316363594fd10302aa7b5", "Url": "https://api.github.com/repos/SynBioDex/libSBOLj", "Date": "2018-08-05T19:52:35Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objects.length) == 1) { java.lang.Object object = objects[0]; return object == null ? com.socks.library.KLog.NULL : object.toString(); }else { return com.socks.library.KLog.NULL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1816/buggy-version/library.src.main.java.com.socks.library.KLog.java", "BodyUseAPI": [], "Fixed commit": "1317cc905acfd5904d9eb3913b0270a6e7ea100c", "Url": "https://api.github.com/repos/renyuzhuo/KLog", "Date": "2018-05-28T09:47:26Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stocks == null) { stocks = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6349/buggy-version/app.src.main.java.com.example.der62.battlestocks.Stock.java", "BodyUseAPI": [], "Fixed commit": "9f75a238093b043004b65cab291626ec634ef733", "Url": "https://api.github.com/repos/rockaflacka47/BattleStocks", "Date": "2018-04-12T21:05:15Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(auth.equals(\"failed\"))) { postclient.execute(RequestMethod.POST); java.lang.System.out.println(postclient.getResponseCode()); java.lang.System.out.println(postclient.getResponse()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2628/buggy-version/app.src.main.java.com.example.johnny.hangman.Win.java", "BodyUseAPI": [], "Fixed commit": "9dbc929a23c4431137e9d26766bfe11fef5c4b0b", "Url": "https://api.github.com/repos/JohnnyChenJiaHao/hangmanDS_android", "Date": "2018-05-16T12:48:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueBytes == null) { valueBytes = new byte[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/490/buggy-version/src.sqldeveloper.extension.excelimportexport.BinaryStreamDataTypeEx.java", "BodyUseAPI": [], "Fixed commit": "b5c99ad564a3ee2170c98d5b7ecd45b656c3ccf2", "Url": "https://api.github.com/repos/takahiden/excelimportexport", "Date": "2018-10-11T16:36:00Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.shardingsphere.core.parsing.parser.clause.expression.BasicExpressionParser.parse(io.shardingsphere.core.parsing.parser.sql.dml.insert.InsertStatement)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sqlExpression instanceof io.shardingsphere.core.parsing.parser.expression.SQLIdentifierExpression) { columnName = io.shardingsphere.core.util.SQLUtil.getExactlyValue(((io.shardingsphere.core.parsing.parser.expression.SQLIdentifierExpression) (sqlExpression)).getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/481/buggy-version/sharding-core.src.main.java.io.shardingsphere.core.parsing.parser.clause.InsertColumnsClauseParser.java", "BodyUseAPI": [], "Fixed commit": "687ebf59df88d27ca4764d7b8478964f9ae0e9f3", "Url": "https://api.github.com/repos/ma-PATHo-guang-64/sharding-sphere", "Date": "2018-05-24T06:43:14Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.shardingsphere.core.parsing.parser.clause.expression.BasicExpressionParser.parse(io.shardingsphere.core.parsing.parser.sql.dml.insert.InsertStatement)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sqlExpression instanceof io.shardingsphere.core.parsing.parser.expression.SQLPropertyExpression) { columnName = io.shardingsphere.core.util.SQLUtil.getExactlyValue(((io.shardingsphere.core.parsing.parser.expression.SQLPropertyExpression) (sqlExpression)).getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/481/buggy-version/sharding-core.src.main.java.io.shardingsphere.core.parsing.parser.clause.InsertColumnsClauseParser.java", "BodyUseAPI": [], "Fixed commit": "687ebf59df88d27ca4764d7b8478964f9ae0e9f3", "Url": "https://api.github.com/repos/ma-PATHo-guang-64/sharding-sphere", "Date": "2018-05-24T06:43:14Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (returnVal == null) { return returnVal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5982/buggy-version/fluid-api.src.main.java.com.fluidbpm.program.api.util.elasticsearch.ESFormUtil.java", "BodyUseAPI": [], "Fixed commit": "295b41c2cb4c1f94b498c8741f7b80528f7d2604", "Url": "https://api.github.com/repos/Koekiebox-PTY-LTD/Fluid", "Date": "2018-05-16T11:50:16Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.length()) > 4) { dpPerChar = com.rescribe.util.CommonMethods.convertDpToPixel(((text.length()) * 6)); bitmapSize = com.rescribe.util.CommonMethods.convertDpToPixel((((text.length()) * 6) + 6)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1864/buggy-version/app.src.main.java.com.rescribe.ui.activities.vital_graph.VitalGraphDetailsActivity.java", "BodyUseAPI": ["com.rescribe.util.CommonMethods.convertDpToPixel(int)", "com.rescribe.util.CommonMethods.convertDpToPixel(int)", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "47c6d9af8c4f8b667876b2909af2e4710df3325d", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2018-02-07T12:52:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currVersion < 2) { world.arshad.grandordercompanion.DatabaseUpdater.update(world.arshad.grandordercompanion.data.Model.getInstance().getDatabase(), activity.getAssets(), 2); currVersion = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/601/buggy-version/app.src.main.java.world.arshad.grandordercompanion.DatabaseUpdater.java", "BodyUseAPI": [], "Fixed commit": "a56af895953cf742e21631ce135414bcb8dd7e3a", "Url": "https://api.github.com/repos/nisegami/grand-order-companion", "Date": "2018-04-06T09:51:44Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workoutName.equals(\"\")) || (muscleGroup == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9147/buggy-version/IndecisiveGainz.src.indecisivegainz.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "3ade4e6728d14facfa556f0bc9ef1e29a65b6bbe", "Url": "https://api.github.com/repos/sdowdlec/IndecisiveGainz", "Date": "2018-07-06T05:57:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reachedFinalState(currentStates)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8050/buggy-version/src.main.java.personal.gokul2411s.regular_automata.Automaton.java", "BodyUseAPI": [], "Fixed commit": "0cdabef9f2c4072c5a1ef834bf064ad74aeb7e4a", "Url": "https://api.github.com/repos/gokul2411s/automata", "Date": "2018-05-22T19:55:38Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collisionFlag) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7165/buggy-version/src.characters.SandWurm.java", "BodyUseAPI": [], "Fixed commit": "1f70377e4c48fde25b0b4e2ab7807feefaf9b852", "Url": "https://api.github.com/repos/jeoliva222/DND-Game", "Date": "2018-08-30T03:05:58Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(other instanceof seedu.address.model.job.Job)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1680/buggy-version/src.main.java.seedu.address.model.job.Job.java", "BodyUseAPI": [], "Fixed commit": "0828f5656a726b59da08c2e5fff4aca886307528", "Url": "https://api.github.com/repos/Ftywan/main", "Date": "2018-10-31T15:22:07Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.wuest.repurpose.ModRegistry.CustomMaterials.size()) == 0) { com.wuest.repurpose.ModRegistry.RegisterToolMaterials(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7995/buggy-version/src.main.java.com.wuest.repurpose.ModRegistry.java", "BodyUseAPI": [], "Fixed commit": "b796b24fe29e60ee31dafc5cfffd5060577f8ab2", "Url": "https://api.github.com/repos/Brian-Wuest/MC-Repurpose", "Date": "2018-04-29T23:30:46Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((urlToId.containsKey(url)) || (urlToId.containsKey(javax.ws.rs.core.UriBuilder.fromUri(url).scheme((url.getScheme().equals(\"http\") ? \"https\" : \"http\")).build()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8276/buggy-version/src.main.java.cz.muni.fi.kurcik.kgs.util.UrlIndex.java", "BodyUseAPI": [], "Fixed commit": "b2811ca34a570650bb975abea3393038ec00405a", "Url": "https://api.github.com/repos/GreenManSK/KGS", "Date": "2018-04-20T14:32:15Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mCurrentRating.getText()))) { double currentRating = java.lang.Double.parseDouble(mCurrentRating.getText().toString()); mRating.setRating(currentRating); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3762/buggy-version/app.src.main.java.com.edgardrake.flameseeker.activity.demo.fragment.RatingFragment.java", "BodyUseAPI": ["java.lang.Double.parseDouble(mCurrentRating.getText().toString())", "android.support.design.widget.TextInputEditText.getText()", "mCurrentRating.getText().toString()"], "Fixed commit": "f4bcb042cb8d2ef56e35e9f4b48ae239b9f8e511", "Url": "https://api.github.com/repos/rido-ramadan/flameseeker", "Date": "2018-04-13T09:08:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mMaxRating.getText()))) { int maxRating = java.lang.Integer.parseInt(mMaxRating.getText().toString()); mRating.setMaxRating(maxRating); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3762/buggy-version/app.src.main.java.com.edgardrake.flameseeker.activity.demo.fragment.RatingFragment.java", "BodyUseAPI": ["java.lang.Integer.parseInt(mMaxRating.getText().toString())", "android.support.design.widget.TextInputEditText.getText()", "mMaxRating.getText().toString()"], "Fixed commit": "f4bcb042cb8d2ef56e35e9f4b48ae239b9f8e511", "Url": "https://api.github.com/repos/rido-ramadan/flameseeker", "Date": "2018-04-13T09:08:22Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status.equalsIgnoreCase(\"ic\")) { ic = jwtDecorder.generate(ic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4556/buggy-version/Dashboard.src.main.java.org.arpicoinsurance.groupit.dashboard.controller.JasperReportController.java", "BodyUseAPI": [], "Fixed commit": "da8d10b51930907a67463e9bc2c7755b92f59660", "Url": "https://api.github.com/repos/arpicoinsuranceit/Infosys", "Date": "2018-05-02T02:50:03Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status.equalsIgnoreCase(\"ul\")) { ul = jwtDecorder.generate(ul); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4556/buggy-version/Dashboard.src.main.java.org.arpicoinsurance.groupit.dashboard.controller.JasperReportController.java", "BodyUseAPI": [], "Fixed commit": "da8d10b51930907a67463e9bc2c7755b92f59660", "Url": "https://api.github.com/repos/arpicoinsuranceit/Infosys", "Date": "2018-05-02T02:50:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.arch.persistence.db.SupportSQLiteDatabase.query(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getCount()) > 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8829/buggy-version/app.src.main.java.com.persona5dex.models.room.PersonaDatabase.java", "BodyUseAPI": [], "Fixed commit": "da314d453c839c08a101aa3076bb591260a337b0", "Url": "https://api.github.com/repos/recheej/persona-dex", "Date": "2018-03-29T04:08:12Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstTimeFetch) { isFirstTimeFetch = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7732/buggy-version/app.src.main.java.com.zizohanto.popularmovies.ui.movies.MoviesFragment.java", "BodyUseAPI": [], "Fixed commit": "8a70ae89b5264348b225b345be1de15251291427", "Url": "https://api.github.com/repos/zizoh/Popular-Movies", "Date": "2018-10-02T14:13:49Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContext) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3364/buggy-version/app.src.main.java.vip.frendy.scdemo.presenter.LocalMusicHelper.java", "BodyUseAPI": [], "Fixed commit": "1d9db72d100b544283aec465f487104304e6de5e", "Url": "https://api.github.com/repos/frendyxzc/scplayer", "Date": "2018-06-29T15:19:33Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.sbaudoin.yamllint.Linter.getProblemLevel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (intLevel != null) { this.level = ((java.lang.String) (com.github.sbaudoin.yamllint.Linter.getProblemLevel(intLevel))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/649/buggy-version/src.main.java.com.github.sbaudoin.yamllint.LintProblem.java", "BodyUseAPI": ["com.github.sbaudoin.yamllint.Linter.getProblemLevel(java.lang.Object)"], "Fixed commit": "87017bd832551227706d7470643db45dd8a0674e", "Url": "https://api.github.com/repos/sbaudoin/yamllint", "Date": "2018-06-11T12:33:58Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((privateKey) instanceof org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey) { return eu.europa.esig.dss.EncryptionAlgorithm.DSTU4145; }else if ((privateKey) instanceof java.security.interfaces.ECPrivateKey) { return eu.europa.esig.dss.EncryptionAlgorithm.ECDSA; }else { return eu.europa.esig.dss.EncryptionAlgorithm.forName(privateKey.getAlgorithm()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2885/buggy-version/dss-model.src.main.java.eu.europa.esig.dss.token.KSPrivateKeyEntry.java", "BodyUseAPI": [], "Fixed commit": "fb1f1e178b1f34ac4e834d3037ed5e0b730ba98b", "Url": "https://api.github.com/repos/javatask/dss-dstu", "Date": "2018-08-11T06:30:33Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMovementMethod) == null) return super.onTouchEvent(event);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3697/buggy-version/mongol-library.src.main.java.net.studymongolian.mongollibrary.MongolTextView.java", "BodyUseAPI": [], "Fixed commit": "7aedae69742ee4d0b93c9c49ed63feef0e5cd859", "Url": "https://api.github.com/repos/suragch/mongol-library", "Date": "2018-09-26T04:44:44Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this._owner.isUnloaded()) { this._owner.setOrientation(new_orientation); }else { this._owner.getRailLogic().onUpdateOrientation(this._owner, new_orientation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8205/buggy-version/src.main.java.com.bergerkiller.bukkit.tc.controller.components.WheelTrackerMember.java", "BodyUseAPI": ["this._owner.getRailLogic().onUpdateOrientation(com.bergerkiller.bukkit.tc.controller.MinecartMember<?>,com.bergerkiller.bukkit.common.math.Quaternion)", "com.bergerkiller.bukkit.tc.controller.MinecartMember<?>.getRailLogic()", "com.bergerkiller.bukkit.tc.controller.MinecartMember<?>.setOrientation(com.bergerkiller.bukkit.common.math.Quaternion)"], "Fixed commit": "881fb914a1910b09caf718fefab79863855a19fe", "Url": "https://api.github.com/repos/Lee0701/TrainCarts", "Date": "2018-02-17T16:32:11Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,<nulltype>,java.lang.String,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cursor.moveToFirst()) { int drugId = cursor.getInt(1); java.lang.String name = cursor.getString(2); cursor.close(); return new net.ozero.drugsreminder.DataStructures.Drug(drugId, name); }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5571/buggy-version/app.src.main.java.net.ozero.drugsreminder.DataBase.DBHelper.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "android.database.Cursor.getInt(int)", "android.database.Cursor.close()"], "Fixed commit": "f62bb81ead90194bb93cc75a467d223dd195c1ca", "Url": "https://api.github.com/repos/lexasok/DrugsReminder", "Date": "2018-08-26T14:31:46Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.shanruifeng.functions.array.ListObjectInspector.getListLength(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (leftCurrentPosition < leftArrayLength) { leftArrayElementTmp2 = leftArrayOI.getListElement(leftArray, leftPositions[leftCurrentPosition]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7095/buggy-version/src.main.java.cc.shanruifeng.functions.array.UDFArrayIntersect.java", "BodyUseAPI": ["cc.shanruifeng.functions.array.ListObjectInspector.getListElement(java.lang.Object,int)"], "Fixed commit": "c78610b0f6f3be8074d8ef0d135d517aa5dd91fa", "Url": "https://api.github.com/repos/minhoryang/hive-third-functions", "Date": "2018-07-12T05:51:40Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.shanruifeng.functions.array.ListObjectInspector.getListLength(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rightCurrentPosition < rightArrayLength) { rightArrayElementTmp2 = rightArrayOI.getListElement(rightArray, rightPositions[rightCurrentPosition]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7095/buggy-version/src.main.java.cc.shanruifeng.functions.array.UDFArrayIntersect.java", "BodyUseAPI": ["cc.shanruifeng.functions.array.ListObjectInspector.getListElement(java.lang.Object,int)"], "Fixed commit": "c78610b0f6f3be8074d8ef0d135d517aa5dd91fa", "Url": "https://api.github.com/repos/minhoryang/hive-third-functions", "Date": "2018-07-12T05:51:40Z"},
{"Line": "=>7130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uriTemplate.getScope()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4458/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.java", "BodyUseAPI": [], "Fixed commit": "94d904e5f9c71a8ffc2e21f16c9b2668033e25a9", "Url": "https://api.github.com/repos/chamilaadhi/carbon-apimgt", "Date": "2018-03-14T12:38:15Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (req != null) { javax.servlet.http.HttpServletRequestWrapper wrapper = new javax.servlet.http.HttpServletRequestWrapper(req); extraAuditData.put(\"HTTP_SERVLET_REQUEST\", wrapper); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1840/buggy-version/dev.com.ibm.ws.webcontainer.security.src.com.ibm.ws.webcontainer.security.WebAppSecurityCollaboratorImpl.java", "BodyUseAPI": [], "Fixed commit": "54bea4f26c4abb667109cc3102a12c3d0792e0d5", "Url": "https://api.github.com/repos/tjwatson/open-liberty", "Date": "2018-08-25T14:03:03Z"},
{"Line": "=>760", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._request) != null) { java.lang.String addr = this._request.getRemoteAddr(); if ((com.ibm.websphere.ras.TraceComponent.isAnyTracingEnabled()) && (com.ibm.ws.webcontainer.srt.SRTServletRequest.logger.isLoggable(java.util.logging.Level.FINE))) { com.ibm.ws.webcontainer.srt.SRTServletRequest.logger.logp(java.util.logging.Level.FINE, com.ibm.ws.webcontainer.srt.SRTServletRequest.CLASS_NAME, \"getRemoteAddr\", ((((\"this->\" + (this)) + \": \") + \" address --> \") + addr)); } return addr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1840/buggy-version/dev.com.ibm.ws.webcontainer.src.com.ibm.ws.webcontainer.srt.SRTServletRequest.java", "BodyUseAPI": [], "Fixed commit": "54bea4f26c4abb667109cc3102a12c3d0792e0d5", "Url": "https://api.github.com/repos/tjwatson/open-liberty", "Date": "2018-08-25T14:03:03Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((findViewWithTag(layerData)) == null) { notifyDataChanged(layerData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3420/buggy-version/graffitiview.src.main.java.com.sina.weibo.view.graffitiview.GraffitiView.java", "BodyUseAPI": ["com.sina.weibo.view.graffitiview.GraffitiView.notifyDataChanged(com.sina.weibo.view.graffitiview.data.GraffitiLayerData)"], "Fixed commit": "0c00a7e3cfb52602392ef7c718153e2d5c5d8a2c", "Url": "https://api.github.com/repos/acercow/WYZGraffitiBoard", "Date": "2018-05-07T02:58:13Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(primaryTorpedoStore.isEmpty())) && (!(secondaryTorpedoStore.isEmpty()))) { if ((primaryTorpedoStore.fire(primaryTorpedoStore.getTorpedoCount())) && (secondaryTorpedoStore.fire(secondaryTorpedoStore.getTorpedoCount()))) { firingSuccess = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5507/buggy-version/src.main.java.hu.bme.mit.spaceship.GT4500.java", "BodyUseAPI": ["hu.bme.mit.spaceship.TorpedoStore.fire(secondaryTorpedoStore.getTorpedoCount())", "hu.bme.mit.spaceship.TorpedoStore.getTorpedoCount()", "hu.bme.mit.spaceship.TorpedoStore.getTorpedoCount()", "hu.bme.mit.spaceship.TorpedoStore.fire(primaryTorpedoStore.getTorpedoCount())"], "Fixed commit": "978a8f156a433a685105ed4cd63f3cc31fcda5ac", "Url": "https://api.github.com/repos/Hunthomas/ivt-lab", "Date": "2018-04-20T11:05:09Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.usage.UsageStatsManager.queryUsageStats(UsageStatsManager.INTERVAL_DAILY,long,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((queryUsageStats.size()) != 0) { com.moodnetwork.database.MongoDB.getInstance().insertAppUsageData(queryUsageStats); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5425/buggy-version/Android.app.src.main.java.com.moodnetwork.service.AppUsageService.java", "BodyUseAPI": ["com.moodnetwork.database.MongoDB.getInstance().insertAppUsageData(java.util.List<android.app.usage.UsageStats>)"], "Fixed commit": "d70d365b1633f359733166f0e20577e1cade45da", "Url": "https://api.github.com/repos/Juliang0705/moodnetwork", "Date": "2018-04-18T16:16:28Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jp.tonosama.komoki.SimpleGolfScorer2.SaveDataPref.sSaveDataMap) == null) { jp.tonosama.komoki.SimpleGolfScorer2.SaveDataPref.initialize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/741/buggy-version/app.src.main.java.jp.tonosama.komoki.SimpleGolfScorer2.SaveDataPref.java", "BodyUseAPI": [], "Fixed commit": "bb368995e62be4d2b8144ac42be264af3976d899", "Url": "https://api.github.com/repos/junkmann7/SmartGolfScore", "Date": "2018-04-29T14:24:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.GINGERBREAD)) { com.github.yeriomin.yalpstore.DebugHttpClientAdapter.write(com.github.yeriomin.yalpstore.DebugHttpClientAdapter.getFileName(url, false, true), com.github.yeriomin.yalpstore.DebugHttpClientAdapter.getResponseHeaders(connection.getHeaderFields()).getBytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1969/buggy-version/app.src.main.java.com.github.yeriomin.yalpstore.DebugHttpClientAdapter.java", "BodyUseAPI": [], "Fixed commit": "e0c504d77a936bc4adc923a1e8bd10bb73b76844", "Url": "https://api.github.com/repos/yeriomin/YalpStore", "Date": "2017-12-30T19:36:20Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.SimpleCursorAdapter) (lv.getAdapter())).getCursor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (c.moveToLast()) return c.getString(c.getColumnIndex(MyContract.Stop.COLUMN_NAME)); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6796/buggy-version/app.src.main.java.com.example.nay.mhdnitra.LineActivity.java", "BodyUseAPI": ["android.database.Cursor.getString(c.getColumnIndex(MyContract.Stop.COLUMN_NAME))", "android.database.Cursor.getColumnIndex(MyContract.Stop.COLUMN_NAME)"], "Fixed commit": "d1453f44a7ba2729ffcc8ea109fce01c767580d6", "Url": "https://api.github.com/repos/romanstrazanec/MHDNitra", "Date": "2018-04-15T11:27:18Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((param.getTruncate()) == null) && ((message.getBodyType()) == (com.artofarc.esb.message.BodyType.INPUT_STREAM))) { ps.setBinaryStream(param.getPos(), message.getUncompressedInputStream()); }else { ps.setBinaryStream(param.getPos(), new java.io.ByteArrayInputStream(param.<byte[]>alignValue(message.getBodyAsByteArray(context)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5636/buggy-version/src.main.java.com.artofarc.esb.action.JDBCAction.java", "BodyUseAPI": ["com.artofarc.esb.message.ESBMessage.getUncompressedInputStream()", "java.sql.PreparedStatement.setBinaryStream(param.getPos(),java.io.ByteArrayInputStream)", "com.artofarc.esb.message.ESBMessage.getBodyAsByteArray(com.artofarc.esb.context.Context)", "com.artofarc.esb.jdbc.JDBCParameter.alignValue(message.getBodyAsByteArray(context))", "com.artofarc.esb.jdbc.JDBCParameter.getPos()", "com.artofarc.esb.jdbc.JDBCParameter.getPos()", "java.sql.PreparedStatement.setBinaryStream(param.getPos(),message.getUncompressedInputStream())"], "Fixed commit": "b76f4c98384a3565f4f1a69aa0e29c67738f41e8", "Url": "https://api.github.com/repos/karalus/esb0", "Date": "2018-06-29T20:05:31Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startPos.next()) == null) { return startPos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9503/buggy-version/src.main.java.ml.shifu.shifu.core.binning.EqualPopulationBinning.java", "BodyUseAPI": [], "Fixed commit": "a99e8aeaf189adb8015f8ef4c13e961b6eaba3d0", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2018-03-19T11:27:37Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (type == null) { type = eu.europeana.corelib.edm.utils.SchemaOrgTypeFactory.getType(proxy.getDcSubject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/790/buggy-version/corelib-storage.src.main.java.eu.europeana.corelib.edm.utils.SchemaOrgTypeFactory.java", "BodyUseAPI": [], "Fixed commit": "2b5e4649c722bb5fbc272c3a0d88ae41a515e8c4", "Url": "https://api.github.com/repos/europeana/corelib", "Date": "2018-09-10T10:43:53Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (log.getException().contains(\"com.google.gwt.core.client.JavaScriptException\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6828/buggy-version/src.main.java.org.iabako.server.controller.timer.logtrack.ErrorLogTrackController.java", "BodyUseAPI": [], "Fixed commit": "93d53ff27a609dcbccf76698a3bccd5f4312f050", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2018-08-30T14:51:14Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { java.lang.System.out.println(\"\u767b\u5f55\u6210\u529f\uff01\"); }else { java.lang.System.err.println(\"\u767b\u5f55\u5931\u8d25!\"); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/567/buggy-version/wechat.src.main.java.io.github.biezhi.wechat.Application.java", "BodyUseAPI": [], "Fixed commit": "b814f9206466b1e0327600b8e45950864420118f", "Url": "https://api.github.com/repos/Arronlong/SmartIM", "Date": "2018-05-09T03:06:33Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lang.equals(\"En\")) || (lang.equals(\"Ru\"))) { javax.servlet.http.Cookie cookie = new javax.servlet.http.Cookie(\"locale\", lang); cookie.setMaxAge((60 * 60)); response.addCookie(cookie); }else { for (javax.servlet.http.Cookie cookie : request.getCookies()) { if (cookie.getName().equals(\"locale\")) { lang = cookie.getValue(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8244/buggy-version/src.main.java.ru.itis.filters.LocalizationFilter.java", "BodyUseAPI": [], "Fixed commit": "2172ceec0f676f912308cd445881e0cb89bc026b", "Url": "https://api.github.com/repos/MatveyItis/course_2_project", "Date": "2018-10-16T07:04:47Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbOfSteps == 1) { throw new com.devmind.measuregenerator.MeasureException(\"end instant has to be higher to have more than one step\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8113/buggy-version/src.main.java.com.devmind.measuregenerator.MeasureController.java", "BodyUseAPI": [], "Fixed commit": "79dc300ddcc5fc3d29ecf0b70b16c1021ffc4005", "Url": "https://api.github.com/repos/Dev-Mind/formation-spring-measures", "Date": "2018-08-29T06:28:22Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.hadoopParUD) != null) { classDesc.hadoopParUD = new java.util.HashMap<>(this.hadoopParUD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3205/buggy-version/bundles.D-SPACE4Cloud-plugin.src.it.polimi.diceH2020.plugin.control.ClassDesc.java", "BodyUseAPI": [], "Fixed commit": "709ace4ac30275c431805143cfa9b4589ee867c8", "Url": "https://api.github.com/repos/lattuada/diceH2020-space4cloud-plugin", "Date": "2018-01-08T13:12:57Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (android.os.Build.VERSION_CODES.JELLY_BEAN)) { replyRelativeLayout.setBackgroundDrawable(shape); }else { replyRelativeLayout.setBackground(shape); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9103/buggy-version/mobicomkitui.src.main.java.com.applozic.mobicomkit.uiwidgets.conversation.adapter.DetailedConversationAdapter.java", "BodyUseAPI": [], "Fixed commit": "7342268f3221b899b452980ec9a4ed01da620bff", "Url": "https://api.github.com/repos/AppLozic/Applozic-Android-SDK", "Date": "2018-01-10T06:51:37Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((channel) != null) && (Channel.GroupType.OPEN.getValue().equals(channel.getType()))) { messageEditText.setLongClickable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9103/buggy-version/mobicomkitui.src.main.java.com.applozic.mobicomkit.uiwidgets.conversation.fragment.MobiComConversationFragment.java", "BodyUseAPI": [], "Fixed commit": "7342268f3221b899b452980ec9a4ed01da620bff", "Url": "https://api.github.com/repos/AppLozic/Applozic-Android-SDK", "Date": "2018-01-10T06:51:37Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stone.Environment.Symbols.get(name())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (loc == null) throw new stone.exception.StoneException((\"undefined name: \" + (name())), this); else { nest = loc.nest; index = loc.index; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/165/buggy-version/optimize.EnvOptimizer.java", "BodyUseAPI": [], "Fixed commit": "e0d7ec28767c494ae5fa5617a8e94b612070745b", "Url": "https://api.github.com/repos/liPATHng9194/stone", "Date": "2018-08-22T10:38:45Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x < 1) || (x > 10)) || (y < 'A')) || (y > 'J')) { rezz.setResult(AtackStatus.INVALID); return rezz; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1306/buggy-version/src.main.java.cs361.battleships.models.Board.java", "BodyUseAPI": [], "Fixed commit": "d6ca91c089b1f3f5fbf011995b6a9b865e7d848e", "Url": "https://api.github.com/repos/cs361fall2018/project-team-18", "Date": "2018-10-12T19:06:15Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (viewId == (R.id.playButton)) { com.daimajia.androidanimations.library.YoYo.with(Techniques.Tada).duration(700).playOn(findViewById(R.id.playButton)); android.content.Intent playtrack = new android.content.Intent(this, com.example.android.musicalstructureapp.Activities.NowPlayingActivity.class); startActivity(playtrack); }else if (viewId == (R.id.optionMenuButton)) { android.widget.Toast.makeText(this, \"Options button clicked\", Toast.LENGTH_SHORT).show(); }else { android.content.Intent playtrack = new android.content.Intent(this, com.example.android.musicalstructureapp.Activities.NowPlayingActivity.class); startActivity(playtrack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8518/buggy-version/app.src.main.java.com.example.android.musicalstructureapp.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "daf9f6ac8b14020d5d8cc88a40806ea1dba8038b", "Url": "https://api.github.com/repos/baiden/Musical-Structure-App", "Date": "2018-09-06T11:28:33Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dayOfWeek == (java.util.Calendar.SATURDAY)) { c.add(java.util.Calendar.DATE, (-1)); }else if (dayOfWeek == (java.util.Calendar.SUNDAY)) { c.add(java.util.Calendar.DATE, (-2)); }else { c.add(java.util.Calendar.DATE, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4471/buggy-version/src.main.java.nse.skbh.springboot.logic.Utils.java", "BodyUseAPI": [], "Fixed commit": "bfc9f06af726b912a53c7de11497d628270acda0", "Url": "https://api.github.com/repos/xorasysgen/Nse-OI-Scanner", "Date": "2018-05-23T05:17:18Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(\"dog.txt\").exists())) { Board.printHelp(); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2436/buggy-version/Board.java", "BodyUseAPI": [], "Fixed commit": "b8f3a92607095f1107b777633bafef8297252136", "Url": "https://api.github.com/repos/jason-tung/finalProject", "Date": "2018-01-19T10:18:02Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(episodeShow.getString(com.techpearl.tvguide.JSONUtils.KEY_EPISODE_SHOW_IMAGE).equals(\"null\"))) { java.lang.String episodeShowImage = episodeShow.getJSONObject(com.techpearl.tvguide.JSONUtils.KEY_EPISODE_SHOW_IMAGE).getString(\"medium\"); episodesContentValuesArray[i].put(ScheduleContract.ScheduleEntry.COLUMN_IMAGE, episodeShowImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1004/buggy-version/app.src.main.java.com.techpearl.tvguide.JSONUtils.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "episodeShow.getJSONObject(com.techpearl.tvguide.JSONUtils.KEY_EPISODE_SHOW_IMAGE).getString(java.lang.String)"], "Fixed commit": "540fbdfef1c5b0b215467e7d12f60930011153b4", "Url": "https://api.github.com/repos/nourtaweel/tv_guide", "Date": "2018-02-09T14:36:59Z"},
{"Line": "=>1414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(timerLabel.isTimerRunning())) { selectedRowForTimer = j; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5970/buggy-version/src.WisdomInWords.wTeacher.java", "BodyUseAPI": [], "Fixed commit": "027521cc2972c1f523960466fab1709d484e79fd", "Url": "https://api.github.com/repos/deLimes/Wisdom-in-words-swing-", "Date": "2018-03-06T10:37:42Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.exasol.hadoop.scriptclasses.ImportHCatTable.getParameter(java.util.Map<java.lang.String, java.lang.String>,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (showSql.equalsIgnoreCase(\"true\")) { return ((\"SELECT \" + \"'\") + (sql.replace(\"'\", \"''\"))) + \"' AS GENERATED_SQL\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9080/buggy-version/hadoop-etl-common.src.main.java.com.exasol.hadoop.scriptclasses.ImportHCatTable.java", "BodyUseAPI": [], "Fixed commit": "894b9db84d7c1e7c3b681ab945cdcad8c3c00b92", "Url": "https://api.github.com/repos/andrehacker/hadoop-etl-udfs", "Date": "2018-02-26T08:44:23Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newAmountRabbits > (maxRabbits)) { javax.swing.JOptionPane.showMessageDialog(null, ((\"Error: Too many rabbits. Please select a value less than: \" + (maxRabbits)) + \". Value unchanged.\"), \"Warning: Rabbit Overload\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }else amountRabbits = newAmountRabbits;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6184/buggy-version/gassner-honigmann-in.src.RabbitsGrassSimulationModel.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Fixed commit": "cf51530670782aa6e066990aacf78fe871b6e1cf", "Url": "https://api.github.com/repos/shonigmann/TastySandwich", "Date": "2018-09-27T12:36:21Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchange.getRequest().getCookies().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cookies == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6457/buggy-version/spring-cloud-gateway-core.src.main.java.org.springframework.cloud.gateway.handler.predicate.CookieRoutePredicateFactory.java", "BodyUseAPI": [], "Fixed commit": "458f1e69c5c396fdf7e72c0d598642cdecae3fda", "Url": "https://api.github.com/repos/bijukunjummen/spring-cloud-gateway", "Date": "2018-03-15T20:35:22Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (rows)) { page.setRows(rows.stream().map(mapper).collect(java.util.stream.Collectors.toList())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6602/buggy-version/src.main.java.io.github.biezhi.anima.page.Page.java", "BodyUseAPI": [], "Fixed commit": "b663030839f5232b65a8de896d0ec41beda5875f", "Url": "https://api.github.com/repos/biezhi/anima", "Date": "2018-06-15T16:07:16Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (rows)) { this.rows = rows.stream().peek(consumer).collect(java.util.stream.Collectors.toList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6602/buggy-version/src.main.java.io.github.biezhi.anima.page.Page.java", "BodyUseAPI": [], "Fixed commit": "b663030839f5232b65a8de896d0ec41beda5875f", "Url": "https://api.github.com/repos/biezhi/anima", "Date": "2018-06-15T16:07:16Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((host) instanceof net.minecraft.entity.player.EntityPlayerMP) { net.minecraft.entity.player.EntityPlayerMP player = ((net.minecraft.entity.player.EntityPlayerMP) (host)); if ((player.connection) != null) { TFPacketHandler.CHANNEL.sendTo(message, player); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9595/buggy-version/src.main.java.twilightforest.capabilities.shield.ShieldCapabilityHandler.java", "BodyUseAPI": [], "Fixed commit": "b7b4730f9d327758f3a0a93135267e44228762da", "Url": "https://api.github.com/repos/TeamTwilight/twilightforest", "Date": "2018-08-05T15:53:46Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDefaultStartState) { setDefaultStartStateName(stateName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7489/buggy-version/src.main.java.ca.yakcam.fsm.StateMap.java", "BodyUseAPI": [], "Fixed commit": "9412e4b091ea5a71ff8c04f090bae903b93d64e8", "Url": "https://api.github.com/repos/yakcamnevets/finite-state-machine", "Date": "2018-10-04T09:58:30Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathToSelect.getUseFitted()) pathToSelect = pathToSelect.fitted;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/781/buggy-version/src.main.java.tracing.PathAndFillManager.java", "BodyUseAPI": [], "Fixed commit": "ff8dc10ecc02699a22379a74b5833a58044b7fa6", "Url": "https://api.github.com/repos/tferr/Simple_Neurite_Tracer", "Date": "2018-01-16T04:01:17Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.edu.ruc.iir.pard.executor.connector.LoadTask.getPaths()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (loadPaths.isEmpty()) { logger.info(\"No path found for execution\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4160/buggy-version/pard-main.src.main.java.cn.edu.ruc.iir.pard.scheduler.TaskScheduler.java", "BodyUseAPI": [], "Fixed commit": "413ef9f884b8f2a243d1b1754d71182f3b9cea41", "Url": "https://api.github.com/repos/dbiir/pard", "Date": "2018-01-12T10:09:05Z"},
{"Line": "=>2187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (checkOtp == null) { response.sendRedirect(\"updatePassword.jsp?action=OtpExpired\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7107/buggy-version/src.com.daniel.util.control.Control.java", "BodyUseAPI": [], "Fixed commit": "4e8ba017fddba313a28266df32e76daf407296b4", "Url": "https://api.github.com/repos/kapilthakur1496/PrismVMS", "Date": "2018-02-23T10:18:16Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (action.equals(\"mentorVmsExperience\")) { mentorVmsExperience(request, response); }else if (action.equals(\"addMentorVmsExperienceComment\")) { addMentorVmsExperienceComment(request, response); }else if (action.equals(\"gradeMonthlyReport\")) { gradeMonthlyReport(request, response); }else if (action.equals(\"mentorForgotPassword\")) { mentorForgotPassword(request, response); }else if (action.equals(\"forgotOtpVerification\")) { forgotOtpVerification(request, response); }else if (action.equals(\"volunteerForgotPassword\")) { volunteerForgotPassword(request, response); }else if (action.equals(\"volunteerForgotOtpVerification\")) { volunteerForgotOtpVerification(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7107/buggy-version/src.com.daniel.util.control.Control.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "4e8ba017fddba313a28266df32e76daf407296b4", "Url": "https://api.github.com/repos/kapilthakur1496/PrismVMS", "Date": "2018-02-23T10:18:16Z"},
{"Line": "=>7044", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (checkOtp == null) { response.sendRedirect(\"mentorForgotPassword?action=OtpExpired\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7107/buggy-version/src.com.daniel.util.control.Control.java", "BodyUseAPI": [], "Fixed commit": "4e8ba017fddba313a28266df32e76daf407296b4", "Url": "https://api.github.com/repos/kapilthakur1496/PrismVMS", "Date": "2018-02-23T10:18:16Z"},
{"Line": "=>1282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSc.equals(com.android.internal.telephony.imsphone.ImsPhoneMmiCode.SC_CLIR)) { mPhone.saveClirSetting(CommandsInterface.CLIR_INVOCATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9249/buggy-version/src.java.com.android.internal.telephony.imsphone.ImsPhoneMmiCode.java", "BodyUseAPI": [], "Fixed commit": "02f7123e2277f86ab34e81b5590e7b329f3b3bcb", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2018-04-09T18:03:21Z"},
{"Line": "=>1290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSc.equals(com.android.internal.telephony.imsphone.ImsPhoneMmiCode.SC_CLIR)) { mPhone.saveClirSetting(CommandsInterface.CLIR_SUPPRESSION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9249/buggy-version/src.java.com.android.internal.telephony.imsphone.ImsPhoneMmiCode.java", "BodyUseAPI": [], "Fixed commit": "02f7123e2277f86ab34e81b5590e7b329f3b3bcb", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2018-04-09T18:03:21Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.System.currentTimeMillis()) - (lastNoise)) > 10000) { robot.executePlaySound(new geist.re.mindlib.tasks.PlaySoundTask(prompts[r.nextInt(prompts.length)])); lastNoise += 70000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5256/buggy-version/app.src.main.java.geist.re.mindroid.RobotControlSoundDemo.java", "BodyUseAPI": [], "Fixed commit": "e95d41c8a04084dcf35353fc64fa632ad47d3826", "Url": "https://api.github.com/repos/sbobek/mindroid", "Date": "2018-10-12T10:55:11Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (time != null) { try { date = new java.util.Date(java.lang.Long.parseLong(time)); } catch (java.lang.Exception e) { e.printStackTrace(); } }else { date = new java.util.Date(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6995/buggy-version/MyAlbum.app.src.main.java.com.houyidg.album.utils.AlbumUtils.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "413340c8b010ee52b2bf62a53be6010d7bd993ea", "Url": "https://api.github.com/repos/houyidg/zuiideal", "Date": "2018-09-21T13:50:59Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columnar.BlockManager.DYNAMIC_PRIORITY) { if (balancingPeriod > (lastProcessingPeriod)) { period += lastProcessingPeriod; }else { period += balancingPeriod; } }else { period += 20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4387/buggy-version/core.src.main.java.io.AsyncIOWorker.java", "BodyUseAPI": [], "Fixed commit": "9c1d84d28b07e7cfa9f8f40f94fb830ee78ea63f", "Url": "https://api.github.com/repos/lwhay/ncfile", "Date": "2018-08-14T13:00:54Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (columnar.BlockManager.DYNAMIC_PRIORITY) { if (balancingPeriod > (lastProcessingPeriod)) { period = ((int) (lastProcessingPeriod)); }else { period = balancingPeriod; } lastProcessingPeriod = thisProcessingPeriod; }else { period = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4387/buggy-version/core.src.main.java.io.AsyncIOWorker.java", "BodyUseAPI": [], "Fixed commit": "9c1d84d28b07e7cfa9f8f40f94fb830ee78ea63f", "Url": "https://api.github.com/repos/lwhay/ncfile", "Date": "2018-08-14T13:00:54Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.Item.getItemFromBlock(net.minecraft.block.Block)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item == (net.minecraft.init.Items.AIR)) || (!(item.getHasSubtypes()))) { return block.getLocalizedName(); }else { return new net.minecraft.item.ItemStack(item, 1, block.getMetaFromState(state)).getDisplayName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7507/buggy-version/src.main.java.mcjty.rftools.items.builder.ShapeCardType.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.getDisplayName()"], "Fixed commit": "64a7ad075b342cf7b8658a3366ebe29f606b3ac1", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2018-02-05T01:41:41Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clazz.equals(java.math.BigInteger.class)) { java.math.BigInteger bigIntegerValue = java.math.BigInteger.valueOf(((java.lang.Number) (val)).longValue()); field.set(entity, bigIntegerValue); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2769/buggy-version/dal-client.src.main.java.com.ctrip.platform.dal.dao.helper.DalDefaultJpaMapper.java", "BodyUseAPI": [], "Fixed commit": "aaa181f8751673ad5b956a0d7bc23c6bf8d14600", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2018-04-28T10:24:16Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vSource.getEdgeTo(vDest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (oEdge.isPresent()) { undoStack.push(oEdge.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6884/buggy-version/src.edu.deanza.cis22c.w2018.team1.Main.java", "BodyUseAPI": ["undoStack.push(oEdge.get())", "oEdge.get()"], "Fixed commit": "cd9b98b7fd8dbe1d5b46a7731359506eec05ba06", "Url": "https://api.github.com/repos/CIS22C-W-2018-Team-1/Team-Project", "Date": "2018-03-22T07:05:50Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (undoStack.isEmpty()) { java.lang.System.out.println(\"No removals to undo\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6884/buggy-version/src.edu.deanza.cis22c.w2018.team1.Main.java", "BodyUseAPI": [], "Fixed commit": "cd9b98b7fd8dbe1d5b46a7731359506eec05ba06", "Url": "https://api.github.com/repos/CIS22C-W-2018-Team-1/Team-Project", "Date": "2018-03-22T07:05:50Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (blockedByList != null) { for (java.lang.String s : blockedByList.values()) { for (com.nyc.polymerse.User u : userList.toArray(new com.nyc.polymerse.User[userList.size()])) { if (s.equals(u.getuID())) { userList.remove(u); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4047/buggy-version/app.src.main.java.com.nyc.polymerse.fragments.UserResultsFragment.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.values()"], "Fixed commit": "8b86aaaeaa283e37b5237dae07d75a6cb0dca298", "Url": "https://api.github.com/repos/Waynekellman/Capstone_BMWS", "Date": "2018-03-27T23:35:37Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.activity.CropActivity.findPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (points != null) { mSelectionImageView.setPoints(points); }else { com.owncloud.android.lib.common.utils.Log_OC.d(com.owncloud.android.ui.activity.CropActivity.TAG, getResources().getString(R.string.no_contour_found)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4970/buggy-version/src.com.owncloud.android.ui.activity.CropActivity.java", "BodyUseAPI": ["com.owncloud.android.ui.QuadrilateralSelectionImageView.setPoints(java.util.List<android.graphics.PointF>)"], "Fixed commit": "7f6e330bbc80ed2a27379f3a74b2e08daf92c1b1", "Url": "https://api.github.com/repos/sd1998/android", "Date": "2018-03-12T06:43:04Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (interest == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5342/buggy-version/ccd-adapter.src.main.java.uk.gov.hmcts.cmc.ccd.mapper.InterestMapper.java", "BodyUseAPI": [], "Fixed commit": "651194f69ed1aca80278960032dc3c1c54607b31", "Url": "https://api.github.com/repos/hmcts/cmc-claim-store", "Date": "2018-01-23T16:02:54Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (payment == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5342/buggy-version/ccd-adapter.src.main.java.uk.gov.hmcts.cmc.ccd.mapper.PaymentMapper.java", "BodyUseAPI": [], "Fixed commit": "651194f69ed1aca80278960032dc3c1c54607b31", "Url": "https://api.github.com/repos/hmcts/cmc-claim-store", "Date": "2018-01-23T16:02:54Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((majiangGame.getJu()) != null) { juResult = majiangGame.getJu().getJuResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7391/buggy-version/src.main.java.com.anbang.qipai.wenzhoumajiang.cqrs.c.domain.MajiangGameValueObject.java", "BodyUseAPI": [], "Fixed commit": "76b53e04a32093efa05d6bafe73c744efacae2c1", "Url": "https://api.github.com/repos/hangzhouanbang/qipai_wenzhoumajiang", "Date": "2018-09-20T09:37:24Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elementOnTrue) != null) { elementOnTrue.run(); }else { throw new io.github.slupik.schemablock.model.ui.exception.NextElementNotFound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9228/buggy-version/Model.src.io.github.slupik.schemablock.model.ui.implementation.ConditionBlock.java", "BodyUseAPI": [], "Fixed commit": "3457eeb0769c06e88d2dc3a21b40cfd1dafff62f", "Url": "https://api.github.com/repos/Slupik/SchemaBlock", "Date": "2018-10-26T19:29:59Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(user.isBot())) { Variables.guildIndex.get(channel.getGuild()).userIndex.get(user).lastMessage = message; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2235/buggy-version/src.caris.framework.reactions.ReactionHear.java", "BodyUseAPI": ["Variables.guildIndex.get(channel.getGuild()).userIndex.get(sx.blah.discord.handle.obj.IUser)"], "Fixed commit": "9f47fb1a740232def88f43d3fdbea13065761f78", "Url": "https://api.github.com/repos/InfinityPhase/CARIS", "Date": "2018-10-10T22:29:53Z"},
{"Line": "=>4339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (optionNames.containsKey(eid)) { java.lang.System.out.println(java.lang.String.format(\"duplicate %d %s\", eid, oscg.model.Effect.getName(eid))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2146/buggy-version/src.oscg.model.creatures.Spells.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int,oscg.model.Effect.getName(eid))", "java.io.PrintStream.println(java.lang.String)", "oscg.model.Effect.getName(int)"], "Fixed commit": "8fdc2dff0b77b2c5d55e9a0479e577ffe3934761", "Url": "https://api.github.com/repos/arkillam/oscg", "Date": "2018-01-12T22:34:49Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((roll + (rehearsalBonus)) > (location.currentScene.budget)) { if (onCard) { changeFame(2); }else { changeFame(1); changeMoney(1); } location.advanceScene(); }else if (!onCard) { changeMoney(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7770/buggy-version/Player.java", "BodyUseAPI": ["Room.advanceScene()"], "Fixed commit": "554db1c4eb81cf0c72b0090e6af0397a1a479f1d", "Url": "https://api.github.com/repos/pickern/deadwood-usa", "Date": "2018-05-19T01:46:28Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t == (com.github.redhatqe.polarizer.reporter.importer.testcase.Testcases.class)) { xsd = com.github.redhatqe.polarizer.reporter.jaxb.JAXBReporter.class.getClassLoader().getResource(\"testcase_importer/testcase-importer.xsd\"); }else throw new com.github.redhatqe.polarizer.reporter.jaxb.XSDValidationError(java.lang.String.format(\"Could not find schema for class %s\", t.getName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5463/buggy-version/src.main.java.com.github.redhatqe.polarizer.reporter.jaxb.JAXBReporter.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.Class<?>.getName()"], "Fixed commit": "46dec85ed2eb62f1df0e1cab140ef3d454083613", "Url": "https://api.github.com/repos/rarebreed/reporter", "Date": "2018-01-22T11:19:34Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSocketConnection) != null) mSocketConnection.socketClose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1039/buggy-version/app.src.main.java.computeythings.garagemonitor.ui.UIFragment.java", "BodyUseAPI": [], "Fixed commit": "f9dbbca6f666fd3b5e71cdce1c1264d3de1a8fec", "Url": "https://api.github.com/repos/computeythings/PiOpener-Android", "Date": "2018-02-24T18:52:33Z"},
{"Line": "=>767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.LinearLayout.findViewWithTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (existingLastView != null) { mColumnLayout.removeView(existingLastView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6654/buggy-version/library.src.main.java.com.woxthebox.draglistview.BoardView.java", "BodyUseAPI": ["android.widget.LinearLayout.removeView(android.view.View)"], "Fixed commit": "e6f6e7a41d63b3af984a988e8c7eb19b6031cc08", "Url": "https://api.github.com/repos/sedler/DragListView", "Date": "2018-04-04T09:53:41Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<ubic.gemma.model.expression.arrayDesign.ArrayDesign, java.util.Collection<ubic.gemma.model.expression.bioAssay.BioAssay>>.get(ubic.gemma.model.expression.arrayDesign.ArrayDesign)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((bioAssays == null) || (bioAssays.isEmpty())) throw new java.lang.IllegalStateException((((\"Something went wrong, no bioAssays matched platform=\" + targetPlatform) + \" for original platform = \") + originalPlatform));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4427/buggy-version/gemma-core.src.main.java.ubic.gemma.core.loader.expression.DataUpdater.java", "BodyUseAPI": [], "Fixed commit": "7c4fb71a35808b6301bb95ce1323d8ebc8df4bde", "Url": "https://api.github.com/repos/PavlidisLab/Gemma", "Date": "2018-04-15T20:19:42Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (body.containsKey(\"birthdate\")) { java.lang.String bd = body.get(\"birthdate\").toString(); jdbcTemplate.update(((((\"UPDATE storage SET birthdate='\" + bd) + \"' WHERE record_id='\") + newRecordId) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5971/buggy-version/passkeep.src.backend.main.java.cs252.passkeep.api.ContentController.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "b28e277ff60be34c8343228abe78102f45136365", "Url": "https://api.github.com/repos/jmieczni/passkeeper", "Date": "2018-04-22T20:58:57Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sonicle.webtop.drm.DrmManager.getTimetableSetting()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ts != null) { if (ts.getRequestsPermitsNotRemunered()) types.add(createLeaveRequestJsSimple(OLeaveRequestType.UNPAID_LEAVE)); if (ts.getRequestsPermitsMedicalVisits()) types.add(createLeaveRequestJsSimple(OLeaveRequestType.MEDICAL_VISIT)); if (ts.getRequestsPermitsContractuals()) types.add(createLeaveRequestJsSimple(OLeaveRequestType.CONTRACTUAL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9688/buggy-version/src.main.java.com.sonicle.webtop.drm.Service.java", "BodyUseAPI": ["com.sonicle.webtop.drm.model.TimetableSetting.getRequestsPermitsContractuals()", "com.sonicle.webtop.drm.model.TimetableSetting.getRequestsPermitsMedicalVisits()", "com.sonicle.webtop.drm.model.TimetableSetting.getRequestsPermitsNotRemunered()"], "Fixed commit": "22a53b60a4f56360476e2d7a1012b170a20d64e1", "Url": "https://api.github.com/repos/sonicle-webtop/webtop-drm", "Date": "2018-05-24T13:46:20Z"},
{"Line": "=>668", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((versionDefinitions) != null) { versionDefinitions.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9041/buggy-version/ambari-server.src.main.java.org.apache.ambari.server.api.services.AmbariMetaInfo.java", "BodyUseAPI": [], "Fixed commit": "4cfd7a9815afea337fd757bd7d12b2d3e9eb1164", "Url": "https://api.github.com/repos/mradha25/ambari", "Date": "2017-08-30T21:52:54Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ibatis.cache.decorators.BlockingCache.getLockForKey(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lock.isHeldByCurrentThread()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1347/buggy-version/src.main.java.org.apache.ibatis.cache.decorators.BlockingCache.java", "BodyUseAPI": [], "Fixed commit": "94bf8e95de3d9936d0c8381e0631bf854d494ae6", "Url": "https://api.github.com/repos/kezhenxu94/mybatis-3", "Date": "2018-09-17T15:41:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.mozilla.focus.Inject.isUnderEspressoTest())) { mLottieAnimationView.playAnimation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4912/buggy-version/app.src.main.java.org.mozilla.focus.fragment.ScreenCaptureDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "5faa4d04f9467d3b8a72369bb87714c1a637f710", "Url": "https://api.github.com/repos/mozilla-tw/Rocket", "Date": "2018-08-17T06:23:18Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.samng.myreads.api.EntityManager.GetReadingListElementIfUserOwnsIt(com.google.cloud.datastore.Datastore,long,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(rleEntity.listIds.contains(readingListEntity.id))) { rleEntity.listIds.add(readingListEntity.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1620/buggy-version/myreads-api.src.main.java.me.samng.myreads.api.EntityManager.java", "BodyUseAPI": ["rleEntity.listIds.add(readingListEntity.id)"], "Fixed commit": "1b80406386db65aab2e08133eea86bcfa5f8acce", "Url": "https://api.github.com/repos/samng96/myreads", "Date": "2018-05-29T05:29:22Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(readingListEntity.readingListElementIds.contains(rleId))) { readingListEntity.readingListElementIds.add(rleId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1620/buggy-version/myreads-api.src.main.java.me.samng.myreads.api.EntityManager.java", "BodyUseAPI": ["readingListEntity.readingListElementIds.add(long)"], "Fixed commit": "1b80406386db65aab2e08133eea86bcfa5f8acce", "Url": "https://api.github.com/repos/samng96/myreads", "Date": "2018-05-29T05:29:22Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (raw instanceof java.lang.Double) { value = ((java.lang.Double) (raw)); }else if (raw instanceof java.lang.Integer) { value = ((java.lang.Integer) (raw)).doubleValue(); }else if (raw instanceof java.lang.Float) { value = ((java.lang.Float) (raw)).doubleValue(); }else { try { value = java.lang.Double.parseDouble(raw.toString()); } catch (java.lang.Exception e) { ml.shifu.shifu.core.Normalizer.log.debug(((\"Not decimal format \" + raw) + \", using default!\")); value = ml.shifu.shifu.core.Normalizer.defaultMissingValue(config); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/236/buggy-version/src.main.java.ml.shifu.shifu.core.Normalizer.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)", "java.lang.Object.toString()", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "28e2381328d37910ad78fbf0454272fd5fca2712", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2018-10-15T02:50:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ncadvanced2018.groupeone.parent.service.EmailService.sendEmail(ncadvanced2018.groupeone.parent.model.entity.User,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSent) { user.setPassword(newEncodedPassword); userService.update(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1133/buggy-version/backend.src.main.java.ncadvanced2018.groupeone.parent.service.impl.PasswordRecoveryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a63f2bcb82473c398189962d9ddb1ffcfac39250", "Url": "https://api.github.com/repos/Semchik/NCA2018groupOne", "Date": "2018-03-16T19:13:18Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needsPrepare) { return false; }else { return (1 == attempt) && (((586 == (e.getErrorCode())) || (8179 == (e.getErrorCode()))) || (99586 == (e.getErrorCode()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3140/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.java", "BodyUseAPI": [], "Fixed commit": "e8f3f284d0da07eda17b68e6f4258a8197bf507e", "Url": "https://api.github.com/repos/cheenamalhotra/mssql-jdbc", "Date": "2018-01-31T23:28:36Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((skipStartsWithName != null) && (fn.getName().startsWith(skipStartsWithName))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7291/buggy-version/utilities.src.main.java.gov.nist.toolkit.utilities.io.Io.java", "BodyUseAPI": [], "Fixed commit": "81eecf2965aa8fe139b754ebafe2be6ab61e52ee", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2018-01-06T01:14:16Z"},
{"Line": "=>1340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((funCall.getArgs().get(0)) instanceof com.rockwellcollins.atc.resolute.validation.SetType) { com.rockwellcollins.atc.resolute.validation.SetType set = ((com.rockwellcollins.atc.resolute.validation.SetType) (getExprType(funCall.getArgs().get(0)))); return set.elementType; }else { return BaseType.FAIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4584/buggy-version/fm-workbench.resolute.com.rockwellcollins.atc.resolute.src.com.rockwellcollins.atc.resolute.validation.ResoluteJavaValidator.java", "BodyUseAPI": ["com.rockwellcollins.atc.resolute.resolute.BuiltInFnCallExpr.getArgs()", "funCall.getArgs().get(int)", "com.rockwellcollins.atc.resolute.validation.ResoluteJavaValidator.getExprType(funCall.getArgs().get(0))"], "Fixed commit": "4a3164f75f3735364faf7e0bb8e3fa297643d07a", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2018-03-13T11:32:41Z"},
{"Line": "=>1109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rockwellcollins.atc.resolute.validation.ResoluteJavaValidator.getExprType(((com.rockwellcollins.atc.resolute.resolute.QuantArg) (arg)).getExpr())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argType instanceof com.rockwellcollins.atc.resolute.validation.ListType) { return ((com.rockwellcollins.atc.resolute.validation.ListType) (argType)).elementType; }else if (argType instanceof com.rockwellcollins.atc.resolute.validation.SetType) { return ((com.rockwellcollins.atc.resolute.validation.SetType) (argType)).elementType; }else { return argType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4584/buggy-version/fm-workbench.resolute.com.rockwellcollins.atc.resolute.src.com.rockwellcollins.atc.resolute.validation.ResoluteJavaValidator.java", "BodyUseAPI": [], "Fixed commit": "4a3164f75f3735364faf7e0bb8e3fa297643d07a", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2018-03-13T11:32:41Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token == null) || (org.apache.commons.lang3.StringUtils.isBlank(((java.lang.String) (token))))) { return \"redirect:/login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5849/buggy-version/src.main.java.tone.analyzer.web.UserAccountControllerWeb.java", "BodyUseAPI": [], "Fixed commit": "756f36a4354e13bc6b3e9457e13cb8a2a95d6535", "Url": "https://api.github.com/repos/fuadomar/chat-analyzer", "Date": "2018-03-20T13:13:16Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tone.analyzer.web.IEmailInvitationService.findByToken(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (anonymousInvitationToken == null) { return \"redirect:/login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5849/buggy-version/src.main.java.tone.analyzer.web.UserAccountControllerWeb.java", "BodyUseAPI": [], "Fixed commit": "756f36a4354e13bc6b3e9457e13cb8a2a95d6535", "Url": "https://api.github.com/repos/fuadomar/chat-analyzer", "Date": "2018-03-20T13:13:16Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token == null) || (org.apache.commons.lang3.StringUtils.isBlank(((java.lang.String) (token))))) { return \"redirect:/login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5849/buggy-version/src.main.java.tone.analyzer.web.UserAccountControllerWeb.java", "BodyUseAPI": [], "Fixed commit": "756f36a4354e13bc6b3e9457e13cb8a2a95d6535", "Url": "https://api.github.com/repos/fuadomar/chat-analyzer", "Date": "2018-03-20T13:13:16Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (browse.get_ValueAsBoolean(\"IsAllowSort\")) super.sort(modelColumnIndex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/820/buggy-version/client.src.org.eevolution.grid.VBrowserTable.java", "BodyUseAPI": [], "Fixed commit": "f99ee6ea3bb78ce3a68e9b6d4fa0641e444dd773", "Url": "https://api.github.com/repos/SusanneCalderon/adempiereSusanne", "Date": "2018-03-27T21:03:46Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerID == (myPlayerID)) { gameClient.menu.setBallStatus(\"You are currently holding the ball!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9761/buggy-version/src.Network.GameClient.GameClient.java", "BodyUseAPI": [], "Fixed commit": "27e8dd158e7ebfaa33c542d938ad05685caf56de", "Url": "https://api.github.com/repos/QuentinDel/NVE-Project", "Date": "2018-01-12T12:32:48Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exp1 instanceof gov.nasa.jpf.symbc.numeric.solvers.IntExpr) && (exp2 instanceof gov.nasa.jpf.symbc.numeric.solvers.IntExpr)) { return ctx.mkAdd(((gov.nasa.jpf.symbc.numeric.solvers.IntExpr) (exp1)), ((gov.nasa.jpf.symbc.numeric.solvers.IntExpr) (exp2))); }else if ((exp1 instanceof gov.nasa.jpf.symbc.numeric.solvers.RealExpr) && (exp2 instanceof gov.nasa.jpf.symbc.numeric.solvers.RealExpr)) { return ctx.mkAdd(((gov.nasa.jpf.symbc.numeric.solvers.RealExpr) (exp1)), ((gov.nasa.jpf.symbc.numeric.solvers.RealExpr) (exp2))); }else { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9896/buggy-version/src.main.gov.nasa.jpf.symbc.numeric.solvers.ProblemZ3BitVector.java", "BodyUseAPI": [], "Fixed commit": "03ae9e2f396c38b6c939824f19716c8c6efdd84b", "Url": "https://api.github.com/repos/SymbolicPathFinder/jpf-symbc", "Date": "2018-10-19T16:23:35Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sm.getPriority()) == (PRORITY_NO_RESUME_PRE)) { setPlayerState2(com.agpc.PATHoteng4gbd.eventhub.streamplayer.PLAYER_PAUSED_BY_USER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6482/buggy-version/app.src.main.java.com.agpc.PATHoteng4gbd.eventhub.streamplayer.StreamPlayerService.java", "BodyUseAPI": [], "Fixed commit": "036cb5bff4f5753f796aecdf782a36ae95eb88ee", "Url": "https://api.github.com/repos/koffuxu/refer-wutong-blr", "Date": "2018-07-02T05:45:06Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hasResults) { java.lang.String thumbnailUrl = imageSearchResult.get(\"items\").get(0).get(\"image\").get(\"thumbnailLink\").asText(); googleThumbnail = ca.mcgill.sus.screensaver.Util.readImage(javax.ws.rs.client.ClientBuilder.newClient().target(thumbnailUrl).request().get(byte[].class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8032/buggy-version/src.main.java.ca.mcgill.sus.screensaver.DataFetch.java", "BodyUseAPI": [], "Fixed commit": "11e742b7c80b68e94b62cba825812aba4ed16661", "Url": "https://api.github.com/repos/ctf/TEPID-Screensaver", "Date": "2018-08-28T01:43:40Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(CoordELFunctions.INSTANCE_SEPARATOR)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uriList[i].isEmpty()) { log.error(((((\"[\" + (coordAction.getId())) + \"]::checkListOfPaths::skipping empty path in: [\") + (nonExistList.toString())) + \" ]\\n\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3582/buggy-version/core.src.main.java.org.apache.oozie.coord.input.dependency.CoordOldInputDependency.java", "BodyUseAPI": [], "Fixed commit": "e51b4d42cba9893504c4937073fe1e573c003d17", "Url": "https://api.github.com/repos/bigthinka/oozie", "Date": "2018-10-26T09:09:56Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["csc445.groupc.distauction.Paxos.Messages.PaxosMessage.fromByteArray(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (message != null) { queue.put(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9675/buggy-version/src.main.java.csc445.groupc.distauction.Communication.MessageReceiving.java", "BodyUseAPI": ["java.util.concurrent.LinkedBlockingQueue<csc445.groupc.distauction.Paxos.Messages.Message>.put(csc445.groupc.distauction.Paxos.Messages.Message)"], "Fixed commit": "e6922b1476c60e4db98f063aba7abe96a84ca57d", "Url": "https://api.github.com/repos/bohdan91/distributed-auction-game", "Date": "2018-05-05T19:15:42Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (oldValue != null) { if (oldValue.getClass().getName().equals(\"[B\")) { oldValue = transByteArrToStr(((byte[]) (oldValue))); }else { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1327/buggy-version/src.main.java.com.cozystay.datasource.BinLogEventParser.java", "BodyUseAPI": ["java.io.Serializable.getClass()", "java.lang.String.equals(java.lang.String)", "java.lang.Class<? extends java.io.Serializable>.getName()"], "Fixed commit": "14ccbf6f3b019443445e464bc68680fd99451531", "Url": "https://api.github.com/repos/zhichangterry/dts-merger", "Date": "2018-05-02T12:18:05Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newValue != null) { if (newValue.getClass().getName().equals(\"[B\")) { newValue = transByteArrToStr(((byte[]) (newValue))); }else { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1327/buggy-version/src.main.java.com.cozystay.datasource.BinLogEventParser.java", "BodyUseAPI": ["java.io.Serializable.getClass()", "java.lang.Class<? extends java.io.Serializable>.getName()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "14ccbf6f3b019443445e464bc68680fd99451531", "Url": "https://api.github.com/repos/zhichangterry/dts-merger", "Date": "2018-05-02T12:18:05Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j < 2) { data[i][j] = num - 1; }else { data[i][j] = num; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9599/buggy-version/src.main.java.Circulation.java", "BodyUseAPI": [], "Fixed commit": "cf585b0170c99754d6a697a78273dab77f190032", "Url": "https://api.github.com/repos/jimboweb/Circulation", "Date": "2018-03-27T21:42:58Z"},
{"Line": "=>727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objects[id]) == null) { java.lang.System.out.println(\"Wow it's actually null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3003/buggy-version/Source.Client.ClientWorld.java", "BodyUseAPI": [], "Fixed commit": "c69c6d65fa34e7b7b676f097b4e77c808e6d39c2", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2018-03-13T06:16:47Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_profile)) { fragment = new com.example.marco.bluenet_01.profileFragment(); }else if (id == (R.id.nav_protocol)) { fragment = new com.example.marco.bluenet_01.protocolFragment(); }else if (id == (R.id.nav_about)) { fragment = new com.example.marco.bluenet_01.aboutFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9791/buggy-version/app.src.main.java.com.example.marco.bluenet_01.navigationActivity.java", "BodyUseAPI": [], "Fixed commit": "d5bec8d27e32d009bf048ddf8dc1732aa8e73fab", "Url": "https://api.github.com/repos/jlinear/DispatchApp", "Date": "2018-06-06T21:05:22Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCoinMarketCapPriceInfo) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3461/buggy-version/app.src.main.java.com.devband.tronwalletforandroid.ui.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5d32b0b3a2422d395ef83f75261005babf36eed3", "Url": "https://api.github.com/repos/lky1001/tron-android-wallet", "Date": "2018-05-31T13:58:03Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHelper) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1861/buggy-version/iap_googleplay.src.main.java.com.joycastle.iab.googleplay.GoogleIabHelper.java", "BodyUseAPI": [], "Fixed commit": "02e64c201c97dce59c55933ba6a966a975707f3b", "Url": "https://api.github.com/repos/ietstudio/GamePlugin-Android", "Date": "2018-08-10T09:31:38Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grantPermissionListener) != null) grantPermissionListener.onFinish(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1861/buggy-version/social_facebook.src.main.java.com.joycastle.my_facebook.FacebookHelper.java", "BodyUseAPI": [], "Fixed commit": "02e64c201c97dce59c55933ba6a966a975707f3b", "Url": "https://api.github.com/repos/ietstudio/GamePlugin-Android", "Date": "2018-08-10T09:31:38Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grantPermissionListener) != null) grantPermissionListener.onFinish(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1861/buggy-version/social_facebook.src.main.java.com.joycastle.my_facebook.FacebookHelper.java", "BodyUseAPI": [], "Fixed commit": "02e64c201c97dce59c55933ba6a966a975707f3b", "Url": "https://api.github.com/repos/ietstudio/GamePlugin-Android", "Date": "2018-08-10T09:31:38Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grantPermissionListener) != null) grantPermissionListener.onFinish(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1861/buggy-version/social_facebook.src.main.java.com.joycastle.my_facebook.FacebookHelper.java", "BodyUseAPI": [], "Fixed commit": "02e64c201c97dce59c55933ba6a966a975707f3b", "Url": "https://api.github.com/repos/ietstudio/GamePlugin-Android", "Date": "2018-08-10T09:31:38Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etPassign.getText().toString()", "etConfirmPassign.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userpassword.equals(confirmpass)) result = true; else android.widget.Toast.makeText(this, \"Confirm password doesn't match with your password!\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5433/buggy-version/app.src.main.java.universe.sk.syndriveapp.RegistrationActivity.java", "BodyUseAPI": [], "Fixed commit": "0e2f0e3e64233e45fb6ba0c0c5b1d5efe9a0d680", "Url": "https://api.github.com/repos/Megha-KC/SyndriveApp", "Date": "2018-07-14T06:33:35Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ch.njol.skript.Skript.methodExists(org.bukkit.entity.Player.class, \"getLocale\")) { register(ch.njol.skript.expressions.ExprLanguage.class, java.lang.String.class, \"[([currently] selected|current)] [game] (language|locale) [setting]\", \"players\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3664/buggy-version/src.main.java.ch.njol.skript.expressions.ExprLanguage.java", "BodyUseAPI": [], "Fixed commit": "c7f4b814601e1e6a95b683d790babba67c99f086", "Url": "https://api.github.com/repos/Blueyescat/Skript", "Date": "2018-06-08T13:25:54Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ch.njol.skript.Skript.classExists(\"org.bukkit.event.player.PlayerLocaleChangeEvent\")) { ch.njol.skript.Skript.registerEvent(\"Language Change\", ch.njol.skript.lang.util.SimpleEvent.class, org.bukkit.event.player.PlayerLocaleChangeEvent.class, \"[player] (language|locale) chang(e|ing)\", \"[player] chang(e|ing) (language|locale)\").description(\"Called when a player changes their language in the game settings. You can use the <a href='expressions.html#ExprLanguage'>language</a> expression to get the current language of the player.\").examples(\"on language change:\", \"\\tif player\\'s language starts with \\\"en\\\":\", \"\\t\\tsend \\\"Hello!\\\"\").since(\"INSERT VERSION\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3664/buggy-version/src.main.java.ch.njol.skript.events.SimpleEvents.java", "BodyUseAPI": [], "Fixed commit": "c7f4b814601e1e6a95b683d790babba67c99f086", "Url": "https://api.github.com/repos/Blueyescat/Skript", "Date": "2018-06-08T13:25:54Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()", "com.fasterxml.jackson.databind.JsonNode.get(Constants.CONTENT_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (contentNode.get(questionId).isArray()) { if (contentNode.get(questionId).iterator().hasNext()) answer.setContent(contentNode.get(questionId).toString()); }else { answer.setContent(contentNode.get(questionId).asText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3893/buggy-version/src.main.java.edu.sjsu.cmpe275.web.SurveyController.java", "BodyUseAPI": ["contentNode.get(questionId).iterator().hasNext()", "contentNode.get(questionId).iterator()", "edu.sjsu.cmpe275.web.Answer.setContent(contentNode.get(questionId).asText())", "contentNode.get(questionId).toString()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "contentNode.get(questionId).asText()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "edu.sjsu.cmpe275.web.Answer.setContent(contentNode.get(questionId).toString())"], "Fixed commit": "f04615bd4238fb082070819070da8048bf8b0e3b", "Url": "https://api.github.com/repos/focus913/SurveyHub", "Date": "2018-05-13T20:26:11Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.endeavourhealth.core.database.dal.reference.CernerClinicalEventMappingDalI.findMappingForCvrefCode(eventCdCell.getLong())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mapping != null) { snomedConceptId = mapping.getSnomedConceptId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2764/buggy-version/src.main.java.org.endeavourhealth.transform.barts.transforms.CLEVEPreTransformer.java", "BodyUseAPI": ["org.endeavourhealth.core.database.dal.reference.models.CernerClinicalEventMap.getSnomedConceptId()"], "Fixed commit": "8f2097b174b2bf99f3d2d7b86a70163f646953e0", "Url": "https://api.github.com/repos/endeavourhealth/Transforms", "Date": "2018-06-27T16:57:59Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((score) < 2) { android.widget.Toast.makeText(this, (((\"Your score: \" + (score)) + \"\\n Try better, \") + openAnswer), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8139/buggy-version/app.src.main.java.pl.sebastianczarnecki.modernismquizapp.LocationActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, (((\"Your score: \" + (score)) + \"\\n Try better, \") + openAnswer), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(pl.sebastianczarnecki.modernismquizapp.LocationActivity,java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "8a6ed24968a318da3922756d574ee541f1947833", "Url": "https://api.github.com/repos/bluewarsaw/ModernismQuizApp", "Date": "2018-01-13T18:09:38Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((score) == 2) { android.widget.Toast.makeText(this, (((\"Your score: \" + (score)) + \"\\n 2/3\") + openAnswer), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8139/buggy-version/app.src.main.java.pl.sebastianczarnecki.modernismquizapp.LocationActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, (((\"Your score: \" + (score)) + \"\\n 2/3\") + openAnswer), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(pl.sebastianczarnecki.modernismquizapp.LocationActivity,java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "8a6ed24968a318da3922756d574ee541f1947833", "Url": "https://api.github.com/repos/bluewarsaw/ModernismQuizApp", "Date": "2018-01-13T18:09:38Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changes == 0) { java.lang.System.out.println(\"\\tno changes - no email sent\"); }else { java.lang.System.out.println((((\"\\tchanges found - no mail server or recipients configured: host=\" + (mail_smtp_host)) + \" recipients=\") + (recipients))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7482/buggy-version/java.src.com.infa.eic.sample.StructureDiff.java", "BodyUseAPI": [], "Fixed commit": "7e69658de13750a8fe7c5fdc95d88a13eff0384c", "Url": "https://api.github.com/repos/darren-wrigley/REST-API-Samples", "Date": "2018-08-29T19:14:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mailRecipients != null) && ((mailRecipients.length()) > 0)) { recipients = new java.util.ArrayList<java.lang.String>(java.util.Arrays.asList(prop.getProperty(\"mail.recipients\").split(\",\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7482/buggy-version/java.src.com.infa.eic.sample.StructureDiff.java", "BodyUseAPI": [], "Fixed commit": "7e69658de13750a8fe7c5fdc95d88a13eff0384c", "Url": "https://api.github.com/repos/darren-wrigley/REST-API-Samples", "Date": "2018-08-29T19:14:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(owner.isUnloaded())) { owner.getGroup().getActions().removeActions(owner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9038/buggy-version/src.main.java.com.bergerkiller.bukkit.tc.controller.components.ActionTrackerMember.java", "BodyUseAPI": ["owner.getGroup().getActions().removeActions(com.bergerkiller.bukkit.tc.controller.MinecartMember<?>)", "owner.getGroup().getActions()", "com.bergerkiller.bukkit.tc.controller.MinecartMember<?>.getGroup()"], "Fixed commit": "a805c16fac4b70069bc7152ad147285fb8fb79fb", "Url": "https://api.github.com/repos/bergerhealer/TrainCarts", "Date": "2018-02-06T23:39:20Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (radius < 0) angle *= -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9490/buggy-version/src.ev3.navigation.Chassis.java", "BodyUseAPI": [], "Fixed commit": "9dfe19e4d713d29d0ac421648b0822b3ddc81b86", "Url": "https://api.github.com/repos/SUPERETDUPER/WRO-2018-Senior", "Date": "2018-05-03T23:57:17Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (files[i].isDirectory()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8068/buggy-version/app.src.main.java.lakeeffect.ca.scoutingserverapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7ea567ed0c1d329d3520364b0a8d83ad62f4ac01", "Url": "https://api.github.com/repos/LakeEffectRobotics/LakeEffectScoutingServerApp", "Date": "2018-03-03T03:19:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getFileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (path == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9803/buggy-version/platform.src.main.java.org.hillview.maps.FindFilesMapper.java", "BodyUseAPI": [], "Fixed commit": "8109439bb8be6faf9a6f0078f108aa7f1d7068e9", "Url": "https://api.github.com/repos/vmware/hillview", "Date": "2018-09-14T18:51:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9803/buggy-version/platform.src.main.java.org.hillview.maps.FindFilesMapper.java", "BodyUseAPI": [], "Fixed commit": "8109439bb8be6faf9a6f0078f108aa7f1d7068e9", "Url": "https://api.github.com/repos/vmware/hillview", "Date": "2018-09-14T18:51:51Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((array[i]) == 0) { list.add((mul / 1)); }else { list.add((mul / (array[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5051/buggy-version/src.productOfArray.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "c9a5d5a1ffaabe5856fbfa4f6747e03bd2f65751", "Url": "https://api.github.com/repos/biplabku/Interview-Preparation-Guide", "Date": "2018-02-22T04:50:48Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array[i]) == 0) { mul = mul * 1; }else { mul = mul * (array[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5051/buggy-version/src.productOfArray.java", "BodyUseAPI": [], "Fixed commit": "c9a5d5a1ffaabe5856fbfa4f6747e03bd2f65751", "Url": "https://api.github.com/repos/biplabku/Interview-Preparation-Guide", "Date": "2018-02-22T04:50:48Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.preference.ListPreference.findIndexOfValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((i >= 0) && (i < (listPref.getEntries().length))) { java.lang.CharSequence label = listPref.getEntries()[i]; pref.setSummary(label); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7344/buggy-version/app.src.main.java.android.example.com.visualizerpreferences.SettingsFragment.java", "BodyUseAPI": ["android.support.v7.preference.ListPreference.getEntries()"], "Fixed commit": "beaeea8e96f496900e1f9b08be043814d66fc25f", "Url": "https://api.github.com/repos/mobiRic/ud851-Exercises", "Date": "2018-05-17T10:36:10Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sootClassPath) == \"\") sootClassPath = newPathElement; else sootClassPath += (java.io.File.pathSeparator) + newPathElement;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1245/buggy-version/src.soot.Scene.java", "BodyUseAPI": [], "Fixed commit": "e888e2895437ff323358669766e5e6dcf37cd106", "Url": "https://api.github.com/repos/plast-lab/soot", "Date": "2018-06-07T11:57:57Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((action.countOf(Query_Row)) > 1) { passed = action.clickOn(Query_Row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6341/buggy-version/LiberateAutomation.src.com.liberate.automation.pom.CRMaintainQuery.java", "BodyUseAPI": ["com.liberate.automation.core.TestActions.clickOn(org.openqa.selenium.By)"], "Fixed commit": "20284b11fcb1011089ce7787755a2bbc7cc31135", "Url": "https://api.github.com/repos/deepthi-t/AutomationWrapper", "Date": "2018-04-27T09:15:10Z"},
{"Line": "=>4167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isTypeDef) { element.addToExecTotalCount(1, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/31/buggy-version/src.lu.fisch.structorizer.executor.Executor.java", "BodyUseAPI": [], "Fixed commit": "02cdcc45547ebab4ccd98c7dc9f3514c53f01eef", "Url": "https://api.github.com/repos/codemanyak/Structorizer.Desktop", "Date": "2018-03-19T04:02:56Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!authenticated) { handleOnAuthenticateFailure(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getCode(), java.lang.String.format(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getMessage(), \"Authentication failed\"), userName, credential); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1499/buggy-version/core.org.wso2.carbon.user.core.src.main.java.org.wso2.carbon.user.core.common.AbstractUserStoreManager.java", "BodyUseAPI": [], "Fixed commit": "8c6092f203ad8e5d3d412bddac5130ea15e1138b", "Url": "https://api.github.com/repos/Megala21/carbon-kernel", "Date": "2018-04-05T09:51:29Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.nuls.kernel.utils.CommandHelper.getPwdOptional()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (io.nuls.core.tools.str.StringUtils.isNotBlank(password)) { io.nuls.kernel.utils.CommandHelper.confirmPwd(password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2399/buggy-version/account-module.base.account-rpc.src.main.java.io.nuls.account.rpc.cmd.CreateProcessor.java", "BodyUseAPI": ["io.nuls.kernel.utils.CommandHelper.confirmPwd(java.lang.String)"], "Fixed commit": "8a63e605ce5c3bd31360d9015b9984ec872ccb3a", "Url": "https://api.github.com/repos/ruislan/nuls", "Date": "2018-06-05T12:42:34Z"},
{"Line": "=>822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strictMode) { throw new dk.netarkivet.common.exceptions.ArgumentNotValid((((errMsgs.size()) + \" errors were found: \") + (dk.netarkivet.common.utils.StringUtils.conjoin(\",\", errMsgs)))); }else { dk.netarkivet.harvester.datamodel.Domain.log.warn((((errMsgs.size()) + \" errors were found: \") + (dk.netarkivet.common.utils.StringUtils.conjoin(\",\", errMsgs)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8699/buggy-version/harvester.harvester-core.src.main.java.dk.netarkivet.harvester.datamodel.Domain.java", "BodyUseAPI": [], "Fixed commit": "32ffbf47ac0293f7568f88e70bfc5f44b7d50c20", "Url": "https://api.github.com/repos/netarchivesuite/netarchivesuite", "Date": "2018-04-18T15:54:18Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((page) == null) { page = getPage(getInitialOffset()); if ((page) == null) { return com.hubspot.slack.client.paging.AbstractPagedIterator.endOfData(); } return page.getResults(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6804/buggy-version/slack-java-client.src.main.java.com.hubspot.slack.client.paging.AbstractPagedIterator.java", "BodyUseAPI": [], "Fixed commit": "cc07517a95fc91dedc94844583d104c2cb2b5485", "Url": "https://api.github.com/repos/HubSpot/slack-client", "Date": "2018-03-23T19:21:39Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (context.getLogic().canPlayQuest(player, quest.getSourceCard())) { context.getLogic().playQuest(player, quest.clone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4943/buggy-version/game.src.main.java.net.demilich.metastone.game.spells.AddQuestSpell.java", "BodyUseAPI": ["context.getLogic().playQuest(net.demilich.metastone.game.Player,quest.clone())", "net.demilich.metastone.game.spells.trigger.secrets.Quest.clone()", "net.demilich.metastone.game.GameContext.getLogic()"], "Fixed commit": "9dd55144f43f756c155d052a0efd15867e53c37c", "Url": "https://api.github.com/repos/hiddenswitch/Spellsource-Server", "Date": "2018-08-20T20:06:17Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((net.demilich.metastone.game.spells.trigger.secrets.Secret) (desc.get(SpellArg.SECRET))).clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (context.getLogic().canPlaySecret(player, secret.getSourceCard())) { context.getLogic().playSecret(player, secret); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4943/buggy-version/game.src.main.java.net.demilich.metastone.game.spells.AddSecretSpell.java", "BodyUseAPI": ["net.demilich.metastone.game.GameContext.getLogic()", "context.getLogic().playSecret(net.demilich.metastone.game.Player,net.demilich.metastone.game.spells.trigger.secrets.Secret)"], "Fixed commit": "9dd55144f43f756c155d052a0efd15867e53c37c", "Url": "https://api.github.com/repos/hiddenswitch/Spellsource-Server", "Date": "2018-08-20T20:06:17Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.neoload.integration.NeoBuildAction.CallableForPasswordScrambler.findThePasswordScrambler()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (possibleFile != null) { errorMessage.append(((\"File: \\\"\" + possibleFile) + \"\\\".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6443/buggy-version/src.main.java.org.jenkinsci.plugins.neoload.integration.NeoBuildAction.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "81101615090216de52fe9cda4fd11dab90c954b5", "Url": "https://api.github.com/repos/stephanemartin/neoload-plugin", "Date": "2018-05-04T18:49:17Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((coordBlock[0]) < x) && ((coordBlock[1]) < y)) && ((blockSizeAux[1]) != (dims_blockSize[1]))) && ((blockSizeAux[0]) != (dims_blockSize[0]))) inputOffset += (((dims_blockSize[0]) * ((dims_blockSize[1]) - (blockSizeAux[1]))) + (x - (coordBlock[0]))) * bytesPerPixel; else if (((coordBlock[0]) < x) && ((blockSizeAux[0]) != (dims_blockSize[0]))) inputOffset += ((dims_blockSize[0]) - (blockSizeAux[0])) * bytesPerPixel; else if ((((coordBlock[1]) < y) && ((blockSizeAux[1]) != (dims_blockSize[1]))) && (((coordBlock[0]) + (blockSizeAux[0])) == (dims_xyzct[0]))) inputOffset += ((blockSizeAux[0]) * ((dims_blockSize[1]) - (blockSizeAux[1]))) * bytesPerPixel; else if (((coordBlock[1]) < y) && ((blockSizeAux[1]) != (dims_blockSize[1]))) inputOffset += ((dims_blockSize[0]) * ((dims_blockSize[1]) - (blockSizeAux[1]))) * bytesPerPixel;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2426/buggy-version/components.formats-gpl.src.loci.formats.in.KLBReader.java", "BodyUseAPI": [], "Fixed commit": "4eefc317a47d7219d9a5797c373200b9009389a9", "Url": "https://api.github.com/repos/melissalinkert/bioformats", "Date": "2018-09-13T09:54:57Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evtape.manager.repository.TenantPackageRepository.findPackage(tenant.getId(),java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newPackage == null) { if (((lastPackage != null) && ((lastPackage.getEndDate().getTime()) < current)) || ((current - (lastPackage.getEndDate().getTime())) < 86400000)) { if (((tenant.getAutoRenew()) != null) && ((tenant.getAutoRenew()) > 0)) { renewPackage(tenant.getId(), lastPackage.getPackageId()); } }else { renewPackage(tenant.getId(), defaultPackageId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1925/buggy-version/service-manager.src.main.java.com.evtape.manager.service.BizOperationService.java", "BodyUseAPI": [], "Fixed commit": "11fbe739db7127374cafc4233d0cfe8370a8a9dd", "Url": "https://api.github.com/repos/pnpdb/evtape", "Date": "2018-05-20T06:12:52Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((top) < 0) { throw new java.lang.IllegalArgumentException(\"argument for top must be a positive integer.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4613/buggy-version/src.java.org.apache.cassandra.tools.nodetool.TableStats.java", "BodyUseAPI": [], "Fixed commit": "d206cbc0fd0240aa6cb7c77b3e2b92f1628cfa52", "Url": "https://api.github.com/repos/ptbannister/cassandra", "Date": "2018-03-29T02:05:34Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((newZ >= 0) && (newZ < (dunGen.utils.Maze_RecursBacktr.w))) && (!(dunGen.utils.Maze_RecursBacktr.walls[x][newZ].east))) && (((dunGen.utils.Maze_RecursBacktr.distToEntry[x][newZ]) == 0) || ((dunGen.utils.Maze_RecursBacktr.distToEntry[x][newZ]) > nextDist))) { dunGen.utils.Maze_RecursBacktr.addCell2Path(x, newZ, nextDist); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8148/buggy-version/src.dunGen.utils.Maze_RecursBacktr.java", "BodyUseAPI": ["dunGen.utils.Maze_RecursBacktr.addCell2Path(int,int,int)"], "Fixed commit": "a3249360c76d464e7142e75673ec209a187f0ee7", "Url": "https://api.github.com/repos/TheRoot89/DungeonGen", "Date": "2018-03-03T12:15:37Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((!(dunGen.utils.Maze_RecursBacktr.walls[x][z].north)) && (newX >= 0)) && (newX < (dunGen.utils.Maze_RecursBacktr.h))) && (((dunGen.utils.Maze_RecursBacktr.distToEntry[newX][z]) == 0) || ((dunGen.utils.Maze_RecursBacktr.distToEntry[newX][z]) > nextDist))) { dunGen.utils.Maze_RecursBacktr.addCell2Path(newX, z, nextDist); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8148/buggy-version/src.dunGen.utils.Maze_RecursBacktr.java", "BodyUseAPI": ["dunGen.utils.Maze_RecursBacktr.addCell2Path(int,int,int)"], "Fixed commit": "a3249360c76d464e7142e75673ec209a187f0ee7", "Url": "https://api.github.com/repos/TheRoot89/DungeonGen", "Date": "2018-03-03T12:15:37Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["delta.getRevised().getLines()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(revisedLines.isEmpty())) { diffInfo.setDstEndLineOffset(revisedLines.get(((revisedLines.size()) - 1)).toString().length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6681/buggy-version/src.main.java.at.aau.Main.java", "BodyUseAPI": ["java.lang.Object.toString()", "at.aau.DiffInfo.setDstEndLineOffset(int)", "java.util.List.get(int)", "java.util.List.size()", "java.lang.String.length()"], "Fixed commit": "0de84e6b64e931f69b835088f903e27f90040de2", "Url": "https://api.github.com/repos/FredElevon/MyersDiff", "Date": "2018-07-24T07:54:29Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) return com.robyrodriguez.stackbuster.utils.CommonUtil.EMPTY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8846/buggy-version/scheduler.src.main.java.com.robyrodriguez.stackbuster.utils.CommonUtil.java", "BodyUseAPI": [], "Fixed commit": "3b1e54ecc2017105d9ef544ff0eb754c2c7ec995", "Url": "https://api.github.com/repos/roby-rodriguez/stack-buster-app", "Date": "2018-05-21T08:58:29Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"TBK_11\".equals(eventKey)) { responseMessage = makeTextMessage(wechatMsgDomain, \"\\u200b\\u200b\\u200b\\u53cc\\u5341\\u4e00\\u8d85\\u7ea7\\u7ea2\\u5305\\u6765\\u4e86\\n\\n\\u7ea2\\u5305\\u65f6\\u95f4:10\\u670820\\u65e5-11\\u670811\\u65e5\\n\\n2018\\u5e74\\u53cc11\\u9884\\u552e\\u542f\\u52a8\\uff01\\u6570\\u4ebf\\u7ea2\\u5305\\n\\u590d\\u5236\\u8fd9\\u6761\\u4fe1\\u606f\\uff0c\\uffe5U6erb6oWjZi\\uffe5 \\uff0c\\u6253\\u5f00\\u3010\\u624b\\u673a\\u6dd8\\u5b9d\\u3011\\u5373\\u53ef\\u9886\\u53d6\\n\\n\\u7ea2\\u5305\\u91d1\\u989d\\uff1a0.5\\u5143\\u300110\\u5143\\u30011111\\u5143 \\uff08\\u4e00\\u59293\\u6b21\\u673a\\u4f1a\\uff0c\\u7ea2\\u5305\\u53ef\\u7d2f\\u52a0\\uff09\"); }else if (eventKey.startsWith(\"mediaId-\")) { java.lang.String mediaId = eventKey.split(\"-\")[1]; responseMessage = makeImageMessage(wechatMsgDomain, mediaId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9260/buggy-version/laser-soft-controller.src.main.java.com.soft.wechat.service.WechatService.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "12f4f3b850c1531feb33f93c9604b4b35d702d99", "Url": "https://api.github.com/repos/a6330452/sqg", "Date": "2018-10-25T01:12:58Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.fos) != null) this.closeOutputFile();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6228/buggy-version/src.gui.cipherModule.FileProvider.java", "BodyUseAPI": [], "Fixed commit": "de94499420ff91c7fb3b3516ab7efd50fe96bf5c", "Url": "https://api.github.com/repos/dart1277/software_eng_project", "Date": "2018-04-25T21:42:40Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (array[3].split(\"\\\\s+\")[0].contains(\"-\")) { java.util.Date date = zjy.money.com.parser.CSVParser.format2.parse(array[3].split(\"\\\\s+\")[0]); record.setDate(zjy.money.com.parser.CSVParser.format2.format(date)); }else { java.util.Date date = zjy.money.com.parser.CSVParser.format1.parse(array[3].split(\"\\\\s+\")[0]); record.setDate(zjy.money.com.parser.CSVParser.format2.format(date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1182/buggy-version/MoneyManager.src.zjy.money.com.parser.CSVParser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.text.SimpleDateFormat.parse(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "7152b7636120d8be765d1f1401597169349cb459", "Url": "https://api.github.com/repos/VanceZou/zjy", "Date": "2017-08-05T17:27:06Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (launchMode.equals(com.tek.origin.display.LauncherDisplay.LaunchMode.FULL)) arguments.add(launchMode.getConsoleArgument());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7672/buggy-version/src.com.tek.origin.display.LauncherDisplay.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "com.tek.origin.display.LauncherDisplay.LaunchMode.getConsoleArgument()"], "Fixed commit": "ff7e5d416978c7a15bb037ab03a064dd0806c4c7", "Url": "https://api.github.com/repos/RedstoneTek/OriginCryptoLauncher", "Date": "2018-01-03T06:09:49Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.ssehub.kernel_haven.variability_model.VariabilityVariable.getUsedInConstraintsOfOtherVariables()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != inVars) { union.addAll(inVars); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3946/buggy-version/src.net.ssehub.kernel_haven.metric_haven.metric_components.weights.CtcrWeight.java", "BodyUseAPI": ["java.util.Set<net.ssehub.kernel_haven.variability_model.VariabilityVariable>.addAll(java.util.Set<net.ssehub.kernel_haven.variability_model.VariabilityVariable>)"], "Fixed commit": "690e3b6f7660d39e3393cf6636e1a242407b3bac", "Url": "https://api.github.com/repos/KernelHaven/MetricHaven", "Date": "2018-07-05T08:44:58Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (atif) { req2 = \"select * from VueEmilien ATIF\" + saisie; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6261/buggy-version/src.java.accesBDD.LivresDAO.java", "BodyUseAPI": [], "Fixed commit": "f049708c7cd03869039830f7a7fee459dcddc343", "Url": "https://api.github.com/repos/EmilienG/LibrairieFusion-v1.0", "Date": "2018-03-01T13:58:51Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pTimePoint == 0) { info(\"Go to start position\"); double stepDistanceX = (mStartXVariable.get()) - (mBasicThreeAxesStageInterface.getXPositionVariable().get()); double stepDistanceY = (mStartYVariable.get()) - (mBasicThreeAxesStageInterface.getYPositionVariable().get()); double stepDistanceZ = (mStartZVariable.get()) - (mBasicThreeAxesStageInterface.getZPositionVariable().get()); mBasicThreeAxesStageInterface.moveXBy(stepDistanceX, true); mBasicThreeAxesStageInterface.moveYBy(stepDistanceY, true); mBasicThreeAxesStageInterface.moveZBy(stepDistanceZ, true); }else { double stepDistanceX = ((mStopXVariable.get()) - (mStartXVariable.get())) / ((mNumberOfStepsVariable.get()) - 1); double stepDistanceY = ((mStopYVariable.get()) - (mStartYVariable.get())) / ((mNumberOfStepsVariable.get()) - 1); double stepDistanceZ = ((mStopZVariable.get()) - (mStartZVariable.get())) / ((mNumberOfStepsVariable.get()) - 1); mBasicThreeAxesStageInterface.moveXBy(stepDistanceX, true); mBasicThreeAxesStageInterface.moveYBy(stepDistanceY, true); mBasicThreeAxesStageInterface.moveZBy(stepDistanceZ, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2736/buggy-version/src.clearcontrol.devices.stages.kcube.scheduler.BasicThreeAxesStageScheduler.java", "BodyUseAPI": [], "Fixed commit": "8732b21b7354482ca45c34342e1d3d553ceaef93", "Url": "https://api.github.com/repos/ClearControl/xwing", "Date": "2018-02-11T15:17:29Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (finalI == 8) { android.content.Intent intent = new android.content.Intent(this, np.gov.thorimun.www.thorimun4.jsonTest.class); startActivity(intent); }else if (finalI == 9) { android.content.Intent intent = new android.content.Intent(this, np.gov.thorimun.www.thorimun4.Staff_Activity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8860/buggy-version/app.src.main.java.np.gov.thorimun.www.thorimun4.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "40e3c0b2f5fd2f7e58461f09177557798a2034de", "Url": "https://api.github.com/repos/Shrawan99/Thori_new", "Date": "2018-08-30T14:49:32Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(zipFile.isValidZipFile())) { se.de.hu_berlin.informatik.utils.miscellaneous.Log.abort(this, \"File '%s' is no valid zip file.\", zipFilePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5002/buggy-version/src.main.java.se.de.hu_berlin.informatik.utils.compression.ziputils.ZipFileReader.java", "BodyUseAPI": [], "Fixed commit": "71a4937a271e5f2ae8c363df81255e0ae0e7122b", "Url": "https://api.github.com/repos/tdhoang/HUB-SE-framework", "Date": "2018-10-18T16:44:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["online.dachuangdemo.www.DynamicDomainName.dao.MappingDao.getMapping(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mappingVO.getIfActive()) == true) { responseWrapper.setData(false); responseWrapper.setCode(ResponseIteam.MAPPING_ALREADY_ON.getCode()); responseWrapper.setMessage(ResponseIteam.MAPPING_ALREADY_ON.getMessage()); return responseWrapper; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6970/buggy-version/src.main.java.online.dachuangdemo.www.DynamicDomainName.service.impl.MappingServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a9a2c3edfa3f5079de6831be52b4a22a507f0395", "Url": "https://api.github.com/repos/LiPengcheng1995/DynamicDomainName", "Date": "2018-01-16T07:24:07Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((batch.size()) > 0) { indexer.index(batch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5600/buggy-version/nl.naturalis.nba.etl.src.main.java.nl.naturalis.nba.etl.enrich.SpecimenTaxonomicEnricher2.java", "BodyUseAPI": ["nl.naturalis.nba.etl.BulkIndexer<nl.naturalis.nba.api.model.Specimen>.index(java.util.List<nl.naturalis.nba.api.model.Specimen>)"], "Fixed commit": "73d6413c540de93973fdfc2dddc65777808c123c", "Url": "https://api.github.com/repos/naturalis/naturalis_data_api", "Date": "2018-08-17T14:31:36Z"},
{"Line": "=>2571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end <= start) { return StringPool.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9920/buggy-version/jodd-core.src.main.java.jodd.util.StringUtil.java", "BodyUseAPI": [], "Fixed commit": "9a630bc180fb661d5530bc71de98691547d8fce1", "Url": "https://api.github.com/repos/oblac/jodd", "Date": "2018-01-06T09:16:42Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userId) != null) url += \"?external_user_id=\" + (userId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8495/buggy-version/sdk.sdk.src.main.java.com.useek.sdk.UseekSDK.java", "BodyUseAPI": [], "Fixed commit": "65fe99b7b06498f5887b4681d1a6186c72f5e29e", "Url": "https://api.github.com/repos/chrislin89/useek-android-sdk", "Date": "2016-07-07T13:07:22Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n2 != 0) return \"Result is: \" + (n1 / n2); else return \"Can't divide by 0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/675/buggy-version/src.main.java.samples.websocket.tomcat.divider.Divider.java", "BodyUseAPI": [], "Fixed commit": "add8221fb5314265ce7d7a8a4002078a498511a3", "Url": "https://api.github.com/repos/Maes95/SpringBootSamples", "Date": "2018-10-17T13:49:40Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (telecomServService.update(serviceName, serviceDTO)) { return new org.springframework.http.ResponseEntity(new com.paymentsystem.ngpuppies.web.dto.ResponseMessage(((\"Service \" + (serviceDTO.getName())) + \"updated!\")), org.springframework.http.HttpStatus.OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7689/buggy-version/src.main.java.com.paymentsystem.ngpuppies.web.admin.AdminTelecomServController.java", "BodyUseAPI": ["com.paymentsystem.ngpuppies.web.dto.TelecomServiceDTO.getName()"], "Fixed commit": "75dc0f9f1bf0923b9b5413992b9014e2bda99f1c", "Url": "https://api.github.com/repos/adriyanmihaylov/NGPuppies", "Date": "2018-09-10T05:40:17Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDatasetManager == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9097/buggy-version/src.main.java.org.aksw.simba.lemming.tools.PrecomputingValues.java", "BodyUseAPI": [], "Fixed commit": "aaeecc8dc7f5864783c3ba36d067e248de0afd5e", "Url": "https://api.github.com/repos/dice-group/Lemming", "Date": "2018-09-04T14:07:32Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.blackhor.littleprince.controller.LPGame.getPreferences().isEnableDrawDebug()) { com.badlogic.gdx.math.Matrix4 debugMatrix = net.blackhor.littleprince.controller.LPGame.getBatch().getProjectionMatrix().cpy().scale(net.blackhor.littleprince.view.PTM, net.blackhor.littleprince.view.PTM, 0); debugRenderer.render(lpWorld.getBox2DWorld(), debugMatrix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6758/buggy-version/core.src.net.blackhor.littleprince.view.LPWorldRenderer.java", "BodyUseAPI": [], "Fixed commit": "2cbaba524b2c578643575cdfa6593dbfdb0961a6", "Url": "https://api.github.com/repos/tscissors/cnproject", "Date": "2018-06-27T22:16:30Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MagicianAwakening.SceneControl) == 1) { try (java.io.BufferedReader ClassInfoReader = new java.io.BufferedReader(new java.io.FileReader(\"src\\\\TextFiles\\\\Magician\\\\Awakening\\\\SummonMagicalLightOutcome\\\\DirectTheLightIntoTheirEyesOutcome\\\\2 - DoorToTheMagistrum.txt\"))) { java.lang.String line; while ((line = ClassInfoReader.readLine()) != null) { java.lang.System.out.println(line); } } catch (java.io.IOException e) { java.lang.System.out.println((\"Error file not found\\n\" + e)); } }else { try (java.io.BufferedReader ClassInfoReader = new java.io.BufferedReader(new java.io.FileReader(\"src\\\\TextFiles\\\\Magician\\\\Awakening\\\\SceneEventResults\\\\3 - LeaveThroughTheOtherDoor.txt\"))) { java.lang.String line; while ((line = ClassInfoReader.readLine()) != null) { java.lang.System.out.println(line); } } catch (java.io.IOException e) { java.lang.System.out.println((\"Error file not found\\n\" + e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3363/buggy-version/MagicianAwakening.java", "BodyUseAPI": [], "Fixed commit": "43a7d200f6cd98739a05a72630f04c7f30457c1e", "Url": "https://api.github.com/repos/Gaddiator/Progma", "Date": "2018-07-06T19:48:39Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ri.loadLabel(manager).toString().equalsIgnoreCase(\"Phone\")) || (ri.loadLabel(manager).toString().equalsIgnoreCase(\"Maps\"))) { app.label = ri.activityInfo.packageName; app.name = ri.loadLabel(manager); app.icon = ri.loadIcon(manager); apps.add(app); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2162/buggy-version/app.src.main.java.dramagrgojaweit.howdy.drivealive.AppsListActivity.java", "BodyUseAPI": ["android.content.pm.ResolveInfo.loadLabel(android.content.pm.PackageManager)", "android.content.pm.ResolveInfo.loadIcon(android.content.pm.PackageManager)"], "Fixed commit": "5122a1aebc0a1d56dd8e6996d2cafab76a9230c3", "Url": "https://api.github.com/repos/sonicsuraj/launcher", "Date": "2018-01-18T20:18:46Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target == null) || (pattern == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6218/buggy-version/core.src.main.java.com.taobao.arthas.core.util.matcher.WildcardMatcher.java", "BodyUseAPI": [], "Fixed commit": "e3ce4e7e5176b8ed458f23922d3593cb0896963e", "Url": "https://api.github.com/repos/Hearen/arthas", "Date": "2018-09-23T06:25:00Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getChildCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (childCount == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2720/buggy-version/TimeLineItemDecoration.src.main.java.com.vivian.timelineitemdecoration.itemdecoration.DotItemDecoration.java", "BodyUseAPI": [], "Fixed commit": "0d914d0dc27241893526f75d3674b19cfa5a6981", "Url": "https://api.github.com/repos/vivian8725118/TimeLine", "Date": "2018-09-15T06:59:33Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getChildCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (childCount == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2720/buggy-version/TimeLineItemDecoration.src.main.java.com.vivian.timelineitemdecoration.itemdecoration.DotItemDecoration.java", "BodyUseAPI": [], "Fixed commit": "0d914d0dc27241893526f75d3674b19cfa5a6981", "Url": "https://api.github.com/repos/vivian8725118/TimeLine", "Date": "2018-09-15T06:59:33Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (confirm) { finish(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7932/buggy-version/app.src.main.java.com.cn.bent.sports.view.activity.youle.play.GameWebActivity.java", "BodyUseAPI": [], "Fixed commit": "e2b78a6a3c6a95d2831b03854fe580f230d64f2e", "Url": "https://api.github.com/repos/cd031116/BentSports", "Date": "2018-04-12T01:40:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (par5EntityLiving instanceof net.minecraft.src.EntityPlayer) { net.minecraft.src.EntityPlayer ep = ((net.minecraft.src.EntityPlayer) (par5EntityLiving)); if ((ep.inventory.getCurrentItem().itemID) != 3003) return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6991/buggy-version/src.minecraft.net.minecraft.src.Addon_Glass.java", "BodyUseAPI": [], "Fixed commit": "edea1a6560ad5f80138a8897c307018541b0f06e", "Url": "https://api.github.com/repos/jorgebonafe/btw-deco", "Date": "2018-05-06T17:25:49Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ok == false) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/14/buggy-version/src.furb.FiniteAutomaton.java", "BodyUseAPI": [], "Fixed commit": "2a7aa2808cdaced19fff98cf539b5655010b28bc", "Url": "https://api.github.com/repos/heybruna/reglangrec", "Date": "2018-03-04T02:24:34Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerPawns.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1400/buggy-version/app.src.main.java.com.example.mamajama.androidgame.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ef8a9eb9b643f50bf5787316ecd52fe18f44bb0a", "Url": "https://api.github.com/repos/szunray/Song-of-Serpents", "Date": "2018-01-20T02:00:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nsp) { str.append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9646/buggy-version/src.main.java.io.socket.parser.IOParser.java", "BodyUseAPI": [], "Fixed commit": "259cd5776f8ca319349f56c2a3f7a940da9d4b99", "Url": "https://api.github.com/repos/zoln/socket.io-client-java", "Date": "2018-07-18T15:30:16Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.data) != null) { if (!nsp) { str.append(\",\"); } str.append(obj.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9646/buggy-version/src.main.java.io.socket.parser.IOParser.java", "BodyUseAPI": ["java.lang.StringBuilder.append(obj.data)"], "Fixed commit": "259cd5776f8ca319349f56c2a3f7a940da9d4b99", "Url": "https://api.github.com/repos/zoln/socket.io-client-java", "Date": "2018-07-18T15:30:16Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params != null) { url += params; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9916/buggy-version/src.backend.src.main.java.com.linkedpipes.lpa.backend.services.HttpUrlConnector.java", "BodyUseAPI": [], "Fixed commit": "0f1644080f6d8c7d08ecfe844842fd113313d612", "Url": "https://api.github.com/repos/linkedpipes/applications", "Date": "2018-08-26T07:52:28Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (session != null) { session.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9453/buggy-version/src.main.java.com.phuongjolly.blog.controllers.UserController.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.invalidate()"], "Fixed commit": "500777ef92fe4cd6f5bf6c477eea3a5bdd2913e2", "Url": "https://api.github.com/repos/phuongjolly/blog-api", "Date": "2018-04-16T14:04:56Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sunshine.sim.Tractor.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (availableTrailers.get(idx).location.equals(new sunshine.sim.Point(0.001, 0.001))) return sunshine.sim.Command.createMoveCommand(new sunshine.sim.Point(0.0, 0.0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4005/buggy-version/sunshine.g1.Player.java", "BodyUseAPI": [], "Fixed commit": "e8ec33874fdc5c6cd5500ebb1538344a3dc6f0f0", "Url": "https://api.github.com/repos/Jumhyn/coms4444-sunshine", "Date": "2018-10-10T04:23:22Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(flipage.cpu.com.cpuflipage.utils.FlipagePrefrences.getIsGuest())) { android.content.Intent intent = new android.content.Intent(this, flipage.cpu.com.cpuflipage.premain.WelcomeActivity.class); startActivity(intent); finish(); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7675/buggy-version/app.src.main.java.flipage.cpu.com.cpuflipage.DepartmentActivity.java", "BodyUseAPI": [], "Fixed commit": "db8f55a0ca7df418601668d5f0c00a394133aa92", "Url": "https://api.github.com/repos/Pawpaaaw/flipage", "Date": "2018-10-16T03:58:31Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) { return builder.canBuild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/156/buggy-version/src.main.java.cam72cam.immersiverailroading.util.RailInfo.java", "BodyUseAPI": [], "Fixed commit": "eaf3203895c97cc18e6c12f41765d71be25e01d4", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2018-03-26T03:28:01Z"},
{"Line": "=>782", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == targetKey) { targetKey = (semantic.isMapping()) ? convert(sourceKey, targetKeyType).to(targetKeyType) : sourceKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2795/buggy-version/src.main.java.org.osgl.util.DataMapper.java", "BodyUseAPI": [], "Fixed commit": "b3a0a8545832d923f9c02a713389693588d9e8cf", "Url": "https://api.github.com/repos/osglworks/java-tool", "Date": "2018-08-01T08:54:33Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (keyTransformer)) { targetKey = keyTransformer.apply(targetKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2795/buggy-version/src.main.java.org.osgl.util.DataMapper.java", "BodyUseAPI": [], "Fixed commit": "b3a0a8545832d923f9c02a713389693588d9e8cf", "Url": "https://api.github.com/repos/osglworks/java-tool", "Date": "2018-08-01T08:54:33Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((javax.faces.context.FacesContext.getCurrentInstance().getExternalContext().getSessionMap().get(\"user\")) != null) { throw new kth.iv1201.recruitment.model.RegisterFailedException(\"Register failed\"); }else { result = dao.register(username, firstname, lastname, email, password, recruiter); login(username, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/9680/buggy-version/recruitment-application.src.main.java.kth.iv1201.recruitment.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "86c959619a301e50d0a22a405578cb718ac629fe", "Url": "https://api.github.com/repos/cahanss/IV1201", "Date": "2018-03-15T11:45:24Z"},
{"Line": "=>1099", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(additionalDiceTime)) && (returnBack.getClickable(player).isDiceRepeat())) returnBack.getClickable(player).setReady(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2472/buggy-version/src.games.gsClever.Logic.MainLogic.java", "BodyUseAPI": ["games.gsClever.Logic.Return.getClickable(int)", "returnBack.getClickable(player).setReady(boolean)"], "Fixed commit": "8350bc083dfe205b6c57dba6746e191029a99e83", "Url": "https://api.github.com/repos/nicoonator/gsclever", "Date": "2018-07-17T17:35:50Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Class<?>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (c == null) { extensionClasses.put(n, clazz); }else if (c != clazz) { throw new java.lang.IllegalStateException((((((((\"Duplicate extension \" + (type.getName())) + \" name \") + n) + \" on \") + (c.getName())) + \" and \") + (clazz.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7958/buggy-version/dubbo-common.src.main.java.com.alibaba.dubbo.common.extension.ExtensionLoader.java", "BodyUseAPI": ["java.lang.Class<?>.getName()"], "Fixed commit": "927ac11b43e58e458074baf7cb6377b2cfc30033", "Url": "https://api.github.com/repos/tinycedar/dubbo", "Date": "2018-02-09T10:25:39Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amazon.ags.api.AmazonGamesClient.getPlayerClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (playerClient.isSignedIn()) { gameCircleAuthentication.onConnected(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2841/buggy-version/android.src.gamecircle.GameCircleClient.java", "BodyUseAPI": [], "Fixed commit": "821050086b3f05fac4f5a85f4dc8bc395535439e", "Url": "https://api.github.com/repos/binogure-studio/godotamazon", "Date": "2018-05-02T00:27:39Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((array.length) - (size)) == ((int) ((size) / 2))) array = cutHalf(array);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6515/buggy-version/src.main.java.practice.structures.stacks.ArrayBasedStack.java", "BodyUseAPI": ["practice.structures.stacks.ArrayBasedStack<T>.cutHalf(T[])"], "Fixed commit": "83bb6c5e3230bde5e67fa550eecef8d62ab9a5bf", "Url": "https://api.github.com/repos/Sic4Parvis9Magna/ti_practice", "Date": "2018-07-06T12:19:49Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { runtimeSettingsBuilder.consoleOutput(true); runtimeSettingsBuilder.remoteDebuggingEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5207/buggy-version/app.src.common.shared.org.mozilla.vrbrowser.SessionStore.java", "BodyUseAPI": [], "Fixed commit": "8f9549f2e4e3d60c005e68fc1b6df61a161be90e", "Url": "https://api.github.com/repos/cvan/FirefoxReality", "Date": "2018-08-01T21:13:09Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTimeSelectedDestination) { if (mAlarmEveryStopCheckBox.isChecked()) { for (long time : mEndTimeList) { setAlarm(getAlarmTimeDest(mSelectedTimeDestination, time), getString(R.string.time_to_get_off), mTimeBeforeDestination); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4542/buggy-version/sthlmtraveling.src.main.java.com.markupartist.sthlmtraveling.AlarmPreferencesActivity.java", "BodyUseAPI": [], "Fixed commit": "8e1f88f4cb4e9be28819e4e18b5cb5da933c0810", "Url": "https://api.github.com/repos/Team-Eight/sthlm-commuter", "Date": "2018-04-26T14:57:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getBlock().getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((skull.getOwningPlayer()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8085/buggy-version/src.me.x1machinemaker1x.headdrops.EventListener.java", "BodyUseAPI": [], "Fixed commit": "74ecbcb1f65c68e20f956ccd7ffc70b2aa18170b", "Url": "https://api.github.com/repos/X1machinemaker1X/HeadDrops", "Date": "2018-09-13T23:35:57Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (workflowExecution.getEcloudDatasetId().contains(\"NOT_CREATED_YET\")) { abstractMetisPlugin.execute(dpsClient, ecloudBaseUrl, ecloudProvider, workflowExecution.getEcloudDatasetId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3343/buggy-version/metis-core.metis-core-service.src.main.java.eu.europeana.metis.core.execution.WorkflowExecutor.java", "BodyUseAPI": ["eu.europeana.metis.core.workflow.WorkflowExecution.getEcloudDatasetId()", "eu.europeana.metis.core.workflow.plugins.AbstractMetisPlugin.execute(eu.europeana.cloud.client.dps.rest.DpsClient,java.lang.String,java.lang.String,workflowExecution.getEcloudDatasetId())"], "Fixed commit": "f567e586b2d82f3edef85bb9b686dc431d4e4126", "Url": "https://api.github.com/repos/europeana/metis-framework", "Date": "2018-01-31T12:43:58Z"},
{"Line": "=>2785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_timeWarningIssued)) { _timeWarningIssued = true; try { ptolemy.util.MessageHandler.warning((\"Using a timeout in JavaScript, but the director's\" + (\" synchronizeToRealTime parameter is set to false.\" + \" To get real-time behavior, set it to true.\"))); } catch (ptolemy.util.CancelException e) { throw new ptolemy.kernel.util.IllegalActionException(this, \"Execution cancelled\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4993/buggy-version/ptolemy.actor.lib.jjs.JavaScript.java", "BodyUseAPI": [], "Fixed commit": "31425e505aed94033384bd16e2f4bffb299cf869", "Url": "https://api.github.com/repos/icyphy/ptII", "Date": "2018-05-04T13:28:14Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((S.length) == 0) { return new int[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7258/buggy-version/src.algorithms.sequences.subsequence.LargestContiguousSubarray.java", "BodyUseAPI": [], "Fixed commit": "2a4264d41d608bdf2a800595bcbd23ea36aaa046", "Url": "https://api.github.com/repos/VladManolache/Algorithms", "Date": "2018-01-29T10:02:17Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.core.ILibraryManagerService.class)) { org.talend.core.ILibraryManagerService repositoryBundleService = ((org.talend.core.ILibraryManagerService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.core.ILibraryManagerService.class))); repositoryBundleService.installModules(neededLibraries, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1348/buggy-version/main.plugins.org.talend.designer.maven.src.main.java.org.talend.designer.maven.tools.ProcessorDependenciesManager.java", "BodyUseAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Fixed commit": "ffe4f6b05ae105dd4d28fe1cb6220b595f3b5b57", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2018-02-26T08:27:38Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((audioRecorder) != null) audioRecorder.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6182/buggy-version/app.src.main.java.de.htwg.moco.bulbdj.detector.AudioManager.java", "BodyUseAPI": [], "Fixed commit": "ac1b1df9a831b494e792b63ed753925593ba1086", "Url": "https://api.github.com/repos/juricmislav/MoCo", "Date": "2018-01-02T10:53:46Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) listener.onStop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6182/buggy-version/app.src.main.java.de.htwg.moco.bulbdj.detector.AudioManager.java", "BodyUseAPI": [], "Fixed commit": "ac1b1df9a831b494e792b63ed753925593ba1086", "Url": "https://api.github.com/repos/juricmislav/MoCo", "Date": "2018-01-02T10:53:46Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gdl2.runtime.TemplateFiller.fetchValue(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.util.List<java.lang.Object>>,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (value != null) { matcher.appendReplacement(stringBuffer, value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3381/buggy-version/src.main.java.org.gdl2.runtime.TemplateFiller.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.regex.Matcher.appendReplacement(java.lang.StringBuffer,java.lang.String)"], "Fixed commit": "1768d7baad11f502f8cfe88001aaa8e07fadaca1", "Url": "https://api.github.com/repos/gdl-lang/gdl2", "Date": "2018-10-12T12:33:13Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.length()) > 2000) { msg = (msg.substring(0, 1996)) + \"```...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1263/buggy-version/src.main.java.com.darkzek.ChickenBot.Trigger.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "253be8e3b91ac22974b5ee14f9c5c751ffceeb0b", "Url": "https://api.github.com/repos/DarkZek/ChickenBot", "Date": "2018-07-26T06:04:51Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.length()) > 2000) { msg = (msg.substring(0, 1996)) + \"```...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1263/buggy-version/src.main.java.com.darkzek.ChickenBot.CommandManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "253be8e3b91ac22974b5ee14f9c5c751ffceeb0b", "Url": "https://api.github.com/repos/DarkZek/ChickenBot", "Date": "2018-07-26T06:04:51Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<seedu.address.model.skill.Skill>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tagsIterator.hasNext()) { sb.append(tagsIterator.next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4491/buggy-version/src.main.java.seedu.address.model.skill.TagMatchesPredicate.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.Object)", "java.util.Iterator.next()"], "Fixed commit": "7ee628b79218ce92ee7af3e22a2b14217f5f2e91", "Url": "https://api.github.com/repos/Jason1im/main", "Date": "2018-04-08T10:17:17Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.huawei.ibc.model.controller.DatabaseControllerImpl.getNodeById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sNode instanceof com.huawei.ibc.model.controller.VirtualMachine) && ((((com.huawei.ibc.model.controller.VirtualMachine) (sNode)).getPortList().size()) != 0)) { sendError(((\"VM \" + (sNode.getId())) + \" already connected.\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6141/buggy-version/src.main.java.com.huawei.ibc.model.controller.GraphController.java", "BodyUseAPI": ["com.huawei.ibc.model.controller.GraphController.sendError(((\"VM \" + (sNode.getId())) + \" already connected.\"))", "com.huawei.ibc.model.controller.AbstractNode.getId()"], "Fixed commit": "c756f3eff85407091feaeb209fdb3a99d2354f62", "Url": "https://api.github.com/repos/oferby/ibc-demo", "Date": "2018-04-09T15:41:17Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.huawei.ibc.model.controller.DatabaseControllerImpl.getNodeById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tNode instanceof com.huawei.ibc.model.controller.VirtualMachine) && ((((com.huawei.ibc.model.controller.VirtualMachine) (tNode)).getPortList().size()) != 0)) { sendError(((\"VM \" + (tNode.getId())) + \" already connected.\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6141/buggy-version/src.main.java.com.huawei.ibc.model.controller.GraphController.java", "BodyUseAPI": ["com.huawei.ibc.model.controller.AbstractNode.getId()", "com.huawei.ibc.model.controller.GraphController.sendError(((\"VM \" + (tNode.getId())) + \" already connected.\"))"], "Fixed commit": "c756f3eff85407091feaeb209fdb3a99d2354f62", "Url": "https://api.github.com/repos/oferby/ibc-demo", "Date": "2018-04-09T15:41:17Z"},
{"Line": "=>1541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((randomCommand.size()) > 0) { com.Ben12345rocks.AdvancedCore.Util.Misc.MiscUtils.getInstance().executeConsoleCommands(user.getPlayer(), randomCommand.get(java.util.concurrent.ThreadLocalRandom.current().nextInt(randomCommand.size())), placeholders); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6988/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.Reward.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "com.Ben12345rocks.AdvancedCore.Util.Misc.MiscUtils.getInstance().executeConsoleCommands(user.getPlayer(),java.lang.String,java.util.HashMap<java.lang.String, java.lang.String>)", "java.util.concurrent.ThreadLocalRandom.nextInt(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "82449e053f3b19e177b346dd6775c57d8a0b0c6d", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2018-01-21T19:09:01Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["biolockj.Config.requireString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((clusterParams.indexOf(\"-l \")) > 0) { final java.lang.String paramsNoSpaces = clusterParams.substring(((clusterParams.indexOf(\"-l \")) + 3)).trim(); if ((paramsNoSpaces.length()) < 1) { throw new biolockj.exception.ConfigFormatException(biolockj.util.BashScriptBuilder.SCRIPT_SUBSCRIPT_HEADER, \"Param resource_list defined via \\\"-l\\\" but incomplete!\"); } if (paramsNoSpaces.contains(\" \")) { throw new biolockj.exception.ConfigFormatException(biolockj.util.BashScriptBuilder.SCRIPT_SUBSCRIPT_HEADER, \"Must not contain spaces!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2107/buggy-version/src.biolockj.util.BashScriptBuilder.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.trim()"], "Fixed commit": "bd28b43868209aa857a349c53df496ecfa19fb83", "Url": "https://api.github.com/repos/mikesioda/BioLockJ_Dev", "Date": "2018-05-07T04:06:41Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["biolockj.Config.requireString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(clusterParams.startsWith(\"#PBS\"))) { throw new biolockj.exception.ConfigFormatException(biolockj.util.BashScriptBuilder.SCRIPT_SUBSCRIPT_HEADER, \"Must begin with \\\"#PBS\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2107/buggy-version/src.biolockj.util.BashScriptBuilder.java", "BodyUseAPI": [], "Fixed commit": "bd28b43868209aa857a349c53df496ecfa19fb83", "Url": "https://api.github.com/repos/mikesioda/BioLockJ_Dev", "Date": "2018-05-07T04:06:41Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (npcScanner.hasNext()) npcScanner.nextLine();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1378/buggy-version/src.com.bayviewglen.zork.Game.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "3dbd33776c5349fb0cecada80a2651b77168f36d", "Url": "https://api.github.com/repos/Alex-Alexiev/Zork", "Date": "2018-05-10T19:37:14Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (retEvent != null) { eventCounterStatsService.incrementAccessByNameCount(retEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/3096/buggy-version/src.main.java.ua.epam.spring.hometask.aspect.CounterAspect.java", "BodyUseAPI": ["ua.epam.spring.hometask.service.interf.EventCounterStatsService.incrementAccessByNameCount(ua.epam.spring.hometask.domain.Event)"], "Fixed commit": "cc1f6dd2a9606775e3b623228e25bd57ec821eed", "Url": "https://api.github.com/repos/Alexey007gold/spring-core-hometask", "Date": "2018-05-04T10:16:23Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"\")) name = node.getType().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/8219/buggy-version/src.mainFiles.TypeFinder.java", "BodyUseAPI": [], "Fixed commit": "fcfead43015ae54a543b48e8b835468dc54d1b25", "Url": "https://api.github.com/repos/zachalbers/SENG300-Iteration1", "Date": "2018-03-27T23:39:16Z"},
{"Line": "=>1320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyCode == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/122/buggy-version/CodenameOne.src.com.codename1.ui.MenuBar.java", "BodyUseAPI": [], "Fixed commit": "31558b83dd2e5086ae4acf1f12aa748c29edd7fd", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2018-08-20T16:57:08Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mapView)) { mapView.onResume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6123/buggy-version/wiglewifiwardriving.src.main.java.net.wigle.wigleandroid.DBResultActivity.java", "BodyUseAPI": [], "Fixed commit": "e922881f6792b83eb6037f1c36df114d8f95d74a", "Url": "https://api.github.com/repos/bobzilladev/wigle-wifi-wardriving", "Date": "2018-03-13T20:31:51Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((webdriver) != null) webdriver.quit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1523/buggy-version/src.main.java.com.xceptance.neodymium.module.statement.browser.BrowserStatement.java", "BodyUseAPI": [], "Fixed commit": "10482c97db0a4e60d8ff9861ee0e45726ba5f550", "Url": "https://api.github.com/repos/Xceptance/neodymium-library", "Date": "2018-05-24T15:35:01Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.length()) < 3) throw new java.lang.IllegalArgumentException(\"Interest must be more than 2 characters!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1635/buggy-version/Account.java", "BodyUseAPI": [], "Fixed commit": "2eba875b45da9cda4beba83887a7c8c282f18fbc", "Url": "https://api.github.com/repos/elwoodwarren/Forbai", "Date": "2018-08-24T18:37:45Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m.equals(\"The\")) throw new java.lang.IllegalArgumentException(\"Not a valid interest!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1635/buggy-version/Account.java", "BodyUseAPI": [], "Fixed commit": "2eba875b45da9cda4beba83887a7c8c282f18fbc", "Url": "https://api.github.com/repos/elwoodwarren/Forbai", "Date": "2018-08-24T18:37:45Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (v == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1766/buggy-version/annotations.builder.src.main.java.io.sundr.builder.internal.resources.ValidationUtils.java", "BodyUseAPI": [], "Fixed commit": "6c45aac6efe9ba5bad0da36f6745ee9c29da3aea", "Url": "https://api.github.com/repos/sundrio/sundrio", "Date": "2018-07-26T14:27:01Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mdt.validasiHari(thnak, blnak, hariak)) { obdat.add(new tugascasei.MyDate(hariak, blnak, thnak)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1485/buggy-version/src.tugascasei.DateCalc.java", "BodyUseAPI": ["java.util.List<tugascasei.MyDate>.add(tugascasei.MyDate)"], "Fixed commit": "d84f2640b68c396b71c626c37cd77d09159c2277", "Url": "https://api.github.com/repos/wunsc/TugasCase1", "Date": "2018-01-29T09:41:37Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)", "java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mdt.validasiHari(thnaw, blnaw, hariaw)) { obdat.add(new tugascasei.MyDate(hariaw, blnaw, thnaw)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1485/buggy-version/src.tugascasei.DateCalc.java", "BodyUseAPI": ["java.util.List<tugascasei.MyDate>.add(tugascasei.MyDate)"], "Fixed commit": "d84f2640b68c396b71c626c37cd77d09159c2277", "Url": "https://api.github.com/repos/wunsc/TugasCase1", "Date": "2018-01-29T09:41:37Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(input.exists())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/6487/buggy-version/14Cup.app.src.main.java.com.moufee.a14cup.repository.ShoppingListRepository.java", "BodyUseAPI": [], "Fixed commit": "3fd0616ebf26391575bb0d90d1878a1c646d1721", "Url": "https://api.github.com/repos/aberendsen18/408_Team16_Project", "Date": "2018-03-26T03:57:42Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((day.equalsIgnoreCase(\"\ufffd'\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\")) || (day.equalsIgnoreCase(\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"))) { java.lang.System.out.println(\"1. \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd, 8-106, \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd.\ufffd.\"); if (group == 1) { java.lang.System.out.println(\"2. \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd, 8-212, \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd.\ufffd.\"); } if (group == 2) { java.lang.System.out.println(\"2. \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd, 8-211, \u0533\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd.\ufffd.\"); } }else if ((day.equalsIgnoreCase(\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\")) && (day.equalsIgnoreCase(\"\ufffd\ufffd\ufffd\ufffd\ufffd\"))) { java.lang.System.out.println(\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd.\"); }else { java.lang.System.out.println(\"\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7015/buggy-version/src.Main.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "f6d882a08b24abe324fd58bb363aa58c220cecb3", "Url": "https://api.github.com/repos/inarvos/java-learning", "Date": "2018-04-21T08:39:33Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_SIGNALING_FACILITIES_ALREADY_INITIALIZED)) { return \"Device initialization failed; siginaling facilities already intialized\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_AUTHENTICATION_FORBIDDEN)) { return \"Connection failed to authenticate with Service\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_DEVICE_NOT_READY)) { return \"Failed to initiate connection; Device is not in READY state\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_URI_INVALID)) { return \"Connection URI is invalid\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_PEER_UNAVAILABLE)) { return \"Failed to initiate connection; peer is unavailable\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_SIGNALING_TIMEOUT)) { return \"Connection timed out (signaling)\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_MEDIA_TIMEOUT)) { return \"Connection timed out (media)\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_COULD_NOT_CONNECT)) { return \"Failed to initiate connection; could not connect to service\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_PEER_NOT_FOUND)) { return \"Failed to initiate connection; peer not found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_SERVICE_UNAVAILABLE)) { return \"Failed to initiate connection; service is unavailable\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_SERVICE_INTERNAL_ERROR)) { return \"Failed to initiate connection; service internal error\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_PARSE_CUSTOM_SIP_HEADERS)) { return \"Failed to initiate connection; error parsing custom SIP headers\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_DISCONNECT_FAILED)) { return \"Failed to disconnect connection\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_ACCEPT_FAILED)) { return \"Failed to accept connection\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_ACCEPT_WRONG_STATE)) { return \"Failed to accept connection; connection state should be CONNECTING\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_IGNORE_WRONG_STATE)) { return \"Failed to ignore connection; connection state should be CONNECTING\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_REJECT_WRONG_STATE)) { return \"Failed to reject connection; connection state should be CONNECTING\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_DISCONNECT_WRONG_STATE)) { return \"Failed to disconnect connection; connection state is already DISCONNECTED\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_DECLINE_FAILED)) { return \"Failed to decline connection\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_DTMF_DIGITS_FAILED)) { return \"Failed to send DTMF digits over connection\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_DTMF_DIGITS_WRONG_STATE)) { return \"Failed to send DTMF digits; connection state should be CONNECTED\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_REGISTRARLESS_FULL_URI_REQUIRED)) { return \"Failed to initiate connection: when RCDevice is configured with no domain you need to provide full SIP URI in connection peer\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_WEBRTC_PEERCONNECTION_ERROR)) { return \"Webrtc Peer Connection error\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_WEBRTC_TURN_ERROR)) { return \"Error retrieving TURN servers\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_PERMISSION_DENIED)) { return \"Failed to initiate connection; missing Android permissions\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_UNTRUSTED_SERVER)) { return \"Failed to initiate connection; server not trusted\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_MISSING_PEER)) { return \"Failed to initiate connection due to parameter validation error; missing peer\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_VIDEO_CALL_VIEWS_MANDATORY)) { return \"Failed to initiate connection due to parameter validation error; video call made without passing local and/or remote views\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_AUDIO_CALL_VIDEO_CODEC_FORBIDDEN)) { return \"Failed to initiate connection due to parameter validation error; video codec not allowed to be specified in an audio call\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_AUDIO_CALL_VIDEO_RESOLUTION_FORBIDDEN)) { return \"Failed to initiate connection due to parameter validation error; video resolution not allowed to be specified in an audio call\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_AUDIO_CALL_VIDEO_FRAME_RATE_FORBIDDEN)) { return \"Failed to initiate connection due to parameter validation error; video frame rate not allowed to be specified in an audio call\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_CONNECTION_WEBRTC_CANDIDATES_TIMED_OUT)) { return \"Failed to collect any candidates on time; please check your network settings and connectivity or consider increasing candidate timeout\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_MESSAGE_AUTHENTICATION_FORBIDDEN)) { return \"Message failed to authenticate with Service\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_MESSAGE_URI_INVALID)) { return \"Message URI is invalid\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_MESSAGE_PEER_UNAVAILABLE)) { return \"Failed to send message; peer is unavailable\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_MESSAGE_TIMEOUT)) { return \"Message timed out\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_MESSAGE_COULD_NOT_CONNECT)) { return \"Failed to send message; could not connect to service\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_MESSAGE_PEER_NOT_FOUND)) { return \"Failed to send message; peer not found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_MESSAGE_SERVICE_UNAVAILABLE)) { return \"Failed to send message; service is unavailable\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_MESSAGE_SEND_FAILED_DEVICE_OFFLINE)) { return \"Failed to send message; RCDevice is offline\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_ACCOUNT_SID_MISSING)) { return \"Failed to register/update for push notification; Account sid cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_CLIENT_SID_MISSING)) { return \"Failed to register/update for push notification; Client sid cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_CREDENTIALS_MISSING)) { return \"Failed to register/update for push notification; Credentials cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_BINDING_MISSING)) { return \"Failed to register/update for push notification; Binding cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_APPLICATION_MISSING)) { return \"Failed to register/update for push notification; Application cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_FCM_SERVER_KEY_MISSING)) { return \"Failed to register/update for push notification; fcm server key cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_APPLICATION_NAME_MISSING)) { return \"Failed to register/update for push notification; Application name cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_ACCOUNT_EMAIL_MISSING)) { return \"Failed to register/update for push notification; Account email cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_ACCOUNT_PASSWORD_MISSING)) { return \"Failed to register/update for push notification; Account password cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_PUSH_DOMAIN_MISSING)) { return \"Failed to register/update for push notification; Push domain cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_RESTCOMM_DOMAIN_MISSING)) { return \"Failed to register/update for push notification; Restcomm Connect Domain cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_ENABLE_DISABLE_PUSH_NOTIFICATION)) { return \"Failed to register/update for push notification; Enable/Disable for push cannot be found\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_INVALID_HTTP_DOMAIN)) { return \"Failed to register/update for push notification; Invalid http domain.\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_INVALID_PUSH_DOMAIN)) { return \"Failed to register/update for push notification; Invalid push domain.\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_UNKNOWN_ERROR)) { return \"Failed to register/update for push notification; Unknown error.\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_AUTHENTICATION_FORBIDDEN)) { return \"Failed to register/update for push notification; Could not authenticate.\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_HTTP_NOT_FOUND)) { return \"Failed to register/update for push notification; Http 404 not found.\"; }else if (errorCode == (org.restcomm.android.sdk.RCClient.ErrorCodes.ERROR_DEVICE_PUSH_NOTIFICATION_TIMED_OUT)) { return \"Failed to register/update for push notification; Request timed out.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/4385/buggy-version/restcomm.android.sdk.src.main.java.org.restcomm.android.sdk.RCClient.java", "BodyUseAPI": [], "Fixed commit": "5def716bb7e13f87cb30f19810359d4316508ef6", "Url": "https://api.github.com/repos/ognjenns/restcomm-android-sdk", "Date": "2018-01-19T14:24:38Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (credentials != null) { this.sonarApiUser = ((credentials.getUsername()) != null) ? credentials.getUsername() : sonarApiUser; this.sonarApiPw = ((credentials.getPassword().getPlainText()) != null) ? credentials.getPassword().getPlainText() : sonarApiPw; }else { this.sonarApiUser = sonarApiUser; this.sonarApiPw = sonarApiPw; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/7991/buggy-version/src.main.java.javagh.jenkins.mashupportlets.SonarIssuesPortlet.java", "BodyUseAPI": [], "Fixed commit": "e3ff9e2bc480b77a20bab6963108d2ad64c84e41", "Url": "https://api.github.com/repos/mousecage/mashup-portlets-plugin", "Date": "2018-02-08T03:32:27Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offers) != null) { for (model.Offer offer : offers) { if ((offer.getOfferId()) == offerId) res = offer; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2289/buggy-version/src.main.java.model.Company.java", "BodyUseAPI": [], "Fixed commit": "dd66eb5369e516399b8801c8426b504e01962582", "Url": "https://api.github.com/repos/eladgur/CS-Final-Project", "Date": "2018-09-06T15:00:32Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parts[2].toUpperCase().equals(main.client.chatwindow.Listener.username.toUpperCase())) { java.lang.System.out.println(\"J'ignore le message\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/668/buggy-version/client.src.main.client.chatwindow.Listener.java", "BodyUseAPI": [], "Fixed commit": "a5d7a4490c1af6d2007f0b0fae2196908c2998c4", "Url": "https://api.github.com/repos/Hephixor/PC2R_BOGGLE_PROJECT", "Date": "2018-05-10T21:33:47Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((s.contains(\":\")) && (!(s.contains(\"_\")))) { s = s.replace(\":\", \"_\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/5854/buggy-version/src.main.java.net.whydah.sso.application.types.Tag.java", "BodyUseAPI": [], "Fixed commit": "953621facf9122f40c06860849a52f77920b7dc4", "Url": "https://api.github.com/repos/Cantara/Whydah-TypeLib", "Date": "2018-08-22T11:00:57Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((strs.length) < 0) { this.file = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1254/buggy-version/src.main.java.operator.ScanOperator.java", "BodyUseAPI": [], "Fixed commit": "21348e5a5ef90f3bd57a5c4c467442294a2b6c0c", "Url": "https://api.github.com/repos/fseldow/SQL_interpreter_p1", "Date": "2018-09-23T19:42:33Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tableIndex < 0) { item = plainSelect.getFromItem().toString(); }else { item = plainSelect.getJoins().get(tableIndex).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/1254/buggy-version/src.main.java.operator.ScanOperator.java", "BodyUseAPI": [], "Fixed commit": "21348e5a5ef90f3bd57a5c4c467442294a2b6c0c", "Url": "https://api.github.com/repos/fseldow/SQL_interpreter_p1", "Date": "2018-09-23T19:42:33Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (defConsumer != null) { instruction.visitEachOutput(defConsumer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V162/2745/buggy-version/compiler.src.org.graalvm.compiler.lir.src.org.graalvm.compiler.lir.saraverify.SARAVerifyUtil.java", "BodyUseAPI": ["org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(org.graalvm.compiler.lir.InstructionValueConsumer)"], "Fixed commit": "a98d81cf749b74eb718c0e79cede24db38c921a3", "Url": "https://api.github.com/repos/Schoergi/graal", "Date": "2018-06-03T15:15:44Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (service.getSpec().getPorts().isEmpty()) { com.dtforce.spring.kubernetes.KubernetesDiscoveryClient.log.error(\"getInstances: service '{}' has no ports\", serviceId); return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3793/buggy-version/src.main.java.com.dtforce.spring.kubernetes.KubernetesDiscoveryClient.java", "BodyUseAPI": [], "Fixed commit": "a94881ef3f77ae87f59a83f809858ca4c6b68e47", "Url": "https://api.github.com/repos/DTForce/kubernetes-discovery-spring", "Date": "2018-03-07T14:40:31Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.dtforce.spring.kubernetes.DiscoveryClientServerList.log.isDebugEnabled()) { com.dtforce.spring.kubernetes.DiscoveryClientServerList.log.debug(\"getUpdatedListOfServers: updated servers list = {}\", servers.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3793/buggy-version/src.main.java.com.dtforce.spring.kubernetes.DiscoveryClientServerList.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,servers.toString())"], "Fixed commit": "a94881ef3f77ae87f59a83f809858ca4c6b68e47", "Url": "https://api.github.com/repos/DTForce/kubernetes-discovery-spring", "Date": "2018-03-07T14:40:31Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openforis.collect.android.collectadapter.NodeChangeSetParser.getOrAddNodeChange(org.openforis.collect.android.collectadapter.UiNode,java.util.Map<org.openforis.collect.android.collectadapter.UiNode, org.openforis.collect.android.collectadapter.UiNodeChange>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((change.validationErrors) == null) && (childNode.hasValidationErrors())) { change.validationErrors = java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/355/buggy-version/model.src.main.java.org.openforis.collect.android.collectadapter.NodeChangeSetParser.java", "BodyUseAPI": [], "Fixed commit": "888b2d604439b8e4820a7762bdbeffc746afa365", "Url": "https://api.github.com/repos/openforis/collect-mobile", "Date": "2018-02-28T10:38:02Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((photoList.get(position).getTitle()) != null) { holder.title.setText(photoList.get(position).getTitle()); }else { holder.title.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1733/buggy-version/app.src.main.java.com.eplanner.galary.PhotoAdapter.java", "BodyUseAPI": ["java.util.List<com.eplanner.domain.Photo>.get(int)", "photoList.get(position).getTitle()", "android.widget.TextView.setText(photoList.get(position).getTitle())"], "Fixed commit": "4c35b9be31e9ff2de443a9104f819dbe93a2c72d", "Url": "https://api.github.com/repos/kjbaxter/ePlanner", "Date": "2018-04-18T02:47:20Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pod.getStatus().getPhase().equals(\"Running\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4642/buggy-version/java.operator.src.main.java.com.instaclustr.cassandra.operator.service.CassandraHealthCheckService.java", "BodyUseAPI": [], "Fixed commit": "fd03aeda8a77214fed523884fb26135364566f16", "Url": "https://api.github.com/repos/liwang-pivotal/cassandra-operator", "Date": "2018-06-12T22:06:39Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movie) != null) { initLoader(movie.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6737/buggy-version/app.src.main.java.com.udacity.and.popularmovies.ui.MovieReviewFragment.java", "BodyUseAPI": [], "Fixed commit": "9760a675d905a9b24a859f73f7936765098b6185", "Url": "https://api.github.com/repos/GGcNeaR/and-popular-movies-part2", "Date": "2018-03-19T19:48:09Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(contract.getIsAddApproval())) { if (!(proposalCapsule.getApprovals().contains(contract.getOwnerAddress()))) { throw new org.tron.core.exception.ContractValidateException(((((\"witness [\" + readableOwnerAddress) + \"]has not approved proposal[\") + (contract.getProposalId())) + \"] before\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7717/buggy-version/src.main.java.org.tron.core.actuator.ProposalApproveActuator.java", "BodyUseAPI": ["org.tron.protos.Contract.ProposalApproveContract.getProposalId()", "org.tron.protos.Contract.ProposalApproveContract.getOwnerAddress()", "proposalCapsule.getApprovals().contains(contract.getOwnerAddress())"], "Fixed commit": "ebdce9e2341074768794a96a4cdc4a79252230ee", "Url": "https://api.github.com/repos/tronprotocol/java-tron", "Date": "2018-07-10T07:09:22Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loc == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5984/buggy-version/src.hu.montlikadani.TeleportSigns.ConfigData.java", "BodyUseAPI": [], "Fixed commit": "4f992dd490eb90aa45d6245f7d78ce24933fb867", "Url": "https://api.github.com/repos/montlikadani/TeleportSigns", "Date": "2018-06-09T08:01:09Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (proguard.inject.FlowTraceWriter.s_flowSaved) { if (((proguard.inject.FlowTraceWriter.s_tid) == tid) && ((proguard.inject.FlowTraceWriter.s_thisID) == thisID)) { boolean s_isInnerLog = ((proguard.inject.FlowTraceWriter.s_log_flags) & (proguard.inject.FlowTraceWriter.LOG_FLAG_INNER_LOG)) == (proguard.inject.FlowTraceWriter.LOG_FLAG_INNER_LOG); boolean s_isEnter = (proguard.inject.FlowTraceWriter.s_log_type) == (proguard.inject.FlowTraceWriter.LOG_INFO_ENTER); if (((!isInnerLog) && isEnter) && (s_isInnerLog && s_isEnter)) { proguard.inject.FlowTraceWriter.s_thisLineNumber = thisLineNumber; sendSaved = true; sendCurrent = false; } if ((isInnerLog && (!isEnter)) && ((!s_isInnerLog) && (!s_isEnter))) { sendCurrent = false; } }else { sendSaved = true; } proguard.inject.FlowTraceWriter.s_flowSaved = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9278/buggy-version/flowtraceinjector.src.main.java.proguard.inject.FlowTraceWriter.java", "BodyUseAPI": [], "Fixed commit": "3d39cf37accc001486d35ee034f7792ec26390fd", "Url": "https://api.github.com/repos/simonyanmikayel/FlowTraceAndroid", "Date": "2018-10-02T20:37:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sendSaved) proguard.inject.FlowTraceWriter.FlowTraceLogFlow(proguard.inject.FlowTraceWriter.s_log_type, proguard.inject.FlowTraceWriter.s_log_flags, proguard.inject.FlowTraceWriter.s_thisClassName, proguard.inject.FlowTraceWriter.s_thisMethodName, proguard.inject.FlowTraceWriter.s_callClassName, proguard.inject.FlowTraceWriter.s_callMethodName, proguard.inject.FlowTraceWriter.s_thisID, proguard.inject.FlowTraceWriter.s_callID, proguard.inject.FlowTraceWriter.s_thisLineNumber, proguard.inject.FlowTraceWriter.s_callLineNumber);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9278/buggy-version/flowtraceinjector.src.main.java.proguard.inject.FlowTraceWriter.java", "BodyUseAPI": [], "Fixed commit": "3d39cf37accc001486d35ee034f7792ec26390fd", "Url": "https://api.github.com/repos/simonyanmikayel/FlowTraceAndroid", "Date": "2018-10-02T20:37:08Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isInnerLog && isEnter) || ((!isInnerLog) && (!isEnter))) { proguard.inject.FlowTraceWriter.s_log_type = log_type; proguard.inject.FlowTraceWriter.s_log_flags = log_flags; proguard.inject.FlowTraceWriter.s_thisClassName = thisClassName; proguard.inject.FlowTraceWriter.s_thisMethodName = thisMethodName; proguard.inject.FlowTraceWriter.s_callClassName = callClassName; proguard.inject.FlowTraceWriter.s_callMethodName = callMethodName; proguard.inject.FlowTraceWriter.s_thisLineNumber = thisLineNumber; proguard.inject.FlowTraceWriter.s_callLineNumber = callLineNumber; proguard.inject.FlowTraceWriter.s_thisID = thisID; proguard.inject.FlowTraceWriter.s_callID = callID; proguard.inject.FlowTraceWriter.s_tid = tid; proguard.inject.FlowTraceWriter.s_flowSaved = true; }else { proguard.inject.FlowTraceWriter.s_flowSaved = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9278/buggy-version/flowtraceinjector.src.main.java.proguard.inject.FlowTraceWriter.java", "BodyUseAPI": [], "Fixed commit": "3d39cf37accc001486d35ee034f7792ec26390fd", "Url": "https://api.github.com/repos/simonyanmikayel/FlowTraceAndroid", "Date": "2018-10-02T20:37:08Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sc.hasNext()) { java.lang.System.out.println(sc.next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6740/buggy-version/layout.java", "BodyUseAPI": ["java.util.Scanner.next()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "4617505693cf0a44d3d5c6b8f3beba64fee845dc", "Url": "https://api.github.com/repos/emymorningstar/javagame", "Date": "2018-02-02T01:08:51Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyboardControls.isKey(java.awt.event.KeyEvent.VK_B)) { launchBomb(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9796/buggy-version/src.worldwark.WorldWarK.java", "BodyUseAPI": [], "Fixed commit": "280909911efd197bb9fd19557d2db00a03f8f11f", "Url": "https://api.github.com/repos/jackisrong/WorldWarK", "Date": "2018-06-06T15:35:38Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loadType) != (com.danielme.muspyforandroid.ui.recyclerview.GenericRecyclerViewFragment.LoadType.ENDLESS)) { getDataFromAdapter().clear(); getAdapter().notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2238/buggy-version/app.src.main.java.com.danielme.muspyforandroid.ui.recyclerview.GenericRecyclerViewFragment.java", "BodyUseAPI": [], "Fixed commit": "da65864f61d0f7b58bc9262e50abe77eb2091a7a", "Url": "https://api.github.com/repos/danielme-com/Muspy-for-Android", "Date": "2018-03-14T18:49:00Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((offset > 0) && (halfOffsetAngle < (((java.lang.Math.PI) / 2) + (org.geolatte.maprenderer.java2D.PerpendicularOffsetStroke.EPSILON)))) && (halfOffsetAngle > (((java.lang.Math.PI) / 2) - (org.geolatte.maprenderer.java2D.PerpendicularOffsetStroke.EPSILON)))) || (((offset < 0) && (halfOffsetAngle > (((-(java.lang.Math.PI)) / 2) - (org.geolatte.maprenderer.java2D.PerpendicularOffsetStroke.EPSILON)))) && (halfOffsetAngle < (((-(java.lang.Math.PI)) / 2) + (org.geolatte.maprenderer.java2D.PerpendicularOffsetStroke.EPSILON))))) { org.geolatte.maprenderer.java2D.PerpendicularOffsetStroke.LOGGER.debug(\"CORNER CASE\"); }else if (((offset > 0) && (halfOffsetAngle < ((-(java.lang.Math.PI)) / 4))) || ((offset < 0) && (halfOffsetAngle > ((java.lang.Math.PI) / 4)))) { iRadius = offset / (java.lang.Math.cos(((java.lang.Math.PI) / 4))); float iloX = lastX + ((float) (iRadius * (java.lang.Math.cos((((segmentAngle + ((java.lang.Math.PI) / 2)) - (2 * halfOffsetAngle)) - (((java.lang.Math.signum(offset)) * (java.lang.Math.PI)) / 4)))))); float iloY = lastY + ((float) (iRadius * (java.lang.Math.sin((((segmentAngle + ((java.lang.Math.PI) / 2)) - (2 * halfOffsetAngle)) - (((java.lang.Math.signum(offset)) * (java.lang.Math.PI)) / 4)))))); result.lineTo(iloX, iloY); iloX = lastX + ((float) (iRadius * (java.lang.Math.cos(((segmentAngle + ((java.lang.Math.PI) / 2)) + (((java.lang.Math.signum(offset)) * (java.lang.Math.PI)) / 4)))))); iloY = lastY + ((float) (iRadius * (java.lang.Math.sin(((segmentAngle + ((java.lang.Math.PI) / 2)) + (((java.lang.Math.signum(offset)) * (java.lang.Math.PI)) / 4)))))); result.lineTo(iloX, iloY); }else { float iloX = lastX + ((float) (iRadius * (java.lang.Math.cos(((segmentAngle + ((java.lang.Math.PI) / 2)) - halfOffsetAngle))))); float iloY = lastY + ((float) (iRadius * (java.lang.Math.sin(((segmentAngle + ((java.lang.Math.PI) / 2)) - halfOffsetAngle))))); result.lineTo(iloX, iloY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/878/buggy-version/src.main.java.org.geolatte.maprenderer.java2D.PerpendicularOffsetStroke.java", "BodyUseAPI": ["java.lang.Math.sin(double)", "java.lang.Math.cos(double)", "java.lang.Math.signum(double)", "java.lang.Math.signum(double)", "java.lang.Math.sin(double)", "java.lang.Math.signum(double)", "java.lang.Math.cos(double)", "java.lang.Math.cos(double)", "java.lang.Math.cos(double)", "java.lang.Math.sin(double)", "java.lang.Math.signum(double)"], "Fixed commit": "83168c50b790b3fe2e7afacc941ce0dddc3fbb60", "Url": "https://api.github.com/repos/maesenka/geolatte-maprenderer", "Date": "2014-08-20T13:30:29Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stringValue == null) { if ((field.get(instance)) == null) return java.util.Optional.of(java.util.stream.Stream.empty()); else return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6703/buggy-version/src.main.java.com.sheiden.configuration.ConfigurationReader.java", "BodyUseAPI": [], "Fixed commit": "82c1f95d0b309c80e13ad83ac0900414ebc43535", "Url": "https://api.github.com/repos/sebastianheiden/configuration-reader", "Date": "2018-10-12T15:43:05Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(filePath.equals(VirtualFile.VIRTUAL_FILE_NAME))) { cu.setFile(new java.io.File(filePath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8782/buggy-version/src.main.java.spoon.reflect.factory.CompilationUnitFactory.java", "BodyUseAPI": ["spoon.reflect.cu.CompilationUnit.setFile(java.io.File)"], "Fixed commit": "259de5c1fe9142de86539544e03285d72bfe3f99", "Url": "https://api.github.com/repos/guillaume-bosc/spoon", "Date": "2018-06-19T19:50:45Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.infoflow.data.pathBuilders.TaintlysisContextSensitivePathBuilder.getSourceInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sourceInfo == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5792/buggy-version/soot-infoflow.src.soot.jimple.infoflow.data.pathBuilders.TaintlysisContextSensitivePathBuilder.java", "BodyUseAPI": [], "Fixed commit": "10f6a6ec1e26278c74ae4568c2460f354749e7b9", "Url": "https://api.github.com/repos/miguelvelezmj25/FlowDroid", "Date": "2018-04-12T18:52:33Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.results.getResults().values()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((values.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5792/buggy-version/soot-infoflow.src.soot.jimple.infoflow.data.pathBuilders.TaintlysisContextSensitivePathBuilder.java", "BodyUseAPI": [], "Fixed commit": "10f6a6ec1e26278c74ae4568c2460f354749e7b9", "Url": "https://api.github.com/repos/miguelvelezmj25/FlowDroid", "Date": "2018-04-12T18:52:33Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name.contains(\"[\")) || (name.equals(\"array\"))) { java.lang.String itemTypeName = typeDeclaration.items().name(); if (\"object\".equals(itemTypeName)) { itemTypeName = typeDeclaration.items().type(); } if (\"object\".equals(itemTypeName)) { throw new org.raml.ramltopojo.array.GenerationException(\"unable to create type array item of type object (or maybe an inline array type ?)\"); } return com.squareup.javapoet.ParameterizedTypeName.get(com.squareup.javapoet.ClassName.get(java.util.List.class), org.raml.ramltopojo.array.TypeDeclarationType.calculateTypeName(itemTypeName, typeDeclaration.items(), generationContext, type).box()); }else { return javaClassName(generationContext, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5556/buggy-version/raml-to-pojo.src.main.java.org.raml.ramltopojo.array.ArrayTypeHandler.java", "BodyUseAPI": [], "Fixed commit": "dd5dcb10dd367ec4203a112fe265bd0374f507c2", "Url": "https://api.github.com/repos/mulesoft-labs/raml-java-tools", "Date": "2018-08-26T17:45:29Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { com.facebook.stetho.Stetho.initializeWithDefaults(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3970/buggy-version/app.src.main.java.cz.jtek.popularmovies.PopularMoviesApplication.java", "BodyUseAPI": [], "Fixed commit": "9d71bc56983f6cbe693be48539c7fb8ee7c55c36", "Url": "https://api.github.com/repos/jgroman/popular-movies", "Date": "2018-04-10T08:33:19Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(\"\")) return 0L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/689/buggy-version/app.src.main.java.info.nightscout.utils.SafeParse.java", "BodyUseAPI": [], "Fixed commit": "a514738affe99a8efef9007d4fedb52e6e354d84", "Url": "https://api.github.com/repos/MarkMpn/AndroidAPS", "Date": "2017-06-20T17:58:43Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(\"\")) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/689/buggy-version/app.src.main.java.info.nightscout.utils.SafeParse.java", "BodyUseAPI": [], "Fixed commit": "a514738affe99a8efef9007d4fedb52e6e354d84", "Url": "https://api.github.com/repos/MarkMpn/AndroidAPS", "Date": "2017-06-20T17:58:43Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(\"\")) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/689/buggy-version/app.src.main.java.info.nightscout.utils.SafeParse.java", "BodyUseAPI": [], "Fixed commit": "a514738affe99a8efef9007d4fedb52e6e354d84", "Url": "https://api.github.com/repos/MarkMpn/AndroidAPS", "Date": "2017-06-20T17:58:43Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mycompany.sip.MeasureSpec.getSize(int)", "com.mycompany.sip.MeasureSpec.getSize(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (heightSize > widthSize) { int temp = heightSize; heightSize = widthSize; widthSize = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9240/buggy-version/app.src.main.java.com.mycompany.sip.DrawingView.java", "BodyUseAPI": [], "Fixed commit": "99f90d0aa610dd6525276c8c3409d64a9ded54a1", "Url": "https://api.github.com/repos/EFletcher2014/Mapp", "Date": "2018-09-15T23:41:24Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clearcontrol.microscope.lightsheet.simulation.SimulatedLightSheetMicroscope.addTimelapse()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lTimelapse instanceof clearcontrol.microscope.lightsheet.timelapse.LightSheetTimelapse) { ((clearcontrol.microscope.lightsheet.timelapse.LightSheetTimelapse) (lTimelapse)).getListOfActivatedSchedulers().add(new clearcontrol.microscope.lightsheet.warehouse.instructions.DropAllContainersOfTypeInstruction(clearcontrol.microscope.lightsheet.warehouse.containers.StackInterfaceContainer.class, getDataWarehouse())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6079/buggy-version/src.clearcontrol.microscope.lightsheet.simulation.SimulatedLightSheetMicroscope.java", "BodyUseAPI": [], "Fixed commit": "552762a735586d480bb3e98f1a62ec72a6f454f5", "Url": "https://api.github.com/repos/ClearControl/clearcontrol-lightsheet", "Date": "2018-08-03T14:18:58Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (icon.equals(context.getString(R.string.fizyka_tom1))) { coverId = R.drawable.fizyka_tom1; }else if (icon.equals(context.getString(R.string.fizyka_tom2))) { coverId = R.drawable.fizyka_tom2; }else if (icon.equals(context.getString(R.string.fizyka_tom3))) { coverId = R.drawable.fizyka_tom3; }else if (icon.equals(context.getString(R.string.macro_icon))) { coverId = R.drawable.macro_econ_lg; }else if (icon.equals(context.getString(R.string.micro_icon))) { coverId = R.drawable.micro_econ_lg; }else if (icon.equals(context.getString(R.string.ap_macro_icon))) { coverId = R.drawable.ap_macro; }else if (icon.equals(context.getString(R.string.ap_micro_icon))) { coverId = R.drawable.ap_micro; }else if (icon.equals(context.getString(R.string.intro_business_icon))) { coverId = R.drawable.intro_to_business; }else if (icon.equals(context.getString(R.string.business_ethics_icon))) { coverId = R.drawable.business_ethics; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7694/buggy-version/app.src.main.java.org.openstaxcollege.android.utils.OSCUtil.java", "BodyUseAPI": ["java.lang.String.equals(context.getString(R.string.fizyka_tom2))", "java.lang.String.equals(context.getString(R.string.business_ethics_icon))", "java.lang.String.equals(context.getString(R.string.fizyka_tom3))", "java.lang.String.equals(context.getString(R.string.ap_macro_icon))", "android.content.Context.getString(R.string.ap_micro_icon)", "java.lang.String.equals(context.getString(R.string.micro_icon))", "java.lang.String.equals(context.getString(R.string.ap_micro_icon))", "java.lang.String.equals(context.getString(R.string.macro_icon))", "android.content.Context.getString(R.string.intro_business_icon)", "android.content.Context.getString(R.string.micro_icon)", "android.content.Context.getString(R.string.ap_macro_icon)", "android.content.Context.getString(R.string.fizyka_tom2)", "android.content.Context.getString(R.string.macro_icon)", "android.content.Context.getString(R.string.fizyka_tom3)", "android.content.Context.getString(R.string.business_ethics_icon)", "java.lang.String.equals(context.getString(R.string.intro_business_icon))"], "Fixed commit": "6ae9b64a8c4f399376143a4540a4698f0c582353", "Url": "https://api.github.com/repos/Connexions/OSCAndroid", "Date": "2018-10-12T20:03:29Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minute == value) { return i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2234/buggy-version/singledateandtimepicker.src.main.java.com.github.florent37.singledateandtimepicker.widget.WheelMinutePicker.java", "BodyUseAPI": [], "Fixed commit": "130e84b878e69b240a44bcd0383373fdb27c19a7", "Url": "https://api.github.com/repos/florent37/SingleDateAndTimePicker", "Date": "2018-09-04T17:21:05Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["annotation.getType().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.power.doc.builder.SourceBuilder.GET_MAPPING.equals(annotationName)) { if (null == (annotation.getNamedParameter(\"value\"))) { url = \"/\"; }else { url = annotation.getNamedParameter(\"value\").toString(); } methodType = \"get\"; methodCounter++; }else if (com.power.doc.builder.SourceBuilder.POST_MAPPING.equals(annotationName)) { if (null == (annotation.getNamedParameter(\"value\"))) { url = \"/\"; }else { url = annotation.getNamedParameter(\"value\").toString(); } methodType = \"post\"; methodCounter++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4513/buggy-version/smart-doc.src.main.java.com.power.doc.builder.SourceBuilder.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "03877f95cb0ea04a056950234a97931fbf9d925f", "Url": "https://api.github.com/repos/shalousun/ApplicationPower", "Date": "2018-08-29T11:43:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (write) m.visitInsn(cornflakes.compiler.ACONST_NULL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9587/buggy-version/src.cornflakes.compiler.ExpressionCompiler.java", "BodyUseAPI": [], "Fixed commit": "d09fb178448603b3cb9ef60020bf344d8f265aa4", "Url": "https://api.github.com/repos/LucasBaizer/Cornflakes", "Date": "2018-02-03T21:06:38Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["driver.findElements(element).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((elmtObj != null) && (((io.appium.java_client.MobileElement) (elmtObj)).isDisplayed())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7141/buggy-version/source.src.main.java.org.cerberus.service.appium.impl.AppiumService.java", "BodyUseAPI": [], "Fixed commit": "9b8bf2812af62dde5c6b54b5414cbd96a0ac2391", "Url": "https://api.github.com/repos/cerberustesting/cerberus-source", "Date": "2018-10-10T09:47:08Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mNumberCallTextView.getText().toString().isEmpty())) { mNumberCallTextView.setText(mNumber.substring(0, ((mNumber.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4327/buggy-version/app.src.main.java.com.example.joao.dialogforhyperopia.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "7b3a69fe533ca8f6fdfcaffd4f1a94abe90755eb", "Url": "https://api.github.com/repos/joaomantovani/android-big-dialer", "Date": "2018-06-30T02:17:16Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg.equals(\"\u6682\u65e0\u4fe1\u606f\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7069/buggy-version/ZWBH-Android.app.src.main.java.com.ruitukeji.zwbh.mine.mywallet.mybankcard.MyBankCardActivity.java", "BodyUseAPI": [], "Fixed commit": "7fec6c9af8ac5e2bf9b851a1bf2746c88349f74c", "Url": "https://api.github.com/repos/921668753/wztx-shipper-android", "Date": "2018-01-11T09:02:31Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Session.openChannel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((channel.getExitStatus()) > 0) { java.lang.System.out.println((\"Unexpected exit status: \" + (channel.getExitStatus()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8587/buggy-version/src.SSHManager.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Unexpected exit status: \" + (channel.getExitStatus())))", "Channel.getExitStatus()"], "Fixed commit": "4f7f78b15ef7057dd09efe0483b1d5dc83a08e5b", "Url": "https://api.github.com/repos/qazuar/sk.rosamigrations", "Date": "2018-08-13T10:51:32Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((placeDetailPopupWindow) != null) { if (placeDetailPopupWindow.isShowing()) { placeDetailPopupWindow.dismiss(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4799/buggy-version/app.src.main.java.app.com.muhammad.voice.HomeScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "cbfac0fbad88f188098674fa74a51f8f56cf957a", "Url": "https://api.github.com/repos/mqumail/Voice", "Date": "2018-09-25T09:17:22Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (onStart != null) onStart.action();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6388/buggy-version/src.express.Express.java", "BodyUseAPI": ["express.events.Action.action()"], "Fixed commit": "fe4504e75779a179c206969d668b752a003b1b8d", "Url": "https://api.github.com/repos/Simonwep/java-express", "Date": "2018-02-02T14:53:16Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSelected())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/584/buggy-version/src.ch.unizh.ini.jaer.projects.minliu.Speedometer.java", "BodyUseAPI": [], "Fixed commit": "917f1a0499b917699bcec2dc5b9333c4a893c7f3", "Url": "https://api.github.com/repos/SensorsINI/jaer", "Date": "2018-02-24T07:37:46Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(args[0].equals(\"test\"))) { java.lang.System.in.read(); server.stop(); java.lang.System.out.println(\"Stopped Server\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6614/buggy-version/src.main.java.vitor.article.validator.devmedia.server.Server.java", "BodyUseAPI": [], "Fixed commit": "185982718102025425e59b3cd6d8492b4ba3a60e", "Url": "https://api.github.com/repos/vitorjclima/Restful-JaxRS-Jersey", "Date": "2018-02-08T01:50:03Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.common.cklibrary.utils.JsonUtil.getInstance().json2Obj(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((afterSalesDetailsBean.getData().getTradestatus()) == 2) { tv_applyAfterSales.setText(getString(R.string.refuseApplyAfterSales)); ll_bottom.setVisibility(View.GONE); et_accountAfterSalesService.setVisibility(View.GONE); }else if ((afterSalesDetailsBean.getData().getTradestatus()) == 3) { tv_applyAfterSales.setText(getString(R.string.merchantRefund)); ll_bottom.setVisibility(View.GONE); et_accountAfterSalesService.setVisibility(View.GONE); }else if ((afterSalesDetailsBean.getData().getTradestatus()) == 6) { tv_applyAfterSales.setText(getString(R.string.platformRefundCompleted)); ll_bottom.setVisibility(View.GONE); et_accountAfterSalesService.setVisibility(View.GONE); }else { tv_applyAfterSales.setText(getString(R.string.applyAfterSales)); ll_bottom.setVisibility(View.VISIBLE); et_accountAfterSalesService.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4577/buggy-version/SillyChildMerchant.app.src.main.java.com.yinglan.scm.order.aftersalesdetails.AfterSalesDetailsActivity.java", "BodyUseAPI": ["afterSalesDetailsBean.getData().getTradestatus()", "com.yinglan.scm.entity.order.aftersalesdetails.AfterSalesDetailsBean.getData()", "afterSalesDetailsBean.getData().getTradestatus()", "com.yinglan.scm.entity.order.aftersalesdetails.AfterSalesDetailsBean.getData()"], "Fixed commit": "c7633f75bd46983f993a3f055b19d1583caab428", "Url": "https://api.github.com/repos/921668753/SillyChildMerchant-Android", "Date": "2018-07-03T10:10:11Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seat.isReserved()) { for (java.lang.Integer seatNumber : seatNumbers) { if ((seat.getSeatNumber()) == seatNumber) { occupiedSeats.add(seat); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2123/buggy-version/ReserveService.src.main.java.service.ReservationService.java", "BodyUseAPI": ["domain.Seat.getSeatNumber()", "java.util.List<domain.Seat>.add(domain.Seat)"], "Fixed commit": "4610f228c5fbe4955eeebeac4b9e89620a4968b5", "Url": "https://api.github.com/repos/Luxulicious/JEA-MicroServices", "Date": "2018-06-02T17:41:50Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kymjs.common.PreferenceHelper.readString(com.ruitukeji.zwbs.mine.vehiclecertification.VehicleCertificationActivity,StringConstants.FILENAME,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((car_auth_status != null) && (car_auth_status.equals(\"refuse\"))) { tv_certificationStatus.setText(getString(R.string.authenticationFailure)); }else if ((car_auth_status != null) && (car_auth_status.equals(\"reauth\"))) { tv_certificationStatus.setText(getString(R.string.certificationOverdue)); }else { tv_certificationStatus.setText(getString(R.string.unauthorized)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1924/buggy-version/ZWBS-Android.app.src.main.java.com.ruitukeji.zwbs.mine.vehiclecertification.VehicleCertificationActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "6e70a5ac7997973575fc8ecb25ee46e6d473d444", "Url": "https://api.github.com/repos/921668753/wztx-driver-andriod", "Date": "2018-02-28T07:15:38Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasNotifyEvent) { if ((mLastUploadedLocation) != null) { xtras = mLastUploadedLocation.getExtras(); if (xtras != null) { hasNotifyEvent = (xtras.getString(Constants.NOTIFY_EVENT)) != null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7680/buggy-version/mobile.src.main.java.com.hmsoft.nmealogger.data.locatrack.LocatrackOnlineStorer.java", "BodyUseAPI": [], "Fixed commit": "6e2ebaece833e52343eb7d8726fb65a8903b129c", "Url": "https://api.github.com/repos/hmrs-cr/android-nmea-logger", "Date": "2015-07-23T00:48:29Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transition.isEmpty()) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9330/buggy-version/T1.Automaton.java", "BodyUseAPI": [], "Fixed commit": "ad32da08515e501d9db85ae2c8975042c5224381", "Url": "https://api.github.com/repos/jzatta/INE5421", "Date": "2018-05-18T03:59:01Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((activeSession != null) && (sessionId != null)) && ((activeSession.getExternalKey()) != null)) { if (sessionId.equals(activeSession.getExternalKey().getKey())) { refreshTimeout(activeSession); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9582/buggy-version/hub-extensions.extension-proxy.src.main.java.io.sterodium.extensions.hub.proxy.session.SeleniumSessions.java", "BodyUseAPI": ["io.sterodium.extensions.hub.proxy.session.SeleniumSessions.refreshTimeout(org.openqa.grid.internal.TestSession)", "org.openqa.grid.internal.TestSession.getExternalKey()", "activeSession.getExternalKey().getKey()", "java.lang.String.equals(activeSession.getExternalKey().getKey())"], "Fixed commit": "d76f11206f4c22b47d74b430cd297bc201c4c73a", "Url": "https://api.github.com/repos/Smartlogic-Semaphore-Limited/selenium-grid-extensions", "Date": "2018-02-15T13:04:11Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["freditor.FreditorUI.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (x >= componentWidth) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9185/buggy-version/src.main.java.freditor.FreditorUI.java", "BodyUseAPI": [], "Fixed commit": "1a4b7479c91adb702627775ad9aeeb39c0b2a8e0", "Url": "https://api.github.com/repos/fredoverflow/freditor", "Date": "2018-09-02T15:48:19Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.thehyve.ocdu.models.OcDefinitions.ItemDefinition.getDisplayRule()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((displayRule == null) || (controlItemDefinition == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2387/buggy-version/src.main.java.nl.thehyve.ocdu.models.OcDefinitions.VisibleStateDeterminator.java", "BodyUseAPI": [], "Fixed commit": "82a0e105d64a1c89df9c1c6243897047bd76e3cb", "Url": "https://api.github.com/repos/CTMM-TraIT/Open-Clinica-Data-Uploader", "Date": "2018-03-27T15:32:47Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { mFile.delete(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8220/buggy-version/sample.src.main.java.com.arjinmc.photal.sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d965140fa483dec64fd7beb002264f39979e47c7", "Url": "https://api.github.com/repos/arjinmc/Photal", "Date": "2018-05-18T09:02:42Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((row >= (this.board.rows)) || (col >= (this.board.cols))) { validRoworCol = false; }else { if ((this.board.boardStates[row][col]) != (BoardStates.NOT_REVEALED)) { java.lang.System.out.println(\"This coordinate has already been fetched, please, choose another one!\"); validRoworCol = false; }else { if ((row >= (this.board.rows)) || (col >= (this.board.cols))) { java.lang.System.out.println(((((\"The board has \" + (this.board.rows)) + \" lines and \") + (this.board.cols)) + \" columns\")); java.lang.System.out.println(((((\"pick a number under \" + (this.board.rows)) + \"for rows and \") + (this.board.cols)) + \"for columns\")); validRoworCol = false; }else { validRoworCol = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9556/buggy-version/src.com.jetbrains.Main.java", "BodyUseAPI": [], "Fixed commit": "fb421fcfb841cae6d1eb2fc2e55eebfa580eff8f", "Url": "https://api.github.com/repos/marcelus20/BattleShip", "Date": "2018-03-30T15:30:00Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(baseLocation.isDirectory())) { baseLocation.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1409/buggy-version/D4JBot.src.main.java.d4jbot.misc.PropertiesHandler.java", "BodyUseAPI": [], "Fixed commit": "dae123c6e6eb71c06327d09f0f45b134c1895f0c", "Url": "https://api.github.com/repos/Chromeroni/Hera-Chatbot", "Date": "2018-01-18T22:41:31Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fangxuele.tool.wechat.push.logic.PushManage.wxMpConfigStorage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (wxMpConfigStorage != null) { wxMpService.setWxMpConfigStorage(wxMpConfigStorage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3669/buggy-version/src.main.java.com.fangxuele.tool.wechat.push.logic.PushManage.java", "BodyUseAPI": ["me.chanjar.weixin.mp.api.WxMpService.setWxMpConfigStorage(me.chanjar.weixin.mp.api.WxMpConfigStorage)"], "Fixed commit": "ccd3e43387a81a560b6b8c6c55701347f4f779df", "Url": "https://api.github.com/repos/rememberber/WePush", "Date": "2018-07-14T02:36:16Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["florida.com.waneat.Preferences.Preferences.getString(florida.com.waneat.Activities.AjustesActivity,Preferences.ACTUAL_LOCALE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (locale != null) { switch (locale) { case \"en\" : radioGroupLanguages2.check(R.id.english); break; case \"es\" : radioGroupLanguages2.check(R.id.spanish); break; } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2263/buggy-version/app.src.main.java.florida.com.waneat.Activities.AjustesActivity.java", "BodyUseAPI": [], "Fixed commit": "1f1554f2e61e81e8917dfbddbdddd0fe545b0d0d", "Url": "https://api.github.com/repos/JorgeYYA/WaneatAndroid", "Date": "2018-02-18T21:23:20Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.graphhopper.util.CHEdgeIteratorState) (iter)).isShortcut()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8358/buggy-version/openrouteservice.src.main.java.heigit.ors.routing.graphhopper.extensions.edgefilters.core.EdgeFilterSequence.java", "BodyUseAPI": [], "Fixed commit": "425d7a01f72e6b32904abe360e1d91fdbbaa0b56", "Url": "https://api.github.com/repos/GIScience/openrouteservice", "Date": "2018-08-06T16:15:53Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((missionDTO.getArchive()) == null) { missionDTO.setArchive(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6401/buggy-version/src.main.java.fr.istic.sit.service.impl.MissionServiceImpl.java", "BodyUseAPI": ["fr.istic.sit.service.dto.MissionDTO.setArchive(boolean)"], "Fixed commit": "ce8e8f01fc8bddda93c3e84e0b285e28eabb1836", "Url": "https://api.github.com/repos/amullier/M2-INFO-SIT-SERVEUR", "Date": "2018-04-27T09:11:48Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((missionDTO.getArchive()) == null) { missionDTO.setArchive(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6401/buggy-version/src.main.java.fr.istic.sit.service.impl.MissionServiceImpl.java", "BodyUseAPI": ["fr.istic.sit.service.dto.MissionDTO.setArchive(boolean)"], "Fixed commit": "ce8e8f01fc8bddda93c3e84e0b285e28eabb1836", "Url": "https://api.github.com/repos/amullier/M2-INFO-SIT-SERVEUR", "Date": "2018-04-27T09:11:48Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.pipeline.TokensRegexNERAnnotator.getIndex(java.util.Map<java.lang.String, java.lang.Integer>,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (edu.stanford.nlp.pipeline.TokensRegexNERAnnotator.NUMBER_PATTERN.matcher(split[iOverwrite].trim()).matches()) { edu.stanford.nlp.pipeline.TokensRegexNERAnnotator.logger.warn((((\"Number in types column for \" + (java.util.Arrays.toString(key))) + \" is probably priority: \") + (split[iOverwrite]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4656/buggy-version/src.edu.stanford.nlp.pipeline.TokensRegexNERAnnotator.java", "BodyUseAPI": ["Redwood.RedwoodChannels.warn(java.lang.String)"], "Fixed commit": "07781f6b5a51f3da3a569150b76eeb6ae65d5835", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2018-04-21T23:41:16Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<peegee.fullorganizer.firebase_db.TodoItemDB>.get(getAdapterPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((item.getItemId()) != null) { item.done = checked; synchronized(peegee.fullorganizer.MainActivity.FBLOCK) { MainActivity.todoItemRef.child(item.getItemId()).setValue(item); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7247/buggy-version/app.src.main.java.peegee.fullorganizer.service.adapters.TodoAdapter.java", "BodyUseAPI": [], "Fixed commit": "015e44f72829ad2746a89eb6a8f57ef8666d4695", "Url": "https://api.github.com/repos/PeeGee92/Organizer", "Date": "2018-04-29T21:53:08Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etAddTodo.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tempDesc.isEmpty()) { android.widget.Toast.makeText(getApplication(), \"Cannot add empty item!\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7247/buggy-version/app.src.main.java.peegee.fullorganizer.todo.AddTodoList.java", "BodyUseAPI": [], "Fixed commit": "015e44f72829ad2746a89eb6a8f57ef8666d4695", "Url": "https://api.github.com/repos/PeeGee92/Organizer", "Date": "2018-04-29T21:53:08Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["questions.get(i).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((question.has(\"correctChoice\")) && (question.get(\"type\").getAsString().equals(\"select\"))) { insertChoices(questionId, question.get(\"choices\").getAsJsonArray()); }else { myQuestion.setChoice(question.get(\"choices\").getAsJsonArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5576/buggy-version/app.src.main.java.org.ole.planet.takeout.CustomDataProcessing.java", "BodyUseAPI": ["org.ole.planet.takeout.Data.realm_examQuestion.setChoice(question.get(\"choices\").getAsJsonArray())", "org.ole.planet.takeout.CustomDataProcessing.insertChoices(java.lang.String,question.get(\"choices\").getAsJsonArray())", "question.get(\"choices\").getAsJsonArray()", "com.google.gson.JsonObject.get(java.lang.String)", "question.get(\"choices\").getAsJsonArray()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "be1fadc276b9b85555345054e86fcec06691e392", "Url": "https://api.github.com/repos/ole-vi/takeout", "Date": "2018-07-22T07:56:14Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x < 1) || (x > 10)) || (y < 'A')) || (y > 'J')) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3213/buggy-version/src.main.java.cs361.battleships.models.Game.java", "BodyUseAPI": [], "Fixed commit": "ab5855d70f8958fc5f8914a5ef65320c69a29604", "Url": "https://api.github.com/repos/cs361fall2018/project-team-35", "Date": "2018-10-12T08:07:42Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.n4js.external.TargetPlatformInstallLocationProvider.getTargetPlatformInstallFolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(installLocation.isDirectory())) { success &= installLocation.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3916/buggy-version/plugins.org.eclipse.n4js.src.org.eclipse.n4js.external.TargetPlatformInstallLocationProvider.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "f668b22a8895ed8c53c98cc9a12e556ced4ed00d", "Url": "https://api.github.com/repos/lbeurerkellner/n4js", "Date": "2018-08-02T09:11:05Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iconResumed == null) { iconResumed = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5287/buggy-version/sdl_android.src.main.java.com.smartdevicelink.proxy.rpc.RegisterAppInterfaceResponse.java", "BodyUseAPI": [], "Fixed commit": "deeccf07fec7f473513fd94156a73809285c2f78", "Url": "https://api.github.com/repos/smartdevicelink/sdl_android", "Date": "2018-08-16T18:09:13Z"},
{"Line": "=>2133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_iconResumed) == null) { _iconResumed = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5287/buggy-version/sdl_android.src.main.java.com.smartdevicelink.proxy.SdlProxyBase.java", "BodyUseAPI": [], "Fixed commit": "deeccf07fec7f473513fd94156a73809285c2f78", "Url": "https://api.github.com/repos/smartdevicelink/sdl_android", "Date": "2018-08-16T18:09:13Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.O)) { intent.putExtra(com.smartdevicelink.transport.TransportConstants.FOREGROUND_EXTRA, true); context.startForegroundService(intent); }else { context.startService(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5287/buggy-version/sdl_android.src.main.java.com.smartdevicelink.transport.SdlBroadcastReceiver.java", "BodyUseAPI": [], "Fixed commit": "deeccf07fec7f473513fd94156a73809285c2f78", "Url": "https://api.github.com/repos/smartdevicelink/sdl_android", "Date": "2018-08-16T18:09:13Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!correct) { java.lang.String redisKey = cn.wqisland.model.constant.BaseConstant.\u7528\u6237\u7b54\u9898\u7eaa\u5f55redisKey(userId, bookId); redisUtil.set(redisKey, ((catalogId + \"_\") + questionId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6725/buggy-version/src.main.java.cn.wqisland.service.impl.UserAnswerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "51d4358ae41a9b07da2bcb2834e92f7fc05bfcfd", "Url": "https://api.github.com/repos/nihao17546/wq-island", "Date": "2018-01-08T10:18:16Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskName.contains(\"#PURGED#\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3462/buggy-version/src.TMModel.java", "BodyUseAPI": [], "Fixed commit": "efe0afa4151a96e36d04c048821d55f7fa3ae5c2", "Url": "https://api.github.com/repos/josephdonati/TM", "Date": "2018-03-08T05:36:57Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(word.equals(\"\"))) { if (map.containsKey(word)) { map.put(word, ((map.get(word)) + 1)); }else { map.put(word, 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2022/buggy-version/practice.week02.wordCount.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "e71a57db342fd7611dba0ec3fe6f4526e771ed42", "Url": "https://api.github.com/repos/ahamedbashir/advanceSoftwareEngineering", "Date": "2018-10-23T04:03:46Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.common.cklibrary.utils.JsonUtil.getInstance().json2Obj(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.kymjs.common.StringUtils.isEmpty(privateCustomOrderDetailsBean.getData().getSchedule())) { privateCustomOrderDetailsBean.getData().setSchedule(getString(R.string.noDetailedItinerary)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5623/buggy-version/SillyChildGuide.app.src.main.java.com.yinglan.scg.mine.myorder.orderdetails.PrivateCustomOrderDetailsActivity.java", "BodyUseAPI": ["privateCustomOrderDetailsBean.getData().setSchedule(getString(R.string.noDetailedItinerary))", "com.yinglan.scg.entity.mine.myorder.orderdetails.PrivateCustomOrderDetailsBean.getData()"], "Fixed commit": "eb0c437fdcdcf23ce392abeaccca01cbaea1309b", "Url": "https://api.github.com/repos/921668753/SillyChildGuide-Android", "Date": "2018-09-17T06:43:28Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.common.cklibrary.utils.JsonUtil.getInstance().json2Obj(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.kymjs.common.StringUtils.isEmpty(privateCustomDetailsBean.getData().getSchedule())) { privateCustomDetailsBean.getData().setSchedule(getString(R.string.noDetailedItinerary)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5623/buggy-version/SillyChildGuide.app.src.main.java.com.yinglan.scg.orderreceiving.PrivateCustomDetailsActivity.java", "BodyUseAPI": ["privateCustomDetailsBean.getData().setSchedule(getString(R.string.noDetailedItinerary))", "com.yinglan.scg.entity.orderreceiving.PrivateCustomDetailsBean.getData()"], "Fixed commit": "eb0c437fdcdcf23ce392abeaccca01cbaea1309b", "Url": "https://api.github.com/repos/921668753/SillyChildGuide-Android", "Date": "2018-09-17T06:43:28Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsImageInFullScreen) { radius = 0; }else { radius = 30; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3649/buggy-version/app.src.main.java.com.applaudostudios.photoapp.adapter.RecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "0e3b479edc5c7642035d04f98d018a437e5082ac", "Url": "https://api.github.com/repos/nelsonquintanilla/Photo-App---Week-7", "Date": "2018-10-12T19:46:50Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((properties.exists()) && (properties.isFile())) { scanAgent.setPropertiesFilePath(properties.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1662/buggy-version/src.main.java.org.owasp.dependencytrack.tasks.DependencyCheckTask.java", "BodyUseAPI": ["org.owasp.dependencycheck.agent.DependencyCheckScanAgent.setPropertiesFilePath(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "108f21ccd19764af4bc64bc7cd6ef402e6dca6c7", "Url": "https://api.github.com/repos/DependencyTrack/dependency-track", "Date": "2018-02-23T05:50:49Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ids.getDistributionManager().getMembershipManager()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mmgr == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1412/buggy-version/geode-core.src.main.java.org.apache.geode.management.internal.cli.commands.ListMembersCommand.java", "BodyUseAPI": [], "Fixed commit": "a590a3d973f63f8d53482c0edfff6709eef98a9c", "Url": "https://api.github.com/repos/jinmeiliao/geode", "Date": "2018-01-19T01:58:05Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((src.indexOf(\";\")) != (-1)) && ((src.indexOf(\"=\")) != (-1))) && ((src.indexOf(\"{\")) != (-1))) && ((src.indexOf(\"=\")) < (src.indexOf(\"{\")))) { next = src.substring(0, ((src.indexOf(\";\")) + 1)); }else if ((src.indexOf(\"{\")) != (-1)) { int openedBraces = 1; int i = (src.indexOf(\"{\")) + 1; while (openedBraces > 0) { char c = src.charAt(i); if (c == '{') { openedBraces++; }else if (c == '}') { openedBraces--; } i++; } if (src.substring(i, (i + 1)).equals(\";\")) { next = src.substring(0, (i + 1)); }else { next = src.substring(0, i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8995/buggy-version/src.java2plant.builder.FromJavaBuilder.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.equals(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "68552b8426503f332318165a644c74731d715f69", "Url": "https://api.github.com/repos/gabibau/Java2Plantuml", "Date": "2018-06-12T13:31:49Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matrix[i][0]) == 0) col0 = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6556/buggy-version/leetcode.src.main.java.it.nicolagiacchetta.learning.leetcode.problems.matrix.SetMatrixZeroes.java", "BodyUseAPI": [], "Fixed commit": "98b52257727d62b67b5be649ff5a3807fd5d5693", "Url": "https://api.github.com/repos/nicolagiacchetta/coding-exercises", "Date": "2018-07-28T22:45:30Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNotBlank(response.getContentType())) { servletResponse.setContentType(response.getContentType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5655/buggy-version/s34j-core.src.main.java.us.cuatoi.s34jserver.core.servlet.ServletHandler.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.setContentType(response.getContentType())", "us.cuatoi.s34jserver.core.Response.getContentType()"], "Fixed commit": "013ccc2cf2485a3c412643f68c9ecfc05a28de1b", "Url": "https://api.github.com/repos/dungviettran89/s34j", "Date": "2018-01-25T13:54:11Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uri.getRawSchemeSpecificPart().contains(\"%2B\")) { schemeSpecific = schemeSpecific.replace(\"+\", \"%2B\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2695/buggy-version/OsmAnd-java.src.main.java.net.osmand.util.GeoPointParserUtil.java", "BodyUseAPI": [], "Fixed commit": "39abc1e8347ee8d7683ba0529d65703a95ac840e", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2018-07-31T10:00:42Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i.getName().equalsIgnoreCase(de.taimos.dvalin.interconnect.model.ivo.util.IIVOAuditing.class.getSimpleName())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5420/buggy-version/interconnect.interconnect-maven-plugin.src.main.java.de.taimos.dvalin.interconnect.model.maven.model.ivo.FilterIVOModel.java", "BodyUseAPI": [], "Fixed commit": "48088312f7b6966eb77bca4b885fe6846befbcd0", "Url": "https://api.github.com/repos/taimos/dvalin", "Date": "2018-03-12T14:07:54Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length >= (remainingShips.length)) return -6;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7417/buggy-version/shipripper.src.shipripper.Player.java", "BodyUseAPI": [], "Fixed commit": "8b1cf023015676e932232a709bf92e6d3a165c9f", "Url": "https://api.github.com/repos/BlackEpsilon/shipripper", "Date": "2018-03-07T17:49:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((threadInfo.getFileSize()) == (threadInfo.getEndPosition())) { floatingmuseum.sonic.utils.LogUtil.d(floatingmuseum.sonic.threads.DownloadThread.TAG, ((\"getHttpHeaders()...last thread...threadID:\" + (threadInfo.getId())) + \"...omit endPosition\")); headers.put(\"Range\", ((\"bytes=\" + (threadInfo.getCurrentPosition())) + \"-\")); }else { floatingmuseum.sonic.utils.LogUtil.d(floatingmuseum.sonic.threads.DownloadThread.TAG, ((\"getHttpHeaders()...not last thread...threadID:\" + (threadInfo.getId())) + \"...add endPosition\")); headers.put(\"Range\", (((\"bytes=\" + (threadInfo.getCurrentPosition())) + \"-\") + (threadInfo.getEndPosition()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7418/buggy-version/sonic.src.main.java.floatingmuseum.sonic.threads.DownloadThread.java", "BodyUseAPI": ["floatingmuseum.sonic.utils.LogUtil.d(java.lang.String,((\"getHttpHeaders()...last thread...threadID:\" + (threadInfo.getId())) + \"...omit endPosition\"))", "floatingmuseum.sonic.threads.DownloadThread.getCurrentPosition()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,(((\"bytes=\" + (threadInfo.getCurrentPosition())) + \"-\") + (threadInfo.getEndPosition())))", "floatingmuseum.sonic.threads.DownloadThread.getCurrentPosition()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,((\"bytes=\" + (threadInfo.getCurrentPosition())) + \"-\"))", "floatingmuseum.sonic.threads.DownloadThread.getEndPosition()", "floatingmuseum.sonic.utils.LogUtil.d(java.lang.String,((\"getHttpHeaders()...not last thread...threadID:\" + (threadInfo.getId())) + \"...add endPosition\"))", "floatingmuseum.sonic.threads.DownloadThread.getId()", "floatingmuseum.sonic.threads.DownloadThread.getId()"], "Fixed commit": "1d69f5ad12f987308d56777ad59c2e1f07ecc8c7", "Url": "https://api.github.com/repos/floatingmuseum/Sonic", "Date": "2018-10-17T07:09:55Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (menu.isStartGame()) { try { menu.getGame().undoMove(); } catch (NoMovesMadeException e) { java.lang.System.out.println(e.toString()); } }else { java.lang.System.out.println(\"Game has not been started!\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4088/buggy-version/UI.src.UndoMove.java", "BodyUseAPI": ["menu.getGame().undoMove()", "Menu.getGame()"], "Fixed commit": "bd61ac4be30717232f167ac6c3a893f59a6b04b1", "Url": "https://api.github.com/repos/eyaldouwma/NinaRow", "Date": "2018-08-06T09:39:04Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rows.get(0).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((emailRow.itemIndex) == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/516/buggy-version/src.main.java.com.pff.PSTFolder.java", "BodyUseAPI": [], "Fixed commit": "1151d628221ae38c3a2c7eaf5073262d3e8b20b3", "Url": "https://api.github.com/repos/epfromer/java-libpst", "Date": "2018-03-06T14:48:32Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((renderer) != null) { renderer.setExternalRenderer(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7155/buggy-version/src.ch.unizh.ini.jaer.projects.elised.ELiSeD.java", "BodyUseAPI": [], "Fixed commit": "bdc7552412bfab97110a0c10f99d2f858cdde214", "Url": "https://api.github.com/repos/SensorsINI/jaer", "Date": "2018-06-05T13:52:56Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttribute(GeneratorBeanDefinitionTag.REGISTRY_CENTER_REF)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((registryCenterRef == null) || (registryCenterRef.isEmpty())) { throw new java.lang.IllegalArgumentException(\"no attribute [registry-center-ref] found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6248/buggy-version/src.main.java.com.imadcn.framework.idworker.spring.schema.parser.GeneratorRegisteryBuilder.java", "BodyUseAPI": [], "Fixed commit": "17e346cbd838a6362d2c59442317e175f04d8d1c", "Url": "https://api.github.com/repos/imadcn/idworker", "Date": "2018-07-24T09:31:36Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((state) == (enums.PhaseEnum.DRAAIEN)) || ((state) == (enums.PhaseEnum.WAITING))) || ((state) == (enums.PhaseEnum.TEST))) { state = enums.PhaseEnum.INIT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2587/buggy-version/Autopilot.src.autopilotLibrary.Besturing.java", "BodyUseAPI": [], "Fixed commit": "0f39f497ccd96eaaa45c3e0548050e01e0f8a496", "Url": "https://api.github.com/repos/gillishermans/AutopilotTeamWit", "Date": "2018-05-14T19:44:19Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((state) == (enums.PhaseEnum.DRAAIEN)) || ((state) == (enums.PhaseEnum.WAITING))) || ((state) == (enums.PhaseEnum.TEST))) { state = enums.PhaseEnum.INIT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2587/buggy-version/Autopilot.src.autopilotLibrary.Besturing.java", "BodyUseAPI": [], "Fixed commit": "0f39f497ccd96eaaa45c3e0548050e01e0f8a496", "Url": "https://api.github.com/repos/gillishermans/AutopilotTeamWit", "Date": "2018-05-14T19:44:19Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ctrip.platform.dal.dao.DalHints.getKeyHolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(keyHolder.isEmptyKey(i))) { com.ctrip.platform.dal.dao.KeyHolder.setPrimaryKey(pkFlield, rawPojos.get(i), keyHolder.getKey(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4392/buggy-version/dal-client.src.main.java.com.ctrip.platform.dal.dao.KeyHolder.java", "BodyUseAPI": ["com.ctrip.platform.dal.dao.KeyHolder.getKey(int)", "com.ctrip.platform.dal.dao.KeyHolder.setPrimaryKey(java.lang.reflect.Field,rawPojos.get(i),java.lang.Number)", "java.util.List<?>.get(int)"], "Fixed commit": "551fd33aff195bc25725e9003565ec666aaaf865", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2018-04-28T07:37:46Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(status.isRecording())) { if (trackWithPoints != null) { if ((trackId) != (com.awolity.trakr.utils.PreferenceUtils.NO_LAST_RECORDED_TRACK)) { if ((trackWithPoints.getTrackPoints().size()) > 1) { trackViewModel.saveToCloud(); android.content.Intent intent = com.awolity.trakr.view.detail.TrackDetailActivity.getStarterIntent(this, trackId); startActivity(intent); trackViewModel.getTrackWithPoints().removeObserver(this); trackViewModel.reset(); trackId = com.awolity.trakr.utils.PreferenceUtils.NO_LAST_RECORDED_TRACK; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3947/buggy-version/app.src.main.java.com.awolity.trakr.view.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "68933baa682aac9786a4ce5bbf5581b9baf51ec7", "Url": "https://api.github.com/repos/vokod/Trakr", "Date": "2018-07-03T11:49:00Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((requestMap != null) && (!(requestMap.isEmpty()))) { searchMap = ((java.util.Map<java.lang.String, java.lang.Object>) (requestMap.get(\"request\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5498/buggy-version/src.android.org.genie.ContentHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "7f0b1b9aca3e28f47f9712070e94519a2ca4871a", "Url": "https://api.github.com/repos/project-sunbird/cordova-plugin-genie-sdk", "Date": "2018-05-04T12:51:11Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xframium.page.Page.getElement(org.xframium.page.ElementDescriptor)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (originalElement == null) throw new org.xframium.exception.ObjectConfigurationException((((siteName) != null) && ((siteName.trim().length()) > 0) ? siteName : org.xframium.page.PageManager.instance(executionContext.getxFID()).getSiteName()), getPageName(), elementName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8273/buggy-version/framework.src.org.xframium.page.keyWord.step.AbstractKeyWordStep.java", "BodyUseAPI": [], "Fixed commit": "ed74d50d63ddbbf405fbe47d3aef516820783daf", "Url": "https://api.github.com/repos/xframium/xframium-java", "Date": "2018-03-20T14:28:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.mifos.mobilebanking.utils.Toaster.snackbarsQueue.get(0).isShown())) { org.mifos.mobilebanking.utils.Toaster.snackbarsQueue.get(0).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1532/buggy-version/app.src.main.java.org.mifos.mobilebanking.utils.Toaster.java", "BodyUseAPI": ["org.mifos.mobilebanking.utils.Toaster.snackbarsQueue.get(0).show()", "java.util.ArrayList<android.support.design.widget.Snackbar>.get(int)"], "Fixed commit": "d655e9c1720b9138d2b6adc7f6684c486bd56d58", "Url": "https://api.github.com/repos/miPlodder/mifos-mobile", "Date": "2018-02-11T19:41:26Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) > 0) { tts.speak(java.lang.String.valueOf(index), TextToSpeech.QUEUE_FLUSH, null); yoYoUIModel.setRemainingTimeInSecs(java.lang.String.valueOf(index)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7527/buggy-version/app.src.main.java.com.am.yo_yo.app.YoYoService.java", "BodyUseAPI": [], "Fixed commit": "e91f17e50cb7d297144ee901048f439794ab9b1d", "Url": "https://api.github.com/repos/AbhijithMadhav/yo-yo", "Date": "2018-02-27T16:17:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ChainBankruptcy.Bank.InitializeInterbankNetwork(java.util.Random)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (banks.get(ID).status) { ChainBankruptcy.Bank.GoBankrupt(banks, ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4902/buggy-version/java.InternKcopy2.src.ChainBankruptcy.Main.java", "BodyUseAPI": ["ChainBankruptcy.Bank.GoBankrupt(java.util.ArrayList<ChainBankruptcy.Bank>,int)"], "Fixed commit": "161b7c1aad0b77233586646875867c7f4e9a8402", "Url": "https://api.github.com/repos/ryohamawaki/chainbankruptcy", "Date": "2018-09-03T01:55:06Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(contactTelNo)) { applicant = fetchByTelNo(contactTelNo); if (com.liferay.portal.kernel.util.Validator.isNotNull(applicant)) throw new org.opencps.usermgt.exception.DuplicateContactTelNoException(\"DuplicateContactTelNoException\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/417/buggy-version/modules.backend-usermgt.backend-usermgt-service.src.main.java.org.opencps.usermgt.service.impl.ApplicantLocalServiceImpl.java", "BodyUseAPI": ["org.opencps.usermgt.service.impl.ApplicantLocalServiceImpl.fetchByTelNo(java.lang.String)"], "Fixed commit": "671eaf2261fbf2ff0a9ec9fe005a898dd0a4b9a3", "Url": "https://api.github.com/repos/thaisonc8/opencps-v2", "Date": "2018-06-11T02:09:03Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootScreen) != null) { temp.setRedrawFunction(rootScreen::draw); temp.createEventListeners(rootScreen); for (final java.util.EventListener listener : temp.getEventListeners()) { rootScreen.addListener(listener); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1029/buggy-version/src.com.valkryst.VTerminal.component.Layer.java", "BodyUseAPI": [], "Fixed commit": "38cc26441188851312868a8feae10619f1bf31b5", "Url": "https://api.github.com/repos/Valkryst/VTerminal", "Date": "2018-10-08T21:16:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["serviceUri.getQueryParams().getFirst(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (clientId == null) throw new java.lang.IllegalStateException(\"No client_id found among query parameters!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2932/buggy-version/src.main.java.ee.ria.sso.service.AbstractService.java", "BodyUseAPI": [], "Fixed commit": "6aa64e91abf19fc6241c905d1eff09e281669a70", "Url": "https://api.github.com/repos/e-gov/TARA-Server", "Date": "2018-08-27T10:23:49Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationManager) != null) { location = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2484/buggy-version/app.src.main.java.ch.epfl.sweng.thegramginers.GPSTracker.java", "BodyUseAPI": [], "Fixed commit": "377dcdf1a2a32e9cd8ed2df1acf29f46dc2d02ce", "Url": "https://api.github.com/repos/burgercode/TheGramginers", "Date": "2018-10-17T13:07:45Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["board.utils.StateProbability<I>.get(long[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((probs[0]) >= 0) && ((probs[1]) > 0)) { probs[0] = probabilities[0]; probs[1] = probabilities[1]; sql.saveQuery(((((INSERT_QUERY) + \"'\") + (sid.toStringId(similar))) + valueStr)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3232/buggy-version/BoardInterface.src.board.utils.StateProbability.java", "BodyUseAPI": [], "Fixed commit": "ed4b977ac1283d58dbb8fe73493d1d43f92b6b99", "Url": "https://api.github.com/repos/hdasgupta/BoardGames", "Date": "2018-03-06T02:43:28Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextDouble()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (u < (knownAbanOutOfAllAbanRatio)) { holdingQueue.remove(); if (shouldRegisterAban) { results.registerAbandonment(firstInLine, currentTime); } }else { if (abandonmentModelingScheme == (AbandonmentModelingScheme.EXPONENTIAL_SILENT_MARKED)) { isSingleExchange = true; } firstInLine.setIsSingleExchange(isSingleExchange); return firstInLine; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9475/buggy-version/src.ed_simulation.ED_Simulation_ReturnToServer.java", "BodyUseAPI": [], "Fixed commit": "75d82764e502a053c3867879dd80bf8c0d523c09", "Url": "https://api.github.com/repos/LivePersonInc/ED_Simulation", "Date": "2018-10-08T10:00:41Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (readOnly) { DashboardActivity.dashboardActivity.initReview(readOnly); }else if ((!(shouldShowReviewScreen())) || (!(org.eyeseetea.malariacare.BuildConfig.reviewScreen))) { mDynamicTabAdapter.surveyShowDone(); }else { DashboardActivity.dashboardActivity.showReviewFragment(); org.eyeseetea.malariacare.views.question.CommonQuestionView.hideKeyboard(org.eyeseetea.malariacare.data.database.utils.PreferencesState.getInstance().getContext(), mDynamicTabAdapter.getKeyboardView()); org.eyeseetea.malariacare.layout.adapters.survey.DynamicTabAdapter.setIsClicked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5834/buggy-version/app.src.main.java.org.eyeseetea.malariacare.layout.adapters.survey.strategies.ADynamicTabAdapterStrategy.java", "BodyUseAPI": ["DashboardActivity.dashboardActivity.initReview(boolean)"], "Fixed commit": "5408f5eac73c87eae550786af2486c9e9e3bdd5d", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2018-05-07T17:28:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.common.ForgeHooks.rayTraceEyes(net.minecraft.entity.player.EntityPlayer,((playerIn.getAttributeMap().getAttributeInstance(EntityPlayer.REACH_DISTANCE).getAttributeValue()) - (playerIn.isCreative() ? 0 : 0.5F)))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ray == null) { ifstatment : if (((playerIn.getHeldItem(handIn).getMetadata()) == 1) && (playerIn.isSneaking())) { if ((playerIn.getHeldItem(handIn).getTagCompound()) == null) break ifstatment; playerIn.getHeldItem(handIn).getTagCompound().removeTag(\"hit_block\"); playerIn.getHeldItem(handIn).getTagCompound().removeTag(\"hit_meta\"); playerIn.getHeldItem(handIn).getTagCompound().removeTag(\"hit_color\"); if ((playerIn.getHeldItem(handIn).getTagCompound().getSize()) == 0) playerIn.getHeldItem(handIn).setTagCompound(null); return new net.minecraft.util.ActionResult<net.minecraft.item.ItemStack>(net.minecraft.util.EnumActionResult.SUCCESS, playerIn.getHeldItem(handIn)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6748/buggy-version/src.main.java.com.wynprice.secretroomsmod.items.CamouflagePaste.java", "BodyUseAPI": [], "Fixed commit": "db0873880e0fffe9f4de6c5efe3f90686a61953b", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2018-02-28T22:31:42Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.wynprice.secretroomsmod.handler.EnergizedPasteHandler.hasReplacedState(event.getWorld(), event.getPos()))) { event.setCanceled(true); net.minecraft.item.ItemStack stack = event.getEntityPlayer().getHeldItemMainhand(); if (((stack.hasTagCompound()) && (stack.getTagCompound().hasKey(\"hit_block\", 8))) && (stack.getTagCompound().hasKey(\"hit_meta\", 99))) { net.minecraft.block.Block block = Block.REGISTRY.getObject(new net.minecraft.util.ResourceLocation(stack.getTagCompound().getString(\"hit_block\"))); net.minecraft.block.state.IBlockState state = block.getStateFromMeta(stack.getTagCompound().getInteger(\"hit_meta\")); if ((state.getMaterial()) != (net.minecraft.block.material.Material.AIR)) { if ((com.wynprice.secretroomsmod.handler.EnergizedPasteHandler.canBlockBeMirrored(block, event.getWorld(), state, event.getPos())) && (com.wynprice.secretroomsmod.handler.EnergizedPasteHandler.canBlockBeReplaced(event.getWorld().getBlockState(event.getPos()).getBlock(), event.getWorld(), event.getWorld().getBlockState(event.getPos()), event.getPos()))) { if (!(event.getWorld().isRemote)) { com.wynprice.secretroomsmod.handler.EnergizedPasteHandler.putState(event.getWorld(), event.getPos(), state); com.wynprice.secretroomsmod.network.SecretNetwork.sendToAll(new com.wynprice.secretroomsmod.network.packets.MessagePacketSyncEnergizedPaste(event.getWorld().provider.getDimension(), event.getPos(), state, true)); if ((((net.minecraft.entity.player.EntityPlayerMP) (event.getEntityPlayer())).interactionManager.getGameType()) == (net.minecraft.world.GameType.SURVIVAL)) if (!(previousServerTickMap.contains(location))) { event.getEntityPlayer().getHeldItemMainhand().shrink(1); previousServerTickMap.add(location); }else previousServerTickMap.remove(location); event.getEntityPlayer().swingArm(EnumHand.MAIN_HAND); com.wynprice.secretroomsmod.network.SecretNetwork.sendToPlayer(event.getEntityPlayer(), new com.wynprice.secretroomsmod.network.packets.MessagePacketSwingArm(net.minecraft.util.EnumHand.MAIN_HAND)); }else { net.minecraft.util.SoundEvent soundEvent = SoundEvent.REGISTRY.getObject(new net.minecraft.util.ResourceLocation(com.wynprice.secretroomsmod.SecretConfig.sound_use_name)); if (soundEvent == null) soundEvent = net.minecraft.init.SoundEvents.BLOCK_SLIME_BREAK; event.getWorld().playSound(event.getEntityPlayer(), event.getPos(), soundEvent, SoundCategory.BLOCKS, ((float) (SecretConfig.sound_use_vol)), ((float) (SecretConfig.sound_use_pitch))); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6748/buggy-version/src.main.java.com.wynprice.secretroomsmod.handler.EnergizedPasteHandler.java", "BodyUseAPI": ["net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getPos()", "event.getEntityPlayer().getHeldItemMainhand().shrink(int)", "com.wynprice.secretroomsmod.network.SecretNetwork.sendToPlayer(event.getEntityPlayer(),com.wynprice.secretroomsmod.network.packets.MessagePacketSwingArm)", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.setCanceled(boolean)", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getWorld()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getWorld()", "event.getWorld().getBlockState(event.getPos())", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getWorld()", "com.wynprice.secretroomsmod.network.SecretNetwork.sendToAll(com.wynprice.secretroomsmod.network.packets.MessagePacketSyncEnergizedPaste)", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getEntityPlayer()", "event.getWorld().getBlockState(event.getPos())", "event.getWorld().provider.getDimension()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getEntityPlayer()", "event.getEntityPlayer().swingArm(EnumHand.MAIN_HAND)", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getEntityPlayer()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getPos()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getWorld()", "event.getEntityPlayer().getHeldItemMainhand()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getPos()", "com.wynprice.secretroomsmod.handler.EnergizedPasteHandler.putState(event.getWorld(),event.getPos(),net.minecraft.block.state.IBlockState)", "event.getEntityPlayer().getHeldItemMainhand()", "event.getWorld().getBlockState(event.getPos()).getBlock()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getEntityPlayer()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getWorld()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getPos()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getWorld()", "com.wynprice.secretroomsmod.handler.EnergizedPasteHandler.canBlockBeMirrored(net.minecraft.block.Block,event.getWorld(),net.minecraft.block.state.IBlockState,event.getPos())", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getEntityPlayer()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getPos()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getWorld()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getEntityPlayer()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getPos()", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getWorld()", "((net.minecraft.entity.player.EntityPlayerMP) (event.getEntityPlayer())).interactionManager.getGameType()", "event.getWorld().playSound(event.getEntityPlayer(),event.getPos(),net.minecraft.util.SoundEvent,SoundCategory.BLOCKS,((float) (SecretConfig.sound_use_vol)),((float) (SecretConfig.sound_use_pitch)))", "net.minecraftforge.event.entity.player.PlayerInteractEvent.RightClickBlock.getPos()", "com.wynprice.secretroomsmod.handler.EnergizedPasteHandler.canBlockBeReplaced(event.getWorld().getBlockState(event.getPos()).getBlock(),event.getWorld(),event.getWorld().getBlockState(event.getPos()),event.getPos())"], "Fixed commit": "db0873880e0fffe9f4de6c5efe3f90686a61953b", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2018-02-28T22:31:42Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ballerinalang.plugins.idea.psi.reference.BallerinaNameReferenceReference.findInTopLevelElements(com.intellij.psi.PsiDirectory,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (element != null) { return element; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3441/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.reference.BallerinaNameReferenceReference.java", "BodyUseAPI": [], "Fixed commit": "c50571ac8dc57497d84edbcc55a7c92006a1773b", "Url": "https://api.github.com/repos/Shan1024/ballerina-idea-plugin", "Date": "2018-04-05T18:45:43Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentUser.getEmail()) != null) com.a8lambda8.carlog.MainActivity.TestDevice = !(\"j.wasle111@gmail.com;leow707@gmail.com;??\".contains(java.util.Objects.requireNonNull(currentUser.getEmail())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6930/buggy-version/app.src.main.java.com.a8lambda8.carlog.MainActivity.java", "BodyUseAPI": ["java.util.Objects.requireNonNull(currentUser.getEmail())", "java.lang.String.contains(java.lang.Object)", "com.google.firebase.auth.FirebaseUser.getEmail()"], "Fixed commit": "b685dd9783925e26cb985738f1a97a28fae7257a", "Url": "https://api.github.com/repos/8-Lambda-8/CarLog", "Date": "2018-04-19T20:55:28Z"},
{"Line": "=>2062", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (be.getFuncName().equals(\"assign\")) { ((com.ge.research.sadl.model.gp.TripleElement) (realArgForThen)).setType(TripleModifierType.Assignment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7124/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.IntermediateFormTranslator.java", "BodyUseAPI": [], "Fixed commit": "def61f9b184063da47a7d8be80c900cf07bdbf12", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2018-04-10T20:35:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.service.notification.StatusBarNotification.getPackageName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((pk.equals(\"android\")) || (ignorePkg(pk))) || (sbn.isOngoing())) android.util.Log.d(net.coconauts.notificationListener.NotificationService.TAG, (\"Ignore notification from pkg \" + pk)); else { net.coconauts.notificationListener.NotificationCommands.notifyListener(sbn, \"REMOVED\"); net.coconauts.notificationListener.NotificationService.removeNotification(sbn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5070/buggy-version/src.android.NotificationService.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "net.coconauts.notificationListener.NotificationCommands.notifyListener(android.service.notification.StatusBarNotification,java.lang.String)", "net.coconauts.notificationListener.NotificationService.removeNotification(android.service.notification.StatusBarNotification)"], "Fixed commit": "97689c934b03459bb89385f081efc169635bdd0a", "Url": "https://api.github.com/repos/websixGmbH/NotificationListener-cordova", "Date": "2018-10-22T16:44:30Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token.equals(\"notFound\")) { return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9219/buggy-version/src.main.java.com.kfurgol.sapinternshiptask.controller.HomeController.java", "BodyUseAPI": [], "Fixed commit": "cd32c5a0283e0e01e667714fe7dae998f0153125", "Url": "https://api.github.com/repos/kfurgol/sap-internship-task", "Date": "2018-08-05T20:52:16Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((java.lang.Boolean) (rep.getAlreadyCompiled().getLeft())).booleanValue())) { rep.setFitness((-1.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/530/buggy-version/src.clegoues.genprog4java.fitness.Fitness.java", "BodyUseAPI": ["clegoues.genprog4java.rep.Representation.setFitness(double)"], "Fixed commit": "c652be60d9d714dac1386e68364964e1293d49fe", "Url": "https://api.github.com/repos/squaresLab/genprog4java", "Date": "2018-07-25T21:20:10Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.noesisinformatica.northumbriaproms.service.FollowupActionService.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (followupAction.getStatus().equals(ActionStatus.PENDING)) { questionnaireResponse.setStatus(QuestionnaireResponse.QuestionnaireResponseStatus.INPROGRESS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9301/buggy-version/src.main.java.com.noesisinformatica.northumbriaproms.web.rest.QuestionnaireResponseFhirResource.java", "BodyUseAPI": [], "Fixed commit": "0b69f631302aa88be778165c260173142dcb1ed4", "Url": "https://api.github.com/repos/sh-wang/proms_platform", "Date": "2018-07-19T14:23:33Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.noesisinformatica.northumbriaproms.service.FollowupActionService.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (followupAction.getStatus().equals(ActionStatus.STARTED)) { questionnaireResponse.setStatus(QuestionnaireResponse.QuestionnaireResponseStatus.INPROGRESS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9301/buggy-version/src.main.java.com.noesisinformatica.northumbriaproms.web.rest.QuestionnaireResponseFhirResource.java", "BodyUseAPI": [], "Fixed commit": "0b69f631302aa88be778165c260173142dcb1ed4", "Url": "https://api.github.com/repos/sh-wang/proms_platform", "Date": "2018-07-19T14:23:33Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.noesisinformatica.northumbriaproms.service.FollowupActionService.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (followupAction.getStatus().equals(ActionStatus.UNINITIALISED)) { questionnaireResponse.setStatus(QuestionnaireResponse.QuestionnaireResponseStatus.NULL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9301/buggy-version/src.main.java.com.noesisinformatica.northumbriaproms.web.rest.QuestionnaireResponseFhirResource.java", "BodyUseAPI": [], "Fixed commit": "0b69f631302aa88be778165c260173142dcb1ed4", "Url": "https://api.github.com/repos/sh-wang/proms_platform", "Date": "2018-07-19T14:23:33Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.noesisinformatica.northumbriaproms.service.FollowupActionService.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (followupAction.getStatus().equals(ActionStatus.UNKNOWN)) { questionnaireResponse.setStatus(QuestionnaireResponse.QuestionnaireResponseStatus.NULL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9301/buggy-version/src.main.java.com.noesisinformatica.northumbriaproms.web.rest.QuestionnaireResponseFhirResource.java", "BodyUseAPI": [], "Fixed commit": "0b69f631302aa88be778165c260173142dcb1ed4", "Url": "https://api.github.com/repos/sh-wang/proms_platform", "Date": "2018-07-19T14:23:33Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.noesisinformatica.northumbriaproms.service.FollowupActionService.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (followupAction.getStatus().equals(ActionStatus.COMPLETED)) { questionnaireResponse.setStatus(QuestionnaireResponse.QuestionnaireResponseStatus.COMPLETED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9301/buggy-version/src.main.java.com.noesisinformatica.northumbriaproms.web.rest.QuestionnaireResponseFhirResource.java", "BodyUseAPI": [], "Fixed commit": "0b69f631302aa88be778165c260173142dcb1ed4", "Url": "https://api.github.com/repos/sh-wang/proms_platform", "Date": "2018-07-19T14:23:33Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ar.com.profebot.parser.container.Tree.getRightNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ar.com.profebot.resolutor.utils.TreeUtils.hasDenominatorSymbol(rightNode)) { inverseOp = \"*\"; changeType = NodeStatus.ChangeTypes.MULTIPLY_TO_BOTH_SIDES; inverseTerm = symbolTerm.getRightNode(); }else if (rightNode.esOperador()) { if (rightNode.esSuma()) { if (ar.com.profebot.resolutor.utils.TreeUtils.isNegative(symbolTerm)) { inverseOp = \"+\"; changeType = NodeStatus.ChangeTypes.ADD_TO_BOTH_SIDES; inverseTerm = ar.com.profebot.resolutor.utils.TreeUtils.negate(symbolTerm); }else { inverseOp = \"-\"; changeType = NodeStatus.ChangeTypes.SUBTRACT_FROM_BOTH_SIDES; inverseTerm = symbolTerm; } }else { throw new java.lang.Error((\"Unsupported operation: \" + (symbolTerm.getValue()))); } }else if (rightNode.isUnaryMinus()) { inverseOp = \"+\"; changeType = NodeStatus.ChangeTypes.ADD_TO_BOTH_SIDES; inverseTerm = symbolTerm.getChild(0); }else { throw new java.lang.Error((\"Unsupported node type: \" + (rightNode.toExpression()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3662/buggy-version/AppMobile.app.src.main.java.ar.com.profebot.resolutor.service.ResolutorService.java", "BodyUseAPI": ["ar.com.profebot.parser.container.TreeNode.toExpression()", "ar.com.profebot.parser.container.TreeNode.esOperador()", "ar.com.profebot.parser.container.TreeNode.isUnaryMinus()", "ar.com.profebot.parser.container.TreeNode.esSuma()"], "Fixed commit": "9aa96e10861f39a9c08fa79fcf7361fafcef6347", "Url": "https://api.github.com/repos/agustinsilva/profebot", "Date": "2018-09-19T17:23:45Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pos.getY()) < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4409/buggy-version/src.main.java.com.direwolf20.buildinggadgets.tools.BuildingModes.java", "BodyUseAPI": [], "Fixed commit": "7bfafa0749f7c1773f092bf87097e3f6ac5db80b", "Url": "https://api.github.com/repos/Direwolf20-MC/BuildingGadgets", "Date": "2018-10-26T23:59:50Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (project == null) project = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8229/buggy-version/dakara.eclipse.commander.plugin.src.dakara.eclipse.plugin.platform.ResourceItem.java", "BodyUseAPI": [], "Fixed commit": "f0343511738e37eaf9c163d077f7335b8144ae49", "Url": "https://api.github.com/repos/dakaraphi/eclipse-plugin-commander", "Date": "2018-03-17T00:30:11Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (path == null) path = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8229/buggy-version/dakara.eclipse.commander.plugin.src.dakara.eclipse.plugin.platform.ResourceItem.java", "BodyUseAPI": [], "Fixed commit": "f0343511738e37eaf9c163d077f7335b8144ae49", "Url": "https://api.github.com/repos/dakaraphi/eclipse-plugin-commander", "Date": "2018-03-17T00:30:11Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (name == null) name = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8229/buggy-version/dakara.eclipse.commander.plugin.src.dakara.eclipse.plugin.platform.ResourceItem.java", "BodyUseAPI": [], "Fixed commit": "f0343511738e37eaf9c163d077f7335b8144ae49", "Url": "https://api.github.com/repos/dakaraphi/eclipse-plugin-commander", "Date": "2018-03-17T00:30:11Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.batfish.datamodel.collections.AbstractOutlierSet.getRole()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (otherRole.isPresent()) { return -1; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/908/buggy-version/projects.batfish-common-protocol.src.main.java.org.batfish.datamodel.collections.AbstractOutlierSet.java", "BodyUseAPI": [], "Fixed commit": "fe8badcb67406f20ca08d4a807e6b29ba8d326c1", "Url": "https://api.github.com/repos/batfish/batfish", "Date": "2018-01-04T21:04:45Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.spawn) != null) savespawn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5015/buggy-version/Magna.src.main.java.de.morigm.magna.config.PluginConfig.java", "BodyUseAPI": [], "Fixed commit": "fe7b5d6fd9402a53d787ccf7f840074662eb9bda", "Url": "https://api.github.com/repos/MoriGM/Magna", "Date": "2018-07-26T19:18:10Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val != null) height = val; else height = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8006/buggy-version/app.src.main.java.com.masudias.flickerdashboard.domain.db.Photo.java", "BodyUseAPI": [], "Fixed commit": "405010381b5411e39e308c858f191765b48ed1b5", "Url": "https://api.github.com/repos/masudias/flickr.photos.search", "Date": "2018-05-17T21:12:03Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val != null) width = val; else width = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8006/buggy-version/app.src.main.java.com.masudias.flickerdashboard.domain.db.Photo.java", "BodyUseAPI": [], "Fixed commit": "405010381b5411e39e308c858f191765b48ed1b5", "Url": "https://api.github.com/repos/masudias/flickr.photos.search", "Date": "2018-05-17T21:12:03Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lexicalAnalyzerPackage.LexicalAnalyzer.line.length()) > 0) { lexicalAnalyzerPackage.LexicalAnalyzer.lex(); }else { lexicalAnalyzerPackage.LexicalAnalyzer.line = null; java.lang.System.out.println(\"Skipping empty line in file\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3190/buggy-version/LexicalAnalyzer.src.lexicalAnalyzerPackage.LexicalAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "087b3cb5a01a0972c6b1c697f46aea3f48edd4a8", "Url": "https://api.github.com/repos/scottmhogan/LexicalAnalyzer", "Date": "2018-09-29T21:09:45Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["c.getRealPart().isZero()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isReZero && ((org.matheclipse.parser.client.operator.ASTNodeFactory.TIMES_PRECEDENCE) < precedence)) { append(buf, \"(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1232/buggy-version/symja_android_library.matheclipse-core.src.main.java.org.matheclipse.core.form.output.OutputFormFactory.java", "BodyUseAPI": [], "Fixed commit": "d753f7941d7b2ddbfa3bf31e0b024fd106db5675", "Url": "https://api.github.com/repos/axkr/symja_android_library", "Date": "2018-03-10T13:50:58Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["c.getRealPart().isZero()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isReZero && ((org.matheclipse.parser.client.operator.ASTNodeFactory.TIMES_PRECEDENCE) < precedence)) { append(buf, \"(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1232/buggy-version/symja_android_library.matheclipse-core.src.main.java.org.matheclipse.core.form.output.OutputFormFactory.java", "BodyUseAPI": [], "Fixed commit": "d753f7941d7b2ddbfa3bf31e0b024fd106db5675", "Url": "https://api.github.com/repos/axkr/symja_android_library", "Date": "2018-03-10T13:50:58Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.moip.mockkid.provider.ConfigurationProvider.getConfiguration(br.com.moip.mockkid.model.MockkidRequest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (matchedConfig == null) { return org.springframework.http.ResponseEntity.status(HttpStatus.NOT_FOUND).body(\"No configuration found for request URL.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7548/buggy-version/src.main.java.br.com.moip.mockkid.facade.MockKidFacade.java", "BodyUseAPI": [], "Fixed commit": "f57cafbfdabd19e8924de1e60b8979cee9f26ffc", "Url": "https://api.github.com/repos/wirecardBrasil/mockkid", "Date": "2018-01-15T17:49:44Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view) == null) { view = inflater.inflate(R.layout.fragment_info, container, false); initView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2190/buggy-version/app.src.main.java.com.hongyan.xcj.modules.main.info.InfoFragment.java", "BodyUseAPI": [], "Fixed commit": "aafc9f511d2ec74190b4c40b6813847761a5bb41", "Url": "https://api.github.com/repos/BlueGuys/XCJ", "Date": "2018-03-24T10:55:55Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bitmap != null) { circleImageViewProfile.setImageBitmap(bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8716/buggy-version/app.src.main.java.com.example.yun.meetup.activities.UserProfileActivity.java", "BodyUseAPI": ["de.hdodenhof.circleimageview.CircleImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "43732583a76409163b1fc13a47a3a7cdbc51f05a", "Url": "https://api.github.com/repos/alessioRM87/MeetUs.Mobile", "Date": "2018-04-09T18:51:43Z"},
{"Line": "=>1431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.getNode(container.getNodeId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (node == null) { org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.LOG.info(((((((((\"Container=\" + container) + \" of application=\") + appId) + \" completed with event=\") + event) + \" on a node=\") + (container.getNodeId())) + \". However the node might be already removed by RM.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7614/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler.java", "BodyUseAPI": [], "Fixed commit": "dbdf662c09d54d65234e4d0ccd2822fe1c6cf664", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2017-09-26T14:07:04Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jobTask) != null) jobTask.cancel(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4272/buggy-version/app.src.main.java.com.rajitha.andro.orientationcalc.RecordFragment.java", "BodyUseAPI": [], "Fixed commit": "82cef39eac9f99b5b1ce3174f97966a44c8ac884", "Url": "https://api.github.com/repos/dumindarw/orientation-calc", "Date": "2018-03-26T15:09:58Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 1) { commandSender.sendMessage(\"Usage: /mob spawn <mob> <opt:player>\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1230/buggy-version/src.main.java.suomicraftpe.mobplugin.MobPlugin.java", "BodyUseAPI": [], "Fixed commit": "9d401bd6d63edc585cb6ecc3ed7a17ec7a82ad64", "Url": "https://api.github.com/repos/PetteriM1/SuomiCraftPEMobs", "Date": "2018-03-18T16:36:19Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Main.players.containsKey(event.getPlayer().getUniqueId())) Main.players.remove(event.getPlayer().getUniqueId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3228/buggy-version/Plugins.FactionAreaPlugin.src.me.Loler.FactionArea.Area.Events.PlayerJoin.java", "BodyUseAPI": ["Main.players.remove(event.getPlayer().getUniqueId())", "event.getPlayer().getUniqueId()", "org.bukkit.event.player.PlayerQuitEvent.getPlayer()"], "Fixed commit": "aeb51f3fc87ec5f5f031854d590ec586a1bd3fb7", "Url": "https://api.github.com/repos/Lol3rrr/ServerPlugins", "Date": "2018-01-17T21:35:20Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Main.playerUUIDList.contains(event.getPlayer().getUniqueId())) Main.playerUUIDList.remove(event.getPlayer().getUniqueId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3228/buggy-version/Plugins.FactionAreaPlugin.src.me.Loler.FactionArea.Area.Events.PlayerJoin.java", "BodyUseAPI": ["event.getPlayer().getUniqueId()", "Main.playerUUIDList.remove(event.getPlayer().getUniqueId())", "org.bukkit.event.player.PlayerQuitEvent.getPlayer()"], "Fixed commit": "aeb51f3fc87ec5f5f031854d590ec586a1bd3fb7", "Url": "https://api.github.com/repos/Lol3rrr/ServerPlugins", "Date": "2018-01-17T21:35:20Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(config.getArguments()))) options.addArguments(config.getArguments());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6742/buggy-version/src.main.java.com.xceptance.neodymium.module.statement.browser.multibrowser.BrowserRunnerHelper.java", "BodyUseAPI": ["com.xceptance.neodymium.module.statement.browser.multibrowser.configuration.BrowserConfiguration.getArguments()", "org.openqa.selenium.chrome.ChromeOptions.addArguments(config.getArguments())"], "Fixed commit": "3c0af0cd9ffb593117bcdf391ec02cd24129b778", "Url": "https://api.github.com/repos/Xceptance/neodymium-library", "Date": "2018-06-07T14:06:22Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(config.getArguments()))) options.addArguments(config.getArguments());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6742/buggy-version/src.main.java.com.xceptance.neodymium.module.statement.browser.multibrowser.BrowserRunnerHelper.java", "BodyUseAPI": ["org.openqa.selenium.firefox.FirefoxOptions.addArguments(config.getArguments())", "com.xceptance.neodymium.module.statement.browser.multibrowser.configuration.BrowserConfiguration.getArguments()"], "Fixed commit": "3c0af0cd9ffb593117bcdf391ec02cd24129b778", "Url": "https://api.github.com/repos/Xceptance/neodymium-library", "Date": "2018-06-07T14:06:22Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(config.getArguments()))) options.addCommandSwitches(config.getArguments());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6742/buggy-version/src.main.java.com.xceptance.neodymium.module.statement.browser.multibrowser.BrowserRunnerHelper.java", "BodyUseAPI": ["org.openqa.selenium.ie.InternetExplorerOptions.addCommandSwitches(config.getArguments())", "com.xceptance.neodymium.module.statement.browser.multibrowser.configuration.BrowserConfiguration.getArguments()"], "Fixed commit": "3c0af0cd9ffb593117bcdf391ec02cd24129b778", "Url": "https://api.github.com/repos/Xceptance/neodymium-library", "Date": "2018-06-07T14:06:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFull()) { java.lang.System.out.println(\"Error, DeQueue is full\"); }else { if ((rear) == ((maxSize) - 1)) rear = -1; queArray[(++(rear))] = j; (nItems)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3864/buggy-version/Homework.Homework02.DeQueue.java", "BodyUseAPI": [], "Fixed commit": "5248b5122e020cf0f6d6391b5c41a562b6065437", "Url": "https://api.github.com/repos/AbellHype/CMSI281", "Date": "2018-10-22T21:50:44Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFull()) { java.lang.System.out.println(\"Error, DeQueue is full\"); }else { if ((front) == 0) front = maxSize; queArray[(--(front))] = j; (nItems)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3864/buggy-version/Homework.Homework02.DeQueue.java", "BodyUseAPI": [], "Fixed commit": "5248b5122e020cf0f6d6391b5c41a562b6065437", "Url": "https://api.github.com/repos/AbellHype/CMSI281", "Date": "2018-10-22T21:50:44Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((front) != 0) { rear = 0; }else { rear = (nItems) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3864/buggy-version/Homework.Homework02.DeQueue.java", "BodyUseAPI": [], "Fixed commit": "5248b5122e020cf0f6d6391b5c41a562b6065437", "Url": "https://api.github.com/repos/AbellHype/CMSI281", "Date": "2018-10-22T21:50:44Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((raf.length()) < capacity) raf.setLength(capacity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7870/buggy-version/src.main.java.net.openhft.chronicle.bytes.MappedFile.java", "BodyUseAPI": ["java.io.RandomAccessFile.setLength(long)"], "Fixed commit": "33c1a33f6de050fa381acad7e14752ab18c139b9", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Bytes", "Date": "2018-08-07T06:01:43Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != \"\") { if ((poly.get(1)) < 0) result = result + \"-\"; else result = result + \"+\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/738/buggy-version/src.classes.Formatter.java", "BodyUseAPI": [], "Fixed commit": "adcb0d9c6d1e2ea76f600d30bf73b796e053d4c9", "Url": "https://api.github.com/repos/Aaal-E/algebra-for-security-poly", "Date": "2018-10-02T13:41:48Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != \"\") if ((poly.get(i)) < 0) result = result + \"-\"; else result = result + \"+\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/738/buggy-version/src.classes.Formatter.java", "BodyUseAPI": [], "Fixed commit": "adcb0d9c6d1e2ea76f600d30bf73b796e053d4c9", "Url": "https://api.github.com/repos/Aaal-E/algebra-for-security-poly", "Date": "2018-10-02T13:41:48Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((indexInfo.get(fieldPath)) == null) newIndex.put((((ATTR_VALUE_UNSAFE) + \".\") + fieldPath), 1); else newIndex.put((((ATTR_VALUE_UNSAFE) + \".\") + fieldPath), indexInfo.get(fieldPath));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2231/buggy-version/src.main.java.com.ibm.research.mongotx.lrc.LRCTxDBCollection.java", "BodyUseAPI": ["org.bson.Document.get(java.lang.String)", "org.bson.Document.put((((ATTR_VALUE_UNSAFE) + \".\") + fieldPath),indexInfo.get(fieldPath))", "org.bson.Document.put((((ATTR_VALUE_UNSAFE) + \".\") + fieldPath),int)"], "Fixed commit": "ad5509f7c18a195fb1e6addefddb899419d4042e", "Url": "https://api.github.com/repos/hhorii/mongo-tx", "Date": "2018-02-23T23:28:32Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret != \"void\") writer.write(\"return null;\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9272/buggy-version/src.linus.reflection.dynamic.DynamicClassWriter.java", "BodyUseAPI": [], "Fixed commit": "415cadc516265478437f675dbb9f79ecbe6c5e15", "Url": "https://api.github.com/repos/Steinschnueffler/DynamicClass", "Date": "2018-05-21T15:22:15Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toBeLowerBound < toBeUpperBound) { com.google.common.collect.Range<java.lang.Double> newRange = com.google.common.collect.Range.open(toBeLowerBound, toBeUpperBound); net.sf.mzmine.modules.masslistmethods.ADAPchromatogrambuilder.ADAPChromatogram newChrom = new net.sf.mzmine.modules.masslistmethods.ADAPchromatogrambuilder.ADAPChromatogram(dataFile, allScanNumbers); newChrom.addMzPeak(mzPeak.getScanNumber(), mzPeak); newChrom.setHighPointMZ(mzPeak.getMZ()); rangeToChromMap.put(newRange, newChrom); rangeSet.add(newRange); }else if ((toBeLowerBound.equals(toBeUpperBound)) && (plusRange != null)) { net.sf.mzmine.modules.masslistmethods.ADAPchromatogrambuilder.ADAPChromatogram curChrom = rangeToChromMap.get(plusRange); curChrom.addMzPeak(mzPeak.getScanNumber(), mzPeak); }else throw new java.lang.IllegalStateException(java.lang.String.format(\"Incorrect range [%f, %f] for m/z %f\", toBeLowerBound, toBeUpperBound, mzPeak.getMZ()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/623/buggy-version/src.main.java.net.sf.mzmine.modules.masslistmethods.ADAPchromatogrambuilder.ADAPChromatogramBuilderTask.java", "BodyUseAPI": ["java.lang.Double.equals(java.lang.Double)", "java.lang.String.format(java.lang.String,java.lang.Double,java.lang.Double,mzPeak.getMZ())", "com.google.common.collect.Range.open(java.lang.Double,java.lang.Double)"], "Fixed commit": "fca68d94f44dbce4c014c166434e3891105916e1", "Url": "https://api.github.com/repos/mzmine/mzmine2", "Date": "2018-10-29T19:02:26Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cacheIdStr == null) { serializedIds = com.pratilipi.recommendations.utils.S3Utility.getSerializedContentPartOnePratilipiIds(language); cacheIdStr = serializedIds.stream().map(( number) -> java.lang.String.valueOf(number)).collect(java.util.stream.Collectors.joining(\",\")); redisUtility.set((\"v2_1_Serialized_\" + language), cacheIdStr, 120L, java.util.concurrent.TimeUnit.MINUTES); }else { if ((cacheIdStr.length()) > 0) { serializedIds = java.util.stream.Stream.of(cacheIdStr.split(\",\")).map(java.lang.Long::parseLong).collect(java.util.stream.Collectors.toList()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1856/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["java.util.stream.Stream<java.lang.String>.map(java.util.function.Function<? super java.lang.String, ? extends java.lang.Long>)", "java.lang.String.length()", "java.lang.String.split(java.lang.String)", "java.util.stream.Stream.of(java.lang.String[])", "java.util.stream.Stream<java.lang.Long>.collect(java.util.stream.Collector<java.lang.Long, ?, java.util.List<java.lang.Long>>)"], "Fixed commit": "8935200688f3ad03bebc08df0c2f6a6bf041bfa0", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-09-01T07:05:55Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (serializedIds != null) { serializedIds.removeAll(userReadPratilipiIds); if ((serializedIds.size()) > 0) { java.util.Collections.shuffle(serializedIds); com.pratilipi.recommendations.dto.Pratilipi ptlp = new com.pratilipi.recommendations.dto.Pratilipi(); ptlp.setPratilipiId(serializedIds.get(0)); userReadPratilipiIds.add(serializedIds.get(0)); meta = new java.util.HashMap<java.lang.String, java.lang.Object>(); meta.put(\"recommendationType\", \"Serlialized\"); ptlp.setMeta(meta); pratilipis.add(ptlp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1856/buggy-version/src.main.java.com.pratilipi.recommendations.service.PratilipiService.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.removeAll(java.util.List<java.lang.Long>)", "java.util.List<java.lang.Long>.size()", "java.util.Collections.shuffle(java.util.List<java.lang.Long>)", "java.util.List<java.lang.Long>.add(java.lang.Long)", "java.util.List<java.lang.Long>.get(int)", "java.util.List<java.lang.Long>.get(int)", "com.pratilipi.recommendations.jdo.Pratilipi.setPratilipiId(java.lang.Long)"], "Fixed commit": "8935200688f3ad03bebc08df0c2f6a6bf041bfa0", "Url": "https://api.github.com/repos/Pratilipi/ecs-recommendation", "Date": "2018-09-01T07:05:55Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["1.findViewById(R.id.textView2)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (textView2.getText().toString().startsWith(com.snthetik.exchanger.DisplayMessageActivity.allChats.get(currentChatId))) com.snthetik.exchanger.DisplayMessageActivity.allChats.set(currentChatId, textView2.getText().toString()); else { for (int i = 0; i < (com.snthetik.exchanger.DisplayMessageActivity.allChats.size()); i++) { if (textView2.getText().toString().startsWith(com.snthetik.exchanger.DisplayMessageActivity.allChats.get(i))) { com.snthetik.exchanger.DisplayMessageActivity.allChats.set(i, textView2.getText().toString()); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7499/buggy-version/app.src.main.java.com.snthetik.exchanger.DisplayMessageActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.set(int,textView2.getText().toString())", "android.widget.TextView.getText()", "textView2.getText().toString()", "android.widget.TextView.getText()", "textView2.getText().toString().startsWith(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "textView2.getText().toString()", "java.util.ArrayList<java.lang.String>.set(int,textView2.getText().toString())", "android.widget.TextView.getText()", "textView2.getText().toString()"], "Fixed commit": "a26af8dd26492b8de21ba879674d63199c772145", "Url": "https://api.github.com/repos/reihe00/Exchanger", "Date": "2018-10-29T07:37:07Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board[move.toRow][move.toColumn]) != null) if ((board[move.toRow][move.toColumn].player()) == (currentPlayer())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7926/buggy-version/src.chess.ChessModel.java", "BodyUseAPI": ["board[move.toRow][move.toColumn].player()"], "Fixed commit": "06fddf16233c36b5d37b8400cc8bde7953c901d3", "Url": "https://api.github.com/repos/Rand3rino/ChessPrj", "Date": "2018-03-22T00:41:12Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectService) == null) { return currEndpoints; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4184/buggy-version/app.src.main.java.me.gnahum12345.fbuair.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "055869e10eb703fe72a5c45af1c67d23ea148348", "Url": "https://api.github.com/repos/FBUAir/FBUAir", "Date": "2018-07-31T22:52:15Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.IOUtils.toString(java.net.URI,java.nio.charset.Charset)", "com.vaadin.framework8.migrate.MigrationTool.modifyDeclarative(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(htmlFile.equals(migratedFile))) { org.apache.commons.io.IOUtils.write(migratedFile, new java.io.FileOutputStream(f), java.nio.charset.StandardCharsets.UTF_8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/882/buggy-version/src.main.java.com.vaadin.framework8.migrate.MigrationTool.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.write(java.lang.String,java.io.FileOutputStream,java.nio.charset.Charset)"], "Fixed commit": "6987f936c4eb0cded1c1bc59868555c8ec0b1003", "Url": "https://api.github.com/repos/mvysny/framework8-migration-tool", "Date": "2018-10-24T12:14:38Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.harystolho.pe.linkedList.IndexLinkedList<com.harystolho.pe.Word>.get(float,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((wordToRemove.getType()) == (com.harystolho.pe.Word.TYPES.NEW_LINE)) { com.harystolho.thread.FileUpdaterThread.decrementBiggestYBy(com.harystolho.canvas.CanvasManager.getInstance().getLineHeight()); if ((wordToRemove.getY()) == (com.harystolho.canvas.CanvasManager.getInstance().getLineHeight())) { getWords().getFirst().setY(com.harystolho.canvas.CanvasManager.getInstance().getLineHeight()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2091/buggy-version/src.main.java.com.harystolho.pe.File.java", "BodyUseAPI": ["com.harystolho.pe.Word.getY()"], "Fixed commit": "2fd4ab31dba79216e6a64f3d8983262f3528a432", "Url": "https://api.github.com/repos/Harystolho/PferdEditor", "Date": "2018-09-27T18:47:39Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((room.getId()) == 0) { org.springframework.util.Assert.isTrue((((inventory.getMetal()) >= (room.getRoomDesign().getCostMetal())) && ((inventory.getWood()) >= (room.getRoomDesign().getCostWood()))), \"Not enough resources\"); inventory.setMetal(((inventory.getMetal()) - (room.getRoomDesign().getCostMetal()))); inventory.setWood(((inventory.getWood()) - (room.getRoomDesign().getCostWood()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7179/buggy-version/Acme-Survival.src.main.java.services.RoomService.java", "BodyUseAPI": ["room.getRoomDesign().getCostMetal()", "domain.Room.getRoomDesign()", "org.springframework.util.Assert.isTrue((((inventory.getMetal()) >= (room.getRoomDesign().getCostMetal())) && ((inventory.getWood()) >= (room.getRoomDesign().getCostWood()))),java.lang.String)", "room.getRoomDesign().getCostWood()", "room.getRoomDesign().getCostWood()", "domain.Inventory.setWood(((inventory.getWood()) - (room.getRoomDesign().getCostWood())))", "domain.Room.getRoomDesign()", "room.getRoomDesign().getCostMetal()", "domain.Room.getRoomDesign()", "domain.Inventory.setMetal(((inventory.getMetal()) - (room.getRoomDesign().getCostMetal())))", "domain.Room.getRoomDesign()"], "Fixed commit": "b003950d56c08a5b5b234bf3fa1eaab3eed836fa", "Url": "https://api.github.com/repos/judamalua/DT-D12-Hackathon", "Date": "2018-05-23T19:42:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isMacOs) { try { java.net.URL iconURL = sun.applet.Main.class.getResource(\"/icons/logo.png\"); java.awt.Image image = new javax.swing.ImageIcon(iconURL).getImage(); com.apple.eawt.Application.getApplication().setDockIconImage(image); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6354/buggy-version/src.main.java.com.mycompany.acrylix2.MainApp.java", "BodyUseAPI": [], "Fixed commit": "1a5f4e275439eac57eda28fb7a23b11d7784a9c0", "Url": "https://api.github.com/repos/sunwooha/AcryliX", "Date": "2018-02-14T10:19:25Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFilterSortByHighLowList) != null) chooseOptionForSort.setText(mFilterSortByHighLowList.getAmountHighOrLow()); else chooseOptionForSort.setText(getString(R.string.choose_one_option));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7415/buggy-version/app.src.main.java.com.rescribe.doctor.ui.fragments.patient.my_patient.DrawerForMyPatients.java", "BodyUseAPI": [], "Fixed commit": "fabeac2fd9f5f7dc142d33fc1eb483b11f8d56e1", "Url": "https://api.github.com/repos/sandeepbahalkar123/rescribeDoctor_repo", "Date": "2018-03-22T09:54:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validated) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1936/buggy-version/core.src.main.java.io.doov.core.dsl.impl.DefaultResult.java", "BodyUseAPI": [], "Fixed commit": "7b741d7f20ae525ccbab2ebdb32e36556c638b6d", "Url": "https://api.github.com/repos/lesfurets/dOOv", "Date": "2018-05-29T14:41:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context.getRootMetadata().message(context)) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1936/buggy-version/core.src.main.java.io.doov.core.dsl.impl.DefaultResult.java", "BodyUseAPI": [], "Fixed commit": "7b741d7f20ae525ccbab2ebdb32e36556c638b6d", "Url": "https://api.github.com/repos/lesfurets/dOOv", "Date": "2018-05-29T14:41:56Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((position.getAttributes()) == null) || (position.getAttributes().isEmpty())) { request.replace(\"##attributes##\", \"{}\"); }else { request.replace(\"##attributes##\", org.traccar.Context.getObjectMapper().writeValueAsString(position.getAttributes())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7511/buggy-version/src.org.traccar.MQTTDataHandler.java", "BodyUseAPI": ["org.traccar.Context.getObjectMapper().writeValueAsString(position.getAttributes())", "java.lang.String.replace(java.lang.String,org.traccar.Context.getObjectMapper().writeValueAsString(position.getAttributes()))", "org.traccar.model.Position.getAttributes()"], "Fixed commit": "50b6281fe0fcafb7beacf19abe52bf4a307550c2", "Url": "https://api.github.com/repos/fleetr-eu/traccar", "Date": "2018-10-04T14:10:23Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hili == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2048/buggy-version/framework.common.src.cc.alcina.framework.common.client.logic.domaintransform.lookup.DetachedCacheObjectStore.java", "BodyUseAPI": [], "Fixed commit": "5e6f63e13f1e583c4decf5f644439913ed277a8e", "Url": "https://api.github.com/repos/nevella/alcina", "Date": "2018-05-18T21:32:39Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.snu.mist.core.master.TaskStatsMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (taskStats == null) { allTaskList.remove(task); throw new java.lang.IllegalStateException(\"Exception thrown! This might be because of synchronization issue... Try again!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2200/buggy-version/mist-core.src.main.java.edu.snu.mist.core.master.lb.allocation.ApplicationAwareQueryAllocationManager.java", "BodyUseAPI": [], "Fixed commit": "477519487345915097568f381602ef300c1b8050", "Url": "https://api.github.com/repos/DifferentSC/mist-1", "Date": "2018-07-02T13:28:24Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ranges.contains(own))) { ranges.add(own); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8746/buggy-version/microbat_instrumentator.src.core.microbat.model.trace.Trace.java", "BodyUseAPI": ["java.util.List<microbat.model.ClassLocation>.add(microbat.model.ClassLocation)"], "Fixed commit": "b7e3cf465d92119f4c1d15beab09372837b6a6d5", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2018-03-20T07:40:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cards[x].getSuit()) == 2) cntDiamonds++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3023/buggy-version/app.src.main.java.at.aau.pokerfox.partypoker.model.Hand.java", "BodyUseAPI": [], "Fixed commit": "ecbb20435634edc03b10890918658aec5b3d412b", "Url": "https://api.github.com/repos/mamanigrasso/PartyPoker", "Date": "2018-06-06T09:28:12Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((cntHearts < 5) && (cntSpades < 5)) && (cntDiamonds < 5)) && (cntClubs < 5)) flush = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3023/buggy-version/app.src.main.java.at.aau.pokerfox.partypoker.model.Hand.java", "BodyUseAPI": [], "Fixed commit": "ecbb20435634edc03b10890918658aec5b3d412b", "Url": "https://api.github.com/repos/mamanigrasso/PartyPoker", "Date": "2018-06-06T09:28:12Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cards[x].getSuit()) == 0) cntHearts++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3023/buggy-version/app.src.main.java.at.aau.pokerfox.partypoker.model.Hand.java", "BodyUseAPI": [], "Fixed commit": "ecbb20435634edc03b10890918658aec5b3d412b", "Url": "https://api.github.com/repos/mamanigrasso/PartyPoker", "Date": "2018-06-06T09:28:12Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cards[x].getSuit()) == 3) cntClubs++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3023/buggy-version/app.src.main.java.at.aau.pokerfox.partypoker.model.Hand.java", "BodyUseAPI": [], "Fixed commit": "ecbb20435634edc03b10890918658aec5b3d412b", "Url": "https://api.github.com/repos/mamanigrasso/PartyPoker", "Date": "2018-06-06T09:28:12Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((at.aau.pokerfox.partypoker.model.Game.maInterface) != null) at.aau.pokerfox.partypoker.model.Game.maInterface.showAllPlayerCards();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3023/buggy-version/app.src.main.java.at.aau.pokerfox.partypoker.model.Game.java", "BodyUseAPI": [], "Fixed commit": "ecbb20435634edc03b10890918658aec5b3d412b", "Url": "https://api.github.com/repos/mamanigrasso/PartyPoker", "Date": "2018-06-06T09:28:12Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.id) != null) { lesson_model_builder.add(\"id\", obj.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9580/buggy-version/ExPLoRAA-API.src.main.java.it.cnr.istc.pst.exploraa.api.LessonModel.java", "BodyUseAPI": ["javax.json.JsonObjectBuilder.add(java.lang.String,java.lang.Long)"], "Fixed commit": "14d18236f4b5015cd042627334459bbdf823d20e", "Url": "https://api.github.com/repos/pstlab/ExPLoRAA", "Date": "2018-07-26T09:25:31Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8481/buggy-version/src.main.java.com.oracle.cloud.baremetal.jenkins.BaremetalCloudAgentTemplate.java", "BodyUseAPI": [], "Fixed commit": "9467b5c0567945b1b57ac501615b0f9121e10b9b", "Url": "https://api.github.com/repos/jenkinsci/oracle-cloud-infrastructure-compute-plugin", "Date": "2018-04-08T08:00:17Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (getRegSP())) setRegSP(255); else setRegSP(((getRegSP()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3754/buggy-version/src.myc64emu.myC64CPU.java", "BodyUseAPI": [], "Fixed commit": "1448454b61da17990c39d98674e1bcc5eb3b9f5f", "Url": "https://api.github.com/repos/sky4walk/myC64Java", "Date": "2018-02-27T21:14:14Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Register.allocatable.contains(r)) return new mini_c.Reg(r);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6213/buggy-version/src.mini_c.ToLTL.java", "BodyUseAPI": [], "Fixed commit": "db4f1466befea6e05ad9d20ea971c2af8ae36073", "Url": "https://api.github.com/repos/julien-piet/mini-c-compiler", "Date": "2018-03-08T19:05:59Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(type)) { throw new org.trafficpolice.commons.exception.BizException(org.trafficpolice.commons.enumeration.GlobalStatusEnum.PARAM_MISS, \"type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3866/buggy-version/traffic-police-service.src.main.java.org.trafficpolice.service.impl.CategoryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e7916b79ef6cd3e57c9cef914caa4d076ed9c94f", "Url": "https://api.github.com/repos/zhangxf/traffic-police", "Date": "2018-07-21T01:58:00Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) != null) { client.getLikesById(me.caelumterrae.fbunewsapp.singleton.CurrentUser.getUid(), new me.caelumterrae.fbunewsapp.handlers.database.GetUserLikesHandler(getContext(), likes, adapter, rv)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7324/buggy-version/app.src.main.java.me.caelumterrae.fbunewsapp.fragments.UserFragmentTabs.UpvotedFragment.java", "BodyUseAPI": [], "Fixed commit": "1fa2b4e3b64146ae74bf8a2ea9ab002d0f4f302f", "Url": "https://api.github.com/repos/SomethingKindaWitty/FBU_Summer_Project", "Date": "2018-08-10T18:35:42Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["In.readInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numAvailable < 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2518/buggy-version/lab2.DebugPractice.DebugExercise3.java", "BodyUseAPI": [], "Fixed commit": "467cf4eb3556196ee494d84957b01de6614fc731", "Url": "https://api.github.com/repos/sissishiny/cs61b", "Date": "2018-05-15T02:47:15Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameManager.getChoice()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (choice == 1) { if (((SinglePlayer.wager) * 2) <= (SinglePlayer.money)) { Dealer.dealCard(playerHand.hand); SinglePlayer.wager *= 2; javax.swing.JOptionPane.showMessageDialog(null, (\"Upping your bid to $\" + (SinglePlayer.wager)), \"Wager updated!\", javax.swing.JOptionPane.PLAIN_MESSAGE); javax.swing.JOptionPane.showMessageDialog(null, (((\"You have received a \" + (playerHand.hand.get(((playerHand.hand.size()) - 1)).suit.symbol)) + (playerHand.hand.get(((playerHand.hand.size()) - 1)).name)) + \".\"), \"Hand updated!\", javax.swing.JOptionPane.PLAIN_MESSAGE); playStillGoing = false; }else { javax.swing.JOptionPane.showMessageDialog(null, ((\"You cannot double, as you don't have $\" + ((SinglePlayer.wager) * 2)) + \" to wager!\"), \"Error!\", javax.swing.JOptionPane.ERROR_MESSAGE); continue; } }else if (choice == 2) { playStillGoing = false; break; }else { if (firstPlay) { SinglePlayer.wager *= 0.5; playerHand.active = false; firstPlay = false; break; }else { javax.swing.JOptionPane.showMessageDialog(null, \"Sorry, but you can only Surrender on your first hand!\", \"Error!\", javax.swing.JOptionPane.ERROR_MESSAGE); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6717/buggy-version/SinglePlayer.java", "BodyUseAPI": [], "Fixed commit": "80540f272015b08cf2bb57e52f51a311b0106bb4", "Url": "https://api.github.com/repos/PlantsVsDan/Blackjack2.0", "Date": "2018-04-28T13:45:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.ide.util.PropertiesComponent.getInstance().getBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!notFirstIn) { if (!naviOpenStatus) { naviOpenStatus = true; com.intellij.ide.util.PropertiesComponent.getInstance().setValue(\"naviOpenStatus\", true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/344/buggy-version/src.main.java.com.github.mustfun.mybatis.plugin.setting.MybatisConfigurable.java", "BodyUseAPI": [], "Fixed commit": "c9b947df49f0061b67d4f1ba42a9fcfc90fc010b", "Url": "https://api.github.com/repos/mustfun/mybatis-plugin-free", "Date": "2018-10-17T09:15:03Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (reader instanceof java.io.BufferedReader) { this.reader = reader; }else { this.reader = new java.io.BufferedReader(reader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/4421/buggy-version/common.core.src.main.java.io.sunshower.io.ReaderInputStream.java", "BodyUseAPI": [], "Fixed commit": "327f45ea88e5e588378dc79fc9f73ed49944d69e", "Url": "https://api.github.com/repos/sunshower-io/sunshower-base", "Date": "2018-10-10T03:18:11Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNumeric(play_count)) { return play_count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1516/buggy-version/src.main.java.manke.spider.transform.TextTransform.java", "BodyUseAPI": [], "Fixed commit": "e0f134a369b43ef4cdea47bf1331ce8390cfc935", "Url": "https://api.github.com/repos/l854434716/spider", "Date": "2018-04-22T15:38:37Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { tvPendingRequests.setText(R.string.chr_hyphen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7792/buggy-version/app.src.main.java.com.transcomfy.transcomfydriver.activity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "6414a5dab8c62a19e31b17ee19f4a475d1ce6992", "Url": "https://api.github.com/repos/eugeneojiambo/transcomfy-driver", "Date": "2018-01-30T05:01:14Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((view.getMeasuredWidth()) == 0) || ((view.getMeasuredHeight()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3887/buggy-version/core.src.main.java.com.shatteredpixel.shatteredpixeldungeon.ShatteredPixelDungeon.java", "BodyUseAPI": [], "Fixed commit": "a93deaa2a7194a18ff2ae35d5137188eeae9c2b5", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2018-10-24T09:12:00Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["qubic.QubicReader.getAssemblyList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (assemblyList == null) return new oracle.QuorumBasedResult(0, 0, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1054/buggy-version/qlite.src.main.java.qlvm.InterQubicResultFetcher.java", "BodyUseAPI": [], "Fixed commit": "77fe2a4c9ed10efed9d0601afd27dd6af75436df", "Url": "https://api.github.com/repos/qubiclite/qlite.lib.java", "Date": "2018-07-15T08:14:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.warchlak.BookStorage.entity.Book.getImageLink()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != imageName) { fileSystemStorageService.removeImageFromTracking(imageName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8553/buggy-version/src.main.java.com.warchlak.BookStorage.service.IBookService.java", "BodyUseAPI": ["com.warchlak.BookStorage.service.FileSystemStorageService.removeImageFromTracking(java.lang.String)"], "Fixed commit": "d0afa5146ccecf4192cf8375ef28b1a763ca0a0c", "Url": "https://api.github.com/repos/MichalMonko/BookStorage", "Date": "2018-08-28T16:16:55Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user != null) { finish(); startActivity(new android.content.Intent(this, com.deepak.pixel.pixel.main_bottom_activity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/7826/buggy-version/app.src.main.java.com.deepak.pixel.pixel.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "dfb41eb83d66087fe89ec2b61257c3706e6bf31f", "Url": "https://api.github.com/repos/PhantomKnight1947/Pixel", "Date": "2018-09-22T08:30:01Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.stop(); player.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2446/buggy-version/app.src.main.java.io.github.mpao.baking.ui.ContentFragment.java", "BodyUseAPI": [], "Fixed commit": "88727cbe5ffe4b83382e5c4fcf4b9706d72060ef", "Url": "https://api.github.com/repos/mpao/and-baking-app", "Date": "2018-05-04T09:36:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, ? extends java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (totalBudget != null) totalBudgetl = new java.math.BigDecimal(totalBudget);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3595/buggy-version/ofbiz-release12.04.hot-deploy.bkeuniv.src.org.ofbiz.bkeuniv.projectdeclaration.ResearchProjectProposal.java", "BodyUseAPI": [], "Fixed commit": "5036dbdf93b4ccbf8126d0d63046430d9f7d7c74", "Url": "https://api.github.com/repos/dungkhmt/bkofbiz", "Date": "2018-07-10T02:44:59Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromDate.after(toDate)) { throw new exceptions.StatisticException(\"Date interval exception.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6346/buggy-version/src.main.java.statistic.StatisticCollector.java", "BodyUseAPI": [], "Fixed commit": "eacd9041a5c04f2cf764f9c8e76ce80ba95bd8d6", "Url": "https://api.github.com/repos/Andrlis/Review-Assistant", "Date": "2018-02-28T16:10:09Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outputDir.exists())) { outputDir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/6267/buggy-version/src.main.java.InfoReader.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "91211e2693946bdb678d17dad1b4215340a642ba", "Url": "https://api.github.com/repos/Tony-Hu/LACounty", "Date": "2018-10-28T03:09:45Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((this) == (name.martingeisse.mahdl.plugin.processor.expression.ProcessedBinaryOperator.EQUAL)) || ((this) == (name.martingeisse.mahdl.plugin.processor.expression.ProcessedBinaryOperator.NOT_EQUAL))) || ((this) == (name.martingeisse.mahdl.plugin.processor.expression.ProcessedBinaryOperator.LESS_THAN))) || ((this) == (name.martingeisse.mahdl.plugin.processor.expression.ProcessedBinaryOperator.LESS_THAN_OR_EQUAL))) || ((this) == (name.martingeisse.mahdl.plugin.processor.expression.ProcessedBinaryOperator.GREATER_THAN))) || ((this) == (name.martingeisse.mahdl.plugin.processor.expression.ProcessedBinaryOperator.GREATER_THAN_OR_EQUAL))) { if (leftType.equals(rightType)) { return ProcessedDataType.Bit.INSTANCE; }else { throw new name.martingeisse.mahdl.plugin.processor.expression.TypeErrorException(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2773/buggy-version/src.name.martingeisse.mahdl.plugin.processor.expression.ProcessedBinaryOperator.java", "BodyUseAPI": [], "Fixed commit": "ca83b228ccaae692cde74c867ba31c0249402f70", "Url": "https://api.github.com/repos/MartinGeisse/mahdl-plugin", "Date": "2018-03-17T14:59:49Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkValidPosition(x, y))) { return game.Util.INVALIDATTACK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/3465/buggy-version/src.gui.board.PlayerBoard.java", "BodyUseAPI": [], "Fixed commit": "4e550741de7c402b823a64d4cca91f12bf6ade28", "Url": "https://api.github.com/repos/viwnj/NavalBattle", "Date": "2018-07-14T13:32:40Z"},
{"Line": "=>912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (what == (MSG_GET_FORM_END)) { }else { cn.shomes.tfblue.util.ToastUtils.showOnceLong(activity, \"\u67e5\u8be2\u8054\u5355\u5931\u8d25, \u8bf7\u7a0d\u540e\u91cd\u8bd5!\"); if ((null != (dialog)) && (dialog.isShowing())) { dialog.dismiss(); } finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1877/buggy-version/app.src.main.java.cn.shomes.tfblue.BarCodeActivity.java", "BodyUseAPI": [], "Fixed commit": "a58f0112f2afbc2b00db30144915982116efe8f1", "Url": "https://api.github.com/repos/kayoxu/TFBlue", "Date": "2018-10-23T17:15:33Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position.equals(\"thumbnail\")) { good.setThumbnail(value); }else if (position.equals(\"video\")) { good.setVideo(value); }else if (position.equals(\"gdproperty\")) { good.setGdproperty(value); }else if (position.equals(\"introduce\")) { good.setIntroduce(value); }else if (position.equals(\"homerecommend\")) { good.setHomerecommend(java.lang.Integer.parseInt(value)); }else { return com.cjyong.goule.main.MyJsonResult.getErrorResult(\"\u66f4\u6539\u5c5e\u6027\u4e0d\u652f\u6301\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/8325/buggy-version/src.main.java.com.cjyong.goule.main.service.AdminService.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "baa3abbdaed82d2220d118455466d255f43b379f", "Url": "https://api.github.com/repos/cai123nb/goule", "Date": "2018-05-09T07:13:27Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pokecube.core.interfaces.pokemob.ICanEvolve.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (thisEntity.addedToChunk) { evolution.getEntityWorld().spawnEntity(evolution); if (!(thisEntity.riddenByEntities.isEmpty())) { java.util.List<net.minecraft.entity.Entity> riders = com.google.common.collect.Lists.newArrayList(thisEntity.riddenByEntities); for (net.minecraft.entity.Entity e : riders) { e.dismountRidingEntity(); e.startRiding(evolution); } } new pokecube.core.interfaces.pokemob.ICanEvolve.EvoTicker(evolution, thisEntity.getUniqueID()); thut.api.network.PacketHandler.sendEntityUpdate(evolution); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/9295/buggy-version/src.main.java.pokecube.core.interfaces.pokemob.ICanEvolve.java", "BodyUseAPI": ["net.minecraft.entity.EntityLivingBase.getUniqueID()", "thisEntity.riddenByEntities.isEmpty()", "com.google.common.collect.Lists.newArrayList(thisEntity.riddenByEntities)"], "Fixed commit": "32636a8d8b376d48628810ec93908afd03c57921", "Url": "https://api.github.com/repos/Pokecube-Development/Pokecube-Core", "Date": "2018-09-30T02:10:44Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (fee.getMemoLine())) { memolineWithQuotes = new java.lang.StringBuffer().append('\"').append(fee.getMemoLine()).append('\"').toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2561/buggy-version/api-contract.src.main.java.uk.gov.hmcts.payment.api.contract.PaymentCsvDto.java", "BodyUseAPI": ["uk.gov.hmcts.payment.api.contract.FeeCsvDto.getMemoLine()", "java.lang.StringBuffer.append(fee.getMemoLine())", "new java.lang.StringBuffer().append('\"').append(fee.getMemoLine()).append('\"').toString()", "java.lang.StringBuffer.append(char)"], "Fixed commit": "c106f555db96afcd73d5a180f51f28a937411099", "Url": "https://api.github.com/repos/hmcts/ccpay-payment-app", "Date": "2018-03-15T11:58:23Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fee.getMemoLine().isEmpty())) { memolineWithQuotes = new java.lang.StringBuffer().append('\"').append(fee.getMemoLine()).append('\"').toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/2561/buggy-version/api-contract.src.main.java.uk.gov.hmcts.payment.api.contract.PaymentCsvDto.java", "BodyUseAPI": ["uk.gov.hmcts.payment.api.contract.FeeCsvDto.getMemoLine()", "java.lang.StringBuffer.append(char)", "java.lang.StringBuffer.append(fee.getMemoLine())", "new java.lang.StringBuffer().append('\"').append(fee.getMemoLine()).append('\"').toString()"], "Fixed commit": "c106f555db96afcd73d5a180f51f28a937411099", "Url": "https://api.github.com/repos/hmcts/ccpay-payment-app", "Date": "2018-03-15T11:58:23Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.data.mongodb.core.MongoTemplate.aggregate(com.bbva.arq.devops.ae.mirrorgate.repository.Aggregation,java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((aggregationResult.getUniqueMappedResult()) != null) { aggregationResult.getUniqueMappedResult().setPiNames(aggregationResult.getUniqueMappedResult().getPiNames().stream().sorted(java.util.Comparator.reverseOrder()).collect(java.util.stream.Collectors.toList())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/1700/buggy-version/mirrorgate-api.src.main.java.com.bbva.arq.devops.ae.mirrorgate.repository.FeatureRepositoryImpl.java", "BodyUseAPI": ["aggregationResult.getUniqueMappedResult().setPiNames(aggregationResult.getUniqueMappedResult().getPiNames().stream().sorted(java.util.Comparator.reverseOrder()).collect(java.util.stream.Collectors.toList()))", "aggregationResult.getUniqueMappedResult().getPiNames().stream()", "org.springframework.data.mongodb.core.aggregation.AggregationResults<com.bbva.arq.devops.ae.mirrorgate.repository.FeatureRepositoryImpl.ProgramIncrementNamesAggregationResult>.getUniqueMappedResult()", "org.springframework.data.mongodb.core.aggregation.AggregationResults<com.bbva.arq.devops.ae.mirrorgate.repository.FeatureRepositoryImpl.ProgramIncrementNamesAggregationResult>.getUniqueMappedResult()", "aggregationResult.getUniqueMappedResult().getPiNames().stream().sorted(java.util.Comparator.reverseOrder()).collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)", "aggregationResult.getUniqueMappedResult().getPiNames().stream().sorted(java.util.Comparator<? extends java.lang.Comparable<? super ?>>)", "aggregationResult.getUniqueMappedResult().getPiNames()"], "Fixed commit": "de21ada68b4501d39e179c06adf0c0b579bd5aa1", "Url": "https://api.github.com/repos/BBVA/mirrorgate", "Date": "2018-03-20T15:09:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (uri != null) { com.github.dimanolog.flickr.datamanagers.AutheficationManager.getInstance(this).onFlickrCallback(uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/5196/buggy-version/app.src.main.java.com.github.dimanolog.flickr.activities.LoginActivity.java", "BodyUseAPI": ["com.github.dimanolog.flickr.datamanagers.AutheficationManager.getInstance(this).onFlickrCallback(android.net.Uri)"], "Fixed commit": "0c043de3b08398086771b1ab7e61122ce4dc1fa7", "Url": "https://api.github.com/repos/Dimanolog/Flickr", "Date": "2018-01-10T05:45:49Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accessMode == (AccessMode.USAGE_STATS)) { return new com.PATHomi.helper.impl.ActivityUsageStatsImpl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2018/All/V163/546/buggy-version/push.src.main.java.com.PATHomi.helper.TopActivityFactory.java", "BodyUseAPI": [], "Fixed commit": "75979dbcf27464476ed0d58ddccaa99fb0ddb7bd", "Url": "https://api.github.com/repos/Trumeet/MiPushFramework", "Date": "2018-07-17T11:35:35Z"}]}
