{"UNKNOWN to If":[{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getImages().iterator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (imageItr.hasNext()) return ((systemPropertiesService.getImageUrl()) + \"/\") + (imageItr.next().getLink()); else return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1739/buggy-version/src.main.java.com.softserve.edu.service.implementation.ImageServiceImpl.java", "BodyUseAPI": ["imageItr.next().getLink()", "java.util.Iterator<com.softserve.edu.entity.Image>.next()"], "Fixed commit": "d3031e6df75fc43f71bad815a7395d8a13dbe5bb", "Url": "https://api.github.com/repos/YuriiYurii/HostMe", "Date": "2014-09-15T18:46:37Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bindingresult.hasErrors()) { java.lang.System.out.println(\"toimii\"); return \"sickness/\" + id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7735/buggy-version/src.main.java.com.mycompany.doctorapp.controller.SicknessController.java", "BodyUseAPI": [], "Fixed commit": "d78e3143fcbb3b49fda295eb16c597cb8dc4eb6d", "Url": "https://api.github.com/repos/Luomanen/DoctorApp", "Date": "2016-09-30T13:38:57Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bindingresult.hasErrors()) { return \"redirect:/index\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7735/buggy-version/src.main.java.com.mycompany.doctorapp.controller.SicknessController.java", "BodyUseAPI": [], "Fixed commit": "d78e3143fcbb3b49fda295eb16c597cb8dc4eb6d", "Url": "https://api.github.com/repos/Luomanen/DoctorApp", "Date": "2016-09-30T13:38:57Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (C1.equals(C2)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/193/buggy-version/src.zen.codegen.jvm.AsmMethodBuilder.java", "BodyUseAPI": [], "Fixed commit": "90709aa36bf109375d2c765e1d1dc65550262c65", "Url": "https://api.github.com/repos/sekiguchi-nagisa/libzen", "Date": "2014-01-31T11:17:39Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listObjectInspector.getListLength(listObject)) < 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1771/buggy-version/extensions-contrib.orc-extensions.src.main.java.io.druid.data.input.orc.OrcHadoopInputRowParser.java", "BodyUseAPI": [], "Fixed commit": "525b5f2723ea934f42753cbc382210d9f2118bed", "Url": "https://api.github.com/repos/wwjiang007/druid", "Date": "2017-07-25T17:31:31Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x > 0) degrees = (degrees + (simRandom.nextInt((x * 2)))) - x;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/587/buggy-version/src.emulator.Emulator.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "08ccebba04e03be1e3d2c56d0d002db323fbb6fd", "Url": "https://api.github.com/repos/ndsmyter/Robotica", "Date": "2012-12-12T14:04:34Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x > 0) millimeters = (millimeters + (simRandom.nextInt((x * 2)))) - x;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/587/buggy-version/src.emulator.Emulator.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "08ccebba04e03be1e3d2c56d0d002db323fbb6fd", "Url": "https://api.github.com/repos/ndsmyter/Robotica", "Date": "2012-12-12T14:04:34Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.ednovo.gooru.client.gin.AppClientFactory.isAnonymous())) { org.ednovo.gooru.client.gin.AppClientFactory.getInjector().getClasspageService().v2GetAllClass(\"10\", \"0\", new org.ednovo.gooru.client.SimpleAsyncCallback<org.ednovo.gooru.shared.model.content.ClasspageListDo>() { @java.lang.Override public void onSuccess(org.ednovo.gooru.shared.model.content.ClasspageListDo result) { if ((result.getSearchResults().size()) > 0) { org.ednovo.gooru.client.gin.AppClientFactory.getPlaceManager().revealPlace(PlaceTokens.CLASSHOME); }else { org.ednovo.gooru.client.gin.AppClientFactory.getPlaceManager().redirectPlace(PlaceTokens.STUDY); } } }); }else { org.ednovo.gooru.client.gin.AppClientFactory.getPlaceManager().redirectPlace(PlaceTokens.STUDY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/266/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.HomeView.java", "BodyUseAPI": [], "Fixed commit": "1ce089e084b25e79896e73ffe57e468837f7386e", "Url": "https://api.github.com/repos/shivalinga/Gooru-Web", "Date": "2014-08-25T13:23:59Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["h.transformWord(s).toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((e.length()) > 0) { result.add(e); }else if (notSeenEmptyString) { result.add(s); notSeenEmptyString = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1543/buggy-version/morph.src.main.java.org.apache.lucene.morphology.MorphologyImpl.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "13232282128d34a81b5a48d1b98bc62b9c5e48ce", "Url": "https://api.github.com/repos/AKuznetsov/russianmorphology", "Date": "2015-03-20T22:28:06Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputEventStartYear < inputEventEndYear) { checkFields = true; }else if (checkStart > checkEnd) { javax.swing.JOptionPane.showMessageDialog(null, \"Eventet kan inte sluta innan det b\ufffdrjat!\"); checkFields = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/635/buggy-version/src.views.AddEvent.java", "BodyUseAPI": [], "Fixed commit": "d3c25130769a2b721e954740d6e62605cc091a3a", "Url": "https://api.github.com/repos/Pollopen/Calendar", "Date": "2016-12-16T08:24:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(closed)) { send(true); closed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1224/buggy-version/src.dctc.java.com.amazonaws.services.s3.model.AmazonS3OutputStream.java", "BodyUseAPI": [], "Fixed commit": "9d3a4a92c91d6057b7eff013f05e8941e0a7f504", "Url": "https://api.github.com/repos/dataiku/dctc", "Date": "2013-09-05T16:32:00Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.deeplearning4j.berkeley.Pair<T, T>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(vocabCache.hasToken(pair.getFirst().getLabel()))) || (!(vocabCache.hasToken(pair.getSecond().getLabel())))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8560/buggy-version/deeplearning4j-scaleout.deeplearning4j-nlp.src.main.java.org.deeplearning4j.models.glove.AbstractCoOccurrences.java", "BodyUseAPI": [], "Fixed commit": "f589d15ff5f2813c45f5e228ef82325cee5cf5c7", "Url": "https://api.github.com/repos/deeplearning4j/deeplearning4j", "Date": "2015-12-21T11:14:41Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.rapleaf.hank.coordinator.Domain, java.util.Map<java.lang.Integer, com.rapleaf.hank.coordinator.ServingStatus>>.get(com.rapleaf.hank.coordinator.Domain)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (partitionToServingStatus != null) { for (com.rapleaf.hank.coordinator.ServingStatus servingStatus : partitionToServingStatus.values()) { if ((servingStatus.getNumPartitionsServedAndUpToDate()) == (servingStatus.getNumPartitions())) { partitionsServedAndUpToDate += 1; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4952/buggy-version/src.java.com.rapleaf.hank.coordinator.ServingStatusAggregator.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, com.rapleaf.hank.coordinator.ServingStatus>.values()"], "Fixed commit": "45ee4ac0078378cd28052265ffcd92ec500b15c6", "Url": "https://api.github.com/repos/bryanduxbury/hank", "Date": "2011-11-01T02:26:56Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.LOG.isDebugEnabled()) { de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.LOG.debug(((((\"end date: \" + (swmmInput.getEndDate())) + \" (\") + endDate) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3874/buggy-version/src.main.java.de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(((((\"end date: \" + (swmmInput.getEndDate())) + \" (\") + endDate) + \")\"))"], "Fixed commit": "4984bf4d196d319ec7aa524fbb6fac31e09eeb52", "Url": "https://api.github.com/repos/cismet/cids-custom-sudplan", "Date": "2012-09-25T15:40:45Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.LOG.isDebugEnabled()) { de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.LOG.debug(((((\"start date: \" + (swmmInput.getStartDate())) + \" (\") + startDate) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3874/buggy-version/src.main.java.de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(((((\"start date: \" + (swmmInput.getStartDate())) + \" (\") + startDate) + \")\"))"], "Fixed commit": "4984bf4d196d319ec7aa524fbb6fac31e09eeb52", "Url": "https://api.github.com/repos/cismet/cids-custom-sudplan", "Date": "2012-09-25T15:40:45Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((supplied.getCreationDateAndTime()) != null) { mergedHeaders.setCreationDateAndTime(supplied.getCreationDateAndTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8500/buggy-version/oxalis-outbound.src.main.java.eu.peppol.outbound.transmission.TransmissionRequestBuilder.java", "BodyUseAPI": ["eu.peppol.PeppolStandardBusinessHeader.setCreationDateAndTime(supplied.getCreationDateAndTime())", "eu.peppol.PeppolStandardBusinessHeader.getCreationDateAndTime()"], "Fixed commit": "3ac2fbe3da2086213d02e889f7856c2fff621420", "Url": "https://api.github.com/repos/difi/oxalis", "Date": "2015-03-16T17:38:20Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aftershocks.getDatum().size()) > 2) { if (((lat[((lat.length) - 1)]) - (lat[0])) > ((lon[((lon.length) - 1)]) - (lon[0]))) { dif = (lat[((lat.length) - 1)]) - (lat[0]); latRange = new double[]{ (lat[0]) - buffer, (lat[((lat.length) - 1)]) + buffer }; lonRange = new double[]{ (lon[0]) - buffer, ((lon[0]) + dif) + buffer }; }else { dif = (lon[((lon.length) - 1)]) - (lon[0]); lonRange = new double[]{ (lon[0]) - buffer, (lon[((lon.length) - 1)]) + buffer }; latRange = new double[]{ (lat[0]) - buffer, ((lat[0]) + dif) + buffer }; } }else { double mainLat = ((java.lang.Double) (displayData.getValue(DataRow.LATTITUDE))); double mainLon = ((java.lang.Double) (displayData.getValue(DataRow.LONGITUDE))); latRange = new double[]{ (mainLat - 1) - buffer, (mainLat + 1) + buffer }; lonRange = new double[]{ (mainLon - 1) - buffer, (mainLon + 1) + buffer }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9138/buggy-version/src.edu.gatech.earthquakes.vises.AftershockMap.java", "BodyUseAPI": [], "Fixed commit": "b479b0a20e23dabe2ff744398a4b60b7fd4c4bba", "Url": "https://api.github.com/repos/ejohnson44/QuakesInOurMain", "Date": "2012-11-27T00:00:33Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mGoogleApiClient.isConnected()) { stopLocationUpdates(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7099/buggy-version/app.src.main.java.com.pastcustoms.cq.ComposeMessageActivity.java", "BodyUseAPI": [], "Fixed commit": "ee61155c390204ec3b29a3bcba4ca39a7b9fc954", "Url": "https://api.github.com/repos/smbassett/cq", "Date": "2015-05-28T01:46:34Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((worldObj.getWorldTime()) % 20L) == 0) { java.lang.System.out.println(\"Hello, World\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4479/buggy-version/src.main.java.com.derf.btawc.tileentity.tank.TileEntityTank.java", "BodyUseAPI": [], "Fixed commit": "a725f999c63cb57a9c8f1452c4c5f9ecbd71ab20", "Url": "https://api.github.com/repos/aod6060/BTAWC", "Date": "2016-11-05T19:53:28Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.beans.admin.ComponentInstManager.makeComponentInstanceRow(com.stratelia.webactiv.beans.admin.ComponentInst)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(lang.equals(newInstance.lang))) { com.stratelia.webactiv.beans.admin.ComponentI18N translation = ((com.stratelia.webactiv.beans.admin.ComponentI18N) (translations.get(lang))); com.stratelia.webactiv.organization.ComponentInstanceI18NRow row = new com.stratelia.webactiv.organization.ComponentInstanceI18NRow(newInstance.id, lang, translation.getName(), translation.getDescription()); ddManager.getOrganization().instanceI18N.createTranslation(row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7697/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.ComponentInstManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.silverpeas.util.i18n.Translation>.get(java.lang.String)"], "Fixed commit": "0f114bc51a0802be2f23d808ecbdcc3a1e73a4ef", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2014-01-21T10:42:50Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.beans.admin.SpaceInstManager.makeSpaceRow(com.stratelia.webactiv.beans.admin.SpaceInst)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(lang.equals(newSpaceRow.lang))) { com.stratelia.webactiv.beans.admin.SpaceI18N translation = ((com.stratelia.webactiv.beans.admin.SpaceI18N) (translations.get(lang))); com.stratelia.webactiv.organization.SpaceI18NRow row = new com.stratelia.webactiv.organization.SpaceI18NRow(newSpaceRow.id, lang, translation.getName(), translation.getDescription()); ddManager.getOrganization().spaceI18N.createTranslation(row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7697/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.SpaceInstManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.silverpeas.util.i18n.Translation>.get(java.lang.String)"], "Fixed commit": "0f114bc51a0802be2f23d808ecbdcc3a1e73a4ef", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2014-01-21T10:42:50Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { writeNullString(headerAddress); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8242/buggy-version/core.src.main.java.com.questdb.ql.impl.RecordList.java", "BodyUseAPI": [], "Fixed commit": "0ca330bc27a1a99d26e51a59245a1b89a6b7ee0b", "Url": "https://api.github.com/repos/bluestreak01/questdb", "Date": "2016-09-02T23:22:11Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addedTokens > ((size) - (noTokens))) { addedTokens = (size) - (noTokens); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/141/buggy-version/lab3.TokenBucket.Bucket.java", "BodyUseAPI": [], "Fixed commit": "cb24b1fb5a2c2b73e091d2e576846270fe1ae8f6", "Url": "https://api.github.com/repos/bradenwatling/networks_labs", "Date": "2017-03-15T18:41:02Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dependency.isEager()) dynamicRequest.resolve();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7127/buggy-version/runtime.managers.dynaman.src.main.java.fr.imag.adele.dynamic.manager.ContentManager.java", "BodyUseAPI": [], "Fixed commit": "ea6f1bd386aea648ffc099b95eaead7d4a013b53", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2012-12-06T14:43:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.reflect.Modifier.isFinal(fd.getModifiers()))) { addMethodDeclaration(coid, ModifierSet.PUBLIC, ASTManager.VOID_TYPE, (\"set\" + (org.apache.commons.lang.WordUtils.capitalize(fieldName))), parameter, ((((\"{ this.\" + fieldName) + \" = \") + fieldName) + \"; }\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8337/buggy-version/src.main.java.org.walkmod.settergetter.visitors.SetterGetterGenerator.java", "BodyUseAPI": [], "Fixed commit": "1f5624ade07be890250a06d576cda86112734059", "Url": "https://api.github.com/repos/rpau/walkmod-setter-getter-plugin", "Date": "2014-09-02T08:48:45Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (camelExchange.getPattern().isOutCapable()) { if (camelExchange.hasOut()) { response = camelExchange.getOut(); org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.LOG.trace(\"Get the response from the out message\"); }else { response = camelExchange.getIn(); org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.LOG.trace(\"Get the response from the in message as a fallback\"); } }else { response = camelExchange.getIn(); org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.LOG.trace(\"Get the response from the in message\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7063/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.jaxrs.DefaultCxfRsBinding.java", "BodyUseAPI": ["org.apache.camel.Exchange.hasOut()", "org.apache.camel.Exchange.getIn()", "org.apache.camel.Exchange.getOut()", "org.apache.camel.Exchange.getIn()"], "Fixed commit": "55de0d8b05ae2307db386fa98f8a0a1f733600c2", "Url": "https://api.github.com/repos/apache/camel", "Date": "2013-12-12T11:04:06Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n >= (course.size())) return; else { course.remove(pt); course.add(n, pt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8498/buggy-version/android.src.edu.stanford.Course.java", "BodyUseAPI": ["java.util.ArrayList<edu.stanford.CoursePoint>.remove(edu.stanford.CoursePoint)", "java.util.ArrayList<edu.stanford.CoursePoint>.add(int,edu.stanford.CoursePoint)"], "Fixed commit": "279b13f18d435659dd96ba3f396a2cf94f490135", "Url": "https://api.github.com/repos/atp42/StanleyJunior", "Date": "2012-11-10T01:43:02Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected <= 0) selected = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8498/buggy-version/android.src.edu.stanford.Course.java", "BodyUseAPI": [], "Fixed commit": "279b13f18d435659dd96ba3f396a2cf94f490135", "Url": "https://api.github.com/repos/atp42/StanleyJunior", "Date": "2012-11-10T01:43:02Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((spreadDirectory.exists()) && (spreadDirectory.isFile())) && ((spreadDirectory.getParent()) != null)) { spreadDirectory = new java.io.File(spreadDirectory.getParent()); }else { log.log(java.util.logging.Level.SEVERE, (\"Invalid absolute path to SpreaD3 given: \" + (SPREAD3))); throw new edu.asu.zoophy.rest.pipeline.BeastException(\"Invalid absolute path to SpreaD3 given!\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6371/buggy-version/src.main.java.edu.asu.zoophy.rest.pipeline.BeastRunner.java", "BodyUseAPI": ["java.io.File.getParent()"], "Fixed commit": "bef7c10a2ccb18f613d1020c7221311a47a2ace5", "Url": "https://api.github.com/repos/ZooPhy/zoophy-services", "Date": "2017-03-02T21:38:48Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((uuid) != null) && (!(uuid.equals(\"\")))) { return org.bukkit.Bukkit.getOfflinePlayer(java.util.UUID.fromString(uuid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1329/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.User.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)", "org.bukkit.Bukkit.getOfflinePlayer(java.util.UUID)"], "Fixed commit": "86fc9c411ec121733a366b8ff54df6921cd78e38", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-09-26T00:13:46Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rns.healthplease.web.bo.domain.Lab.getReportConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (reportConfig == null) { lab.setReportConfig(new com.rns.healthplease.web.bo.domain.ReportConfigurations()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4422/buggy-version/healthplease-webapp.src.main.java.com.rns.healthplease.web.controller.HPLabControllerWeb.java", "BodyUseAPI": [], "Fixed commit": "8c62059bec39d671aa2c1a2aef348350cfb88f17", "Url": "https://api.github.com/repos/ajaxkulkarni/hp", "Date": "2016-10-10T10:25:30Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Upload.uploadGridList.contains(vn.mbm.phimp.me.gallery.PhimpMeGallery.filePath.get(vn.mbm.phimp.me.gallery.PhimpMeGallery.position)))) Upload.uploadGridList.add(vn.mbm.phimp.me.gallery.PhimpMeGallery.filePath.get(vn.mbm.phimp.me.gallery.PhimpMeGallery.position));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8680/buggy-version/app.src.main.java.vn.mbm.phimp.me.gallery.PhimpMeGallery.java", "BodyUseAPI": ["Upload.uploadGridList.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "85d23a3f8869d6c9e95af3b0e60bdfb1d0caa856", "Url": "https://api.github.com/repos/amitiwary999/phimpme-android", "Date": "2017-04-23T22:10:27Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.mythicacraft.voteroulette.VoteRoulette.DEBUG) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4381/buggy-version/src.com.mythicacraft.voteroulette.awards.Award.java", "BodyUseAPI": [], "Fixed commit": "f298de1dbc8b3bd025a6bbee47235bcc602996f5", "Url": "https://api.github.com/repos/ebiggz/VoteRoulette", "Date": "2015-07-12T02:48:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cursor != null) { saveCurrentCursor(cursor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5686/buggy-version/AnotherYetBashClient.src.main.java.ru.aim.anotheryetbashclient.QuotesFragment.java", "BodyUseAPI": ["ru.aim.anotheryetbashclient.QuotesFragment.1.saveCurrentCursor(android.database.Cursor)"], "Fixed commit": "2c101d5ffecac2400c30a512ea9f37c439d94c25", "Url": "https://api.github.com/repos/funster/another-yet-bash-client", "Date": "2014-02-16T20:47:08Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.aim.anotheryetbashclient.Intent.getStringArrayListExtra(ActionsAndIntents.IDS)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(list.isEmpty())) { java.lang.String[] arr = list.toArray(new java.lang.String[list.size()]); cursor = dbHelper.getQuotes(arr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5686/buggy-version/AnotherYetBashClient.src.main.java.ru.aim.anotheryetbashclient.QuotesFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.toArray(java.lang.String[])"], "Fixed commit": "2c101d5ffecac2400c30a512ea9f37c439d94c25", "Url": "https://api.github.com/repos/funster/another-yet-bash-client", "Date": "2014-02-16T20:47:08Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fragments.size()) > 0) fragments.pop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5982/buggy-version/app.src.main.java.android.support.v17.leanback.supportleanbackshowcase.app.settings.SettingsExampleFragment.java", "BodyUseAPI": ["java.util.Stack<android.app.Fragment>.pop()"], "Fixed commit": "e871b27ffed127dd3e40ca1456e2bf5f89bc7211", "Url": "https://api.github.com/repos/MurtadhaS/leanback-showcase", "Date": "2017-04-20T13:14:48Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jfmClassName.equals(\"com.sun.tools.javac.util.JavacFileManager\")) return lombok.javac.apt.LombokFileObjects.Compiler.JAVAC6;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/601/buggy-version/src.core.lombok.javac.apt.LombokFileObjects.java", "BodyUseAPI": [], "Fixed commit": "b31ca9606b25839701194c5fca71c12c1a165565", "Url": "https://api.github.com/repos/velo/lombok", "Date": "2012-08-10T16:06:24Z"},
{"Line": "=>990", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word.contains(\"nd\")) && (length == 3)) { tdnext.ParserAPI.day = 2; }else if ((word.contains(\"nd\")) && (length != 3)) { tdnext.ParserAPI.day = java.lang.Integer.parseInt(word.replace(\"nd\", \"\")); }else if ((word.contains(\"rd\")) && (length != 3)) { tdnext.ParserAPI.day = java.lang.Integer.parseInt(word.replace(\"rd\", \"\")); }else if ((word.contains(\"rd\")) && (length == 3)) { tdnext.ParserAPI.day = 3; }else if ((word.contains(\"st\")) && (length == 3)) { tdnext.ParserAPI.day = 1; }else if ((word.contains(\"st\")) && (length != 3)) { tdnext.ParserAPI.day = java.lang.Integer.parseInt(word.replace(\"st\", \"\")); }else { tdnext.ParserAPI.day = java.lang.Integer.parseInt(word.replace(\"th\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1474/buggy-version/src.tdnext.ParserAPI.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "3967a9d0a3855ff1ebc64c7d0355f7b092b103a3", "Url": "https://api.github.com/repos/cs2103aug2015-t16-2j/main", "Date": "2015-11-08T08:58:43Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((logger.hasErrors()) && (shouldThrowException())) { logger.generateException(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1502/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.validators.ChainingValidator.java", "BodyUseAPI": ["com.emc.storageos.volumecontroller.impl.validators.ValidatorLogger.generateException(java.lang.String)"], "Fixed commit": "a9badfd58710c75c1799c85111fe8f7eb7b6964a", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-11-18T11:27:02Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNotifications()) { timeoutMillis = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2641/buggy-version/pgjdbc.src.main.java.org.postgresql.core.v3.QueryExecutorImpl.java", "BodyUseAPI": [], "Fixed commit": "96a72b0070a2636296f2f23dae1231360ad33b60", "Url": "https://api.github.com/repos/dmigowski/pgjdbc", "Date": "2017-03-11T20:56:28Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.relution_publisher.builder.ArtifactFileUploader.uploadAssets(java.io.File,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (assets == null) { this.log.write(this, \"Could not upload app icon.\"); org.jenkinsci.plugins.relution_publisher.util.Builds.setResult(this, Result.UNSTABLE, this.log); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/383/buggy-version/relution-publisher.src.main.java.org.jenkinsci.plugins.relution_publisher.builder.ArtifactFileUploader.java", "BodyUseAPI": [], "Fixed commit": "14e1bf3dd320160fa3b63785f1d2c831628f672e", "Url": "https://api.github.com/repos/mwaylabs/relution-jenkins-plugin", "Date": "2016-06-09T16:02:08Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (railo.runtime.op.Decision.isInteger(acl)) s3r.setACL(railo.runtime.op.Caster.toIntValue(acl)); else s3r.setACL(railo.commons.io.res.type.s3.S3.toIntACL(railo.runtime.op.Caster.toString(acl)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8847/buggy-version/railo-java.railo-core.src.railo.runtime.tag.Directory.java", "BodyUseAPI": ["railo.runtime.op.Caster.toString(java.lang.Object)", "railo.commons.io.res.type.s3.S3.toIntACL(railo.runtime.op.Caster.toString(acl))", "railo.commons.io.res.type.s3.S3Resource.setACL(railo.runtime.op.Caster.toIntValue(acl))", "railo.commons.io.res.type.s3.S3Resource.setACL(railo.commons.io.res.type.s3.S3.toIntACL(railo.runtime.op.Caster.toString(acl)))", "railo.runtime.op.Caster.toIntValue(java.lang.Object)"], "Fixed commit": "1ef632c2b4008e4efbcd720f06262fc51b308792", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-10-10T16:25:55Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((headerExtractionEnabled) == null) { setHeaderExtractionEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/149/buggy-version/src.main.java.com.univocity.parsers.fixed.FixedWidthParserSettings.java", "BodyUseAPI": [], "Fixed commit": "e0910657fb4b973a26fcb2194deb2c1aaf0615ec", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-08-13T11:45:31Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recv[1]) == (GameState.ERROR.getId())) { c.send(new byte[]{ Command.GETGAME.getId() }); }else if ((recv[1]) == (GameState.GAMEOVER.getId())) { state = com.mygdx.game.managers.GameState.fromInt(recv[1]); turnStart = true; }else { state = com.mygdx.game.managers.GameState.fromInt(recv[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5509/buggy-version/core.src.com.mygdx.game.managers.GameManager.java", "BodyUseAPI": ["com.mygdx.game.managers.GameState.fromInt(byte)", "com.mygdx.game.managers.GameState.fromInt(byte)"], "Fixed commit": "d0cbf6fd655468c2eb4e9211ecd888a75f512e8e", "Url": "https://api.github.com/repos/gregzzz/evolution", "Date": "2016-06-01T22:25:09Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameManager.turnStart) { gameManager.hungerDeaths(); gameManager.turnStart = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5509/buggy-version/core.src.com.mygdx.game.Evolution.java", "BodyUseAPI": ["com.mygdx.game.GameManager.hungerDeaths()"], "Fixed commit": "d0cbf6fd655468c2eb4e9211ecd888a75f512e8e", "Url": "https://api.github.com/repos/gregzzz/evolution", "Date": "2016-06-01T22:25:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getBooleanExtra(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSearchedList) { selectedSessionIndex = index; }else { selectedSessionIndex = sessions.indexOf(availableSessions.get(index)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2373/buggy-version/TutorTrader.app.src.main.java.com.teamname.tutortrader.BidOnSessionActivity.java", "BodyUseAPI": [], "Fixed commit": "ab221574e46afc811afdd144a9b2b0ee8d4951e4", "Url": "https://api.github.com/repos/CMPUT301W16T07/TeamName", "Date": "2016-04-05T22:52:22Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yydcdut.note.model.UserCenter.getInstance().getEvernote()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (evernoteUser != null) { ((android.widget.TextView) (evernoteView.findViewById(R.id.txt_item_column))).setText(evernoteUser.getUsername()); }else { ((android.widget.TextView) (evernoteView.findViewById(R.id.txt_item_column))).setText(getResources().getString(R.string.user_failed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/648/buggy-version/app.src.main.java.com.yydcdut.note.controller.login.UserCenterActivity.java", "BodyUseAPI": ["((android.widget.TextView) (evernoteView.findViewById(R.id.txt_item_column))).setText(evernoteUser.getUsername())", "com.evernote.edam.type.User.getUsername()"], "Fixed commit": "4dce21baebbb0e02b370c09a928b72b6c60ed778", "Url": "https://api.github.com/repos/yydcdut/PhotoNoter", "Date": "2015-10-29T08:25:48Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cont) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2379/buggy-version/src.no.ntnu.ai.hands.PowerRating.java", "BodyUseAPI": [], "Fixed commit": "b3edb1bf8d0dd906a9a335059481d413b6496951", "Url": "https://api.github.com/repos/nordmoen/IT3105-poker", "Date": "2012-08-26T13:05:53Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == (5 - (cardsInRank.length))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2379/buggy-version/src.no.ntnu.ai.hands.PowerRating.java", "BodyUseAPI": [], "Fixed commit": "b3edb1bf8d0dd906a9a335059481d413b6496951", "Url": "https://api.github.com/repos/nordmoen/IT3105-poker", "Date": "2012-08-26T13:05:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"zh-Hans\".equals(lprojname)) { return java.util.Locale.CHINESE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7732/buggy-version/server.src.main.java.org.uiautomation.ios.server.application.AppleLocale.java", "BodyUseAPI": [], "Fixed commit": "dea97e6d0f688b4e139e41c2f810304f941eda4f", "Url": "https://api.github.com/repos/LegNeato/ios-driver", "Date": "2013-04-09T21:37:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"nb\".equals(lprojname)) { for (java.util.Locale l : java.util.Locale.getAvailableLocales()) { if (l.getDisplayCountry().equals(\"Norway\")) { return l; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7732/buggy-version/server.src.main.java.org.uiautomation.ios.server.application.AppleLocale.java", "BodyUseAPI": [], "Fixed commit": "dea97e6d0f688b4e139e41c2f810304f941eda4f", "Url": "https://api.github.com/repos/LegNeato/ios-driver", "Date": "2013-04-09T21:37:14Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.startsWith(\"data:image\")) { result = url; }else if (url.startsWith(\"/\")) { result = (baseHostUrl) + (url.replaceFirst(\"/\", \"\")); }else { result = (baseUrl) + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1556/buggy-version/src.main.java.ru.codeninja.proxyapp.url.UrlEncoder.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "7437cff91240cca6c238d6c8383447eb08cc677b", "Url": "https://api.github.com/repos/codeninja-ru/proxyapp", "Date": "2015-02-12T18:32:08Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((similarity != 0) && (!(java.lang.Double.isNaN(similarity)))) { hits.put(file2.getName(), similarity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6771/buggy-version/src.Common.Utils.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.put(java.lang.String,double)"], "Fixed commit": "e89d6393700818f3e41fd58fe6a5316fb53f4fc5", "Url": "https://api.github.com/repos/akhoufi/SearchEngine", "Date": "2016-11-02T15:07:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == null) { return (id) + \" = null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9336/buggy-version/bgames.stack.MemoryCell.java", "BodyUseAPI": [], "Fixed commit": "edf843125faae5eb1b97c794b75688f16deae25f", "Url": "https://api.github.com/repos/buj/boardgames", "Date": "2017-06-28T18:00:03Z"},
{"Line": "=>948", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.connectsdk.discovery.DiscoveryManager.getInstance().getConnectableDeviceStore()) != null) com.connectsdk.discovery.DiscoveryManager.getInstance().getConnectableDeviceStore().addDevice(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4376/buggy-version/src.com.connectsdk.device.ConnectableDevice.java", "BodyUseAPI": [], "Fixed commit": "a6c930f29b437cc331a8bfbbd3161ff758f3ddfd", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android", "Date": "2014-05-03T01:48:02Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((extras) != null) && ((extras.getInterceptors()) != null)) { list.addAll(extras.getInterceptors()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4892/buggy-version/routerlib.src.main.java.com.lzh.nonview.router.route.ActivityRoute.java", "BodyUseAPI": ["java.util.List<com.lzh.nonview.router.route.RouteInterceptor>.addAll(extras.getInterceptors())", "com.lzh.nonview.router.route.ActivityRouteBundleExtras.getInterceptors()"], "Fixed commit": "99b1b94b26b472671c0db1f7c422c7337e702fc7", "Url": "https://api.github.com/repos/JumeiRdGroup/Router", "Date": "2016-12-07T07:47:24Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventLoopGroup) != null) { eventLoopGroup.shutdownGracefully(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/617/buggy-version/catalog.video.video-mpegts-stream.src.main.java.org.codice.alliance.video.stream.mpegts.UdpStreamMonitor.java", "BodyUseAPI": [], "Fixed commit": "109c1edf992ee3b0dc4847de85e338bccf407e60", "Url": "https://api.github.com/repos/bdeining/alliance", "Date": "2016-09-20T21:26:18Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((udpStreamProcessor) != null) { udpStreamProcessor.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/617/buggy-version/catalog.video.video-mpegts-stream.src.main.java.org.codice.alliance.video.stream.mpegts.UdpStreamMonitor.java", "BodyUseAPI": [], "Fixed commit": "109c1edf992ee3b0dc4847de85e338bccf407e60", "Url": "https://api.github.com/repos/bdeining/alliance", "Date": "2016-09-20T21:26:18Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mScreenSize.x) > mImageWidth) { return com.loge.mealpricer.PictureUtils.getScaledBitmap(path, activity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5703/buggy-version/app.src.main.java.com.loge.mealpricer.PictureUtils.java", "BodyUseAPI": [], "Fixed commit": "f586629b114ed340329a41c4e6730f40050b4003", "Url": "https://api.github.com/repos/lorenzgerber/Mealpricer", "Date": "2017-09-04T08:19:20Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) == 0) { create(); }else { update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/687/buggy-version/app.src.main.java.fry.oldschool.data.Share.java", "BodyUseAPI": [], "Fixed commit": "76b41438e02fec61fe2c3e807093c0c1de775f8a", "Url": "https://api.github.com/repos/pichlerAT/androidapp", "Date": "2016-07-04T17:35:31Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.core.api.DocumentModel.getPropertyValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existingUUIds == null) { existingUUIds = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7432/buggy-version/nuxeo-tree-snapshot-core.src.main.java.org.nuxeo.snapshot.SnapshotableAdapter.java", "BodyUseAPI": [], "Fixed commit": "b06cf978a4f2b7c8620feb9d5a03e832e0db9495", "Url": "https://api.github.com/repos/nuxeo/nuxeo-tree-snapshot", "Date": "2017-02-09T21:53:11Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(linksMissingForRecord(recordType, recordId))) { linkLists.get(recordType).remove(recordId); if (linkLists.get(recordType).isEmpty()) { linkLists.remove(recordType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4461/buggy-version/src.main.java.se.uu.ub.cora.storage.RecordStorageInMemory.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, se.uu.ub.cora.bookkeeper.data.DataGroup>>.remove(java.lang.String)", "linkLists.get(recordType).isEmpty()", "linkLists.get(recordType).remove(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, se.uu.ub.cora.bookkeeper.data.DataGroup>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, se.uu.ub.cora.bookkeeper.data.DataGroup>>.get(java.lang.String)"], "Fixed commit": "33121771aac0d88dce16f2dbe0101b12a02a39fc", "Url": "https://api.github.com/repos/olovm/cora-basicstorage", "Date": "2016-04-21T13:18:06Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (msg != null) { java.lang.System.err.println(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7651/buggy-version/src.main.java.com.avira.couchdoop.ImportExportTool.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "2fb7c2eefc69396799c7b226ac78932eaf23339a", "Url": "https://api.github.com/repos/calinburloiu/couchdoop", "Date": "2014-05-13T13:25:55Z"},
{"Line": "=>1189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<unluac.decompile.branch.Branch>.getLast()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(haveRelationBetweenBranch(last, branch))) { retValue = true; list.addFirst(branch); }else { retValue = false; list.add(branch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3127/buggy-version/src.unluac.decompile.Decompiler.java", "BodyUseAPI": ["java.util.LinkedList<unluac.decompile.branch.Branch>.add(unluac.decompile.branch.Branch)", "java.util.LinkedList<unluac.decompile.branch.Branch>.addFirst(unluac.decompile.branch.Branch)"], "Fixed commit": "3bdd58f6b75a9bac44802af012bc50f14f79b1e5", "Url": "https://api.github.com/repos/trarck/unluac", "Date": "2014-06-13T10:01:47Z"},
{"Line": "=>4190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elementCount > 0) { tree = new TreeMap<java.lang.Long, BTreeElement<java.lang.Long, net.spy.memcached.T>>((reverse ? java.util.Collections.reverseOrder() : null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3389/buggy-version/src.main.java.net.spy.memcached.ArcusClient.java", "BodyUseAPI": [], "Fixed commit": "0548e0c7a1793049318790952c94ed56cadcc176", "Url": "https://api.github.com/repos/jam2in/arcus-java-client", "Date": "2017-01-12T06:40:30Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.dbutils.QueryRunner.query(java.sql.Connection,java.lang.String,azkaban.project.JdbcProjectLoader.ProjectResultHandler,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (projects.isEmpty()) { projects = runner.query(connection, azkaban.project.JdbcProjectLoader.ProjectResultHandler.SELECT_PROJECT_BY_NAME, handler, name); if (projects.isEmpty()) { throw new azkaban.project.ProjectManagerException(((\"No project with name \" + name) + \" exists in db.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1840/buggy-version/azkaban-common.src.main.java.azkaban.project.JdbcProjectLoader.java", "BodyUseAPI": [], "Fixed commit": "68f677567a0014e51e5a2e41d656015c8461be1b", "Url": "https://api.github.com/repos/jamiesjc/azkaban", "Date": "2017-04-11T01:20:19Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Analysis.data[0]) == ' ') { Analysis.data = java.util.Arrays.copyOfRange(Analysis.data, 1, Analysis.data.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/257/buggy-version/src.Analysis.java", "BodyUseAPI": ["java.util.Arrays.copyOfRange(char[],int,int)"], "Fixed commit": "de8c0930bcbf3b94f81845e1b40217a50a8b53cd", "Url": "https://api.github.com/repos/XSonicRU/SJAnalysing", "Date": "2016-12-26T12:11:36Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.util.Arrays.binarySearch(Analysis.data, ' ')) == (-1)) { return Analysis.data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/257/buggy-version/src.Analysis.java", "BodyUseAPI": [], "Fixed commit": "de8c0930bcbf3b94f81845e1b40217a50a8b53cd", "Url": "https://api.github.com/repos/XSonicRU/SJAnalysing", "Date": "2016-12-26T12:11:36Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3420/buggy-version/server.sonar-server.src.main.java.org.sonar.server.search.BaseIndex.java", "BodyUseAPI": [], "Fixed commit": "2b5b3f8844690c08353376166abb8981d600fe23", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-02-24T14:12:40Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rowArray[i]) != null) { result.get(columnNames[i]).add(rowArray[i].toString()); }else { result.get(columnNames[i]).add(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3371/buggy-version/wahlinfo.src.main.java.com.tu.wahlinfo.persistence.impl.DatabaseAccessorImpl.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(<nulltype>)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "ff8bf4e11aa1a33aeeb54c06fca0972a418f5e23", "Url": "https://api.github.com/repos/rummelj/wahlinfo", "Date": "2013-01-24T11:26:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((columnNames.length) == 0) { throw new java.lang.IllegalArgumentException(\"columnNames must be given!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3371/buggy-version/wahlinfo.src.main.java.com.tu.wahlinfo.persistence.impl.DatabaseAccessorImpl.java", "BodyUseAPI": [], "Fixed commit": "ff8bf4e11aa1a33aeeb54c06fca0972a418f5e23", "Url": "https://api.github.com/repos/rummelj/wahlinfo", "Date": "2013-01-24T11:26:08Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rlLegend.getVisibility()) != (android.view.View.VISIBLE)) { rlLegend.setVisibility(View.VISIBLE); rlLegend.startAnimation(android.view.animation.AnimationUtils.loadAnimation(getActivity(), R.anim.fade_in)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3609/buggy-version/app.src.main.java.com.teamhardwork.kipp.fragments.StatsFragment.java", "BodyUseAPI": ["android.widget.RelativeLayout.setVisibility(View.VISIBLE)", "android.widget.RelativeLayout.startAnimation(android.view.animation.AnimationUtils.loadAnimation(getActivity(), R.anim.fade_in))"], "Fixed commit": "190feaf684b2620aaad0092b57b42c2f8e3628e1", "Url": "https://api.github.com/repos/teamHardwoRK/kipp", "Date": "2014-11-05T06:09:52Z"},
{"Line": "=>897", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.openmrs.module.ModuleFactory.actualStartupOrder) != null) { org.openmrs.module.ModuleFactory.actualStartupOrder.remove(moduleId); for (java.lang.Module depModule : dependentModulesStopped) { org.openmrs.module.ModuleFactory.actualStartupOrder.remove(depModule.getModuleId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/676/buggy-version/api.src.main.java.org.openmrs.module.ModuleFactory.java", "BodyUseAPI": [], "Fixed commit": "085fb5bd450f9d650b312fa49ff63ca6453ea015", "Url": "https://api.github.com/repos/openmrs/openmrs-core", "Date": "2013-10-06T16:46:04Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((eyesCoordinates != null) && (showLipsIdentification)) { eyesFeatureExtractor.paintCoordinates(grabbed, eyesCoordinates); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6097/buggy-version/lipreading-gui.src.main.java.edu.lipreading.gui.LipReaderPanel.java", "BodyUseAPI": ["edu.lipreading.gui.LipReaderPanel.paintCoordinates(edu.lipreading.gui.IplImage,java.util.List<java.lang.Integer>)"], "Fixed commit": "e1a083c7779dd0960fb6a90d28dda5c8322faad5", "Url": "https://api.github.com/repos/sagioto/LipReading", "Date": "2013-05-11T13:34:23Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temGoogleApiConectada()) { Games.Achievements.unlock(this.googleApiClient, codigo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1915/buggy-version/app.src.main.java.br.com.ezeqlabs.jumper.elementos.Pontuacao.java", "BodyUseAPI": [], "Fixed commit": "856ab1ff3ad3621345ff25877db80e02f5cfafb0", "Url": "https://api.github.com/repos/ezeqlabs/jumper", "Date": "2016-08-06T22:00:05Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temGoogleApiConectada()) { Games.Leaderboards.submitScore(this.googleApiClient, \"CgkI38CiueAUEAIQCA\", pontos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1915/buggy-version/app.src.main.java.br.com.ezeqlabs.jumper.elementos.Pontuacao.java", "BodyUseAPI": [], "Fixed commit": "856ab1ff3ad3621345ff25877db80e02f5cfafb0", "Url": "https://api.github.com/repos/ezeqlabs/jumper", "Date": "2016-08-06T22:00:05Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((int) (first)) == 13) { first = ioBuffer.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5620/buggy-version/CarMonitorCore.src.main.java.org.zju.car_monitor.codec.DataDecoder.java", "BodyUseAPI": [], "Fixed commit": "1c7322434656caa302eeb4f144ab7a1bcfee609b", "Url": "https://api.github.com/repos/yijiezhen/CarMonitor", "Date": "2013-08-08T03:11:56Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.action_about)) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), me.willeponken.opendoor.AboutActivity.class); startActivity(intent); }else if (id == (R.id.action_runWizzard)) { android.content.Intent intent = new android.content.Intent(getApplicationContext(), me.willeponken.opendoor.IntroActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1512/buggy-version/app.src.main.java.me.willeponken.opendoor.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e88ec899ddbeb1adff8c63d33118af94e7209bba", "Url": "https://api.github.com/repos/ArcticLabs/Opendoor", "Date": "2017-07-28T14:35:06Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(data.exists())) data.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6085/buggy-version/src.main.java.jannovar.io.TranscriptDataDownloader.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "353659efb78be6eb7c918ea56dc2b42275e05df4", "Url": "https://api.github.com/repos/charite/jannovar", "Date": "2014-01-02T09:37:44Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((loadedImage.getWidth()) < 300) || ((loadedImage.getHeight()) < 100)) { holder.headImage.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7156/buggy-version/app.src.main.java.io.itit.ui.NewsAdapter.java", "BodyUseAPI": [], "Fixed commit": "8eb62b677cc7814a2cdbd02945bdbd4184e52706", "Url": "https://api.github.com/repos/lee3do/ITITApp", "Date": "2017-01-10T07:58:40Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.muis.base.layout.Length.evaluate(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((max + x) > max) max += x;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2638/buggy-version/projects.base.src.main.java.org.muis.base.layout.SimpleLayout.java", "BodyUseAPI": [], "Fixed commit": "94d4c052db28f0a515370450d265b985dac1ca4b", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2012-06-28T23:47:01Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ret.getMax()) > max) ret.setMax(max);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2638/buggy-version/projects.base.src.main.java.org.muis.base.layout.SimpleLayout.java", "BodyUseAPI": ["org.muis.core.layout.SimpleSizePolicy.setMax(int)"], "Fixed commit": "94d4c052db28f0a515370450d265b985dac1ca4b", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2012-06-28T23:47:01Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((max + x) > max) max += x;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2638/buggy-version/projects.base.src.main.java.org.muis.base.layout.SimpleLayout.java", "BodyUseAPI": [], "Fixed commit": "94d4c052db28f0a515370450d265b985dac1ca4b", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2012-06-28T23:47:01Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ret.getMax()) > max) ret.setMax(max);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2638/buggy-version/projects.base.src.main.java.org.muis.base.layout.SimpleLayout.java", "BodyUseAPI": ["org.muis.core.layout.SimpleSizePolicy.setMax(int)"], "Fixed commit": "94d4c052db28f0a515370450d265b985dac1ca4b", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2012-06-28T23:47:01Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((max + x) > max) max += x;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2638/buggy-version/projects.base.src.main.java.org.muis.base.layout.SimpleLayout.java", "BodyUseAPI": [], "Fixed commit": "94d4c052db28f0a515370450d265b985dac1ca4b", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2012-06-28T23:47:01Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ret.getMax()) > max) ret.setMax(max);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2638/buggy-version/projects.base.src.main.java.org.muis.base.layout.SimpleLayout.java", "BodyUseAPI": ["org.muis.core.layout.SimpleSizePolicy.setMax(int)"], "Fixed commit": "94d4c052db28f0a515370450d265b985dac1ca4b", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2012-06-28T23:47:01Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isHas) { com.xgf.winecome.ui.activity.MainActivity.mGoodsList.get(i).setNum(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7487/buggy-version/src.com.xgf.winecome.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "53a45bd4679eeedee03fda63b61d2bd1b27b8ef7", "Url": "https://api.github.com/repos/xiguofeng/WineCome", "Date": "2015-08-12T01:32:06Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fullName == null) || (fullName.isEmpty())) { throw new java.lang.IllegalArgumentException(\"Full name is mandatory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/234/buggy-version/src.lab1.Challenge1.java", "BodyUseAPI": [], "Fixed commit": "6e4c1e2e232c9765dd48392f56c8c5d14d3cd054", "Url": "https://api.github.com/repos/mchaydon/ExceptionsLab", "Date": "2016-10-17T22:21:18Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_lines.getLines().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (line.isEnable()) { hitEntry = line.getEntries().get(record_EntryIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4063/buggy-version/library.src.main.java.com.linheimx.app.library.render.HighLightRender.java", "BodyUseAPI": ["line.getEntries().get(int)", "com.linheimx.app.library.data.Line.getEntries()"], "Fixed commit": "7e8c2723388c43e8de2df8cd029f12a15ca1bee0", "Url": "https://api.github.com/repos/linheimx/LChart", "Date": "2017-03-15T10:23:16Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_lines.getLines().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(line.isEnable())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4063/buggy-version/library.src.main.java.com.linheimx.app.library.render.HighLightRender.java", "BodyUseAPI": [], "Fixed commit": "7e8c2723388c43e8de2df8cd029f12a15ca1bee0", "Url": "https://api.github.com/repos/linheimx/LChart", "Date": "2017-03-15T10:23:16Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jlfex.hermes.repository.UserPropertiesRepository.findByUser(com.jlfex.hermes.model.User)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"10\".equals(userPro.getAuthName())) { userBasic.setRealName(userPro.getRealName()); userBasic.setIdType(userPro.getIdType()); userBasic.setIdNumber(userPro.getIdNumber()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1973/buggy-version/hermes-service.src.main.java.com.jlfex.hermes.service.impl.UserInfoServiceImpl.java", "BodyUseAPI": ["com.jlfex.hermes.service.pojo.UserBasic.setRealName(userPro.getRealName())", "com.jlfex.hermes.model.UserProperties.getRealName()", "com.jlfex.hermes.service.pojo.UserBasic.setIdType(userPro.getIdType())", "com.jlfex.hermes.model.UserProperties.getIdType()", "com.jlfex.hermes.service.pojo.UserBasic.setIdNumber(userPro.getIdNumber())", "com.jlfex.hermes.model.UserProperties.getIdNumber()"], "Fixed commit": "0beecc4875f33561a9fd4f655c30d62f3848ced7", "Url": "https://api.github.com/repos/jlfex/hermes", "Date": "2015-01-04T10:01:44Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.jq.syncthia.bdcreator.schema.SchemaCreator.getMigratable(existingMigratable.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (counterPartMigratable == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7450/buggy-version/src.main.java.br.com.jq.syncthia.bdcreator.schema.SchemaCollection.java", "BodyUseAPI": [], "Fixed commit": "c0516905e0562ac29dc59b5ffa9e1817342b285c", "Url": "https://api.github.com/repos/jeffque/Syncthia-SQL-DBCreator", "Date": "2015-03-05T21:02:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.jq.syncthia.bdcreator.schema.SchemaCollection.getSchema(existingSchema.getSchemaName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (counterPartSchema == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7450/buggy-version/src.main.java.br.com.jq.syncthia.bdcreator.schema.SchemaCollection.java", "BodyUseAPI": [], "Fixed commit": "c0516905e0562ac29dc59b5ffa9e1817342b285c", "Url": "https://api.github.com/repos/jeffque/Syncthia-SQL-DBCreator", "Date": "2015-03-05T21:02:52Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (authentication == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6952/buggy-version/molgenis-security.src.main.java.org.molgenis.security.SecurityUtils.java", "BodyUseAPI": [], "Fixed commit": "56a2c5df323c19d03f6079d707eb78086d9e1ffd", "Url": "https://api.github.com/repos/dennishendriksen/molgenis", "Date": "2013-11-20T21:06:51Z"},
{"Line": "=>2388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model.getClasses().isEmpty()) { java.lang.System.out.println(\"no class files found !!!! END\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1462/buggy-version/src.main.java.org.sdmlib.models.classes.logic.GenClassModel.java", "BodyUseAPI": [], "Fixed commit": "752eacf487bde22e298265ca6b268e8b6f8ff564", "Url": "https://api.github.com/repos/fujaba/SDMLib", "Date": "2015-04-28T14:14:12Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.matches(\"^'.'$\")) && ((s.charAt(1)) != '\\\\')) { java.lang.System.out.println((\"char: \" + (s.charAt(1)))); return s.charAt(1); }else if ((s.charAt(1)) == '\\\\') { switch (s.charAt(2)) { case 'r' : return '\\r'; case 'n' : return '\\n'; case 't' : return '\\t'; case '0' : return '\\u0000'; case '\\'' : return '\\''; case '\\\\' : return '\\\\'; default : parser.SemErr(\"unknow character\"); return '\\u0000'; } }else { parser.SemErr(\"unknow character\"); return '\\u0000'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6938/buggy-version/src.at.jku.ssw.cmm.compiler.Tab.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "1867f472e3819ca81eeca05842003da961cc0b1d", "Url": "https://api.github.com/repos/fabian1995/CMM", "Date": "2015-01-20T10:34:21Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.matches(\"^'.{1,2}'$\")) { java.lang.System.out.println(\"unknow character1\"); parser.SemErr(\"unknow character\"); return '\\u0000'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6938/buggy-version/src.at.jku.ssw.cmm.compiler.Tab.java", "BodyUseAPI": [], "Fixed commit": "1867f472e3819ca81eeca05842003da961cc0b1d", "Url": "https://api.github.com/repos/fabian1995/CMM", "Date": "2015-01-20T10:34:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.thm.sensors.Util.currentColor) != (-1)) { findViewById(R.id.slave_parent_layout).setBackgroundColor(Util.currentColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2272/buggy-version/app.src.main.java.com.thm.sensors.activity.SlaveActivity.java", "BodyUseAPI": [], "Fixed commit": "1d8e28aaa642be4eb1ab564a08770488557bcf05", "Url": "https://api.github.com/repos/Mordag/soundbox", "Date": "2016-05-18T01:51:44Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pathList.get(((pathList.size()) - 1))) != null) && (pathList.get(((pathList.size()) - 1)).equals(\"\"))) { pathList = pathList.subList(((pathList.size()) - 1), pathList.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5564/buggy-version/src.ee.stacc.transformer.client.util.JsonSchemaUtil.java", "BodyUseAPI": ["java.util.List<java.lang.String>.subList(int,int)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "f42a92b2b279c08216025f912471323923e1f14d", "Url": "https://api.github.com/repos/karli/Automatic-soap-widget-generator", "Date": "2011-02-15T17:44:22Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((pathList.get(0)) != null) && (pathList.get(0).equals(\"\"))) { pathList = pathList.subList(1, pathList.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5564/buggy-version/src.ee.stacc.transformer.client.util.JsonSchemaUtil.java", "BodyUseAPI": ["java.util.List<java.lang.String>.subList(int,int)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "f42a92b2b279c08216025f912471323923e1f14d", "Url": "https://api.github.com/repos/karli/Automatic-soap-widget-generator", "Date": "2011-02-15T17:44:22Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sammelbox.model.database.operations.DatabaseOperations.isAlbumQuicksearchable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isQuickSearchable) { org.sammelbox.model.database.operations.DeleteOperations.dropIndex(oldAlbumName); org.sammelbox.model.database.operations.CreateOperations.createIndex(newAlbumName, quickSearchableColumnNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9116/buggy-version/Sammelbox-Desktop.src.org.sammelbox.model.database.operations.UpdateOperations.java", "BodyUseAPI": [], "Fixed commit": "e7fce4645cab5c8589126eebd3ee1ea99b2964d8", "Url": "https://api.github.com/repos/jeromewagener/Sammelbox", "Date": "2014-05-01T15:00:58Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.parse(url).getHost()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (host == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1004/buggy-version/app.src.main.java.com.mikifus.padland.SaferWebView.PadLandSaferWebViewClient.java", "BodyUseAPI": [], "Fixed commit": "b40cc3eeea739862edc5ddc5fc944dbf4641abdc", "Url": "https://api.github.com/repos/mikifus/padland", "Date": "2016-06-08T12:14:51Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paused) { java.lang.String new_state = StateAndReward.getStateAngle(angle.getValue(), vx.getValue(), vy.getValue()); java.lang.System.out.println((\"New State: \" + new_state)); java.lang.System.out.println((\"vx = \" + (vx.getValue()))); java.lang.System.out.println((\"vy = \" + (vy.getValue()))); java.lang.System.out.println((\"angle = \" + (angle.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7083/buggy-version/src.QLearningController.java", "BodyUseAPI": [], "Fixed commit": "ef9d37ca9402cd42c1e11a6fcdae772d6d962232", "Url": "https://api.github.com/repos/Dollfi/ai_labs5", "Date": "2017-10-05T08:42:57Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (options != null) { org.apache.commons.vfs2.provider.ftp.FtpFileSystemConfigBuilder.getInstance().setPassiveMode(fso, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3456/buggy-version/file.org.wso2.carbon.transport.file.src.main.java.org.wso2.carbon.transport.file.connector.server.FileConsumer.java", "BodyUseAPI": [], "Fixed commit": "b0b7de775b64479eb12378021cac769cb907da93", "Url": "https://api.github.com/repos/wso2/carbon-transports", "Date": "2017-02-23T13:36:10Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((slideList.size()) > 1) slideList.remove(sliderTable.getSelectionModel().getSelectedItem());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1795/buggy-version/RaritysMirror-Server.src.main.java.javafx.view.Editor.java", "BodyUseAPI": ["javafx.collections.ObservableList<javafx.model.Slide>.remove(sliderTable.getSelectionModel().getSelectedItem())"], "Fixed commit": "59314c72acb745bd4d11339f7c889bec61fd19bf", "Url": "https://api.github.com/repos/runi95/RaritysMirror-Server", "Date": "2016-10-02T16:42:50Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.listFiles()) == null) { logger.debug(((\"directory- \" + (file.getAbsolutePath())) + \" has no files\")); return count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1402/buggy-version/src.main.java.com.appdynamics.extensions.filewatcher.FileProcessor.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "5130058924752aa0819c87701bc63dfe5e4d16f5", "Url": "https://api.github.com/repos/Appdynamics/file-monitoring-extension", "Date": "2015-06-04T03:02:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.listFiles()) == null) { logger.debug(\"directorySize called on a non directory.\"); return file.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1402/buggy-version/src.main.java.com.appdynamics.extensions.filewatcher.FileProcessor.java", "BodyUseAPI": ["java.io.File.length()"], "Fixed commit": "5130058924752aa0819c87701bc63dfe5e4d16f5", "Url": "https://api.github.com/repos/Appdynamics/file-monitoring-extension", "Date": "2015-06-04T03:02:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.listFiles()) == null) { logger.debug(((\"directory- \" + (file.getAbsolutePath())) + \" has no files\")); return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1402/buggy-version/src.main.java.com.appdynamics.extensions.filewatcher.FileProcessor.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "5130058924752aa0819c87701bc63dfe5e4d16f5", "Url": "https://api.github.com/repos/Appdynamics/file-monitoring-extension", "Date": "2015-06-04T03:02:59Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendatakit.common.persistence.CommonFieldsBase.getNumericField(org.opendatakit.common.persistence.DataField)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wbd.isSpecialValue()) { ol[idx] = wbd.d; }else { ol[idx] = wbd.bd; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2135/buggy-version/src.main.java.org.opendatakit.common.persistence.engine.pgres.DatastoreImpl.java", "BodyUseAPI": [], "Fixed commit": "8dfb2fc9bd961782904030e7ca19080412a0173a", "Url": "https://api.github.com/repos/opendatakit/aggregate", "Date": "2016-10-24T19:46:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["values.get(0).attrTyp()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valueType instanceof de.peeeq.wurstscript.attributes.WurstTypeIntLiteral) { valueType = de.peeeq.wurstscript.attributes.WurstTypeInt.instance(); }else if (valueType instanceof de.peeeq.wurstscript.attributes.WurstTypeArray) { v.addError(\"Array parameters are not permitted. Remember that initialized arrays do not have an identity nor length.\"); return new de.peeeq.wurstscript.attributes.WurstTypeArray(de.peeeq.wurstscript.attributes.WurstTypeUnknown.instance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4621/buggy-version/de.peeeq.wurstscript.src.main.java.de.peeeq.wurstscript.attributes.AttrVarDefType.java", "BodyUseAPI": [], "Fixed commit": "2f148f48f9abc040ece680ad5f4c97c2bdbb1bf5", "Url": "https://api.github.com/repos/wurstscript/WurstScript", "Date": "2017-11-20T12:44:07Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((product.getStatusUpdateQuery(state)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4414/buggy-version/src.main.java.de.hpi.bpt.argos.api.response.ResponseFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "bd278ee7dbe33883923b9772d164730533651546", "Url": "https://api.github.com/repos/bptlab/argos-backend", "Date": "2017-02-23T10:24:52Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (plugin != null) { ee.ut.cs.rum.plugins.development.description.PluginInfo pluginInfo = ee.ut.cs.rum.plugins.configuration.util.PluginUtils.deserializePluginInfo(plugin); ee.ut.cs.rum.database.domain.Project project = newTaskSubTaskInfo.getNewTaskDetailsContainer().getNewTaskComposite().getProjectTabFolder().getProject(); ee.ut.cs.rum.plugins.configuration.ui.PluginConfigurationComposite pluginConfigurationComposite = new ee.ut.cs.rum.plugins.configuration.ui.PluginConfigurationComposite(scrolledPluginConfigurationComposite, pluginInfo, project); scrolledPluginConfigurationComposite.setContent(pluginConfigurationComposite); pluginConfigurationComposite.setSize(pluginConfigurationComposite.computeSize(SWT.DEFAULT, SWT.DEFAULT)); }else { scrolledPluginConfigurationComposite.setContent(new org.eclipse.swt.widgets.Composite(scrolledPluginConfigurationComposite, org.eclipse.swt.SWT.NONE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/817/buggy-version/RuM_Workspace.src.ee.ut.cs.rum.workspace.internal.ui.task.newtask.pluginstable.PluginSelectionChangedListener.java", "BodyUseAPI": ["ee.ut.cs.rum.plugins.configuration.util.PluginUtils.deserializePluginInfo(ee.ut.cs.rum.database.domain.Plugin)"], "Fixed commit": "b9411d3c9fc5f8f88da04486920511b0e0c1b182", "Url": "https://api.github.com/repos/FableBlaze/RuM", "Date": "2016-06-22T21:39:07Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x >= 0) && (y >= 0)) && (x < (tiles.length))) && (y < (tiles[0].length))) { translatedX = mouseX - (tiles[x][y].xCoord); translatedY = mouseY - (tiles[x][y].yCoord); }else { int xCoord = (x * tileWidth) + (((y % 2) * tileWidth) / 2); int yCoord = y * ((3 * tileHeight) / 4); translatedX = mouseX - xCoord; translatedY = mouseY - yCoord; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5016/buggy-version/src.atraxi.game.World.World.java", "BodyUseAPI": [], "Fixed commit": "efda14edca170c0fbf4518f328a3e22706219c03", "Url": "https://api.github.com/repos/Atraxi/Proto4X", "Date": "2016-04-14T06:52:48Z"},
{"Line": "=>2551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.tools.javac.comp.Check.checkClassType(com.sun.tools.javac.util.JCDiagnostic.DiagnosticPosition,com.sun.tools.javac.code.Type)", "com.sun.tools.javac.util.List<com.sun.tools.javac.code.Type>.length()", "com.sun.tools.javac.comp.Attr.attribTypes(com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree.JCExpression>,com.sun.tools.javac.comp.Env<com.sun.tools.javac.comp.AttrContext>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((clazztype.tsym.isAbstractEnum()) && (formalsLength > 0)) && ((actuals.length()) == (formalsLength - 1))) formalsLength--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5986/buggy-version/langtools.src.share.classes.com.sun.tools.javac.comp.Attr.java", "BodyUseAPI": [], "Fixed commit": "0a06ad7142c5d855bed7ded43ae4e25f02dab655", "Url": "https://api.github.com/repos/jodastephen/kijaro", "Date": "2007-11-14T23:56:47Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classname == null) || (classData == null)) { throw new java.lang.IllegalArgumentException(\"classname and classdata must not be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/656/buggy-version/DND.src.edu.teco.dnd.module.Application.java", "BodyUseAPI": [], "Fixed commit": "1e15c61f33866ce2966c25b902a8469a5e5329cf", "Url": "https://api.github.com/repos/DesignAndDeploy/dnd", "Date": "2013-08-08T14:57:24Z"},
{"Line": "=>940", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userJar.exists()) { lib.add(org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(userJar).toURL())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7016/buggy-version/trunk.src.org.netbeans.modules.gwt4nb.GWTWebModuleExtender.java", "BodyUseAPI": ["org.openide.util.Utilities.toURI(java.io.File)", "org.openide.util.Utilities.toURI(userJar).toURL()", "java.util.ArrayList<java.net.URL>.add(org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(userJar).toURL()))", "org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(userJar).toURL())"], "Fixed commit": "51f8863b262e92b4d94e95e37dc4f599a3d46beb", "Url": "https://api.github.com/repos/gwt4nb/gwt4nb", "Date": "2012-09-01T21:56:53Z"},
{"Line": "=>946", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (servletJar.exists()) { lib.add(org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(servletJar).toURL())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7016/buggy-version/trunk.src.org.netbeans.modules.gwt4nb.GWTWebModuleExtender.java", "BodyUseAPI": ["java.util.ArrayList<java.net.URL>.add(org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(servletJar).toURL()))", "org.openide.util.Utilities.toURI(servletJar).toURL()", "org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(servletJar).toURL())", "org.openide.util.Utilities.toURI(java.io.File)"], "Fixed commit": "51f8863b262e92b4d94e95e37dc4f599a3d46beb", "Url": "https://api.github.com/repos/gwt4nb/gwt4nb", "Date": "2012-09-01T21:56:53Z"},
{"Line": "=>949", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requestFactoryServerJar.exists()) { lib.add(org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(requestFactoryServerJar).toURL())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7016/buggy-version/trunk.src.org.netbeans.modules.gwt4nb.GWTWebModuleExtender.java", "BodyUseAPI": ["org.openide.util.Utilities.toURI(requestFactoryServerJar).toURL()", "org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(requestFactoryServerJar).toURL())", "org.openide.util.Utilities.toURI(java.io.File)", "java.util.ArrayList<java.net.URL>.add(org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(requestFactoryServerJar).toURL()))"], "Fixed commit": "51f8863b262e92b4d94e95e37dc4f599a3d46beb", "Url": "https://api.github.com/repos/gwt4nb/gwt4nb", "Date": "2012-09-01T21:56:53Z"},
{"Line": "=>943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (servletDepsJar.exists()) { lib.add(org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(servletDepsJar).toURL())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7016/buggy-version/trunk.src.org.netbeans.modules.gwt4nb.GWTWebModuleExtender.java", "BodyUseAPI": ["java.util.ArrayList<java.net.URL>.add(org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(servletDepsJar).toURL()))", "org.openide.util.Utilities.toURI(java.io.File)", "org.openide.util.Utilities.toURI(servletDepsJar).toURL()", "org.openide.filesystems.FileUtil.getArchiveRoot(org.openide.util.Utilities.toURI(servletDepsJar).toURL())"], "Fixed commit": "51f8863b262e92b4d94e95e37dc4f599a3d46beb", "Url": "https://api.github.com/repos/gwt4nb/gwt4nb", "Date": "2012-09-01T21:56:53Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((webServer) != null) webServer.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5084/buggy-version/src.teaonly.droideye.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7fcd822f721a9679d5ceaa22196aa3ef5f6347ab", "Url": "https://api.github.com/repos/Teaonly/android-eye", "Date": "2012-10-18T06:08:56Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Exception.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(msg)) { msg = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7180/buggy-version/src.main.java.gov.usgs.cida.microservices.messaging.MicroserviceConsumer.java", "BodyUseAPI": [], "Fixed commit": "ab6556ba1593cc30ba905414a17676fb3aef2c03", "Url": "https://api.github.com/repos/dpattermann-usgs/microservices-libraries", "Date": "2015-08-03T19:10:09Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.pmsConfiguration.isRendererForceDefault()) { net.pms.configuration.RendererConfiguration.LOGGER.trace(((\"Forcing renderer match to \\\"\" + (net.pms.configuration.RendererConfiguration.defaultConf.getRendererName())) + \"\\\"\")); ref = net.pms.configuration.RendererConfiguration.defaultConf; }else { for (net.pms.configuration.RendererConfiguration e : net.pms.configuration.RendererConfiguration.enabledRendererConfs) { if (e.match(sortedHeaders)) { ref = e; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/667/buggy-version/src.main.java.net.pms.configuration.RendererConfiguration.java", "BodyUseAPI": [], "Fixed commit": "aaf69b0bf3b134f7f4faed75b5672625275746db", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2014-08-21T23:13:14Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(g_a_tags.isEmpty())) this.g_a_tags = g_a_tags;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4047/buggy-version/app.src.main.java.com.cfish.rvb.bean.Article.java", "BodyUseAPI": [], "Fixed commit": "9f6cc640bb1b3b9e3a07d6f5995b74f1b39b28ba", "Url": "https://api.github.com/repos/fishho/NKBBS", "Date": "2016-06-02T08:36:17Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.bukkit.Bukkit.getPlayer(uuid)) != null) org.bukkit.Bukkit.getPlayer(uuid).removeMetadata(\"wild.Cooldown\", WildTP.instace);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7937/buggy-version/src.main.java.net.poweredbyhate.wildtp.ChecKar.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPlayer(java.util.UUID)", "org.bukkit.Bukkit.getPlayer(uuid).removeMetadata(java.lang.String,WildTP.instace)"], "Fixed commit": "106f030e534c817c387a2b3ceb4f88f632efffcf", "Url": "https://api.github.com/repos/AcmeProject/WildernessTp", "Date": "2016-09-24T06:25:18Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(arg.isEmpty())) { if (arguments.contains(arg)) { App.settings.log(((\"Duplicate argument \" + arg) + \" found and not added!\"), LogMessageType.error, false); }else { arguments.add(arg); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/846/buggy-version/src.com.atlauncher.mclauncher.MCLauncher.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "App.settings.log(java.lang.String,LogMessageType.error,boolean)", "java.util.List<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "4dc6c3987ce07927c3bab1fe21d7d882ae3f394d", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2014-02-10T12:41:56Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.starflask.JavaNESBrain.evolution.Species>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((specie.getGenomes().size()) > 0) { int breed = ((int) ((com.starflask.JavaNESBrain.utils.FastMath.floor((((specie.averageFitness) / sum) * (Population)))) - 1)); for (int i = 0; i < breed; i++) { children.add(breedChild(specie)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2809/buggy-version/JavaNESBrain.src.com.starflask.JavaNESBrain.evolution.GenePool.java", "BodyUseAPI": ["com.starflask.JavaNESBrain.utils.FastMath.floor((((specie.averageFitness) / sum) * (Population)))", "com.starflask.JavaNESBrain.evolution.GenePool.breedChild(com.starflask.JavaNESBrain.evolution.Species)", "java.util.List<com.starflask.JavaNESBrain.evolution.Genome>.add(com.starflask.JavaNESBrain.evolution.Genome)"], "Fixed commit": "009bccd89d716e2abe83b9bf14e03f54592d1e65", "Url": "https://api.github.com/repos/admazzola/JavaNESBrain", "Date": "2015-06-30T16:41:12Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.starflask.JavaNESBrain.evolution.Species>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((specie.getGenomes().size()) > 0) { children.add(breedChild(specie)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2809/buggy-version/JavaNESBrain.src.com.starflask.JavaNESBrain.evolution.GenePool.java", "BodyUseAPI": ["java.util.List<com.starflask.JavaNESBrain.evolution.Genome>.add(com.starflask.JavaNESBrain.evolution.Genome)", "com.starflask.JavaNESBrain.evolution.GenePool.breedChild(com.starflask.JavaNESBrain.evolution.Species)"], "Fixed commit": "009bccd89d716e2abe83b9bf14e03f54592d1e65", "Url": "https://api.github.com/repos/admazzola/JavaNESBrain", "Date": "2015-06-30T16:41:12Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != (proc)) { ajcOptions.add((\"-proc:\" + (proc))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6603/buggy-version/src.main.java.org.codehaus.mojo.aspectj.AbstractAjcCompiler.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "40de9174632c6c504fc330d6360f606701983acc", "Url": "https://api.github.com/repos/mojohaus/aspectj-maven-plugin", "Date": "2015-08-25T18:02:42Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.linkData.getDirection()) == (org.neo4j.graphdb.Direction.OUTGOING)) { entityNode = relationship.getEndNode(); }else if ((this.linkData.getDirection()) == (org.neo4j.graphdb.Direction.INCOMING)) { entityNode = relationship.getStartNode(); }else throw new java.lang.UnsupportedOperationException(((org.neo4j.graphdb.Direction.BOTH) + \" isn't supported yet.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4814/buggy-version/neo4jtools-objectgraphmapper.src.main.java.de.christofreichardt.neo4jtools.ogm.ProxyList.java", "BodyUseAPI": ["de.christofreichardt.neo4jtools.ogm.LinkData.getDirection()"], "Fixed commit": "070171ffa4a78e733c531f77725c03a4dbf4cf90", "Url": "https://api.github.com/repos/chr78rm/neo4jtools", "Date": "2015-11-04T14:47:28Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (EZShare.Client.secure) { connection.setSoTimeout(2000); boolean flag = true; while (flag) { try { java.lang.String read = in.readUTF(); EZShare.Client.logr.fine((\"RECEIVED:\" + read)); receiveData += read + \",\"; } catch (java.lang.Exception e) { flag = false; } } }else { do { java.lang.Thread.sleep(1000); java.lang.String read = in.readUTF(); EZShare.Client.logr.fine((\"RECEIVED:\" + read)); receiveData += read + \",\"; } while ((in.available()) > 0 ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8208/buggy-version/src.main.java.EZShare.Client.java", "BodyUseAPI": [], "Fixed commit": "181d2591818c393ce53037f0ff8c6bfeaa538762", "Url": "https://api.github.com/repos/DSProjTeam/DS_EZShare", "Date": "2017-05-27T01:30:19Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permanent) { ch.removePlayer(p); }else { ((net.vectorgaming.vchat.framework.channel.SLChannel) (ch)).removePlayerTemp(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2039/buggy-version/src.net.vectorgaming.vchat.ChatManager.java", "BodyUseAPI": [], "Fixed commit": "9ba2262f13c596e4102583b16960f59cd828575d", "Url": "https://api.github.com/repos/exload/VChat", "Date": "2013-10-12T00:54:04Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.functionArgToDouble(org.dynjs.runtime.ExecutionContext,java.lang.Object)", "java.lang.Math.functionArgToDouble(org.dynjs.runtime.ExecutionContext,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((x == (-0)) && (y == (-0))) { return -(java.lang.Math.PI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2625/buggy-version/src.main.java.org.dynjs.runtime.builtins.math.Atan2.java", "BodyUseAPI": [], "Fixed commit": "6fa18ba74d00781fe1d6cb0ee9a5352643aae024", "Url": "https://api.github.com/repos/dynjs/dynjs", "Date": "2012-09-14T21:19:57Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.functionArgToDouble(org.dynjs.runtime.ExecutionContext,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((x.isNaN()) || (x.isInfinite())) { return x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2625/buggy-version/src.main.java.org.dynjs.runtime.builtins.math.Round.java", "BodyUseAPI": [], "Fixed commit": "6fa18ba74d00781fe1d6cb0ee9a5352643aae024", "Url": "https://api.github.com/repos/dynjs/dynjs", "Date": "2012-09-14T21:19:57Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slog.isDebugEnabled()) slog.debug(\"araqne logstorage: importing table [{}] block len [{}] actual len [{}]\", new java.lang.Object[]{ tableName, len, readBytes });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6288/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.dump.engine.LocalImportWorker.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.Object[])"], "Fixed commit": "157c1c78df941b65d32b3337d3cab7b285de57dd", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-06-09T07:46:45Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sessionHandler.getNumberOfPlayers()) == 0) { sessionHandler.restartGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2838/buggy-version/SketchOverwatch.src.java.cory.ws.WebSocketServerEndpoint.java", "BodyUseAPI": ["cory.ws.Game.restartGame()"], "Fixed commit": "7d4b43319127e85ace04e67bbef39b5c0e4c1087", "Url": "https://api.github.com/repos/corywheeless/Sketch-Overwatch", "Date": "2017-12-08T22:56:56Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((samples.size()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4427/buggy-version/app.src.main.java.edu.kit.teco.radarbeacon.evaluation.MovingAverageEvaluation.java", "BodyUseAPI": [], "Fixed commit": "d4c2bd3e87e4bd35cf231118dea67659e1ff78b9", "Url": "https://api.github.com/repos/pinkproblem/RadarBeacon", "Date": "2015-12-08T19:35:30Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (etag.matches(\"[A-Za-z0-9]{32}\")) { return etag; }else { return \"-\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4075/buggy-version/src.com.atlauncher.data.Downloadable.java", "BodyUseAPI": [], "Fixed commit": "1cdaa0c4f47e4d975c8c174b6e299f8962db2da6", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2013-11-06T11:13:45Z"},
{"Line": "=>1118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.molgenis.data.Entity.getList(att.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (vals != null) { for (java.lang.Object val : vals) { org.molgenis.data.Entity mref = new org.molgenis.data.support.MapEntity(); mref.set(idAttribute.getName(), idValue); mref.set(att.getName(), val); mrefs.get(att.getName()).add(mref); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4140/buggy-version/molgenis-data-mysql.src.main.java.org.molgenis.data.mysql.MysqlRepository.java", "BodyUseAPI": [], "Fixed commit": "3df44738a9c429ac2cfef2a70060d6bda7f8fe0c", "Url": "https://api.github.com/repos/dennishendriksen/molgenis", "Date": "2014-11-04T19:39:18Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((audioService) != null) audioService.playAudio(musicfile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9232/buggy-version/PasstheBomb.app.src.main.java.ch.ethz.inf.vs.gruntzp.passthebomb.activities.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "fe123924013224b1b0fc71f78c9beeeb06e3d2a7", "Url": "https://api.github.com/repos/pege/Pass-the-Bomb", "Date": "2016-12-17T17:31:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.support.v4.app.ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) && ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/736/buggy-version/app.src.main.java.android.nik.virtualgeocaching.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "a5e91a666ff6c6f353fa255b7ff5f33240299e33", "Url": "https://api.github.com/repos/ljaeger/android-vgc", "Date": "2017-04-27T09:29:05Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chunkingSepBuffer.hasRemaining()) { lastChunkBuffer.put(chunkingSepBuffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1559/buggy-version/core.src.main.java.io.undertow.conduits.ChunkedStreamSinkConduit.java", "BodyUseAPI": ["java.nio.ByteBuffer.put(java.nio.ByteBuffer)"], "Fixed commit": "995f0e6ea3cfdc4b74bd02e87bebb176391c7862", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2014-04-28T18:05:53Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4897/buggy-version/snowball4j.src.main.java.org.tartarus.snowball.SnowballProgram.java", "BodyUseAPI": [], "Fixed commit": "703857a5b97191d3bbc9c00d423dfab6272848ce", "Url": "https://api.github.com/repos/LatinoLib/LATINO4J", "Date": "2016-02-02T08:57:37Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4897/buggy-version/snowball4j.src.main.java.org.tartarus.snowball.SnowballProgram.java", "BodyUseAPI": [], "Fixed commit": "703857a5b97191d3bbc9c00d423dfab6272848ce", "Url": "https://api.github.com/repos/LatinoLib/LATINO4J", "Date": "2016-02-02T08:57:37Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clazz == (double.class)) || (clazz == (java.lang.Double.class))) { java.lang.String val = lexer.numberString(); lexer.nextToken(JSONToken.COMMA); return ((T) (java.lang.Double.valueOf(java.lang.Double.parseDouble(val)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1751/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.NumberDeserializer.java", "BodyUseAPI": [], "Fixed commit": "744d645e0581145830e254b97860e6ef93774bb9", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2012-07-13T00:59:02Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (individualImagesEnabled) { java.lang.Thread thread = new java.lang.Thread(new ar.com.overflowdt.minekkit.util.LoadImageThread(urlImage, item), item.Name); threads.add(thread); thread.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9327/buggy-version/Minekkit.src.ar.com.overflowdt.minekkit.recompensas.AllRecompensasActivity.java", "BodyUseAPI": [], "Fixed commit": "d940511dbd0b120bcea9f853b53ca072e23dcff7", "Url": "https://api.github.com/repos/luksdlt92/minekkit-app", "Date": "2014-04-20T05:19:54Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uri == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8294/buggy-version/util.xml.src.main.java.org.smartdeveloperhub.util.xml.URIConverter.java", "BodyUseAPI": [], "Fixed commit": "5d3b5772bc084f5d5830559cb307df4b9c753f3d", "Url": "https://api.github.com/repos/SmartDeveloperHub/sdh-ci-harvester", "Date": "2015-06-25T19:58:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rawURI == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8294/buggy-version/util.xml.src.main.java.org.smartdeveloperhub.util.xml.URIConverter.java", "BodyUseAPI": [], "Fixed commit": "5d3b5772bc084f5d5830559cb307df4b9c753f3d", "Url": "https://api.github.com/repos/SmartDeveloperHub/sdh-ci-harvester", "Date": "2015-06-25T19:58:08Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fieldValues.length) > 1) { for (java.lang.String value : fieldValues) { stringBuilder.append(and).append(parentQuery).append(searchRecordsRequest.getFieldName()).append(\":\").append(value); } }else { stringBuilder.append(and).append(parentQuery).append(searchRecordsRequest.getFieldName()).append(\":\").append(fieldValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7729/buggy-version/src.main.java.org.recap.util.SolrQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "e2ea04d18b508add6df52c27ecee5cc3055bcbd0", "Url": "https://api.github.com/repos/chenchulakshmig/scsb-solr-client", "Date": "2016-10-06T16:43:55Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fieldValues.length) > 1) { for (java.lang.String value : fieldValues) { stringBuilder.append(searchRecordsRequest.getFieldName()).append(\":\").append(\"(\").append(\"\\\"\"); stringBuilder.append(value).append(\"\\\"\").append(\")\").append(and); } }else { stringBuilder.append(searchRecordsRequest.getFieldName()).append(\":\").append(\"(\"); stringBuilder.append(\"\\\"\").append(fieldValue).append(\"\\\"\").append(\")\").append(and); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7729/buggy-version/src.main.java.org.recap.util.SolrQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "e2ea04d18b508add6df52c27ecee5cc3055bcbd0", "Url": "https://api.github.com/repos/chenchulakshmig/scsb-solr-client", "Date": "2016-10-06T16:43:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["instantiation.getPlacement().getComponentFileRef().getFile().getSoftPkg()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (spd == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7564/buggy-version/plugins.gov.redhawk.ide.graphiti.dcd.ui.src.gov.redhawk.ide.graphiti.dcd.ui.diagram.patterns.ServicePattern.java", "BodyUseAPI": [], "Fixed commit": "fbfd8acd177dbe6866cce3a722ab7e38b6750a34", "Url": "https://api.github.com/repos/RedhawkSDR/eclipse-gov.redhawk.ide", "Date": "2016-02-23T21:41:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["instantiation.getPlacement().getComponentFileRef().getFile().getSoftPkg()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (spd == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7564/buggy-version/plugins.gov.redhawk.ide.graphiti.dcd.ui.src.gov.redhawk.ide.graphiti.dcd.ui.diagram.patterns.DevicePattern.java", "BodyUseAPI": [], "Fixed commit": "fbfd8acd177dbe6866cce3a722ab7e38b6750a34", "Url": "https://api.github.com/repos/RedhawkSDR/eclipse-gov.redhawk.ide", "Date": "2016-02-23T21:41:20Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ProviderType.HOME_AND_COMMUNITY_BASED_SERVICES_WAIVERED_SERVICES.value().equals(type)) { settings.addSetting(\"askUMPI\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4383/buggy-version/pesp-was8.5.cms-business-process.src.main.java.gov.medicaid.services.impl.PresentationServiceBean.java", "BodyUseAPI": [], "Fixed commit": "b66af5047153fb5c5348e848f9cc86028fc00943", "Url": "https://api.github.com/repos/nasa/coeci-cms-mpsp", "Date": "2013-12-13T03:04:38Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(publicIP.equalsIgnoreCase(privateIP))) { logger.warn(\"IP public is set, updating vs\"); if (updateStatus(item, currentStatus)) update(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8783/buggy-version/src.n3phele.factory.rest.impl.VirtualServerResource.java", "BodyUseAPI": [], "Fixed commit": "03f84c9b56543bf103cc25a11a021fc379032471", "Url": "https://api.github.com/repos/n3phele/openstack-factory", "Date": "2013-04-09T17:44:16Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cfg == null) return new com.orientechnologies.orient.core.record.impl.ODocument();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4584/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedConfiguration.java", "BodyUseAPI": [], "Fixed commit": "e6a40ec1f13fd73e17f57d8e28cfb62213762ffe", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-05-21T16:29:35Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((evt.getEntity().getType()) != (this.getType())) && (this.getCollideTypes().contains(evt.getEntity().getType()))) { this.collidingList.add(evt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8601/buggy-version/CodenameG.src.edu.chl.codenameg.model.entity.PlayerCharacter.java", "BodyUseAPI": ["java.util.List<edu.chl.codenameg.model.CollisionEvent>.add(edu.chl.codenameg.model.CollisionEvent)"], "Fixed commit": "6ccad6cb64e1dbe1cacf74fab376bd9c85602b08", "Url": "https://api.github.com/repos/simphax/CodenameG", "Date": "2012-03-31T11:22:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pc.isAlive())) { this.remove(pc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8601/buggy-version/CodenameG.src.edu.chl.codenameg.model.World.java", "BodyUseAPI": ["edu.chl.codenameg.model.World.remove(edu.chl.codenameg.model.entity.PlayerCharacter)"], "Fixed commit": "6ccad6cb64e1dbe1cacf74fab376bd9c85602b08", "Url": "https://api.github.com/repos/simphax/CodenameG", "Date": "2012-03-31T11:22:44Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getCollideTypes().contains(colliding.getType())) { if ((e.getType()) == (colliding.getType())) { motionx(colliding, java.lang.Math.signum(preferredx)); }else { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8601/buggy-version/CodenameG.src.edu.chl.codenameg.model.World.java", "BodyUseAPI": ["edu.chl.codenameg.model.Entity.getType()", "edu.chl.codenameg.model.World.motionx(edu.chl.codenameg.model.Entity,float)", "edu.chl.codenameg.model.Entity.getType()"], "Fixed commit": "6ccad6cb64e1dbe1cacf74fab376bd9c85602b08", "Url": "https://api.github.com/repos/simphax/CodenameG", "Date": "2012-03-31T11:22:44Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainActivity.instList.size()) > 0) { orion.ms.sara.WayPointActivity.wayPointList.addAll(MainActivity.instList); MainActivity.instList.clear(); sortingWaypointList(orion.ms.sara.WayPointActivity.wayPointList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/647/buggy-version/src.orion.ms.sara.WayPointActivity.java", "BodyUseAPI": [], "Fixed commit": "0a9e1b52dfd83104ab3c0cee9ee72f358abdd65f", "Url": "https://api.github.com/repos/bradshoow/SARA", "Date": "2014-04-14T12:19:38Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(storedJSON.getString(\"bannerUrl\").equals(\"\"))) { new com.app.bbq.samiksha.utils.DownloadImage(this).execute(storedJSON.getString(\"bannerUrl\")); }else { if (((pDialog) != null) && (pDialog.isShowing())) { pDialog.dismiss(); } tablePageIntent = new android.content.Intent(getApplicationContext(), com.app.bbq.samiksha.ChooseTableActivity.class); startActivity(tablePageIntent); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1941/buggy-version/app.src.main.java.com.app.bbq.samiksha.ConfigureActivity.java", "BodyUseAPI": ["com.app.bbq.samiksha.utils.DownloadImage.execute(storedJSON.getString(\"bannerUrl\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "35c8a2327c889ebcdb70b2fcf7b1d6412c53a121", "Url": "https://api.github.com/repos/carufus/bbq-samiksha-app", "Date": "2017-04-07T06:38:08Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (language.equalsIgnoreCase(org.apache.synapse.mediators.bsf.ScriptMediator.JAVA_SCRIPT)) { helper = xmlHelper; }else { helper = org.apache.bsf.xml.XMLHelper.getArgHelper(sew.getEngine()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6280/buggy-version/modules.extensions.src.main.java.org.apache.synapse.mediators.bsf.ScriptMediator.java", "BodyUseAPI": [], "Fixed commit": "e2d0dfbf7c5725f7c1b41e58c094aecab16820b7", "Url": "https://api.github.com/repos/Buddhima/wso2-synapse", "Date": "2016-05-04T14:42:25Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((neighMap.get(currPoint.getId())) == null) neighMap.put(currPoint.getId(), new java.util.ArrayList<java.lang.String>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1606/buggy-version/src.main.java.WPI.CampusMap.XML.XML.java", "BodyUseAPI": ["WPI.CampusMap.Backend.Point.getId()", "java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.put(currPoint.getId(),java.util.ArrayList<java.lang.String>)"], "Fixed commit": "ee5963670aee605701bf73a3825425e180b19063", "Url": "https://api.github.com/repos/Team11b/CampusMap", "Date": "2015-12-01T05:39:57Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query == null) throw new java.lang.NullPointerException(\"Query cannot be null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5031/buggy-version/nuclei-android.src.main.java.nuclei.persistence.PersistenceListImpl.java", "BodyUseAPI": [], "Fixed commit": "1180c312951375dfd80dba7e7bfac00939f2ffc4", "Url": "https://api.github.com/repos/lifechurch/nuclei-android", "Date": "2017-01-30T19:40:37Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mQuery) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5031/buggy-version/nuclei-android.src.main.java.nuclei.persistence.PersistenceListImpl.java", "BodyUseAPI": [], "Fixed commit": "1180c312951375dfd80dba7e7bfac00939f2ffc4", "Url": "https://api.github.com/repos/lifechurch/nuclei-android", "Date": "2017-01-30T19:40:37Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["projectInfo.getAppInfos().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isCallEclipsePlugin(appInfo)) { com.photon.phresco.util.Utility.executeCommand((((MVN_COMMAND) + (STR_BLANK_SPACE)) + (MVN_GOAL_ECLIPSE)), (((com.photon.phresco.util.Utility.getProjectHome()) + (java.io.File.separator)) + (appInfo.getAppDirName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2920/buggy-version/phresco-framework-impl.src.main.java.com.photon.phresco.framework.impl.ProjectManagerImpl.java", "BodyUseAPI": ["com.photon.phresco.util.Utility.executeCommand((((MVN_COMMAND) + (STR_BLANK_SPACE)) + (MVN_GOAL_ECLIPSE)),(((com.photon.phresco.util.Utility.getProjectHome()) + (java.io.File.separator)) + (appInfo.getAppDirName())))", "com.photon.phresco.commons.model.ApplicationInfo.getAppDirName()"], "Fixed commit": "7577a4b3a3a66052f69b63504e4388cd50f93906", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-03-29T07:57:36Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.AdapterView<?>.getItemAtPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (item instanceof com.garpr.android.models.Player) { final com.garpr.android.models.Player player = ((com.garpr.android.models.Player) (item)); com.garpr.android.activities.PlayerActivity.start(this, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8937/buggy-version/smash-ranks-android.app.src.main.java.com.garpr.android.activities.RankingsActivity.java", "BodyUseAPI": [], "Fixed commit": "728a6fa408116b8ba3af4b1c4915a496da0823df", "Url": "https://api.github.com/repos/airokay/smash-ranks-android", "Date": "2014-10-11T00:06:47Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listFragment) == null) { listFragment = new com.aragaer.yama.MemoListFragment(); getFragmentManager().beginTransaction().add(android.R.id.content, listFragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1769/buggy-version/src.main.java.com.aragaer.yama.MemoListActivity.java", "BodyUseAPI": [], "Fixed commit": "77abf64dbd1152babd3766b71f9fef37928763d8", "Url": "https://api.github.com/repos/aragaer/yama_android", "Date": "2015-06-13T15:24:27Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((httpRequest.getCookies()) != null) { for (javax.servlet.http.Cookie cookie : httpRequest.getCookies()) { if (cookie.getName().equalsIgnoreCase(\"bggusername\")) { bggUsername = cookie.getValue(); }else if (cookie.getName().equalsIgnoreCase(\"bggpassword\")) { bggPassword = cookie.getValue(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2982/buggy-version/src.main.java.org.smartreaction.boardgamegeek.LoginFilter.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Fixed commit": "66511ed79b4c03f3a04939489c3e51e1558adda3", "Url": "https://api.github.com/repos/icesphere/boardgamegeek", "Date": "2014-09-20T14:26:09Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spoon.support.visitor.MethodTypingContext.getIndexOfTypeParam(scopeParam.getTypeParameterDeclarer(),spoon.reflect.reference.CtTypeReference<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idxOfScopeBoundTypeParam >= 0) { int idxOfSuperBoundTypeParam = getIndexOfTypeParam(superParam.getTypeParameterDeclarer(), superBound); if (idxOfScopeBoundTypeParam >= 0) { return idxOfScopeBoundTypeParam == idxOfSuperBoundTypeParam; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1350/buggy-version/src.main.java.spoon.support.visitor.MethodTypingContext.java", "BodyUseAPI": [], "Fixed commit": "2ebf11ee804deff367ce745dbcaec4b2c882afc0", "Url": "https://api.github.com/repos/pvojtechovsky/spoon", "Date": "2017-10-22T18:02:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObject.has(\"generationBiomes\")) { ivorius.reccomplex.structures.generic.BiomeGenerationInfo[] infos = ivorius.reccomplex.structures.generic.gentypes.NaturalGenerationInfo.gson.fromJson(jsonObject.get(\"generationBiomes\"), ivorius.reccomplex.structures.generic.BiomeGenerationInfo[].class); naturalGenerationInfo.biomeWeights.setContents(java.util.Arrays.asList(infos)); }else naturalGenerationInfo.biomeWeights.setToDefault();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3234/buggy-version/src.main.java.ivorius.reccomplex.structures.generic.gentypes.NaturalGenerationInfo.java", "BodyUseAPI": ["ivorius.reccomplex.structures.generic.gentypes.Gson.fromJson(jsonObject.get(\"generationBiomes\"),java.lang.Class)", "ivorius.reccomplex.structures.generic.gentypes.JsonObject.get(java.lang.String)"], "Fixed commit": "9a743834101ac19c18f46ae89051a82389e22301", "Url": "https://api.github.com/repos/Ivorforce/RecurrentComplex", "Date": "2015-03-05T20:26:28Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (directionName.contains(\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd - \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\")) { directionName = directionName.replaceAll(\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd - \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\", \"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd - \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2923/buggy-version/HoloDesign-ver.3.Database.src.bg.znestorov.sobusf24.db.utils.Utils.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "b0b4ce5a63f0929b70285ccfd712498ce555f2e1", "Url": "https://api.github.com/repos/zdravko-nestorov/Sofbus-24", "Date": "2015-09-23T11:28:47Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (b > 0) { for (long i = 0; i < b; i++) { product = AddAndMult.sum(product, a); } }else { b = AddAndMult.sum(0, (-b)); for (long i = 0; i < b; i++) { product = AddAndMult.sum(product, a); } product = AddAndMult.sum((~product), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4477/buggy-version/random.AddAndMult.java", "BodyUseAPI": ["AddAndMult.sum(int,long)"], "Fixed commit": "1715d4327e3ceddfa67549b71d2eea4ff376464b", "Url": "https://api.github.com/repos/xdkernelx/CtCI", "Date": "2017-01-21T07:43:16Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.matches(regex)) { input = input.replaceAll(regex, \"$10$3\"); if (org.openid4java.discovery.xrds.XrdsParserImpl.DEBUG) { org.openid4java.discovery.xrds.XrdsParserImpl._log.debug(\"Invalid 'Expires' value. Correcting...\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/714/buggy-version/src.org.openid4java.discovery.xrds.XrdsParserImpl.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "62b86678ef5dcecd4ca2ddcde7062a96ac2a041f", "Url": "https://api.github.com/repos/janrain/openid4java", "Date": "2013-01-31T01:10:12Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSize) == 0) throw new java.util.NoSuchElementException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8916/buggy-version/PriorityQueue.java", "BodyUseAPI": [], "Fixed commit": "c3ddbad3f682ad768717400ce88d91707c66f572", "Url": "https://api.github.com/repos/agentdata/assignment11", "Date": "2015-04-09T03:46:37Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wecanteven.Models.Entities.Entity.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((destination.getZ()) < ((source.getZ()) + (entity.getJumpHeight()))) { com.wecanteven.Models.Map.Tile above = this.getTile(source.add(new com.wecanteven.UtilityClasses.Location(0, 0, entity.getHeight()))); above.accept(visitor); if (visitor.canMove()) { return move(entity, destination.add(Direction.UP.getCoords), movespeed); }else { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4011/buggy-version/src.com.wecanteven.Models.Map.Map.java", "BodyUseAPI": ["com.wecanteven.Models.Map.Map.move(com.wecanteven.Models.Entities.Entity,destination.add(Direction.UP.getCoords),int)", "com.wecanteven.Models.Entities.Entity.getHeight()", "com.wecanteven.UtilityClasses.Location.add(com.wecanteven.UtilityClasses.Location)", "com.wecanteven.Models.Map.Map.getTile(source.add(new com.wecanteven.UtilityClasses.Location(0, 0, entity.getHeight())))", "com.wecanteven.UtilityClasses.Location.add(Direction.UP.getCoords)"], "Fixed commit": "b0c4c671d941ce7c67cd323eccaf3c7c41eb9f67", "Url": "https://api.github.com/repos/WeCantEven/Iteration3", "Date": "2016-04-11T23:09:40Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(savedInstanceState.getBoolean(\"current\"))) current = Mark.nought;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8022/buggy-version/src.com.burningman.tictactoe.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "35c82a64c2245add2d4fc4e08b769b4779def07d", "Url": "https://api.github.com/repos/KingMarcin/TicTacToe", "Date": "2013-06-26T20:13:55Z"},
{"Line": "=>1291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modelConfig.isClassification()) { return maxCombineSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/622/buggy-version/src.main.java.ml.shifu.shifu.core.processor.TrainModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "eee8c73b1d0603e21e0ce579426c6461b3ae5e1e", "Url": "https://api.github.com/repos/huzza/shifu", "Date": "2017-11-01T13:44:09Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((b2.getType()) == (org.bukkit.Material.LOG)) p.getInventory().addItem(new org.bukkit.inventory.ItemStack(org.bukkit.Material.WOOD, 1, b2.getData())); else p.getInventory().addItem(new org.bukkit.inventory.ItemStack(org.bukkit.Material.WOOD, 1, ((short) ((b2.getData()) + 4))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6099/buggy-version/DevAthlon_3_1.src.de.nnl.devathlon_3.spellbook.LogSpell.java", "BodyUseAPI": ["p.getInventory().addItem(org.bukkit.inventory.ItemStack)", "org.bukkit.block.Block.getData()", "org.bukkit.block.Block.getData()", "p.getInventory().addItem(org.bukkit.inventory.ItemStack)"], "Fixed commit": "4a7a68cf628c5f95fe2e7a259b4e5434b0b42048", "Url": "https://api.github.com/repos/NoNameLabs-Team/devathlon_3", "Date": "2016-07-16T21:58:27Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityTargetEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mob instanceof org.bukkit.entity.Wolf) { org.bukkit.entity.Entity target = event.getTarget(); if (target instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (target)); if (player.hasPermission(\"outcomethewolves.bypass\")) { event.setCancelled(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8443/buggy-version/src.com.hideyourfire.ralphhogaboom.OutComeTheWolves.EventListener.java", "BodyUseAPI": [], "Fixed commit": "6c07d411d9ce0af7566ae6b2b9802eb31c091414", "Url": "https://api.github.com/repos/ralphhogaboom/OutComeTheWolves", "Date": "2014-12-31T03:46:35Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url == null) || (url.isEmpty())) { url = (org.wso2.developerstudio.eclipse.platform.ui.preferences.PreferenceInitializer.DEFAULT_UPDATE_SITE) + (org.wso2.developerstudio.eclipse.updater.job.UpdateMetaFileReaderJob.UPDATES_TXT_FILE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3221/buggy-version/plugins.org.wso2.developerstudio.eclipse.updater.src.org.wso2.developerstudio.eclipse.updater.job.UpdateMetaFileReaderJob.java", "BodyUseAPI": [], "Fixed commit": "8e3e66be74b7dd10834fbfaf2a7e0f59517a9abb", "Url": "https://api.github.com/repos/maheeka/developer-studio", "Date": "2016-03-30T11:29:19Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.preference.IPreferenceStore.getString(UpdateCheckerPreferencePage.UPDATE_SITE_URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((url == null) || (url.isEmpty())) { url = org.wso2.developerstudio.eclipse.platform.ui.preferences.PreferenceInitializer.DEFAULT_UPDATE_SITE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3221/buggy-version/plugins.org.wso2.developerstudio.eclipse.updater.src.org.wso2.developerstudio.eclipse.updater.core.UpdateManager.java", "BodyUseAPI": [], "Fixed commit": "8e3e66be74b7dd10834fbfaf2a7e0f59517a9abb", "Url": "https://api.github.com/repos/maheeka/developer-studio", "Date": "2016-03-30T11:29:19Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recreate && ((org.dyndns.fzoli.ui.systemtray.SystemTrayProvider.st) != null)) org.dyndns.fzoli.ui.systemtray.SystemTrayProvider.st.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9231/buggy-version/src.org.dyndns.fzoli.ui.systemtray.SystemTrayProvider.java", "BodyUseAPI": [], "Fixed commit": "93e6130f463dd2a09c0eb9b532424fcb1063e245", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-01-11T00:58:35Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timer.getText().toString().equals(\"1\")) { popupWindow.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5271/buggy-version/app.src.main.java.jamia.mikko.fallwatch.SidebarFragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "07528aa6512d13f196100f25f6fa2168958c3012", "Url": "https://api.github.com/repos/jamiamikko/FallWatch", "Date": "2017-10-08T09:33:18Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog) != null) { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7467/buggy-version/nEVERrEST.app.src.main.java.de.ferienakademie.neverrest.view.FindChallengesActivity.java", "BodyUseAPI": [], "Fixed commit": "1615fd3371250c36ba55fc6f634c34a23261eca8", "Url": "https://api.github.com/repos/Maddoc42/Ferienakademie2014Client", "Date": "2014-10-02T07:27:33Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.startsWith(\"account=\")) { account = s.substring(8, s.length()); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1695/buggy-version/src.main.java.com.wang.yan.mvc.MoneyController.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "447876293682874336239388840b8a3f62b47034", "Url": "https://api.github.com/repos/smoothpanda1981/HQ", "Date": "2017-10-13T23:27:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == 0) com.ex2.shenkar.todolist.RegisteredUser.localUser = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5164/buggy-version/app.src.main.java.com.ex2.shenkar.todolist.RegisteredUser.java", "BodyUseAPI": [], "Fixed commit": "fb2bfed1d55ea311f37d8a415ed676aca56c3e06", "Url": "https://api.github.com/repos/meschiany/ex2", "Date": "2016-03-21T19:30:37Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mHandler)) { mHandler.obtainMessage(com.apdlv.ilibaba.bt.SPPService.MESSAGE_DEBUG_MSG, msg).sendToTarget(); }else { android.util.Log.d(com.apdlv.ilibaba.bt.SPPService.TAG, (\"No handler (any more?) for debug msg: \" + msg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6311/buggy-version/src.com.apdlv.ilibaba.bt.SPPService.java", "BodyUseAPI": [], "Fixed commit": "886005d14a4c80f3e69143a3a5fb5ba72dd7ec72", "Url": "https://api.github.com/repos/apdlv72/iLibaba", "Date": "2014-03-06T08:06:00Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getException().getType()) instanceof com.github.gumtreediff.gen.jdt.cd.SimpleType) { pushNode(node, ((com.github.gumtreediff.gen.jdt.cd.SimpleType) (node.getException().getType())).getName().getFullyQualifiedName()); }else { pushNode(node, ((com.github.gumtreediff.gen.jdt.cd.UnionType) (node.getException().getType())).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5923/buggy-version/gen.jdt.src.main.java.com.github.gumtreediff.gen.jdt.cd.CdJdtVisitor.java", "BodyUseAPI": ["((com.github.gumtreediff.gen.jdt.cd.SimpleType) (node.getException().getType())).getName()", "com.github.gumtreediff.gen.jdt.cd.CdJdtVisitor.pushNode(com.github.gumtreediff.gen.jdt.cd.CatchClause,java.lang.String)", "((com.github.gumtreediff.gen.jdt.cd.UnionType) (node.getException().getType())).toString()", "com.github.gumtreediff.gen.jdt.cd.CatchClause.getException()", "node.getException().getType()", "com.github.gumtreediff.gen.jdt.cd.CdJdtVisitor.pushNode(com.github.gumtreediff.gen.jdt.cd.CatchClause,((com.github.gumtreediff.gen.jdt.cd.SimpleType) (node.getException().getType())).getName().getFullyQualifiedName())", "com.github.gumtreediff.gen.jdt.cd.CatchClause.getException()", "((com.github.gumtreediff.gen.jdt.cd.SimpleType) (node.getException().getType())).getName().getFullyQualifiedName()", "node.getException().getType()"], "Fixed commit": "ef4df732fafb98f33383ddf9f84ccabb1bf96488", "Url": "https://api.github.com/repos/GumTreeDiff/gumtree", "Date": "2017-08-09T17:34:49Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conf.getBoolean(com.datatorrent.demos.dimensions.sales.generic.SalesDemo.PROP_EMBEDD_QUERY, false)) { store.setEmbeddableQuery(wsIn); }else { dag.addStream(\"Query\", queryPort, store.query).setLocality(Locality.CONTAINER_LOCAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5115/buggy-version/demos.dimensions.src.main.java.com.datatorrent.demos.dimensions.sales.generic.SalesDemo.java", "BodyUseAPI": [], "Fixed commit": "1e6698e5bea64ffeb56d0c697facb6ee22012873", "Url": "https://api.github.com/repos/apache/apex-malhar", "Date": "2015-06-12T23:58:19Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((artists.size()) > 0) return java.lang.String.format(\"ID: %d, Title: %s, Genre: %s, Added By: %d, Artists: %s\", songId, getTitle(), getGenre(), getAddedByUserId(), artists.toString()); else return java.lang.String.format(\"ID: %d, Title: %s, Genre: %s, Added By: %d\", songId, getTitle(), getGenre(), getAddedByUserId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7248/buggy-version/src.objectmodels.Song.java", "BodyUseAPI": ["java.util.ArrayList<objectmodels.Artist>.toString()", "java.lang.String.format(java.lang.String,int,getTitle(),getGenre(),getAddedByUserId(),artists.toString())"], "Fixed commit": "7b8961139b508f241aac72875f373d5dbfcdec06", "Url": "https://api.github.com/repos/TimothyHolmsten/SQLMedia", "Date": "2016-12-05T12:56:13Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6064/buggy-version/src.main.java.com.mridang.sunmoon.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "2de098ae7dad89d7af584da05bdbd3facf3e1f12", "Url": "https://api.github.com/repos/mridang/dashclock-sunmoon", "Date": "2015-03-29T09:12:16Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.atlasapi.media.entity.Location.getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (policy.getAvailableCountries().isEmpty()) { countries.add(Countries.ALL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4320/buggy-version/src.main.java.org.atlasapi.feeds.radioplayer.outputting.RadioPlayerProgrammeInformationOutputter.java", "BodyUseAPI": [], "Fixed commit": "72f0cc3bea9e619ddaf24eb5a097d815f2c47748", "Url": "https://api.github.com/repos/atlasapi/atlas-feeds", "Date": "2011-04-21T17:06:06Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tripleContainsHistoricalAndConstructVars || ((variableTypeManager.isType(triple.getSubject().getName(), VariableTypes.HISTORIC_TYPE)) && (variableTypeManager.isType(triple.getSubject().getName(), VariableTypes.CONSTRUCT_TYPE)))) { tripleContainsHistoricalAndConstructVars = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4177/buggy-version/play-platformservices-querydispatcher.src.main.java.eu.play_project.play_platformservices_querydispatcher.bdpl.visitor.historic.QueryTemplateGenerator.java", "BodyUseAPI": [], "Fixed commit": "8e2aa4af00606e7b9f145ff80c6cbbfac629a1c3", "Url": "https://api.github.com/repos/play-project/play-dcep", "Date": "2013-11-07T14:52:28Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tripleContainsHistoricalAndConstructVars || ((variableTypeManager.isType(triple.getObject().getName(), VariableTypes.HISTORIC_TYPE)) && (variableTypeManager.isType(triple.getObject().getName(), VariableTypes.CONSTRUCT_TYPE)))) { tripleContainsHistoricalAndConstructVars = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4177/buggy-version/play-platformservices-querydispatcher.src.main.java.eu.play_project.play_platformservices_querydispatcher.bdpl.visitor.historic.QueryTemplateGenerator.java", "BodyUseAPI": [], "Fixed commit": "8e2aa4af00606e7b9f145ff80c6cbbfac629a1c3", "Url": "https://api.github.com/repos/play-project/play-dcep", "Date": "2013-11-07T14:52:28Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tripleContainsHistoricalAndConstructVars || ((variableTypeManager.isType(triple.getPredicate().getName(), VariableTypes.HISTORIC_TYPE)) && (variableTypeManager.isType(triple.getPredicate().getName(), VariableTypes.CONSTRUCT_TYPE)))) { tripleContainsHistoricalAndConstructVars = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4177/buggy-version/play-platformservices-querydispatcher.src.main.java.eu.play_project.play_platformservices_querydispatcher.bdpl.visitor.historic.QueryTemplateGenerator.java", "BodyUseAPI": [], "Fixed commit": "8e2aa4af00606e7b9f145ff80c6cbbfac629a1c3", "Url": "https://api.github.com/repos/play-project/play-dcep", "Date": "2013-11-07T14:52:28Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isBlank(study.getExternalId())) && (org.apache.commons.lang3.StringUtils.isNotBlank(study.getDOI()))) { studyNode.setExternalId(org.eol.globi.util.ExternalIdUtil.urlForExternalId(study.getDOI())); }else { studyNode.setExternalId(study.getExternalId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5178/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.data.NodeFactoryNeo4j.java", "BodyUseAPI": ["org.eol.globi.util.ExternalIdUtil.urlForExternalId(study.getDOI())", "org.eol.globi.domain.Study.getExternalId()", "org.eol.globi.domain.StudyNode.setExternalId(study.getExternalId())", "org.eol.globi.domain.StudyNode.setExternalId(org.eol.globi.util.ExternalIdUtil.urlForExternalId(study.getDOI()))", "org.eol.globi.domain.Study.getDOI()"], "Fixed commit": "d4a5d388b50aa1f7ebaca4d0b478f2cc1a105a94", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2017-01-13T00:53:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (posY >= 1) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6418/buggy-version/src.com.ozd.touche.canvas.DPad.java", "BodyUseAPI": [], "Fixed commit": "c2bc0c2535cd409f8a918be5a4f905847e2cac03", "Url": "https://api.github.com/repos/szdmr/touch2cheat", "Date": "2014-10-29T14:25:16Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (posX >= 1) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6418/buggy-version/src.com.ozd.touche.canvas.DPad.java", "BodyUseAPI": [], "Fixed commit": "c2bc0c2535cd409f8a918be5a4f905847e2cac03", "Url": "https://api.github.com/repos/szdmr/touch2cheat", "Date": "2014-10-29T14:25:16Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (posX < 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6418/buggy-version/src.com.ozd.touche.canvas.DPad.java", "BodyUseAPI": [], "Fixed commit": "c2bc0c2535cd409f8a918be5a4f905847e2cac03", "Url": "https://api.github.com/repos/szdmr/touch2cheat", "Date": "2014-10-29T14:25:16Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (posY < 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6418/buggy-version/src.com.ozd.touche.canvas.DPad.java", "BodyUseAPI": [], "Fixed commit": "c2bc0c2535cd409f8a918be5a4f905847e2cac03", "Url": "https://api.github.com/repos/szdmr/touch2cheat", "Date": "2014-10-29T14:25:16Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (negative && (dfloor == 0)) { buffer.append('-'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5065/buggy-version/src.main.third_party.mozilla.org.mozilla.javascript.DToA.java", "BodyUseAPI": [], "Fixed commit": "0d0c4a34221e8f79e52567a29eb273322f37fe22", "Url": "https://api.github.com/repos/anba/es6draft", "Date": "2013-05-03T09:20:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3810/buggy-version/library.src.main.java.com.lsjwzh.media.exoplayercompat.sys.SysMediaPlayerImpl.java", "BodyUseAPI": [], "Fixed commit": "08ba6dacdf06a40076a16e5ba8acf5dca4ed2c8a", "Url": "https://api.github.com/repos/lsjwzh/ExoPlayerCompat", "Date": "2014-09-04T15:25:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sessionIds) != null ? !(sessionIds.equals(that.sessionIds)) : (that.sessionIds) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3397/buggy-version/webclient.src.main.java.com.griddynamics.jagger.webclient.client.dto.TaskDataDto.java", "BodyUseAPI": [], "Fixed commit": "d6c7468e5e74c581ec3211844888e75d691511d1", "Url": "https://api.github.com/repos/dlatnikov/jagger", "Date": "2014-03-04T12:14:49Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (subNames != null) { this.setHasSubtypes(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4025/buggy-version/src.main.java.net.dark_roleplay.drpcore.api.items.DRPItem.java", "BodyUseAPI": [], "Fixed commit": "0861fb720c3f4ff8fa869f10bdd6b83c9020229c", "Url": "https://api.github.com/repos/DarkRoleplay/Dark-Roleplay-Core", "Date": "2017-10-23T07:58:22Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.eclipse.code.imports.CleanImportsHandler.packageName(Tree.Import)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (pn != null) { java.util.List<com.redhat.ceylon.compiler.typechecker.tree.Tree.Import> is = packages.get(pn); if (is == null) { is = new java.util.ArrayList<com.redhat.ceylon.compiler.typechecker.tree.Tree.Import>(); packages.put(pn, is); } is.add(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2568/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.imports.CleanImportsHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<Tree.Import>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.List<Tree.Import>>.put(java.lang.String,java.util.List<Tree.Import>)"], "Fixed commit": "839e06c010fabc68772503f823cb0bad6e5d5445", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2014-01-28T17:21:47Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.forgeessentials.protection.ModuleProtection.isDebugMode(player))) arguments.confirm(\"Enabled protection debug-mode\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7229/buggy-version/src.main.java.com.forgeessentials.protection.commands.CommandProtectionDebug.java", "BodyUseAPI": [], "Fixed commit": "3be6a933fa9f64e4954e72eb5bbe659c91260ad5", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-09-11T08:40:27Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (column != (-1)) { java.lang.System.out.println(\"Value is from Database!\"); if (key.equals(boardUUID)) { return column; }else { switch (column) { case 0 : return 6; case 1 : return 5; case 2 : return 4; case 3 : return 3; case 4 : return 2; case 5 : return 1; case 6 : return 0; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1561/buggy-version/src.main.java.com.harambe.algorithm.MiniMax.java", "BodyUseAPI": [], "Fixed commit": "b4069245085e620e36eced2d6c569c9578f5ccc9", "Url": "https://api.github.com/repos/PeterUlb/harambe", "Date": "2016-10-18T19:23:55Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { result = \"lb\"; android.util.Log.i(com.cs4310.epsilon.buynutsproto.localDataStorage.LocalDataHandler.TAG, (\"Units set by default = \" + result)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1814/buggy-version/app.src.main.java.com.cs4310.epsilon.buynutsproto.localDataStorage.LocalDataHandler.java", "BodyUseAPI": [], "Fixed commit": "3876a63215cb0c39d1625c420ee2d675b67eb2a6", "Url": "https://api.github.com/repos/ddalcino/BuyNutsProto", "Date": "2015-12-02T00:49:41Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((img.width()) < curwidth) { curwidth = img.width(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3358/buggy-version/src.fragmentImage.java", "BodyUseAPI": ["org.opencv.core.Mat.width()"], "Fixed commit": "e80d622de216da8de3e3455c03435e50b8cf0ac1", "Url": "https://api.github.com/repos/metal-crow/Sentry-Gun-Computer-Vision", "Date": "2014-09-11T04:10:27Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((img.height()) < curheight) { curheight = img.height(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3358/buggy-version/src.fragmentImage.java", "BodyUseAPI": ["org.opencv.core.Mat.height()"], "Fixed commit": "e80d622de216da8de3e3455c03435e50b8cf0ac1", "Url": "https://api.github.com/repos/metal-crow/Sentry-Gun-Computer-Vision", "Date": "2014-09-11T04:10:27Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((minigame.getState()) == (au.com.mineauz.minigames.minigame.MinigameState.STARTING)) && (minigame.canLateJoin())) { player.sendMessage(au.com.mineauz.minigames.MinigameUtils.formStr(\"minigame.lateJoinWait\", minigame.getMpTimer().getStartWaitTimeLeft()), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1177/buggy-version/Minigames.src.main.java.au.com.mineauz.minigames.PlayerData.java", "BodyUseAPI": ["au.com.mineauz.minigames.MinigameUtils.formStr(java.lang.String,minigame.getMpTimer().getStartWaitTimeLeft())", "au.com.mineauz.minigames.MinigamePlayer.sendMessage(au.com.mineauz.minigames.MinigameUtils.formStr(\"minigame.lateJoinWait\", minigame.getMpTimer().getStartWaitTimeLeft()),<nulltype>)", "au.com.mineauz.minigames.minigame.Minigame.getMpTimer()", "minigame.getMpTimer().getStartWaitTimeLeft()"], "Fixed commit": "1cbf7b85111156872ae4f6d4c693a03cc69492f6", "Url": "https://api.github.com/repos/AddstarMC/Minigames", "Date": "2017-10-24T07:34:42Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(org.perfcake.reporting.destinations.chart.ChartDestinationHelper.DescriptionFileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (files != null) { final java.util.List<java.io.File> descriptionFiles = java.util.Arrays.asList(files); for (final java.io.File f : descriptionFiles) { final org.perfcake.reporting.destinations.chart.Chart c = org.perfcake.reporting.destinations.chart.Chart.fromDescriptionFile(f); if (!(c.getBaseName().equals(mainChart.getBaseName()))) { charts.add(c); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2197/buggy-version/perfcake.src.main.java.org.perfcake.reporting.destinations.chart.ChartDestinationHelper.java", "BodyUseAPI": ["java.util.Arrays.asList(java.io.File[])"], "Fixed commit": "896e1b88f09d2d4af0ff42526e52ee2401f6e2f2", "Url": "https://api.github.com/repos/PerfCake/PerfCake", "Date": "2015-10-18T22:02:58Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(org.perfcake.reporting.destinations.chart.ChartDestinationHelper.CombinedJsFileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files != null) { for (final java.io.File f : files) { if (!(f.delete())) { issues.append(java.lang.String.format(\"Cannot delete file %s. %n\", f.getAbsolutePath())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2197/buggy-version/perfcake.src.main.java.org.perfcake.reporting.destinations.chart.ChartDestinationHelper.java", "BodyUseAPI": [], "Fixed commit": "896e1b88f09d2d4af0ff42526e52ee2401f6e2f2", "Url": "https://api.github.com/repos/PerfCake/PerfCake", "Date": "2015-10-18T22:02:58Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((myBitmap.getHeight()) < 1000) && ((myBitmap.getWidth()) < 1000)) { com.cs.simpleproject.AsyncTask_ScalarQuantization.IMG_HEIGHT = ((int) ((myBitmap.getHeight()) * 0.1)); com.cs.simpleproject.AsyncTask_ScalarQuantization.IMG_WIDTH = ((int) ((myBitmap.getWidth()) * 0.1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5640/buggy-version/simple-project.src.com.cs.simpleproject.AsyncTask_ScalarQuantization.java", "BodyUseAPI": ["android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getWidth()"], "Fixed commit": "273cbb4c7de0f5f6cb286333dc561e3d55a8c74e", "Url": "https://api.github.com/repos/akifhatipoglu/simple-project", "Date": "2014-03-25T20:01:35Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((myBitmap.getHeight()) > 2000) && ((myBitmap.getHeight()) < 4000)) && (((myBitmap.getWidth()) > 2000) && ((myBitmap.getWidth()) < 4000))) { com.cs.simpleproject.AsyncTask_ScalarQuantization.IMG_HEIGHT = ((int) ((myBitmap.getHeight()) * 0.01)); com.cs.simpleproject.AsyncTask_ScalarQuantization.IMG_WIDTH = ((int) ((myBitmap.getWidth()) * 0.01)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5640/buggy-version/simple-project.src.com.cs.simpleproject.AsyncTask_ScalarQuantization.java", "BodyUseAPI": ["android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getWidth()"], "Fixed commit": "273cbb4c7de0f5f6cb286333dc561e3d55a8c74e", "Url": "https://api.github.com/repos/akifhatipoglu/simple-project", "Date": "2014-03-25T20:01:35Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((myBitmap.getHeight()) > 1000) && ((myBitmap.getHeight()) < 2000)) && (((myBitmap.getWidth()) > 1000) && ((myBitmap.getWidth()) < 2000))) { com.cs.simpleproject.AsyncTask_ScalarQuantization.IMG_HEIGHT = ((int) ((myBitmap.getHeight()) * 0.05)); com.cs.simpleproject.AsyncTask_ScalarQuantization.IMG_WIDTH = ((int) ((myBitmap.getWidth()) * 0.05)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5640/buggy-version/simple-project.src.com.cs.simpleproject.AsyncTask_ScalarQuantization.java", "BodyUseAPI": ["android.graphics.Bitmap.getWidth()", "android.graphics.Bitmap.getHeight()"], "Fixed commit": "273cbb4c7de0f5f6cb286333dc561e3d55a8c74e", "Url": "https://api.github.com/repos/akifhatipoglu/simple-project", "Date": "2014-03-25T20:01:35Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.mediator.foreach.ForEachMediatorActivator.log.isDebugEnabled()) { org.wso2.carbon.mediator.foreach.ForEachMediatorActivator.log.debug(\"Starting the foreach mediator component ...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/227/buggy-version/components.mediation-ui.mediators-ui.org.wso2.carbon.mediator.foreach.ui.src.main.java.org.wso2.carbon.mediator.foreach.ForEachMediatorActivator.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "7b06f275ff009b8ac7cc8548e50eead791e511c5", "Url": "https://api.github.com/repos/ChanakaCooray/carbon-mediation", "Date": "2015-01-19T06:44:41Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.mediator.foreach.ForEachMediatorActivator.log.isDebugEnabled()) { org.wso2.carbon.mediator.foreach.ForEachMediatorActivator.log.debug(\"Stopped the foreach mediator component ...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/227/buggy-version/components.mediation-ui.mediators-ui.org.wso2.carbon.mediator.foreach.ui.src.main.java.org.wso2.carbon.mediator.foreach.ForEachMediatorActivator.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "7b06f275ff009b8ac7cc8548e50eead791e511c5", "Url": "https://api.github.com/repos/ChanakaCooray/carbon-mediation", "Date": "2015-01-19T06:44:41Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.mediator.foreach.ForEachMediatorActivator.log.isDebugEnabled()) { org.wso2.carbon.mediator.foreach.ForEachMediatorActivator.log.debug(\"Successfully registered the foreach mediator service\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/227/buggy-version/components.mediation-ui.mediators-ui.org.wso2.carbon.mediator.foreach.ui.src.main.java.org.wso2.carbon.mediator.foreach.ForEachMediatorActivator.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "7b06f275ff009b8ac7cc8548e50eead791e511c5", "Url": "https://api.github.com/repos/ChanakaCooray/carbon-mediation", "Date": "2015-01-19T06:44:41Z"},
{"Line": "=>1720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.ether.dependencyView.IntIntMaplet.get(c.name)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fileName != 0) { myDelta.myChangedFiles.add(fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6531/buggy-version/jps.model.src.org.jetbrains.ether.dependencyView.Mappings.java", "BodyUseAPI": ["gnu.trove.TIntHashSet.add(int)"], "Fixed commit": "cac46d7d5f926024a9664db150b33ad0ff25400b", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-06-25T12:07:14Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (prefixIndex != (-1)) { preDefinedAsAddOn = \" AS \" + (arg.substring((prefixIndex + 1))); sqlAttributeDefinition = context.getDatabase().getRowIdKeyWord().replace(\"+\", \"||\"); }else { sqlAttributeDefinition = arg.replace(\"+\", \"||\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6340/buggy-version/src.main.java.ch.brickwork.bsuit.interpreter.interpreters.TableExpressionInterpreter.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2ba237f5e1270f867a2e501d41b669697a8224e1", "Url": "https://api.github.com/repos/BrickworkVentures/boilersuit-core", "Date": "2016-04-20T12:01:23Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAccept) { return \"home/confirm_deal\"; }else { return \"home/application_is_rejected\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3966/buggy-version/sport-rent-equipment.src.main.java.it.sevenbits.web.controllers.DealController.java", "BodyUseAPI": [], "Fixed commit": "9dab0ae0570577df119727f15078eb092d65f440", "Url": "https://api.github.com/repos/7bits/internship-2015-sport-equipment-rent", "Date": "2015-07-24T06:11:46Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hours == null) && (minutes == null)) { time = \"\"; }else if ((hours < 0) || (minutes < 0)) { time = negNumberToProduceErrorInLogic; }else { time += (hours * 60) + minutes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1642/buggy-version/src.userInterface.PersonalFitnessTrackerUI.java", "BodyUseAPI": [], "Fixed commit": "556896f64578c8320113ba87f43213086c555a0c", "Url": "https://api.github.com/repos/dallasoliver/CS2043", "Date": "2015-06-19T14:19:57Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((historyListView.getFooterViewsCount()) == 0) { historyListView.addFooterView(view); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8455/buggy-version/app.src.main.java.org.openlmis.core.view.fragment.StockMovementHistoryFragment.java", "BodyUseAPI": ["android.widget.ListView.addFooterView(android.widget.TextView)"], "Fixed commit": "2fe745140d0837ad515db7b0733a768e82a5ebcd", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-09-11T03:18:48Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) != null) { hotwordDetector.setKeyword(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/367/buggy-version/app.src.main.java.uk.co.tstableford.p_brain.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "85bd89f1779ac01efe3300de468111be993c89c4", "Url": "https://api.github.com/repos/timstableford/P-BrainAndroid", "Date": "2017-02-10T08:54:26Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (walkingControllerParameters.checkECMPLocationToTriggerToeOff()) isDesiredECMPOKForToeOff.set((isOnExitCMP && (onToesSupportPolygon.isPointInside(desiredECMP)))); else isDesiredECMPOKForToeOff.set(isOnExitCMP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1853/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.controlModules.WalkOnTheEdgesManager.java", "BodyUseAPI": [], "Fixed commit": "670d04ee6fedeb7e08ce83dee295388a6aa1050d", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2017-01-18T19:19:20Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduledPublishTime) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5189/buggy-version/facebook4j-core.src.main.java.facebook4j.internal.json.PostJSONImpl.java", "BodyUseAPI": [], "Fixed commit": "727ace28513763e072c3bb9e5786505abef6d2fe", "Url": "https://api.github.com/repos/roundrop/facebook4j", "Date": "2013-10-30T01:58:13Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edmReturnType) == null) { final org.apache.olingo.odata2.api.edm.provider.ReturnType returnType = functionImport.getReturnType(); if (returnType != null) { edmReturnType = new org.apache.olingo.odata2.core.edm.provider.EdmTypedImplProv(edm, functionImport.getName(), returnType.getTypeName(), returnType.getMultiplicity()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2681/buggy-version/odata2-lib.odata-core.src.main.java.org.apache.olingo.odata2.core.edm.provider.EdmFunctionImportImplProv.java", "BodyUseAPI": [], "Fixed commit": "84a47f92b77f7693295df4a0eeb9778bd10c438a", "Url": "https://api.github.com/repos/oswaldo/olingo-odata2", "Date": "2014-07-01T08:37:47Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeFile(file.getStoragePath())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (bitmap != null) { thumbnail = android.media.ThumbnailUtils.extractThumbnail(bitmap, px, px); addBitmapToCache(imageKey, thumbnail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2116/buggy-version/src.com.owncloud.android.ui.adapter.FileListListAdapter.java", "BodyUseAPI": ["android.media.ThumbnailUtils.extractThumbnail(android.graphics.Bitmap,int,int)"], "Fixed commit": "6c55a20389285cad8eda06ff1a665f97caf59e46", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2014-09-18T10:44:42Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.protoype.osindex.currencyexchange.activities.ConversionActivity.2.getNumberClicked(button.name())", "com.protoype.osindex.currencyexchange.activities.ConversionActivity.2.getCurrenctCurrencyValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((buttonClicked.equalsIgnoreCase(\".\")) && (currentValueOnTextView.contains(\".\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8223/buggy-version/app.src.main.java.com.protoype.osindex.currencyexchange.activities.ConversionActivity.java", "BodyUseAPI": [], "Fixed commit": "c5f0bc8de62fb3bb1acd6402b93a824202409ae7", "Url": "https://api.github.com/repos/osinakayah/currency-exchange-rate", "Date": "2017-11-04T10:23:54Z"},
{"Line": "=>1229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.nc2.ncml.Element.getAttributeValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sep != null) { java.util.List<java.lang.String> valList = new java.util.ArrayList<java.lang.String>(); java.util.StringTokenizer tokn = new java.util.StringTokenizer(values, sep); while (tokn.hasMoreTokens()) valList.add(tokn.nextToken()); v.setValues(valList); }else { java.lang.String[] tokens = ucar.unidata.util.StringUtil2.splitString(values); java.util.List<java.lang.String> valList = java.util.Arrays.asList(tokens); v.setValues(valList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1475/buggy-version/cdm.src.main.java.ucar.nc2.ncml.NcMLReader.java", "BodyUseAPI": [], "Fixed commit": "74f16a6d58964a8924de88b6fd14b1c945bd8ec7", "Url": "https://api.github.com/repos/ethanrd/thredds", "Date": "2013-08-13T18:42:51Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sr == null) { throw new java.lang.IllegalArgumentException(\"staplerRequest must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/137/buggy-version/src.main.java.jenkins.plugins.hipchat.HipChatNotifier.java", "BodyUseAPI": [], "Fixed commit": "08c6d522601fd1eff0b0090acee3cf42aab81844", "Url": "https://api.github.com/repos/jenkinsci/hipchat-plugin", "Date": "2016-10-22T15:15:58Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chatRoom) != null) { for (org.jivesoftware.smackx.muc.MultiUserChat cr : chatRooms) if ((cr != null) && (cr.isJoined())) { cr.leave(); } chatRooms = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1579/buggy-version/src.main.java.ltg.commons.SimpleXMPPClient.java", "BodyUseAPI": [], "Fixed commit": "d75787a75f165ffd27156515cd8bb67cb74af3d2", "Url": "https://api.github.com/repos/JianlongCao/simple-java-xmpp-client", "Date": "2015-07-06T05:23:16Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((stimulusField.getText().trim().length()) == 0) && ((responseField.getText().trim().length()) == 0)) { }else if (creatingNewItem) { drill.Item theNewItem = new drill.Item(stimulusField.getText(), responseField.getText(), drill.Build.getInt(timesCorrectField, \"Times correct\"), drill.Build.getInt(timesIncorrectField, \"Times incorrect\"), drill.Build.getInt(intervalField, \"Interval\"), getDate()); itemNumber = (drill.Build.getInt(itemNumberField, \"Item number\")) - 1; list.add(itemNumber, theNewItem); item = theNewItem; isDirty = true; creatingNewItem = false; }else { boolean changed = item.modify(stimulusField.getText(), responseField.getText(), drill.Build.getInt(timesCorrectField, \"Times correct\"), drill.Build.getInt(timesIncorrectField, \"Times incorrect\"), drill.Build.getInt(intervalField, \"Interval\"), getDate()); if (changed) isDirty = true; if (newPosition != (itemNumber)) { list.moveItem(itemNumber, newPosition); itemNumber = newPosition; isDirty = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3723/buggy-version/src.drill.Build.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()", "drill.Item.modify(java.lang.String,java.lang.String,int,int,int,int)", "javax.swing.JTextField.getText()", "javax.swing.JTextField.getText()"], "Fixed commit": "bd7e0d4a87eddc5d92d4d4670b0796115bc03470", "Url": "https://api.github.com/repos/DavidMatuszek/Drill2015", "Date": "2015-06-28T15:36:09Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLineLeft.getVisibility()) == (android.view.View.INVISIBLE)) { mLineRight.startAnimation(mAnimationtoLeft); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3896/buggy-version/app.src.main.java.com.chogo.yayatuan.ui.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "c03888fe4070746ad7aabaccb1cda8d06c4e87c6", "Url": "https://api.github.com/repos/Hemione521/YayaTuan", "Date": "2016-12-19T07:14:03Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLineRight.getVisibility()) == (android.view.View.INVISIBLE)) { mLineLeft.startAnimation(mAnimationtoRight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3896/buggy-version/app.src.main.java.com.chogo.yayatuan.ui.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "c03888fe4070746ad7aabaccb1cda8d06c4e87c6", "Url": "https://api.github.com/repos/Hemione521/YayaTuan", "Date": "2016-12-19T07:14:03Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.Slot.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(this.mergeItemStack(itemstack1, 0, 3, false))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8793/buggy-version/java.com.agadar.brewingapi.ContainerBrewingStand2.java", "BodyUseAPI": [], "Fixed commit": "59edf5e186e24dfb2d713b4e6378ce0b2d052ac4", "Url": "https://api.github.com/repos/Agadar/Brewing-API", "Date": "2014-08-18T22:38:56Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.Slot.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(this.mergeItemStack(itemstack1, 31, 40, false))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8793/buggy-version/java.com.agadar.brewingapi.ContainerBrewingStand2.java", "BodyUseAPI": [], "Fixed commit": "59edf5e186e24dfb2d713b4e6378ce0b2d052ac4", "Url": "https://api.github.com/repos/Agadar/Brewing-API", "Date": "2014-08-18T22:38:56Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.Slot.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(this.mergeItemStack(itemstack1, 4, 31, false))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8793/buggy-version/java.com.agadar.brewingapi.ContainerBrewingStand2.java", "BodyUseAPI": [], "Fixed commit": "59edf5e186e24dfb2d713b4e6378ce0b2d052ac4", "Url": "https://api.github.com/repos/Agadar/Brewing-API", "Date": "2014-08-18T22:38:56Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadleafcommerce.openadmin.client.dto.Entity.findProperty(headerField.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((p.getDisplayValue()) != null) { value = p.getDisplayValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2548/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.service.FormBuilderServiceImpl.java", "BodyUseAPI": ["org.broadleafcommerce.openadmin.client.dto.Property.getDisplayValue()"], "Fixed commit": "685c1cafe5437e7b8d7d5da0a1ddbcf57580f5a8", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-03-19T15:21:52Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(buyClient.androidPayIsEnabled())) { throw new java.lang.IllegalArgumentException(\"buyClient must have Android Pay enabled\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8121/buggy-version/MobileBuy.buy.src.main.java.com.shopify.buy.utils.AndroidPayHelper.java", "BodyUseAPI": [], "Fixed commit": "e50b50efe2b595b8e151bfaef69543dba60f2872", "Url": "https://api.github.com/repos/Shopify/mobile-buy-sdk-android", "Date": "2016-05-03T18:58:07Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(game2.Pause.backupHS.isEmpty())) { for (int i = 0; i < 10; i++) { game2.TextImage temp = new game2.TextImage(new game2.Posn(((WIDTH) / 2), (200 + (25 * i))), (((i + 1) + \". \") + (java.lang.Integer.toString(game2.Pause.backupHS.get(i)))), 20, java.awt.Color.white); highscoreList = new game2.OverlayImages(highscoreList, temp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6368/buggy-version/src.game2.Pause.java", "BodyUseAPI": ["java.lang.Integer.toString(java.lang.Integer)", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "872fc5407213714d95fb8b11fa601ce469b3427f", "Url": "https://api.github.com/repos/semccoy/game2", "Date": "2014-12-13T19:59:41Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.vonhof.babelshark.reflect.MethodInfo>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (evtHandler == null) { throw new java.lang.IllegalArgumentException(((\"Event handler for event '\" + evtType) + \"' not found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2420/buggy-version/modules.webi-websockets.src.main.java.com.vonhof.webi.websockets.SocketService.java", "BodyUseAPI": [], "Fixed commit": "62bd0c8ca0aa0bdbc7453090be7cace99973786e", "Url": "https://api.github.com/repos/hofmeister/Webi", "Date": "2014-01-12T19:13:15Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collectionItem.getThumbnail()) != null) { com.bumptech.glide.Glide.with(this).load(collectionItem.getThumbnail().getImageUrl()).error(R.drawable.error_placeholder).into(itemImageView); }else { itemTextTextView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7618/buggy-version/app.src.main.java.saulmm.avengers.views.activities.CollectionActivity.java", "BodyUseAPI": ["saulmm.avengers.model.entities.CollectionItem.getThumbnail()", "com.bumptech.glide.Glide.with(this).load(collectionItem.getThumbnail().getImageUrl()).error(R.drawable.error_placeholder)", "collectionItem.getThumbnail().getImageUrl()", "com.bumptech.glide.Glide.with(this).load(collectionItem.getThumbnail().getImageUrl()).error(R.drawable.error_placeholder).into(android.widget.ImageView)", "com.bumptech.glide.Glide.with(this).load(collectionItem.getThumbnail().getImageUrl())"], "Fixed commit": "fea23d96073b61d4931fe39212363a1f450de9e7", "Url": "https://api.github.com/repos/saulmm/Avengers", "Date": "2015-11-01T11:40:25Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rascalmpl.value.IConstructor.getConstructorType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (consType.hasField(name)) { int index = consType.getFieldIndex(name); return org.rascalmpl.interpreter.result.ResultFactory.makeResult(consType.getFieldType(index), getValue().get(index), ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3265/buggy-version/src.org.rascalmpl.interpreter.result.ConstructorResult.java", "BodyUseAPI": ["org.rascalmpl.value.type.Type.getFieldType(int)", "org.rascalmpl.value.type.Type.getFieldIndex(java.lang.String)", "org.rascalmpl.interpreter.result.ResultFactory.makeResult(consType.getFieldType(index),getValue().get(index),org.rascalmpl.interpreter.result.ConstructorResult)"], "Fixed commit": "c7031b3d9f2f38e392e3673303646268d6c43e05", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2016-03-03T13:42:48Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((coursesSubjectProfessorMapping.getProfessor().getImage()) != null) professorWise.setImage(new java.lang.String(coursesSubjectProfessorMapping.getProfessor().getImage()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4974/buggy-version/teachus.src.main.java.com.dmtech.teachus.service.StudentServiceImpl.java", "BodyUseAPI": ["com.dmtech.teachus.model.ProfessorWise.setImage(java.lang.String)", "com.dmtech.teachus.entity.CoursesSubjectProfessorMapping.getProfessor()", "coursesSubjectProfessorMapping.getProfessor().getImage()"], "Fixed commit": "9fa174f55621eec21b1a66d543250f7eb5fb2f25", "Url": "https://api.github.com/repos/ddnyaneshwar/teachus", "Date": "2017-11-01T17:28:03Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dmtech.teachus.dao.IStudentDao.findStudentByid(studentAttendance.getStudentId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((st.getImage()) != null) detail.setImage(new java.lang.String(st.getImage()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4974/buggy-version/teachus.src.main.java.com.dmtech.teachus.service.TeacherServiceImpl.java", "BodyUseAPI": ["com.dmtech.teachus.entity.Student.getImage()", "com.dmtech.teachus.model.StudentDetail.setImage(java.lang.String)"], "Fixed commit": "9fa174f55621eec21b1a66d543250f7eb5fb2f25", "Url": "https://api.github.com/repos/ddnyaneshwar/teachus", "Date": "2017-11-01T17:28:03Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((coursesSubjectStudentMapping.getStudent().getImage()) != null) detail.setImage(new java.lang.String(coursesSubjectStudentMapping.getStudent().getImage()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4974/buggy-version/teachus.src.main.java.com.dmtech.teachus.service.TeacherServiceImpl.java", "BodyUseAPI": ["com.dmtech.teachus.entity.CoursesSubjectStudentMapping.getStudent()", "coursesSubjectStudentMapping.getStudent().getImage()", "com.dmtech.teachus.model.StudentDetail.setImage(java.lang.String)"], "Fixed commit": "9fa174f55621eec21b1a66d543250f7eb5fb2f25", "Url": "https://api.github.com/repos/ddnyaneshwar/teachus", "Date": "2017-11-01T17:28:03Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sec > 0) { time += (\" \" + sec) + \" sec\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1863/buggy-version/src.com.asgj.android.appusage.Utility.Utils.java", "BodyUseAPI": [], "Fixed commit": "8e6a72b5235b4af47d30e1116dbb019cb71766af", "Url": "https://api.github.com/repos/gaurav133/PhoneUse", "Date": "2015-06-08T05:09:30Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hour > 0) { time += hour + \" hr\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1863/buggy-version/src.com.asgj.android.appusage.Utility.Utils.java", "BodyUseAPI": [], "Fixed commit": "8e6a72b5235b4af47d30e1116dbb019cb71766af", "Url": "https://api.github.com/repos/gaurav133/PhoneUse", "Date": "2015-06-08T05:09:30Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lcName) == null) { names = mpc.getThreadScopeNames(); }else names = railo.runtime.type.List.listToStringArray(lcName, ',');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1292/buggy-version/railo-java.railo-core.src.railo.runtime.tag.ThreadTag.java", "BodyUseAPI": [], "Fixed commit": "99271af1b8082dc39c09898f9f5d98bfc6c926ac", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-08-24T18:33:52Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.jgll.grammar.slot.BodyGrammarSlot>.get(int)", "java.util.List<org.jgll.grammar.slot.BodyGrammarSlot>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((thisSlot instanceof org.jgll.grammar.slot.KeywordGrammarSlot) && (otherSlot instanceof org.jgll.grammar.slot.KeywordGrammarSlot)) { if (!(((org.jgll.grammar.slot.KeywordGrammarSlot) (thisSlot)).getKeyword().equals(((org.jgll.grammar.slot.KeywordGrammarSlot) (otherSlot)).getKeyword()))) { return false; } }else if ((thisSlot instanceof org.jgll.grammar.slot.NonterminalGrammarSlot) && (otherSlot instanceof org.jgll.grammar.slot.NonterminalGrammarSlot)) { org.jgll.grammar.slot.NonterminalGrammarSlot thisNt = ((org.jgll.grammar.slot.NonterminalGrammarSlot) (thisSlot)); org.jgll.grammar.slot.NonterminalGrammarSlot otherNt = ((org.jgll.grammar.slot.NonterminalGrammarSlot) (otherSlot)); if ((thisNt.getNonterminal()) != (otherNt.getNonterminal())) { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3483/buggy-version/src.org.jgll.grammar.Alternate.java", "BodyUseAPI": [], "Fixed commit": "de2d66b7434e4045a8626e2966c7a3c8adeaae71", "Url": "https://api.github.com/repos/cwi-swat/jigll", "Date": "2013-08-04T22:52:22Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(window.prefWidthProperty().isBound())) { window.setPrefWidth(((window.getPrefWidth()) + 1)); new java.lang.Thread(() -> { try { java.lang.Thread.sleep(100); } catch (java.lang.Exception e) { } javafx.application.Platform.runLater(() -> { window.setPrefWidth(((window.getPrefWidth()) - 1)); }); }).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8115/buggy-version/Client.src.main.java.cz.cuni.mff.ufal.textan.gui.reportwizard.StateChangedListener.java", "BodyUseAPI": ["javafx.application.Platform.runLater(() -> {\n    window.setPrefWidth(((window.getPrefWidth()) - 1));\n})", "jfxtras.labs.scene.control.window.Window.getPrefWidth()", "window.setPrefWidth(((window.getPrefWidth()) - 1))", "jfxtras.labs.scene.control.window.Window.setPrefWidth(((window.getPrefWidth()) + 1))", "java.lang.Thread.start()", "window.getPrefWidth()"], "Fixed commit": "0e593e15df4f7761b6135fc36cdf263d795e44c0", "Url": "https://api.github.com/repos/PreXident/TextAn", "Date": "2014-05-05T21:29:30Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(unsubs.isEmpty())) { feed.unsubscribe(unsubs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5365/buggy-version/barchart-feed-ddf-client.src.main.java.com.barchart.feed.client.provider.BarchartFeedReceiver.java", "BodyUseAPI": ["com.barchart.feed.client.provider.BarchartFeedReceiver.1.unsubscribe(java.util.Set<com.barchart.feed.ddf.datalink.api.Subscription>)"], "Fixed commit": "05fa3276da473f2d38a3525b152dd3c890be38fb", "Url": "https://api.github.com/repos/barchart/barchart-feed-ddf", "Date": "2013-08-01T15:18:52Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subs.isEmpty()) { return new com.barchart.feed.ddf.datalink.api.DummyFuture(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5365/buggy-version/barchart-feed-ddf-datalink.src.main.java.com.barchart.feed.ddf.datalink.provider.FeedClientDDF.java", "BodyUseAPI": [], "Fixed commit": "05fa3276da473f2d38a3525b152dd3c890be38fb", "Url": "https://api.github.com/repos/barchart/barchart-feed-ddf", "Date": "2013-08-01T15:18:52Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(unsubs.isEmpty())) { feed.unsubscribe(unsubs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5365/buggy-version/barchart-feed-ddf-client.src.main.java.com.barchart.feed.client.provider.BarchartFeedClient.java", "BodyUseAPI": ["com.barchart.feed.ddf.datalink.api.DDF_FeedClient.unsubscribe(java.util.Set<com.barchart.feed.ddf.datalink.api.Subscription>)"], "Fixed commit": "05fa3276da473f2d38a3525b152dd3c890be38fb", "Url": "https://api.github.com/repos/barchart/barchart-feed-ddf", "Date": "2013-08-01T15:18:52Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (structuresNextUpdate == null) { javax.swing.JOptionPane.showMessageDialog(getMainWindow().getFrame(), net.nikr.eve.jeveasset.i18n.GuiFrame.get().updateStructureInvalid(), net.nikr.eve.jeveasset.i18n.GuiFrame.get().updateStructureTitle(), javax.swing.JOptionPane.PLAIN_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/363/buggy-version/src.main.java.net.nikr.eve.jeveasset.Program.java", "BodyUseAPI": [], "Fixed commit": "90abe154002afd62c6faf6b1d748d047e4fe99e1", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-11-04T13:29:05Z"},
{"Line": "=>875", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (time <= 1000) { updatableIn = \"seconds\"; }else if (time < (60 * 1000)) { updatableIn = net.nikr.eve.jeveasset.gui.shared.Formater.milliseconds(time, false, true, false, true); }else { updatableIn = net.nikr.eve.jeveasset.gui.shared.Formater.milliseconds(time, false, true, true, true, true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/363/buggy-version/src.main.java.net.nikr.eve.jeveasset.Program.java", "BodyUseAPI": ["net.nikr.eve.jeveasset.gui.shared.Formater.milliseconds(long,boolean,boolean,boolean,boolean)", "net.nikr.eve.jeveasset.gui.shared.Formater.milliseconds(long,boolean,boolean,boolean,boolean,boolean,boolean)"], "Fixed commit": "90abe154002afd62c6faf6b1d748d047e4fe99e1", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-11-04T13:29:05Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.jruby.ext.krypt.Streams.isConsumed(in))) { throw collector.addAndReturn(org.jruby.ext.krypt.Errors.newASN1Error(runtime, \"Data left that could not be parsed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7056/buggy-version/src.org.jruby.ext.krypt.asn1.RubyTemplate.java", "BodyUseAPI": [], "Fixed commit": "474b9ec0ff477eec5139e0e5d4fd973fe120f918", "Url": "https://api.github.com/repos/emboss/krypt-core-java", "Date": "2012-03-14T14:58:17Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matching.n.n.value) != (newD.value)) { newD.checkAfterSubstitute(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/814/buggy-version/src.info.sequitur.algorithm.Symbol.java", "BodyUseAPI": ["info.sequitur.algorithm.Symbol.checkAfterSubstitute(info.sequitur.algorithm.Rule)"], "Fixed commit": "6f5caaaabe70de1f5d87aaadf0472bdb5ace20e1", "Url": "https://api.github.com/repos/sebkur/sequitur", "Date": "2014-06-02T17:09:08Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<de.andreasgiemza.mangamanager.data.Subscription>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(subscription.getChapters().isEmpty())) { return subscription.getChapters().get(0).getTitle(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3120/buggy-version/src.main.java.de.andreasgiemza.mangamanager.SubscriptionsTableModel.java", "BodyUseAPI": ["subscription.getChapters().get(0).getTitle()", "subscription.getChapters().get(int)", "de.andreasgiemza.mangamanager.data.Subscription.getChapters()"], "Fixed commit": "01bcb55e83272e109434debd8349af13e0f28660", "Url": "https://api.github.com/repos/hurik/MangaManagerAndDownloader", "Date": "2015-08-15T17:38:07Z"},
{"Line": "=>2648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.properties) == (EMPTY_PROPERTIES)) { this.properties = new org.infinispan.util.TypedProperties(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2739/buggy-version/core.src.main.java.org.infinispan.config.Configuration.java", "BodyUseAPI": [], "Fixed commit": "fdbf9678f1534060900632550a6fad8860ab270c", "Url": "https://api.github.com/repos/Sanne/infinispan", "Date": "2011-03-29T12:24:19Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((getMiu()) - 2)) { msgSend.setLastRun(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3998/buggy-version/src.parallel.ParallelTwoD.java", "BodyUseAPI": [], "Fixed commit": "0af0921a4bcf8b533ed5240ca9c775d3f5b43eef", "Url": "https://api.github.com/repos/lavalake/mpi", "Date": "2014-12-06T01:37:06Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.xabber.android.data.xaccount.XabberAccountManager.getInstance().getAccount()) != null) { if (accountItem.isSyncNotAllowed()) { android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this); builder.setMessage(R.string.sync_not_allowed_summary).setTitle(R.string.sync_status_not_allowed).setPositiveButton(R.string.ok, null); android.app.AlertDialog dialog = builder.create(); dialog.show(); }else startActivity(com.xabber.android.ui.activity.AccountSyncActivity.createIntent(this, account)); }else startActivity(com.xabber.android.ui.activity.TutorialActivity.createIntent(this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2128/buggy-version/xabber.src.main.java.com.xabber.android.ui.activity.AccountActivity.java", "BodyUseAPI": [], "Fixed commit": "f10d888299585ecdf93b86075ca09052b2bf6aea", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2017-09-25T08:38:24Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sybila.parasim.application.ParasimOptions.create(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((options.getConfigFile()) != null) { org.sybila.parasim.application.Main.LOGGER.info((\"using configuration file: \" + (options.getConfigFile()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3568/buggy-version/application.src.main.java.org.sybila.parasim.application.Main.java", "BodyUseAPI": ["org.sybila.parasim.application.ParasimOptions.getConfigFile()", "org.slf4j.Logger.info((\"using configuration file: \" + (options.getConfigFile())))"], "Fixed commit": "fbd6435d31c596a8ee4fab855296372099e045a4", "Url": "https://api.github.com/repos/sybila/parasim", "Date": "2013-03-09T13:05:09Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentCarNum) < 0) { currentCarNum += allCars.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6789/buggy-version/app.src.main.java.com.hintersteininger.ralf.openwheels.CustomizationActivity.java", "BodyUseAPI": [], "Fixed commit": "f19b78e536a7bc0f099b881419211f56b22efbcd", "Url": "https://api.github.com/repos/rhintersteininger/open-wheels", "Date": "2016-06-23T10:18:55Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Connection.connectionSocket) != null) { Connection.connectionSocket.close(); Connection.connectionSocket = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6789/buggy-version/app.src.main.java.com.hintersteininger.ralf.openwheels.LobbyActivity.java", "BodyUseAPI": [], "Fixed commit": "f19b78e536a7bc0f099b881419211f56b22efbcd", "Url": "https://api.github.com/repos/rhintersteininger/open-wheels", "Date": "2016-06-23T10:18:55Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.editMode) { lightDistanceTarget = 720; main.setUniform1f(\"ligthDist\", lightDistance); main.setUniform2f(\"ligthPos\", player.pos.copy().add(16, 32)); }else if ((player.grab) != null) { lightDistanceTarget = 240; main.setUniform1f(\"ligthDist\", lightDistance); main.setUniform2f(\"ligthPos\", player.pos.copy().add(16, 32)); }else if ((player.getInv().isItem(player.selectedSlot)) && ((player.getInv().getItem(player.selectedSlot)) instanceof fr.ld36.items.ItemFlashlight)) { lightDistanceTarget = 320; main.setUniform1f(\"ligthDist\", lightDistance); main.setUniform2f(\"ligthPos\", player.getLightPos()); }else { lightDistanceTarget = 100; main.setUniform1f(\"ligthDist\", lightDistance); main.setUniform2f(\"ligthPos\", player.pos.copy().add(16, 32)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2758/buggy-version/src.fr.ld36.Game.java", "BodyUseAPI": ["player.pos.copy().add(int,int)", "fr.mimus.jbasicgl.graphics.Shaders.setUniform2f(java.lang.String,player.pos.copy().add(16, 32))", "fr.mimus.jbasicgl.graphics.Shaders.setUniform2f(java.lang.String,player.getLightPos())", "player.pos.copy()", "fr.mimus.jbasicgl.graphics.Shaders.setUniform2f(java.lang.String,player.pos.copy().add(16, 32))", "player.pos.copy()", "player.pos.copy().add(int,int)", "fr.ld36.EntityPlayer.getLightPos()", "fr.mimus.jbasicgl.graphics.Shaders.setUniform2f(java.lang.String,player.pos.copy().add(16, 32))", "player.pos.copy().add(int,int)", "player.pos.copy()", "fr.ld36.EntityPlayer.getInv()", "player.getInv().getItem(player.selectedSlot)", "fr.ld36.EntityPlayer.getInv()", "player.getInv().isItem(player.selectedSlot)"], "Fixed commit": "20956c4a264661afd27bf02f36531392ee8dfd26", "Url": "https://api.github.com/repos/mimusangel/Ludum-Dare-36", "Date": "2016-08-29T16:54:53Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fd == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7531/buggy-version/FileSystem.java", "BodyUseAPI": [], "Fixed commit": "201325204d5916e34b5b55b24219e6cbd4c0add0", "Url": "https://api.github.com/repos/ZekeSnider/Java-File-System", "Date": "2015-03-17T08:01:33Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((attacked.getLocation().distance(attacked.getWorld().getSpawnLocation())) < 50) { event.setCancelled(true); me.tobi.acmain.ArdaCraft.getCraftLogger().logToChat(Level.WARN, \"Du kannst am Spawn nicht k\ufffdmpfen!\", damager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5873/buggy-version/src.me.tobi.acmain.events.EvtHandler.java", "BodyUseAPI": [], "Fixed commit": "cb852dea4436581d711941fad7768bdc049d9b55", "Url": "https://api.github.com/repos/tobiasnagel/ArdaCraftMain", "Date": "2015-03-23T19:29:35Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ProviderType.COMMUNITY_HEALTH_CARE_WORKER.value().equals(type)) { personalInfoFormSettings.addSetting(\"requireNPI\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8541/buggy-version/pesp-was8.5.cms-business-process.src.main.java.gov.medicaid.services.impl.PresentationServiceBean.java", "BodyUseAPI": [], "Fixed commit": "3e0b754cb229602f807f8fc63a349b571bd6e0bc", "Url": "https://api.github.com/repos/nasa/coeci-cms-mpsp", "Date": "2013-10-03T09:18:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((component.getStatus()) == (-1)) stm.setInt((param++), 0); else stm.setInt((param++), component.getStatus());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7441/buggy-version/src.java.DAL.ComponentDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.setInt(int,component.getStatus())", "DTO.ComponentDTO.getStatus()"], "Fixed commit": "d8fc1595c45f6d37ef480e16e25472e05727877e", "Url": "https://api.github.com/repos/Quayed/komponentMis", "Date": "2016-04-26T06:36:47Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scripts.utils.RSAreaUtil.getAreaBoundary(org.tribot.api2007.types.RSTile,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fishing.contains(scripts.Player.getPosition()))) { scripts.Walking.blindWalkTo(FISHING_SPOT); org.tribot.api.General.sleep(1000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5531/buggy-version/src.scripts.Fishing.java", "BodyUseAPI": [], "Fixed commit": "4773cb236b3f15e1652f1a3f2650e9704e3095f7", "Url": "https://api.github.com/repos/jonhenry63/ShitFisher", "Date": "2017-11-05T23:50:32Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actionId == (getResources().getIdentifier(\"action_nuke_db\", \"id\", getPackageName()))) { getMagisterApplication().getDataStore().getDB().nuke(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4699/buggy-version/app.src.main.java.eu.magisterapp.magisterapp.Main.java", "BodyUseAPI": [], "Fixed commit": "435043c9b2d1257f1a6617eada72ac72a3c3286f", "Url": "https://api.github.com/repos/Magister-Android/Magister-Android", "Date": "2016-02-07T22:25:06Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value > 0) { modifyAttribute(Attribute.HP, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9062/buggy-version/src.main.java.net.demilich.metastone.game.entities.Actor.java", "BodyUseAPI": ["net.demilich.metastone.game.entities.Actor.modifyAttribute(Attribute.HP,int)"], "Fixed commit": "253dde188b226191ca01810937ad7ccab50446a6", "Url": "https://api.github.com/repos/webadict/metastone", "Date": "2015-10-24T15:53:08Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHp()) > (getMaxHp())) { setHp(getMaxHp()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9062/buggy-version/src.main.java.net.demilich.metastone.game.entities.Actor.java", "BodyUseAPI": [], "Fixed commit": "253dde188b226191ca01810937ad7ccab50446a6", "Url": "https://api.github.com/repos/webadict/metastone", "Date": "2015-10-24T15:53:08Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHp()) > (getMaxHp())) { setHp(getMaxHp()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9062/buggy-version/src.main.java.net.demilich.metastone.game.entities.Actor.java", "BodyUseAPI": [], "Fixed commit": "253dde188b226191ca01810937ad7ccab50446a6", "Url": "https://api.github.com/repos/webadict/metastone", "Date": "2015-10-24T15:53:08Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value > 0) { modifyAttribute(Attribute.HP, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/9062/buggy-version/src.main.java.net.demilich.metastone.game.entities.Actor.java", "BodyUseAPI": ["net.demilich.metastone.game.entities.Actor.modifyAttribute(Attribute.HP,int)"], "Fixed commit": "253dde188b226191ca01810937ad7ccab50446a6", "Url": "https://api.github.com/repos/webadict/metastone", "Date": "2015-10-24T15:53:08Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener != null) { listener.onItemClick(activity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5634/buggy-version/app.src.main.java.it.polito.mad.countonme.lists.SharingActivitiesAdapter.java", "BodyUseAPI": ["it.polito.mad.countonme.interfaces.OnListItemClickListener.onItemClick(it.polito.mad.countonme.models.SharingActivity)"], "Fixed commit": "8319ecdcb0b938e2acfc9114ce5a594115eb6408", "Url": "https://api.github.com/repos/madgroup17/countonme", "Date": "2017-04-08T12:00:38Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener != null) { listener.onItemClick(expense); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5634/buggy-version/app.src.main.java.it.polito.mad.countonme.lists.ExpenseAdapter.java", "BodyUseAPI": ["it.polito.mad.countonme.interfaces.OnListItemClickListener.onItemClick(it.polito.mad.countonme.models.Expense)"], "Fixed commit": "8319ecdcb0b938e2acfc9114ce5a594115eb6408", "Url": "https://api.github.com/repos/madgroup17/countonme", "Date": "2017-04-08T12:00:38Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(iterator.hasNext())) { while (iterator.hasPrevious()) { iterator.previous(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4351/buggy-version/src.com.SkyIsland.RPG.battle.TurnControl.java", "BodyUseAPI": ["java.util.ListIterator<com.SkyIsland.RPG.battle.participants.Player>.hasPrevious()", "java.util.ListIterator<com.SkyIsland.RPG.battle.participants.Player>.previous()"], "Fixed commit": "6da0db2b13a7a967374aa8b2b9df8baae4c54b41", "Url": "https://api.github.com/repos/Dove-Bren/Game", "Date": "2015-01-09T07:48:19Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((errorId == null) && (errorCode == null)) { matchedEvent = event; break; }else if ((matchedEvent == null) || ((org.apache.commons.lang3.StringUtils.isNotEmpty(errorCode)) && (org.apache.commons.lang3.StringUtils.isEmpty(matchedEventErrorCode)))) { matchedEvent = event; matchedEventErrorCode = errorCode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6051/buggy-version/modules.activiti-engine.src.main.java.org.activiti.engine.impl.bpmn.helper.ErrorPropagation.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.isNotEmpty(java.lang.String)"], "Fixed commit": "dc07a3d0ce338b2b3c587036f62ddc3293b9aacd", "Url": "https://api.github.com/repos/gotemkr/Activiti", "Date": "2017-06-08T06:53:41Z"},
{"Line": "=>757", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t1 == t2) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7308/buggy-version/reformulation-core.src.main.java.org.semanticweb.ontop.owlrefplatform.core.basicoperations.Unifier.java", "BodyUseAPI": [], "Fixed commit": "ee5f6198fee94c2d22e8e374827f6e2159a0e5ca", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2014-10-08T15:10:46Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (spoutEnabled) gui.update(playa);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1047/buggy-version/src.littlegruz.marioworld.MarioMain.java", "BodyUseAPI": [], "Fixed commit": "0fdc83e388a1f567ecb5f7e802a93de95d188be0", "Url": "https://api.github.com/repos/LittleGruz/Mario-WorldCraft", "Date": "2012-05-11T04:21:16Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tlDocument.get()) == null) { tlDocument.set(document.copy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1263/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.sequence.OSequence.java", "BodyUseAPI": ["java.lang.ThreadLocal<com.orientechnologies.orient.core.record.impl.ODocument>.set(document.copy())"], "Fixed commit": "30ff9985cfca4f3e9a7af445fe2d2c525bdac532", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-05-19T17:45:00Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tu_bs.cs.isf.mbse.cvclipse.DateItem.getEnd()", "de.tu_bs.cs.isf.mbse.cvclipse.DateItem.getBegin()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((startDate.getMonth()) == (endDate.getMonth())) { sameMonth = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6587/buggy-version/trunk.de.tu_bs.cs.isf.mbse.cvclipse.validation.src.de.tu_bs.cs.isf.mbse.cvclipse.validation.StartEndDateConsistent.java", "BodyUseAPI": [], "Fixed commit": "3d75be0d9af72eac8cd16a3fe28628a982ea8cd5", "Url": "https://api.github.com/repos/SeniorSpielbergo/CVclipse", "Date": "2014-01-14T18:45:53Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tu_bs.cs.isf.mbse.cvclipse.DateItem.getEnd()", "de.tu_bs.cs.isf.mbse.cvclipse.DateItem.getBegin()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((startDate.getYear()) == (endDate.getYear())) { sameYear = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6587/buggy-version/trunk.de.tu_bs.cs.isf.mbse.cvclipse.validation.src.de.tu_bs.cs.isf.mbse.cvclipse.validation.StartEndDateConsistent.java", "BodyUseAPI": [], "Fixed commit": "3d75be0d9af72eac8cd16a3fe28628a982ea8cd5", "Url": "https://api.github.com/repos/SeniorSpielbergo/CVclipse", "Date": "2014-01-14T18:45:53Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backend.CommandParser.getDate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (endDate == null) { java.lang.String errorMsg = \"Invalid End Date\"; return initInvalidCommand(errorMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6239/buggy-version/src.backend.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "0f44baf9648d86516904bebd601204c1433138a9", "Url": "https://api.github.com/repos/cs2103aug2015-w15-2j/WhatToDo", "Date": "2015-11-01T18:29:15Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backend.CommandParser.getDate(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (startDate == null) { java.lang.String errorMsg = \"Invalid Start Date\"; return initInvalidCommand(errorMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6239/buggy-version/src.backend.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "0f44baf9648d86516904bebd601204c1433138a9", "Url": "https://api.github.com/repos/cs2103aug2015-w15-2j/WhatToDo", "Date": "2015-11-01T18:29:15Z"},
{"Line": "=>1498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastInfo.gob.attr) != null) { g.text((\"Gob Attrs: \" + (lastInfo.gob.attr.size())), new haven.Coord(x, (y += offsetY))); for (java.util.Map.Entry<java.lang.Class<? extends haven.GAttrib>, haven.GAttrib> entry : lastInfo.gob.attr.entrySet()) { g.text((((java.lang.String.valueOf(entry.getValue().getClass())) + \": \") + (java.lang.String.valueOf(entry.getValue()))), new haven.Coord((x + 30), (y += offsetY))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2157/buggy-version/src.haven.MapView.java", "BodyUseAPI": ["lastInfo.gob.attr.size()", "haven.GOut.text((\"Gob Attrs: \" + (lastInfo.gob.attr.size())),haven.Coord)", "lastInfo.gob.attr.entrySet()"], "Fixed commit": "dcc86a780a83fb2d63943831a196d0d34ee58799", "Url": "https://api.github.com/repos/APXEOLOG/hafen-client-shovel", "Date": "2015-09-02T17:29:58Z"},
{"Line": "=>1504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastInfo.gob.ols) != null) { g.text((\"Gob Overlays: \" + (lastInfo.gob.ols.size())), new haven.Coord(x, (y += offsetY))); for (haven.Gob.Overlay overlay : lastInfo.gob.ols) { g.text(java.lang.String.valueOf(overlay), new haven.Coord((x + 30), (y += offsetY))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2157/buggy-version/src.haven.MapView.java", "BodyUseAPI": ["lastInfo.gob.ols.size()", "haven.GOut.text((\"Gob Overlays: \" + (lastInfo.gob.ols.size())),haven.Coord)"], "Fixed commit": "dcc86a780a83fb2d63943831a196d0d34ee58799", "Url": "https://api.github.com/repos/APXEOLOG/hafen-client-shovel", "Date": "2015-09-02T17:29:58Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras().getSerializable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (flashModes == null) { flashModes = new java.util.ArrayList<com.commonsware.cwac.cam2.FlashMode>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2683/buggy-version/cam2.src.main.java.com.commonsware.cwac.cam2.AbstractCameraActivity.java", "BodyUseAPI": [], "Fixed commit": "49a72ecaa4d8ceabced3a1cb396b939deb1f36ce", "Url": "https://api.github.com/repos/rabl-dev/cwac-cam2", "Date": "2015-11-22T14:06:39Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 19) { alarmManager.setExact(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), pendingIntent); }else { alarmManager.set(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), pendingIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8376/buggy-version/src.com.firebirdberlin.nightdream.PowerConnectionReceiver.java", "BodyUseAPI": [], "Fixed commit": "e4e472ccc3eae32047121e91d95316a3298a583b", "Url": "https://api.github.com/repos/firebirdberlin/nightdream", "Date": "2016-03-29T08:08:52Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 19) { alarmManager.setExact(AlarmManager.RTC_WAKEUP, settings.nextAlarmTime, pI); }else { alarmManager.set(AlarmManager.RTC_WAKEUP, settings.nextAlarmTime, pI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8376/buggy-version/src.com.firebirdberlin.nightdream.AlarmClock.java", "BodyUseAPI": [], "Fixed commit": "e4e472ccc3eae32047121e91d95316a3298a583b", "Url": "https://api.github.com/repos/firebirdberlin/nightdream", "Date": "2016-03-29T08:08:52Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 19) { com.firebirdberlin.nightdream.AlarmClock.am.setExact(AlarmManager.RTC_WAKEUP, alarmTime.getMillis(), pI); }else { com.firebirdberlin.nightdream.AlarmClock.am.set(AlarmManager.RTC_WAKEUP, alarmTime.getMillis(), pI); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8376/buggy-version/src.com.firebirdberlin.nightdream.AlarmClock.java", "BodyUseAPI": [], "Fixed commit": "e4e472ccc3eae32047121e91d95316a3298a583b", "Url": "https://api.github.com/repos/firebirdberlin/nightdream", "Date": "2016-03-29T08:08:52Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 19) { alarmManager.setExact(AlarmManager.RTC, calendar.getTimeInMillis(), pendingIntent); }else { alarmManager.set(AlarmManager.RTC, calendar.getTimeInMillis(), pendingIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8376/buggy-version/src.com.firebirdberlin.nightdream.NightDreamActivity.java", "BodyUseAPI": [], "Fixed commit": "e4e472ccc3eae32047121e91d95316a3298a583b", "Url": "https://api.github.com/repos/firebirdberlin/nightdream", "Date": "2016-03-29T08:08:52Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tp.getEnd().equals(start)) || (end.equals(tp.getStart()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1435/buggy-version/src.Kubaner.Logic.TimePeriod.java", "BodyUseAPI": [], "Fixed commit": "ed5ed29f3dd0f00c5eb677272df18fda462326ff", "Url": "https://api.github.com/repos/Freakmiko/Kubaner", "Date": "2015-06-24T16:53:40Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (call.isCanceled()) { android.util.Log.i(\"simplifyokhttp\", \"user finish Act/Fra/Dialog cancel the request\"); }else { if (exception instanceof java.net.SocketException) { httpCallBack.onError(ErrorCode.SOCKET_EXCEPTION, \"\u8fde\u63a5\u670d\u52a1\u5668\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5\uff01\", call, exception); }else if (exception instanceof java.io.InterruptedIOException) { httpCallBack.onError(ErrorCode.INTERRUPTED_IOEXCEPTION, \"\u8bf7\u6c42\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5\uff01\", call, exception); }else { httpCallBack.onError(ErrorCode.OTHER_IOEXCEPTION, \"\u8fde\u63a5\u670d\u52a1\u5668\u5931\u8d25\uff0c\u8bf7\u91cd\u8bd5\uff01\", call, exception); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5504/buggy-version/simplifyokhttp.src.main.java.com.dreamliner.simplifyokhttp.OkHttpUtils.java", "BodyUseAPI": ["com.dreamliner.simplifyokhttp.callback.HttpCallBack.onError(ErrorCode.OTHER_IOEXCEPTION,java.lang.String,okhttp3.Call,java.lang.Exception)", "com.dreamliner.simplifyokhttp.callback.HttpCallBack.onError(ErrorCode.INTERRUPTED_IOEXCEPTION,java.lang.String,okhttp3.Call,java.lang.Exception)", "com.dreamliner.simplifyokhttp.callback.HttpCallBack.onError(ErrorCode.SOCKET_EXCEPTION,java.lang.String,okhttp3.Call,java.lang.Exception)"], "Fixed commit": "74def7cb9df1771b8711c177a94ec0e4abe2a5de", "Url": "https://api.github.com/repos/chenzj-king/SimplifyNet", "Date": "2016-07-18T08:38:06Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkHashes) { au.edu.uq.cmm.paul.grabber.Analyser.LOG.debug((\"source hash - \" + (au.edu.uq.cmm.paul.grabber.HashUtils.fileHash(source)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7230/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.grabber.Analyser.java", "BodyUseAPI": [], "Fixed commit": "20a063e8b6c2566644775128b6d0179a12ade97a", "Url": "https://api.github.com/repos/crawley/CMM-data-grabber", "Date": "2012-07-26T04:25:16Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkHashes) { au.edu.uq.cmm.paul.grabber.Analyser.LOG.debug((\"captured hash - \" + (au.edu.uq.cmm.paul.grabber.HashUtils.fileHash(file)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7230/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.grabber.Analyser.java", "BodyUseAPI": [], "Fixed commit": "20a063e8b6c2566644775128b6d0179a12ade97a", "Url": "https://api.github.com/repos/crawley/CMM-data-grabber", "Date": "2012-07-26T04:25:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((valueFilter) != null) { if (defaultValue instanceof java.lang.String) { try { this.defaultValue = filter.parse(((java.lang.String) (defaultValue))); } catch (com.tmarsteel.jcli.validation.ValidationException ex) { this.defaultValue = defaultValue; } }else { this.defaultValue = defaultValue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2182/buggy-version/src.com.tmarsteel.jcli.Argument.java", "BodyUseAPI": [], "Fixed commit": "ba23f483cc18397cd40f5da78cc73fa54ad37cec", "Url": "https://api.github.com/repos/tmarsteel/jcli", "Date": "2015-09-15T16:28:05Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defV instanceof java.lang.String) { try { this.defaultValue = this.parse(((java.lang.String) (defV))); } catch (com.tmarsteel.jcli.validation.ValidationException ex) { this.defaultValue = defV; } }else { this.defaultValue = defV; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2182/buggy-version/src.com.tmarsteel.jcli.Option.java", "BodyUseAPI": [], "Fixed commit": "ba23f483cc18397cd40f5da78cc73fa54ad37cec", "Url": "https://api.github.com/repos/tmarsteel/jcli", "Date": "2015-09-15T16:28:05Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getJspContext().getAttribute(com.stratelia.webactiv.util.viewGenerator.html.MAIN_SESSION_CONTROLLER_ATT,PageContext.SESSION_SCOPE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (session != null) { return session.getUserId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8096/buggy-version/web-core.src.main.java.com.stratelia.webactiv.util.viewGenerator.html.UserNameTag.java", "BodyUseAPI": ["com.stratelia.silverpeas.peasCore.MainSessionController.getUserId()"], "Fixed commit": "51e0476b7e967518b5f7d41fffe2940c4267af86", "Url": "https://api.github.com/repos/NicolasEYSSERIC/Silverpeas-Core", "Date": "2012-09-13T15:25:27Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isZoom()) { container = com.stratelia.webactiv.util.viewGenerator.html.JavascriptPluginInclusion.includeUserZoom(new org.apache.ecs.ElementContainer()); }else { container = new org.apache.ecs.ElementContainer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8096/buggy-version/web-core.src.main.java.com.stratelia.webactiv.util.viewGenerator.html.UserNameTag.java", "BodyUseAPI": [], "Fixed commit": "51e0476b7e967518b5f7d41fffe2940c4267af86", "Url": "https://api.github.com/repos/NicolasEYSSERIC/Silverpeas-Core", "Date": "2012-09-13T15:25:27Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.silverpeas.util.StringUtil.isDefined(currentUserId)) { if ((!(user.getId().equals(currentUserId))) && (!(com.stratelia.webactiv.beans.admin.UserDetail.isAnonymousUser(currentUserId)))) { userName.setClass(\"userToZoom\"); userName.addAttribute(\"rel\", user.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8096/buggy-version/web-core.src.main.java.com.stratelia.webactiv.util.viewGenerator.html.UserNameGenerator.java", "BodyUseAPI": ["user.getId().equals(java.lang.String)", "com.stratelia.webactiv.beans.admin.UserDetail.isAnonymousUser(java.lang.String)"], "Fixed commit": "51e0476b7e967518b5f7d41fffe2940c4267af86", "Url": "https://api.github.com/repos/NicolasEYSSERIC/Silverpeas-Core", "Date": "2012-09-13T15:25:27Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { tv.setTextAlignment(View.TEXT_ALIGNMENT_CENTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5448/buggy-version/app.src.main.java.scodun.com.a06soccer.activitys.MatchUpdateActivity.java", "BodyUseAPI": [], "Fixed commit": "4534ddd4a1258dc73f3c17d71ca5b7de99c0d376", "Url": "https://api.github.com/repos/Scodun/06Soccer", "Date": "2017-06-03T21:52:03Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bsg.upm.api.check.ServCheck.getLatestTaskByObjIdAndActionType(serv.getId(),TaskDictConstants.ACTION_TYPE_SCALE_UP)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(TaskDictConstants.STATUS_SCALE_UP_FAILURE.equals(scaleUpTask.getStatus()))) && (!(TaskDictConstants.STATUS_UNKNOWN.equals(scaleUpTask.getStatus())))) { chkRS.setStatus(HttpStatus.SC_BAD_REQUEST); chkRS.setErrorMsg(\"\u521b\u5efa/\u6269\u5bb9/\u7248\u672c\u53d8\u66f4\u5931\u8d25/\u672a\u77e5\u65f6\uff0c\u624d\u80fd\u91cd\u5efa\"); return chkRS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5518/buggy-version/src.main.java.com.bsg.upm.api.check.ServCheck.java", "BodyUseAPI": [], "Fixed commit": "9820ff84be8fd4dcb4b1f642b7e7ac55f43bfd3e", "Url": "https://api.github.com/repos/upmio/upm_api", "Date": "2017-11-30T11:29:40Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.isBoolean()) || (ov.isBoolean())) { return (this.isBoolean()) && (this.asBoolean().equals(ov.asBoolean())); }else if ((this.isString()) || (ov.isString())) { return (this.isString()) && (this.asString().equals(ov.asString())); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5483/buggy-version/ro.src.main.java.lu.william.comm.uv.UVValue.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "lu.william.comm.uv.UVValue.asBoolean()", "lu.william.comm.uv.UVValue.isString()", "java.lang.Boolean.equals(java.lang.Boolean)", "lu.william.comm.uv.UVValue.asString()"], "Fixed commit": "1b81e0f76cfe375802f9cb531862c5acb8e20df5", "Url": "https://api.github.com/repos/siwenyan/ro2", "Date": "2017-08-28T03:30:20Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ex.getMessage()) != null) { this.message = ex.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3549/buggy-version/src.org.futurepages.exceptions.UserException.java", "BodyUseAPI": [], "Fixed commit": "76cc6b53b46bc0359406866c7e643c76ea52ada7", "Url": "https://api.github.com/repos/futurepages/4", "Date": "2017-10-31T20:36:16Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (items == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6167/buggy-version/mydlp-ui-remoting-blazeds.src.main.java.com.mydlp.ui.remoting.blazeds.GenericBRSImpl.java", "BodyUseAPI": [], "Fixed commit": "43817bc6c0b2ee6e4abea8e9c39f4a97e635669e", "Url": "https://api.github.com/repos/mydlp/mydlp-ui", "Date": "2012-07-24T11:20:43Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((end.getMonthValue()) == 1) && ((end.getDayOfMonth()) == 1)) { endDate = end.withYear(((end.getYear()) - 1)).withMonth(12).withDayOfMonth(31).withHour(23).withMinute(59); currentStartDate = start; currentEndDate = end.withYear(((end.getYear()) - 1)).withMonth(12).withDayOfMonth(31).withHour(23).withMinute(59); }else { endDate = end; currentStartDate = start; currentEndDate = end; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4544/buggy-version/src.ui.timelineVisuals.VisualTimeline.java", "BodyUseAPI": ["java.time.LocalDateTime.withYear(int)", "java.time.LocalDateTime.withHour(int)", "java.time.LocalDateTime.getYear()", "java.time.LocalDateTime.withYear(int)", "java.time.LocalDateTime.getYear()", "java.time.LocalDateTime.withMonth(int)", "java.time.LocalDateTime.withDayOfMonth(int)", "java.time.LocalDateTime.withMinute(int)", "java.time.LocalDateTime.withMinute(int)", "java.time.LocalDateTime.withMonth(int)", "java.time.LocalDateTime.withHour(int)", "java.time.LocalDateTime.withDayOfMonth(int)"], "Fixed commit": "74ae708f545f2e05d69658aeb8bbc90a415069d7", "Url": "https://api.github.com/repos/Group7-1DV508/1DV508-group7", "Date": "2017-05-16T08:52:29Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == obj) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7744/buggy-version/src.com.mysql.jdbc.ConnectionImpl.java", "BodyUseAPI": [], "Fixed commit": "650de8b1aa808f0224b8857335fa2702d951f7e6", "Url": "https://api.github.com/repos/mysql/mysql-connector-j", "Date": "2017-11-14T12:03:05Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((words.length) == 1) { if (!(words[0].equals(\"\"))) word += words.length; }else { word += words.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4476/buggy-version/ConstitutionReader.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "27f7f6eec36d45fa6d610ea6413ccc7b27a2b9e2", "Url": "https://api.github.com/repos/MattRosenthal/Gopro-Intern-Assignment", "Date": "2015-04-07T04:36:24Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.compassresearch.ast.actions.AAlphabetisedParallelismParallelAction.getLeftNamesetExpression()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (leftNameSet != null) leftNameSet.apply(nameSetChecker, question);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6927/buggy-version/core.typechecker.src.main.java.eu.compassresearch.core.typechecker.visitors.CmlActionTypeChecker.java", "BodyUseAPI": ["eu.compassresearch.ast.expressions.PVarsetExpression.apply(org.overture.ast.analysis.QuestionAnswerAdaptor<org.overture.typechecker.TypeCheckInfo, org.overture.ast.types.PType>,org.overture.typechecker.TypeCheckInfo)"], "Fixed commit": "204b46f9c0ce8b694e03bcdfeb9a2a0fb448e2d8", "Url": "https://api.github.com/repos/symphonytool/symphony", "Date": "2013-12-17T10:07:53Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.compassresearch.ast.actions.AAlphabetisedParallelismParallelAction.getLeftNamesetExpression()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (rightNameSet != null) rightNameSet.apply(nameSetChecker, question);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/6927/buggy-version/core.typechecker.src.main.java.eu.compassresearch.core.typechecker.visitors.CmlActionTypeChecker.java", "BodyUseAPI": ["eu.compassresearch.ast.expressions.PVarsetExpression.apply(org.overture.ast.analysis.QuestionAnswerAdaptor<org.overture.typechecker.TypeCheckInfo, org.overture.ast.types.PType>,org.overture.typechecker.TypeCheckInfo)"], "Fixed commit": "204b46f9c0ce8b694e03bcdfeb9a2a0fb448e2d8", "Url": "https://api.github.com/repos/symphonytool/symphony", "Date": "2013-12-17T10:07:53Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled) { save.getIcon().setAlpha(255); }else { save.getIcon().setAlpha(130); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1369/buggy-version/src.ca.tannerrutgers.Warpy.activities.WarpyActivity.java", "BodyUseAPI": [], "Fixed commit": "decdd1f3ca20cf2811a8899aee7c3ad29b3ff361", "Url": "https://api.github.com/repos/tannner/Warpy", "Date": "2014-02-17T09:20:19Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(this).getInt(SettingsActivity.KEY_PREF_UNDO_SIZE,UndoSizePreference.DEFAULT_VALUE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (undoSize != (mActionStack.capacity())) { mActionStack.resize(undoSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1369/buggy-version/src.ca.tannerrutgers.Warpy.activities.WarpyActivity.java", "BodyUseAPI": ["ca.tannerrutgers.Warpy.utils.WarpActionStack<android.net.Uri>.resize(int)"], "Fixed commit": "decdd1f3ca20cf2811a8899aee7c3ad29b3ff361", "Url": "https://api.github.com/repos/tannner/Warpy", "Date": "2014-02-17T09:20:19Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled) { undo.getIcon().setAlpha(255); }else { undo.getIcon().setAlpha(130); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1369/buggy-version/src.ca.tannerrutgers.Warpy.activities.WarpyActivity.java", "BodyUseAPI": [], "Fixed commit": "decdd1f3ca20cf2811a8899aee7c3ad29b3ff361", "Url": "https://api.github.com/repos/tannner/Warpy", "Date": "2014-02-17T09:20:19Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((t.getValue()) - (fee_)) > 0) { homework2.Transaction newT = new homework2.Transaction(t.getDest(), java.lang.Math.max(((t.getValue()) - (fee_)), 0)); transactionList_.add(newT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7323/buggy-version/Participant.java", "BodyUseAPI": ["java.lang.Math.max(((t.getValue()) - (fee_)),int)", "homework2.Transaction.getDest()", "homework2.Transaction.getValue()"], "Fixed commit": "d175d4d985497d7c3a7ea3e9fb0dbd68f4134357", "Url": "https://api.github.com/repos/shunithaviv/oop_hw2", "Date": "2017-12-27T18:04:54Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getGui()) != null) && (!(playerIn.isSneaking()))) { getGui().open(playerIn, pos, worldIn); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/8372/buggy-version/src.main.java.reborncore.common.blocks.BlockMachineBase.java", "BodyUseAPI": ["reborncore.api.tile.IMachineGuiHandler.open(net.minecraft.entity.player.EntityPlayer,net.minecraft.util.math.BlockPos,net.minecraft.world.World)"], "Fixed commit": "f94116e6c445c6d0cd692aab18c114b3744110a7", "Url": "https://api.github.com/repos/drcrazy/RebornCore", "Date": "2017-09-06T12:46:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dispatcherSupplier.toString().startsWith(\"Dummy proxy\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5193/buggy-version/src.main.java.nebula.plugin.metrics.collector.LoggingCollector.java", "BodyUseAPI": [], "Fixed commit": "b87a6f8185bfc045de4639abec6d3be67ba3abe8", "Url": "https://api.github.com/repos/nebula-plugins/gradle-metrics-plugin", "Date": "2015-11-26T00:06:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.brotherlogic.mdb.record.GetRecords.create().getRecord(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((r.getChildren().size()) == 0) records.add(r);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2253/buggy-version/src.main.java.uk.co.brotherlogic.mdb.record.RecordUtils.java", "BodyUseAPI": ["java.util.List<uk.co.brotherlogic.mdb.record.Record>.add(uk.co.brotherlogic.mdb.record.Record)"], "Fixed commit": "4220a9668f7b497886340e87043edb4915943ad5", "Url": "https://api.github.com/repos/brotherlogic/mdbcore", "Date": "2011-02-23T21:14:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (context.getFilePaths().contains(avi.getAbsolutePath())) { throw new java.lang.Exception((\"The output path is the same as the input path! \" + avi)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/2307/buggy-version/org.dawnsci.conversion.src.org.dawnsci.conversion.converters.AVIImageConverter.java", "BodyUseAPI": [], "Fixed commit": "f449a263cd846913499f8c6bd1876cfc0f520e38", "Url": "https://api.github.com/repos/DawnScience/dawn-common", "Date": "2014-08-18T15:20:11Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.capacity()) != (this.data.capacity())) { createObservedBuffer(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5025/buggy-version/engine.src.core.com.jme3.scene.PartialUpdatedVertexBuffer.java", "BodyUseAPI": ["com.jme3.scene.PartialUpdatedVertexBuffer.createObservedBuffer(java.nio.Buffer)"], "Fixed commit": "d518f388bf37b73bd49f4985a8a8d1f0e0a4464b", "Url": "https://api.github.com/repos/entrusc/jmonkeyengine", "Date": "2016-06-29T23:03:23Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.Map<java.lang.Integer, java.lang.Float>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (data == null) { map.put(tailNodeId, new java.util.HashMap<java.lang.Integer, java.lang.Float>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/1157/buggy-version/mobile.CometNav.app.src.main.java.net.coderodde.graph.DirectedGraphWeightFunction.java", "BodyUseAPI": [], "Fixed commit": "eaca23e9a0dbb05ac126ca62e469ac96c3c8bfc1", "Url": "https://api.github.com/repos/gerrytucker78/emse_capstone_project", "Date": "2017-04-16T00:50:54Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.planningpoker.view.decks.creation.CardPanel.getCards()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!((indexOfEnteredCard + 1) >= (cards.size()))) { cards.get((indexOfEnteredCard + 1)).addValue.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3493/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.decks.creation.CardImage.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.planningpoker.view.components.NumberJTextField.requestFocus()", "java.util.List<edu.wpi.cs.wpisuitetng.modules.planningpoker.view.decks.creation.CardImage>.get(int)"], "Fixed commit": "65017ab164950fd65b1563a43e0a6f333ae70595", "Url": "https://api.github.com/repos/cs3733bdt/wpi-suite", "Date": "2014-05-02T01:46:16Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t.contentEquals(\"\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/5874/buggy-version/src.jask.Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "4b7c3867d7bcd58adee766db932e8852aefd0953", "Url": "https://api.github.com/repos/jpaffrath/jask", "Date": "2016-10-20T13:31:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, generalNetwork.state.splitRatios.IntertemporalJunctionSplitRatios>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sr == null) return null; else return junctions_split_ratios.get(junction_id).get(time_step);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/205/buggy-version/src.generalNetwork.state.splitRatios.IntertemporalSplitRatios.java", "BodyUseAPI": [], "Fixed commit": "6d3cab128317d6359a35ac2114dbf73241eb773c", "Url": "https://api.github.com/repos/Gueust/DTA-PC", "Date": "2013-05-20T17:41:52Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<de.fuwa.bomberman.es.base.EntityId, de.fuwa.bomberman.es.base.Entity>.remove(de.fuwa.bomberman.es.base.EntityId)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (entity != null) { entity.removeComponent(c); this.removedEntities.add(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/4221/buggy-version/src.de.fuwa.bomberman.es.base.DefaultEntitySet.java", "BodyUseAPI": ["java.util.Set<de.fuwa.bomberman.es.base.Entity>.add(de.fuwa.bomberman.es.base.DefaultEntity)", "de.fuwa.bomberman.es.base.DefaultEntity.removeComponent(java.lang.Class)"], "Fixed commit": "28b4e3e4ec13d0a6f48a3138870fc27ad040a42c", "Url": "https://api.github.com/repos/DomenicDev/FuwaMan", "Date": "2017-11-21T08:13:27Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSatisfiedTypes().isEmpty()) { return unit.getBottomDeclaration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/3079/buggy-version/src.com.redhat.ceylon.compiler.typechecker.model.IntersectionType.java", "BodyUseAPI": [], "Fixed commit": "dd66e38b5aa25ce3130702fc9ee8040fe21aa24b", "Url": "https://api.github.com/repos/ceylon/ceylon-spec", "Date": "2012-05-23T21:18:31Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (registered) { doiMapper.update(doi, new org.gbif.api.model.common.DoiData(org.gbif.api.model.common.DoiStatus.REGISTERED, target), xml); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/802/buggy-version/registry-cli.src.main.java.org.gbif.registry.cli.DoiUpdateListener.java", "BodyUseAPI": [], "Fixed commit": "cc13929fb830e14d4d7ac60bee312f4c36978f62", "Url": "https://api.github.com/repos/gbif/registry", "Date": "2016-05-18T14:36:27Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameterType.equals(java.lang.String.class)) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V48/7871/buggy-version/src.main.java.ch.rabbithole.sra.resource.ResourceExecution.java", "BodyUseAPI": [], "Fixed commit": "55f671568d9ba35bf6ef5a90e5cf85c79fe32bde", "Url": "https://api.github.com/repos/nimloth05/simple-rest-api", "Date": "2015-07-26T20:31:32Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (missing.isEmpty()) { try { callback.start(); } catch (java.lang.Exception e) { ActiveMQOsgiLogger.LOGGER.errorStartingBroker(e, name); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2209/buggy-version/artemis-server-osgi.src.main.java.org.apache.activemq.artemis.osgi.ProtocolTracker.java", "BodyUseAPI": [], "Fixed commit": "3c72247b3c3afe5883225b6cc2e82348dd901875", "Url": "https://api.github.com/repos/ryeats/activemq-artemis", "Date": "2017-09-29T23:43:25Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.netflix.astyanax.serializers.AnnotatedCompositeSerializer.getWithShortLength(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((data.remaining()) > 0) { serializer.deserialize(obj, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8466/buggy-version/src.main.java.com.netflix.astyanax.serializers.AnnotatedCompositeSerializer.java", "BodyUseAPI": ["com.netflix.astyanax.serializers.AnnotatedCompositeSerializer.ComponentSerializer<?>.deserialize(T,java.nio.ByteBuffer)"], "Fixed commit": "71da87e62bd860fdf2c8b7ae87e6c15995de97f7", "Url": "https://api.github.com/repos/jchohome/astyanax", "Date": "2012-06-25T20:27:21Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rotater) != null) { start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/723/buggy-version/src.com.jascotty2.signrotate.Rotater.java", "BodyUseAPI": [], "Fixed commit": "46faf8b6b06c0722cd8674d2e5a04200a026c265", "Url": "https://api.github.com/repos/jascotty2/SignRotate", "Date": "2011-04-21T06:32:52Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.unidata.data.DataChoice.getChoices()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cchoices.size()) == 2) { ucar.unidata.data.DataChoice uvwchoice = ((ucar.unidata.data.DataChoice) (((ucar.unidata.data.DerivedDataChoice) (choice)).getChoices().get(0))); ucar.unidata.data.DataChoice wchoice = ((ucar.unidata.data.DataChoice) (((ucar.unidata.data.DerivedDataChoice) (uvwchoice)).getChoices().get(2))); levelsList = wchoice.getAllLevels(tmpSelection); }else { ucar.unidata.data.DataChoice wchoice = ((ucar.unidata.data.DataChoice) (((ucar.unidata.data.DerivedDataChoice) (choice)).getChoices().get(2))); levelsList = wchoice.getAllLevels(tmpSelection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1597/buggy-version/src.ucar.unidata.idv.control.VolumeVectorControl.java", "BodyUseAPI": [], "Fixed commit": "5f335fbec0aa446fa04702a500990227deb41fcb", "Url": "https://api.github.com/repos/tommyjasmin/IDV", "Date": "2017-03-22T19:10:26Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(category.toString().equals(seedu.taskboss.model.ModelManager.CATEGORY_ALL_TASKS))) && (!(category.toString().equals(seedu.taskboss.model.ModelManager.CATEGORY_DONE)))) { taskBoss.removeCategory(category); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6737/buggy-version/src.main.java.seedu.taskboss.model.ModelManager.java", "BodyUseAPI": ["seedu.taskboss.model.TaskBoss.removeCategory(seedu.taskboss.model.category.Category)"], "Fixed commit": "48f7e64d95d47a34462769684d4d4dcd6f75d17c", "Url": "https://api.github.com/repos/CS2103JAN2017-W14-B2/main", "Date": "2017-04-03T06:53:55Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.sdsmdg.pulkit.call_o_brator.IncomingCall.messageEmitted)) { MainActivity.mSocket.emit(\"contactInfo\", jsonObject); android.util.Log.d(\"contact\", \"message emitted\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7216/buggy-version/app.src.main.java.com.sdsmdg.pulkit.call_o_brator.IncomingCall.java", "BodyUseAPI": [], "Fixed commit": "f1cccd2bc47b0ab2086cacce51c7e4a8ad7e174a", "Url": "https://api.github.com/repos/pkarira/Sync_Call_Frontend", "Date": "2017-10-24T15:31:29Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.visualista.visualista.editorcontroller.EditorViewEvent.getExtraData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(file.getName().toLowerCase().endsWith(\".vis\"))) { file = new java.io.File(((file.getAbsoluteFile()) + \".vis\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4142/buggy-version/core.src.main.java.io.github.visualista.visualista.editorcontroller.EditorController.java", "BodyUseAPI": ["java.io.File.getAbsoluteFile()"], "Fixed commit": "9349534dd43d53134c318fca0fe838186e98196f", "Url": "https://api.github.com/repos/Visualista/Visualista", "Date": "2014-05-19T13:36:55Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (incident.getViolations().isEmpty()) { de.amasol.zisalerting.ZISAlerting.log.fine(\"Status: Runs without any Violations - May be a plugintest only!!\"); return new de.amasol.zisalerting.Status(Status.StatusCode.PartialSuccess); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2127/buggy-version/zisalerting.src.de.amasol.zisalerting.ZISAlerting.java", "BodyUseAPI": [], "Fixed commit": "fdee404dacf044290f8ed386b8757a2af2042cd8", "Url": "https://api.github.com/repos/pahofmann/Dynatrace-ZIS-Plugin", "Date": "2017-10-09T12:12:25Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fiji.plugin.trackmate.Spot.getFeature(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1630/buggy-version/src.main.java.net.chicoronny.trackmate.action.ExportTracksToCSV.java", "BodyUseAPI": [], "Fixed commit": "fd46472c2b0936e5ab9bc7207235ce9bca465420", "Url": "https://api.github.com/repos/chicoronny/RonnyTrackMate", "Date": "2015-12-15T15:04:58Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getCheckedElements().length) == 1) && ((fSelectedProvider) != null)) { java.lang.String projectName = ((org.eclipse.core.resources.IProject) (this.getCheckedElements()[0])).getName(); fSelectedProvider.getParticipant().setProjectName(projectName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9076/buggy-version/org.eclipse.ptp.rdt.sync.ui.src.org.eclipse.ptp.rdt.sync.ui.wizards.ConvertLocalToSyncProjectWizardPage.java", "BodyUseAPI": [], "Fixed commit": "acbb130271199073c2f799270cb51ce6d093e156", "Url": "https://api.github.com/repos/rolandschulz/PTP", "Date": "2011-09-29T21:02:38Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_startTime) >= 0) { return m_startTime; }else { return java.lang.Long.parseLong(m_properties.get(\"date\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5219/buggy-version/cat-core.src.main.java.com.dianping.cat.service.ModelRequest.java", "BodyUseAPI": [], "Fixed commit": "d30d96de7e9219643bbe4dd7a1697d2c1cc05d9a", "Url": "https://api.github.com/repos/dianping/cat", "Date": "2013-07-04T13:24:55Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (input == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4187/buggy-version/src.com.github.assisstion.Quizzer.gui.QuizPanel.java", "BodyUseAPI": [], "Fixed commit": "f861405d2320a5108ed68aa80c60e915e689b680", "Url": "https://api.github.com/repos/assisstion/Quizzer", "Date": "2014-10-30T15:01:36Z"},
{"Line": "=>8811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_tabPane) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2287/buggy-version/src.com.jidesoft.plaf.basic.BasicJideTabbedPaneUI.java", "BodyUseAPI": [], "Fixed commit": "8a64d0422ab5c18553d0fe557c2309b6842ce945", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2013-05-24T14:21:27Z"},
{"Line": "=>8771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_tabPane) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2287/buggy-version/src.com.jidesoft.plaf.basic.BasicJideTabbedPaneUI.java", "BodyUseAPI": [], "Fixed commit": "8a64d0422ab5c18553d0fe557c2309b6842ce945", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2013-05-24T14:21:27Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.PATHnwei.news.models.News>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(newsItem.getImageUrlString()))) { com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString()).resize(1920, 1080).onlyScaleDown().error(R.drawable.ic_broken_image).into(holder.imageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2488/buggy-version/app.src.main.java.com.PATHnwei.news.adapters.NewsAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString()).resize(1920, 1080).onlyScaleDown()", "com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString())", "com.PATHnwei.news.models.News.getImageUrlString()", "com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString()).resize(int,int)", "com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString()).resize(1920, 1080).onlyScaleDown().error(R.drawable.ic_broken_image).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString()).resize(1920, 1080).onlyScaleDown().error(R.drawable.ic_broken_image)"], "Fixed commit": "b829b26df980de6bedf9c7b765f75a3a642aa50b", "Url": "https://api.github.com/repos/lixw1021/News", "Date": "2017-10-31T13:35:53Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) { if ((videoControlsView) != null) { if ((videoControlsView.getVisibility()) == (android.view.View.VISIBLE)) hideControls(); else showControls(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3686/buggy-version/fullscreenvideoview.src.main.java.com.github.rtoshiro.view.video.FullscreenVideoLayout.java", "BodyUseAPI": [], "Fixed commit": "d2c226b98cf09ef4a008aabb30c8c3eaae69df8c", "Url": "https://api.github.com/repos/rtoshiro/FullscreenVideoView", "Date": "2015-06-25T21:29:36Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (authentication instanceof org.springframework.security.core.userdetails.UserDetails) { org.springframework.security.core.userdetails.UserDetails userDetails = ((org.springframework.security.core.userdetails.UserDetails) (authentication)); userName = userDetails.getUsername(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8227/buggy-version/duke-encounters.src.main.java.de.dominikschadow.duke.encounters.services.UserService.java", "BodyUseAPI": [], "Fixed commit": "ba6d80d13d999e7e551d59b6cad86ea9b7d8cc07", "Url": "https://api.github.com/repos/dschadow/ApplicationIntrusionDetection", "Date": "2015-10-07T14:57:12Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["query.setLockMode(LockModeType.PESSIMISTIC_WRITE).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((localStorageHostRefVOS.size()) > 0) { ref = localStorageHostRefVOS.get(0); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5285/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageCapacityRecalculator.java", "BodyUseAPI": ["java.util.List<org.zstack.storage.primary.local.LocalStorageHostRefVO>.get(int)"], "Fixed commit": "261f4e356b4bb592a3aabfc8dd88fc5c20bdbc56", "Url": "https://api.github.com/repos/liningone/zstack", "Date": "2017-03-15T04:22:55Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sortedCounts.containsKey(entry.getValue()))) sortedCounts.put(entry.getValue(), new java.util.ArrayList<java.lang.String>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7554/buggy-version/src.corp.util.CounterTable.java", "BodyUseAPI": ["java.util.TreeMap<java.lang.Integer, java.util.List<java.lang.String>>.put(java.lang.Integer,java.util.ArrayList<java.lang.String>)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()"], "Fixed commit": "074a8d208613592ced0a93fe98594608e358c01c", "Url": "https://api.github.com/repos/forkunited/CorporateRelationExtraction", "Date": "2013-09-10T17:24:34Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result > (java.lang.Integer.MAX_VALUE)) { result = java.lang.Integer.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4617/buggy-version/sharding-jdbc-core.src.main.java.com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.java", "BodyUseAPI": [], "Fixed commit": "5f7d663c1db72a313951950c56bdcb31c98301f0", "Url": "https://api.github.com/repos/Knight0909/sharding-jdbc", "Date": "2016-09-29T01:25:30Z"},
{"Line": "=>2264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getOpponents(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((opponents.size()) == 1) { randomOpponentId = game.getOpponents(abilityControllerId).iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7520/buggy-version/Mage.Server.Plugins.Mage.Player.AI.src.main.java.mage.player.ai.ComputerPlayer.java", "BodyUseAPI": [], "Fixed commit": "34c31834c589e87649340bac3c4b260d91f44db5", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2017-11-26T22:23:39Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((writerClosed) && ((nrReadStreams) == 0)) && ((availableToRead()) == 0)) { bufferProvider.recycle(buffer); buffer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3737/buggy-version/spf4j-core.src.main.java.org.spf4j.io.PipedOutputStream.java", "BodyUseAPI": [], "Fixed commit": "2152b1b4eaea38333c465ada84a0970783d65448", "Url": "https://api.github.com/repos/zolyfarkas/spf4j", "Date": "2015-04-01T18:44:51Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((nrReadStreams) == 0) && ((availableToRead()) == 0)) { bufferProvider.recycle(buffer); buffer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3737/buggy-version/spf4j-core.src.main.java.org.spf4j.io.PipedOutputStream.java", "BodyUseAPI": [], "Fixed commit": "2152b1b4eaea38333c465ada84a0970783d65448", "Url": "https://api.github.com/repos/zolyfarkas/spf4j", "Date": "2015-04-01T18:44:51Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataBufferType == (java.awt.image.DataBuffer.TYPE_BYTE)) && ((zoomedDataBuffer.getSize()) < ((w * h) * 3))) zoomedDataBuffer = new java.awt.image.DataBufferByte(((w * h) * 3), 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4530/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.lens.LensModel.java", "BodyUseAPI": [], "Fixed commit": "35c34fb258dd617923aee4798f917b2e3d0253a4", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-03-23T03:32:41Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<jetbrains.buildServer.agent.AgentRunningBuild, jetbrains.buildServer.agent.BuildFinishedStatus>.get(runner.getBuild())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((previousStepStatus == null) || (previousStepStatus.equals(BuildFinishedStatus.FINISHED_SUCCESS))) { statuses.put(runner.getBuild(), status); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2584/buggy-version/teamcity-gerrit-agent.src.com.maxifier.teamcity.gerrit.GerritBuildProcessFactory.java", "BodyUseAPI": [], "Fixed commit": "47ba80cf46904d2fa3b82a925448df83f2f69425", "Url": "https://api.github.com/repos/maxifier/teamcity-gerrit-plugin", "Date": "2013-02-12T07:46:06Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.find()) { irc.sendServer((\"JOIN \" + (m.group(4)))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7261/buggy-version/src.core.Core.java", "BodyUseAPI": ["core.utils.IRC.sendServer(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "f9aca65e18bd6b66d543269076f9fa95fd7e9185", "Url": "https://api.github.com/repos/XeTK/JavaBot", "Date": "2013-07-23T19:26:26Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(paused)) restart();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/415/buggy-version/GiaraFilms2.0.src.it.giara.download.FileSources.java", "BodyUseAPI": [], "Fixed commit": "71886c7504103b9ffd39a4397f3ca60955d9da31", "Url": "https://api.github.com/repos/Daxel90/GiaraFilms", "Date": "2015-10-26T20:21:55Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iCharType == 'm') return com.orientechnologies.orient.core.metadata.schema.OType.LINKMAP; else if (iCharType == 'x') return com.orientechnologies.orient.core.metadata.schema.OType.LINK; else if (iCharType == 'n') return com.orientechnologies.orient.core.metadata.schema.OType.LINKSET;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3932/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerStringAbstract.java", "BodyUseAPI": [], "Fixed commit": "e5c287278cad610b746e5c05883367d44733ec7d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-08T17:37:21Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.metadata.schema.OType.getTypeByValue(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t == (com.orientechnologies.orient.core.metadata.schema.OType.LINKLIST)) appendType(typesStack.peek(), iFieldName, 'z'); else if (t == (com.orientechnologies.orient.core.metadata.schema.OType.LINKMAP)) appendType(typesStack.peek(), iFieldName, 'm');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3932/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.json.OJSONFetchContext.java", "BodyUseAPI": [], "Fixed commit": "e5c287278cad610b746e5c05883367d44733ec7d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-08T17:37:21Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (j.isJsonPrimitive()) { com.gnof.core.JsonArray valueList = currVal.get(\"values\").getAsJsonArray(); valueList.add(j); currVal.remove(\"values\"); currVal.add(\"values\", valueList); objectData.put(currKey, currVal); }else { gatherObjectDataHelper(((com.gnof.core.JsonObject) (j)), objectData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2819/buggy-version/src.com.gnof.core.ValidationWorker.java", "BodyUseAPI": ["com.gnof.core.JsonArray.add(com.gnof.core.JsonElement)"], "Fixed commit": "0ff63fe853bfe61ac758b4b38cdcda5eb635f5bb", "Url": "https://api.github.com/repos/Gnof/JsonValidator", "Date": "2016-03-27T04:22:44Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gnof.core.JsonArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currJsonVal.isJsonArray()) { currValue = currJsonVal.toString(); }else { currValue = attributeValues.get(i).getAsString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2819/buggy-version/src.com.gnof.core.ValidationWorker.java", "BodyUseAPI": ["com.gnof.core.JsonElement.toString()"], "Fixed commit": "0ff63fe853bfe61ac758b4b38cdcda5eb635f5bb", "Url": "https://api.github.com/repos/Gnof/JsonValidator", "Date": "2016-03-27T04:22:44Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.infra.admin.master.service.AppConfigValueService.getConfigValuesByModuleAndKey(FinancialConstants.MODULE_NAME_APPCONFIG,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (enablePrintConfig != null) for (final org.egov.infra.admin.master.entity.AppConfigValues appConfigVal : enablePrintConfig) chequePrintEnabled = appConfigVal.getValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3930/buggy-version/egov.egov-egfweb.src.main.java.org.egov.egf.web.actions.report.ChequeIssueRegisterReportAction.java", "BodyUseAPI": [], "Fixed commit": "89d031016509d8e51316d5a08a3a899527055496", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-08-19T10:40:59Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extractionMode == (ciugen.imextract.IMExtractRunner.DT_MODE)) { if (dt_in_ms) { maxdt = get_max_dt(allFunctions.get(0).getRawDataPath()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8352/buggy-version/src.ciugen.imextract.IMExtractRunner.java", "BodyUseAPI": [], "Fixed commit": "3db7129ead0d808a4297268e684ef4affd201dde", "Url": "https://api.github.com/repos/dpolasky/TWIMExtract", "Date": "2017-06-13T14:32:42Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id.lastIndexOf(\".\")) == (-1)) { id = id + \".czi\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2185/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissCZIReader.java", "BodyUseAPI": [], "Fixed commit": "05679db9967f7e0bba735e441bd5f4f3f070aea3", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-05T00:01:20Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getClass()) != (obj.getClass())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2269/buggy-version/PDTTA-core.src.sadl.models.PTA.SubEvent.java", "BodyUseAPI": [], "Fixed commit": "a020af1ced492bfe9ca81db6c34e9f6d8da3e397", "Url": "https://api.github.com/repos/fwitter/SADL", "Date": "2015-11-12T14:31:02Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2269/buggy-version/PDTTA-core.src.sadl.models.PTA.SubEvent.java", "BodyUseAPI": [], "Fixed commit": "a020af1ced492bfe9ca81db6c34e9f6d8da3e397", "Url": "https://api.github.com/repos/fwitter/SADL", "Date": "2015-11-12T14:31:02Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.plus.OsmandApplication.getTargetPointsHelper()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((targets.getPointToStart()) == null) { targets.setStartPoint(from, false, fromName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8776/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": ["net.osmand.plus.TargetPointsHelper.setStartPoint(net.osmand.data.LatLon,boolean,net.osmand.data.PointDescription)"], "Fixed commit": "de0fb53b4e911700408f7b663647bcee9eafb573", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-01-30T07:54:19Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((metrics.size()) > 0) && ((metrics.get(0).name.length()) == 7)) { df = new java.text.SimpleDateFormat(\"yyyy-MM\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/292/buggy-version/src.main.java.com.gitblit.wicket.pages.MetricsPage.java", "BodyUseAPI": [], "Fixed commit": "bcab06a77e5ce72aa6632d611b9031cd0576133b", "Url": "https://api.github.com/repos/doozel/gitblit", "Date": "2014-04-08T07:38:37Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Node.getCar()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bExp.getCdr().getCar().isNull()) return Nil.getInstance(); else if (!(bExp.getCdr().getCar().isPair())) return bExp.getCdr().getCar(); else return bExp.getCdr().getCar().eval(env);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7112/buggy-version/src.Cond.java", "BodyUseAPI": ["Node.getCdr()", "Node.getCdr()", "bExp.getCdr().getCar()", "bExp.getCdr().getCar().eval(Environment)", "bExp.getCdr().getCar()", "bExp.getCdr().getCar()", "bExp.getCdr().getCar().isPair()", "Node.getCdr()"], "Fixed commit": "68c2dbd297c38ffe3c7f8c387d0e303b5dd025bd", "Url": "https://api.github.com/repos/kylesarre/SchemeInterpreter", "Date": "2017-12-02T04:33:18Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Node.getCar()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bExp.getCdr().getCar().isNull()) return Nil.getInstance(); else if (!(bExp.getCdr().getCar().isPair())) return bExp.getCdr().getCar(); else return bExp.getCdr().getCar().eval(env);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7112/buggy-version/src.Cond.java", "BodyUseAPI": ["Node.getCdr()", "Node.getCdr()", "bExp.getCdr().getCar()", "bExp.getCdr().getCar()", "bExp.getCdr().getCar().eval(Environment)", "bExp.getCdr().getCar().isPair()", "Node.getCdr()", "bExp.getCdr().getCar()"], "Fixed commit": "68c2dbd297c38ffe3c7f8c387d0e303b5dd025bd", "Url": "https://api.github.com/repos/kylesarre/SchemeInterpreter", "Date": "2017-12-02T04:33:18Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xCards > (copy.size())) { xCards = copy.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1199/buggy-version/src.edu.ucsb.cs56.projects.games.dealer.Hand.java", "BodyUseAPI": ["java.util.ArrayList.size()"], "Fixed commit": "d1adb41bda5d2fd7cc71a50c2105f9e3cc0bcc88", "Url": "https://api.github.com/repos/acantor/cs56-games-dealer", "Date": "2014-02-28T00:11:52Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deck.size()) == 0) { java.lang.System.out.println(\"NO MORE CARDS IN THE DECK\"); }else { for (int i = 0; i < (deck.size()); i++) { if ((i % 5) == 0) { java.lang.System.out.println(); } if (i == ((deck.size()) - 1)) { java.lang.System.out.println((\"\" + (deck.get(i)))); }else { java.lang.System.out.print(((\"\" + (deck.get(i))) + \", \")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1199/buggy-version/src.edu.ucsb.cs56.projects.games.dealer.Deck.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.print(java.lang.String)"], "Fixed commit": "d1adb41bda5d2fd7cc71a50c2105f9e3cc0bcc88", "Url": "https://api.github.com/repos/acantor/cs56-games-dealer", "Date": "2014-02-28T00:11:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.motechproject.ananya.service.AudioTrackerLogService.getLogFor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (audioTrackerLog == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1992/buggy-version/ananya-report.src.main.java.org.motechproject.ananya.service.JobAidContentMeasureService.java", "BodyUseAPI": [], "Fixed commit": "ae91e77bf7ce4ff45e4a49a6f122f6ff9f3decf4", "Url": "https://api.github.com/repos/motech/ananya", "Date": "2012-05-17T13:08:10Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((video) != null) { ganks.addAll(video); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2552/buggy-version/app.src.main.java.com.iamwent.gank.data.bean.DailyResult.java", "BodyUseAPI": [], "Fixed commit": "832018ac5dd7e21b713f7ea9e0520b8e1aec842f", "Url": "https://api.github.com/repos/iamwent/gank.io", "Date": "2017-03-05T02:46:24Z"},
{"Line": "=>4015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4737/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "a3ece929656a516267fa3dce3219d61bc2e3edea", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-09-21T15:41:27Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(workbook.getSheetNames())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(sheetNames.contains(instance))) { org.opennms.pris.xls.source.XlsSource.LOGGER.error(\"can not find sheet {} in workbook from file {}\", instance, xls.getAbsolutePath()); throw new java.lang.RuntimeException((((\"can not find sheet \" + (instance)) + \" in workbook from file \") + (xls.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5177/buggy-version/opennms-pris.src.main.java.org.opennms.pris.xls.source.XlsSource.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "575e46e42b5e4381ffe9c377998f8162e130515a", "Url": "https://api.github.com/repos/OpenNMS/opennms-provisioning-integration-server", "Date": "2014-03-17T12:40:55Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ua.lv.entity.User.getFinishedAllGoals()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b == 0) { procentSucsses = 0; }else { procentSucsses = (a * 100) / b; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6067/buggy-version/src.main.java.ua.lv.controller.AccountController.java", "BodyUseAPI": [], "Fixed commit": "a1e21538a45b71909287a5ae472102acf2a2554f", "Url": "https://api.github.com/repos/Trav0lta/OktenProject", "Date": "2017-12-16T21:17:39Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dn.isCleaned())) { org.griphyn.vdl.mapping.Mapper m = node.getMapper(); java.util.Collection<org.griphyn.vdl.mapping.Path> fringe = node.getFringePaths(); for (org.griphyn.vdl.mapping.Path p : fringe) { org.griphyn.vdl.mapping.PhysicalFormat pf = m.map(p); if (!(m.isPersistent(p))) { pf.clean(); m.fileCleaned(pf); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2315/buggy-version/src.org.griphyn.vdl.mapping.file.FileGarbageCollector.java", "BodyUseAPI": [], "Fixed commit": "6256158d831ffa611241e8fbc398b65d46cd16ab", "Url": "https://api.github.com/repos/swift-lang/swift-k", "Date": "2015-11-02T00:35:21Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readPreferenceLevel) != null) { ret.readPreferenceLevel = readPreferenceLevel; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2750/buggy-version/src.de.caluga.morphium.QueryImpl.java", "BodyUseAPI": [], "Fixed commit": "b17dd32b01146cbb579327d488c6630a704d320b", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2012-08-25T17:17:38Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.replicationFactor().get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((replication == null) || (replication <= 0)) { replication = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4356/buggy-version/extensions.entitystore-cassandra.src.main.java.org.apache.polygene.entitystore.cassandra.CassandraCluster.java", "BodyUseAPI": [], "Fixed commit": "3384c1bd6c361a6c0e1e2100d4604b2eb658b0e4", "Url": "https://api.github.com/repos/apache/polygene-java", "Date": "2017-02-19T08:18:22Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.createIfMissing().get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (createIfMissing) { createPolygeneStateTable(tableName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4356/buggy-version/extensions.entitystore-cassandra.src.main.java.org.apache.polygene.entitystore.cassandra.CassandraCluster.java", "BodyUseAPI": [], "Fixed commit": "3384c1bd6c361a6c0e1e2100d4604b2eb658b0e4", "Url": "https://api.github.com/repos/apache/polygene-java", "Date": "2017-02-19T08:18:22Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.substring(1, 2).equalsIgnoreCase(\"\\\"\")) { int c = 2; while (true) { if ((line.length()) > c) { if (!(line.substring(c, (c + 1)).equalsIgnoreCase(\"\\\"\"))) { toP += line.substring(c, (c + 1)); }else break; }else break; ++c; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4499/buggy-version/src.com.company.Main.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "c06075f8ad5e60cc95875b00cb004d69a9f35bc0", "Url": "https://api.github.com/repos/Regalus27/Lacon", "Date": "2017-01-20T20:32:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.stage) == (rl.models.stages.GameStages.FINISHED)) { theCopy.setStage(GameStages.FINISHED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4288/buggy-version/src.rl.models.singlestate.SingleState.java", "BodyUseAPI": [], "Fixed commit": "7b9debb18fce092fe188dcc2dd407c9a57208339", "Url": "https://api.github.com/repos/amandaccsantos/microrts", "Date": "2017-05-18T19:42:09Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((history.size()) != historySize) { java.util.List<md2k.mCerebrum.cStress.library.structs.DataPoint> temp = new java.util.ArrayList<md2k.mCerebrum.cStress.library.structs.DataPoint>(); for (md2k.mCerebrum.cStress.library.structs.DataPoint dp : history) { temp.add(dp); } history = new org.apache.commons.collections4.queue.CircularFifoQueue<md2k.mCerebrum.cStress.library.structs.DataPoint>(historySize); for (md2k.mCerebrum.cStress.library.structs.DataPoint dp : temp) { history.add(dp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6735/buggy-version/src.main.java.md2k.mCerebrum.cStress.library.datastream.DataPointStream.java", "BodyUseAPI": [], "Fixed commit": "721b6420db4d0d685ea46ecd309e377a0ea30f3f", "Url": "https://api.github.com/repos/MD2Korg/stream-processor", "Date": "2016-02-27T02:37:22Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((history.size()) != historySize) { java.util.List<md2k.mCerebrum.cStress.library.structs.DataPointArray> temp = new java.util.ArrayList<md2k.mCerebrum.cStress.library.structs.DataPointArray>(); for (md2k.mCerebrum.cStress.library.structs.DataPointArray dp : history) { temp.add(dp); } history = new org.apache.commons.collections4.queue.CircularFifoQueue<md2k.mCerebrum.cStress.library.structs.DataPointArray>(historySize); for (md2k.mCerebrum.cStress.library.structs.DataPointArray dp : temp) { history.add(dp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6735/buggy-version/src.main.java.md2k.mCerebrum.cStress.library.datastream.DataArrayStream.java", "BodyUseAPI": [], "Fixed commit": "721b6420db4d0d685ea46ecd309e377a0ea30f3f", "Url": "https://api.github.com/repos/MD2Korg/stream-processor", "Date": "2016-02-27T02:37:22Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(securitySchemes.isEmpty())) { securitySchemesList.add(securitySchemes); return securitySchemesList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1265/buggy-version/modules.org.restlet.ext.apispark.src.org.restlet.ext.apispark.internal.conversion.raml.RamlTranslator.java", "BodyUseAPI": ["java.util.ArrayList<java.util.Map<java.lang.String, org.raml.model.SecurityScheme>>.add(java.util.Map<java.lang.String, org.raml.model.SecurityScheme>)"], "Fixed commit": "6f9a8ddcfb9d380e929123b27e8c6be1285c01b3", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2015-06-05T21:39:40Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (removed > 0) { FridayThe13th.log.log(java.util.logging.Level.INFO, ((((com.AustinPilz.FridayThe13th.FridayThe13th.consolePrefix) + \"Removed \") + removed) + \" signs(s).\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5767/buggy-version/src.com.AustinPilz.FridayThe13th.IO.InputOutput.java", "BodyUseAPI": ["FridayThe13th.log.log(java.util.logging.Level,((((com.AustinPilz.FridayThe13th.FridayThe13th.consolePrefix) + \"Removed \") + removed) + \" signs(s).\"))"], "Fixed commit": "42f3cc49bc7e9d5f36ecfb804bfaadf01f7a9aa6", "Url": "https://api.github.com/repos/austinpilz/FridayThe13th", "Date": "2017-07-07T03:22:48Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.get(JsonKey.BULK_USER_UPLOAD)) == null) { accessToken = login(user.getUsername(), ((java.lang.String) (request.get(JsonKey.PASSWORD)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/921/buggy-version/common-util.src.main.java.org.sunbird.services.sso.impl.KeyCloakServiceImpl.java", "BodyUseAPI": ["org.sunbird.services.sso.impl.KeyCloakServiceImpl.login(user.getUsername(),java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(JsonKey.PASSWORD)"], "Fixed commit": "0d25e42bbe5c62c88c020e9d600a1814319d58c6", "Url": "https://api.github.com/repos/project-sunbird/sunbird-utils", "Date": "2017-09-14T11:43:49Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["schemaNode.getValue().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (entityContainer.has(\"entitySets\")) { java.util.Iterator<java.util.Map.Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode>> itr = entityContainer.get(\"entitySets\").fields(); while (itr.hasNext()) { java.util.Map.Entry<java.lang.String, com.fasterxml.jackson.databind.JsonNode> entitySetEntry = itr.next(); com.fasterxml.jackson.databind.JsonNode entitySetNode = entitySetEntry.getValue(); org.apache.olingo.commons.api.edm.provider.CsdlEntitySet entitySet = new org.apache.olingo.client.core.edm.json.ClientCsdlEntitySetDeserializer(schema, entitySetEntry.getKey()).deserialize(entitySetNode.traverse(parser.getCodec()), ctxt); container.getEntitySets().add(entitySet); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/684/buggy-version/lib.client-core.src.main.java.org.apache.olingo.client.core.edm.json.ClientCsdlSchemasDeserializer.java", "BodyUseAPI": ["entityContainer.get(\"entitySets\").fields()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "a89be49ed7badedda3d4322e5e1eff5be1dd7bb7", "Url": "https://api.github.com/repos/djkevincr/olingo-odata4", "Date": "2015-08-20T19:15:20Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(message.isAcked())) && ((message.getChatType()) == (com.easemob.chat.EMMessage.ChatType.Chat))) { try { com.easemob.chat.EMChatManager.getInstance().ackMessageRead(message.getFrom(), message.getMsgId()); message.isAcked = true; } catch (com.easemob.exceptions.EaseMobException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2184/buggy-version/src.com.easemob.easeui.widget.chatrow.EaseChatRowLocation.java", "BodyUseAPI": ["com.easemob.chat.EMChatManager.getInstance().ackMessageRead(message.getFrom(),message.getMsgId())", "com.easemob.easeui.widget.chatrow.EaseChatRowLocation.getFrom()", "com.easemob.easeui.widget.chatrow.EaseChatRowLocation.getMsgId()"], "Fixed commit": "241d598e5aecb61b386486b5fac8bea25c30d516", "Url": "https://api.github.com/repos/easemob/easeui", "Date": "2015-10-16T12:48:07Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zoodb.schema.ZooField.getValue(org.zoodb.schema.ZooHandle)", "org.zoodb.schema.ZooField.getValue(org.zoodb.schema.ZooHandle)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((v1 == null) || (v2 == null)) { org.zoodb.tools.ZooCompareDb.log((((((((((\"Field has different values: \" + (org.zoodb.internal.util.Util.oidToString(hdl1.getOid()))) + \" \") + cls1) + \".\") + (f1.getName())) + \": \") + (f1.getValue(hdl1))) + \" vs \") + (f2.getValue(hdl2)))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/286/buggy-version/src.org.zoodb.tools.ZooCompareDb.java", "BodyUseAPI": [], "Fixed commit": "f7869fb26e1f42bb6fd29ed655dac4097aa5b0a7", "Url": "https://api.github.com/repos/tzaeschke/zoodb", "Date": "2017-05-26T15:36:55Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3903/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.view.VirtualModelInstance.java", "BodyUseAPI": [], "Fixed commit": "b3f6736cc50a05b69df7cabd8b1ff20c07d82ad8", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2014-09-05T11:01:21Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.foundation.view.action.FlexoBehaviourAction<A, FB, O>.getEditionScheme()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (es != null) { for (org.openflexo.foundation.viewpoint.editionaction.EditionAction action : es.getActions()) { if (action.evaluateCondition(this)) { performAction(action, performedActions); } } }else { org.openflexo.foundation.view.action.FlexoBehaviourAction.logger.warning(\"Trying to execute an Action with null Behaviour\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3903/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.view.action.FlexoBehaviourAction.java", "BodyUseAPI": ["FB.getActions()"], "Fixed commit": "b3f6736cc50a05b69df7cabd8b1ff20c07d82ad8", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2014-09-05T11:01:21Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model.getMinute()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3294/buggy-version/sba-load-monitor-server.src.main.java.net.narcissu5.loadmonitor.service.SaveLoadService.java", "BodyUseAPI": [], "Fixed commit": "41283658f323ee45677c7d30db3ae685787f5d60", "Url": "https://api.github.com/repos/Narcissu5/sba-load-monitor", "Date": "2017-11-20T10:08:34Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["resp.getEntity().getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((is.available()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3294/buggy-version/sba-load-monitor-server.src.main.java.net.narcissu5.loadmonitor.service.SaveLoadService.java", "BodyUseAPI": [], "Fixed commit": "41283658f323ee45677c7d30db3ae685787f5d60", "Url": "https://api.github.com/repos/Narcissu5/sba-load-monitor", "Date": "2017-11-20T10:08:34Z"},
{"Line": "=>2622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get((\"productFeatureGroup_\" + (productFeatureCatGrpAppl.getString(\"productFeatureGroupId\"))))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(productFeatureId.equals(\"NONE\"))) { dispatcher.runSync(\"applyFeatureToProduct\", org.ofbiz.base.util.UtilMisc.toMap(\"productId\", productAssoc.get(\"productIdTo\").toString(), \"productFeatureId\", productFeatureId, \"productFeatureApplTypeId\", \"STANDARD_FEATURE\", \"userLogin\", userLogin)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/669/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ZuczugProductServices.java", "BodyUseAPI": ["org.ofbiz.base.util.UtilMisc.toMap(java.lang.String,productAssoc.get(\"productIdTo\").toString(),java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.ofbiz.entity.GenericValue)", "org.ofbiz.service.LocalDispatcher.runSync(java.lang.String,org.ofbiz.base.util.UtilMisc.toMap(\"productId\", productAssoc.get(\"productIdTo\").toString(), \"productFeatureId\", productFeatureId, \"productFeatureApplTypeId\", \"STANDARD_FEATURE\", \"userLogin\", userLogin))"], "Fixed commit": "55c1dcd97c98780af0089698ae1678a8a6bb33a7", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-07-13T09:16:03Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qmsos.quakemo.EarthquakeService.executeRefresh()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (count >= 0) { localIntent.putExtra(IpcConstants.EXTRA_REFRESH_EXECUTED, true); localIntent.putExtra(IpcConstants.EXTRA_ADDED_COUNT, count); }else { localIntent.putExtra(IpcConstants.EXTRA_REFRESH_EXECUTED, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6466/buggy-version/QuakeMo.src.org.qmsos.quakemo.EarthquakeService.java", "BodyUseAPI": ["android.content.Intent.putExtra(IpcConstants.EXTRA_ADDED_COUNT,int)"], "Fixed commit": "616cc2d0d82d773e3ea2f7cc35ee12a7cf136ca1", "Url": "https://api.github.com/repos/garry-shao/QuakeMo", "Date": "2016-02-07T14:19:39Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pdfFile.exists()) pdfFile.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8950/buggy-version/app.src.main.java.de.android.fhwsapp.pdfDownloaderViewer.PdfViewer.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "1655f7cf8717306fd4de563e0c8f97621a744bad", "Url": "https://api.github.com/repos/nicotin241/FhwsApp", "Date": "2017-09-04T10:52:22Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getServer().getPluginManager().getPlugin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((vPlugin == null) || (!(vPlugin instanceof net.milkbowl.vault.Vault))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8738/buggy-version/src.me.armar.plugins.autorank.permissions.handlers.VaultPermissionsHandler.java", "BodyUseAPI": [], "Fixed commit": "14139a0e7c0a1dc0c88368649281e42b8955c357", "Url": "https://api.github.com/repos/Armarr/Autorank-2", "Date": "2014-04-07T21:25:41Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(right.isPointed())) { angleAim = 90 - (90 * (java.lang.Math.signum(getXVel()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4676/buggy-version/Pineapple.src.com.example.pineapple.Protagonist.java", "BodyUseAPI": [], "Fixed commit": "8a85487ba900fd5174159aafc5129360f0399c66", "Url": "https://api.github.com/repos/oskarwaglund/project-pineapple", "Date": "2013-05-10T18:08:39Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mysql.jdbc.NonRegisteringDriver.parseURL(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (urlProps == null) { throw com.mysql.jdbc.SQLError.createSQLException(com.mysql.jdbc.Messages.getString(\"MysqlDataSource.BadUrl\", new java.lang.Object[]{ jdbcUrlToUse }), SQLError.SQL_STATE_CONNECTION_FAILURE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5036/buggy-version/src.com.mysql.jdbc.jdbc2.optional.MysqlDataSource.java", "BodyUseAPI": [], "Fixed commit": "6e9486ee466b23e42ed02acb8065795fb2403acb", "Url": "https://api.github.com/repos/mysql/mysql-connector-j", "Date": "2016-08-31T11:34:38Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isTagNameStartCharacter(next)) { return parseTagNameElement(selector, position); }else if (isDot(next)) { try { next = getNextChar(selector, position); if (isStartStep(next)) { return parseStep(selector, position); }else { return getCheckResultWithError(\"Wrong symbol after first '.' in locator\", position, \"Delete wrong symbol or add '/' after '.'\"); } } catch (com.unknown.seleniumplugin.checkers.selectorscheckers.exceptions.EndOfSelector endOfSelector) { return getCheckResultWithError(\"Locator can't contains only '/' symbol.\", position, \"Add second '/' and locator value\"); } }else if (isAnyElement(next)) { try { next = getNextChar(selector, position); if (isStartStep(next)) { return parseStep(selector, position); }else { return getCheckResultWithError(\"Wrong symbol after '*' \", position, \"Add '/' and next child description or '[' and predicate after '*'\"); } } catch (com.unknown.seleniumplugin.checkers.selectorscheckers.exceptions.EndOfSelector endOfSelector) { return getSuccessCheckResult(); } }else { return getCheckResultWithError(\"Locator starts not with '//' or '.' or '*' symbols.\", position, \"Add '//' or '.' or '*' to the locator start\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7028/buggy-version/src.com.unknown.seleniumplugin.checkers.selectorscheckers.impl.xpath.XpathSelectorChecker.java", "BodyUseAPI": ["com.unknown.seleniumplugin.checkers.selectorscheckers.impl.xpath.XpathSelectorChecker.isDot(char)"], "Fixed commit": "244c4f16d7a97414b30f8b3c158a9853baade5c2", "Url": "https://api.github.com/repos/perfect-test/selenium_idea_plugin", "Date": "2015-03-16T11:32:57Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quirksMode == (org.sql2o.QuirksMode.DB2)) { colName = metadata.getColumnName(colIdx); }else { colName = metadata.getColumnLabel(colIdx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5368/buggy-version/src.main.java.org.sql2o.data.TableFactory.java", "BodyUseAPI": [], "Fixed commit": "ef6827bb207e3f04ef5fccc862bc295eb2049c25", "Url": "https://api.github.com/repos/aaberg/sql2o", "Date": "2013-02-20T13:27:03Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.connection.getSql2o().quirksMode) == (QuirksMode.DB2)) { colName = meta.getColumnName(colIdx); }else { colName = meta.getColumnLabel(colIdx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5368/buggy-version/src.main.java.org.sql2o.Query.java", "BodyUseAPI": [], "Fixed commit": "ef6827bb207e3f04ef5fccc862bc295eb2049c25", "Url": "https://api.github.com/repos/aaberg/sql2o", "Date": "2013-02-20T13:27:03Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == path) { path = baseFolder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1520/buggy-version/app.src.main.java.com.door43.translationstudio.ImportFileChooserActivity.java", "BodyUseAPI": [], "Fixed commit": "ef6cc963c6c6aeaa3b25de447100f51a97e4a19c", "Url": "https://api.github.com/repos/PhotoNomad0/ts-android", "Date": "2016-01-06T11:12:20Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ehcache.xml.ConfigurationParser.1.parseCacheExtension(org.w3c.dom.Element)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(configsMap.containsKey(serviceConfiguration.getClass()))) { configsMap.put(serviceConfiguration.getClass(), serviceConfiguration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2858/buggy-version/xml.src.main.java.org.ehcache.xml.ConfigurationParser.java", "BodyUseAPI": ["java.util.Map<java.lang.Class<? extends org.ehcache.spi.service.ServiceConfiguration>, org.ehcache.spi.service.ServiceConfiguration<?>>.put(serviceConfiguration.getClass(),org.ehcache.spi.service.ServiceConfiguration<?>)", "org.ehcache.spi.service.ServiceConfiguration<?>.getClass()"], "Fixed commit": "24449dbd65ef8433f5e7eec5829b5b85e8e68b37", "Url": "https://api.github.com/repos/ehcache/ehcache3", "Date": "2016-06-03T08:42:48Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (room.legacyType.equals(\"STANDARD\")) { stdRooms.add(room); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8770/buggy-version/core.src.main.java.com.shatteredpixel.shatteredpixeldungeon.levels.RegularLevel.java", "BodyUseAPI": ["java.util.ArrayList<com.shatteredpixel.shatteredpixeldungeon.levels.rooms.Room>.add(com.shatteredpixel.shatteredpixeldungeon.levels.rooms.Room)"], "Fixed commit": "61f4a909c53a9260bab77312c49b07975e73ea7b", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2017-06-11T08:18:11Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doSleep) { try { java.lang.Thread.sleep(sleepTime); } catch (java.lang.Exception ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2008/buggy-version/src.main.java.Strategy.java", "BodyUseAPI": [], "Fixed commit": "077276955f8b5816a33b025cadb31fb9232cb6c0", "Url": "https://api.github.com/repos/Peonsson/Mergesort", "Date": "2016-03-18T11:51:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (argString != null) { java.lang.String[] args = argString.split(\"\\\\s+\", 0); while (i < (args.length)) { if ((args[i].equals(\"-o\")) && ((i + 1) < (args.length))) { Settings.INSTANCE.setProp(Settings.XML_OUT_SETT, args[(++i)]); } i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6000/buggy-version/Dapij.src.main.java.dapij.Dapij.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String,int)"], "Fixed commit": "1e440da0f387f32a1e703a485cb15d9efdc197e0", "Url": "https://api.github.com/repos/ContemplateLtd/dapij", "Date": "2012-07-13T17:24:34Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 0) { currency = com.greatmancode.craftconomy3.Common.getInstance().getCurrencyManager().getCurrency(CurrencyManager.defaultCurrencyID); }else { if ((com.greatmancode.craftconomy3.Common.getInstance().getCurrencyManager().getCurrency(args[0])) != null) { currency = com.greatmancode.craftconomy3.Common.getInstance().getCurrencyManager().getCurrency(args[0]); }else { com.greatmancode.craftconomy3.Common.getInstance().getServerCaller().sendMessage(sender, \"{{DARK_RED}}That currency doesn't exist!\"); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2894/buggy-version/src.main.java.com.greatmancode.craftconomy3.commands.money.TopCommand.java", "BodyUseAPI": ["com.greatmancode.craftconomy3.Common.getInstance().getCurrencyManager().getCurrency(java.lang.String)", "com.greatmancode.craftconomy3.Common.getInstance().getCurrencyManager().getCurrency(java.lang.String)"], "Fixed commit": "185a6a5bffd77d5a3f2a803fc2e8a02e5fa273a7", "Url": "https://api.github.com/repos/greatman/craftconomy3", "Date": "2012-11-02T12:15:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerName.length()) > 15) cancelPlayerNameEntry = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3699/buggy-version/AdvanceWars.src.org.game.advwars.ChangePlayerName.java", "BodyUseAPI": [], "Fixed commit": "07c1610dccd383807c1b697c62014c833544573a", "Url": "https://api.github.com/repos/NotThatImportant/Senior-Project-Code", "Date": "2011-11-26T02:09:15Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.markupartist.android.widget.ActionBar.getDisplayOptionValue(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (usingLogo) { com.markupartist.android.widget.ActionBar.Action homeAction = findAction(R.id.actionbar_item_home); if (homeAction != null) { mHomeLogo.setTag(homeAction); mHomeLogo.setOnClickListener(mActionClicked); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6802/buggy-version/actionbar.src.com.markupartist.android.widget.ActionBar.java", "BodyUseAPI": [], "Fixed commit": "7c794bb5a762179a989c49089b66daa5dbd7ec6a", "Url": "https://api.github.com/repos/johannilsson/android-actionbar", "Date": "2011-10-18T12:11:38Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.inUse)) { try { initJIFInventory(); } catch (java.io.IOException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3504/buggy-version/src.GUI.JPPrincipal.java", "BodyUseAPI": [], "Fixed commit": "a389ead7e0cdb2460fdd9ac5227eb1f641c885e0", "Url": "https://api.github.com/repos/brogud2694/supermercadojava", "Date": "2017-04-15T20:46:06Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.size()) == 0) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7298/buggy-version/src.edu.uw.easysrl.syntax.grammar.Combinator.java", "BodyUseAPI": [], "Fixed commit": "de22690f91ab662ea316d2a55250469a3de90bd3", "Url": "https://api.github.com/repos/nafitzgerald/EasySRL", "Date": "2016-02-25T20:49:38Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode != (android.app.Activity.RESULT_OK)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2587/buggy-version/app.src.main.java.com.example.rotem.beats.Fragments.PlaylistEditFragment.java", "BodyUseAPI": [], "Fixed commit": "4a755883771e53ebbcb3b90417cb648ed07a4cec", "Url": "https://api.github.com/repos/rotem-ad/Beats", "Date": "2016-08-10T20:51:11Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode != (android.app.Activity.RESULT_OK)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2587/buggy-version/app.src.main.java.com.example.rotem.beats.Fragments.PlaylistNewFragment.java", "BodyUseAPI": [], "Fixed commit": "4a755883771e53ebbcb3b90417cb648ed07a4cec", "Url": "https://api.github.com/repos/rotem-ad/Beats", "Date": "2016-08-10T20:51:11Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tools.getScanner.getLong(java.util.Scanner,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (number < 3) { java.lang.System.out.println(((\"There are no prime numbers less than or equal to \" + number) + \".\")); }else if (min == 1) { projects.PrimeNumber.getPrimeInRange(min, number, list); projects.PrimeNumber.printPrimeInRange(list.size(), number, list); }else if (min == number) { projects.PrimeNumber.printPrimeInRange(list.size(), number, list); }else if (min > number) { java.lang.Long max = ((long) (3)); int index = 0; while (max < number) { index++; max = list.get(index); } projects.PrimeNumber.printPrimeInRange(index, number, list); }else { projects.PrimeNumber.getPrimeInRange(min, number, list); projects.PrimeNumber.printPrimeInRange(list.size(), number, list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5690/buggy-version/src.projects.PrimeNumber.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "projects.PrimeNumber.printPrimeInRange(int,java.lang.Long,java.util.ArrayList<java.lang.Long>)", "projects.PrimeNumber.getPrimeInRange(java.lang.Long,java.lang.Long,java.util.ArrayList<java.lang.Long>)", "projects.PrimeNumber.printPrimeInRange(int,java.lang.Long,java.util.ArrayList<java.lang.Long>)", "projects.PrimeNumber.getPrimeInRange(java.lang.Long,java.lang.Long,java.util.ArrayList<java.lang.Long>)", "projects.PrimeNumber.printPrimeInRange(int,java.lang.Long,java.util.ArrayList<java.lang.Long>)", "projects.PrimeNumber.printPrimeInRange(int,java.lang.Long,java.util.ArrayList<java.lang.Long>)"], "Fixed commit": "52e243c4bc5e8e684b60406b2af35e7db34f149c", "Url": "https://api.github.com/repos/AllanWang/Learning-Java", "Date": "2015-12-27T07:42:20Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.lastIndexOf(\"also\\n\")) != (-1)) { return (sb.substring(0, sb.lastIndexOf(\"also\\n\"))) + \"@*/\"; }else { return sb.append(\"@*/\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5048/buggy-version/src.main.java.Contract.Contract.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.StringBuilder.lastIndexOf(java.lang.String)", "java.lang.StringBuilder.substring(int,int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "cf808b82aeb43820c63a753d105212ba1fbcbaa2", "Url": "https://api.github.com/repos/Meddan/SpecIT", "Date": "2017-02-16T10:13:37Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is_mac) { delete_acc = \"BACK_SPACE\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8571/buggy-version/core-task-impl.src.main.java.org.cytoscape.task.internal.CyActivator.java", "BodyUseAPI": [], "Fixed commit": "86cf0fc2250a548d26514da031823b375d1398d1", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2016-03-10T23:18:11Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.datetime.minute) < 10) { minutes = \"0\" + minutes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1469/buggy-version/src.backend.Message.java", "BodyUseAPI": [], "Fixed commit": "3901dc8e869e1006886ba0d294e557b69626f648", "Url": "https://api.github.com/repos/Afterglow375/CryptoChat", "Date": "2014-03-31T21:38:46Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.head) != null) { this.head.setPreNode(doublyNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/954/buggy-version/Mavenized_Algorithms.src.main.java.com.data.structure.DoublyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "427e4cc017f387dd9a2981e9acf48ab0935d4cb9", "Url": "https://api.github.com/repos/AngelThread/Algorithms", "Date": "2016-09-08T12:06:12Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.modelRunner) != null) { this.modelRunner.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7505/buggy-version/src.main.java.ml.shifu.shifu.udf.EvalScoreUDF.java", "BodyUseAPI": [], "Fixed commit": "91fa546b27948d24a7ec9a7dfe8ffbfb56c1c033", "Url": "https://api.github.com/repos/huzza/shifu", "Date": "2016-12-24T06:53:48Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) adapter = new com.example.lenovo.movies.MovieList.MoviesAdapter(getActivity(), R.layout.listitem, moviesList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7874/buggy-version/app.src.main.java.com.example.lenovo.movies.MovieList.MainList.java", "BodyUseAPI": [], "Fixed commit": "832722c66790c64fc586389266e262d4498f547b", "Url": "https://api.github.com/repos/AhmedHassaan/Movie-App", "Date": "2016-11-01T23:49:16Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ij.ImagePlus.getHeight()", "ij.ImagePlus.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((tmp_pt[1]) + k) < height) && (((tmp_pt[1]) + k) > 0)) && (((tmp_pt[0]) + j) < width)) && (((tmp_pt[0]) + j) > 0)) new_pix[(((((k + lateral_half) * lateral_half) * 2) + j) + lateral_half)] = old_pix[(((((tmp_pt[1]) + k) * width) + (tmp_pt[0])) + j)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5075/buggy-version/src.main.java.splugins.find_colocalization_candidates_3D_percentile.java", "BodyUseAPI": [], "Fixed commit": "12a9796f5cc06e15c172d9b9e377c97b4e4efdf2", "Url": "https://api.github.com/repos/jouyun/smc-plugins", "Date": "2014-03-18T02:02:04Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ij.ImagePlus.getHeight()", "ij.ImagePlus.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((((tmp_pt[1]) + k) < height) && (((tmp_pt[1]) + k) > 0)) && (((tmp_pt[0]) + j) < width)) && (((tmp_pt[0]) + j) > 0)) new_pix[(((((k + lateral_half) * lateral_half) * 2) + j) + lateral_half)] = old_pix[(((((tmp_pt[1]) + k) * width) + (tmp_pt[0])) + j)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5075/buggy-version/src.main.java.splugins.find_colocalization_candidates_3D_percentile.java", "BodyUseAPI": [], "Fixed commit": "12a9796f5cc06e15c172d9b9e377c97b4e4efdf2", "Url": "https://api.github.com/repos/jouyun/smc-plugins", "Date": "2014-03-18T02:02:04Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getBooleanExtra(Intent.ACTION_SEND,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!sendAction) { android.content.Intent copyToClipboardIntent = new android.content.Intent(getSherlockActivity(), com.owncloud.android.ui.activity.CopyToClipboardActivity.class); java.util.List<android.content.pm.ResolveInfo> copyToClipboard = pm.queryIntentActivities(copyToClipboardIntent, 0); if (!(copyToClipboard.isEmpty())) { activities.add(copyToClipboard.get(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2094/buggy-version/src.com.owncloud.android.ui.dialog.ShareLinkToDialog.java", "BodyUseAPI": [], "Fixed commit": "7c0865ae0fc5d9374c0386a7392005098c7ccef4", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2014-02-25T10:18:43Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (maven3Builder.isDebug()) { logger.setThreshold(PrintStreamLogger.LEVEL_DEBUG); }else if (maven3Builder.isQuiet()) { logger.setThreshold(PrintStreamLogger.LEVEL_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3391/buggy-version/maven-plugin.src.main.java.hudson.maven.Maven3Builder.java", "BodyUseAPI": [], "Fixed commit": "cff691e05a415c860396b9d369c82e01b4aef69d", "Url": "https://api.github.com/repos/jenkinsci/jenkins", "Date": "2013-02-16T17:30:18Z"},
{"Line": "=>1027", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.getName().equals(\"this$0\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6422/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "4c8dc1cf50662f490a2239ea5f73d174cf3347c9", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-08-28T11:15:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu._4fh.convertHtaccessLighty.htaccess.data.Rewrite.removeQuotes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (target.equals(\"-\")) { throw new eu._4fh.convertHtaccessLighty.htaccess.data.ParseException(((\"Ignored \\\"\" + line) + \"\\\" because you can\\'t implement this in lighty-config.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3051/buggy-version/src.eu._4fh.convertHtaccessLighty.htaccess.data.Rewrite.java", "BodyUseAPI": [], "Fixed commit": "100fe776d98d730faadb20f007efdb876e5a904d", "Url": "https://api.github.com/repos/FH3095/convhtaccess", "Date": "2012-11-26T13:29:52Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jp.redmine.redmineclient.BuildConfig.DEBUG) { for (org.apache.http.Header h : msg.getAllHeaders()) android.util.Log.d(\"request header\", h.toString()); android.util.Log.i(\"requestGet\", (\"Status: \" + status)); android.util.Log.i(\"requestGet\", (\"Protocol: \" + (response.getProtocolVersion()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5820/buggy-version/OpenRedmine.src.jp.redmine.redmineclient.task.SelectDataTask.java", "BodyUseAPI": [], "Fixed commit": "3d9ed170c851aa08312ea98d9b221b9f6681a46c", "Url": "https://api.github.com/repos/indication/OpenRedmine", "Date": "2013-05-09T16:48:56Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jp.redmine.redmineclient.BuildConfig.DEBUG) { java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(stream)); java.lang.String str; while ((str = reader.readLine()) != null) { android.util.Log.d(\"requestGet\", str); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5820/buggy-version/OpenRedmine.src.jp.redmine.redmineclient.task.SelectDataTask.java", "BodyUseAPI": [], "Fixed commit": "3d9ed170c851aa08312ea98d9b221b9f6681a46c", "Url": "https://api.github.com/repos/indication/OpenRedmine", "Date": "2013-05-09T16:48:56Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jp.redmine.redmineclient.BuildConfig.DEBUG) android.util.Log.d(\"post\", entity.getContent().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5820/buggy-version/OpenRedmine.src.jp.redmine.redmineclient.task.SelectTimeEntriesPost.java", "BodyUseAPI": [], "Fixed commit": "3d9ed170c851aa08312ea98d9b221b9f6681a46c", "Url": "https://api.github.com/repos/indication/OpenRedmine", "Date": "2013-05-09T16:48:56Z"},
{"Line": "=>1519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((triangle.isTriangle) || (result == null)) result = triangle;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7840/buggy-version/src.org.nschmidt.ldparteditor.data.VM01SelectHelper.java", "BodyUseAPI": [], "Fixed commit": "f6fa315ec963987783fb2a3fd14b70852a87448d", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-20T21:46:24Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((second) == null) { if ((first) == null) { first = \"0.\"; }else { first = (first) + \".\"; } }else { second = (second) + \".\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6748/buggy-version/src.Calculator.java", "BodyUseAPI": [], "Fixed commit": "fad064cbe79048b560cceadf9a2fdd416604fcfc", "Url": "https://api.github.com/repos/tritran23/WindowsCalculatorCopy", "Date": "2016-01-12T04:19:18Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pagesToVisit.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3439/buggy-version/src.main.java.annoying34.website.Spider.java", "BodyUseAPI": [], "Fixed commit": "d20d7b5778367ced36027120fc8c64bf41d246d7", "Url": "https://api.github.com/repos/Annoying34/Annoying34-Backend", "Date": "2017-07-09T20:18:12Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAuth.getCurrentUser()) != null) { com.example.david.equationapp.MainActivity.db.removeValueEventListener(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4727/buggy-version/src.EquationApp.app.src.main.java.com.example.david.equationapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e7c9be59291bca64ee4134c97f373bbcb899e908", "Url": "https://api.github.com/repos/davdevor/C490Project", "Date": "2017-11-22T22:53:49Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (port == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5707/buggy-version/src.main.java.tachyon.client.TachyonFile.java", "BodyUseAPI": [], "Fixed commit": "2d5fdcc387454ba47e9d543a3b1a468ba0be64af", "Url": "https://api.github.com/repos/amplab/tachyon", "Date": "2013-04-06T15:39:23Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subItems) != null) return subItems;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4436/buggy-version/app.src.main.java.com.gmail.dleemcewen.tandemfieri.MenuBuilder.MenuCatagory.java", "BodyUseAPI": [], "Fixed commit": "c9d5a47a34cf2a46010f33d7a9ca617befaa58c6", "Url": "https://api.github.com/repos/JeremiahFly/TandemFieri", "Date": "2017-02-16T23:32:29Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.getBytes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((itemB.length) != 1) throw new java.io.InvalidObjectException((\"Invalid char:\" + item));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1376/buggy-version/src.java.com.bizosys.hsearch.treetable.client.HSearchQuery.java", "BodyUseAPI": [], "Fixed commit": "eadeba5e0b19439aefd5e45a14265ee7d0310c7c", "Url": "https://api.github.com/repos/bizosys/hsearch-core", "Date": "2013-06-05T09:12:43Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/51/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "95ee19049aeab6d881726e3253b9435681c1eef5", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/51/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "95ee19049aeab6d881726e3253b9435681c1eef5", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((batch.size()) > 0) { io.searchbox.core.Bulk bulk = new io.searchbox.core.Bulk.Builder().defaultIndex(index).defaultType(type).addAction(batch).build(); io.searchbox.core.BulkResult result = client.execute(bulk); if (!(result.isSucceeded())) { for (io.searchbox.core.BulkResult.BulkResultItem item : result.getFailedItems()) { java.lang.System.out.println(item.toString()); } throw new java.lang.IllegalStateException((\"Can't update Elasticsearch: \" + (result.getErrorMessage()))); } batch.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2664/buggy-version/sdks.java.io.elasticsearch.src.main.java.org.apache.beam.sdk.io.elasticsearch.ElasticsearchIO.java", "BodyUseAPI": ["new io.searchbox.core.Bulk.Builder().defaultIndex(index).defaultType(type).addAction(java.util.ArrayList<io.searchbox.core.Index>)", "new io.searchbox.core.Bulk.Builder().defaultIndex(index).defaultType(type).addAction(batch).build()", "java.util.ArrayList<io.searchbox.core.Index>.clear()"], "Fixed commit": "0d518d1498cf7c7e8d35198da58b2a41cc583cd3", "Url": "https://api.github.com/repos/jbonofre/beam", "Date": "2016-09-21T14:38:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((page.getUrl().regex(((\"http://\" + (com.webmagin.LianJiaHousePageProcessor.cityname)) + \"\\\\.fang\\\\.lianjia\\\\.com/loupan/pg1\")).match()) && ((com.webmagin.LianJiaHousePageProcessor.pageNum) == null)) { com.webmagin.LianJiaHousePageProcessor.pageNum = page.getHtml().xpath(\"//span[@id='findCount']/text()\").get(); java.lang.System.out.println((\"pageNum================\" + (com.webmagin.LianJiaHousePageProcessor.pageNum))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1309/buggy-version/src.com.webmagin.LianJiaHousePageProcessor.java", "BodyUseAPI": ["page.getHtml().xpath(\"//span[@id='findCount']/text()\").get()", "java.io.PrintStream.println(java.lang.String)", "page.getHtml().xpath(java.lang.String)", "us.codecraft.webmagic.Page.getHtml()"], "Fixed commit": "b2fd85e11a2dda1defb7054ce3fe7afbd9cec769", "Url": "https://api.github.com/repos/renyan11/webMagicHouse-JDBC", "Date": "2017-07-07T02:29:05Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isEmpty(list)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5257/buggy-version/src.main.java.com.ivy.daniel.collector.base.DataStorage.java", "BodyUseAPI": [], "Fixed commit": "6daa379f873941c30500b5ca38194d4ec70fe24a", "Url": "https://api.github.com/repos/rotaryivy/collector", "Date": "2017-04-25T11:34:16Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (src == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2401/buggy-version/PATHojinzi.base.android.image.ImageUtil.java", "BodyUseAPI": [], "Fixed commit": "e8277fe73ba083f747d88206841d9a7d235e8337", "Url": "https://api.github.com/repos/PATHojinzi123/PATHojinzi-openSource-base", "Date": "2016-05-06T00:27:28Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((accessor.getTileEntity()) instanceof crazypants.enderio.conduit.IConduitBundle) && (crazypants.enderio.conduit.ConduitUtil.isFacadeHidden(((crazypants.enderio.conduit.IConduitBundle) (accessor.getTileEntity())), accessor.getPlayer()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2865/buggy-version/src.main.java.crazypants.enderio.waila.WailaCompat.java", "BodyUseAPI": [], "Fixed commit": "6d98bbe35f7cb599dbfa13b75750b065ed91bc8e", "Url": "https://api.github.com/repos/SleepyTrousers/EnderIO", "Date": "2015-04-01T22:54:28Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pageNo) == 1) org.egovernments.egoverp.activities.GrievanceActivity.grievanceAdapter.notifyItemRangeChanged(0, org.egovernments.egoverp.activities.GrievanceActivity.grievanceList.size()); else org.egovernments.egoverp.activities.GrievanceActivity.grievanceAdapter.notifyItemInserted(org.egovernments.egoverp.activities.GrievanceActivity.grievanceList.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3536/buggy-version/app.src.main.java.org.egovernments.egoverp.activities.GrievanceActivity.java", "BodyUseAPI": [], "Fixed commit": "efbf3ec66ff9d3a487231fe8816dba27ab38007d", "Url": "https://api.github.com/repos/egovernments/egov-mobile", "Date": "2016-04-04T12:39:20Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["messageAndOffset.message().key()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (keyPayload != null) { byte[] keyBytes = new byte[keyPayload.limit()]; keyPayload.get(keyBytes); key = new java.lang.String(keyBytes, charSet); }else { key = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3440/buggy-version/com.ibm.streamsx.messaging.impl.java.src.com.ibm.streamsx.messaging.kafka.SimpleConsumerClient.java", "BodyUseAPI": ["java.nio.ByteBuffer.get(byte[])", "java.nio.ByteBuffer.limit()"], "Fixed commit": "07743139e4e6030e19436df3108a99454af8432b", "Url": "https://api.github.com/repos/conglisc/streamsx.messaging", "Date": "2015-08-24T15:12:48Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value == null) otup.setString(name, \"\"); else otup.setString(name, new java.lang.String(value, com.ibm.streamsx.messaging.kafka.AttributeHelper.CS));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3440/buggy-version/com.ibm.streamsx.messaging.impl.java.src.com.ibm.streamsx.messaging.kafka.AttributeHelper.java", "BodyUseAPI": ["com.ibm.streams.operator.OutputTuple.setString(java.lang.String,java.lang.String)"], "Fixed commit": "07743139e4e6030e19436df3108a99454af8432b", "Url": "https://api.github.com/repos/conglisc/streamsx.messaging", "Date": "2015-08-24T15:12:48Z"},
{"Line": "=>1335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vertexClass instanceof de.uni_koblenz.jgralab.Vertex) { vc = ((de.uni_koblenz.jgralab.Vertex) (vertexClass)).getAttributedElementClass(); }else { vc = ((de.uni_koblenz.jgralab.schema.VertexClass) (schema.getAttributedElementClass(((java.lang.String) (vertexClass))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6416/buggy-version/src.de.uni_koblenz.edl.GraphBuilderBaseImpl.java", "BodyUseAPI": [], "Fixed commit": "5bc210791c731acd6b3aa79a2df2ea0a29cd6f6f", "Url": "https://api.github.com/repos/jgralab/edl", "Date": "2013-03-12T11:32:13Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Files.exists(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (configDirExists) { logger.info(\"Bundles already provisioned, this must be a restart!!\"); }else { logger.info(\"Provisioning bundles first time!!\"); com.adeptj.runtime.osgi.Bundles.provisionBundles(systemBundleContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4365/buggy-version/src.main.java.com.adeptj.runtime.osgi.FrameworkBootstrap.java", "BodyUseAPI": [], "Fixed commit": "303c35663f30ba008745ac01de6a9309afe3401b", "Url": "https://api.github.com/repos/AdeptJ/adeptj-runtime", "Date": "2017-08-16T04:50:21Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (markers != null) { for (long marker : markers) { restartMarkers.add(marker); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/908/buggy-version/components.scifio.src.loci.formats.services.JPEGTurboServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1af0f61393c9ea7009458115bb4f8baf9bf981fd", "Url": "https://api.github.com/repos/melissalinkert/bioformats", "Date": "2012-10-10T21:36:02Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.core.io.Resource.createRelative(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(r.exists())) { org.mitre.openid.connect.config.JsonMessageSource.logger.debug(\"Fallback locale to language only.\"); filename = (((locale.getLanguage()) + (java.io.File.separator)) + namespace) + \".json\"; r = getBaseDirectory().createRelative(filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3798/buggy-version/openid-connect-server.src.main.java.org.mitre.openid.connect.config.JsonMessageSource.java", "BodyUseAPI": [], "Fixed commit": "0c032a829dcbb01c9ba1e058e3d423c9b5dae090", "Url": "https://api.github.com/repos/liouPATHo/OpenID-Connect-Java-Spring-Server", "Date": "2016-04-07T06:39:19Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mimeType.equals(BodyRule.MimeTypeEnum.JSON)) { methodBilder.addStatement(\"$T.config = new $T().defaultParserType($T.GSON)\", raPathClass, com.jayway.restassured.path.json.config.JsonPathConfig.class, com.jayway.restassured.path.json.config.JsonParserType.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8052/buggy-version/rarc-core.src.main.java.ru.lanwen.raml.rarc.util.ResponseParserClass.java", "BodyUseAPI": [], "Fixed commit": "e8dc4f82d34ae6489c1cae8e63ef4bbe8165b9c9", "Url": "https://api.github.com/repos/qameta/rarc", "Date": "2016-07-01T12:14:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (endDate.after(endOfWeek)) { timeEntries = new ch.bli.mez.util.TimeEntriesPerWeek(employee, showMissions, startDate, endOfWeek); }else { timeEntries = new ch.bli.mez.util.TimeEntriesPerWeek(employee, showMissions, startDate, endDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8195/buggy-version/src.main.java.ch.bli.mez.util.TimeEntriesPerEmployee.java", "BodyUseAPI": [], "Fixed commit": "fb861f7b8f19b0cebfce58aed20700242cda4f6c", "Url": "https://api.github.com/repos/mibto/mez", "Date": "2014-01-18T19:18:49Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.tda.gairoutes.misc.util.NetworkUtil.isConnectedToInternet())) { timber.log.Timber.d(\"No Internet connection. Can't download file.\"); if (downloadListener != null) { downloadListener.onDownloadError(url, null); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6844/buggy-version/app.src.main.java.com.tda.gairoutes.manager.DownloadManager.java", "BodyUseAPI": [], "Fixed commit": "8e2c40d0e87c934ca72ba6e5892fdc7d2be09de2", "Url": "https://api.github.com/repos/thedumbestapps/gairoutes", "Date": "2015-09-28T21:22:52Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameters.isEmpty()) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4599/buggy-version/src.main.java.net.technolords.micro.config.ConfigurationManager.java", "BodyUseAPI": [], "Fixed commit": "874e85c42fb84f1cb91dbb82ce3c87071016ad0d", "Url": "https://api.github.com/repos/Technolords/microservice-mock", "Date": "2017-09-27T18:54:30Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (controller != null) summaryReportTracker.put(controller, model);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5394/buggy-version/src.main.java.uk.ac.ebi.pride.toolsuite.gui.PrideInspectorContext.java", "BodyUseAPI": ["java.util.Map<uk.ac.ebi.pride.utilities.data.controller.DataAccessController, javax.swing.ListModel>.put(uk.ac.ebi.pride.utilities.data.controller.DataAccessController,javax.swing.ListModel)"], "Fixed commit": "1e5f54f587ca9119dbcd2f11d7ee97c0ba294296", "Url": "https://api.github.com/repos/PRIDE-Toolsuite/pride-inspector", "Date": "2014-10-14T16:40:11Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getPlayer().getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((inh.getAmount()) > 1) { inh.setAmount(((inh.getAmount()) - 1)); pi.setItemInHand(inh); }else { pi.setItemInHand(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2855/buggy-version/src.us.deathmarine.diablodrops.listeners.TomeListener.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getAmount()", "org.bukkit.inventory.ItemStack.setAmount(((inh.getAmount()) - 1))", "org.bukkit.inventory.PlayerInventory.setItemInHand(org.bukkit.inventory.ItemStack)"], "Fixed commit": "b7a2da9c31ed8de2a30e60e271e3666b8120b2e6", "Url": "https://api.github.com/repos/cybertiger/DiabloDrops", "Date": "2014-04-10T17:26:02Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mycompany.myapp.MainActivity.2.getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (locationManager == null) { locationManager = ((android.location.LocationManager) (getApplicationContext().getSystemService(Context.LOCATION_SERVICE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2515/buggy-version/androidExamples.app.src.main.java.com.mycompany.myapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c7ea466a357d7da2294df1fd037f566fad374ec9", "Url": "https://api.github.com/repos/billy124/android-examples", "Date": "2015-01-14T21:51:52Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (projectRulePath != null) { useProjectRule = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6047/buggy-version/src.main.java.hudson.plugins.logparser.LogParserPublisher.java", "BodyUseAPI": [], "Fixed commit": "6eefbb631d749fb4e2f4bd2c8c830be50a4065fc", "Url": "https://api.github.com/repos/vaskrist/log-parser-plugin", "Date": "2015-09-28T19:26:19Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parsingRulesPath != null) { useProjectRule = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6047/buggy-version/src.main.java.hudson.plugins.logparser.LogParserPublisher.java", "BodyUseAPI": [], "Fixed commit": "6eefbb631d749fb4e2f4bd2c8c830be50a4065fc", "Url": "https://api.github.com/repos/vaskrist/log-parser-plugin", "Date": "2015-09-28T19:26:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lecture.getDayOfWeek()) != day) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5865/buggy-version/mobile.src.main.java.com.aidangrabe.studentapp.services.TimeTableService.java", "BodyUseAPI": [], "Fixed commit": "bf7460aeb3650481894fff5c863a001cd4888359", "Url": "https://api.github.com/repos/aidangrabe/student-wear-app", "Date": "2015-02-09T20:48:16Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(t.getCdr().isNull())) indent(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5306/buggy-version/src.Regular.java", "BodyUseAPI": [], "Fixed commit": "6be75bceccab8c759d9218649a6079c85d232d80", "Url": "https://api.github.com/repos/jrotolo/scint", "Date": "2014-10-08T17:31:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.value()) != null) { ineo.getIndexService().remove(delNode, field.getIndexName(), field.value()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3660/buggy-version/neoorm.src.main.java.jo4neo.impl.DeleteOpertation.java", "BodyUseAPI": ["jo4neo.impl.FieldContext.getIndexName()", "jo4neo.impl.FieldContext.value()", "ineo.getIndexService().remove(org.neo4j.graphdb.Node,field.getIndexName(),field.value())"], "Fixed commit": "a6c510edd52c45eb9a2a627e692ed157874ca842", "Url": "https://api.github.com/repos/salgmachine/neoorm", "Date": "2013-09-02T20:14:39Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qcadoo.model.api.Entity.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (takenForControlQuantity == null) { takenForControlQuantity = java.math.BigDecimal.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7043/buggy-version/mes-plugins.mes-plugins-quality-controls.src.main.java.com.qcadoo.mes.qualityControls.QualityControlService.java", "BodyUseAPI": [], "Fixed commit": "d5863965552c8264b48ba28bcb968be85fe7f70e", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2011-04-08T10:51:37Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qcadoo.model.api.Entity.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rejectedQuantity == null) { rejectedQuantity = java.math.BigDecimal.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7043/buggy-version/mes-plugins.mes-plugins-quality-controls.src.main.java.com.qcadoo.mes.qualityControls.QualityControlService.java", "BodyUseAPI": [], "Fixed commit": "d5863965552c8264b48ba28bcb968be85fe7f70e", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2011-04-08T10:51:37Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qcadoo.model.api.Entity.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (controlledQuantity == null) { controlledQuantity = java.math.BigDecimal.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7043/buggy-version/mes-plugins.mes-plugins-quality-controls.src.main.java.com.qcadoo.mes.qualityControls.QualityControlService.java", "BodyUseAPI": [], "Fixed commit": "d5863965552c8264b48ba28bcb968be85fe7f70e", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2011-04-08T10:51:37Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qcadoo.model.api.Entity.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (acceptedDefectsQuantity == null) { acceptedDefectsQuantity = java.math.BigDecimal.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7043/buggy-version/mes-plugins.mes-plugins-quality-controls.src.main.java.com.qcadoo.mes.qualityControls.QualityControlService.java", "BodyUseAPI": [], "Fixed commit": "d5863965552c8264b48ba28bcb968be85fe7f70e", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2011-04-08T10:51:37Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((securityService.getCurrentUserName()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7043/buggy-version/mes-plugins.mes-plugins-orders.src.main.java.com.qcadoo.mes.orders.OrderService.java", "BodyUseAPI": [], "Fixed commit": "d5863965552c8264b48ba28bcb968be85fe7f70e", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2011-04-08T10:51:37Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userId != null) { throw new java.lang.IllegalArgumentException(\"Invalid Access Token\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/763/buggy-version/src.com.pratilipi.api.PurchaseApi.java", "BodyUseAPI": [], "Fixed commit": "9a19803b9a7038bbac83a2194236d58665cb3809", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2014-12-12T03:32:32Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userPratilipi.getPurchaseDate()) != null) { throw new java.lang.IllegalArgumentException(\"Content already purchased by the user\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/763/buggy-version/src.com.pratilipi.api.PurchaseApi.java", "BodyUseAPI": [], "Fixed commit": "9a19803b9a7038bbac83a2194236d58665cb3809", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2014-12-12T03:32:32Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hr.mogh.datastructures.trees.BinaryTreeNode.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (parent != null) { if ((parent.getRightChild()) == deletedNode) { parent.setRightChild(null); }else { parent.setLeftChild(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/187/buggy-version/src.hr.mogh.datastructures.trees.binary.BinarySearchTreeSolver.java", "BodyUseAPI": ["hr.mogh.datastructures.trees.BinaryTreeNode.setRightChild(<nulltype>)", "hr.mogh.datastructures.trees.BinaryTreeNode.getRightChild()", "hr.mogh.datastructures.trees.BinaryTreeNode.setLeftChild(<nulltype>)"], "Fixed commit": "22933c7cdf5cefefa323da57495ba7e0dcc012ce", "Url": "https://api.github.com/repos/vladokovac/getting-better", "Date": "2016-11-06T14:12:29Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(saveDir.exists())) { saveDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1976/buggy-version/src.leibniz.hu.forumspider.MakeWeb.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "41c486970bc52e9df55496b06d267e13fee8a3ca", "Url": "https://api.github.com/repos/Leibnizhu/ForumSpider", "Date": "2016-01-30T00:29:43Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (artifact == null) { return allTargetDependenciesAvailable(build); }else { return (isRequiredDependency(artifact)) && (allTargetDependenciesAvailable(build)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6775/buggy-version/src.main.java.com.verba.language.build.targets.interfaces.BuildTarget.java", "BodyUseAPI": ["com.verba.language.build.targets.interfaces.BuildTarget.isRequiredDependency(com.verba.language.build.targets.artifacts.interfaces.BuildArtifact)"], "Fixed commit": "6ede0dd9078d6c050f38295554cc0992a45ae820", "Url": "https://api.github.com/repos/sircodesalotOfTheRound/verba", "Date": "2015-03-17T19:13:52Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!objectModified) { this.add((i++), newObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6488/buggy-version/src.com.example.lidkopingsh.model.SyncableArrayList.java", "BodyUseAPI": [], "Fixed commit": "094f96ff0f02d539eec809b854c263fc8aeb5510", "Url": "https://api.github.com/repos/Farenheight/Lidkoping-SH", "Date": "2013-09-24T09:00:10Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tokenType.equals(TokenType.NUMBER)) { return java.lang.Double.parseDouble(value); }else if ((op.equals(ComparisonOperator.LIKE)) && (value.equals(\".*\"))) { return \"%\"; }else { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8191/buggy-version/eagle-core.eagle-query.eagle-storage-jdbc.src.main.java.org.apache.eagle.storage.jdbc.criteria.impl.ExpressionCriterionBuilder.java", "BodyUseAPI": [], "Fixed commit": "f3a3687003f51d39ed32c4be0dd4bdc57803c1c3", "Url": "https://api.github.com/repos/yonzhang/eagle", "Date": "2016-01-20T01:27:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((models.SaveFile.instance().getNumberOfLevels()) == 0) { java.io.File[] levelFiles = new java.io.File(controllers.MoveToLevelSelectController.pathToLevelsFolder).listFiles(); for (java.io.File i : levelFiles) { models.SaveFile.instance().addLevel(parseData(loadLevel(i))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3678/buggy-version/src.controllers.MoveToLevelSelectController.java", "BodyUseAPI": [], "Fixed commit": "13f6a1ea0578faaba3d5466573c5184d105bd15a", "Url": "https://api.github.com/repos/BritCoder96/CS3733Kabasuji", "Date": "2016-05-03T18:18:53Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((models.SaveFile.instance().getNumberOfLevels()) == 0) { java.io.File[] levelFiles = new java.io.File(controllers.MoveToBuilderLevelListController.pathToLevelsFolder).listFiles(); for (java.io.File i : levelFiles) { models.SaveFile.instance().addLevel(parseData(loadLevel(i))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3678/buggy-version/src.controllers.MoveToBuilderLevelListController.java", "BodyUseAPI": [], "Fixed commit": "13f6a1ea0578faaba3d5466573c5184d105bd15a", "Url": "https://api.github.com/repos/BritCoder96/CS3733Kabasuji", "Date": "2016-05-03T18:18:53Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (o._training_metrics)) training_metrics[i] = ((hex.schemas.ModelMetricsBase) (hex.schemas.Schema.schema(3, o._training_metrics).fillFromImpl(o._training_metrics)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6942/buggy-version/h2o-core.src.main.java.hex.schemas.GridSchemaV99.java", "BodyUseAPI": ["hex.schemas.Schema.schema(3, o._training_metrics).fillFromImpl(o._training_metrics)", "hex.schemas.Schema.schema(int,o._training_metrics)"], "Fixed commit": "0c6bbb6ac23504995ebb20d1bbde5762c4b56284", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-05-02T18:45:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((pairs.containsKey(name)) && (value instanceof java.util.List)) && (((java.util.List) (value)).isEmpty())) { result.append(this.vrble.render(matcher.group(2), pairs)); }else if (!(pairs.containsKey(name))) { result.append(this.vrble.render(matcher.group(2), pairs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6292/buggy-version/src.main.java.com.github.piotrkot.mustache.tags.InvSection.java", "BodyUseAPI": ["java.lang.StringBuilder.append(this.vrble.render(matcher.group(2), pairs))", "java.lang.StringBuilder.append(this.vrble.render(matcher.group(2), pairs))", "java.util.Map<java.lang.String, java.lang.Object>.containsKey(java.lang.String)", "com.github.piotrkot.mustache.Tag.render(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)", "com.github.piotrkot.mustache.Tag.render(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "80fe82d345df37f97992c7ec02c6379920083aa2", "Url": "https://api.github.com/repos/piotrkot/simple-mustache", "Date": "2016-03-16T08:16:20Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collections.newSetFromMap(java.util.IdentityHashMap<org.ehcache.spi.service.Service, java.lang.Boolean>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stoppedServices.contains(service)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3223/buggy-version/core.src.main.java.org.ehcache.spi.ServiceLocator.java", "BodyUseAPI": [], "Fixed commit": "18812e18ffa0e97988017e6e17744492b2c9051e", "Url": "https://api.github.com/repos/rishabhmonga/ehcache3", "Date": "2015-03-19T13:23:29Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 3) { throw new java.lang.IllegalArgumentException(((\"Three arguments were expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/327/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionSplit.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "ad83b6d2373d1f17e91621945d4fdad46115cd66", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-22T09:01:07Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.paolorotolo.appintro.PagerAdapter.getItem(int)", "com.github.paolorotolo.appintro.PagerAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentSlide.isAdded()) && (nextSlide.isAdded())) { int newColor = ((int) (argbEvaluator.evaluate(positionOffset, currentSlideCasted.getDefaultBackgroundColor(), nextSlideCasted.getDefaultBackgroundColor()))); currentSlideCasted.setBackgroundColor(newColor); nextSlideCasted.setBackgroundColor(newColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2091/buggy-version/library.src.main.java.com.github.paolorotolo.appintro.AppIntroBase.java", "BodyUseAPI": [], "Fixed commit": "ecb2a5a8070def5e3a09014a061bffc5e3db1711", "Url": "https://api.github.com/repos/apl-devs/AppIntro", "Date": "2016-04-15T17:30:02Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new org.springframework.jdbc.core.namedparam.MapSqlParameterSource().addValue(\"id\", meal.getId()).addValue(\"user_id\", userId).addValue(\"date_time\", meal.getDateTime()).addValue(\"description\", meal.getDescription()).addValue(java.lang.String,meal.getCalories())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((namedParameterJdbcTemplate.update((\"UPDATE meals SET user_id=:user_id, description=:description, \" + \"date_time=:date_time, calories=:calories WHERE id=:id\"), map)) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2402/buggy-version/src.main.java.ru.javawebinar.topjava.repository.jdbc.JdbcMealRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "ecd4292cafe4ff3c2a3c0c6f22263f16c8a766a5", "Url": "https://api.github.com/repos/zzzSeMzzz/topjava", "Date": "2017-01-17T13:34:50Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (stop == null) { java.util.HashMap<java.lang.String, com.transitangel.transitangel.model.Transit.Stop> bartStopLookup = com.transitangel.transitangel.Manager.BartTransitManager.getSharedInstance().getStopLookup(); stop = bartStopLookup.get(stopId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4231/buggy-version/app.src.main.java.com.transitangel.transitangel.model.Transit.TrainStop.java", "BodyUseAPI": [], "Fixed commit": "86b9c87c8f752f2f84752d8f7bee3732416b8451", "Url": "https://api.github.com/repos/TransitHelper/TransitAngel", "Date": "2016-08-24T23:15:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6754/buggy-version/Registry.LiquidRegistry.java", "BodyUseAPI": [], "Fixed commit": "887222549eefa3b285d8de3a946a17cd7ae72db2", "Url": "https://api.github.com/repos/ReikaKalseki/RotaryCraft", "Date": "2013-06-18T04:40:48Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Reika.RotaryCraft.Registry.MachineRegistry.getMachine(net.minecraft.world.World,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (m == (Reika.RotaryCraft.Registry.MachineRegistry.SCREEN)) { Reika.RotaryCraft.TileEntities.TileEntityScreen tc = ((Reika.RotaryCraft.TileEntities.TileEntityScreen) (te)); if (ep.isSneaking()) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6754/buggy-version/Base.BlockBasicMultiTE.java", "BodyUseAPI": [], "Fixed commit": "887222549eefa3b285d8de3a946a17cd7ae72db2", "Url": "https://api.github.com/repos/ReikaKalseki/RotaryCraft", "Date": "2013-06-18T04:40:48Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tr.isUseableByPlayer(ep))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6754/buggy-version/Base.BlockBasicMultiTE.java", "BodyUseAPI": [], "Fixed commit": "887222549eefa3b285d8de3a946a17cd7ae72db2", "Url": "https://api.github.com/repos/ReikaKalseki/RotaryCraft", "Date": "2013-06-18T04:40:48Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getCurrentEquippedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (is != null) { if (Reika.RotaryCraft.Registry.LiquidRegistry.isLiquidItem(is)) { Reika.RotaryCraft.Registry.LiquidRegistry liq = Reika.RotaryCraft.Registry.LiquidRegistry.getLiquidFromIDAndMetadata(is.itemID, 0); if (liq.hasBlock()) { int size = is.stackSize; if (((tr.liquidLevel) + size) <= (tr.CAPACITY)) { if ((tr.liquidID) == (-1)) { tr.liquidID = liq.getLiquidBlockID(); tr.liquidLevel += size; if (!(ep.capabilities.isCreativeMode)) ep.setCurrentItemOrArmor(0, new net.minecraft.item.ItemStack(Item.bucketEmpty.itemID, size, 0)); return true; }else if ((tr.liquidID) == (liq.getLiquidBlockID())) { tr.liquidLevel += size; if (!(ep.capabilities.isCreativeMode)) ep.setCurrentItemOrArmor(0, new net.minecraft.item.ItemStack(Item.bucketEmpty.itemID, size, 0)); return true; } } } }else if ((is.itemID) == (Item.bucketEmpty.itemID)) { int size = is.stackSize; if ((tr.liquidLevel) >= size) { Reika.RotaryCraft.Registry.LiquidRegistry liq = Reika.RotaryCraft.Registry.LiquidRegistry.getLiquidFromBlock(tr.liquidID); ep.setCurrentItemOrArmor(0, Reika.DragonAPI.Libraries.ReikaItemHelper.getSizedItemStack(liq.getHeldItemFor(), size)); return true; } }else if ((is.itemID) == (Item.glassBottle.itemID)) { int size = is.stackSize; if ((tr.liquidID) == (LiquidRegistry.WATER.getLiquidBlockID())) { ep.setCurrentItemOrArmor(0, new net.minecraft.item.ItemStack(Item.potion.itemID, size, 0)); return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6754/buggy-version/Base.BlockBasicMultiTE.java", "BodyUseAPI": ["Reika.RotaryCraft.Registry.LiquidRegistry.getLiquidFromIDAndMetadata(is.itemID,int)", "Reika.RotaryCraft.Registry.LiquidRegistry.isLiquidItem(net.minecraft.item.ItemStack)"], "Fixed commit": "887222549eefa3b285d8de3a946a17cd7ae72db2", "Url": "https://api.github.com/repos/ReikaKalseki/RotaryCraft", "Date": "2013-06-18T04:40:48Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.List<org.deel.aspect.FSRollback.Action>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (al == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8529/buggy-version/src.main.java.org.deel.aspect.FSRollback.java", "BodyUseAPI": [], "Fixed commit": "21571b85870e4e0f273e625c5a2e7f0d8525c215", "Url": "https://api.github.com/repos/Marekkk/deel", "Date": "2014-02-05T16:31:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.blovemaple.mj.action.standard.DISCARD.matchBy(context.getLastAction().getType())) winInfo.setAliveTiles(mergedSet(context.getMyInfo().getAliveTiles(), context.getLastAction().getTile()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/403/buggy-version/src.main.java.com.github.blovemaple.mj.action.standard.WinActionType.java", "BodyUseAPI": ["com.github.blovemaple.mj.rule.win.WinInfo.setAliveTiles(mergedSet(context.getMyInfo().getAliveTiles(), context.getLastAction().getTile()))", "com.github.blovemaple.mj.action.standard.WinActionType.mergedSet(context.getMyInfo().getAliveTiles(),context.getLastAction().getTile())", "com.github.blovemaple.mj.game.GameContext.PlayerView.getLastAction()", "context.getLastAction().getTile()", "context.getMyInfo().getAliveTiles()", "com.github.blovemaple.mj.game.GameContext.PlayerView.getMyInfo()"], "Fixed commit": "d6d07aea959a9243e57eba3efaac0b0bcba6da48", "Url": "https://api.github.com/repos/blovemaple/mahjong", "Date": "2016-10-19T08:22:14Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seedu.address.model.person.UniqueGroupList.DEFAULT_GROUP.equals(toAdd)) { }else if (contains(toAdd)) { throw new seedu.address.model.person.exceptions.DuplicateGroupException(); }else { groups.add(toAdd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5109/buggy-version/src.main.java.seedu.address.model.person.UniqueGroupList.java", "BodyUseAPI": ["javafx.collections.ObservableList<seedu.address.model.person.Group>.add(seedu.address.model.person.Group)", "seedu.address.model.person.UniqueGroupList.contains(seedu.address.model.person.Group)"], "Fixed commit": "58485675253a4a7633c1169abaab9dbd09394e67", "Url": "https://api.github.com/repos/grantcm/Addressbook-Level-4", "Date": "2017-11-01T02:08:54Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progress) != null) progress.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8753/buggy-version/src.com.kennymeyer.greendiary.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "277701141ae35ad435c6990708e918af64dd75f2", "Url": "https://api.github.com/repos/kennym/Green-Diary", "Date": "2013-09-27T23:17:52Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(view.isNumeric)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6629/buggy-version/AztecGame.src.IntroSequence2.GentlemanEditScreen.java", "BodyUseAPI": [], "Fixed commit": "54c53add4cfdc53db381d8a46962e2d0ca377ec7", "Url": "https://api.github.com/repos/Zwahoo/King-Solomon", "Date": "2015-04-28T23:34:21Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["consulo.csharp.lang.psi.impl.source.CSharpLinqQueryBodyImpl.getSelectOrGroupClause()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (selectOrGroupClause != null) { consulo.dotnet.psi.DotNetExpression firstExpression = selectOrGroupClause.getFirstExpression(); if (firstExpression != null) { return firstExpression.toTypeRef(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7309/buggy-version/csharp-psi-impl.src.consulo.csharp.lang.psi.impl.source.CSharpLinqVariableImpl.java", "BodyUseAPI": ["consulo.csharp.lang.psi.impl.source.CSharpLinqSelectOrGroupClauseImpl.getFirstExpression()"], "Fixed commit": "a2846e8c08d68da8ca17ed438452618f6cab01da", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2017-11-09T19:14:00Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element instanceof com.bencode.serialization.model.ByteString) { final com.bencode.serialization.model.ByteString byteString = ((com.bencode.serialization.model.ByteString) (element)); if (byteString.equals(com.bencode.serialization.model.ByteString.nullString())) return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7741/buggy-version/src.main.java.com.bencode.deserializator.referance.ArrayTypeDeserializer.java", "BodyUseAPI": [], "Fixed commit": "effd74d28c8e87c9d48660a365bd0f180696d82a", "Url": "https://api.github.com/repos/b0noI/Bencode", "Date": "2014-11-16T22:38:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (candidate.equal(end)) return (cur.step) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6411/buggy-version/Word_Ladder.java", "BodyUseAPI": [], "Fixed commit": "662ff050c1240c1f550d3e636c071e499ac1c777", "Url": "https://api.github.com/repos/jintaoguan/leetcode_Java", "Date": "2013-09-06T01:04:38Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getMessage().getContent().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((args.length) > 1) rand = new java.util.Random(((long) (event.getMessage().getContent().replace(\"!beesh \", \"\").hashCode())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5008/buggy-version/src.com.wynprice.discord.first.EventSystem.java", "BodyUseAPI": [], "Fixed commit": "26927887e9cc534f0bf3b73e133607707262c3b3", "Url": "https://api.github.com/repos/Wyn-Price/BeeshBot", "Date": "2017-12-31T15:18:07Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(acceptedFiles.isEmpty())) try { event.getChannel().sendFile(acceptedFiles.get(rand.nextInt(acceptedFiles.size()))); } catch (java.io.FileNotFoundException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5008/buggy-version/src.com.wynprice.discord.first.EventSystem.java", "BodyUseAPI": ["java.util.ArrayList<java.io.File>.get(int)", "event.getChannel().sendFile(java.io.File)", "java.util.ArrayList<java.io.File>.size()", "java.util.Random.nextInt(int)"], "Fixed commit": "26927887e9cc534f0bf3b73e133607707262c3b3", "Url": "https://api.github.com/repos/Wyn-Price/BeeshBot", "Date": "2017-12-31T15:18:07Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recordCoreIndicators) housing.Model.recorder.finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1277/buggy-version/modelsrc.housing.Model.java", "BodyUseAPI": [], "Fixed commit": "17724a164737ccbffefda3103e5c8ef4a76e6ed3", "Url": "https://api.github.com/repos/EconomicSL/housing-model", "Date": "2016-08-05T09:14:18Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recordMicroData) housing.Model.transactionRecorder.finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1277/buggy-version/modelsrc.housing.Model.java", "BodyUseAPI": [], "Fixed commit": "17724a164737ccbffefda3103e5c8ef4a76e6ed3", "Url": "https://api.github.com/repos/EconomicSL/housing-model", "Date": "2016-08-05T09:14:18Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity.isComment()) { if (!(activity.getTitleId().equals(\"forum.remove-poll\"))) { if (activity.getTitleId().equals(\"forum.add-poll\")) { return org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity)); }else { return templateParams.get(\"PostLink\"); } } }else { return (org.exoplatform.commons.utils.CommonsUtils.getCurrentDomain()) + (templateParams.get(\"TopicLink\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5931/buggy-version/component.notification.src.main.java.org.exoplatform.social.notification.LinkProviderUtils.java", "BodyUseAPI": ["org.exoplatform.social.core.activity.model.ExoSocialActivity.getTitleId()", "activity.getTitleId().equals(java.lang.String)", "org.exoplatform.social.core.activity.model.ExoSocialActivity.getTitleId()", "activity.getTitleId().equals(java.lang.String)", "org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity))", "org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(org.exoplatform.social.core.activity.model.ExoSocialActivity)"], "Fixed commit": "60ca4bef8be263c67874c3873bfc760da748cb4b", "Url": "https://api.github.com/repos/exodev/social", "Date": "2016-08-24T11:33:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i != (de.symeda.sormas.backend.util.PasswordHelper.PASSWORD_CHARS.length)) { throw new javax.validation.ValidationException(\"Size of password char array does not match defined values.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5440/buggy-version/sormas-backend.src.main.java.de.symeda.sormas.backend.util.PasswordHelper.java", "BodyUseAPI": [], "Fixed commit": "3f51459a5223b6cc021074454ccf03f97fc0e48d", "Url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project", "Date": "2017-08-07T13:56:59Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"description\")) != null) { newForm.setDescription(request.getParameter(\"description\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5340/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.service.inventory.NewServiceFormPrepareActionNG.java", "BodyUseAPI": ["org.hyperic.hq.ui.action.resource.service.inventory.NewServiceFormPrepareActionNG.getParameter(java.lang.String)", "org.hyperic.hq.ui.action.resource.ResourceFormNG.setDescription(request.getParameter(\"description\"))"], "Fixed commit": "6dbee3dc4f10443effae1185dd89927b57c812ca", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-23T10:22:52Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"name\")) != null) { newForm.setName(request.getParameter(\"name\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5340/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.service.inventory.NewServiceFormPrepareActionNG.java", "BodyUseAPI": ["org.hyperic.hq.ui.action.resource.service.inventory.NewServiceFormPrepareActionNG.getParameter(java.lang.String)", "org.hyperic.hq.ui.action.resource.ResourceFormNG.setName(request.getParameter(\"name\"))"], "Fixed commit": "6dbee3dc4f10443effae1185dd89927b57c812ca", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-23T10:22:52Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getParameter(\"resourceType\")) != null) { java.lang.Integer resType = java.lang.Integer.valueOf(request.getParameter(\"resourceType\")); newForm.setResourceType(resType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5340/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.service.inventory.NewServiceFormPrepareActionNG.java", "BodyUseAPI": ["java.lang.Integer.valueOf(request.getParameter(\"resourceType\"))", "org.hyperic.hq.ui.action.resource.service.inventory.NewServiceFormPrepareActionNG.getParameter(java.lang.String)"], "Fixed commit": "6dbee3dc4f10443effae1185dd89927b57c812ca", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-23T10:22:52Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (options_param.containsKey(value_temp[j])) options_param.put(value_temp[j], true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6235/buggy-version/FileReaders.Annotations.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Boolean>.put(java.lang.String,boolean)"], "Fixed commit": "8d9f782cd0877c2d8c61688e0358370e07ec7e47", "Url": "https://api.github.com/repos/ljuan/gbhit", "Date": "2012-12-11T08:51:50Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (Samples.containsKey(selected_samples[i])) Samples.put(selected_samples[i], true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6235/buggy-version/FileReaders.VcfSample.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Boolean>.put(java.lang.String,boolean)"], "Fixed commit": "8d9f782cd0877c2d8c61688e0358370e07ec7e47", "Url": "https://api.github.com/repos/ljuan/gbhit", "Date": "2012-12-11T08:51:50Z"},
{"Line": "=>1416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageVO.getFsid()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.zstack.core.db.Q.New(org.zstack.storage.ceph.primary.CephPrimaryStorageVO.class).eq(CephPrimaryStorageVO_.fsid, fsid).find()) == null) { dbf.removeByPrimaryKey(fsid, org.zstack.storage.ceph.backup.CephCapacityVO.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/328/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.backup.CephBackupStorageBase.java", "BodyUseAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageBase.removeByPrimaryKey(java.lang.String,java.lang.Class)"], "Fixed commit": "9396324de6d3cb725609b64e04ae9abc1bbb34d1", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-20T01:34:58Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (val == null) { throw new java.lang.IllegalStateException((\"Can't found environment variable: \" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7869/buggy-version/obase-risedsn.src.main.java.com.github.obase.risedsn.spring.RiseEnvs.java", "BodyUseAPI": [], "Fixed commit": "fbfbeed1c98a8a3e575f8e7153ad8e909b17c457", "Url": "https://api.github.com/repos/obase/java", "Date": "2016-12-14T12:41:32Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length == 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1280/buggy-version/src.main.java.org.vesalainen.parser.util.CharInput.java", "BodyUseAPI": [], "Fixed commit": "643bd3bf2a3698e15f67bde41cd0fcd49a403253", "Url": "https://api.github.com/repos/tvesalainen/lpg", "Date": "2015-05-05T13:13:12Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (filesArray == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7495/buggy-version/Core.src.main.java.com.intellectualcrafters.plot.commands.DebugExec.java", "BodyUseAPI": [], "Fixed commit": "b843de79f3b2660b49a428904b9376e691e064be", "Url": "https://api.github.com/repos/IntellectualSites/PlotSquared", "Date": "2016-07-26T05:07:02Z"},
{"Line": "=>1175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.apache.hadoop.hdfs.server.namenode.dummy.IOverflowTable<org.apache.hadoop.hdfs.server.namenode.dummy.ExternalStorage, org.apache.hadoop.hdfs.server.namenode.dummy.tree.RadixTreeNode>>.get(org.apache.hadoop.hdfs.server.namenode.dummy.OverflowTable.getNaturalRootFromFullPath(key))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ot == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6763/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.server.namenode.NameNodeDummy.java", "BodyUseAPI": [], "Fixed commit": "f7591c4a6e7426abbccbc9e88eda23f7d8f44c1e", "Url": "https://api.github.com/repos/rlzhang/hadoop", "Date": "2015-08-04T21:45:39Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.yannici.bedwars.Game.Game.getGameOfPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(p.getWorld().equals(g.getRegion().getWorld()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2757/buggy-version/src.io.github.yannici.bedwars.Listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "c70c534b06967542ee7db0a0f282de7d619d6efd", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-05-06T20:58:54Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.index.query.QueryParseContext.parseInnerQueryBuilder()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (builder != null) { result = builder.toQuery(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7148/buggy-version/src.main.java.org.elasticsearch.index.query.QueryParseContext.java", "BodyUseAPI": ["org.elasticsearch.index.query.QueryBuilder.toQuery(org.elasticsearch.index.query.QueryParseContext)"], "Fixed commit": "7c58f4aad626d2fabd3daf444473a5371f0b9a44", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2015-05-08T12:22:09Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((notificationManager) != null) notificationManager.notify(com.jakehilborn.speedr.MainService.NOTIFICATION_ID, notificationBuilder.build());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2156/buggy-version/app.src.main.java.com.jakehilborn.speedr.MainService.java", "BodyUseAPI": [], "Fixed commit": "892018ea4ca9122933314cfbffd29b77bde1d20f", "Url": "https://api.github.com/repos/jakehilborn/speedr", "Date": "2017-02-19T16:21:01Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { shareActionProvider.setShareIntent(shareIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1904/buggy-version/app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "04a09ba8ca76aa7fb893da920d9d7093774bd0f8", "Url": "https://api.github.com/repos/dconz13/Alexandria", "Date": "2015-11-17T18:58:53Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!generate) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6474/buggy-version/src.main.java.com.example.datastore.model.Payload.java", "BodyUseAPI": [], "Fixed commit": "27e870c9dd9de6a11c52593250ff52feb1d0178a", "Url": "https://api.github.com/repos/Sionin/datastore-scan", "Date": "2017-11-27T19:29:15Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.bellantoni.chetta.lieme.network.NetworkController.isOnline(getApplicationContext())) == true) { if (\"undefined\".equalsIgnoreCase(q.getAnswer())) { com.bellantoni.chetta.lieme.dialog.QuestionDialog questionDialog = new com.bellantoni.chetta.lieme.dialog.QuestionDialog(); android.os.Bundle args = new android.os.Bundle(); args.putInt(\"questionId\", java.lang.Integer.valueOf(questionId)); questionDialog.setArguments(args); questionDialog.show(getSupportFragmentManager(), \"QUESTION_DIALOG\"); }else { com.bellantoni.chetta.lieme.dialog.NetworkDialog networkDialog = new com.bellantoni.chetta.lieme.dialog.NetworkDialog(); networkDialog.show(getSupportFragmentManager(), \"NETWORK_DIALOG\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8165/buggy-version/app.src.main.java.com.bellantoni.chetta.lieme.drawnerActivity.java", "BodyUseAPI": [], "Fixed commit": "efa727954171b83b7e90585fea584e79859a2150", "Url": "https://api.github.com/repos/domenicobellantoni/LieMe", "Date": "2015-09-07T19:11:22Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(MainMenu.IS_JAR)) { myPicture = javax.imageio.ImageIO.read(entry.getPic()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2949/buggy-version/src.menu.SubMenu.java", "BodyUseAPI": [], "Fixed commit": "1c2cdf9aa728856897d149ba09c6860903114856", "Url": "https://api.github.com/repos/SeBBBe/iidenki", "Date": "2011-11-24T14:46:13Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MainMenu.IS_JAR) { myPicture = javax.imageio.ImageIO.read(entry.getJARPic()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2949/buggy-version/src.menu.SubMenu.java", "BodyUseAPI": [], "Fixed commit": "1c2cdf9aa728856897d149ba09c6860903114856", "Url": "https://api.github.com/repos/SeBBBe/iidenki", "Date": "2011-11-24T14:46:13Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attributes.getLength()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5536/buggy-version/android.src.org.exobel.routerkeygen.AliceHandle.java", "BodyUseAPI": [], "Fixed commit": "ba21db0214dff8bf5927f7fe3c9ba99664a8ec90", "Url": "https://api.github.com/repos/stjoannou/routerkeygen", "Date": "2012-07-15T01:44:59Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getRightClicked().getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (et == (org.bukkit.entity.EntityType.ARMOR_STAND)) { if ((((!(checkPermission(land, event.getPlayer(), PermissionList.BUILD.getPermissionType()))) || (!(checkPermission(land, event.getPlayer(), PermissionList.BUILD_DESTROY.getPermissionType())))) && (mat == (org.bukkit.Material.AIR))) || (((!(checkPermission(land, event.getPlayer(), PermissionList.BUILD.getPermissionType()))) || (!(checkPermission(land, event.getPlayer(), PermissionList.BUILD_PLACE.getPermissionType())))) && (mat != (org.bukkit.Material.AIR)))) { messagePermission(player); event.setCancelled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8149/buggy-version/src.main.java.me.tabinol.factoid.listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "7e8def3e730b6d4b78fa17dc5637e26c1fa14121", "Url": "https://api.github.com/repos/Tabinol/Factoid", "Date": "2015-02-20T01:08:16Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getAction()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((((player.getItemInHand()) != null) && (action == (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK))) && ((player.getItemInHand().getType()) == (org.bukkit.Material.ARMOR_STAND))) && ((((land instanceof me.tabinol.factoidapi.lands.ILand) && (((me.tabinol.factoidapi.lands.ILand) (land)).isBanned(event.getPlayer()))) || (!(checkPermission(land, event.getPlayer(), PermissionList.BUILD.getPermissionType())))) || (!(checkPermission(land, event.getPlayer(), PermissionList.BUILD_PLACE.getPermissionType()))))) { messagePermission(player); event.setCancelled(true); }else if (((((player.getItemInHand()) != null) && (action == (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK))) && ((player.getItemInHand().getType()) == (org.bukkit.Material.SKULL_ITEM))) && ((((land instanceof me.tabinol.factoidapi.lands.ILand) && (((me.tabinol.factoidapi.lands.ILand) (land)).isBanned(event.getPlayer()))) || (!(checkPermission(land, event.getPlayer(), PermissionList.BUILD.getPermissionType())))) || (!(checkPermission(land, event.getPlayer(), PermissionList.BUILD_PLACE.getPermissionType()))))) { messagePermission(player); event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8149/buggy-version/src.main.java.me.tabinol.factoid.listeners.PlayerListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "me.tabinol.factoid.listeners.PlayerListener.checkPermission(me.tabinol.factoidapi.lands.IDummyLand,event.getPlayer(),PermissionList.BUILD_PLACE.getPermissionType())", "me.tabinol.factoid.listeners.PlayerListener.messagePermission(org.bukkit.entity.Player)", "org.bukkit.entity.Player.getItemInHand()", "me.tabinol.factoid.listeners.PlayerListener.messagePermission(org.bukkit.entity.Player)", "me.tabinol.factoidapi.lands.IDummyLand.isBanned(event.getPlayer())", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.setCancelled(boolean)", "org.bukkit.entity.Player.getItemInHand()", "player.getItemInHand().getType()", "me.tabinol.factoid.listeners.PlayerListener.checkPermission(me.tabinol.factoidapi.lands.IDummyLand,event.getPlayer(),PermissionList.BUILD.getPermissionType())", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.setCancelled(boolean)"], "Fixed commit": "7e8def3e730b6d4b78fa17dc5637e26c1fa14121", "Url": "https://api.github.com/repos/Tabinol/Factoid", "Date": "2015-02-20T01:08:16Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(user.getRole().equals(User.NORMAL_USER_ROLE))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2837/buggy-version/DailyCookApp.src.main.java.com.vn.dailycookapp.cache.user.UserCache.java", "BodyUseAPI": [], "Fixed commit": "fed64cba1aab374d997cdf57b4e179a4dbcb6c8c", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-12-03T16:48:49Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.assertj.core.util.Objects.areEqual(actual, other)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2972/buggy-version/src.main.java.org.assertj.core.internal.Numbers.java", "BodyUseAPI": [], "Fixed commit": "089a09bcaa3caba646c493ee77be1ff68f2e2b7c", "Url": "https://api.github.com/repos/PascalSchumacher/assertj-core", "Date": "2017-05-12T20:47:13Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.assertj.core.util.Objects.areEqual(NUMBER,NUMBER)", "java.lang.Math.abs((((percentage.value) * (other.doubleValue())) / 100.0))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!areEqual) && (java.lang.Double.isInfinite(diff))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2972/buggy-version/src.main.java.org.assertj.core.internal.Numbers.java", "BodyUseAPI": [], "Fixed commit": "089a09bcaa3caba646c493ee77be1ff68f2e2b7c", "Url": "https://api.github.com/repos/PascalSchumacher/assertj-core", "Date": "2017-05-12T20:47:13Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unresolvedLinkAction) == (ACTION.SKIP)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3093/buggy-version/src.main.java.com.orientechnologies.orient.etl.transformer.OEdgeTransformer.java", "BodyUseAPI": [], "Fixed commit": "2f6fdbc5435824c80ad29c422ba537cd774518a6", "Url": "https://api.github.com/repos/orientechnologies/orientdb-etl", "Date": "2015-05-22T16:37:00Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unresolvedLinkAction) == (ACTION.SKIP)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3093/buggy-version/src.main.java.com.orientechnologies.orient.etl.transformer.OEdgeTransformer.java", "BodyUseAPI": [], "Fixed commit": "2f6fdbc5435824c80ad29c422ba537cd774518a6", "Url": "https://api.github.com/repos/orientechnologies/orientdb-etl", "Date": "2015-05-22T16:37:00Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getInner().getParent().getParent()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1632/buggy-version/il.org.spartan.intellij-spartanizer.src.main.il.org.spartan.Leonidas.auxilary_layer.haz.java", "BodyUseAPI": [], "Fixed commit": "a828bb9e86cf2dc8873eb8054743ff220fbd7ebf", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2017-07-03T11:19:23Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getInner().getParent().getParent().getParent().getNextSibling()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1632/buggy-version/il.org.spartan.intellij-spartanizer.src.main.il.org.spartan.Leonidas.auxilary_layer.haz.java", "BodyUseAPI": [], "Fixed commit": "a828bb9e86cf2dc8873eb8054743ff220fbd7ebf", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2017-07-03T11:19:23Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getInner().getParent()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1632/buggy-version/il.org.spartan.intellij-spartanizer.src.main.il.org.spartan.Leonidas.auxilary_layer.haz.java", "BodyUseAPI": [], "Fixed commit": "a828bb9e86cf2dc8873eb8054743ff220fbd7ebf", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2017-07-03T11:19:23Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getInner().getParent().getParent().getParent()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1632/buggy-version/il.org.spartan.intellij-spartanizer.src.main.il.org.spartan.Leonidas.auxilary_layer.haz.java", "BodyUseAPI": [], "Fixed commit": "a828bb9e86cf2dc8873eb8054743ff220fbd7ebf", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2017-07-03T11:19:23Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ellpeck.rockbottom.api.world.IWorld.getTileEntity(mainPos.getX(),mainPos.getY(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((tileEntity != null) && (tileEntity.isActive())) { tex = this.texturesActive.get(innerCoord); }else { tex = this.textures.get(innerCoord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5754/buggy-version/src.main.java.com.raphydaphy.rocksolid.render.ArcFurnaceRenderer.java", "BodyUseAPI": [], "Fixed commit": "5181ac8ceb24b1d5b6e56349054adf6ad3e1a22b", "Url": "https://api.github.com/repos/raphydaphy/RockSolid", "Date": "2017-07-08T01:08:39Z"},
{"Line": "=>1264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (!(((offsetNode == null) && (fetchNode == null)) && (fieldCollations.isEmpty()))) { final org.apache.calcite.rel.RelNode sort = sortFactory.createSort(build(), org.apache.calcite.rel.RelCollations.of(fieldCollations), offsetNode, fetchNode); push(sort); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6250/buggy-version/core.src.main.java.org.apache.calcite.tools.RelBuilder.java", "BodyUseAPI": ["RelFactories.SortFactory.createSort(org.apache.calcite.rel.RelNode,org.apache.calcite.rel.RelCollations.of(fieldCollations),org.apache.calcite.rex.RexNode,org.apache.calcite.rex.RexNode)", "org.apache.calcite.rel.RelCollations.of(java.util.List<org.apache.calcite.rel.RelFieldCollation>)"], "Fixed commit": "1e77cd22769a2e8c2046ece60bcc94011c19d773", "Url": "https://api.github.com/repos/zinking/calcite", "Date": "2015-12-15T03:46:07Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (viewId.equals(mConnectButton.getId())) { ip = mIpText.getText().toString(); }else if (viewId.equals(mSpinner.getId())) { ip = mSpinner.getSelectedItem().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2557/buggy-version/mobile.src.main.java.toinsson.mgstatefeedback.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.equals(mSpinner.getId())"], "Fixed commit": "0a4804e5f3d8d92e1379d3f76412254a8b216b20", "Url": "https://api.github.com/repos/toinsson/mgstatefeedback", "Date": "2016-11-03T15:46:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count != 11) { if (!firstInningsAllout) SampleScrapper.addDNB(inningsTable.get(5)); else SampleScrapper.addDNB(inningsTable.get(4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3379/buggy-version/Scrapper.src.SampleScrapper.java", "BodyUseAPI": [], "Fixed commit": "e4df31d9c79d42e587c6cf43205d62bfe802b55f", "Url": "https://api.github.com/repos/asdkalluri/CricinfoScrapper", "Date": "2013-03-28T21:56:58Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { groupMembers = new java.util.LinkedHashMap<>(); userMap = new java.util.LinkedHashMap<>(); mGroupNames = new java.util.ArrayList<>(); mGroupIds = new java.util.ArrayList<>(); getUserIdMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/347/buggy-version/app.programmeerproject.app.src.main.java.com.example.programmeerproject.GroupActivity.java", "BodyUseAPI": [], "Fixed commit": "422ba385164b0af452f8c3756e68bba773015d8b", "Url": "https://api.github.com/repos/sidneyd3vries/programmeerproject", "Date": "2017-02-02T22:16:17Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.wifi.WifiInfo.getSSID()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (getssid == null) { getssid = \"\"; }else { getssid = getssid.replaceAll(\"\\\"\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8160/buggy-version/old.src.main.java.com.jiuzhansoft.ehealthtec.lens.iris.IrisDetailInfoActivity.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "2ddc8a32cae5a73f67eccea3df11f6f1cc9e73ab", "Url": "https://api.github.com/repos/daizhx/work1", "Date": "2015-01-13T08:28:11Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMediaPlayerSingleton) != null) { mMediaPlayerSingleton.updateSeek(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3465/buggy-version/app.src.main.java.com.nineworldsdeep.gauntlet.mnemosyne.AudioDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "0103977e8231ce540634793b9857dc94bdf76bb7", "Url": "https://api.github.com/repos/BBuchholz/Gauntlet", "Date": "2016-08-08T19:53:13Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMediaPlayerSingleton) != null) { mMediaPlayerSingleton.stopSeekUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3465/buggy-version/app.src.main.java.com.nineworldsdeep.gauntlet.mnemosyne.AudioDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "0103977e8231ce540634793b9857dc94bdf76bb7", "Url": "https://api.github.com/repos/BBuchholz/Gauntlet", "Date": "2016-08-08T19:53:13Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(BaseActivity.SERVICE_ACTIVITY)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (activity == null) { throw new java.lang.RuntimeException(java.lang.String.format((\"Context doesn't belong to an Activity which provides itself in getSystemService().\" + \" Have you extended %s?\"), com.schedjoules.eventdiscovery.framework.common.BaseActivity.class.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4259/buggy-version/eventdiscovery-sdk.src.main.java.com.schedjoules.eventdiscovery.framework.utils.ContextActivity.java", "BodyUseAPI": [], "Fixed commit": "d62acb13b81cd4f04ba1df93800e5c0686412112", "Url": "https://api.github.com/repos/schedjoules/android-event-discovery-sdk", "Date": "2017-07-12T17:53:52Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((txt == null) || (txt.isEmpty())) { return txt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8682/buggy-version/app.src.main.java.nodomain.freeyourgadget.gadgetbridge.service.devices.hplus.HPlusSupport.java", "BodyUseAPI": [], "Fixed commit": "b9249065eb4f5fd8d9c7b9a518608b39e3dbb83c", "Url": "https://api.github.com/repos/Freeyourgadget/Gadgetbridge", "Date": "2017-01-14T20:01:44Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selector.getLayout().items().size()) > 0) { duel.setCardSelector(selector); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9236/buggy-version/src.org.msk86.ygoroid.newaction.actionimpl.OpenCardSelectorAction.java", "BodyUseAPI": ["org.msk86.ygoroid.newaction.actionimpl.OpenCardSelectorAction.setCardSelector(org.msk86.ygoroid.newcore.impl.CardSelector)"], "Fixed commit": "3fe3b2a970b9dba981e4db4d3ed3decaeb6528e0", "Url": "https://api.github.com/repos/msk86/YGORoid", "Date": "2014-03-08T05:43:50Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.trimToEmpty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((line.isEmpty()) || (line.startsWith(\"#\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5946/buggy-version/ngrinder-core.src.main.java.org.ngrinder.common.util.PropertiesKeyMapper.java", "BodyUseAPI": [], "Fixed commit": "96088df96ee2a0b4e334d977f10f9f1f7122a998", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2013-12-17T01:15:05Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first) { id = ((short) (world.getBlockId(x, y, z))); meta = ((byte) (world.getBlockMetadata(x, y, z))); first = false; }else { lid = id; lmeta = meta; id = ((short) (world.getBlockId(x, y, z))); meta = ((byte) (world.getBlockMetadata(x, y, z))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5638/buggy-version/src.FE_SRC_COMMON.com.ForgeEssentials.WorldControl.BlockArray.java", "BodyUseAPI": [], "Fixed commit": "6c8f3a9a9659cdc0d9489686e300391316345159", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2013-02-23T04:15:02Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["conf.get(\"dfs.datanode.data.dir\", \"file:///tmp/\").split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dataDirs.length) == 1) { idx = 0; }else { while (true) { int i = (java.lang.Math.abs(new java.util.Random(java.lang.System.currentTimeMillis()).nextInt())) % (dataDirs.length); if (i != n) { idx = i; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4015/buggy-version/core.src.main.java.com.aliyun.fs.oss.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "65ea4e079c6ce54afba25559b3a5cf9af3e59765", "Url": "https://api.github.com/repos/aliyun/aliyun-emapreduce-sdk", "Date": "2016-04-11T03:21:50Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { dayDAO = new ka.ti.asma.univ8.notemyday.dao.DayDAO(this.getContext()); dayList = dayDAO.getAllDays(); criteriaDayDAO = new ka.ti.asma.univ8.notemyday.dao.CriteriaDayDAO(this.getContext()); criteriaDayDAO.close(); dayDAO.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2561/buggy-version/app.src.main.java.ka.ti.asma.univ8.notemyday.DaysHistory.java", "BodyUseAPI": [], "Fixed commit": "6e7cad7215eed9ef0a036a6f6d294552502828ee", "Url": "https://api.github.com/repos/CASMAKOUAOUCI/NoteMyDay", "Date": "2016-12-20T09:42:57Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((keyValue.length) == 1) { if (((keyValue[0].charAt(0)) == '@') || ((keyValue[0].charAt(0)) == '%')) { map.put(java.lang.Character.toString(keyValue[0].trim().charAt(0)), keyValue[0].trim().substring(1, keyValue[0].length())); }else { map.replace(lastKey, map.get(lastKey).concat(\" \").concat(keyValue[0])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4911/buggy-version/src.main.java.com.google.calendar.excel.output.impl.ExcelServiceImpl.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.trim()", "java.lang.String.charAt(int)", "java.lang.Character.toString(char)", "java.lang.String.trim()", "java.lang.String.charAt(int)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.charAt(int)", "java.lang.String.concat(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.replace(java.lang.String,java.lang.String)"], "Fixed commit": "fbd03c8b91a40abcd7d5856f5de7aa0be1c055bc", "Url": "https://api.github.com/repos/rohitagrawal701/GoogleCalendarToExcel", "Date": "2017-04-13T08:43:40Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundation == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3048/buggy-version/src.main.java.org.concord.energy3d.simulation.Cost.java", "BodyUseAPI": [], "Fixed commit": "534c5eea704ea0b39088580e279e29ebd4780891", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2015-10-19T21:41:30Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (keyNode[1].equalsIgnoreCase(\"DontLooseItem\")) PlayersDontLooseItem = config.getBoolean(key); else if (keyNode[1].equalsIgnoreCase(\"StoreInventory\")) PlayersStoreInventory = config.getBoolean(key); else if (keyNode[1].equalsIgnoreCase(\"Rollback\")) PlayersRollback = config.getBoolean(key); else if (keyNode[1].equalsIgnoreCase(\"AllowPlace\")) PlayersAllowPlace = config.getBoolean(key); else if (keyNode[1].equalsIgnoreCase(\"AllowBreak\")) PlayersAllowBreak = config.getBoolean(key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/503/buggy-version/src.graindcafe.tribu.Configuration.TribuConfig.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "2a229c91abb0f3bbc0e5ab84de88daf830d69cd7", "Url": "https://api.github.com/repos/graindcafe/Tribu", "Date": "2012-08-05T20:22:07Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (starCount == 1) { game.objects.ObjectController.addLevel(game.objects.levelStructure.LevelReader.getLevel(\"1a\")); }else { java.lang.String character = ObjectController.levels.get(ObjectController.currentLevel).name.split(\"0\")[1]; ObjectController.levels.set(0, game.objects.levelStructure.LevelManipulator.addQuestionStars(game.objects.levelStructure.LevelReader.getLevel((\"0\" + (game.util.Randomizer.numberToChar(((game.util.Randomizer.charToNumber(character)) + 1))))), (starCount - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5955/buggy-version/src.game.objects.levelStructure.LevelManipulator.java", "BodyUseAPI": ["ObjectController.levels.set(int,game.objects.levelStructure.Level)", "game.objects.levelStructure.LevelManipulator.addQuestionStars(game.objects.levelStructure.LevelReader.getLevel((\"0\" + (game.util.Randomizer.numberToChar(((game.util.Randomizer.charToNumber(character)) + 1))))),int)"], "Fixed commit": "138d8759617675a2a08f8fdf9e5c41ce9881499a", "Url": "https://api.github.com/repos/lukDev/ForGodsSake", "Date": "2015-09-17T08:16:33Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((f.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7380/buggy-version/android.src.com.formicite.RobomagelleanActivity.java", "BodyUseAPI": [], "Fixed commit": "c433debb468d05f6b2367a136c70a301b163c947", "Url": "https://api.github.com/repos/atp42/StanleyJunior", "Date": "2012-10-27T21:48:43Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (f == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7380/buggy-version/android.src.com.formicite.RobomagelleanActivity.java", "BodyUseAPI": [], "Fixed commit": "c433debb468d05f6b2367a136c70a301b163c947", "Url": "https://api.github.com/repos/atp42/StanleyJunior", "Date": "2012-10-27T21:48:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (start >= 0) ss.setSpan(cs, start, end, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3679/buggy-version/Android.Shopr.src.main.java.com.uwetrottmann.shopr.utils.ShoprTextFormatter.java", "BodyUseAPI": ["android.text.SpannableString.setSpan(android.text.style.ClickableSpan,int,int,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE)"], "Fixed commit": "01486157b36c5719d35c505a29397de6fd7acc40", "Url": "https://api.github.com/repos/adiguzel/Shopr", "Date": "2014-05-05T08:48:32Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (peerList.remove(playerInfo.getIpAddress())) PlayerMoveImplement.NUMBER_OF_PLAYERS.set(PlayerMoveImplement.NUMBER_OF_PLAYERS.decrementAndGet());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1117/buggy-version/P2PServer.src.PlayerMoveImplement.java", "BodyUseAPI": [], "Fixed commit": "b0d8233557debbe0ba366a9e58aaff0c4557e7b6", "Url": "https://api.github.com/repos/borngold/Distributed-System", "Date": "2012-10-01T04:04:29Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressBar) != null) { progressBar = new com.afollestad.materialdialogs.MaterialDialog.Builder(this).content(msg).progress(true, 0).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2723/buggy-version/SnapPollAndroidClient.app.src.main.java.dev.jinkim.snappollandroid.ui.activity.SnapPollBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "01ddc82e32aaea79e33ff51f8d2076d32e11822d", "Url": "https://api.github.com/repos/jinkim608/SnapPoll", "Date": "2015-04-15T18:58:55Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.umn.msi.tropix.jobs.activities.descriptions.ActivityDependency.specifiesConsumesIndex(dependency)) { setMethod = edu.umn.msi.tropix.jobs.activities.WorkflowVerificationUtils.REFLECTION_HELPER.getMethod(activityDescription.getClass(), setMethodName, getMethod.getReturnType(), int.class); }else { setMethod = edu.umn.msi.tropix.jobs.activities.WorkflowVerificationUtils.REFLECTION_HELPER.getMethod(activityDescription.getClass(), setMethodName, getMethod.getReturnType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4730/buggy-version/projects.TropixJobs.src.api.edu.umn.msi.tropix.jobs.activities.WorkflowVerificationUtils.java", "BodyUseAPI": [], "Fixed commit": "5296c0a067be9c9022902ca95421e796df7edb87", "Url": "https://api.github.com/repos/jmchilton/TINT", "Date": "2011-10-05T03:49:54Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type != null) { edges.put(RDF.TYPE.getIdentifier(), new java.util.HashSet(java.util.Arrays.asList(new org.kitodo.production.lugh.ld.ObjectType[]{ type }))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1810/buggy-version/Goobi.src.org.kitodo.production.lugh.ld.Node.java", "BodyUseAPI": [], "Fixed commit": "a29b1d613f8d47f2bb6a4d63eb378e63858fabe7", "Url": "https://api.github.com/repos/matthias-ronge/kitodo-production", "Date": "2017-01-31T10:53:57Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type != null) { assert org.kitodo.production.lugh.ld.URI_SCHEME.matcher(type).find() : \"Type isn\u2019t a valid URI.\"; edges.put(RDF.TYPE.getIdentifier(), new java.util.HashSet(java.util.Arrays.asList(new org.kitodo.production.lugh.ld.ObjectType[]{ org.kitodo.production.lugh.ld.Literal.create(type, null) }))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1810/buggy-version/Goobi.src.org.kitodo.production.lugh.ld.Node.java", "BodyUseAPI": [], "Fixed commit": "a29b1d613f8d47f2bb6a4d63eb378e63858fabe7", "Url": "https://api.github.com/repos/matthias-ronge/kitodo-production", "Date": "2017-01-31T10:53:57Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.plugins.im.tools.BuildHelper.getPreviousNonAbortedBuild(hudson.model.AbstractBuild<?, ?>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((previousBuild.getResult()) == (hudson.model.Result.UNSTABLE)) { return hudson.plugins.im.tools.BuildHelper.ExtResult.STILL_UNSTABLE; }else if ((previousBuild.getResult()) == (hudson.model.Result.FAILURE)) { return hudson.plugins.im.tools.BuildHelper.ExtResult.NOW_UNSTABLE; }else { return hudson.plugins.im.tools.BuildHelper.ExtResult.UNSTABLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/45/buggy-version/src.main.java.hudson.plugins.im.tools.BuildHelper.java", "BodyUseAPI": ["hudson.model.AbstractBuild<?, ?>.getResult()"], "Fixed commit": "f10b48108f0792fc6e5d90523a8f2f708ae12413", "Url": "https://api.github.com/repos/jenkinsci/instant-messaging-plugin", "Date": "2011-04-19T19:49:56Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.m2e.core.project.IMavenProjectFacade.getMavenProject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mavenProject == null) { com.eidosmedia.eclipse.maven.resources.remote.BuildParticipant.log.warn(\"cast to maven project error: {}\", mavenProjectFacade.getFullPath()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7342/buggy-version/com.eidosmedia.eclipse.maven.m2e-remote-resources.src.com.eidosmedia.eclipse.maven.resources.remote.BuildParticipant.java", "BodyUseAPI": [], "Fixed commit": "3e5908c6c0de740c445dafe953ca5fca5248c259", "Url": "https://api.github.com/repos/dashie/m2e-remote-resources", "Date": "2013-09-18T13:23:20Z"},
{"Line": "=>1295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFlippedIso) this.isFlippedIso = true; else this.isFlippedIso = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9227/buggy-version/maptool.src.main.java.net.rptools.maptool.model.Token.java", "BodyUseAPI": [], "Fixed commit": "7242c40bd9ee87d1d4e82228c1f5ef372f4dc924", "Url": "https://api.github.com/repos/Jaggeroth/maptool", "Date": "2015-07-22T17:50:11Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasImageTable) this.hasImageTable = true; else this.hasImageTable = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9227/buggy-version/maptool.src.main.java.net.rptools.maptool.model.Token.java", "BodyUseAPI": [], "Fixed commit": "7242c40bd9ee87d1d4e82228c1f5ef372f4dc924", "Url": "https://api.github.com/repos/Jaggeroth/maptool", "Date": "2015-07-22T17:50:11Z"},
{"Line": "=>1289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isFlippedIso) != null) return isFlippedIso;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9227/buggy-version/maptool.src.main.java.net.rptools.maptool.model.Token.java", "BodyUseAPI": [], "Fixed commit": "7242c40bd9ee87d1d4e82228c1f5ef372f4dc924", "Url": "https://api.github.com/repos/Jaggeroth/maptool", "Date": "2015-07-22T17:50:11Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasImageTable) != null) return hasImageTable;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9227/buggy-version/maptool.src.main.java.net.rptools.maptool.model.Token.java", "BodyUseAPI": [], "Fixed commit": "7242c40bd9ee87d1d4e82228c1f5ef372f4dc924", "Url": "https://api.github.com/repos/Jaggeroth/maptool", "Date": "2015-07-22T17:50:11Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value == null) remove(attribute); else attribute.setValue(value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5387/buggy-version/src.main.java.se.ugli.durian.j.dom.mutable.MutableElement.java", "BodyUseAPI": ["se.ugli.durian.j.dom.mutable.MutableAttribute.setValue(java.lang.String)"], "Fixed commit": "7f54cdfb992364307c598340d333bc16e31abcb6", "Url": "https://api.github.com/repos/ugli/durian", "Date": "2016-10-11T03:37:13Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(the.bytecode.club.bytecodeviewer.BytecodeViewer.settingsFile.exists())) && (!(the.bytecode.club.bytecodeviewer.BytecodeViewer.settingsFile.createNewFile()))) { throw new java.lang.RuntimeException(\"Could not create settings file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2227/buggy-version/src.main.java.the.bytecode.club.bytecodeviewer.BytecodeViewer.java", "BodyUseAPI": [], "Fixed commit": "c3fad5c102fa3a452661ec0e41bb1257e71d2e90", "Url": "https://api.github.com/repos/DreamSworK/bytecode-viewer", "Date": "2017-05-04T21:36:29Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(the.bytecode.club.bytecodeviewer.BytecodeViewer.dataDir.exists())) && (!(the.bytecode.club.bytecodeviewer.BytecodeViewer.dataDir.mkdirs()))) { throw new java.lang.RuntimeException(\"Could not create working directory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2227/buggy-version/src.main.java.the.bytecode.club.bytecodeviewer.BytecodeViewer.java", "BodyUseAPI": [], "Fixed commit": "c3fad5c102fa3a452661ec0e41bb1257e71d2e90", "Url": "https://api.github.com/repos/DreamSworK/bytecode-viewer", "Date": "2017-05-04T21:36:29Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileName) == null) return com.idega.core.file.util.MimeTypeUtil.MIME_TYPE_APPLICATION;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8646/buggy-version/src.java.com.idega.io.DownloadWriter.java", "BodyUseAPI": [], "Fixed commit": "14064e51ed48770c2a3f8a32198756efc7a940f8", "Url": "https://api.github.com/repos/idega/com.idega.core", "Date": "2011-09-30T15:44:13Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.monitor) != null) { this.monitor.running = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/212/buggy-version/org.envirocar.app.src.org.envirocar.app.protocol.OBDCommandLooper.java", "BodyUseAPI": [], "Fixed commit": "8adfe0d05b3df5579abe477845b2a10825d838d4", "Url": "https://api.github.com/repos/enviroCar/enviroCar-app", "Date": "2014-03-05T15:02:48Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["playn.html.HtmlGroupLayerDom.size()", "playn.core.GroupLayerImpl<playn.html.HtmlLayerDom>.add(playn.html.HtmlGroupLayerDom,playn.html.HtmlLayerDom)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index == size) { element().appendChild(hlayer.element()); }else { com.google.gwt.dom.client.Node refChild = element().getChild(index); element().insertBefore(hlayer.element(), refChild); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3006/buggy-version/html.src.playn.html.HtmlGroupLayerDom.java", "BodyUseAPI": ["element().getChild(int)"], "Fixed commit": "126273f4ffd04d949231b13ee9e972de0f3c82ea", "Url": "https://api.github.com/repos/threerings/playn", "Date": "2011-09-17T19:41:05Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUser) instanceof domain.FamilyWeb.Administrator) { req.getSession().setAttribute(\"users\", servletControllers.FamilyWeb.OverviewController.getInstance().autoComplete(currentUser)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/837/buggy-version/FamilyWeb.src.main.java.servlets.FamilyWeb.EmployeeServlet.java", "BodyUseAPI": [], "Fixed commit": "b227f8f0b6c978211646f4af0e77b03c91fb15fd", "Url": "https://api.github.com/repos/openrory/Family-Web", "Date": "2015-06-29T07:00:59Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUser) instanceof domain.FamilyWeb.Administrator) { req.getSession().setAttribute(\"users\", servletControllers.FamilyWeb.OverviewController.getInstance().autoComplete(currentUser)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/837/buggy-version/FamilyWeb.src.main.java.servlets.FamilyWeb.EmployeeServlet.java", "BodyUseAPI": [], "Fixed commit": "b227f8f0b6c978211646f4af0e77b03c91fb15fd", "Url": "https://api.github.com/repos/openrory/Family-Web", "Date": "2015-06-29T07:00:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jp.getText().startsWith(\"[\")) { org.codehaus.jackson.map.ObjectMapper mapper = new org.codehaus.jackson.map.ObjectMapper(); s = mapper.readValue(jp.getText(), es.us.isa.ppinot.model.schedule.ScheduleCombined.class); }else { s = jp.readValueAs(es.us.isa.ppinot.model.schedule.ScheduleBasic.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3502/buggy-version/ppinot-model.src.main.java.es.us.isa.ppinot.model.schedule.ScheduleDeserializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.getText()", "org.codehaus.jackson.map.ObjectMapper.readValue(jp.getText(),java.lang.Class)", "org.codehaus.jackson.JsonParser.readValueAs(java.lang.Class)"], "Fixed commit": "bf8332e331ae6acbb1c9c1679922920097eb42e9", "Url": "https://api.github.com/repos/isa-group/ppinot", "Date": "2017-12-07T12:54:29Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playBackButton.getText().equals(\"Pause\")) { currentPlayer.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2055/buggy-version/src.main.java.fun.personalUse.mainAlbumTunesApp.AlbumTunesController.java", "BodyUseAPI": [], "Fixed commit": "0a2cb27ac763a4f9f8e37bbba4000041f1a4221e", "Url": "https://api.github.com/repos/Kneuman0/AlbumTunes", "Date": "2016-10-06T22:34:01Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (require) { int j = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1497/buggy-version/src.net.fathomsoft.nova.tree.variables.Array.java", "BodyUseAPI": [], "Fixed commit": "e8522630d3831dbe7155dc38601a4a3cfe0d28cd", "Url": "https://api.github.com/repos/NovaFoundation/Nova", "Date": "2016-07-12T15:21:36Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (comp2 == 0) { if (((getLanguage_code()) != null) && ((r.getLanguage_code()) != null)) { return languages.get(getLanguage_code()).compareTo(languages.get(r.getLanguage_code())); }else return 0; }else return comp2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3136/buggy-version/app.src.main.java.com.arnastofnun.idordabanki.Result.java", "BodyUseAPI": [], "Fixed commit": "15214c21f3fde5b8e90b0318ddbb8ec23f37075c", "Url": "https://api.github.com/repos/arnastofnun/Ordabanki_for_android", "Date": "2015-03-20T12:23:37Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDb) == null) { mDb = mCnkDbHelper.getReadableDatabase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5385/buggy-version/src.com.htb.cnk.data.Dishes.java", "BodyUseAPI": [], "Fixed commit": "c5eb1bf144f53dd058072a326ca7fd505eeffeb8", "Url": "https://api.github.com/repos/JoshTsang/cnk-orderPad", "Date": "2012-10-17T08:07:13Z"},
{"Line": "=>786", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.Double>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pos >= 3) { recommendationCode1 = new java.util.ArrayList<java.lang.String>(similarProgrammes.keySet()).get((pos - 1)); recommendationCode2 = new java.util.ArrayList<java.lang.String>(similarProgrammes.keySet()).get((pos - 2)); recommendationCode3 = new java.util.ArrayList<java.lang.String>(similarProgrammes.keySet()).get((pos - 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8603/buggy-version/src.main.java.com.ErasmusProject.rest.EctsStore.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "3fcf8c065de756cf1f56ffdcbfa524c77b473ef8", "Url": "https://api.github.com/repos/ErasmusProjectFTN/triple-store", "Date": "2017-07-10T11:21:09Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.loveboyuan.smarttrader.Item>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((item.getOwnerID()) != (com.loveboyuan.smarttrader.InventoryActivity.usr.getMy_id())) { intent.putExtra(\"OTH\", \"others\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2729/buggy-version/SmartTrader.app.src.main.java.com.loveboyuan.smarttrader.InventoryActivity.java", "BodyUseAPI": [], "Fixed commit": "464c43679868ec9708a3747f140518ec4daa8911", "Url": "https://api.github.com/repos/CMPUT301F15T16/Team16Project", "Date": "2015-11-28T18:29:53Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { writer.backUp(); writer.append(\" else \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5713/buggy-version/src.main.java.net.hydromatic.linq4j.expressions.ConditionalStatement.java", "BodyUseAPI": [], "Fixed commit": "d5e961e609a9e0c8d161dd54d19fa8ec243c8865", "Url": "https://api.github.com/repos/jelical/linq4j", "Date": "2014-04-09T22:30:09Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(removal.getCause().equals(RemovalCause.EXPIRED))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/289/buggy-version/external.elasticsearch.src.main.java.com.digitalpebble.stormcrawler.elasticsearch.persistence.StatusUpdaterBolt.java", "BodyUseAPI": [], "Fixed commit": "de40822bad3894bd031bd59cc23c8bab2ceccef7", "Url": "https://api.github.com/repos/DigitalPebble/storm-crawler", "Date": "2017-02-22T17:00:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (part.getData().toString().contains(XliffDocumentConstants.COUNT_START)) { countGroupPart = part; break; }else if (part.getData().toString().contains(XliffDocumentConstants.HEADER_END)) { headerEndPartIndex = skeleton.getParts().indexOf(part); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3590/buggy-version/src.main.java.com.vistatec.ocelot.xliff.okapi.Xliff12HeaderWriter.java", "BodyUseAPI": ["skeleton.getParts().indexOf(net.sf.okapi.common.skeleton.GenericSkeletonPart)", "part.getData().toString().contains(XliffDocumentConstants.HEADER_END)", "net.sf.okapi.common.skeleton.GenericSkeletonPart.getData()", "part.getData().toString()"], "Fixed commit": "eaf52ed05fff779bf5c382e2e50fec838fb8b477", "Url": "https://api.github.com/repos/vistatec/ocelot", "Date": "2017-02-15T15:20:33Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<integratedtoolkit.types.resources.Worker<T>, integratedtoolkit.util.ResourceScheduler<P, T>>.get(integratedtoolkit.types.resources.Worker<T>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (ui != null) { hostedActions = ui.getHostedActions(); }else { hostedActions = new java.util.LinkedList<integratedtoolkit.scheduler.types.AllocatableAction<P, T>>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3879/buggy-version/saas.programming_model.compss.runtime.scheduler.commons.src.main.java.integratedtoolkit.components.impl.TaskScheduler.java", "BodyUseAPI": ["integratedtoolkit.util.ResourceScheduler<P, T>.getHostedActions()"], "Fixed commit": "216fc716c2beae6a461c71cee9626ded3216d5a5", "Url": "https://api.github.com/repos/ascetictoolbox/ascetictoolbox", "Date": "2016-10-11T02:43:09Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.index.DocTermOrds.getOrdTermsEnum(org.apache.lucene.index.AtomicReader)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (termsEnum == null) { return new int[reader.maxDoc()][]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6706/buggy-version/contrib.invenio.src.java.org.apache.lucene.search.DictionaryRecIdCache.java", "BodyUseAPI": [], "Fixed commit": "7b1f6a67c2e6e43213efb657c1df471d40f00edf", "Url": "https://api.github.com/repos/romanchyla/montysolr", "Date": "2013-03-21T17:55:12Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((scan.getRetentionTime()) != null) this.retentionTime = org.yeastrc.www.proteinfer.idpicker.WIdPickerSpectrumMatch.round(scan.getRetentionTime()); else this.retentionTime = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6011/buggy-version/MSDaPl_Web_App.src.org.yeastrc.www.proteinfer.idpicker.WIdPickerSpectrumMatch.java", "BodyUseAPI": [], "Fixed commit": "acfb643d8f9afd412f2d8aaffcc558cd7e9003fd", "Url": "https://api.github.com/repos/yeastrc/msdapl", "Date": "2016-11-30T23:15:49Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tumlGraph) != null) { this.tumlGraph.shutdown(); this.tumlGraph = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3427/buggy-version/runtime.runtime-domain-neo4j.src.main.java.org.tuml.runtime.adaptor.TumlNeo4jGraphFactory.java", "BodyUseAPI": [], "Fixed commit": "338e3ba7ca9a1f5b8beca71f7829e6cfdf456064", "Url": "https://api.github.com/repos/pietermartin/tuml", "Date": "2013-02-10T04:54:27Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jclouds.openstack.nova.v2_0.domain.Server.getAddresses()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((addresses.size()) > 0) return addresses.values().iterator().next().getAddr();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/489/buggy-version/jar-connector.src.main.java.com.sixsq.slipstream.connector.openstack.OpenStackConnector.java", "BodyUseAPI": ["addresses.values().iterator().next().getAddr()", "com.google.common.collect.Multimap<java.lang.String, org.jclouds.openstack.nova.v2_0.domain.Address>.values()", "addresses.values().iterator().next()", "addresses.values().iterator()"], "Fixed commit": "01c3c19fbfc348409df3f9932b1fc08af63021f1", "Url": "https://api.github.com/repos/slipstream/SlipStreamServer", "Date": "2014-04-15T14:09:37Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (alternative.isMatchable()) { if (alternative.isEmptyLeafNode()) { if ((node.getStartLocation()) != (location)) { propagateEdgesAndPrefixes(node, result, alternative, alternative.getResult()); }else { propagateEdgesAndPrefixesForNullable(node, result, alternative, alternative.getResult(), node.getEdges().size()); } return alternative; } }else { org.rascalmpl.parser.gtd.stack.edge.EdgesSet<P> alternativeEdgesSet = alternative.getIncomingEdges(); int resultStoreId = getResultStoreId(alternative.getId()); if ((alternativeEdgesSet != null) && ((alternativeEdgesSet.getLastVisitedLevel(resultStoreId)) == (location))) { if ((node.getStartLocation()) != (location)) { propagateEdgesAndPrefixes(node, result, alternative, alternativeEdgesSet.getLastResult(resultStoreId)); }else { propagateEdgesAndPrefixesForNullable(node, result, alternative, alternativeEdgesSet.getLastResult(resultStoreId), node.getEdges().size()); } return alternative; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/141/buggy-version/src.org.rascalmpl.parser.gtd.SGTDBF.java", "BodyUseAPI": ["org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>.getId()", "org.rascalmpl.parser.gtd.SGTDBF<P, T, S>.propagateEdgesAndPrefixes(org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>,org.rascalmpl.parser.gtd.result.AbstractNode,org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>,alternativeEdgesSet.getLastResult(resultStoreId))", "org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>.getIncomingEdges()", "org.rascalmpl.parser.gtd.SGTDBF<P, T, S>.propagateEdgesAndPrefixesForNullable(org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>,org.rascalmpl.parser.gtd.result.AbstractNode,org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>,alternativeEdgesSet.getLastResult(resultStoreId),node.getEdges().size())", "org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>.getResult()", "org.rascalmpl.parser.gtd.SGTDBF<P, T, S>.propagateEdgesAndPrefixes(org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>,org.rascalmpl.parser.gtd.result.AbstractNode,org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>,alternative.getResult())", "org.rascalmpl.parser.gtd.SGTDBF<P, T, S>.getResultStoreId(alternative.getId())", "org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>.getResult()", "org.rascalmpl.parser.gtd.SGTDBF<P, T, S>.propagateEdgesAndPrefixesForNullable(org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>,org.rascalmpl.parser.gtd.result.AbstractNode,org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>,alternative.getResult(),node.getEdges().size())", "org.rascalmpl.parser.gtd.stack.AbstractStackNode<P>.isEmptyLeafNode()"], "Fixed commit": "a927f2923ee7ab5e98a84b1ddc36ae71224bf0cc", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2016-05-15T10:01:58Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity.isCompositePrimaryKey()) { entity.doWithProperties(new org.springframework.data.mapping.PropertyHandler<org.springframework.data.cassandra.mapping.CassandraPersistentProperty>() { @java.lang.Override public void doWithPersistentProperty(org.springframework.data.cassandra.mapping.CassandraPersistentProperty p) { where.and(com.datastax.driver.core.querybuilder.QueryBuilder.eq(p.getColumnName().toCql(), wrapper.getProperty(p))); } }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3901/buggy-version/spring-data-cassandra.src.main.java.org.springframework.data.cassandra.convert.MappingCassandraConverter.java", "BodyUseAPI": ["org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?>.doWithProperties(org.springframework.data.mapping.PropertyHandler<org.springframework.data.cassandra.mapping.CassandraPersistentProperty>)"], "Fixed commit": "8a64f91d9beb13e2cbe7a14604eb14c175ea8d5c", "Url": "https://api.github.com/repos/spring-projects/spring-data-cassandra", "Date": "2014-09-12T16:13:17Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notesText.length()) > 0) shift.notes = notesText.getText().toString(); else shift.notes = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/679/buggy-version/app.src.main.java.com.example.shiftmate.NewShiftActivity.java", "BodyUseAPI": ["notesText.getText().toString()", "android.widget.TextView.getText()"], "Fixed commit": "cb74c2c40f2543409045a22d04d83cf5274f0e7e", "Url": "https://api.github.com/repos/Jordan2551/SM", "Date": "2016-06-12T17:21:17Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.fenixedu.presentationTier.servlets.FileDownloadServlet.getFileFromURL(request.getRequestURI())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (request.getPathInfo().equals((\"/\" + (file.getExternalId())))) { response.sendRedirect(file.getDownloadUrl()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9220/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.servlets.FileDownloadServlet.java", "BodyUseAPI": ["net.sourceforge.fenixedu.domain.File.getDownloadUrl()", "javax.servlet.http.HttpServletResponse.sendRedirect(file.getDownloadUrl())"], "Fixed commit": "6d153e5afed52af02678bf2d2495546f20924417", "Url": "https://api.github.com/repos/FenixEdu/fenix", "Date": "2014-01-15T17:55:10Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Vector.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s == 0) table.hashMap.remove(id); else if (!(table.isVersioned)) { ((de.independit.scheduler.server.repository.SDMSObject) (versions.elementAt(0))).validFrom = startVersion; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4733/buggy-version/src.server.repository.SDMSVersions.java", "BodyUseAPI": [], "Fixed commit": "1cc89d01af7dfd03b866d32263517395259fd71d", "Url": "https://api.github.com/repos/schedulix/schedulix", "Date": "2013-07-30T08:49:40Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFalling)) { body.setLinearVelocity(0, (-0.2F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7335/buggy-version/core.src.uk.co.redfruit.gdx.skyisfalling.game.objects.EnemyShip.java", "BodyUseAPI": [], "Fixed commit": "066a4ce175c7962e2a64dd2de682781f0f18cfe6", "Url": "https://api.github.com/repos/phunni/SkyIsFalling", "Date": "2016-12-19T20:15:11Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((styleManager.getDecimalPattern()) != null) { decimalPattern = styleManager.getDecimalPattern(); }else { if (((java.lang.Math.abs(value)) > 1000.0) || ((java.lang.Math.abs(value)) < 0.001)) { decimalPattern = \"0E0\"; }else { decimalPattern = \"0.###\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7835/buggy-version/xchart.src.main.java.com.xeiam.xchart.internal.chartpart.NumberFormatter.java", "BodyUseAPI": ["com.xeiam.xchart.StyleManager.getDecimalPattern()"], "Fixed commit": "98dfa429c7f547c88a7942849c9bd03d9083d336", "Url": "https://api.github.com/repos/leusonmario/XChart", "Date": "2015-04-12T14:25:45Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((defaultState != null) && (mode == (PinMode.DIGITAL_OUTPUT))) { setState(pin, defaultState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9175/buggy-version/pi4j-core.src.main.java.com.pi4j.io.gpio.GpioProviderBase.java", "BodyUseAPI": ["com.pi4j.io.gpio.GpioProviderBase.setState(com.pi4j.io.gpio.Pin,com.pi4j.io.gpio.PinState)"], "Fixed commit": "ab1fc5256e04469689983bd66219b6b3768d7632", "Url": "https://api.github.com/repos/Pi4J/pi4j", "Date": "2015-03-01T18:31:11Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((property.getEType()) instanceof org.eclipse.ocl.ecore.VoidType) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/443/buggy-version/plugins.org.eclipse.ocl.ecore.src.org.eclipse.ocl.ecore.EcoreEvaluationEnvironment.java", "BodyUseAPI": [], "Fixed commit": "14bf6d6a6a62380cf1c9b18c3928cbdefb291a1c", "Url": "https://api.github.com/repos/FURCAS-dev/FURCAS", "Date": "2011-04-30T19:29:36Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["invoker.CommandInvoker.parseCommandName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((cmdName == null) || (cmdName.trim().isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7745/buggy-version/src.main.java.invoker.CommandInvoker.java", "BodyUseAPI": [], "Fixed commit": "658f934a62b776ce3ac4e0ea3a37453fca264832", "Url": "https://api.github.com/repos/MHGBlue/DosBox", "Date": "2016-07-22T14:55:55Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS) { basedir = basedir.replaceAll(\"\\\\\\\\\", \"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1026/buggy-version/src.main.java.de.uni_potsdam.hpi.asg.common.io.Invoker.java", "BodyUseAPI": [], "Fixed commit": "37d38cfa5e0cfc269e13debf245fbd0b41d934ca", "Url": "https://api.github.com/repos/nkluge/asgcommon", "Date": "2016-01-19T15:20:48Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(applyInfo.isProcessing())) { throw new com.example.demo.service.exception.CustomException(\"please refresh your browser\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8662/buggy-version/src.main.java.com.example.demo.web.AdminController.java", "BodyUseAPI": [], "Fixed commit": "5a84628ba16b80506bd5e0039f0ff9cca3f83577", "Url": "https://api.github.com/repos/hao-projects/special-device-demo", "Date": "2017-11-30T07:40:37Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teaminfinity.elementalinvocations.entity.EntityBallLightning.getThrower()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (caster != null) { caster.dismountRidingEntity(); com.teaminfinity.elementalinvocations.handler.PlayerStateHandler.getInstance().getState(caster).setInvisible(false).setInvulnerable(false).setEthereal(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4580/buggy-version/src.main.java.com.teaminfinity.elementalinvocations.entity.EntityBallLightning.java", "BodyUseAPI": ["com.teaminfinity.elementalinvocations.handler.PlayerStateHandler.getInstance().getState(caster).setInvisible(false).setInvulnerable(false).setEthereal(boolean)", "com.teaminfinity.elementalinvocations.handler.PlayerStateHandler.getInstance().getState(net.minecraft.entity.player.EntityPlayer)", "com.teaminfinity.elementalinvocations.handler.PlayerStateHandler.getInstance().getState(caster).setInvisible(boolean)", "net.minecraft.entity.player.EntityPlayer.dismountRidingEntity()", "com.teaminfinity.elementalinvocations.handler.PlayerStateHandler.getInstance().getState(caster).setInvisible(false).setInvulnerable(boolean)"], "Fixed commit": "180f19806aed28ced961251260f9ea676c3afed5", "Url": "https://api.github.com/repos/InfinityRaider/ElementalInvocations", "Date": "2016-08-05T15:13:57Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javassist.bytecode.EnclosingMethodAttribute.methodIndex()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mi == 0) return MethodInfo.nameClinit; else { int ni = cp.getNameAndTypeName(mi); return cp.getUtf8Info(ni); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8649/buggy-version/src.main.javassist.bytecode.EnclosingMethodAttribute.java", "BodyUseAPI": ["javassist.bytecode.ConstPool.getNameAndTypeName(int)"], "Fixed commit": "a0f4d935a20ffeefcfe4c66730ec702b7fff0928", "Url": "https://api.github.com/repos/jboss-javassist/javassist", "Date": "2014-11-18T06:43:31Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isValid(pile, card)) { values.add(new java.lang.Integer(card.value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7703/buggy-version/AI.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(java.lang.Integer)"], "Fixed commit": "5f2372a803324bbfb8c1f3b772a05bbdb00d05ea", "Url": "https://api.github.com/repos/thewells1024/Idiot-in-Java", "Date": "2015-02-06T23:17:19Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.isEmpty()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7703/buggy-version/AI.java", "BodyUseAPI": [], "Fixed commit": "5f2372a803324bbfb8c1f3b772a05bbdb00d05ea", "Url": "https://api.github.com/repos/thewells1024/Idiot-in-Java", "Date": "2015-02-06T23:17:19Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calculator == null) { calculator = new com.luckycatlabs.sunrisesunset.SunriseSunsetCalculator(new com.luckycatlabs.sunrisesunset.dto.Location(appSettings.getDouble(Key.LAST_LATITUDE), appSettings.getDouble(Key.LAST_LONGITUDE)), java.util.TimeZone.getDefault().getID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6770/buggy-version/src.com.alimuzaffar.sunalarm.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "29de9dc7b5c41304c8284e2da0139d515f6398ca", "Url": "https://api.github.com/repos/atgheb/sun-status-app", "Date": "2012-08-13T19:27:46Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelor.apps.hr.db.Expense.getExpenseLineList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (expenseLineList != null) { for (com.axelor.apps.hr.db.ExpenseLine expenseLine : expenseLineList) { exTaxTotal = exTaxTotal.add(expenseLine.getUntaxedAmount()); taxTotal = taxTotal.add(expenseLine.getTotalTax()); inTaxTotal = inTaxTotal.add(expenseLine.getTotalAmount()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8822/buggy-version/axelor-human-resource.src.main.java.com.axelor.apps.hr.service.expense.ExpenseServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "d73d8d702afdb2e2c11a0aab9705d34642bc4d55", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2016-11-25T15:12:27Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((char1.getHitPoints()) > (char1.getMaxHP())) char1.setHitPoints(char1.getMaxHP());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5676/buggy-version/TalesofArterra.src.byui.cit260.talesofarterra.control.CharacterControl.java", "BodyUseAPI": ["java.lang.Character.getMaxHP()", "java.lang.Character.setHitPoints(char1.getMaxHP())"], "Fixed commit": "d469cb9095611bf720fa9049056ced92b5b7cb02", "Url": "https://api.github.com/repos/Perreault-Dale/TalesOfArterra", "Date": "2016-06-12T01:03:45Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TFM_Util.imposters.contains(player.getName())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2608/buggy-version/src.me.StevenLawson.TotalFreedomMod.TFM_AdminList.java", "BodyUseAPI": [], "Fixed commit": "74355fb15316414af51fad1fc3cea8f3ac26bc2a", "Url": "https://api.github.com/repos/FreedomRoaming/FreedomRoamingMod", "Date": "2015-05-17T20:43:04Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((fromLocation != null) && (toLocation != null)) { if (subType.equals(\"VERTICAL\")) event.setReplaced(java.lang.String.valueOf(java.lang.Math.abs(((fromLocation.getY()) - (toLocation.getY()))))); else if (subType.equals(\"HORIZONTAL\")) event.setReplaced(java.lang.String.valueOf(java.lang.Math.sqrt(((java.lang.Math.pow(((fromLocation.getX()) - (toLocation.getX())), 2)) + (java.lang.Math.pow(((fromLocation.getZ()) - (toLocation.getZ())), 2)))))); else event.setReplaced(java.lang.String.valueOf(fromLocation.distance(toLocation))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8079/buggy-version/src.main.java.net.aufdemrand.denizen.tags.core.LocationTags.java", "BodyUseAPI": ["java.lang.Math.pow(((fromLocation.getX()) - (toLocation.getX())),int)", "net.aufdemrand.denizen.utilities.arguments.Location.getY()", "net.aufdemrand.denizen.utilities.arguments.Location.getX()", "java.lang.Math.sqrt(((java.lang.Math.pow(((fromLocation.getX()) - (toLocation.getX())), 2)) + (java.lang.Math.pow(((fromLocation.getZ()) - (toLocation.getZ())), 2))))", "net.aufdemrand.denizen.utilities.arguments.Location.getZ()", "net.aufdemrand.denizen.utilities.arguments.Location.getY()", "java.lang.Math.pow(((fromLocation.getZ()) - (toLocation.getZ())),int)", "java.lang.String.valueOf(fromLocation.distance(toLocation))", "net.aufdemrand.denizen.utilities.arguments.Location.distance(net.aufdemrand.denizen.utilities.arguments.Location)", "net.aufdemrand.denizen.events.ReplaceableTagEvent.setReplaced(java.lang.String)", "net.aufdemrand.denizen.utilities.arguments.Location.getZ()", "net.aufdemrand.denizen.events.ReplaceableTagEvent.setReplaced(java.lang.String)", "java.lang.String.valueOf(int)", "net.aufdemrand.denizen.utilities.arguments.Location.getX()", "net.aufdemrand.denizen.events.ReplaceableTagEvent.setReplaced(java.lang.String)", "java.lang.String.valueOf(double)", "java.lang.Math.abs(((fromLocation.getY()) - (toLocation.getY())))"], "Fixed commit": "6237e710351d3be4433a248030ba79540c9e13fd", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-02-08T16:01:53Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((fromLocation != null) && (toLocation != null)) { event.setReplaced(net.aufdemrand.denizen.utilities.Utilities.getCardinal(net.aufdemrand.denizen.utilities.Utilities.getYaw(toLocation.toVector().subtract(fromLocation.toVector()).normalize()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8079/buggy-version/src.main.java.net.aufdemrand.denizen.tags.core.LocationTags.java", "BodyUseAPI": ["net.aufdemrand.denizen.events.ReplaceableTagEvent.setReplaced(net.aufdemrand.denizen.utilities.Utilities.getCardinal(net.aufdemrand.denizen.utilities.Utilities.getYaw(toLocation.toVector().subtract(fromLocation.toVector()).normalize())))", "net.aufdemrand.denizen.utilities.arguments.Location.toVector()", "net.aufdemrand.denizen.utilities.Utilities.getYaw(toLocation.toVector().subtract(fromLocation.toVector()).normalize())", "net.aufdemrand.denizen.utilities.Utilities.getCardinal(net.aufdemrand.denizen.utilities.Utilities.getYaw(toLocation.toVector().subtract(fromLocation.toVector()).normalize()))", "toLocation.toVector().subtract(fromLocation.toVector()).normalize()", "toLocation.toVector().subtract(fromLocation.toVector())", "net.aufdemrand.denizen.utilities.arguments.Location.toVector()"], "Fixed commit": "6237e710351d3be4433a248030ba79540c9e13fd", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-02-08T16:01:53Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dmg.pmml.Node.getNodes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (children.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7759/buggy-version/pmml-evaluator.src.main.java.org.jpmml.evaluator.TreeModelEvaluator.java", "BodyUseAPI": [], "Fixed commit": "bc226b471a1226627c964d27374fdbeb9a7c63a3", "Url": "https://api.github.com/repos/jpmml/jpmml-evaluator", "Date": "2014-10-09T13:14:09Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((chaintranslator2.get(catom.charAt(21))) != null) chainnum = chaintranslator2.get(catom.charAt(21)); else chainnum = catom.charAt(21);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/481/buggy-version/src.java.org.vikramdock.ProteinStruct.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.util.HashMap<java.lang.Character, java.lang.Character>.get(char)", "java.lang.String.charAt(int)"], "Fixed commit": "0aa8c92fb6ee97c652bee773f049b3dec2e4bba6", "Url": "https://api.github.com/repos/etudes/Protein-Docking", "Date": "2013-07-15T02:22:12Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bufferPos) + 1) >= (availableCharsInBuffer)) { return EOF; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5982/buggy-version/johnzon-core.src.main.java.org.apache.johnzon.core.JsonStreamParserImpl.java", "BodyUseAPI": [], "Fixed commit": "7e12d8947d68b6ea7928f94176dd0d44fb867351", "Url": "https://api.github.com/repos/apache/incubator-johnzon", "Date": "2014-10-07T17:57:37Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ar.com.tzulberti.archerytraining.fragments.common.AbstractTableDataFragment.areRowsClickable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (areRowsClickable) { tr.setClickable(true); tr.setOnClickListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4457/buggy-version/app.src.main.java.ar.com.tzulberti.archerytraining.fragments.common.AbstractTableDataFragment.java", "BodyUseAPI": [], "Fixed commit": "b40970a05be31fc96fcc7f41b496a040f37a45ea", "Url": "https://api.github.com/repos/tzulberti/archery-training", "Date": "2017-06-17T00:52:30Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.jcr.Node.getNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (listNode.hasNode(\"intro\")) { javax.jcr.Node introNode = listNode.getNode(\"intro\"); if ((introNode.hasProperty(\"paragraph_rte\")) && (org.apache.commons.lang.StringUtils.isNotBlank(introNode.getProperty(\"paragraph_rte\").getValue().getString()))) sb.append(\"paragraph text in list not found in web publisher page but found in WEM page.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8050/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.servicelisting.ServiceListingVariation01.java", "BodyUseAPI": ["javax.jcr.Node.getNode(java.lang.String)"], "Fixed commit": "c4329770f03feea965c19a6ba89b69da78beb465", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-01-20T13:11:41Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(primaryCTALinkUrl)) { primaryCTALinkUrl = anchorElement.attr(\"href\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8050/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.productlanding.ProductLandingVariation1.java", "BodyUseAPI": [], "Fixed commit": "c4329770f03feea965c19a6ba89b69da78beb465", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-01-20T13:11:41Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((label != null) && ((label.length()) > 0)) { new com.jboss.demo.mrg.messaging.graphics.AxisLabel(label, com.jboss.demo.mrg.messaging.graphics.AxisLabel.Orientation.VERTICAL, com.jboss.demo.mrg.messaging.graphics.AxisLabel.calculateStartingXPos(g2, label, Orientation.VERTICAL, 0, chartPadding), com.jboss.demo.mrg.messaging.graphics.AxisLabel.calculateStartingYPos(g2, label, Orientation.VERTICAL, chartHeight, chartPadding)).render(g2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/416/buggy-version/mrgDemo.src.com.jboss.demo.mrg.messaging.graphics.GraphUtils.java", "BodyUseAPI": ["com.jboss.demo.mrg.messaging.graphics.AxisLabel.calculateStartingYPos(java.awt.Graphics2D,java.lang.String,Orientation.VERTICAL,int,int)", "com.jboss.demo.mrg.messaging.graphics.AxisLabel.render(java.awt.Graphics2D)", "com.jboss.demo.mrg.messaging.graphics.AxisLabel.calculateStartingXPos(java.awt.Graphics2D,java.lang.String,Orientation.VERTICAL,int,int)"], "Fixed commit": "af4e9cc337e623d15790b9ca05f5856230b6ffa8", "Url": "https://api.github.com/repos/darretta/Demo-Repository", "Date": "2011-09-14T00:12:25Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((label != null) && ((label.length()) > 0)) { new com.jboss.demo.mrg.messaging.graphics.AxisLabel(label, com.jboss.demo.mrg.messaging.graphics.AxisLabel.Orientation.HORIZONTAL, com.jboss.demo.mrg.messaging.graphics.AxisLabel.calculateStartingXPos(g2, label, Orientation.HORIZONTAL, chartWidth, chartPadding), com.jboss.demo.mrg.messaging.graphics.AxisLabel.calculateStartingYPos(g2, label, Orientation.HORIZONTAL, chartHeight, chartPadding)).render(g2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/416/buggy-version/mrgDemo.src.com.jboss.demo.mrg.messaging.graphics.GraphUtils.java", "BodyUseAPI": ["com.jboss.demo.mrg.messaging.graphics.AxisLabel.render(java.awt.Graphics2D)", "com.jboss.demo.mrg.messaging.graphics.AxisLabel.calculateStartingXPos(java.awt.Graphics2D,java.lang.String,Orientation.HORIZONTAL,int,int)", "com.jboss.demo.mrg.messaging.graphics.AxisLabel.calculateStartingYPos(java.awt.Graphics2D,java.lang.String,Orientation.HORIZONTAL,int,int)"], "Fixed commit": "af4e9cc337e623d15790b9ca05f5856230b6ffa8", "Url": "https://api.github.com/repos/darretta/Demo-Repository", "Date": "2011-09-14T00:12:25Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(updatingFromEditor)) { editor.setElementSelection(structureElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8168/buggy-version/plugin_ide.ui.src-lang.melnorme.lang.ide.ui.editor.structure.LangOutlinePage.java", "BodyUseAPI": [], "Fixed commit": "204b3686cf46da0eb518bf625e38e6883bdf26ca", "Url": "https://api.github.com/repos/bruno-medeiros/MelnormeEclipse", "Date": "2015-05-28T12:10:35Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressDialog) != null) { progressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9183/buggy-version/src.main.java.net.hockeyapp.android.tasks.SendFeedbackTask.java", "BodyUseAPI": [], "Fixed commit": "78777d1917e7d20ae4bbd15fd157c16a13c93cd7", "Url": "https://api.github.com/repos/bitstadium/HockeySDK-Android", "Date": "2015-10-06T14:21:17Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["omega.media.video.VideoUtil.findSupportedFname(omega.Context.omegaAssets((\"media/\" + sfn)))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (smFn == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/383/buggy-version/src.main.java.omega.lesson.managers.movie.LiuMovieManager.java", "BodyUseAPI": [], "Fixed commit": "dc4a2b5d4553725828c66a43b3f9fd24a9070c96", "Url": "https://api.github.com/repos/data50p/omega2is", "Date": "2017-02-20T17:43:14Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.substringBeforeLast(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parentParentPath.equals(\"\")) { parentParentPath = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3521/buggy-version/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java", "BodyUseAPI": [], "Fixed commit": "d4c78e49df8bb12ff94e6d50bf2347a8ab086ded", "Url": "https://api.github.com/repos/Jahia/external-provider", "Date": "2016-12-21T16:01:54Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.exists()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!gradleExists) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2251/buggy-version/src.main.java.com.dedao.lints.AutoPointerFileDetector.java", "BodyUseAPI": [], "Fixed commit": "0d8b6dc1093d2335e2018f0d9413fedd63ba6f08", "Url": "https://api.github.com/repos/jessie345/CustomLintRules", "Date": "2017-05-10T11:50:19Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quantity == 0) { throw new java.lang.IllegalArgumentException(\"invoice can be zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3095/buggy-version/src.main.java.pl.edu.agh.mwo.invoice.Invoice.java", "BodyUseAPI": [], "Fixed commit": "91f39f311425aa1c76fe17e2825004e939431ae5", "Url": "https://api.github.com/repos/GosiaLitwin/mwo-invoice-advanced", "Date": "2017-02-12T14:43:04Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quantity < 0) { throw new java.lang.IllegalArgumentException(\"invoice can be zero\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3095/buggy-version/src.main.java.pl.edu.agh.mwo.invoice.Invoice.java", "BodyUseAPI": [], "Fixed commit": "91f39f311425aa1c76fe17e2825004e939431ae5", "Url": "https://api.github.com/repos/GosiaLitwin/mwo-invoice-advanced", "Date": "2017-02-12T14:43:04Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(c.isAfterLast())) { objId = c.getLong(0); }else { c.close(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1211/buggy-version/src.cat.mobilejazz.database.content.DataProvider.java", "BodyUseAPI": ["android.database.Cursor.getLong(int)", "android.database.Cursor.close()"], "Fixed commit": "ca996adc933269c4289c68cd8c299760592597f6", "Url": "https://api.github.com/repos/mobilejazz/mobilejazz-android-database", "Date": "2013-03-15T14:06:27Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cat.mobilejazz.database.content.DataProvider.getChanges(android.database.sqlite.SQLiteDatabase,int,java.lang.String,long,android.content.ContentValues,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (changes != null) { db.insert(Changes.TABLE_NAME, null, changes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1211/buggy-version/src.cat.mobilejazz.database.content.DataProvider.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.insert(Changes.TABLE_NAME,<nulltype>,android.content.ContentValues)"], "Fixed commit": "ca996adc933269c4289c68cd8c299760592597f6", "Url": "https://api.github.com/repos/mobilejazz/mobilejazz-android-database", "Date": "2013-03-15T14:06:27Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.body()) != null) { news.addAll(response.body().getResults()); adapter.notifyItemRangeInserted((offset + 20), news.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3865/buggy-version/app.src.main.java.com.example.guest.newyorktimesclient.MainFragment.java", "BodyUseAPI": ["java.util.List<com.example.guest.newyorktimesclient.Model.Result>.addAll(response.body().getResults())", "retrofit2.Response<com.example.guest.newyorktimesclient.Model.NewsArr>.body()", "response.body().getResults()"], "Fixed commit": "a148aae2fa7616acfcacee3ddb01ec693aa6d49c", "Url": "https://api.github.com/repos/L1maginaire/NewYorkTimesClient", "Date": "2017-11-29T20:25:37Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getPlayer().getGameMode()) == (org.bukkit.GameMode.CREATIVE)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6344/buggy-version/src.me.G4meM0ment.ReNature.Listener.PListener.java", "BodyUseAPI": [], "Fixed commit": "36aee642197671659c7fa1d81b7cc24450c555b0", "Url": "https://api.github.com/repos/G4meM0ment/RPGEssentials", "Date": "2014-02-14T20:05:11Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.get(millis)) == null) data.set(millis, new java.util.ArrayList<aor.spells.Runner.RunData>(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4199/buggy-version/Engine.src.aor.spells.Runner.java", "BodyUseAPI": ["java.util.LinkedList<java.util.ArrayList<aor.spells.Runner.RunData>>.set(int,java.util.ArrayList<aor.spells.Runner.RunData>)"], "Fixed commit": "75bac698393e5df6e193704e425e2bbb703d5085", "Url": "https://api.github.com/repos/Hypersonic/Spells-2", "Date": "2012-07-11T20:22:18Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (input != null) { prop.load(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2911/buggy-version/jvm-monitor-agent.src.main.java.util.PropertyReader.java", "BodyUseAPI": ["java.util.Properties.load(java.io.InputStream)"], "Fixed commit": "dfac6fbac66f97342789273e1d9ccdca48fa249f", "Url": "https://api.github.com/repos/wso2-incubator/automatic-anomaly-detection", "Date": "2016-10-27T05:36:59Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hook.get_pull_request().mergeable) == null) { return \"cannot determine mergeability of pull request. Please try again later\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6175/buggy-version/app.handlers.handler_commands.java", "BodyUseAPI": [], "Fixed commit": "1aa5cb6d877bb4a69da15aec639d82fa67e3a3b8", "Url": "https://api.github.com/repos/indiepocalypse/indie_play_be", "Date": "2015-11-22T17:57:53Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hook.get_pull_request().mergeable) == null) { return \"cannot determine mergeability of pull request. Please try again later\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6175/buggy-version/app.handlers.handler_commands.java", "BodyUseAPI": [], "Fixed commit": "1aa5cb6d877bb4a69da15aec639d82fa67e3a3b8", "Url": "https://api.github.com/repos/indiepocalypse/indie_play_be", "Date": "2015-11-22T17:57:53Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stat instanceof railo.transformer.bytecode.statement.tag.Tag) { t = ((railo.transformer.bytecode.statement.tag.Tag) (stat)); if (stat instanceof railo.transformer.bytecode.statement.tag.TagImport) { }else if (stat instanceof railo.transformer.bytecode.statement.tag.TagFunction) { railo.transformer.cfml.evaluator.impl.Function.throwIfNotEmpty(t); railo.transformer.bytecode.statement.tag.Attribute attr = t.getAttribute(\"access\"); if (attr != null) { railo.transformer.bytecode.expression.ExprString expr = railo.transformer.bytecode.cast.CastString.toExprString(attr.getValue()); if (!(expr instanceof railo.transformer.bytecode.literal.LitString)) throw new railo.transformer.cfml.evaluator.EvaluatorException(\"the attribute access of the Tag function inside an interface must contain a constant value\"); java.lang.String access = ((railo.transformer.bytecode.literal.LitString) (expr)).getString().trim(); if (!(\"public\".equalsIgnoreCase(access))) throw new railo.transformer.cfml.evaluator.EvaluatorException(((\"the attribute access of the tag function inside an interface definition can only have the value [public] not [\" + access) + \"]\")); }else t.addAttribute(new railo.transformer.bytecode.statement.tag.Attribute(false, \"access\", railo.transformer.bytecode.literal.LitString.toExprString(\"public\"), \"string\")); }else throw new railo.transformer.cfml.evaluator.EvaluatorException(((\"tag \" + (libTag.getFullName())) + \" can only contain function definitions.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/267/buggy-version/railo-java.railo-core.src.railo.transformer.cfml.evaluator.impl.Interface.java", "BodyUseAPI": [], "Fixed commit": "82b16a0094ca1e252bd43201a11f9bcfe1c3e84b", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-05-12T21:52:58Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.saga.player.SagaPlayer.getLocation()", "org.saga.player.SagaPlayer.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(playerLocation.getWorld().getName().equals(targetLocation.getWorld().getName()))) { sagaPlayer.message(org.saga.messages.EconomyMessages.tooFarPay()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2030/buggy-version/src.org.saga.commands.EconomyCommands.java", "BodyUseAPI": [], "Fixed commit": "c0e525d481e837d4c5f3dc8a5a3fc5d6f092c6a7", "Url": "https://api.github.com/repos/andfRa/Saga", "Date": "2012-09-10T17:12:53Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sakaiproject.nakamura.lite.content.ContentManagerImpl.getCached(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (structure == null) { org.sakaiproject.nakamura.api.lite.content.Content content = new org.sakaiproject.nakamura.api.lite.content.Content(path, null); update(content); structure = getCached(keySpace, contentColumnFamily, path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2849/buggy-version/src.main.java.org.sakaiproject.nakamura.lite.content.ContentManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "a223f0a48d042b5c4899392194b280f4827665ff", "Url": "https://api.github.com/repos/ieb/sparsemapcontent", "Date": "2011-07-21T14:46:08Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getNode().getSingleRelationship(org.neo4j.graphdb.RelationshipType,org.neo4j.graphdb.Direction)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rel == null) { return null; }else { return new org.neo4j.collections.graphdb.impl.RelationshipImpl(rel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1834/buggy-version/src.main.java.org.neo4j.collections.graphdb.impl.ElementImpl.java", "BodyUseAPI": [], "Fixed commit": "c8b8975b2c5b531bb6dba630a77ec184aa654197", "Url": "https://api.github.com/repos/peterneubauer/graph-collections", "Date": "2011-07-26T21:39:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rel == null) { throw new java.lang.RuntimeException(\"Cannot instantiate RelationshipImpl with null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1834/buggy-version/src.main.java.org.neo4j.collections.graphdb.impl.RelationshipImpl.java", "BodyUseAPI": [], "Fixed commit": "c8b8975b2c5b531bb6dba630a77ec184aa654197", "Url": "https://api.github.com/repos/peterneubauer/graph-collections", "Date": "2011-07-26T21:39:23Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((caseSousLePersonnage.getCaseEnHaut().estRecoltable()) || (caseSousLePersonnage.getCaseADroite().estRecoltable())) || (caseSousLePersonnage.getCaseEnHaut().estRecoltable())) || (caseSousLePersonnage.getCaseEnHaut().estRecoltable())) { conditions.add(Condition.RESSOURCE_ADJACENTE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7551/buggy-version/pla-groupe7-graphique.src.jeu.Homme.java", "BodyUseAPI": [], "Fixed commit": "c924e315ade05a065634af2750e7a8c923ef6545", "Url": "https://api.github.com/repos/geourjoa/pla-groupe7-graphique", "Date": "2016-06-17T13:21:34Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project == null) || (project.isDefault())) return com.intellij.psi.codeStyle.CodeStyleSettingsManager.getInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2847/buggy-version/platform.lang-api.src.com.intellij.psi.codeStyle.CodeStyleSettingsManager.java", "BodyUseAPI": [], "Fixed commit": "a366655d8683c02cf37ac179ce184c9105dfc9c3", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-04-18T09:35:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(plugin.getConfig().contains(\"language\"))) { plugin.getConfig().set(\"language\", \"en_GB\"); plugin.saveConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1822/buggy-version/src.main.java.think.rpgitems.data.Locale.java", "BodyUseAPI": [], "Fixed commit": "09d02f142598560e7daec84b96afb29929e51f44", "Url": "https://api.github.com/repos/miu-wen/RPGitems-reloaded", "Date": "2015-07-22T00:40:40Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (response != null) { comm.put(\"command\", command); comm.put(\"timestamp\", curTime); comm.put(\"response\", response); thzCommandHistory.put(comm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6994/buggy-version/src.eu.selfhost.reiling.THZReader.java", "BodyUseAPI": ["eu.selfhost.reiling.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "24043ba3dbd7fea9bdfe85a1b7aed130908efe9f", "Url": "https://api.github.com/repos/f-reiling/thzcomm", "Date": "2015-03-13T07:33:17Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (response != null) { comm.put(\"timestamp\", curTime); comm.put(\"response\", response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6994/buggy-version/src.eu.selfhost.reiling.THZReader.java", "BodyUseAPI": ["eu.selfhost.reiling.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "24043ba3dbd7fea9bdfe85a1b7aed130908efe9f", "Url": "https://api.github.com/repos/f-reiling/thzcomm", "Date": "2015-03-13T07:33:17Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof java.sql.Timestamp) { return object; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3609/buggy-version/src.main.java.com.zaxxer.sansorm.internal.OrmBase.java", "BodyUseAPI": [], "Fixed commit": "fc582698f654b13c1bfb7fdc949e7ac543158709", "Url": "https://api.github.com/repos/brettwooldridge/SansOrm", "Date": "2016-02-25T00:12:00Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getRequestURI().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dirs.length) == 2) { filePath = dirs[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4266/buggy-version/docker.docker-resources.src.main.java.org.amc.docker.controller.ComposeController.java", "BodyUseAPI": [], "Fixed commit": "dce7a611dff88f78b155a29a4331b793dd1e8fa7", "Url": "https://api.github.com/repos/kingsmiler/cattle", "Date": "2016-02-24T17:01:11Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((preference != null) && ((preference.getKey()) != null)) { key = preference.getKey(); volumePreferencesDisplayed = key.equals(com.firebirdberlin.smartringcontrollerpro.PreferencesFragment.PREFERENCE_SCREEN_RINGER_VOLUME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/77/buggy-version/src.com.firebirdberlin.smartringcontroller.PreferencesFragment.java", "BodyUseAPI": ["android.preference.Preference.getKey()"], "Fixed commit": "3540c638e52a0c139ef43a14314eab34619d1248", "Url": "https://api.github.com/repos/firebirdberlin/SmartRingController", "Date": "2016-07-03T17:58:55Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) == null) { setState(State.DONE); }else { if ((getContext().getContextType()) == (BSONContextType.JAVASCRIPT_WITH_SCOPE)) { backpatchSize(); setContext(getContext().getParentContext()); } setState(getNextState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1078/buggy-version/bson.src.main.org.bson.BSONBinaryWriter.java", "BodyUseAPI": [], "Fixed commit": "40c18e3a704c3965b55a8db511685cbe970ecce8", "Url": "https://api.github.com/repos/rozza/mongo-java-driver", "Date": "2014-05-29T18:47:13Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getResourceProvider().isCaseSensitive()) { if (getPath().equals(other.getPath())) return true; return railo.commons.io.res.util.ResourceUtil.getCanonicalPathEL(this).equals(railo.commons.io.res.util.ResourceUtil.getCanonicalPathEL(other)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5151/buggy-version/railo-java.railo-core.src.railo.commons.io.res.util.ResourceSupport.java", "BodyUseAPI": [], "Fixed commit": "8a33e500734cdca97c85754a12039e4f0828a170", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-10-10T15:56:28Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getPath().equalsIgnoreCase(other.getPath())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5151/buggy-version/railo-java.railo-core.src.railo.commons.io.res.util.ResourceSupport.java", "BodyUseAPI": [], "Fixed commit": "8a33e500734cdca97c85754a12039e4f0828a170", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-10-10T15:56:28Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResourceProvider()) != (other.getResourceProvider())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5151/buggy-version/railo-java.railo-core.src.railo.commons.io.res.util.ResourceSupport.java", "BodyUseAPI": [], "Fixed commit": "8a33e500734cdca97c85754a12039e4f0828a170", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-10-10T15:56:28Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.tag.FileTag.toDestination(railo.runtime.tag.FileTag,java.lang.String,railo.commons.io.res.Resource)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (source.equals(destination)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5151/buggy-version/railo-java.railo-core.src.railo.runtime.tag.FileTag.java", "BodyUseAPI": [], "Fixed commit": "8a33e500734cdca97c85754a12039e4f0828a170", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-10-10T15:56:28Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(com.getcloudcherry.survey.helper.SurveyCC.getInstance().getHeaderActionBarLogo()))) { ((com.getcloudcherry.survey.SurveyActivity) (getActivity())).ION.build(com.getcloudcherry.survey.helper.SurveyCC.getInstance().getContext()).load(com.getcloudcherry.survey.helper.SurveyCC.getInstance().getHeaderActionBarLogo()).withBitmap().fadeIn(true).error(R.drawable.logo_footer).placeholder(R.drawable.logo_footer).intoImageView(mImageFooterLogo); }else { mImageFooterLogo.setImageResource(R.drawable.logo_footer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3645/buggy-version/src.main.java.com.getcloudcherry.survey.fragments.ThanksFragment.java", "BodyUseAPI": [], "Fixed commit": "210ac1a3e6edbc7cd9bf9092d2203e655a448805", "Url": "https://api.github.com/repos/ritesh-dubey/cloudcherry-android-sdk", "Date": "2016-08-18T11:48:06Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(com.getcloudcherry.survey.helper.SurveyCC.getInstance().getHeaderActionBarLogo()))) { ((com.getcloudcherry.survey.SurveyActivity) (getActivity())).ION.build(com.getcloudcherry.survey.helper.SurveyCC.getInstance().getContext()).load(com.getcloudcherry.survey.helper.SurveyCC.getInstance().getHeaderActionBarLogo()).withBitmap().fadeIn(true).error(R.drawable.logo_footer).placeholder(R.drawable.logo_footer).intoImageView(mImageFooterLogo); }else { mImageFooterLogo.setImageResource(R.drawable.logo_footer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3645/buggy-version/src.main.java.com.getcloudcherry.survey.fragments.WelcomeFragment.java", "BodyUseAPI": [], "Fixed commit": "210ac1a3e6edbc7cd9bf9092d2203e655a448805", "Url": "https://api.github.com/repos/ritesh-dubey/cloudcherry-android-sdk", "Date": "2016-08-18T11:48:06Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.jgoodies.common.base.Strings.isBlank(searchGroupString))) { org.protege.editor.owl.model.search.SearchInput searchGroup = parseSearchGroup(searchGroupString.trim()); orSearch.add(searchGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3761/buggy-version/protege-editor-owl.src.main.java.org.protege.editor.owl.model.search.nci.NciSearchStringParser.java", "BodyUseAPI": ["java.lang.String.trim()", "org.protege.editor.owl.model.search.nci.NciSearchStringParser.parseSearchGroup(java.lang.String)"], "Fixed commit": "cef7fa66dd3271e6eca51d766ec827de5152044a", "Url": "https://api.github.com/repos/protegeproject/protege", "Date": "2015-12-17T01:24:11Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (realm == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1638/buggy-version/realm.realm-library.src.main.java.io.realm.BaseRealm.java", "BodyUseAPI": [], "Fixed commit": "2c559dbfbaf9a553eac60c4d062a4f10789bdce5", "Url": "https://api.github.com/repos/realm/realm-java", "Date": "2016-03-06T16:33:27Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (realm == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1638/buggy-version/realm.realm-library.src.main.java.io.realm.BaseRealm.java", "BodyUseAPI": [], "Fixed commit": "2c559dbfbaf9a553eac60c4d062a4f10789bdce5", "Url": "https://api.github.com/repos/realm/realm-java", "Date": "2016-03-06T16:33:27Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentLoad > (vehicle.capacity())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8007/buggy-version/centralized.src.template.Solution.java", "BodyUseAPI": [], "Fixed commit": "9499161c3b100a0cdbca38f25f4e4030e1eb1901", "Url": "https://api.github.com/repos/lorenzotara/Sciuto-Tarantino-ex2", "Date": "2017-11-04T16:46:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.checkBox)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (Tag != null) { Tag.setId(position); Tag.setText(ExploreFragment.Tags.get(position)); Tags.add(Tag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1973/buggy-version/app.src.main.java.v6.caique.TagsAdapter.java", "BodyUseAPI": ["android.widget.CheckBox.setText(ExploreFragment.Tags.get(position))", "android.widget.CheckBox.setId(int)", "java.util.ArrayList<android.widget.CheckBox>.add(android.widget.CheckBox)"], "Fixed commit": "004cc8dc5ff4f8e8a3dd6ea8232bdd39816e53f0", "Url": "https://api.github.com/repos/amirzaidi/Caique", "Date": "2017-03-03T21:57:22Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (originalCommand.returnsResultSet()) { columnMetadata = createProjectedSymbolMetadata(originalCommand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4483/buggy-version/engine.src.main.java.org.teiid.dqp.internal.process.MetaDataProcessor.java", "BodyUseAPI": ["org.teiid.dqp.internal.process.MetaDataProcessor.createProjectedSymbolMetadata(org.teiid.query.sql.lang.Command)"], "Fixed commit": "44174938ca754770eaa07c2eb825c130bd915165", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-10-13T12:58:31Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accountBean) == null) accountBean = ((org.qii.weiciyuan.bean.AccountBean) (intent.getParcelableExtra(BundleArgsConstants.ACCOUNT_EXTRA)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2498/buggy-version/src.org.qii.weiciyuan.ui.main.MainTimeLineActivity.java", "BodyUseAPI": [], "Fixed commit": "01835761090e656d85bc34be05ae99da16e22f04", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2013-10-20T08:19:15Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((member.calculateWeeklyCategoryTargetPoints(selectedCategory.getCategory_id())) == 0) { progress = (points) + (bonusPoints); currentProgress.setProgress((((int) (progress)) % 100)); groupPercentage.setText((((int) (progress)) + \" Punkte\")); }else { progress = ((((member.calculateWeeklyCategoryPoints(selectedCategory.getCategory_id())) + (points)) + (bonusPoints)) * 100) / (member.calculateWeeklyCategoryTargetPoints(selectedCategory.getCategory_id())); currentProgress.setProgress(((int) (progress))); groupPercentage.setText((((int) (progress)) + \"%\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/423/buggy-version/android.src.at.ac.tuwien.sportmate.StartFragment.java", "BodyUseAPI": ["at.ac.tuwien.sportmate.BoGroupMember.calculateWeeklyCategoryPoints(selectedCategory.getCategory_id())", "at.ac.tuwien.sportmate.BoCategory.getCategory_id()", "at.ac.tuwien.sportmate.BoGroupMember.calculateWeeklyCategoryTargetPoints(selectedCategory.getCategory_id())", "at.ac.tuwien.sportmate.BoCategory.getCategory_id()"], "Fixed commit": "f7c119d647fa12da9e4a608e6c9851e24150e827", "Url": "https://api.github.com/repos/BrandiATMuhkuh/prore2012gp3", "Date": "2013-01-14T23:59:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (text == null) { return new org.springframework.web.servlet.ModelAndView(com.w6.controller.EndpointController.W6_VIEW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4716/buggy-version/src.main.java.com.w6.controller.EndpointController.java", "BodyUseAPI": [], "Fixed commit": "8771b3e61b09b0745ce92478218b9dbcf0bfa63b", "Url": "https://api.github.com/repos/W6-Assess/dev", "Date": "2016-09-11T07:39:34Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { lastPosition = savedInstanceState.getInt(\"lastPosition\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4907/buggy-version/app.src.main.java.com.johnston.lmhapp.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "ab07d08c52246594919ee8f5cf547f5be8b2f4fa", "Url": "https://api.github.com/repos/Tom-Johnston/LMH", "Date": "2014-11-10T22:45:32Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(opStack.empty())) { org.araqne.logdb.query.parser.ExpressionParser.Term last = opStack.pop(); if (last instanceof org.araqne.logdb.query.parser.ExpressionParser.FuncTerm) { output.add(last); }else { opStack.push(last); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6468/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.parser.ExpressionParser.java", "BodyUseAPI": ["java.util.Stack<org.araqne.logdb.query.parser.ExpressionParser.Term>.pop()", "java.util.Stack<org.araqne.logdb.query.parser.ExpressionParser.Term>.push(org.araqne.logdb.query.parser.ExpressionParser.Term)"], "Fixed commit": "1864fd7820c557477334d38244e30e1bf94ea537", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-05-01T06:47:54Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmpBool) { updateMat = true; tmpBool = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6795/buggy-version/src.wrath.client.graphics.EntityRenderer.java", "BodyUseAPI": [], "Fixed commit": "881a4123667c6f051af45593c8a490fd1f4ca16c", "Url": "https://api.github.com/repos/nixfanboy/WrathEngine", "Date": "2015-05-20T23:00:48Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"meterpreter >\".equals(terminal.prompt)) && ((terminal.type) == (com.msf.metasploit.model.Terminal.TYPE_CONSOLE))) { terminal.prompt = \"msf > \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5211/buggy-version/app.src.main.java.com.msf.metasploit.adapter.TerminalPresenter.java", "BodyUseAPI": [], "Fixed commit": "b1a539d11eedc5acee6f1baa8be77fe3762779fe", "Url": "https://api.github.com/repos/timwr/MetasploitApp", "Date": "2016-01-16T08:34:47Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((terminal.prompt) == null) && ((terminal.type) == (com.msf.metasploit.model.Terminal.TYPE_METERPRETER))) { terminal.prompt = \"meterpreter > \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5211/buggy-version/app.src.main.java.com.msf.metasploit.adapter.TerminalPresenter.java", "BodyUseAPI": [], "Fixed commit": "b1a539d11eedc5acee6f1baa8be77fe3762779fe", "Url": "https://api.github.com/repos/timwr/MetasploitApp", "Date": "2016-01-16T08:34:47Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!firstLineParseOnly) { if ((signLines.size()) < (lines.size())) { parseErrors.add(new com.minetunes.signs.keywords.argparser.ArgParseError(null, ((\"Move keyword up \" + ((lines.size()) - (signLines.size()))) + \" line(s)\"), true)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6624/buggy-version/src.minecraft.com.minetunes.signs.keywords.argparser.ArgParser.java", "BodyUseAPI": [], "Fixed commit": "d468e1c09342faa5adf5a5fac44b25e0c97b6c5b", "Url": "https://api.github.com/repos/fenceFoil/MineTunes", "Date": "2013-06-12T18:54:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nowDay > day) { if (nowDay == (day + 1)) { long calTime = cal.getTimeInMillis(); long messageCalTime = messageCal.getTimeInMillis(); long time = (calTime - messageCalTime) / (1000 * 60); if (time < 60) return (\"\" + time) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.min)); if (time < (60 * 60)) return (\"\" + (time / (60 * 60))) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.hour)); } return (\"\" + (nowDay - day)) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.day)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6380/buggy-version/src.org.qii.weiciyuan.bean.CommentBean.java", "BodyUseAPI": [], "Fixed commit": "6cec9a966af41f38f908bf37a25f8732dcc10d8a", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-27T16:11:28Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nowDay > day) { if (nowDay == (day + 1)) { long calTime = cal.getTimeInMillis(); long messageCalTime = messageCal.getTimeInMillis(); long time = (calTime - messageCalTime) / (1000 * 60); if (time < 60) return (\"\" + time) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.min)); if (time < (60 * 60)) return (\"\" + (time / (60 * 60))) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.hour)); } return (\"\" + (nowDay - day)) + (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getString(R.string.day)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6380/buggy-version/src.org.qii.weiciyuan.bean.MessageBean.java", "BodyUseAPI": [], "Fixed commit": "6cec9a966af41f38f908bf37a25f8732dcc10d8a", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-27T16:11:28Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openFile == null) { throw new java.io.FileNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2447/buggy-version/StashCache.app.src.main.java.com.geekeclectic.android.stashcache.StashDataJSONSerializer.java", "BodyUseAPI": [], "Fixed commit": "97886e6e46c8a41ed23c75fbc6e943fdaadbe8b0", "Url": "https://api.github.com/repos/sylkai/stash_cache", "Date": "2015-05-08T00:27:04Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statue) == (ru.ifmo.lesson4.MyActivity.CALCULATED)) { s = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6325/buggy-version/src.ru.ifmo.lesson4.MyActivity.java", "BodyUseAPI": [], "Fixed commit": "d9506d4636d4514817cc3cb1dfdb5925ade38d7d", "Url": "https://api.github.com/repos/Martoon-00/lesson4", "Date": "2013-10-10T18:55:01Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newStatus.getPortMap()) == null) { newStatus.setPortMap(new java.util.HashMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6812/buggy-version/src.main.java.mobi.designmyapp.common.container.provider.ContainerProvider.java", "BodyUseAPI": ["mobi.designmyapp.common.container.model.ContainerStatus.setPortMap(java.util.HashMap)"], "Fixed commit": "09f16313e3595467e36db5bd27168285810f3213", "Url": "https://api.github.com/repos/e-biz/designmyapp-common-api", "Date": "2015-07-31T07:39:08Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(org.thingml.xtext.helpers.AnnotatedElementHelper.isDefined(p, \"private\", \"true\"))) && ((p.eContainer()) instanceof org.thingml.xtext.thingML.Thing)) { if ((p.getTypeRef().isIsArray()) || ((p.getTypeRef().getCardinality()) != null)) { builder.append(((\", this.\" + (org.thingml.xtext.helpers.ThingMLElementHelper.qname(p, \"_\"))) + \"_var.slice(0)\")); }else { builder.append(((\", this.\" + (org.thingml.xtext.helpers.ThingMLElementHelper.qname(p, \"_\"))) + \"_var\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1165/buggy-version/compilers.javascript.src.main.java.org.thingml.compilers.javascript.JSThingActionCompiler.java", "BodyUseAPI": ["p.getTypeRef().isIsArray()", "p.getTypeRef().getCardinality()", "java.lang.StringBuilder.append(((\", this.\" + (org.thingml.xtext.helpers.ThingMLElementHelper.qname(p, \"_\"))) + \"_var\"))", "org.thingml.xtext.thingML.Property.getTypeRef()", "org.thingml.xtext.helpers.ThingMLElementHelper.qname(org.thingml.xtext.thingML.Property,java.lang.String)", "org.thingml.xtext.helpers.ThingMLElementHelper.qname(org.thingml.xtext.thingML.Property,java.lang.String)", "org.thingml.xtext.thingML.Property.getTypeRef()", "java.lang.StringBuilder.append(((\", this.\" + (org.thingml.xtext.helpers.ThingMLElementHelper.qname(p, \"_\"))) + \"_var.slice(0)\"))"], "Fixed commit": "7f21ef2e718832192aed3b7f99cd6be28c64dad9", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2017-08-16T13:45:56Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["intent.getExtras().getString(Intent.EXTRA_TEXT)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pageUri != null) { pageTitle += \" \" + pageUri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3693/buggy-version/src.info.justaway.PostActivity.java", "BodyUseAPI": [], "Fixed commit": "2d1d6dd666a9aa5f51ee5ee1860056c39efa7175", "Url": "https://api.github.com/repos/justaway-factory/justaway", "Date": "2013-09-28T08:26:14Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.equals(\"true\")) { response.setHeader(\"Content-disposition\", \"attachment;filename=sparql_result.tsv\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8111/buggy-version/rdfproxy.src.main.java.tools.SPARQL.java", "BodyUseAPI": [], "Fixed commit": "80aaf8199a26a32c1f409e518eed009171111f37", "Url": "https://api.github.com/repos/mainzed/libs-rdf4j-proxy", "Date": "2017-06-07T14:04:50Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.app.util.ValidatorUtil.isNotNull(categoryId)) { request.getCategoryId().add(categoryId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3808/buggy-version/src.java.com.app.util.eBaySearchResultUtil.java", "BodyUseAPI": ["request.getCategoryId().add(java.lang.String)"], "Fixed commit": "163b01cd73cd9d81b34c05f4c2c9c9e1b482e734", "Url": "https://api.github.com/repos/jonathanmccann/auction-alert", "Date": "2015-10-28T20:54:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((year >= 2000) && (year <= 9999)) { Year = year; }else { Year = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6666/buggy-version/calproject.src.be.thijs.calproject.CalDate.java", "BodyUseAPI": [], "Fixed commit": "1b604760cbd4df3fb0e8dfe36186ddd63024cadc", "Url": "https://api.github.com/repos/hfsdo/thuis", "Date": "2013-01-15T15:07:56Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minute >= 0) && (minute <= 59)) { Minute = minute; }else { Minute = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6666/buggy-version/calproject.src.be.thijs.calproject.CalDate.java", "BodyUseAPI": [], "Fixed commit": "1b604760cbd4df3fb0e8dfe36186ddd63024cadc", "Url": "https://api.github.com/repos/hfsdo/thuis", "Date": "2013-01-15T15:07:56Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hour >= 0) && (hour <= 23)) { Hour = hour; }else { Hour = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6666/buggy-version/calproject.src.be.thijs.calproject.CalDate.java", "BodyUseAPI": [], "Fixed commit": "1b604760cbd4df3fb0e8dfe36186ddd63024cadc", "Url": "https://api.github.com/repos/hfsdo/thuis", "Date": "2013-01-15T15:07:56Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size < 0) size = 255 & size;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1730/buggy-version/src.main.java.zmq.V1Decoder.java", "BodyUseAPI": [], "Fixed commit": "7061f3879179177341d05a1cdc44f5cd39e19ac2", "Url": "https://api.github.com/repos/miniway/jeromq", "Date": "2012-12-01T09:29:57Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.copyOf(int[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((s2[(j - 1)]) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/656/buggy-version/src.com.java.hackermeter.recursion.AmbiguousAlphabet.java", "BodyUseAPI": [], "Fixed commit": "3a74fd5c6728740dc9db158c221211c19f97d499", "Url": "https://api.github.com/repos/deanblacc/HackerMeter", "Date": "2013-09-09T22:13:44Z"},
{"Line": "=>1504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.locale.level_map.get(current_level).intro.size()) > 0) { this.hudManager.showLevelIntro(this.locale.level_map.get(current_level)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8388/buggy-version/app.src.main.java.com.linguaculturalists.phoenicia.PhoeniciaGame.java", "BodyUseAPI": ["this.locale.level_map.get(java.lang.String)", "com.linguaculturalists.phoenicia.ui.HUDManager.showLevelIntro(this.locale.level_map.get(current_level))"], "Fixed commit": "163da0b4598666c684362187c0d3b735aab8c8c8", "Url": "https://api.github.com/repos/mhall119/Phoenicia", "Date": "2016-07-23T01:20:21Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((next.intro.size()) > 0) { this.helpButton.setVisible(true); }else { this.helpButton.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8388/buggy-version/app.src.main.java.com.linguaculturalists.phoenicia.ui.DefaultHUD.java", "BodyUseAPI": [], "Fixed commit": "163da0b4598666c684362187c0d3b735aab8c8c8", "Url": "https://api.github.com/repos/mhall119/Phoenicia", "Date": "2016-07-23T01:20:21Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hp) <= 0) switchState(0); else switchState(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8789/buggy-version/src.hhu.propra2013.gruppe55.Player.java", "BodyUseAPI": [], "Fixed commit": "9cd910b5603a3aad8cb60f7b36a63347bd30d7a8", "Url": "https://api.github.com/repos/propra13-orga/gruppe55", "Date": "2013-06-03T21:43:21Z"},
{"Line": "=>2539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(stepMode)) && (!(started))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/982/buggy-version/CodenameOne.src.com.codename1.ui.Component.java", "BodyUseAPI": [], "Fixed commit": "60997a296028239fc85d1892d83a573855fea5b8", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-09-09T05:43:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (next != null) java.lang.System.arraycopy(next, 0, truncate, length, next.length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7391/buggy-version/core.src.main.java.com.sampullara.mustache.Mustache.java", "BodyUseAPI": ["java.lang.System.arraycopy(com.sampullara.mustache.Code[],int,com.sampullara.mustache.Code[],int,next.length)"], "Fixed commit": "06c2e0493d723d498d2e7fbb5a7f996499411e48", "Url": "https://api.github.com/repos/spullara/mustache.java", "Date": "2011-11-09T00:05:10Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sq.entity.ai.ReputationContainer.getLikeDataByClass(event.entityLiving.getClass(),sq.core.radix.PlayerData)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((likeData != null) && (radixcore.util.RadixLogic.getBooleanWithProbability(chanceToAffectRep))) { sq.core.ReputationHandler.onReputationChange(player, event.entityLiving, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6630/buggy-version/src.main.java.sq.core.forge.EventHooksForge.java", "BodyUseAPI": [], "Fixed commit": "e6a0ef6c3c87af2e1675625371a3c08ad84822e5", "Url": "https://api.github.com/repos/WildBamaBoy/spider-queen", "Date": "2015-07-02T06:00:22Z"},
{"Line": "=>882", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (test) this.testScene = scene;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4038/buggy-version/blade-engine.src.com.bladecoder.engine.model.World.java", "BodyUseAPI": [], "Fixed commit": "b3869ea8b50d23584e714d297913b0b4ea6cce95", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2017-06-05T16:08:00Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (indexingStartColumnIndex == (partitionColumns.size())) { paths.add(fs.getFileStatus(indexingPath).getPath().toString()); }else { org.apache.hadoop.fs.Path[] pathToFilter = statusToPath(fs.listStatus(indexingPath, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(indexingStartColumnIndex)))); for (int idx = indexingStartColumnIndex + 1; idx < (partitionColumns.size()); idx++) { pathToFilter = statusToPath(fs.listStatus(pathToFilter, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(idx)))); } for (org.apache.hadoop.fs.Path path : pathToFilter) { paths.add(path.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6962/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.path.PartitionPathSpec.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.listStatus(org.apache.hadoop.fs.Path[],io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter)", "org.apache.hadoop.fs.FileSystem.listStatus(org.apache.hadoop.fs.Path,io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter)", "io.druid.indexer.path.PartitionPathSpec.statusToPath(fs.listStatus(indexingPath, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(indexingStartColumnIndex))))", "java.util.List<java.lang.String>.get(int)", "io.druid.indexer.path.PartitionPathSpec.statusToPath(fs.listStatus(pathToFilter, new io.druid.indexer.path.PartitionPathSpec.PartitionPathFilter(partitionColumns.get(idx))))", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "34f8f1649f4fed845ca2298ccc29f93156356c2b", "Url": "https://api.github.com/repos/sirpkt/druid", "Date": "2016-05-18T03:55:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.accessor) != null) { alreadyopen = info.accessor.equals(accessor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8098/buggy-version/src.semgen.stage.stagetasks.ProjectTask.java", "BodyUseAPI": ["info.accessor.equals(semsim.reading.ModelAccessor)"], "Fixed commit": "3df511d7d4b6810f7dd9a78ad3bf09010be66ffd", "Url": "https://api.github.com/repos/SemBioProcess/SemGen", "Date": "2017-08-28T19:05:10Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) com.joanzapata.android.iconify.Iconify.addIcons(this); else this.setText(this.getText());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3752/buggy-version/android-iconify.src.main.java.android.widget.IconButton.java", "BodyUseAPI": [], "Fixed commit": "d026e944674fb8c398187ef6bbfbcb68429aef43", "Url": "https://api.github.com/repos/liu-chong/android-iconify", "Date": "2014-04-30T19:12:57Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((view) == null) || (!(isPuzzleView))) { android.view.LayoutInflater inflater = ((android.view.LayoutInflater) (context.getSystemService(Context.LAYOUT_INFLATER_SERVICE))); view = inflater.inflate(R.layout.brick_loop_endless_no_puzzle, null); checkbox = ((android.widget.CheckBox) (view.findViewById(R.id.brick_loop_endless_no_puzzle_checkbox))); final org.catrobat.catroid.content.bricks.Brick brickInstance = this; checkbox.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { checked = !(checked); adapter.handleCheck(brickInstance, checked); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2370/buggy-version/catroid.src.org.catrobat.catroid.content.bricks.LoopEndlessBrick.java", "BodyUseAPI": [], "Fixed commit": "786f49d4cd26872353b78901e1f12ff5edc7ddab", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-03-06T12:24:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exception instanceof javax.ws.rs.WebApplicationException) { status = Response.Status.fromStatusCode(((javax.ws.rs.WebApplicationException) (exception)).getResponse().getStatus()); }else if ((extendedUriInfo.getMatchedResourceMethod()) == null) { status = Response.Status.METHOD_NOT_ALLOWED; }else { status = Response.Status.INTERNAL_SERVER_ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/94/buggy-version/lens-server.src.main.java.org.apache.lens.server.error.GenericExceptionMapper.java", "BodyUseAPI": [], "Fixed commit": "5a32af2ec5aa813d75ad7bba5d4ce64f29908ca8", "Url": "https://api.github.com/repos/prongs/lens", "Date": "2016-07-04T13:32:40Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileName) == null) { if ((getCause()) instanceof org.codehaus.groovy.grails.exceptions.SourceCodeAware) { return ((org.codehaus.groovy.grails.exceptions.SourceCodeAware) (getCause())).getFileName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3629/buggy-version/grails-web.src.main.groovy.org.codehaus.groovy.grails.web.pages.exceptions.GroovyPagesException.java", "BodyUseAPI": [], "Fixed commit": "01a70c04a5aa11056334c84f31bae2738161c533", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2011-06-14T16:18:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lineNumber) == (-1)) { if ((getCause()) instanceof org.codehaus.groovy.grails.exceptions.SourceCodeAware) { return ((org.codehaus.groovy.grails.exceptions.SourceCodeAware) (getCause())).getLineNumber(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3629/buggy-version/grails-web.src.main.groovy.org.codehaus.groovy.grails.web.pages.exceptions.GroovyPagesException.java", "BodyUseAPI": [], "Fixed commit": "01a70c04a5aa11056334c84f31bae2738161c533", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2011-06-14T16:18:32Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (baseDir != null) { int i = pageFileName.indexOf(baseDir); if (i > (-1)) { pageFileName = pageFileName.substring(i, pageFileName.length()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3629/buggy-version/grails-web.src.main.groovy.org.codehaus.groovy.grails.web.taglib.exceptions.GrailsTagException.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "01a70c04a5aa11056334c84f31bae2738161c533", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2011-06-14T16:18:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.samuel.programming.Q1.project.references.Turrets.takenTiles[(mx / (com.samuel.programming.Q1.project.references.Reference.tileSize))][(my / (com.samuel.programming.Q1.project.references.Reference.tileSize))]) { java.lang.System.out.println(\"Taken!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4508/buggy-version/src.com.samuel.programming.Q1.project.Panel.TurretPanel.java", "BodyUseAPI": [], "Fixed commit": "938fbabdfe8706fb192bc983720f95bd1fbc5d65", "Url": "https://api.github.com/repos/taz40/Programming-Class-Q1Project", "Date": "2015-10-08T02:01:04Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(password.pwm.util.java.StringUtil.isEmpty(formRow.getRegex()))) { sb.append(\" Regex:\").append(formRow.getRegex()).append(\" Regex Error:\").append(password.pwm.util.java.JsonUtil.serializeMap(formRow.getRegexErrors())).append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3993/buggy-version/server.src.main.java.password.pwm.config.value.FormValue.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "sb.append(\" Regex:\").append(formRow.getRegex()).append(\" Regex Error:\").append(password.pwm.util.java.JsonUtil.serializeMap(formRow.getRegexErrors()))", "java.lang.StringBuilder.append(formRow.getRegex())", "password.pwm.config.value.data.FormConfiguration.getRegexErrors()", "password.pwm.config.value.data.FormConfiguration.getRegex()", "password.pwm.util.java.JsonUtil.serializeMap(formRow.getRegexErrors())", "sb.append(\" Regex:\").append(formRow.getRegex()).append(\" Regex Error:\").append(password.pwm.util.java.JsonUtil.serializeMap(formRow.getRegexErrors())).append(java.lang.String)"], "Fixed commit": "7f59662578019fa509bdcb82156f264840e1b818", "Url": "https://api.github.com/repos/pwm-project/pwm", "Date": "2017-10-04T16:25:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.srch07.duplicate_image_finder.util.ReadImage.readFromPath(java.io.File,java.util.Map<java.lang.String, java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((loadedImage == null) || ((imageAtrributes.get(Constants.IMAGE_HEIGHT)) == null)) || ((imageAtrributes.get(Constants.IMAGE_WIDTH)) == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8712/buggy-version/src.main.java.com.srch07.duplicate_image_finder.util.ImageUtility.java", "BodyUseAPI": [], "Fixed commit": "2e51c198d16d9d069dbef9ef25ee05a8314f9087", "Url": "https://api.github.com/repos/srch07/Duplicate-Image-Finder-API", "Date": "2016-01-25T05:45:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((imageHash != null) && (!(imageHash.isEmpty()))) { imagesMap.put(imagesFile.getAbsolutePath(), ((imageAttributes.get(Constants.IMAGE_WIDTH)) * (imageAttributes.get(Constants.IMAGE_WIDTH)))); imagesHashMap.put(imagesFile.getAbsolutePath(), imageHash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8712/buggy-version/src.main.java.com.srch07.duplicate_image_finder.api.DuplicateImageFinder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "2e51c198d16d9d069dbef9ef25ee05a8314f9087", "Url": "https://api.github.com/repos/srch07/Duplicate-Image-Finder-API", "Date": "2016-01-25T05:45:12Z"},
{"Line": "=>953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (high <= 0) { high = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8661/buggy-version/core.src.processing.awt.PSurfaceAWT.java", "BodyUseAPI": [], "Fixed commit": "bb05ad068e7344d603afdba435ba764a1b6e9849", "Url": "https://api.github.com/repos/colorchestra/processing", "Date": "2017-08-27T21:53:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.sleuthkit.autopsy.actions.IngestRunningCheck.checkAndConfirmProceed()) { new java.lang.Thread(() -> { try { org.sleuthkit.autopsy.casemodule.Case.closeCurrentCase(); } catch (org.sleuthkit.autopsy.casemodule.CaseActionException ex) { org.sleuthkit.autopsy.coreutils.Logger.getLogger(org.sleuthkit.autopsy.actions.ExitAction.class.getName()).log(java.util.logging.Level.SEVERE, \"Error closing the current case on exit\", ex); } finally { org.openide.LifecycleManager.getDefault().exit(); } }).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3081/buggy-version/Core.src.org.sleuthkit.autopsy.actions.ExitAction.java", "BodyUseAPI": [], "Fixed commit": "ec108b0b06c98f262d2973d05806c75eb4d2640f", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2017-01-24T18:54:12Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["photoMetadata.getPhoto(googleApiClient).await().getBitmap()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (photo != null) { emitter.onNext(photo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2339/buggy-version/Meetup.app.src.main.java.com.telerikacademy.meetup.provider.GoogleVenuePhotoProvider.java", "BodyUseAPI": ["io.reactivex.ObservableEmitter<android.graphics.Bitmap>.onNext(android.graphics.Bitmap)"], "Fixed commit": "8e47ec279d3507a0fd5be0d2d1a79227a852bda6", "Url": "https://api.github.com/repos/meetup-mobile/meetup-android", "Date": "2017-02-25T18:50:10Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doNotify) { notifyProperties(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5423/buggy-version/app.src.main.java.com.alley.android.ppi.app.sync.PropertyPriceSyncAdapter.java", "BodyUseAPI": [], "Fixed commit": "f074872ef02829a6d60a5765e50903b36b4ce5df", "Url": "https://api.github.com/repos/deskenny/ppi", "Date": "2015-04-30T20:43:34Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.taskboss.commons.core.UnmodifiableObservableList<seedu.taskboss.model.task.ReadOnlyTask>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (recurringTaskToMarkDone.getCategories().contains(Category.done)) { throw new seedu.taskboss.logic.commands.exceptions.CommandException(seedu.taskboss.logic.commands.TerminateCommand.ERROR_TERMINATED_TASK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1751/buggy-version/src.main.java.seedu.taskboss.logic.commands.TerminateCommand.java", "BodyUseAPI": [], "Fixed commit": "51b0a58f5610e1d7bf3a951cded35191419ffbb0", "Url": "https://api.github.com/repos/CS2103JAN2017-W14-B2/main", "Date": "2017-04-07T19:26:47Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(io.github.davidg95.JTill.jtillserver.Utilities.validateBarcode(barcode))) { javax.swing.JOptionPane.showMessageDialog(this, \"Invalid check digit\", \"New Product\", javax.swing.JOptionPane.ERROR_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6425/buggy-version/src.io.github.davidg95.JTill.jtillserver.ProductEntryDialog.java", "BodyUseAPI": [], "Fixed commit": "e59e71f6df4e3ad1ec5213cb50dbac4fbe6182d6", "Url": "https://api.github.com/repos/davidg95/JTillServer", "Date": "2017-11-15T16:11:02Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.societies.privacytrust.trust.impl.engine.DirectTrustEngine.LOG.isDebugEnabled()) org.societies.privacytrust.trust.impl.engine.DirectTrustEngine.LOG.debug((\"Sorted direct trust evidence set \" + sortedEvidenceSet));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6424/buggy-version/privacy-trust.java.trust.src.main.java.org.societies.privacytrust.trust.impl.engine.DirectTrustEngine.java", "BodyUseAPI": ["org.slf4j.Logger.debug((\"Sorted direct trust evidence set \" + sortedEvidenceSet))"], "Fixed commit": "50bb8b5655211ba3c27b94f5d31089fd343384d2", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-11-23T12:54:27Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.societies.privacytrust.trust.impl.engine.DirectTrustEngine.LOG.isDebugEnabled()) org.societies.privacytrust.trust.impl.engine.DirectTrustEngine.LOG.debug((\"Evaluating direct trust evidence set \" + evidenceSet));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6424/buggy-version/privacy-trust.java.trust.src.main.java.org.societies.privacytrust.trust.impl.engine.DirectTrustEngine.java", "BodyUseAPI": ["org.slf4j.Logger.debug((\"Evaluating direct trust evidence set \" + evidenceSet))"], "Fixed commit": "50bb8b5655211ba3c27b94f5d31089fd343384d2", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-11-23T12:54:27Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<function.external.subrvis.SubRvisGene>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (domainMap != null) { for (function.external.subrvis.SubRvisGene domain : domainMap) { if (domain.isPositionIncluded(chr, pos)) { return domain; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/869/buggy-version/src.main.java.function.external.subrvis.SubRvisManager.java", "BodyUseAPI": [], "Fixed commit": "0a961281ac43021017cd303a2fb6ddee9c20e049", "Url": "https://api.github.com/repos/igm-team/atav", "Date": "2016-03-07T22:07:12Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<function.external.subrvis.SubRvisGene>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exonMap != null) { for (function.external.subrvis.SubRvisGene exon : exonMap) { if (exon.isPositionIncluded(chr, pos)) { return exon; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/869/buggy-version/src.main.java.function.external.subrvis.SubRvisManager.java", "BodyUseAPI": [], "Fixed commit": "0a961281ac43021017cd303a2fb6ddee9c20e049", "Url": "https://api.github.com/repos/igm-team/atav", "Date": "2016-03-07T22:07:12Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["matjuice.analysis.TIRCopyStmt.getVarName()", "stmt.getSourceName().getID()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lhs.equals(rhs)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6187/buggy-version/src.matjuice.analysis.PointsToAnalysis.java", "BodyUseAPI": [], "Fixed commit": "dd969e22de649d1e55ca5d460d8e1e99fd79981c", "Url": "https://api.github.com/repos/Sable/matjuice", "Date": "2015-11-18T14:21:19Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["todo.javier.mera.todolist.ui.MainActivity.getCurrentFocus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (view != null) { manager.hideSoftInputFromWindow(view.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8065/buggy-version/app.src.main.java.todo.javier.mera.todolist.ui.MainActivity.java", "BodyUseAPI": ["android.view.View.getWindowToken()", "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(view.getWindowToken(),int)"], "Fixed commit": "5855d307f2c3076360d87c24cb63fb73d598896e", "Url": "https://api.github.com/repos/JaviMera/TodoList", "Date": "2016-12-04T03:28:26Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.worldObj.isRemote)) { if ((((this.isLeftWhitelist) != (this.lastLeftWhitelist)) || ((this.isRightWhitelist) != (this.lastRightWhitelist))) && (this.sendUpdateWithInterval())) { this.lastLeftWhitelist = this.isLeftWhitelist; this.lastRightWhitelist = this.isRightWhitelist; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3975/buggy-version/src.main.java.de.ellpeck.actuallyadditions.mod.tile.TileEntityLaserRelay.java", "BodyUseAPI": [], "Fixed commit": "41027a07c29c754b5c5521982389aa5974ed58fb", "Url": "https://api.github.com/repos/Ellpeck/ActuallyAdditions", "Date": "2016-05-13T14:58:16Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.worldObj.isRemote)) { net.minecraft.nbt.NBTTagCompound compound = this.getSyncCompound(); if (compound != null) { PacketHandler.theNetwork.sendToAllAround(new de.ellpeck.actuallyadditions.mod.network.PacketUpdateTileEntity(compound, this.getPos()), new net.minecraftforge.fml.common.network.NetworkRegistry.TargetPoint(this.worldObj.provider.getDimension(), this.getPos().getX(), this.getPos().getY(), this.getPos().getZ(), 64)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3975/buggy-version/src.main.java.de.ellpeck.actuallyadditions.mod.tile.TileEntityBase.java", "BodyUseAPI": ["this.worldObj.provider.getDimension()", "PacketHandler.theNetwork.sendToAllAround(de.ellpeck.actuallyadditions.mod.network.PacketUpdateTileEntity,net.minecraftforge.fml.common.network.NetworkRegistry.TargetPoint)"], "Fixed commit": "41027a07c29c754b5c5521982389aa5974ed58fb", "Url": "https://api.github.com/repos/Ellpeck/ActuallyAdditions", "Date": "2016-05-13T14:58:16Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dateOfBirth == null) { }else { dob.setTime(dateOfBirth); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/519/buggy-version/getFit.app.src.main.java.finalproject.com.getfit.userprofile.UserProfileFragment.java", "BodyUseAPI": ["java.util.Calendar.setTime(java.util.Date)"], "Fixed commit": "e4f34474a570c3c197015f7b28078cce09bde0c3", "Url": "https://api.github.com/repos/guttamc7/CS-490", "Date": "2015-03-31T04:32:26Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasZWSP) { ic.deleteSurroundingText(2, 0); hasZWSP = false; }else { ic.deleteSurroundingText(1, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3598/buggy-version/app.src.main.java.com.sanlin.mkeyboard.BamarKeyboard.java", "BodyUseAPI": [], "Fixed commit": "b7a71c3dc59cb05a8de4d67a65f2e0eedfebebf4", "Url": "https://api.github.com/repos/thixpin/MUA-Keyboard", "Date": "2016-08-17T06:39:54Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["starklabs.libraries.Model.Mivoq.MivoqTTSSingleton.getVoices()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (list.isEmpty()) return \"Not Available\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5150/buggy-version/Libraries.src.main.java.starklabs.libraries.Model.Mivoq.MivoqTTSService.java", "BodyUseAPI": [], "Fixed commit": "69738b9a941011c5a5ea59de92fa8192514b7c91", "Url": "https://api.github.com/repos/Stark-Labs/SiVoDiM-Libraries", "Date": "2016-07-07T14:58:48Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["starklabs.sivodim.Drama.View.HomeActivity.findViewById(R.id.drawer_layout)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (drawer.isDrawerOpen(GravityCompat.START)) { drawer.closeDrawer(GravityCompat.START); }else { android.widget.Toast.makeText(this, \"Premi il tasto home per uscire\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5150/buggy-version/app.src.main.java.starklabs.sivodim.Drama.View.HomeActivity.java", "BodyUseAPI": ["android.support.v4.widget.DrawerLayout.closeDrawer(GravityCompat.START)"], "Fixed commit": "69738b9a941011c5a5ea59de92fa8192514b7c91", "Url": "https://api.github.com/repos/Stark-Labs/SiVoDiM-Libraries", "Date": "2016-07-07T14:58:48Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != jcdiCtx) { jcdiCtx.setInjectionTarget(it); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7682/buggy-version/appserver.web.weld-integration.src.main.java.org.glassfish.weld.services.JCDIServiceImpl.java", "BodyUseAPI": ["org.glassfish.weld.services.JCDIServiceImpl.JCDIInjectionContextImpl.setInjectionTarget(javax.enterprise.inject.spi.InjectionTarget)"], "Fixed commit": "0c0e2512c86df756d3ac98bb70f15a77c0301be9", "Url": "https://api.github.com/repos/ankathur/glassfish", "Date": "2017-08-02T13:14:08Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (publication.isValid()) { java.net.URI uri = getURI(publication, baseUri); org.silverpeas.publication.web.PublicationEntity entity = org.silverpeas.publication.web.PublicationEntity.fromPublicationDetail(publication, uri); if (withAttachments) { java.util.Collection<org.silverpeas.attachment.model.SimpleDocument> attachments = org.silverpeas.attachment.AttachmentServiceFactory.getAttachmentService().listDocumentsByForeignKey(publication.getPK(), null); entity.withAttachments(attachments, getUriInfo().getBaseUri().toString(), token); } entities.add(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5728/buggy-version/web-core.src.main.java.org.silverpeas.publication.web.PublicationResource.java", "BodyUseAPI": ["org.silverpeas.publication.web.PublicationResource.getURI(com.stratelia.webactiv.util.publication.model.PublicationDetail,java.lang.String)", "org.silverpeas.attachment.AttachmentServiceFactory.getAttachmentService().listDocumentsByForeignKey(publication.getPK(),<nulltype>)", "org.silverpeas.publication.web.PublicationEntity.fromPublicationDetail(com.stratelia.webactiv.util.publication.model.PublicationDetail,java.net.URI)", "com.stratelia.webactiv.util.publication.model.PublicationDetail.getPK()"], "Fixed commit": "87310ed66f80779a1e19117cb08691666f18dd2f", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2013-11-05T21:21:44Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mCurrentMarker.getPosition().equals(destination)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8350/buggy-version/app.src.main.java.dat255.refugeemap.GMapFragment.java", "BodyUseAPI": [], "Fixed commit": "cbf1baab446b69f37701cad7cf334353fee861c2", "Url": "https://api.github.com/repos/drualsk/RefugeeMap", "Date": "2016-10-20T21:37:10Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.learnpad.ca.rest.impl.TokenPersistence.find(java.lang.Class,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (r != null) { return \"OK\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6080/buggy-version/src.main.java.eu.learnpad.ca.rest.impl.ColloborativeContentVerificationsImpl.java", "BodyUseAPI": [], "Fixed commit": "9b07cbeaeb361fb051fe3e7d0c7192b99557f918", "Url": "https://api.github.com/repos/ISTI-FMT-LearnPAd/ContentAnalysisComponent", "Date": "2016-03-10T21:45:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.measurement.getMetricValue(this.getParserName())", "java.lang.Integer.parseInt(context.getBundle().getString(\"metric.rfc.limit\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((mv.getValue()) > rfcLimit) { mv.setViolated(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5895/buggy-version/jqana.src.main.java.com.obomprogramador.tools.jqana.parsers.RfcBcelParser.java", "BodyUseAPI": ["com.obomprogramador.tools.jqana.model.defaultimpl.MetricValue.setViolated(boolean)"], "Fixed commit": "8da2ed475de37700bcb5860e1ce951188b1bf816", "Url": "https://api.github.com/repos/cleuton/jqana", "Date": "2014-01-22T13:04:39Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.treyla.referromizer.domain.Referral.getRefUrl()", "com.treyla.referromizer.domain.Referral.getRefId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((refId.isEmpty()) && (refUrl.isEmpty())) { org.apache.commons.lang3.Validate.notEmpty(refId); org.apache.commons.lang3.Validate.notEmpty(refUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/871/buggy-version/backend.src.main.java.com.treyla.referromizer.web.ReferralController.java", "BodyUseAPI": ["org.apache.commons.lang3.Validate.notEmpty(java.lang.String)", "org.apache.commons.lang3.Validate.notEmpty(java.lang.String)"], "Fixed commit": "0b0c8fe74c895d57b6f17a7b3ff52000cdf1d96d", "Url": "https://api.github.com/repos/treyla/referromizer", "Date": "2017-12-20T20:09:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.getClientName().equals(userName)) totalValue += (p.getPrice()) * (p.getQuantity());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2222/buggy-version/src.java.main.Product.java", "BodyUseAPI": ["main.Product.getQuantity()", "main.Product.getPrice()"], "Fixed commit": "4cf007baf2ad783bb066afd9d7ea6477510d6c2e", "Url": "https://api.github.com/repos/ervinnecula/Tema2", "Date": "2015-10-19T06:23:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tracker.isDragging())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7310/buggy-version/VERILOG_TOWN.LevelEditor.src.levelEditor.BorderGrid.java", "BodyUseAPI": [], "Fixed commit": "f0df916fcea86cf4aee319935ffa762f66b5e064", "Url": "https://api.github.com/repos/NigoroJr/verilog_town", "Date": "2014-07-02T18:53:09Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasRiver) { this.canConnectRiver = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1130/buggy-version/src.main.model.tile.TileEdge.java", "BodyUseAPI": [], "Fixed commit": "e37697c0010a5d5fd91cfb95db178cb3cd27cccf", "Url": "https://api.github.com/repos/OOP-Team-11/RoadsAndBoats", "Date": "2017-03-29T02:12:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!satisfied) { throw new FunThingGeneratorModel.NoMatchException(\"No board games are available for those parameters\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4413/buggy-version/src.FunThingGeneratorModel.BoardGame.java", "BodyUseAPI": [], "Fixed commit": "c566f9061cfa8f75aba4615df89a22fbd72e5e9a", "Url": "https://api.github.com/repos/Emporophobe/fun-things", "Date": "2016-10-02T02:19:46Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fixedVersionNames.isEmpty())) { finalVersionIds.addAll(mapFixedVersionNamesToIds(client, session, issue.getProject(), fixedVersionNames, logger)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9222/buggy-version/src.main.java.info.bluefloyd.jenkins.IssueUpdatesBuilder.java", "BodyUseAPI": ["info.bluefloyd.jenkins.IssueUpdatesBuilder.mapFixedVersionNamesToIds(info.bluefloyd.jenkins.SOAPClient,info.bluefloyd.jenkins.SOAPSession,issue.getProject(),java.util.List<java.lang.String>,java.io.PrintStream)", "java.util.Collection<java.lang.String>.addAll(java.util.Collection<java.lang.String>)"], "Fixed commit": "5c295c49c12a490b9150028f6ab4c6481a2b2fe8", "Url": "https://api.github.com/repos/jbaiza/jira-issue-updater-plugin", "Date": "2015-07-27T10:23:35Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indent) { buffer.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4469/buggy-version/src.java.org.rapidcontext.core.js.JsSerializer.java", "BodyUseAPI": [], "Fixed commit": "1edf2e34b0dae8eec0fd8485862f7ae951f26e72", "Url": "https://api.github.com/repos/cederberg/rapidcontext", "Date": "2013-05-30T14:19:22Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.userProfile) != null) { sb.append(\"+\"); sb.append(au.org.ala.cas.AttributeParser.lookup(\"email\", this.userProfile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8788/buggy-version/src.main.java.org.jasig.cas.support.pac4j.authentication.principal.ClientCredential.java", "BodyUseAPI": [], "Fixed commit": "02807ff2bd0a7316b1723dc5e68e02c1e34b56ca", "Url": "https://api.github.com/repos/mbohun/jasig-cas-4.0.x-overlay-template", "Date": "2015-08-27T07:35:02Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rhs.actual.clazz) == (void.class)) { throw createError(new java.lang.IllegalArgumentException(\"Right-hand side cannot be a [void] type for assignment.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7910/buggy-version/modules.lang-painless.src.main.java.org.elasticsearch.painless.node.EAssignment.java", "BodyUseAPI": [], "Fixed commit": "7528edd45c8a77045c58321c4d63a4beeacafe92", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2017-11-28T21:44:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.elasticsearch.painless.node.AExpression>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((expression.actual.clazz) == (void.class)) { throw createError(new java.lang.IllegalArgumentException(((\"Argument(s) cannot be of [void] type when calling method [\" + (name)) + \"].\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7910/buggy-version/modules.lang-painless.src.main.java.org.elasticsearch.painless.node.PSubDefCall.java", "BodyUseAPI": [], "Fixed commit": "7528edd45c8a77045c58321c4d63a4beeacafe92", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2017-11-28T21:44:52Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connected) { arduinoInstance.write(\"exit;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7266/buggy-version/xGenuini.core.src.genuini.main.MainGame.java", "BodyUseAPI": [], "Fixed commit": "da3d2aa38581eb602881f32ca708772a586ed0de", "Url": "https://api.github.com/repos/Jeremy-Duval/Genuini_s_Journey_Ruins_Of_Ivrea", "Date": "2017-01-21T16:47:52Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connected) { arduinoInstance.write(\"exit;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7266/buggy-version/xGenuini.core.src.genuini.screens.MainMenuScreen.java", "BodyUseAPI": [], "Fixed commit": "da3d2aa38581eb602881f32ca708772a586ed0de", "Url": "https://api.github.com/repos/Jeremy-Duval/Genuini_s_Journey_Ruins_Of_Ivrea", "Date": "2017-01-21T16:47:52Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slot instanceof org.jgll.grammar.slot.EpsilonGrammarSlot) { sb.append(\" epsilon\\n\"); }else { sb.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7170/buggy-version/src.org.jgll.grammar.Grammar.java", "BodyUseAPI": [], "Fixed commit": "08f84c18c2bcf548bc026ea2130c18ab8ce31600", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-09-17T16:51:23Z"},
{"Line": "=>1413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgll.util.trie.Edge<org.jgll.grammar.slot.BodyGrammarSlot>.getLabel()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s instanceof org.jgll.grammar.slot.LastGrammarSlot) { currentSlot = new org.jgll.grammar.slot.EpsilonGrammarSlot(symbolIndex, newHead, ((org.jgll.grammar.slot.LastGrammarSlot) (s)).getObject()); copyActions(s, currentSlot); newHead.addAlternate(new org.jgll.grammar.Alternate(currentSlot)); }else { currentSlot = getBodyGrammarSlot(edge.getLabel(), symbolIndex, null, newHead); if (symbolIndex == 0) { firstSlot = currentSlot; } test(currentSlot, edge.getDestination(), symbolIndex, newHead); org.jgll.grammar.Alternate alternate = new org.jgll.grammar.Alternate(firstSlot); newHead.addAlternate(alternate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7170/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": ["org.jgll.grammar.GrammarBuilder.copyActions(org.jgll.grammar.slot.BodyGrammarSlot,org.jgll.grammar.slot.BodyGrammarSlot)"], "Fixed commit": "08f84c18c2bcf548bc026ea2130c18ab8ce31600", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-09-17T16:51:23Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unit == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1279/buggy-version/expenditure-tracking.src.main.java.pt.ist.expenditureTrackingSystem.domain.organization.Unit.java", "BodyUseAPI": [], "Fixed commit": "7265c54bc0bc36dc0c4dc1f8ddaebc0f9eb10769", "Url": "https://api.github.com/repos/ist-dsi/expenditures", "Date": "2014-10-21T14:15:34Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (unit != null) { for (final module.organization.domain.Accountability accountability : unit.getAllParentAccountabilities()) { if ((!(accountability.isErased())) && ((accountability.getAccountabilityType()) == (pt.ist.expenditureTrackingSystem.domain.ExpenditureTrackingSystem.getInstance().getOrganizationalAccountabilityType()))) { final module.organization.domain.Party parent = accountability.getParent(); if (parent.isUnit()) { final module.organization.domain.Unit parentUnit = ((module.organization.domain.Unit) (parent)); if ((parentUnit.getExpenditureUnit()) != null) { return parentUnit.getExpenditureUnit(); } final pt.ist.expenditureTrackingSystem.domain.organization.Unit result = pt.ist.expenditureTrackingSystem.domain.organization.Unit.getParentUnitSafe(parentUnit); if (result != null) { return result; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1279/buggy-version/expenditure-tracking.src.main.java.pt.ist.expenditureTrackingSystem.domain.organization.Unit.java", "BodyUseAPI": ["module.organization.domain.Unit.getAllParentAccountabilities()"], "Fixed commit": "7265c54bc0bc36dc0c4dc1f8ddaebc0f9eb10769", "Url": "https://api.github.com/repos/ist-dsi/expenditures", "Date": "2014-10-21T14:15:34Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!destructiveSort) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5445/buggy-version/src.org.nschmidt.ldparteditor.data.Sorter.java", "BodyUseAPI": [], "Fixed commit": "2054ac91bea1ed5938aceb5ca6463cab662d37fb", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-11T11:43:02Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!destructiveSort) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5445/buggy-version/src.org.nschmidt.ldparteditor.data.Sorter.java", "BodyUseAPI": [], "Fixed commit": "2054ac91bea1ed5938aceb5ca6463cab662d37fb", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-11T11:43:02Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doKeepalives) { schedulePing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8145/buggy-version/src.main.java.com.zipwhip.api.signals.sockets.netty.NettySignalConnection.java", "BodyUseAPI": [], "Fixed commit": "bb69c73dc09eb58412d314cbed4d3b0e51fe312b", "Url": "https://api.github.com/repos/Zipwhip/zipwhip-api", "Date": "2011-10-07T22:58:03Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!addedDirection) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3345/buggy-version/src.main.java.npuzzle.BoardUtils.java", "BodyUseAPI": [], "Fixed commit": "956bbb575d4cca35649a700ecc1ee7db1f1ebf1e", "Url": "https://api.github.com/repos/PiotrBubel/ZaawansowanaJava", "Date": "2016-05-25T13:11:23Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((x == 0) || (x > (width))) || (y == 0)) || (y > (height))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3839/buggy-version/drawing-console-app.src.main.java.io.drawing.console.model.ModelData.java", "BodyUseAPI": [], "Fixed commit": "2f7f0c75e146839be2c6cbd3fd294d6f7553c449", "Url": "https://api.github.com/repos/sergey-astapov/akka", "Date": "2017-08-22T20:17:57Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.movielabs.mddflib.avails.xml.XmlBuilder.makeXmlAsJDom(com.movielabs.mddflib.avails.xml.AvailsSheet,java.lang.String,java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (xmlJDomDoc == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8905/buggy-version/mddf-tools.src.com.movielabs.mddf.tools.ValidationController.java", "BodyUseAPI": [], "Fixed commit": "6e7f292104cd8a1675ea935c49539762539d864f", "Url": "https://api.github.com/repos/MovieLabs/mddf", "Date": "2017-10-16T15:09:36Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((prevPrevScale) == (scale)) || ((prevScale) == (scale))) { statusProcessor.appendStatus(\"Exiting Loop.\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5550/buggy-version/src.thebombzen.tumblgififier.processor.VideoProcessor.java", "BodyUseAPI": [], "Fixed commit": "51723646f12778b00b9015c63e61b2b8e07eedf1", "Url": "https://api.github.com/repos/thebombzen/TumblGIFifier", "Date": "2016-04-11T15:01:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indent - length) <= 0) { indent = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5094/buggy-version/V2.vm.src.main.java.com.neverwinterdp.vm.client.shell.HelpCommand.java", "BodyUseAPI": [], "Fixed commit": "ad218506410b1232ea945a99ef2d08876a6ff1ee", "Url": "https://api.github.com/repos/DemandCube/Scribengin", "Date": "2015-03-24T16:34:36Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (symbol instanceof com.oracle.truffle.llvm.parser.metadata.debuginfo.SourceModel.Variable) { writeMetadataReference(MDVoidNode.INSTANCE); }else { throw new java.lang.IllegalStateException((((\"Cannot write this value: \" + symbol) + \" of type: \") + (symbol.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4245/buggy-version/projects.at.pointhi.irbuilder.irwriter.src.at.pointhi.irbuilder.irwriter.visitors.IRWriterBaseVisitor.java", "BodyUseAPI": ["symbol.getClass().getName()", "com.oracle.truffle.llvm.runtime.types.symbols.Symbol.getClass()"], "Fixed commit": "b41c2f69aa3e41d6f430303c827198bc256d281a", "Url": "https://api.github.com/repos/pointhi/java-llvm-ir-builder", "Date": "2017-11-16T08:51:36Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rs.wasNull()) { profile.setDiscordId(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7024/buggy-version/diax-srv-app.src.main.java.me.diax.srv.database.connector.ProfileConnector.java", "BodyUseAPI": [], "Fixed commit": "f526fac7d6b13e5317282186d171f8aca2c2aa1d", "Url": "https://api.github.com/repos/Diax-Global/diax-srv", "Date": "2017-05-02T19:16:18Z"},
{"Line": "=>786", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getLong(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (threadId == (-1)) { intent.putExtra(org.thoughtcrime.securesms.ConversationActivity.RECIPIENTS_EXTRA, \"\"); intent.putExtra(org.thoughtcrime.securesms.ConversationActivity.THREAD_ID_EXTRA, (-1)); intent.putExtra(org.thoughtcrime.securesms.ConversationActivity.DISTRIBUTION_TYPE_EXTRA, ThreadDatabase.DistributionTypes.DEFAULT); }else { intent.putExtra(org.thoughtcrime.securesms.ConversationActivity.RECIPIENTS_EXTRA, preferences.getString(org.thoughtcrime.securesms.ConversationActivity.RECIPIENTS_EXTRA, \"\")); intent.putExtra(org.thoughtcrime.securesms.ConversationActivity.THREAD_ID_EXTRA, preferences.getLong(org.thoughtcrime.securesms.ConversationActivity.THREAD_ID_EXTRA, (-1))); intent.putExtra(org.thoughtcrime.securesms.ConversationActivity.DISTRIBUTION_TYPE_EXTRA, preferences.getInt(org.thoughtcrime.securesms.ConversationActivity.DISTRIBUTION_TYPE_EXTRA, ThreadDatabase.DistributionTypes.DEFAULT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3893/buggy-version/src.org.thoughtcrime.securesms.ConversationActivity.java", "BodyUseAPI": [], "Fixed commit": "f505d6a24f0f720948dfac316e8d71a509dfb744", "Url": "https://api.github.com/repos/psm14/TextSecure", "Date": "2014-03-08T18:33:24Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.ceil(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalPage < 1) { totalPage = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8170/buggy-version/src.main.java.com.yotouch.base.service.PaginationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "11517615e5bc2f3ce99fc2b310a4715544a89827", "Url": "https://api.github.com/repos/LiuLingFei/pylon", "Date": "2017-04-26T17:05:19Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((windowId) == (heero.wakcraft.network.packet.PacketCloseWindow.WINDOW_HB_VISITORS)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4001/buggy-version/src.main.java.heero.wakcraft.network.packet.PacketCloseWindow.java", "BodyUseAPI": [], "Fixed commit": "4f5142d21c1cfe20d21976f421fdb6008de4ce3f", "Url": "https://api.github.com/repos/alucas/wakcraft", "Date": "2014-05-13T14:28:03Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.dbztech.universalpresenterremote.upr.ServerCommunication.uid) == 0) { com.dbztech.universalpresenterremote.upr.ServerCommunication.uid = 9999 + ((int) ((java.lang.Math.random()) * 999999999)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7002/buggy-version/UniversalPresenterRemote.upr.src.main.java.com.dbztech.universalpresenterremote.upr.ServerCommunication.java", "BodyUseAPI": [], "Fixed commit": "99cfdf3a9d671294570bef4e38eb0de8ad54582c", "Url": "https://api.github.com/repos/brendancboyle/Universal-Presenter-Remote-Android", "Date": "2014-07-04T07:19:49Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ServerCommunication.token) == 0) { ServerCommunication.controlMode = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7002/buggy-version/UniversalPresenterRemote.upr.src.main.java.com.dbztech.universalpresenterremote.upr.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "99cfdf3a9d671294570bef4e38eb0de8ad54582c", "Url": "https://api.github.com/repos/brendancboyle/Universal-Presenter-Remote-Android", "Date": "2014-07-04T07:19:49Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((reason) == null) { reason = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1695/buggy-version/src.main.java.emcshop.db.PaymentTransactionDb.java", "BodyUseAPI": [], "Fixed commit": "8cb9815ff7be95a6ede63a8ae293e277007ca21e", "Url": "https://api.github.com/repos/mangstadt/emc-shopkeeper", "Date": "2015-09-28T00:44:47Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.libs.Json.fromJson(request().body().asJson(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clientSettings.id) == null) clientSettings.id = tyrex.services.UUID.create();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5164/buggy-version/app.controllers.ClientSettingsController.java", "BodyUseAPI": [], "Fixed commit": "f142fcaea63ef25b80777fc1b291f9b6e72d1c86", "Url": "https://api.github.com/repos/user50/shopservice", "Date": "2013-09-10T15:25:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item1.getType().equals(Material.ENCHANTED_BOOK)) { item2.setDurability(item0.getDurability()); }else { item2.setDurability(((short) (((item0.getDurability()) + (item1.getDurability())) + ((item2.getDurability()) / 20)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9099/buggy-version/src.main.java.de.k4lly.enchant.listener.Anvil.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.setDurability(((short) (((item0.getDurability()) + (item1.getDurability())) + ((item2.getDurability()) / 20))))", "org.bukkit.inventory.ItemStack.getDurability()"], "Fixed commit": "088f05ac0ee77c5df023f47e31c79183a27de478", "Url": "https://api.github.com/repos/K4LLy/k4llyEnchant", "Date": "2017-01-01T18:29:52Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((time.trim().isEmpty()) || (location.trim().isEmpty())) || (category.trim().isEmpty())) || (amount.trim().isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6295/buggy-version/ProfilingCore.src.hr.fer.kba_authentication.profiling.core.transformations.Transformer.java", "BodyUseAPI": [], "Fixed commit": "7576cb33716fe1604665f516be32adefdfa28552", "Url": "https://api.github.com/repos/kiki-7/ProfilingCore", "Date": "2015-12-21T13:56:00Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (target == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3442/buggy-version/src.main.java.com.censoredsoftware.demigods.engine.ability.Ability.java", "BodyUseAPI": [], "Fixed commit": "a2de2c375cb7c5205ab56951d810cf47f8c93176", "Url": "https://api.github.com/repos/CensoredSoftware/Minecraft-Demigods", "Date": "2013-11-29T20:19:40Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentFacingDirection - 1) < 0) { return 5; }else { return (currentFacingDirection - 1) % 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2900/buggy-version/AntGameProject.src.antgameproject.DirectionalInstruction.java", "BodyUseAPI": [], "Fixed commit": "8edd8f1763751c40724f00c755de2adab1dd7c60", "Url": "https://api.github.com/repos/jtwisleton/AntGame", "Date": "2016-04-10T12:09:59Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { parent = _workDirectoryController.DEFAULT_WORKSPACE; }else { parent = dir.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3918/buggy-version/cyclist.src.edu.utah.sci.cyclist.core.controller.CyclistController.java", "BodyUseAPI": ["java.io.File.getParent()"], "Fixed commit": "3010d2bd428195727565cf0b84cad7b7423a16b2", "Url": "https://api.github.com/repos/scopatz/cyclist2", "Date": "2014-10-26T02:16:49Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v instanceof android.widget.ScrollView) { imple = new me.tangke.scrolldetector.detector.ScrollViewScrollDetector(); }else if (v instanceof android.widget.Gallery) { imple = new me.tangke.scrolldetector.detector.GalleryScrollDetector(); }else { imple = new me.tangke.scrolldetector.detector.DefaultScrollDetector(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2580/buggy-version/ScrollDetector.src.me.tangke.scrolldetector.ScrollDetectors.java", "BodyUseAPI": [], "Fixed commit": "ee9e337339206ab53a0c0b71f7dc4098b474762f", "Url": "https://api.github.com/repos/TangKe/ScrollDetector", "Date": "2014-01-06T08:00:57Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.github.mustachejava.Mustache>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cached != null) { return cached; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5224/buggy-version/compiler.src.main.java.com.github.mustachejava.DefaultMustacheFactory.java", "BodyUseAPI": [], "Fixed commit": "a46eb132ad25db5978b12b0197a9f37a038c7e6a", "Url": "https://api.github.com/repos/landism/mustache.java", "Date": "2015-03-03T22:39:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.endsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSharedLibrary) { installContext.onFileWrite(destFile, changeInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1696/buggy-version/process.process-manager.src.main.java.io.fabric8.process.manager.support.InstallDeploymentsTask.java", "BodyUseAPI": [], "Fixed commit": "70a31c092fd5d70bdef9c025e131524a2875ef06", "Url": "https://api.github.com/repos/jstrachan/fabric8", "Date": "2014-05-22T05:11:10Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (productInfo == null) { productInfo = new gov.nasa.gsfc.seadas.processing.l2gen.productData.L2genProductInfo(prodName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3069/buggy-version/seadas-processing.src.main.java.gov.nasa.gsfc.seadas.processing.core.L2genReader.java", "BodyUseAPI": [], "Fixed commit": "a96a9535a2942ef7bdd1f9c21f5d09f2cfd9f89f", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2013-12-04T20:13:37Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (integerProductInfo == null) { integerProductInfo = new gov.nasa.gsfc.seadas.processing.l2gen.productData.L2genProductInfo(prodName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3069/buggy-version/seadas-processing.src.main.java.gov.nasa.gsfc.seadas.processing.core.L2genReader.java", "BodyUseAPI": [], "Fixed commit": "a96a9535a2942ef7bdd1f9c21f5d09f2cfd9f89f", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2013-12-04T20:13:37Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldest == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5051/buggy-version/day08.src.queues.PersonQueuePriorityListImpl.java", "BodyUseAPI": [], "Fixed commit": "15de77ec34eda55b7584e74f9698b6110fca4c93", "Url": "https://api.github.com/repos/bartholomews/PiJ_exercises", "Date": "2015-01-26T03:55:06Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_Current_Production.get_ValueAsInt(\"Reversal_ID\")) > 0) return \"Ok\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7248/buggy-version/base.org.spin.process.CategoryProductionReverse.java", "BodyUseAPI": [], "Fixed commit": "75e506e08e8ca211cda12ed1cf56c2e857e90a45", "Url": "https://api.github.com/repos/erpcya/FTA", "Date": "2014-11-25T00:05:11Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.firestore.DocumentSnapshot.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (liste == null) liste = new java.util.HashMap<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5165/buggy-version/app.src.main.java.com.easyshopping.navigationDrawer.fragment.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "e93bed2b832366d6b2329bc8977da6245c34f370", "Url": "https://api.github.com/repos/noxado/EasyShopping", "Date": "2017-12-05T18:09:50Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((i < (chunks.length)) && (j < (chunks[0].length))) && (i > 0)) && (j > 0)) chunks[i][j].render();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6634/buggy-version/src.game.World.java", "BodyUseAPI": ["chunks[i][j].render()"], "Fixed commit": "00792186945c9cda5a4b15fe5d1b155e4624a3ee", "Url": "https://api.github.com/repos/anubiann00b/VoxelDungeon", "Date": "2014-01-19T07:21:11Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.getAccessControlExposeHeaders()) != null) { org.restlet.engine.header.HeaderUtils.addHeader(HeaderConstants.HEADER_ACCESS_CONTROL_EXPOSE_HEADERS, org.restlet.engine.header.StringWriter.write(response.getAccessControlExposeHeaders()), headers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1930/buggy-version/modules.org.restlet.src.org.restlet.engine.header.HeaderUtils.java", "BodyUseAPI": ["org.restlet.Response.getAccessControlExposeHeaders()", "org.restlet.engine.header.StringWriter.write(response.getAccessControlExposeHeaders())", "org.restlet.engine.header.HeaderUtils.addHeader(HeaderConstants.HEADER_ACCESS_CONTROL_EXPOSE_HEADERS,org.restlet.engine.header.StringWriter.write(response.getAccessControlExposeHeaders()),org.restlet.util.Series<org.restlet.data.Header>)"], "Fixed commit": "4078da8c3e08786b17eb297f95e1946de9705af3", "Url": "https://api.github.com/repos/ralphvanetten/restlet-framework-java", "Date": "2015-09-19T06:00:51Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i >= ((bufferCorrection.length) / 2)) posmoy.plus(bufferCorrection[i].getPosition());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4037/buggy-version/pc.src.capteurs.CapteursProcess.java", "BodyUseAPI": ["bufferCorrection[i].getPosition()", "utils.Vec2RW.plus(bufferCorrection[i].getPosition())"], "Fixed commit": "a3d115a2ee67dabf7e1a295923f17f0f84a3e507", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-24T01:17:23Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((data.mesures[index1]) <= 4) || ((data.mesures[index2]) <= 4)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4037/buggy-version/pc.src.capteurs.CapteursProcess.java", "BodyUseAPI": [], "Fixed commit": "a3d115a2ee67dabf7e1a295923f17f0f84a3e507", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-24T01:17:23Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((indexTab.size()) > 1) { rowId.add(dataFromDB.substring(0, indexTab.get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2318/buggy-version/CustomerApplication.app.src.main.java.com.example.ayush.customerapplication.SavedCards.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)", "java.lang.String.substring(int,java.lang.Integer)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "259d1d986758cc8bc714faa5b9a04f9c84cb0a55", "Url": "https://api.github.com/repos/dynamite-10/MyFirstProject", "Date": "2015-06-05T07:11:48Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shutdownThread) != null) { java.lang.Runtime.getRuntime().removeShutdownHook(shutdownThread); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4156/buggy-version/flink-staging.flink-language-binding.flink-python.src.main.java.org.apache.flink.languagebinding.api.java.python.streaming.PythonStreamer.java", "BodyUseAPI": [], "Fixed commit": "c63d3ae2cef9ab314261a56051a1116bd99a241f", "Url": "https://api.github.com/repos/mathiaspet/pyflink", "Date": "2015-04-08T13:48:57Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mHider[3]) { int lastCount = childCount % spanCount; if (lastCount == 0) { if (i < (childCount - spanCount)) { final float bottomY = ((mBounds.bottom) - (child.getTranslationY())) - (mPaint.getStrokeWidth()); canvas.drawLine(startX, bottomY, stopX, bottomY, mPaint); } }else { if (i < (childCount - lastCount)) { final float bottomY = ((mBounds.bottom) - (child.getTranslationY())) - (mPaint.getStrokeWidth()); canvas.drawLine(startX, bottomY, stopX, bottomY, mPaint); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/566/buggy-version/decor.src.main.java.com.zac4j.decor.GridDashDivider.java", "BodyUseAPI": [], "Fixed commit": "f3e38ff71191f4f03a77cdc566a26a3c244f8c91", "Url": "https://api.github.com/repos/zac4j/dashdivider", "Date": "2017-08-31T10:57:02Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.RecyclerView.getChildCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i < (childCount - spanCount)) { final float bottomY = ((mBounds.bottom) - (child.getTranslationY())) - (mPaint.getStrokeWidth()); canvas.drawLine(startX, bottomY, stopX, bottomY, mPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/566/buggy-version/decor.src.main.java.com.zac4j.decor.GridDashDivider.java", "BodyUseAPI": [], "Fixed commit": "f3e38ff71191f4f03a77cdc566a26a3c244f8c91", "Url": "https://api.github.com/repos/zac4j/dashdivider", "Date": "2017-08-31T10:57:02Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text) != null) { intent.putExtra(\"lyrics\", text); }else { intent.putExtra(\"lyrics\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/299/buggy-version/rechordly_app.wear.src.main.java.me.chrisvle.rechordly.SpeechToTextActivity.java", "BodyUseAPI": [], "Fixed commit": "be6a6d4d32206442408ce84a82819a035e3c4769", "Url": "https://api.github.com/repos/Goshuujin/rechordly", "Date": "2015-12-07T11:02:19Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text) != null) { intent.putExtra(\"name\", text); }else { intent.putExtra(\"name\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/299/buggy-version/rechordly_app.wear.src.main.java.me.chrisvle.rechordly.SpeechToTextActivity.java", "BodyUseAPI": [], "Fixed commit": "be6a6d4d32206442408ce84a82819a035e3c4769", "Url": "https://api.github.com/repos/Goshuujin/rechordly", "Date": "2015-12-07T11:02:19Z"},
{"Line": "=>888", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > (Build.VERSION_CODES.LOLLIPOP_MR1)) { mPreviewRequestBuilder.set(CaptureRequest.CONTROL_AE_PRECAPTURE_TRIGGER, CameraMetadata.CONTROL_AE_PRECAPTURE_TRIGGER_CANCEL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1997/buggy-version/Application.src.main.java.com.example.android.camera2basic.Camera2BasicFragment.java", "BodyUseAPI": [], "Fixed commit": "166fb5ddd1e44f7f5c82f75a8d7216430e9c567b", "Url": "https://api.github.com/repos/RoundSparrow/android-Camera2Basic", "Date": "2016-05-25T16:29:49Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["carleton150.edu.carleton.carleton150.MainFragments.HistoryFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((mainActivity.getGeofenceMonitor().allGeopointsByName.size()) == 0) { gotGeofences = mainActivity.getGeofenceMonitor().getNewGeofences(); if (!gotGeofences) { btnRequestGeofences.setVisibility(View.VISIBLE); txtRequestGeofences.setText(getResources().getString(R.string.no_geofences_retrieved)); } }else { if (txtRequestGeofences != null) { txtRequestGeofences.setVisibility(View.GONE); btnRequestGeofences.setVisibility(View.GONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/151/buggy-version/app.src.main.java.carleton150.edu.carleton.carleton150.MainFragments.HistoryFragment.java", "BodyUseAPI": ["carleton150.edu.carleton.carleton150.MainActivity.getGeofenceMonitor()", "mainActivity.getGeofenceMonitor().getNewGeofences()"], "Fixed commit": "ea845258312cf9987c1962521b77516759787816", "Url": "https://api.github.com/repos/Sesquicentennial/Android", "Date": "2016-02-19T17:01:36Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mainActivity.getGeofenceMonitor().getNewGeofences()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!gotGeofences) { btnRequestGeofences.setVisibility(View.VISIBLE); txtRequestGeofences.setText(getResources().getString(R.string.no_geofences_retrieved)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/151/buggy-version/app.src.main.java.carleton150.edu.carleton.carleton150.MainFragments.HistoryFragment.java", "BodyUseAPI": [], "Fixed commit": "ea845258312cf9987c1962521b77516759787816", "Url": "https://api.github.com/repos/Sesquicentennial/Android", "Date": "2016-02-19T17:01:36Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.length()) == 0) { return ' '; }else { return value.charAt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/952/buggy-version/src.Deserializer.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "98845435a8b05756ef56df11e66cb6040f4102fc", "Url": "https://api.github.com/repos/benjaminlee1/CPSC501A3", "Date": "2017-11-12T20:28:11Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectedItems.size()) == 0) { finishActionMode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3297/buggy-version/app.src.main.java.com.romanpulov.violetnote.view.core.RecyclerViewHelper.java", "BodyUseAPI": [], "Fixed commit": "86eaa47e14031a8fd00e70b6a9f569c6743c57b6", "Url": "https://api.github.com/repos/MrZeRo2000/violetnote-android", "Date": "2017-06-20T18:46:29Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mSelectedItems.size()) > 0) { if (mSelectedItems.contains(position)) { mSelectedItems.remove(position); if ((mSelectedItems.size()) == 0) { finishActionMode(); } }else mSelectedItems.add(position); mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3297/buggy-version/app.src.main.java.com.romanpulov.violetnote.view.core.RecyclerViewHelper.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.remove(int)", "java.util.Set<java.lang.Integer>.add(int)", "java.util.Set<java.lang.Integer>.size()", "java.util.Set<java.lang.Integer>.contains(int)"], "Fixed commit": "86eaa47e14031a8fd00e70b6a9f569c6743c57b6", "Url": "https://api.github.com/repos/MrZeRo2000/violetnote-android", "Date": "2017-06-20T18:46:29Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_nameStack.size()) > 0) name = _nameStack.removeLast();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5080/buggy-version/src.main.com.mongodb.DefaultDBCallback.java", "BodyUseAPI": ["java.util.Deque<java.lang.String>.removeLast()"], "Fixed commit": "ed480ceede5f82e8f4ed635a5a8a3251fd8716a3", "Url": "https://api.github.com/repos/mongodb/mongo-java-driver", "Date": "2013-01-07T18:50:13Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.opengis.swe.x101.TextBlockDocument.TextBlock.getDecimalSeparator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(decimalS.equals(\".\"))) { current = current.replace(decimalS, \".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7956/buggy-version/epos-transform.epos-transform-xmlbeans.src.main.java.org.n52.epos.transform.xmlbeans.om10.OMParser.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "dcc2b89cef5a4ec888d55f279c8e170f6359909f", "Url": "https://api.github.com/repos/52North/epos", "Date": "2014-06-13T14:57:00Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (doc != null) { de.bund.bfr.knime.sbml.reader.SbmlReaderNodeModel.readSBML(doc, columns, rows); exec.checkCanceled(); exec.setProgress((((double) (index1)) / ((double) (files.length)))); index1++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1139/buggy-version/de.bund.bfr.knime.sbml.src.de.bund.bfr.knime.sbml.reader.SbmlReaderNodeModel.java", "BodyUseAPI": ["de.bund.bfr.knime.sbml.reader.SbmlReaderNodeModel.readSBML(org.sbml.jsbml.SBMLDocument,java.util.Map<java.lang.String, org.knime.core.data.DataType>,java.util.List<java.util.Map<java.lang.String, org.knime.core.data.DataCell>>)"], "Fixed commit": "0d29dcee6cf4707010738644e091f4c8e9d5c708", "Url": "https://api.github.com/repos/thoens/BfROpenLab", "Date": "2014-03-19T09:58:41Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((cause != null) && (cause instanceof java.io.IOException)) throw ((java.io.IOException) (cause));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9010/buggy-version/src.main.java.org.fit.cssbox.layout.BrowserConfig.java", "BodyUseAPI": [], "Fixed commit": "5d18421769aaeaddd929579bb5af061b87ecd071", "Url": "https://api.github.com/repos/radkovo/CSSBox", "Date": "2017-03-24T12:57:05Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.Long>>.get(user.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((conversationIdsForUserList == null) || ((conversationIdsForUserList.size()) == 0)) { return chatWithIdMap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1251/buggy-version/src.com.dost.service.ChatHistoryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2bad9a16060707ec58cafb85d2b3e5769fc47afc", "Url": "https://api.github.com/repos/desricha/yourDost", "Date": "2014-10-29T01:53:58Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row < (height)) && (col < (width))) imageTemp.imageData[row][col] = this.imageData[row][col];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4825/buggy-version/TP1_INF2010_2.src.PixelMapPlus.java", "BodyUseAPI": [], "Fixed commit": "8ab384e4e92e856ae6a83745124ef4ce4b812f74", "Url": "https://api.github.com/repos/polkio7/Inf2010", "Date": "2017-02-07T23:45:33Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.csstudio.alarm.jms2ora.service.ArchiveMessage.getPropertyValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (eventTime == null) { org.csstudio.alarm.jms2ora.service.oracleimpl.dao.MessageDao.LOG.warn(\"Message does not have an event time and will be ignored: \"); org.csstudio.alarm.jms2ora.service.oracleimpl.dao.MessageDao.LOG.warn(\"{}\", o.toString()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/728/buggy-version/applications.plugins.org.csstudio.alarm.jms2ora.service.oracleimpl.src.java.org.csstudio.alarm.jms2ora.service.oracleimpl.dao.MessageDao.java", "BodyUseAPI": [], "Fixed commit": "ff598f1b7787a5336027420bed1593c5a1f3451d", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2013-02-18T11:00:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isNetworkAvailable())) { android.widget.Toast toast = android.widget.Toast.makeText(this, \"No internet connection\", Toast.LENGTH_LONG); toast.show(); }else { new android.app.AlertDialog.Builder(this).setTitle(\"Invalid Login!\").setMessage(\"Your login information was incorrect.\").setPositiveButton(\"Okay\", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { mPassword.setText(\"\"); dialog.cancel(); } }).setIcon(android.R.drawable.ic_dialog_alert).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6443/buggy-version/app.src.main.java.com.alabama.bamboofinder.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "c06ff548d3b4f18aa9e7bc9e0e7e4c7891490b2b", "Url": "https://api.github.com/repos/mehagar/Bamboo", "Date": "2015-04-23T02:18:10Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ServiceRegistry.instance.getWalletService().cloneItem(model.getCurrentItem())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (newItem == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1156/buggy-version/src.main.java.org.mhisoft.wallet.view.ItemDetailView.java", "BodyUseAPI": [], "Fixed commit": "e2187255331435429b9d99d63dba9dacad552cf5", "Url": "https://api.github.com/repos/mhisoft/eVault", "Date": "2016-07-02T21:40:07Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dp.hasDatePassed(startTime, startTime)) { startTime = dp.getNextDay(startTime); endTime = dp.getNextDay(endTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5/buggy-version/src.tucklife.parser.Parser.java", "BodyUseAPI": ["tucklife.parser.DateParser.getNextDay(java.util.Calendar)", "tucklife.parser.DateParser.getNextDay(java.util.Calendar)"], "Fixed commit": "5dce34867c07d336464ec0dd7213dac1624bd4a5", "Url": "https://api.github.com/repos/cs2103jan2016-w09-2j/main", "Date": "2016-04-08T10:21:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mLogcatThread.isAlive()) { mLogcatThread.join(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2427/buggy-version/src.sk.madzik.android.logcatudp.LogcatUdpService.java", "BodyUseAPI": ["sk.madzik.android.logcatudp.LogcatThread.join()"], "Fixed commit": "c4f9acb414eaaa8f54025eaa1b567238b57f1336", "Url": "https://api.github.com/repos/Chemik/logcatudp", "Date": "2011-10-04T12:53:03Z"},
{"Line": "=>756", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chatty.gui.components.settings.ListTableModel<T>.getSearchColumn(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (column == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6243/buggy-version/src.chatty.gui.components.settings.TableEditor.java", "BodyUseAPI": [], "Fixed commit": "41270337141077329864c4849a69ee4185e4181d", "Url": "https://api.github.com/repos/chatty/chatty", "Date": "2017-01-08T13:15:05Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.resolve.BindingContext.get(BindingContext.DECLARATION_TO_DESCRIPTOR,classObject.getObjectDeclaration())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (declaration == null) { org.jetbrains.jet.lang.resolve.lazy.data.JetClassLikeInfo classObjectInfo = parentClassDescriptor.getClassObjectInfo(classObject); if (classObjectInfo != null) { org.jetbrains.jet.lang.resolve.name.Name name = org.jetbrains.jet.lang.resolve.DescriptorUtils.getClassObjectName(parentClassDescriptor.getName().asString()); return new org.jetbrains.jet.lang.resolve.lazy.descriptors.LazyClassDescriptor(this, parentClassDescriptor, name, classObjectInfo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1509/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.resolve.lazy.ResolveSession.java", "BodyUseAPI": [], "Fixed commit": "b0b173eb5a174ed59cd508156cf335a7cb4acc82", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2013-07-24T16:11:12Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.yangtools.yang.parser.impl.ParserListenerUtils.wrapPattern(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.opendaylight.yangtools.yang.parser.impl.ParserListenerUtils.isValidPattern(pattern, ctx, moduleName)) { return org.opendaylight.yangtools.yang.model.util.BaseConstraints.newPatternConstraint(pattern, description, reference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8043/buggy-version/yang.yang-parser-impl.src.main.java.org.opendaylight.yangtools.yang.parser.impl.ParserListenerUtils.java", "BodyUseAPI": ["org.opendaylight.yangtools.yang.model.util.BaseConstraints.newPatternConstraint(java.lang.String,com.google.common.base.Optional<java.lang.String>,com.google.common.base.Optional<java.lang.String>)"], "Fixed commit": "3cc0f6ed9af730c184e6d9cd17454883dae4f434", "Url": "https://api.github.com/repos/opendaylight/yangtools", "Date": "2014-09-22T15:59:05Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.yangtools.yang.parser.impl.ParserListenerUtils.parsePatternConstraint(org.antlr.v4.runtime.tree.ParseTree,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (constraint != null) { patterns.add(constraint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8043/buggy-version/yang.yang-parser-impl.src.main.java.org.opendaylight.yangtools.yang.parser.impl.ParserListenerUtils.java", "BodyUseAPI": ["java.util.List<org.opendaylight.yangtools.yang.model.api.type.PatternConstraint>.add(org.opendaylight.yangtools.yang.model.api.type.PatternConstraint)"], "Fixed commit": "3cc0f6ed9af730c184e6d9cd17454883dae4f434", "Url": "https://api.github.com/repos/opendaylight/yangtools", "Date": "2014-09-22T15:59:05Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) != null) { startJokeDisplayActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/624/buggy-version/app.src.free.java.builditbigger.JokeFetchTask.java", "BodyUseAPI": [], "Fixed commit": "e5ac026c63b795a31d7d15b625bbb4af2ddb0109", "Url": "https://api.github.com/repos/rajatgoyal715/BuildItBigger", "Date": "2017-09-13T08:38:43Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesmanager.core.business.user.model.User.getGroups()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (submitedGroups != null) { for (com.salesmanager.core.business.user.model.Group group : submitedGroups) { ids.add(java.lang.Integer.parseInt(group.getGroupName())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3077/buggy-version/sm-shop.src.main.java.com.salesmanager.web.admin.controller.user.UserController.java", "BodyUseAPI": [], "Fixed commit": "d1601291540e2c6288f8ab12aa7b99f6d8f4062a", "Url": "https://api.github.com/repos/asaad1982/laVetrina", "Date": "2016-03-23T19:55:09Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (token == null) { android.content.Context ctx = com.codename1.impl.android.AndroidNativeUtil.getContext(); token = com.google.android.gms.auth.GoogleAuthUtil.getToken(ctx, Plus.AccountApi.getAccountName(mGoogleApiClient), (\"oauth2:\" + (scope))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8827/buggy-version/Ports.Android.src.com.codename1.social.GoogleImpl.java", "BodyUseAPI": [], "Fixed commit": "56a555138eea19d71e1af9b4054ddc5bf3b7f79e", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-06-06T18:18:49Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((extra) != null) && (inRecoverableRequest)) { token = extra.getString(\"authtoken\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8827/buggy-version/Ports.Android.src.com.codename1.social.GoogleImpl.java", "BodyUseAPI": [], "Fixed commit": "56a555138eea19d71e1af9b4054ddc5bf3b7f79e", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-06-06T18:18:49Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(projectRef.endsWith(mr.getSourceBranch()))) { srcProjectId = mr.getSourceProjectId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5054/buggy-version/src.main.java.com.dabsquared.gitlabjenkins.GitLabWebHook.java", "BodyUseAPI": ["org.gitlab.api.models.GitlabMergeRequest.getSourceProjectId()"], "Fixed commit": "a14fa4c6edaf4fc1b12a92bd6badfc26b4ebfce3", "Url": "https://api.github.com/repos/jenkinsci/gitlab-plugin", "Date": "2016-03-05T14:44:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { java.lang.String fontPath = \"fonts/halter.ttf\"; creditCardTypeFace = android.graphics.Typeface.createFromAsset(getContext().getAssets(), fontPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8757/buggy-version/library.src.main.java.com.vinaygaba.creditcardview.CreditCardView.java", "BodyUseAPI": [], "Fixed commit": "fea00b1cdfe993f4e31da40952bf79998041ed5f", "Url": "https://api.github.com/repos/vinaygaba/CreditCardView", "Date": "2015-06-26T14:24:15Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { expiryDate.setTypeface(creditCardTypeFace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8757/buggy-version/library.src.main.java.com.vinaygaba.creditcardview.CreditCardView.java", "BodyUseAPI": [], "Fixed commit": "fea00b1cdfe993f4e31da40952bf79998041ed5f", "Url": "https://api.github.com/repos/vinaygaba/CreditCardView", "Date": "2015-06-26T14:24:15Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { cardName.setTypeface(creditCardTypeFace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8757/buggy-version/library.src.main.java.com.vinaygaba.creditcardview.CreditCardView.java", "BodyUseAPI": [], "Fixed commit": "fea00b1cdfe993f4e31da40952bf79998041ed5f", "Url": "https://api.github.com/repos/vinaygaba/CreditCardView", "Date": "2015-06-26T14:24:15Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { cardNumber.setTypeface(creditCardTypeFace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8757/buggy-version/library.src.main.java.com.vinaygaba.creditcardview.CreditCardView.java", "BodyUseAPI": [], "Fixed commit": "fea00b1cdfe993f4e31da40952bf79998041ed5f", "Url": "https://api.github.com/repos/vinaygaba/CreditCardView", "Date": "2015-06-26T14:24:15Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((leftResource instanceof org.eclipse.emf.ecore.xmi.XMIResource) && (!(rightResource instanceof org.eclipse.emf.ecore.xmi.XMIResource))) || ((rightResource instanceof org.eclipse.emf.ecore.xmi.XMIResource) && (!(leftResource instanceof org.eclipse.emf.ecore.xmi.XMIResource)))) { options.put(MatchOptions.OPTION_IGNORE_XMI_ID, java.lang.Boolean.TRUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4636/buggy-version/plugins.org.eclipse.mylyn.docs.intent.client.synchronizer.src.org.eclipse.mylyn.docs.intent.client.synchronizer.synchronizer.IntentSynchronizer.java", "BodyUseAPI": [], "Fixed commit": "909d4c0903ee1a9c978a1799a0ff9fa9983488f6", "Url": "https://api.github.com/repos/fsteeg/mylyn.docs.intent.main", "Date": "2011-09-28T08:34:59Z"},
{"Line": "=>776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ret) { return ret = _permissionsHelper.userHasGivenRole(_user, resource.getId(), Role.SECURITY_ADMIN, Role.TENANT_ADMIN, Role.SYSTEM_MONITOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8455/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.response.BulkList.java", "BodyUseAPI": [], "Fixed commit": "d69e564a0f886423109116af8f77302c5839f110", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-12T07:02:52Z"},
{"Line": "=>972", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((prevChar == ' ') || (prevChar == '\\n')) || (prevChar == '\\t')) { for (java.lang.String s : iToSearch) { if ((iText.length()) < (i + (s.length()))) { continue; } if (iText.substring(i, (i + (s.length()))).equalsIgnoreCase(s)) { if ((iText.length()) == (i + (s.length()))) { return i; } char nextChar = iText.charAt((i + (s.length()))); if (((nextChar == ' ') || (nextChar == '\\n')) || (nextChar == '\\t')) { return i; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7311/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.OStringSerializerHelper.java", "BodyUseAPI": [], "Fixed commit": "a52f38f89117106e55b41786b4adb3d043e7c325", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-06-30T16:08:59Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(table.startsWith(\"E_\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2546/buggy-version/sqlg-core.src.main.java.org.umlg.sqlg.structure.SqlgStartupManager.java", "BodyUseAPI": [], "Fixed commit": "371ee29ba459843e5d32da564c1adc476cde273e", "Url": "https://api.github.com/repos/ktschmidt/sqlg", "Date": "2017-05-31T01:37:46Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(table.startsWith(\"V_\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2546/buggy-version/sqlg-core.src.main.java.org.umlg.sqlg.structure.SqlgStartupManager.java", "BodyUseAPI": [], "Fixed commit": "371ee29ba459843e5d32da564c1adc476cde273e", "Url": "https://api.github.com/repos/ktschmidt/sqlg", "Date": "2017-05-31T01:37:46Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(table.startsWith(\"E_\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2546/buggy-version/sqlg-core.src.main.java.org.umlg.sqlg.structure.SqlgStartupManager.java", "BodyUseAPI": [], "Fixed commit": "371ee29ba459843e5d32da564c1adc476cde273e", "Url": "https://api.github.com/repos/ktschmidt/sqlg", "Date": "2017-05-31T01:37:46Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (soot.dexpler.Util.isByteCodeClassName(classType)) outerClass += \";\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7938/buggy-version/src.soot.dexpler.DexAnnotation.java", "BodyUseAPI": [], "Fixed commit": "aa7d795c0387c34a5a34c8b8c9e49fa68296224d", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2016-10-26T10:27:50Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (soot.dexpler.Util.isByteCodeClassName(classType)) outerClass += \";\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7938/buggy-version/src.soot.dexpler.DexAnnotation.java", "BodyUseAPI": [], "Fixed commit": "aa7d795c0387c34a5a34c8b8c9e49fa68296224d", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2016-10-26T10:27:50Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rows > 3) { titlePrefix = (i > 3) ? \"virt\" : \" exp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4204/buggy-version/src.ru.spbau.bioinf.tagfinder.TexTableGenerator.java", "BodyUseAPI": [], "Fixed commit": "4349df8da1ab8038bcefd7c2ed3929afc2f4beaf", "Url": "https://api.github.com/repos/ablab/TagFinder", "Date": "2011-11-23T16:06:08Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/925/buggy-version/src.at.bitfire.davdroid.resource.Event.java", "BodyUseAPI": [], "Fixed commit": "b35273a6d56aeada4fe00dbd97895b8a3d5070b2", "Url": "https://api.github.com/repos/rfc2822/davdroid", "Date": "2013-12-08T13:00:48Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (valObj instanceof java.lang.String) { java.lang.String val = ((java.lang.String) (valObj)); if (OpenGraphParser.UNESCAPE_HTML_FIELDS.contains(key)) { valObj = org.apache.commons.lang.StringEscapeUtils.unescapeHtml(val); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2651/buggy-version/meaningfulweb-core.src.main.java.org.meaningfulweb.cext.processors.MeaningfulwebCompositeProcessor.java", "BodyUseAPI": [], "Fixed commit": "8361db25f0fb681df02171be59bd4013c06e8ddc", "Url": "https://api.github.com/repos/javasoze/meaningfulweb", "Date": "2011-04-23T05:08:14Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.cxf.common.util.StringUtils.isEmpty(props.getProperty((\"pg1_sex\" + n)))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3619/buggy-version/src.main.java.org.oscarehr.integration.born.ONAREnhancedFormToXML.java", "BodyUseAPI": [], "Fixed commit": "f8bc49b2ee4ebba796aed70da00b33f023367e3f", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-04-18T12:20:12Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first == true) { first = false; }else { ret.append(\",\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2563/buggy-version/app-support.src.main.java.com.barchart.util.health.HealthReportHandler.java", "BodyUseAPI": [], "Fixed commit": "f019426fd8ff313987a0a37c633f7856b9422ee9", "Url": "https://api.github.com/repos/barchart/barchart-util", "Date": "2015-02-03T18:02:33Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((poolState) == (com.zaxxer.hikari.pool.BaseHikariPool.POOL_RUNNING)) { LOGGER.debug(\"Connection attempt to database {} failed: {}\", configuration.getPoolName(), e.getMessage(), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1907/buggy-version/hikaricp-common.src.main.java.com.zaxxer.hikari.pool.BaseHikariPool.java", "BodyUseAPI": [], "Fixed commit": "d4e426ba48d84b6e51d379ca7dab22eccf6710af", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2015-05-13T00:29:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str.startsWith(\"[\")) && (str.endsWith(\"]\"))) { return new org.json.JSONArray(str); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4619/buggy-version/src.main.java.com.rcpooley.datasyncjs.DataUtil.java", "BodyUseAPI": [], "Fixed commit": "936497c1045dbcf10a173cf0097625f0832844cf", "Url": "https://api.github.com/repos/rcpooley/java-datasync-js", "Date": "2017-12-27T07:30:07Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) == null) mListener = ((com.pear.shopz.fragments.PagerContentFragment.OnCompleteListener) (getActivity()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7612/buggy-version/app.src.main.java.com.pear.shopz.fragments.PagerContentFragment.java", "BodyUseAPI": [], "Fixed commit": "43ff0031cb5743c8589403865f6f8f912dc9f88d", "Url": "https://api.github.com/repos/Daskott/Shopz", "Date": "2016-05-07T05:10:01Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (statement.getStatements().isEmpty()) { this.statements.add(statement); }else { this.statements.addAll(statement.getStatements()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6490/buggy-version/TinyPDG.src.yoshikihigo.tinypdg.pe.StatementInfo.java", "BodyUseAPI": ["java.util.List<yoshikihigo.tinypdg.pe.StatementInfo>.add(yoshikihigo.tinypdg.pe.StatementInfo)", "yoshikihigo.tinypdg.pe.StatementInfo.getStatements()", "java.util.List<yoshikihigo.tinypdg.pe.StatementInfo>.addAll(java.util.List<yoshikihigo.tinypdg.pe.StatementInfo>)"], "Fixed commit": "6fb56a9c6e1fba4f3598ab991076f355fea3abb4", "Url": "https://api.github.com/repos/YoshikiHigo/TinyPDG", "Date": "2014-09-11T13:38:05Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.runCmds) == null) { config.runCmds = new java.util.ArrayList<java.lang.String>(); }else config.runCmds = theCmds;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1562/buggy-version/src.main.java.org.jolokia.docker.maven.config.BuildImageConfiguration.java", "BodyUseAPI": [], "Fixed commit": "76b9160b4f317f5d1834596452a798d3843fc63b", "Url": "https://api.github.com/repos/computerlyrik/docker-maven-plugin", "Date": "2015-07-09T12:11:06Z"},
{"Line": "=>1471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_fieldValues) != null) { if ((_fieldOriginalValues) == null) { _fieldOriginalValues = new java.util.HashMap<java.lang.String, java.lang.Object>(); } for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : _fieldValues.entrySet()) { if (!(_fieldOriginalValues.containsKey(entry.getKey()))) { _fieldOriginalValues.put(entry.getKey(), entry.getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4627/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocument.java", "BodyUseAPI": [], "Fixed commit": "7c735d17f3aa873e295e8a0cfe8a95e7a15c205b", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-06-09T13:36:59Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (image.getName().equals(io.vertx.example.AutoScaler.ASG_IMAGE)) { io.vertx.example.AutoScaler.ASG_IMAGE_ID = image.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5272/buggy-version/src.main.java.io.vertx.example.AutoScaler.java", "BodyUseAPI": ["org.openstack4j.model.image.Image.getId()"], "Fixed commit": "292710948cac42fcd90ea5d1980b5332ab80fd7e", "Url": "https://api.github.com/repos/dhchoi/openstack-auto-scaler", "Date": "2016-02-08T05:11:24Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedIndex) != (-1)) { dmillerw.sound.client.gui.SoundEntryString soundEntryString = listContents.get(selectedIndex); net.minecraft.client.Minecraft.getMinecraft().getSoundHandler().playSound(net.minecraft.client.audio.PositionedSoundRecord.func_147673_a(new net.minecraft.util.ResourceLocation(soundEntryString.resourceDomain, soundEntryString.fullPath))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/534/buggy-version/src.main.java.dmillerw.sound.client.gui.GuiSoundSearch.java", "BodyUseAPI": [], "Fixed commit": "2db81e0e6f1899489f2a7dac3c9ef6508c44f0cf", "Url": "https://api.github.com/repos/EXTER7/SoundMuffler", "Date": "2015-04-19T18:50:37Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.davCmp.isExists())) { throw DcCoreException.Dav.CELL_NOT_FOUND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9013/buggy-version/core.src.main.java.com.fujitsu.dc.core.rs.cell.CellResource.java", "BodyUseAPI": [], "Fixed commit": "e1e30f3604facf1080b6ee7f77f052b1930a1e3e", "Url": "https://api.github.com/repos/fujitsu-pio/io", "Date": "2016-01-29T01:01:05Z"},
{"Line": "=>880", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ccre.igneous.Igneous.isRoboRIO()) { ds.addJoystick(names[i], ccre.igneous.Igneous.launcher.getJoystick((i + 1)), 12, 6); }else { ds.addJoystick(names[i], ((ccre.ctrl.IJoystick) (ccre.igneous.Igneous.launcher.getJoystick((i + 1)))), 12, 6); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/776/buggy-version/CommonChickenRuntimeEngine.src.ccre.igneous.Igneous.java", "BodyUseAPI": [], "Fixed commit": "bed793ddfa84cf9c3e412fd7578c73b2b03aeae1", "Url": "https://api.github.com/repos/flamingchickens1540/common-chicken-runtime-engine", "Date": "2015-07-31T05:38:35Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fifth > 10) { path.lineTo(fifth, convertDpToPx(10)); }else { path.lineTo(30, convertDpToPx(10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1144/buggy-version/android-square-progressbar.src.net.yscs.android.square_progressbar.SquareProgressView.java", "BodyUseAPI": ["android.graphics.Path.lineTo(float,int)"], "Fixed commit": "dd8ac3d60b3d13f5c567dd7db007c5f3debf4c0f", "Url": "https://api.github.com/repos/mrwonderman/android-square-progressbar", "Date": "2013-05-11T21:30:57Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (forth > 20) { path.lineTo(convertDpToPx(10), ((canvas.getHeight()) - forth)); }else { path.lineTo(convertDpToPx(10), ((canvas.getHeight()) - 40)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1144/buggy-version/android-square-progressbar.src.net.yscs.android.square_progressbar.SquareProgressView.java", "BodyUseAPI": ["android.graphics.Path.lineTo(int,((canvas.getHeight()) - forth))"], "Fixed commit": "dd8ac3d60b3d13f5c567dd7db007c5f3debf4c0f", "Url": "https://api.github.com/repos/mrwonderman/android-square-progressbar", "Date": "2013-05-11T21:30:57Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str == null) || (str.isEmpty())) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8749/buggy-version/platform-infrastructure.security.PolicyNegotiator.src.main.java.org.societies.security.model.Service.java", "BodyUseAPI": [], "Fixed commit": "5fec67262f98029aa85c363cb226e166ad74d29a", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-09-10T09:53:54Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.ntnu.ai.deck.CardUtils.groupByValues(no.ntnu.ai.deck.Card[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkNextFour(i, values)) { return true; }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4936/buggy-version/src.no.ntnu.ai.hands.PowerRating.java", "BodyUseAPI": [], "Fixed commit": "3a70482dd76ffb4f1a084b3efddb2fb3a54b99cd", "Url": "https://api.github.com/repos/nordmoen/IT3105-poker", "Date": "2012-09-02T17:36:02Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkNextFour(i, groupedByValues)) { return true; }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4936/buggy-version/src.no.ntnu.ai.hands.PowerRating.java", "BodyUseAPI": [], "Fixed commit": "3a70482dd76ffb4f1a084b3efddb2fb3a54b99cd", "Url": "https://api.github.com/repos/nordmoen/IT3105-poker", "Date": "2012-09-02T17:36:02Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spiritInstance) == null) { closing = false; close(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6667/buggy-version/src.main.java.evilcraft.tileentity.TileBoxOfEternalClosure.java", "BodyUseAPI": [], "Fixed commit": "05790c7a292416499543298d4aa24c538727cf63", "Url": "https://api.github.com/repos/CyclopsMC/EvilCraft", "Date": "2015-01-06T19:20:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ct) == null) { responseCode = org.springframework.http.HttpStatus.NOT_FOUND; }else org.springframework.beans.BeanUtils.copyProperties(ct, dbct, \"id\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2690/buggy-version/src.main.java.transactions.ComponentTypeTransactions.java", "BodyUseAPI": [], "Fixed commit": "f067d0cf3efbc489c56e8a88fe07905164740601", "Url": "https://api.github.com/repos/johnnicholson/309", "Date": "2017-02-03T18:34:28Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5959/buggy-version/Core.src.org.sleuthkit.autopsy.casemodule.LocalFilesPanel.java", "BodyUseAPI": [], "Fixed commit": "9fcb1a30363882c85d47401a6814cb0336b1f403", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2015-05-20T21:29:27Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5959/buggy-version/Core.src.org.sleuthkit.autopsy.casemodule.LocalDiskPanel.java", "BodyUseAPI": [], "Fixed commit": "9fcb1a30363882c85d47401a6814cb0336b1f403", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2015-05-20T21:29:27Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5959/buggy-version/Core.src.org.sleuthkit.autopsy.casemodule.ImageFilePanel.java", "BodyUseAPI": [], "Fixed commit": "9fcb1a30363882c85d47401a6814cb0336b1f403", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2015-05-20T21:29:27Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (low > high) { low = tmp[1]; high = tmp[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6895/buggy-version/iris-visualizer.src.main.java.cfa.vo.iris.visualizer.preferences.FittingRangeModel.java", "BodyUseAPI": [], "Fixed commit": "5ff7212e99aa21c2c21c3f93b26e2627b751f232", "Url": "https://api.github.com/repos/ChandraCXC/iris", "Date": "2016-07-22T20:24:31Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8959/buggy-version/src.main.java.de.beosign.quizzer.converter.DurationMinutesConverter.java", "BodyUseAPI": [], "Fixed commit": "09053d171e899e9b608a8110e37de38961a59291", "Url": "https://api.github.com/repos/beosign/quizzer", "Date": "2015-08-19T15:14:27Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((interval == null) && ((intervals.size()) == 1)) { interval = intervals.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2303/buggy-version/src.main.org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.java", "BodyUseAPI": ["java.util.List<org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.Interval<T>>.get(int)"], "Fixed commit": "1287d31ea7225306179cfe6b4f07b4399fe60ee3", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-16T17:17:23Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ex.getMessage()) != null) { javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(), \"Warning!\", javax.swing.JOptionPane.WARNING_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1100/buggy-version/src.purplepetal.panel.DataPanel.java", "BodyUseAPI": ["java.lang.Exception.getMessage()", "javax.swing.JOptionPane.showMessageDialog(purplepetal.panel.DataPanel,java.lang.String,java.lang.String,int)"], "Fixed commit": "ee8249cc2d548925ff626fbe27d904feefbc0c8c", "Url": "https://api.github.com/repos/UndeadScythes/PurplePetal", "Date": "2015-05-07T13:16:00Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ex.getMessage()) != null) { javax.swing.JOptionPane.showMessageDialog(this, msg, \"Warning!\", javax.swing.JOptionPane.WARNING_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1100/buggy-version/src.purplepetal.panel.DataPanel.java", "BodyUseAPI": [], "Fixed commit": "ee8249cc2d548925ff626fbe27d904feefbc0c8c", "Url": "https://api.github.com/repos/UndeadScythes/PurplePetal", "Date": "2015-05-07T13:16:00Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((game.Game.pHand.handValue()) > (game.Game.dHand.handValue())) && ((game.Game.pHand.size()) > 2)) && ((game.Game.dHand.size()) > 2)) { java.lang.System.out.println(((game.Game.player.getName()) + \" is the winner\")); game.Game.restart(); }else if ((((game.Game.pHand.handValue()) == (game.Game.dHand.handValue())) && ((game.Game.pHand.size()) > 2)) && ((game.Game.dHand.size()) > 2)) { java.lang.System.out.println(((game.Game.dealer.getName()) + \" is the winner.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1797/buggy-version/src.game.Game.java", "BodyUseAPI": ["game.Hand.size()", "game.Hand.size()", "game.Hand.handValue()", "game.Hand.handValue()"], "Fixed commit": "84c6daca229dae221fd2d104ad9c7bbc3e974d21", "Url": "https://api.github.com/repos/contramonk/BlackJackProject", "Date": "2016-10-16T16:36:23Z"},
{"Line": "=>1041", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.coderodde.util.BidirectionalHashMap.getMinimumNode(net.coderodde.util.BidirectionalHashMap.AbstractCollisionTreeNode<K1, K2>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parent.leftChild) == successor) { parent.leftChild = child; }else { parent.rightChild = child; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3328/buggy-version/src.net.coderodde.util.BidirectionalHashMap.java", "BodyUseAPI": [], "Fixed commit": "49756f42e08e9c1b070a50c561d65f4d481e92b0", "Url": "https://api.github.com/repos/coderodde/BidirectionalHashMap", "Date": "2017-07-02T18:58:43Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["promviz.Prominence.Front.flushPendingParents(promviz.Prominence.PromPair,promviz.Prominence.ChunkProcessor,java.util.List<promviz.Point[]>,p.equals(f.peak))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newThresh) { promThresh = cand; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8897/buggy-version/promviz.src.promviz.Prominence.java", "BodyUseAPI": [], "Fixed commit": "a235ce1ac2e8dd7735c3d19efffa7760c886cc4d", "Url": "https://api.github.com/repos/mrgriscom/promviz", "Date": "2015-05-23T23:51:00Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.linkedin.thirdeye.anomaly.classification.ClassificationTaskRunner.filterAnomalies(com.linkedin.thirdeye.detector.email.filter.AlertFilter,java.util.List<com.linkedin.thirdeye.datalayer.dto.MergedAnomalyResultDTO>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(filteredMainAnomalies)) { com.linkedin.thirdeye.anomaly.classification.ClassificationTaskRunner.LOG.info(\"Classification config {} gets {} anomalies to identify issue type.\", classificationConfig.getId(), filteredMainAnomalies.size()); java.util.Collections.sort(filteredMainAnomalies, new com.linkedin.thirdeye.anomaly.classification.ClassificationTaskRunner.MergeAnomalyEndTimeComparator()); java.util.List<com.linkedin.thirdeye.datalayer.dto.MergedAnomalyResultDTO> updatedMainAnomaliesByDimension = dimensionalShuffleAndUnifyClassification(filteredMainAnomalies); for (com.linkedin.thirdeye.datalayer.dto.MergedAnomalyResultDTO mergedAnomalyResultDTO : updatedMainAnomaliesByDimension) { mergedAnomalyDAO.update(mergedAnomalyResultDTO); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/915/buggy-version/thirdeye.thirdeye-pinot.src.main.java.com.linkedin.thirdeye.anomaly.classification.ClassificationTaskRunner.java", "BodyUseAPI": ["java.util.List<com.linkedin.thirdeye.datalayer.dto.MergedAnomalyResultDTO>.size()", "org.slf4j.Logger.info(java.lang.String,classificationConfig.getId(),filteredMainAnomalies.size())", "java.util.Collections.sort(java.util.List<com.linkedin.thirdeye.datalayer.dto.MergedAnomalyResultDTO>,com.linkedin.thirdeye.anomaly.classification.ClassificationTaskRunner.MergeAnomalyEndTimeComparator)", "com.linkedin.thirdeye.anomaly.classification.ClassificationTaskRunner.dimensionalShuffleAndUnifyClassification(java.util.List<com.linkedin.thirdeye.datalayer.dto.MergedAnomalyResultDTO>)"], "Fixed commit": "0a515ace2725fb307afc53d86d952e5e27116750", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2017-06-02T18:13:09Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serviceOrchestrator) != null) { serviceOrchestrator.statusLog.add(((\"Service: \" + (serviceParameter.getDescription())) + \" is DOWN\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2841/buggy-version/ServiceWatcher.src.main.java.com.cons.services.Service.java", "BodyUseAPI": [], "Fixed commit": "6e741062c23940c85b35b17e876883cec9bb363d", "Url": "https://api.github.com/repos/gtrianta1965/ServiceWatcher", "Date": "2017-07-14T08:39:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serviceOrchestrator) != null) { serviceOrchestrator.statusLog.add(((\"Service: \" + (serviceParameter.getDescription())) + \" is UP\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/2841/buggy-version/ServiceWatcher.src.main.java.com.cons.services.Service.java", "BodyUseAPI": [], "Fixed commit": "6e741062c23940c85b35b17e876883cec9bb363d", "Url": "https://api.github.com/repos/gtrianta1965/ServiceWatcher", "Date": "2017-07-14T08:39:41Z"},
{"Line": "=>2586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((httpClient) == null) { httpClient = org.restcomm.connect.commons.common.http.CustomHttpClientBuilder.build(org.restcomm.connect.commons.configuration.RestcommConfiguration.getInstance().getMain()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1197/buggy-version/restcomm.restcomm.telephony.src.main.java.org.restcomm.connect.telephony.CallManager.java", "BodyUseAPI": [], "Fixed commit": "d3828ccaf2f27f1f0d835817f18733f8c6840c61", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2017-09-04T13:04:34Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.player.getLocation().getWorld().equals(this.target.getLocation().getWorld())) { distance = loc.distance(target_loc); }else { this.showEntity(player, target); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8085/buggy-version/src.main.java.tw.mics.spigot.plugin.nomoreesp.runnable.CheckHideEntityRunnable.java", "BodyUseAPI": [], "Fixed commit": "28ab25f5fbda5b02dacce351fa3998e7ca794ff2", "Url": "https://api.github.com/repos/stan60250/NoMoreESP", "Date": "2017-02-20T12:20:19Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (agentInfo == null) { throw new java.lang.NullPointerException(\"agentInfo must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3162/buggy-version/collector.src.main.java.com.baidu.oped.apm.collector.dao.jdbc.JdbcApplicationIndexDao.java", "BodyUseAPI": [], "Fixed commit": "50293b465f0a6b588ebe403b8c802e72731bcc4b", "Url": "https://api.github.com/repos/masonmei/apm", "Date": "2015-08-20T07:54:03Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values.containsKey(com.vk.fesswod.articleView.data.SQL_INSERT_OR_REPLACE)) { values = new android.content.ContentValues(values); values.remove(com.vk.fesswod.articleView.data.SQL_INSERT_OR_REPLACE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/124/buggy-version/articleview.src.main.java.com.vk.fesswod.articleView.data.AppContentProvider.java", "BodyUseAPI": [], "Fixed commit": "928313cfe1da812c2b03284a085bffd3cc3800a5", "Url": "https://api.github.com/repos/sbaldin/AndroidEducation", "Date": "2015-07-01T05:22:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tree.getChild((childCount + 1)).getType()) == (husacct.analyse.infrastructure.antlr.java.JavaParser.IDENT)) { int lineNumber = tree.getChild((childCount + 1)).getLine(); javaLocalVariableGenerator.generateLocalLoopVariable(belongsToClass, belongsToMethod, child.getChild(0).getText(), tree.getChild((childCount + 1)).getText(), lineNumber); }else { logger.warn(\"Problemen with finding type. Please notice analyse\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/627/buggy-version/src.husacct.analyse.task.analyser.java.JavaLoopGenerator.java", "BodyUseAPI": ["husacct.analyse.task.analyser.java.JavaAttributeAndLocalVariableGenerator.generateLocalLoopVariable(java.lang.String,java.lang.String,child.getChild(0).getText(),tree.getChild((childCount + 1)).getText(),int)", "org.antlr.runtime.tree.Tree.getChild(int)", "tree.getChild((childCount + 1)).getLine()", "tree.getChild((childCount + 1)).getText()", "org.antlr.runtime.tree.Tree.getChild(int)"], "Fixed commit": "f72fa4b2d419468032c78e954b16c113f564aceb", "Url": "https://api.github.com/repos/timmuller/HUSACCT", "Date": "2012-05-29T11:06:11Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intent.getAction().equals(Intent.ACTION_HEADSET_PLUG)) && (!(isInitialStickyBroadcast()))) { if (com.barnewall.matthew.musicplayer.GlobalFunctions.isServiceRunning(context, com.barnewall.matthew.musicplayer.MusicPlayerService.class)) { android.media.AudioManager manager = ((android.media.AudioManager) (context.getSystemService(Context.AUDIO_SERVICE))); if (!(manager.isWiredHeadsetOn())) context.sendBroadcast(new android.content.Intent(com.barnewall.matthew.musicplayer.NotificationManagement.TOGGLE_PLAY_MUSIC)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1333/buggy-version/app.src.main.java.com.barnewall.matthew.musicplayer.BroadcastReceivers.HeadsetUnpluggedReceiver.java", "BodyUseAPI": [], "Fixed commit": "85183c71d761495292f2c29e094454cc7bdffc43", "Url": "https://api.github.com/repos/mbarnewall17/MusicPlayer", "Date": "2016-10-07T15:52:04Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBatching()) { rowCount = er.extensions.eof.ERXEOAccessUtilities.rowCountForFetchSpecification(er.extensions.batching.ERXBatchingDisplayGroup.dataSource().editingContext(), fetchSpecification()); }else if ((er.extensions.batching.ERXBatchingDisplayGroup.dataSource()) != null) { rowCount = er.extensions.batching.ERXBatchingDisplayGroup.dataSource().fetchObjects().count(); }else if ((er.extensions.batching.ERXBatchingDisplayGroup.allObjects()) != null) { rowCount = er.extensions.batching.ERXBatchingDisplayGroup.allObjects().count(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6600/buggy-version/Frameworks.Core.ERExtensions.Sources.er.extensions.batching.ERXBatchingDisplayGroup.java", "BodyUseAPI": [], "Fixed commit": "1e318bafa861fad8cc39d1d94bfe27f8d1d416e2", "Url": "https://api.github.com/repos/tedpet/wonder", "Date": "2012-11-27T14:54:35Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.meteoinfo.shape.GraphicCollection.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (graphic.isCollection()) { labelFont = ((org.meteoinfo.shape.GraphicCollection) (graphic)).getLabelSet().getLabelFont(); labelColor = ((org.meteoinfo.shape.GraphicCollection) (graphic)).getLabelSet().getLabelColor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9009/buggy-version/src.org.meteoinfo.chart.plot.Plot2D.java", "BodyUseAPI": [], "Fixed commit": "cbc29df62b429a360f3892a5529592349f9e146a", "Url": "https://api.github.com/repos/meteoinfo/MeteoInfoLib", "Date": "2017-08-04T14:33:05Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<SearchEngine.Item>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (item != null) { new com.grafian.ftsearch.MainActivity.DownloadTask().execute(item.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6224/buggy-version/src.com.grafian.ftsearch.MainActivity.java", "BodyUseAPI": ["com.grafian.ftsearch.MainActivity.DownloadTask.execute(item.getId())", "SearchEngine.Item.getId()"], "Fixed commit": "7a3a59f6f397cc5e0b7452e81e0f8f11ba5b1952", "Url": "https://api.github.com/repos/arkusuma/ftsearch-client", "Date": "2012-07-10T01:36:31Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mPassword.getText().toString()", "mEmail.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((email.isEmpty()) || (password.isEmpty())) { if (email.isEmpty()) { android.widget.Toast.makeText(this, \"Email can not be empty\", Toast.LENGTH_SHORT).show(); } if (password.isEmpty()) { android.widget.Toast.makeText(this, \"Password can not be empty\", Toast.LENGTH_SHORT).show(); } }else { mAuth.signInWithEmailAndPassword(email, password).addOnCompleteListener(this, new com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<com.google.firebase.auth.AuthResult> task) { if (!(task.isSuccessful())) { android.widget.Toast.makeText(com.sabututexp.uberapp.activities.CustomerRegistration.this, \"Log In Fail\", Toast.LENGTH_SHORT).show(); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6778/buggy-version/app.src.main.java.com.sabututexp.uberapp.activities.CustomerRegistration.java", "BodyUseAPI": ["java.lang.String.isEmpty()", "java.lang.String.isEmpty()", "com.google.firebase.auth.FirebaseAuth.signInWithEmailAndPassword(java.lang.String,java.lang.String)", "mAuth.signInWithEmailAndPassword(email, password).addOnCompleteListener(com.sabututexp.uberapp.activities.CustomerRegistration,com.google.android.gms.tasks.OnCompleteListener<com.google.firebase.auth.AuthResult>)"], "Fixed commit": "18f36375137fab269e1c16a4a854106572e2c054", "Url": "https://api.github.com/repos/Sabu0050/UberApp", "Date": "2017-11-02T08:31:06Z"},
{"Line": "=>1641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nuxeo.runtime.transaction.TransactionHelper.isNoTransaction()) { org.nuxeo.runtime.transaction.TransactionHelper.startTransaction(); try { return writeReplace(); } finally { org.nuxeo.runtime.transaction.TransactionHelper.commitOrRollbackTransaction(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8038/buggy-version/nuxeo-core.nuxeo-core-api.src.main.java.org.nuxeo.ecm.core.api.impl.DocumentModelImpl.java", "BodyUseAPI": [], "Fixed commit": "6d625ba5a993ce0f0c2897c8ce53d4bdb5bb0a82", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2016-02-05T11:10:13Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entityTypeDao.getEntityTypeId()) == null) entityTypeDao.setEntityTypeId(java.util.UUID.randomUUID().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/7788/buggy-version/SEAD-VA-extensions.sead-registry.sead-registry-jdbc-support.src.main.java.org.seadva.registry.dao.jdbc.impl.EntityTypeJdbcDaoImpl.java", "BodyUseAPI": ["org.seadva.registry.dao.EntityTypeDao.setEntityTypeId(java.lang.String)"], "Fixed commit": "1806e23f15b608e62d5c8b837baea49735e0c5b9", "Url": "https://api.github.com/repos/Data2Insight/sead-virtual-archive", "Date": "2014-03-25T15:30:17Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,com.orientechnologies.orient.core.metadata.schema.OType)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.orientechnologies.common.collection.OMultiValue.isIterable(fieldValue)) walkIterable(com.orientechnologies.common.collection.OMultiValue.getMultiValueIterable(fieldValue), fieldType, fieldWalker, walked);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6631/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.document.ODocumentFieldWalker.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.document.ODocumentFieldWalker.walkIterable(com.orientechnologies.common.collection.OMultiValue.getMultiValueIterable(fieldValue),com.orientechnologies.orient.core.metadata.schema.OType,com.orientechnologies.orient.core.db.document.ODocumentFieldVisitor,java.util.Set<com.orientechnologies.orient.core.record.impl.ODocument>)", "com.orientechnologies.common.collection.OMultiValue.getMultiValueIterable(java.lang.Object)"], "Fixed commit": "f1a9181a3f3f9af4e6d58e2eaecccd5076744fd3", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-06-15T17:33:19Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elsePart) != null) elsePart.accept(visitor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8761/buggy-version/src.expressiontree.ir.IfStatement.java", "BodyUseAPI": [], "Fixed commit": "c8e41fe432e074478b34f3f1a73743a889d43e9f", "Url": "https://api.github.com/repos/NikitaKurpas/grammar-parsing", "Date": "2016-05-12T06:15:49Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (q == null) { throw new java.lang.RuntimeException(\"q not set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4767/buggy-version/modules.clustering-dist.src.main.java.org.clueminer.knn.CachingKNN.java", "BodyUseAPI": [], "Fixed commit": "5c12a358294d882d3061a353faf5cba2669b3444", "Url": "https://api.github.com/repos/deric/clueminer", "Date": "2015-08-19T12:43:35Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (left) { this.separatorLeft.setPrefWidth(0); this.separatorLeft.setVisible(false); this.separatorRight.setPrefWidth(3); this.separatorRight.setVisible(true); }else { this.separatorRight.setPrefWidth(0); this.separatorRight.setVisible(false); this.separatorLeft.setPrefWidth(3); this.separatorLeft.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/883/buggy-version/src.main.java.de.lit.ribbonfx.presentation.simplefooterbutton.SimpleFooterButtonPresenter.java", "BodyUseAPI": [], "Fixed commit": "be527f45e9b95f5a52548ba76da89ab944ce5387", "Url": "https://api.github.com/repos/aliebelt/RibbonFX", "Date": "2014-02-03T08:16:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (percent <= 0) { return new javax.vecmath.Vector2f(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9036/buggy-version/Blockster.src.main.java.edu.chalmers.blockster.core.objects.movement.BezierSpline.java", "BodyUseAPI": [], "Fixed commit": "2f60e5359f36a0e1a979a654c885eb1a720251c0", "Url": "https://api.github.com/repos/oskarjonefors/TDA367", "Date": "2014-05-16T12:53:22Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subname.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3870/buggy-version/src.mobi.pharmaapp.util.Pharmacy.java", "BodyUseAPI": [], "Fixed commit": "06d09e87cd8a3e6a0ff65262c0a3d9c2935d95dd", "Url": "https://api.github.com/repos/wpinnoo/PharmaApp", "Date": "2013-03-30T17:29:28Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subname.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3870/buggy-version/src.mobi.pharmaapp.util.Pharmacy.java", "BodyUseAPI": [], "Fixed commit": "06d09e87cd8a3e6a0ff65262c0a3d9c2935d95dd", "Url": "https://api.github.com/repos/wpinnoo/PharmaApp", "Date": "2013-03-30T17:29:28Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DatabaseRunner.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rs.getString(\"Username\").contains(txtUsername.getText())) { java.lang.System.out.println(\"DEBUG(attemptLogin): Login credentials OK\"); new UserPage(txtUsername.getText()); j.dispose(); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9133/buggy-version/src.UserLogin.java", "BodyUseAPI": ["javax.swing.JTextField.getText()"], "Fixed commit": "310096ddbb5f9408cc7845838d049276ad4ecdca", "Url": "https://api.github.com/repos/sterr-christo/LateNightCravings", "Date": "2016-12-11T00:18:45Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (PurchasePlanFlag.BLACK.equals(plan.getFlag())) { requireAmount = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6167/buggy-version/src.main.java.com.zis.purchase.biz.PurchaseBO.java", "BodyUseAPI": [], "Fixed commit": "709285bfffeb078ee34e82d6a07214adc5d6c2de", "Url": "https://api.github.com/repos/xabaohui/zis", "Date": "2017-06-13T17:09:23Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page == 0) { articles.clear(); adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1829/buggy-version/app.src.main.java.com.example.sam.nytimessearch.activities.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "31e732c98c03e701d12ad46b003084a362587030", "Url": "https://api.github.com/repos/yssam/NYTimesSearch", "Date": "2016-07-31T22:33:30Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.forge.furnace.util.ClassLoaders.loadClass(addon.getClassLoader(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.jboss.forge.furnace.util.ClassLoaders.ownsClass(addon.getClassLoader(), type)) serviceTypes.add(type);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/4713/buggy-version/impl.src.main.java.org.jboss.forge.furnace.container.simple.lifecycle.SimpleContainer.java", "BodyUseAPI": ["java.util.Set<java.lang.Class<?>>.add(java.lang.Class<?>)"], "Fixed commit": "ae5946e407a1ae6423de817686935bf5dd055bf3", "Url": "https://api.github.com/repos/forge/furnace-simple", "Date": "2014-02-18T03:16:46Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lsModel.size()) > 16) { de.jClipCorn.util.helper.DialogHelper.showLocalInformation(this, \"Dialogs.TooManyAddFrames\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/9121/buggy-version/src.de.jClipCorn.gui.frames.scanFolderFrame.ScanFolderFrame.java", "BodyUseAPI": [], "Fixed commit": "dbc446ee3d481fca64f719ce5557901dd872e5a1", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2016-01-24T00:28:26Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_nextSlideTask) != null) { m_nextSlideTask.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8274/buggy-version/src.com.example.yadiskviewer.ImageViewerFragment.java", "BodyUseAPI": [], "Fixed commit": "e4b58770d6e7d53310c0dfef9a10f71ff5c76c07", "Url": "https://api.github.com/repos/AntonGitName/YaDiskViewer", "Date": "2014-11-04T14:34:49Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (defaultValue instanceof java.lang.Boolean) { defaultValue = defaultValue.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5226/buggy-version/src.main.java.com.github.haebin.iodocs.spring.IoDocsGenerator.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "5013dacb32adaad214ec950a4c71e7b558420497", "Url": "https://api.github.com/repos/haebin/spring-iodocs", "Date": "2013-12-02T04:16:45Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverLocation) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6924/buggy-version/IncrediblyGorgeousCalendar.src.edu.wpi.cs.wpisuitetng.modules.cal.documentation.DocumentMainPanel.java", "BodyUseAPI": [], "Fixed commit": "fcfc3231877aacb851f8f6edb073ad7d31add738", "Url": "https://api.github.com/repos/cs3733-team4/wpi-suite", "Date": "2013-12-10T09:04:47Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qprogramming.tasq.task.link.TaskLinkRepository.findByTaskAAndTaskBAndLinkType(java.lang.String,java.lang.String,com.qprogramming.tasq.task.link.TaskLinkType)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (link == null) { link = linkRepo.findByTaskAAndTaskBAndLinkType(taskB, taskA, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/1601/buggy-version/src.main.java.com.qprogramming.tasq.task.link.TaskLinkService.java", "BodyUseAPI": [], "Fixed commit": "27418343c529a6cdd83d843c446b5430da95a365", "Url": "https://api.github.com/repos/q-programming/tasq", "Date": "2015-09-22T14:03:17Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((quota.getThresholds()) != null) { totalProvCap = totalProvCap + (quota.getThresholds().getHard()); totalFsCount++; }else { _log.info(\"not able to get quota for fs : {}\", quota.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/8870/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.IsilonCommunicationInterface.java", "BodyUseAPI": ["com.emc.storageos.isilon.restapi.IsilonSmartQuota.getThresholds()", "org.slf4j.Logger.info(java.lang.String,quota.getPath())", "com.emc.storageos.isilon.restapi.IsilonSmartQuota.getPath()", "quota.getThresholds().getHard()"], "Fixed commit": "35ca469d498b75ba2f35ffeb10a684c68b1ae505", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-10-19T11:47:57Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (theView.getUsername().trim().contains(\" \")) { theView.message(gomoku.CreateAccountController.ucs); }else { java.lang.String message = ((\"!\" + (theView.getUsername())) + \" \") + (theView.getPassword1()); this.theConnection.write(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/6053/buggy-version/src.gomoku.CreateAccountController.java", "BodyUseAPI": ["gomoku.CreateAccountView.message(java.lang.String)", "gomoku.CreateAccountView.getPassword1()", "gomoku.CreateAccountView.getUsername()"], "Fixed commit": "a006e6a155dedfda627cb50fe835e5f50b9ca183", "Url": "https://api.github.com/repos/heyitsjeoff/gomoku", "Date": "2015-04-27T23:16:30Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((triplesGeneratedSoFar.get()) > (targetTriples)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3493/buggy-version/src.eu.ldbc.semanticpublishing.datagenerator.GeneralWorker.java", "BodyUseAPI": [], "Fixed commit": "6bf1af5d5556aaacaa5d538dc2522e821d58b116", "Url": "https://api.github.com/repos/ldbc/ldbc_semanticpub_bm", "Date": "2014-02-13T09:03:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((triplesGeneratedSoFar.get()) > (targetTriples)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/3493/buggy-version/src.eu.ldbc.semanticpublishing.datagenerator.ExpDecayWorker.java", "BodyUseAPI": [], "Fixed commit": "6bf1af5d5556aaacaa5d538dc2522e821d58b116", "Url": "https://api.github.com/repos/ldbc/ldbc_semanticpub_bm", "Date": "2014-02-13T09:03:32Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oclimport.startsWith(\"platform:/resource\")) { oclimport = oclimport.replace(\"resource\", \"plugin\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/984/buggy-version/bcool.transformations.org.gemoc.bcool.transformation.bcool2qvto.src.org.gemoc.bcool.transformation.bcool2qvto.helper.helperNsURI.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "6d8add52a76825b5886a5a19a64f97bba5f9ad35", "Url": "https://api.github.com/repos/gemoc/coordination", "Date": "2015-09-14T21:06:40Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.cast.RemoteMediaPlayer.getMediaStatus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mediaStatus == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5874/buggy-version/src.github.daneren2005.dsub.service.ChromeCastController.java", "BodyUseAPI": [], "Fixed commit": "6be90db3a4aeb6ae67931576dbf7eaf8ec58f59f", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2014-03-12T02:26:35Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ioThread) != (java.lang.Thread.currentThread())) { ioThread.addTaskAndWakeup(this); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/844/buggy-version/hazelcast.src.main.java.com.hazelcast.nio.tcp.nonblocking.NonBlockingSocketReader.java", "BodyUseAPI": [], "Fixed commit": "923fd9e9ace9f9be843884b5ed941c819c69d0ca", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2016-09-30T10:05:33Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.jaxrs.utils.InjectionUtils.isSupportedCollectionOrArray(java.lang.Class<?>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastTry || (!returnCollection)) { valueObjectValue = nextObject; }else { java.lang.Class<?> collCls = (org.apache.olingo.odata2.api.servicedocument.Collection.class.isAssignableFrom(valueType)) ? valueType : returnType; valueObjectValue = getCollectionSingleton(collCls, nextObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V49/5215/buggy-version/rt.rs.extensions.search.src.main.java.org.apache.cxf.jaxrs.ext.search.AbstractSearchConditionParser.java", "BodyUseAPI": [], "Fixed commit": "c9e31ce9c4596680d513723643d171f3d081d2d6", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-01-26T17:46:09Z"},
{"Line": "=>1068", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTarget) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4433/buggy-version/recyclerrefreshlayout.src.main.java.com.dinuscxj.refresh.RecyclerRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "6968c6e690e5ba4bf997c15bb6e34249b4909331", "Url": "https://api.github.com/repos/dinuscxj/RecyclerRefreshLayout", "Date": "2016-10-17T13:09:44Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRootFolder(path)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2341/buggy-version/zebedee-reader.src.main.java.com.github.onsdigital.zebedee.reader.util.ContentReader.java", "BodyUseAPI": [], "Fixed commit": "4dd1e0a9edcfd322f5657a100d836b9762640de3", "Url": "https://api.github.com/repos/ONSdigital/zebedee", "Date": "2015-08-05T18:40:09Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getStringSet(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (showablePokemonStringIDs == null) { showablePokemonStringIDs = new java.util.HashSet<>(); for (POGOProtos.Enums.PokemonIdOuterClass.PokemonId pokemonId : PokemonIdOuterClass.PokemonId.values()) { if (pokemonId != (PokemonIdOuterClass.PokemonId.UNRECOGNIZED)) { showablePokemonStringIDs.add(java.lang.String.valueOf(pokemonId.getNumber())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6737/buggy-version/app.src.main.java.com.omkarmoghe.pokemap.controllers.app_preferences.PokemapSharedPreferences.java", "BodyUseAPI": [], "Fixed commit": "950a66dfa9ca67c0a79030b09c1a06cf7067d67f", "Url": "https://api.github.com/repos/omkarmoghe/Pokemap", "Date": "2016-07-27T19:12:23Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof com.orientechnologies.orient.core.db.record.OIdentifiable) value = ((com.orientechnologies.orient.core.db.record.OIdentifiable) (value)).getRecord();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1868/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.ORuntimeResult.java", "BodyUseAPI": [], "Fixed commit": "c5329d03ed220602c41212d26b9b4a2aafa40fcc", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-12-11T18:37:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iRecord != null) result.add(((T) (iRecord)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1868/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.query.OSQLSynchQuery.java", "BodyUseAPI": [], "Fixed commit": "c5329d03ed220602c41212d26b9b4a2aafa40fcc", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-12-11T18:37:59Z"},
{"Line": "=>1206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((category.has(ThematicStyle.ISRANGECATEGORY)) == true) { isRangeCat = category.getBoolean(ThematicStyle.ISRANGECATEGORY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1567/buggy-version/geoprism-server.src.main.java.net.geoprism.gis.sld.SLDMapVisitor.java", "BodyUseAPI": ["org.json.JSONObject.getBoolean(ThematicStyle.ISRANGECATEGORY)"], "Fixed commit": "7d7c39b66744fdc6e0089766d0306981fbb90b43", "Url": "https://api.github.com/repos/terraframe/geoprism", "Date": "2016-09-27T02:18:33Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastShown != null) { for (java.lang.Class<? extends nbtool.gui.logviews.misc.ViewParent> cls : lastShown) { if (pset.contains(cls)) { ret[(i++)] = new nbtool.gui.utilitypanes.LogToViewUtility.ViewState(true, cls); pset.remove(cls); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3476/buggy-version/src.nbtool.src.nbtool.gui.utilitypanes.LogToViewUtility.java", "BodyUseAPI": [], "Fixed commit": "ab5767776b6b6dd3b672434e17d43f4027224ba3", "Url": "https://api.github.com/repos/dnav6987/nbites", "Date": "2015-06-04T20:18:27Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(wordModel.getWords().contains(WordModel.NO_RESULT))) { lblCount.setText((\"\" + (wordModel.getWords().size()))); }else { lblCount.setText(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6420/buggy-version/src.wordsearch.gui.controller.WordSearchController.java", "BodyUseAPI": ["wordModel.getWords().size()", "wordsearch.gui.model.WordModel.getWords()", "javafx.scene.text.Text.setText((\"\" + (wordModel.getWords().size())))"], "Fixed commit": "168e1a072e29c2fb7b1c86c87efb5562dfbf4b9f", "Url": "https://api.github.com/repos/onero/WordSearch", "Date": "2016-11-17T11:17:30Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/645/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())"], "Fixed commit": "52d41b0d54eeb840faee01bf9b139a691c90a807", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((useRegression) || ((sizeLimit) > 0)) extractor.addTrainingDataForSize(dbName, schema, s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5381/buggy-version/src.main.java.edu.umich.gpd.algorithm.ILPSolver.java", "BodyUseAPI": [], "Fixed commit": "50a0dc1ab323946919954db89704b02378c40391", "Url": "https://api.github.com/repos/dongyoungy/gpd", "Date": "2017-03-01T21:37:35Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hostid == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9141/buggy-version/src.main.java.com.bsg.upm.api.service.MonitorHostConfigService.java", "BodyUseAPI": [], "Fixed commit": "60bbd1b3c4ed61d044f301aa31fcb7c7927ca2e4", "Url": "https://api.github.com/repos/upmio/upm_api", "Date": "2017-11-20T02:00:34Z"},
{"Line": "=>1095", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDragHelper.getViewDragState()) == (ViewDragHelper.STATE_SETTLING)) { android.util.Log.d(com.sothree.slidinguppanel.SlidingUpPanelLayout.TAG, \"View is settling. Aborting animation.\"); mDragHelper.abort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6116/buggy-version/library.src.main.java.com.sothree.slidinguppanel.SlidingUpPanelLayout.java", "BodyUseAPI": ["com.sothree.slidinguppanel.ViewDragHelper.abort()"], "Fixed commit": "4f2f5ee31a785853dc5a9ecc3847eaa54e54b86a", "Url": "https://api.github.com/repos/MuhamedFathy/AndroidSlidingUpPanel", "Date": "2017-05-09T13:55:40Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Thread.currentThread().isInterrupted()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/689/buggy-version/codenvy-ide-vfs-fs.src.main.java.com.codenvy.vfs.impl.fs.CleanableSearcher.java", "BodyUseAPI": [], "Fixed commit": "23e7acf4e238e4bfda4a040c4349bda03c2c85b8", "Url": "https://api.github.com/repos/codenvy/ide", "Date": "2014-04-16T20:02:06Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((conf.getStaticFileLocation()) != null) http.staticFileLocation(conf.getStaticFileLocation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3238/buggy-version/src.main.java.it.besil.jweb.server.JWebServer.java", "BodyUseAPI": [], "Fixed commit": "f86cfac10166506a79c337d42293fe203b737d9c", "Url": "https://api.github.com/repos/besil/jweb", "Date": "2016-08-09T10:44:34Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(new java.io.File(hierarchyDir).exists())) { org.apache.storm.metric.cgroup.CGroupMetricsBase.LOG.warn(\"{} is disabled {} does not exist\", simpleName, hierarchyDir); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4359/buggy-version/storm-core.src.jvm.org.apache.storm.metric.cgroup.CGroupMetricsBase.java", "BodyUseAPI": [], "Fixed commit": "0d9737547d38400c37b534fd54cce141fa51ead2", "Url": "https://api.github.com/repos/rban1/storm", "Date": "2017-02-21T22:26:33Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.forgeessentials.permissions.core.ZonedPermissionHelper.contextIsConsole(context)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2023/buggy-version/src.main.java.com.forgeessentials.permissions.core.ZonedPermissionHelper.java", "BodyUseAPI": [], "Fixed commit": "27bcda7656cdd850573300fbc263e1a28f78ab3e", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2014-11-01T19:57:04Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rhythmIn[i]) < unitOut) rhythmSoFar.add(rhythmIn[i]); else for (int j = 0; j < ((rhythmIn[i]) / unitOut); j++) rhythmSoFar.add(unitOut);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5750/buggy-version/CSC475.src.counterpoint.CounterpointGenerator.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Byte>.add(byte)", "java.util.ArrayList<java.lang.Byte>.add(byte)"], "Fixed commit": "029321b4cac9afa92d49b1c4a63373c2ccc0e026", "Url": "https://api.github.com/repos/newmankyle/CSC475", "Date": "2017-04-06T05:10:45Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((masterResourceStreamer.getState()) != (DownloadState.STOPPED)) { masterResourceStreamer.cancel(DownloadProgressNotificationHandler.CancellationReason.USER); }else { masterResourceStreamer.setState(DownloadState.CANCELLED, false); masterResourceStreamer.getResourceWriter().cancel(); jacz.peerengineservice.util.datatransfer.master.DownloadReports downloadReports = new jacz.peerengineservice.util.datatransfer.master.DownloadReports(this, masterResourceStreamer.getResourceId(), masterResourceStreamer.getStoreName(), masterResourceStreamer.getDownloadProgressNotificationHandler()); downloadReports.reportCancelled(DownloadProgressNotificationHandler.CancellationReason.USER); downloadReports.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4488/buggy-version/src.main.java.jacz.peerengineservice.util.datatransfer.master.DownloadManager.java", "BodyUseAPI": ["masterResourceStreamer.getResourceWriter().cancel()", "jacz.peerengineservice.util.datatransfer.master.MasterResourceStreamer.getResourceWriter()", "jacz.peerengineservice.util.datatransfer.master.MasterResourceStreamer.getResourceId()", "jacz.peerengineservice.util.datatransfer.master.MasterResourceStreamer.getStoreName()", "jacz.peerengineservice.util.datatransfer.master.MasterResourceStreamer.setState(DownloadState.CANCELLED,boolean)", "jacz.peerengineservice.util.datatransfer.master.MasterResourceStreamer.cancel(DownloadProgressNotificationHandler.CancellationReason.USER)", "jacz.peerengineservice.util.datatransfer.master.MasterResourceStreamer.getDownloadProgressNotificationHandler()"], "Fixed commit": "43b94639eca1ecf211dc8d7f8702dbd171e8f9d1", "Url": "https://api.github.com/repos/albertoanguita/jaczpeerengineservice", "Date": "2016-07-04T14:37:30Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP_MR1)) { holder.noteCard.setCardBackgroundColor(android.graphics.Color.parseColor(noteColor)); }else { holder.noteCard.setBackgroundColor(android.graphics.Color.parseColor(noteColor)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/894/buggy-version/app.src.main.java.com.mynotes.android.mynotes.NotesAdapter.java", "BodyUseAPI": [], "Fixed commit": "f9c1100a1688a4b90691578b0dea64123f21e69c", "Url": "https://api.github.com/repos/guilleortiz/MyNotes", "Date": "2017-08-11T20:27:15Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wList.size()) > 0) { first = wList.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8387/buggy-version/src.orion.ms.sara.WayPointActivity.java", "BodyUseAPI": ["java.util.List<orion.ms.sara.WP>.remove(int)"], "Fixed commit": "59c53a293444f74bfc5151dd2aacfdaa58ab42fe", "Url": "https://api.github.com/repos/bradshoow/SARA", "Date": "2014-04-09T08:18:47Z"},
{"Line": "=>922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((electionWardId) == null) || ((electionWardId) == (-1))) { addActionError(getText(\"mandatory.election.ward\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6158/buggy-version/egov.egov-ptisweb.src.main.java.org.egov.ptis.actions.create.CreatePropertyAction.java", "BodyUseAPI": [], "Fixed commit": "62dbf3d038cb372f9b63f38de4286c61d9a6d46a", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2015-10-21T11:22:45Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.geophile.erdo.map.transactionalmap.TransactionalMap.put(com.geophile.erdo.apiimpl.AbstractRecord,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (lazyRecord != null) { replaced = lazyRecord.materializeRecord(); if (replaced.deleted()) { replaced = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4098/buggy-version/src.main.java.com.geophile.erdo.apiimpl.OrderedMapImpl.java", "BodyUseAPI": ["com.geophile.erdo.map.LazyRecord.materializeRecord()"], "Fixed commit": "623f66bd72594cdf11744dba00a9134d668966de", "Url": "https://api.github.com/repos/geophile/erdo", "Date": "2013-06-03T14:35:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["v.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(inputSearch.isEmpty())) { com.efarquharson.spotifystreamer.SearchArtistFragment.FetchArtistClass artistClass = new com.efarquharson.spotifystreamer.SearchArtistFragment.FetchArtistClass(); artistClass.execute(inputSearch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/957/buggy-version/app.src.main.java.com.efarquharson.spotifystreamer.SearchArtistFragment.java", "BodyUseAPI": ["com.efarquharson.spotifystreamer.SearchArtistFragment.FetchArtistClass.execute(java.lang.String)"], "Fixed commit": "78b1d9f657880cc0b6c392c860cc53a4487d86c2", "Url": "https://api.github.com/repos/emerset/spotify-streamer", "Date": "2015-07-02T07:05:35Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((call_frequency) != 0) { createNotifications(ACTION_CALL_NOTIFICATION, call_frequency, callCounter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6210/buggy-version/InTouch.app.src.paid.java.tk.talcharnes.intouch.UpdateContactInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "2cc66cacdf4721f55d7062d767eec0c979f61aa8", "Url": "https://api.github.com/repos/tal32123/InTouch", "Date": "2017-03-29T01:34:02Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lia.lab.Percolation.Percolation.getIndex(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isBottomSite(ix)) { if (isFull(i, j)) { unionUF.union(ix, bottomSite); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7069/buggy-version/PrincetonAlgorithm.src.main.java.com.lia.lab.Percolation.Percolation.java", "BodyUseAPI": ["edu.princeton.cs.algs4.WeightedQuickUnionUF.union(int,int)"], "Fixed commit": "115f6f002dad34ff0e824236b4b433e63306c39b", "Url": "https://api.github.com/repos/anotherdaylia/PrincetonAlgorithm", "Date": "2016-02-04T22:14:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<org.bukkit.event.entity.EntityDamageByEntityEvent>.remove()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(e.isCancelled())) ((org.bukkit.entity.Damageable) (e.getEntity())).damage(e.getDamage(), e.getDamager());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4432/buggy-version/src.com.frash23.smashhit.SmashHitListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamage()", "((org.bukkit.entity.Damageable) (e.getEntity())).damage(e.getDamage(),e.getDamager())", "org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Fixed commit": "aea4cf78d72b6b9f5611564f781b17a0c2bb3ab2", "Url": "https://api.github.com/repos/Speentie8081/SmashHit", "Date": "2017-02-23T18:15:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count == 0) return toReturn;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8587/buggy-version/GUIBoard.Statistics.java", "BodyUseAPI": [], "Fixed commit": "bc3e33b4288be6243547f94a7d9d56fa6b6c529c", "Url": "https://api.github.com/repos/jipjan/B1_GUIBoard", "Date": "2016-10-11T14:14:13Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fun.rubicon.RubiconBot.getMySQL().getGuildValue(net.dv8tion.jda.core.entities.Guild,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (oldEntry != null) if (oldEntry.contains(ch.getId())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6450/buggy-version/src.main.java.fun.rubicon.listener.AutochannelListener.java", "BodyUseAPI": ["java.lang.String.contains(ch.getId())"], "Fixed commit": "e448a35312b4142936563816450630fc6fb7ab3e", "Url": "https://api.github.com/repos/Rubicon-Bot/Rubicon", "Date": "2017-11-24T14:57:59Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dcm4che3.data.Attributes.getDate(Tag.StudyDate)", "org.dcm4che3.data.Attributes.getDate(Tag.StudyDate)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((date1 == null) && (date2 == null)) { return o1.getString(Tag.StudyInstanceUID, \"\").compareTo(o2.getString(Tag.StudyInstanceUID, \"\")); }else { if (date1 == null) { return 1; } if (date2 == null) { return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2334/buggy-version/src.main.java.org.weasis.dicom.wado.BuildManifestDcmQR.java", "BodyUseAPI": [], "Fixed commit": "dd763f7ff6a38aaa47c4a7e53ea1c047c6ef2aae", "Url": "https://api.github.com/repos/nroduit/weasis-pacs-connector", "Date": "2015-12-20T21:41:14Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emojidex.emojidexandroid.Emojidex.getEmoji(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (emoji != null) { if ((!standardOnly) || (emoji.isStandard())) emojies.add(emoji); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6614/buggy-version/EmojidexAndroid.src.main.java.com.emojidex.emojidexandroid.KeyboardViewManager.java", "BodyUseAPI": ["java.util.ArrayList<com.emojidex.emojidexandroid.Emoji>.add(com.emojidex.emojidexandroid.Emoji)", "com.emojidex.emojidexandroid.Emoji.isStandard()"], "Fixed commit": "a09637e4241c6be43468dbd86305f63f1fdecfac", "Url": "https://api.github.com/repos/emojidex/emojidex-android", "Date": "2017-12-06T00:39:51Z"},
{"Line": "=>18962", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nschmidt.ldparteditor.logger.NLogger.DEBUG) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5585/buggy-version/src.org.nschmidt.ldparteditor.data.VertexManager.java", "BodyUseAPI": [], "Fixed commit": "17420edae9bf96d9763eb8ef2b5e671d114ba09c", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-07-13T20:57:20Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { rv = new android.widget.RemoteViews(mContext.getPackageName(), R.layout.weather_widget_item2); }else { rv = new android.widget.RemoteViews(mContext.getPackageName(), R.layout.weather_widget_item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3737/buggy-version/worldclockwidget.src.ch.corten.aha.worldclock.WeatherWidgetService.java", "BodyUseAPI": [], "Fixed commit": "0e4fc47d52508bfca2fc4c681f2d59afea47c93b", "Url": "https://api.github.com/repos/arminha/worldclockwidget", "Date": "2012-08-23T13:28:57Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t == (this)) { return throwable; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4986/buggy-version/traceur.src.main.java.com.tspoon.traceur.TraceurException.java", "BodyUseAPI": [], "Fixed commit": "80b2de9248fb843caca0bc822ab5083b9463ba63", "Url": "https://api.github.com/repos/T-Spoon/Traceur", "Date": "2017-04-06T21:46:36Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4372/buggy-version/CourseRaPrincetonAlgo.src.hengxiu.courseraPA.w2.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "ed66b9b5591b4c7f593b3e3125dbf755ba0d32fd", "Url": "https://api.github.com/repos/Hengxiugao/CourseRaPrincetonAlgo", "Date": "2017-02-24T07:38:04Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (instr != null) { instr.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8155/buggy-version/demokratinu.src.src.org.group13.pocketpolitics.net.riksdag.XmlAsyncTask.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "7211cdf813b87214394a9cca229d72d5545ec031", "Url": "https://api.github.com/repos/fruktstav/demokratinu", "Date": "2013-05-25T11:40:55Z"},
{"Line": "=>1850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rootGroup) == null) rootGroup = makeRootGroup();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6646/buggy-version/cdm.src.main.java.ucar.nc2.NetcdfFile.java", "BodyUseAPI": [], "Fixed commit": "964c8026f4eff824d474fc6da0b875587c967de8", "Url": "https://api.github.com/repos/Unidata/thredds", "Date": "2012-12-19T21:48:52Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (testValue()) { showDialogValidation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4737/buggy-version/StimateApp.src.main.java.com.ks.stimate.ui.suscriptions.SubscriptionActivity.java", "BodyUseAPI": [], "Fixed commit": "23c16a9be716ed89d87339d0d37341c055fc506f", "Url": "https://api.github.com/repos/KevinSotomayor/stimateandroid", "Date": "2017-10-26T15:06:57Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (canResolveCustomType(arg)) { arg = resolveCustomType(arg); }else if (arg instanceof java.util.concurrent.atomic.AtomicReference) { arg = ((java.util.concurrent.atomic.AtomicReference<?>) (arg)).get(); }else if (arg instanceof java.util.concurrent.atomic.AtomicBoolean) { return ((java.util.concurrent.atomic.AtomicBoolean) (arg)).get() ? 1 : 0; }else if (arg instanceof java.lang.Enum<?>) { return ((java.lang.Enum<?>) (arg)).name(); }else if (arg instanceof java.lang.ThreadLocal) { arg = ((java.lang.ThreadLocal<?>) (arg)).get(); }else { return arg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5398/buggy-version/squidb.src.com.yahoo.squidb.sql.DefaultArgumentResolver.java", "BodyUseAPI": ["com.yahoo.squidb.sql.DefaultArgumentResolver.resolveCustomType(java.lang.Object)"], "Fixed commit": "66f99ecced9c72bda57ed2b7c5bb53cfc4938449", "Url": "https://api.github.com/repos/yahoo/squidb", "Date": "2016-08-30T15:09:13Z"},
{"Line": "=>624", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (availableBlocks < 0) { availableBlocks += playerData.getAccruedClaimBlocks(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2407/buggy-version/src.main.java.net.kaikk.mc.gpp.CommandExec.java", "BodyUseAPI": [], "Fixed commit": "18019657445ba5b626a0c27616ab4db32cd357ef", "Url": "https://api.github.com/repos/KaiKikuchi/GriefPreventionPlus", "Date": "2016-04-15T18:41:44Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trajectory) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/127/buggy-version/core.engine-core.src.main.java.ead.engine.core.gameobjects.effects.MoveSceneElementGO.java", "BodyUseAPI": [], "Fixed commit": "7fa2aafdc982e55a567c4fb1d2f9741425f39e06", "Url": "https://api.github.com/repos/e-ucm/eadventure", "Date": "2013-04-12T11:37:37Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trajectory) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/127/buggy-version/core.engine-core.src.main.java.ead.engine.core.gameobjects.effects.MoveSceneElementGO.java", "BodyUseAPI": [], "Fixed commit": "7fa2aafdc982e55a567c4fb1d2f9741425f39e06", "Url": "https://api.github.com/repos/e-ucm/eadventure", "Date": "2013-04-12T11:37:37Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((totalWords) == 0) { throw new org.sper.logtracker.erroranalysis.data.NoContextException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7533/buggy-version/logtracker.src.main.java.org.sper.logtracker.erroranalysis.data.ErrorCategory.java", "BodyUseAPI": [], "Fixed commit": "206932490089babc26b0da8885ff9fa050b1efad", "Url": "https://api.github.com/repos/silvanperego/LogTracker", "Date": "2016-05-24T11:44:48Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user.isAllowCreateProject()) { isMyProcess = true; }else { if (processOrder == 0) { if (style.isOperationer()) { isMyProcess = true; } if ((processMid.getEndDate()) != null) { preProcessFinished = true; }else { preProcessFinished = false; } }else if ((processOrder > 0) && preProcessFinished) { if (style.isOperationer()) { isMyProcess = true; } if ((processMid.getEndDate()) != null) { preProcessFinished = true; }else { preProcessFinished = false; } } processOrder++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4950/buggy-version/src.main.java.com.huivip.holu.service.impl.ComponentStyleManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "3e2c8171803eac0fe5fb720c702ff0eb54ab7c9f", "Url": "https://api.github.com/repos/laihui0207/holusystem", "Date": "2015-12-16T17:56:15Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!preProcessFinished) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4950/buggy-version/src.main.java.com.huivip.holu.service.impl.ComponentStyleManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "3e2c8171803eac0fe5fb720c702ff0eb54ab7c9f", "Url": "https://api.github.com/repos/laihui0207/holusystem", "Date": "2015-12-16T17:56:15Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevDstReg) != null) prevDstReg.readOnly = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4997/buggy-version/app.src.main.java.cn.ac.nya.nsasm.NSASM.java", "BodyUseAPI": [], "Fixed commit": "a2c51e5a96cad163f2032b7011d74a8c62a5e6a3", "Url": "https://api.github.com/repos/NSDN/NSASMdroid", "Date": "2017-12-25T09:52:54Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevDstReg) != null) prevDstReg.readOnly = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4997/buggy-version/app.src.main.java.cn.ac.nya.nsasm.NSASM.java", "BodyUseAPI": [], "Fixed commit": "a2c51e5a96cad163f2032b7011d74a8c62a5e6a3", "Url": "https://api.github.com/repos/NSDN/NSASMdroid", "Date": "2017-12-25T09:52:54Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlaying) != null) { mContext.playSong(mPlaying); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5664/buggy-version/SunApp.app.src.main.java.com.wojtechnology.sunami.TheBrain.java", "BodyUseAPI": [], "Fixed commit": "12cf1c60f2b98b6805ff2114de1887219cd0b58e", "Url": "https://api.github.com/repos/Wojtechnology/Sunami", "Date": "2015-08-16T22:31:23Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((metricAccessor) == null) { this.metricAccessor = new org.skywalking.apm.agent.core.jvm.gc.UnknowGC(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8070/buggy-version/apm-sniffer.apm-agent-core.src.main.java.org.skywalking.apm.agent.core.jvm.gc.GCProvider.java", "BodyUseAPI": [], "Fixed commit": "349802604c97d71f2b2fa804d3e1bc2a3d9b3943", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-09-10T03:40:21Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((container) != null) container.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2051/buggy-version/exo.ws.frameworks.servlet.src.main.java.org.exoplatform.ws.frameworks.servlet.StandaloneContainerInitializedListener.java", "BodyUseAPI": [], "Fixed commit": "226d1569f82d7e6618b94c3261e1b72a94a3af6b", "Url": "https://api.github.com/repos/exoplatform/ws", "Date": "2013-08-06T17:49:30Z"},
{"Line": "=>6320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!r) r = consumeToken(b, net.masterthought.dlanguage.parser.KW_RETURN);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3538/buggy-version/gen.net.masterthought.dlanguage.parser.DLanguageParser.java", "BodyUseAPI": [], "Fixed commit": "b85d0c76e5468625697d09cd08c0a58d430052d0", "Url": "https://api.github.com/repos/intellij-dlanguage/intellij-dlanguage", "Date": "2017-06-12T05:15:09Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.util.StringUtils.hasText(id)) { vdcs.add(java.lang.Integer.parseInt(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3611/buggy-version/server.src.main.java.com.abiquo.abiserver.persistence.dao.virtualappliance.hibernate.VirtualApplianceDAOHibernate.java", "BodyUseAPI": ["java.util.Collection<java.lang.Integer>.add(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "de2f7cea834c4d3feb895064fa58e6fac49eddc2", "Url": "https://api.github.com/repos/abiquo/abiquo", "Date": "2011-05-30T15:20:53Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == fieldName) { fieldName = (com.vimeo.stag.processor.generators.TypeAdapterGenerator.TYPE_ADAPTER_FIELD_PREFIX) + (typeAdapterNamesMap.size()); typeAdapterNamesMap.put(fieldType.toString(), fieldName); java.lang.String originalFieldName = com.vimeo.stag.processor.utils.FileGenUtils.unescapeEscapedString(fieldName); adapterBuilder.addField(typeName, originalFieldName, javax.lang.model.element.Modifier.PRIVATE, javax.lang.model.element.Modifier.FINAL); constructorBuilder.addStatement((((fieldName + \" = gson.getAdapter(\") + (typeTokenConstantsGenerator.addTypeToken(fieldType))) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/731/buggy-version/stag-library-compiler.src.main.java.com.vimeo.stag.processor.generators.TypeAdapterGenerator.java", "BodyUseAPI": [], "Fixed commit": "92a212f8aa0bf21f27303e9d29c593947174081d", "Url": "https://api.github.com/repos/Flipkart/stag-java", "Date": "2016-11-14T10:59:22Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultArraySize()) { mScreenshotButton.setVisibility(View.GONE); }else { mScreenshotButton.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7416/buggy-version/app.src.main.java.com.anddevbg.lawa.ui.activity.weather.WeatherActivity.java", "BodyUseAPI": [], "Fixed commit": "9a7ac1a63593924bfb064b6221842bd70de0846c", "Url": "https://api.github.com/repos/teodorpenkov/lawa", "Date": "2015-10-27T09:31:42Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.carlomicieli.services.MovieService.findBySlug(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (movie == null) { return \"errors/notfound\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8289/buggy-version/src.main.java.com.github.carlomicieli.controllers.MovieController.java", "BodyUseAPI": [], "Fixed commit": "150c4006b5ee05296a21e5e4a943db7de83d08d7", "Url": "https://api.github.com/repos/CarloMicieli/spring-mvc-movies", "Date": "2012-03-24T07:39:11Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (providers != null) recipientProviders.addAll(providers);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1205/buggy-version/src.main.java.hudson.plugins.emailext.EmailType.java", "BodyUseAPI": ["java.util.List<hudson.plugins.emailext.plugins.RecipientProvider>.addAll(java.util.List<hudson.plugins.emailext.plugins.RecipientProvider>)"], "Fixed commit": "4da50ac8ad545324418a9ebe54832cc7bc48c6d9", "Url": "https://api.github.com/repos/drivin77/email-ext-plugin", "Date": "2014-06-02T20:05:47Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof java.util.concurrent.ExecutionException) { throwable = e.getCause(); }else { throwable = e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3649/buggy-version/awaitility.src.main.java.org.awaitility.core.ConditionAwaiter.java", "BodyUseAPI": ["java.lang.Throwable.getCause()"], "Fixed commit": "ae74a26ca209a8c093da65767322c2e9d2cba7bb", "Url": "https://api.github.com/repos/awaitility/awaitility", "Date": "2017-03-17T12:25:57Z"},
{"Line": "=>765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.josso.agent.http.HttpSSOAgent.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (request != null) { im = request.getConfig(this).getIdentityManagerService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4424/buggy-version/core.josso-agent.src.main.java.org.josso.agent.http.HttpSSOAgent.java", "BodyUseAPI": ["request.getConfig(this).getIdentityManagerService()", "org.josso.agent.http.SSOAgentRequest.getConfig(org.josso.agent.http.HttpSSOAgent)"], "Fixed commit": "cd5edfc352eabc2593c13d8c58482a3fa7e4e3dd", "Url": "https://api.github.com/repos/atricore/josso1", "Date": "2015-12-18T18:56:04Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callback) != null) { callback.onFail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7712/buggy-version/app.src.main.java.neilw4.omin.crypto.sign.Signer.java", "BodyUseAPI": [], "Fixed commit": "f9237191aba0c1c65b475ce14f05aec147bbf3f6", "Url": "https://api.github.com/repos/neilw4/OMiN", "Date": "2015-03-30T11:26:49Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callback) != null) { callback.onSuccess(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7712/buggy-version/app.src.main.java.neilw4.omin.crypto.sign.Signer.java", "BodyUseAPI": [], "Fixed commit": "f9237191aba0c1c65b475ce14f05aec147bbf3f6", "Url": "https://api.github.com/repos/neilw4/OMiN", "Date": "2015-03-30T11:26:49Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(peekingAt.shown)) { revealZeros(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5265/buggy-version/MineSweeper.java", "BodyUseAPI": [], "Fixed commit": "746c8bdf55796422397dd9cac0793365294dc4af", "Url": "https://api.github.com/repos/jackoe/Evomine", "Date": "2017-05-20T20:44:32Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.matches()) scan = java.lang.Integer.parseInt(m.group(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1520/buggy-version/src.rappsilber.ms.dataAccess.msm.MSMIterator.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "60a9582f9ef8c045193e2973fffd68a030d9c45b", "Url": "https://api.github.com/repos/lutzfischer/XiSearch", "Date": "2017-07-02T20:55:51Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(visited.contains((((neighbor[0]) + \" \") + (neighbor[1]))))) { result.add(neighbor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6208/buggy-version/BFS.java", "BodyUseAPI": ["java.util.ArrayList<int[]>.add(int[])"], "Fixed commit": "d56f76710f4332f97522675440faef943dc9b521", "Url": "https://api.github.com/repos/SuperiorNiels/Java-Pathfinder-Simulator", "Date": "2017-05-16T17:16:36Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(visited.contains((((neighbor[0]) + \" \") + (neighbor[1]))))) { result.add(neighbor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6208/buggy-version/BFS.java", "BodyUseAPI": ["java.util.ArrayList<int[]>.add(int[])"], "Fixed commit": "d56f76710f4332f97522675440faef943dc9b521", "Url": "https://api.github.com/repos/SuperiorNiels/Java-Pathfinder-Simulator", "Date": "2017-05-16T17:16:36Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pages == 0) { javax.swing.table.TableModel empty = new javax.swing.table.DefaultTableModel(null, jobula_search.Window.indeed.columns); jobula_search.Window.job_table.setModel(empty); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2500/buggy-version/src.jobula_search.Window.java", "BodyUseAPI": [], "Fixed commit": "58ff5bbbdbab5d9623dbe826212a99d81ca3be5e", "Url": "https://api.github.com/repos/neptunedockyard/jobula_java", "Date": "2017-04-16T08:41:32Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tabIndex == (tabPane.getSelectedIndex())) && ((tabPane.getBackgroundAt(tabIndex)) instanceof javax.swing.plaf.ColorUIResource)) { return super.getLoBorderColor(tabIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6078/buggy-version/src.main.java.com.jtattoo.plaf.graphite.GraphiteTabbedPaneUI.java", "BodyUseAPI": ["com.jtattoo.plaf.graphite.BaseTabbedPaneUI.getLoBorderColor(int)"], "Fixed commit": "aa293e2b15b942262d85f6ea8aa131e50e67ce2d", "Url": "https://api.github.com/repos/michael-hagen/JTattoo", "Date": "2013-02-06T17:34:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jeknowledge.hojehapraxe.app.MainActivity.findViewById(R.id.big_answer_textview)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bigAnswer.equals(\"N\u00e3o h\u00e1 praxe\")) { reason.setText(\"\"); }else { reason.setText(praxeObject.reason); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4006/buggy-version/app.src.main.java.com.jeknowledge.hojehapraxe.app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e5d428e2cfd49e6b9f1c9550b08a95fb2ff6ed0d", "Url": "https://api.github.com/repos/jeKnowledge/hoje-ha-praxe-android", "Date": "2014-05-06T07:43:28Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(alive())) { return new org.javatuples.Pair(effectProcedure, me.trotyl.arena.procedure.AttackProcedure.none); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3374/buggy-version/src.main.java.me.trotyl.arena.role.Player.java", "BodyUseAPI": [], "Fixed commit": "71744f63d49e915870133f117dc78c6064ca2af9", "Url": "https://api.github.com/repos/trotyl/arena", "Date": "2015-12-04T06:47:02Z"},
{"Line": "=>1146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sagebionetworks.repo.model.AccessControlList.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (aclId != null) { final java.lang.String aclKey = org.sagebionetworks.repo.model.jdo.KeyFactory.stringToKey(aclId).toString(); if (!(key.equals(aclKey))) { throw new java.lang.IllegalArgumentException((((\"The path ID: \" + id) + \" does not match the ACL's ID: \") + aclId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6751/buggy-version/services.repository.src.main.java.org.sagebionetworks.repo.web.controller.EntityController.java", "BodyUseAPI": ["org.sagebionetworks.repo.model.jdo.KeyFactory.stringToKey(java.lang.String)", "org.sagebionetworks.repo.model.jdo.KeyFactory.stringToKey(aclId).toString()"], "Fixed commit": "24304ff93c6acced7efbfedbdc3ff3b4af9a9f72", "Url": "https://api.github.com/repos/Sage-Bionetworks/Synapse-Repository-Services", "Date": "2013-06-28T20:50:56Z"},
{"Line": "=>3437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((write.getOperationType()) == (DocumentWriteOperation.OperationType.DISABLE_METADATA_DEFAULT)) { javax.ws.rs.core.MultivaluedMap headers = new com.sun.jersey.core.util.MultivaluedMapImpl(); headers.add(HttpHeaders.CONTENT_TYPE, metadata.getMimetype()); headers.add(\"Content-Disposition\", \"inline; category=metadata\"); headerList.add(headers); writeHandles.add(write.getMetadata()); }else if (metadata != null) { javax.ws.rs.core.MultivaluedMap headers = new com.sun.jersey.core.util.MultivaluedMapImpl(); headers.add(HttpHeaders.CONTENT_TYPE, metadata.getMimetype()); if ((write.getOperationType()) == (DocumentWriteOperation.OperationType.METADATA_DEFAULT)) { headers.add(\"Content-Disposition\", \"inline; category=metadata\"); }else { headers.add(\"Content-Disposition\", ((com.sun.jersey.core.header.ContentDisposition.type(\"attachment\").fileName(write.getUri()).build().toString()) + \"; category=metadata\")); } headerList.add(headers); writeHandles.add(write.getMetadata()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4392/buggy-version/src.main.java.com.marklogic.client.impl.JerseyServices.java", "BodyUseAPI": ["com.sun.jersey.core.header.ContentDisposition.type(\"attachment\").fileName(write.getUri()).build()", "com.sun.jersey.core.header.ContentDisposition.type(\"attachment\").fileName(write.getUri()).build().toString()", "com.marklogic.client.document.DocumentWriteOperation.getOperationType()", "com.sun.jersey.core.header.ContentDisposition.type(\"attachment\").fileName(write.getUri())", "javax.ws.rs.core.MultivaluedMap.add(java.lang.String,((com.sun.jersey.core.header.ContentDisposition.type(\"attachment\").fileName(write.getUri()).build().toString()) + \"; category=metadata\"))", "java.util.ArrayList<com.marklogic.client.io.marker.AbstractWriteHandle>.add(write.getMetadata())", "com.marklogic.client.document.DocumentWriteOperation.getUri()", "java.util.ArrayList<com.marklogic.client.io.marker.AbstractWriteHandle>.add(write.getMetadata())", "com.marklogic.client.document.DocumentWriteOperation.getMetadata()", "com.marklogic.client.document.DocumentWriteOperation.getMetadata()"], "Fixed commit": "bf183ca42143bfcc139df8433f574787c0521395", "Url": "https://api.github.com/repos/marklogic/java-client-api", "Date": "2014-07-22T05:49:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((database.getNumRows()) <= 0) android.widget.Toast.makeText(getApplicationContext(), \"You don't have a history yet, Start Guzzling!\", Toast.LENGTH_LONG).show(); else { android.content.Intent myIntent = new android.content.Intent(view.getContext(), com.example.gasguzzler.BrowseHistoryPage.class); startActivityForResult(myIntent, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2288/buggy-version/src.com.example.gasguzzler.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b75056ee88575ad4af6232a52f7c48f93022cb45", "Url": "https://api.github.com/repos/hakims/Gas-Guzzler-Application", "Date": "2014-06-28T03:26:08Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getTypes()) != null) { for (java.lang.String s : c.getTypes().keySet()) { if (c.getTypes().get(s).equals(AttributeType.TEXTUAL)) { model.addRow(new java.lang.String[]{ s, \"\", \"\" }); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6879/buggy-version/src.view.mapping.TextualMappingPanel.java", "BodyUseAPI": ["c.getTypes().keySet()", "view.data.config.Configuration.getTypes()", "c.getTypes().get(java.lang.String)", "c.getTypes().get(s).equals(AttributeType.TEXTUAL)", "view.data.config.Configuration.getTypes()"], "Fixed commit": "7748122b9752acbe9c990dc369363f9a4f9264ed", "Url": "https://api.github.com/repos/TRvanRossum/ARXInterface", "Date": "2016-08-10T15:19:37Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cards.size()) > 0) { noCardsTv.setVisibility(View.GONE); cardsRv.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3033/buggy-version/app.src.main.java.com.ikechukwuakalu.krypto.cards.CardsFragment.java", "BodyUseAPI": [], "Fixed commit": "d4f7a1e3a50c4adc44f1b86e276e76320b54b739", "Url": "https://api.github.com/repos/IkechukwuAKalu/krypto", "Date": "2017-10-30T17:11:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.esri.dbf.DBFReader.getNumberOfFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n > 0) { m_dbfReader.nextDataType(); for (int i = 0; i < n; i++) { attributes.put(m_keys.get(i), m_dbfReader.readFieldWritable(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1666/buggy-version/src.main.java.com.esri.mapreduce.AbstractFeatureReader.java", "BodyUseAPI": [], "Fixed commit": "888dec93de2c4375a85ea2073f6ddf56be610666", "Url": "https://api.github.com/repos/sumarlidason/Shapefile", "Date": "2015-08-19T20:54:03Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.esri.dbf.DBFReader.getNumberOfFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (len > 0) { m_dbfReader.nextDataType(); for (int i = 0; i < len; i++) { attributes.put(m_keys.get(i), m_dbfReader.readFieldWritable(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1666/buggy-version/src.main.java.com.esri.mapred.AbstractFeatureReader.java", "BodyUseAPI": [], "Fixed commit": "888dec93de2c4375a85ea2073f6ddf56be610666", "Url": "https://api.github.com/repos/sumarlidason/Shapefile", "Date": "2015-08-19T20:54:03Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((kv.length) > 1) { v = kv[1]; v = v.trim().substring(1, ((v.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5825/buggy-version/src.main.java.com.osmrecommend.util.HstoreHelper.java", "BodyUseAPI": [], "Fixed commit": "cd470cbf27135026e4bed37f0981f0076a7de0e2", "Url": "https://api.github.com/repos/vr3690/osmrecommend", "Date": "2014-04-13T03:19:34Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.returnValue) == null) || (this.returnValue.isEmpty())) { return returnListing; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4938/buggy-version/fluid-ws-java-client.src.main.java.com.fluid.ws.client.v1.websocket.GenericListMessageHandler.java", "BodyUseAPI": [], "Fixed commit": "095e1a8a5c100f50806cc826329a2dfe5f4cc17f", "Url": "https://api.github.com/repos/Koekiebox-PTY-LTD/Fluid", "Date": "2016-08-24T08:34:13Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aEntry.getValue().isMarked()) { mark += ((aEntry.getValue().getMark()) * (aEntry.getValue().getWorth())) / 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8403/buggy-version/app.src.main.java.me.evanklein.finalexamcalculator.Course.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.Integer, me.evanklein.finalexamcalculator.Assessment>.getValue()", "aEntry.getValue().getMark()", "java.util.Map.Entry<java.lang.Integer, me.evanklein.finalexamcalculator.Assessment>.getValue()", "aEntry.getValue().getWorth()"], "Fixed commit": "ecac45bc1e74f2f3c283ec4e693521751170f80d", "Url": "https://api.github.com/repos/evanklein1/Grade-Calculator", "Date": "2015-11-06T05:49:43Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLocationListener) != null) mLocationListener.onLocationChanged(location);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6672/buggy-version/utilities.src.main.java.in.teramatrix.utilities.service.LocationHandler.java", "BodyUseAPI": [], "Fixed commit": "91a729be8263998d10e0bc6c76eb8cf45acfb9bd", "Url": "https://api.github.com/repos/abhishek-tm/general-utilities-android", "Date": "2017-06-12T09:50:13Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang3.SystemUtils.IS_OS_LINUX) { scn = new java.util.Scanner(new java.io.File(\"/home/nick/Projects/fagi-gis.ini\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8441/buggy-version/fagi-gis.src.main.java.gr.athenainnovation.imis.fusion.gis.virtuoso.VirtuosoImporter.java", "BodyUseAPI": [], "Fixed commit": "74452da5c21639b6785a3aa6996d81138fa5d617", "Url": "https://api.github.com/repos/GeoKnow/FAGI-gis", "Date": "2015-03-24T11:37:44Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.commons.lang3.SystemUtils.IS_OS_MAC_OSX) { scn = new java.util.Scanner(new java.io.File(\"/home/nick/Projects/fagi-gis.ini\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8441/buggy-version/fagi-gis.src.main.java.gr.athenainnovation.imis.fusion.gis.virtuoso.VirtuosoImporter.java", "BodyUseAPI": [], "Fixed commit": "74452da5c21639b6785a3aa6996d81138fa5d617", "Url": "https://api.github.com/repos/GeoKnow/FAGI-gis", "Date": "2015-03-24T11:37:44Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((patient) != null) { org.openmrs.PatientIdentifier patientId = patient.getPatientIdentifier(MotechConstants.PATIENT_IDENTIFIER_MOTECH_ID); if (patientId != null) { return patientId.getIdentifier(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3083/buggy-version/motech-server-omod.src.main.java.org.motechproject.server.omod.MotechPatient.java", "BodyUseAPI": [], "Fixed commit": "b5f871dec64cdb6d15a53eeffb946ca86bd5a76a", "Url": "https://api.github.com/repos/motech/MOTECH-Ghana", "Date": "2011-03-08T12:10:27Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hostAddressX.length) > 0) hostAddress = hostAddressX[((hostAddressX.length) - 1)]; else hostAddress = publishAddressHostX;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1612/buggy-version/src.main.java.org.elasticsearch.transport.couchbase.capi.CouchbaseCAPITransportImpl.java", "BodyUseAPI": [], "Fixed commit": "5a31134a7ae059b3efe44f7af08fefddb0f607db", "Url": "https://api.github.com/repos/couchbaselabs/elasticsearch-transport-couchbase", "Date": "2015-12-30T14:20:47Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!keepWarning) { setMessage(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8035/buggy-version/plugins.de.ovgu.featureide.examples.src.de.ovgu.featureide.examples.wizards.ExampleNewWizardPage.java", "BodyUseAPI": [], "Fixed commit": "5c7abf272a4bbc5d628728eeca245a568af3eb92", "Url": "https://api.github.com/repos/tthuem/FeatureIDE", "Date": "2014-09-17T13:25:32Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((endTime == 0) && (startTime == 0)) { return true; }else { return (util.TimeUtil.compareMinTime(startTime, endTime)) < 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5438/buggy-version/src.logic.command.CmdAdd.java", "BodyUseAPI": ["util.TimeUtil.compareMinTime(long,long)"], "Fixed commit": "e532b45b768a47bbca9340d75da3171d89f53f12", "Url": "https://api.github.com/repos/cs2103aug2015-w14-3j/main", "Date": "2015-11-03T07:12:34Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.DefaultJSONParser.getLexer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lexer.token()) == (com.alibaba.fastjson.parser.JSONToken.NULL)) { lexer.nextToken(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5299/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.DefaultObjectDeserializer.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.JSONLexer.nextToken()"], "Fixed commit": "77328c0d1d13e0f63009f2ee6210cebfb90695bf", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2011-12-13T14:10:19Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.dirty) { if ((LD29.gridsRendered) < 5) { this.renderToList(this.renderList); (LD29.gridsRendered)++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9259/buggy-version/src.net.fybertech.ld29.GridChunk.java", "BodyUseAPI": [], "Fixed commit": "7084c9052b0626baf91f1de18494d918e2c3e14d", "Url": "https://api.github.com/repos/FyberOptic/ludumdare29", "Date": "2014-05-04T01:15:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) { if (player.isSneaking()) { com.mrcrayfish.furniture.blocks.tv.Channel.stopSound(pos); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8286/buggy-version/src.main.java.com.mrcrayfish.furniture.blocks.BlockTV.java", "BodyUseAPI": [], "Fixed commit": "fa7e5cdf04e088072d5bee1fa2d707ecef1d9d9f", "Url": "https://api.github.com/repos/MrCrayfish/MrCrayfishFurnitureMod", "Date": "2015-09-22T05:55:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) { com.mrcrayfish.furniture.blocks.tv.Channels.getChannel(nextChannel).play(pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8286/buggy-version/src.main.java.com.mrcrayfish.furniture.blocks.BlockTV.java", "BodyUseAPI": [], "Fixed commit": "fa7e5cdf04e088072d5bee1fa2d707ecef1d9d9f", "Url": "https://api.github.com/repos/MrCrayfish/MrCrayfishFurnitureMod", "Date": "2015-09-22T05:55:43Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6919/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "08affa25f9b09a980196fb4873cfd44e62af4aec", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-25T19:34:17Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<com.android.kino.logic.MediaProperties>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next == (mCurrentMedia)) { return setNextMedia(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5834/buggy-version/src.com.android.kino.logic.KinoMediaPlayer.java", "BodyUseAPI": [], "Fixed commit": "c11ebfd2ea0ed8d7d0fa33947b4b3ca1d8be4e7a", "Url": "https://api.github.com/repos/OpherV/kinoplayer", "Date": "2010-08-28T19:48:15Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (next == (mCurrentMedia)) { return previous(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5834/buggy-version/src.com.android.kino.logic.KinoMediaPlayer.java", "BodyUseAPI": [], "Fixed commit": "c11ebfd2ea0ed8d7d0fa33947b4b3ca1d8be4e7a", "Url": "https://api.github.com/repos/OpherV/kinoplayer", "Date": "2010-08-28T19:48:15Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.tx.OTransactionOptimistic.getInvolvedIndexes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (involvedIndexes != null) { for (java.lang.String indexName : involvedIndexes) { final com.orientechnologies.orient.core.index.OIndex<?> index = database.getMetadata().getIndexManager().getIndexInternal(indexName); indexes.put(indexName, index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7892/buggy-version/core.src.main.java.com.orientechnologies.orient.core.tx.OTransactionOptimistic.java", "BodyUseAPI": [], "Fixed commit": "c245dbc42bf6fb869979ad83de6089439abde37f", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-09-20T05:44:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schedule.EventsManager.events.size()) == 0) new java.lang.Thread(new schedule.RefreshScheduleEventsData(context)).start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8176/buggy-version/src.schedule.EventsManager.java", "BodyUseAPI": [], "Fixed commit": "0a310d08c80bef9b4c716721ff1d8f09666f29f3", "Url": "https://api.github.com/repos/javils/iEtueri", "Date": "2014-05-14T16:14:04Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(\"end_date_excel\").toString()", "request.getSession().getAttribute(\"start_date_excel\").toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((start_date.equals(\"\")) || (end_date.equals(\"\"))) { hlist = smdao.sortHotelbyPopular(); }else { hlist = smdao.sortHotelbyPopularWithTimeFrame(start_date, end_date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6930/buggy-version/src.main.java.com.nclodger.control.action.sm.SmSaveExcelAction.java", "BodyUseAPI": ["com.nclodger.dao.SMDAO.sortHotelbyPopularWithTimeFrame(java.lang.String,java.lang.String)"], "Fixed commit": "e7683a55e5c5afdf9d3001ae35b8ea34e0d22119", "Url": "https://api.github.com/repos/reshet/NCLodger", "Date": "2013-12-11T23:41:14Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(\"start_date_excel\").toString()", "request.getSession().getAttribute(\"end_date_excel\").toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((start_date.equals(\"\")) || (end_date.equals(\"\"))) { alist = smdao.sortAccommodationbyValuable(); }else { alist = smdao.sortAccommodationbyValuableWithTimeFrame(start_date, end_date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6930/buggy-version/src.main.java.com.nclodger.control.action.sm.SmSaveAccExcelAction.java", "BodyUseAPI": ["com.nclodger.dao.SMDAO.sortAccommodationbyValuableWithTimeFrame(java.lang.String,java.lang.String)"], "Fixed commit": "e7683a55e5c5afdf9d3001ae35b8ea34e0d22119", "Url": "https://api.github.com/repos/reshet/NCLodger", "Date": "2013-12-11T23:41:14Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prevent) flags_ |= eu.webtoolkit.jwt.AbstractEventSignal.BIT_PREVENT_DEFAULT; else flags_ &= eu.webtoolkit.jwt.AbstractEventSignal.BIT_PREVENT_DEFAULT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8689/buggy-version/src.eu.webtoolkit.jwt.AbstractEventSignal.java", "BodyUseAPI": [], "Fixed commit": "0bbae090ffd0a9dd034ee169f1c7e47a551f1e48", "Url": "https://api.github.com/repos/kdeforche/jwt", "Date": "2012-10-24T07:26:22Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data_) != null) response.getOutputStream().write(data_);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8689/buggy-version/src.eu.webtoolkit.jwt.WMemoryResource.java", "BodyUseAPI": [], "Fixed commit": "0bbae090ffd0a9dd034ee169f1c7e47a551f1e48", "Url": "https://api.github.com/repos/kdeforche/jwt", "Date": "2012-10-24T07:26:22Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ujorm.Ujo.class.isAssignableFrom(pojoClass)) { return ((java.lang.Class<T>) (pojoClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7221/buggy-version/project-m2.ujo-core.src.main.java.org.ujorm.core.DefaultUjoConverter.java", "BodyUseAPI": [], "Fixed commit": "827b0ab0e1486df9bf2f0fd3ac3212c7a6f6aea1", "Url": "https://api.github.com/repos/pponec/ujorm", "Date": "2016-02-18T21:07:09Z"},
{"Line": "=>2505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) socket.sendCommand(command);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7960/buggy-version/src.com.connectsdk.service.WebOSTVService.java", "BodyUseAPI": [], "Fixed commit": "0599de0f9a00ebe4b9132bd17a7fcbfc47a77951", "Url": "https://api.github.com/repos/OnAirPlayer/Connect-SDK-Android", "Date": "2014-06-20T21:02:18Z"},
{"Line": "=>2511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) socket.unsubscribe(subscription);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7960/buggy-version/src.com.connectsdk.service.WebOSTVService.java", "BodyUseAPI": [], "Fixed commit": "0599de0f9a00ebe4b9132bd17a7fcbfc47a77951", "Url": "https://api.github.com/repos/OnAirPlayer/Connect-SDK-Android", "Date": "2014-06-20T21:02:18Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWebAppSessionListener()) != null) getWebAppSessionListener().onReceiveMessage(this, message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7960/buggy-version/src.com.connectsdk.service.sessions.WebOSWebAppSession.java", "BodyUseAPI": [], "Fixed commit": "0599de0f9a00ebe4b9132bd17a7fcbfc47a77951", "Url": "https://api.github.com/repos/OnAirPlayer/Connect-SDK-Android", "Date": "2014-06-20T21:02:18Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getAttributeNames().contains(attributeName))) { getAttributeNames().add(attributeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/660/buggy-version/nojpa_orm.src.main.java.dk.lessismore.nojpa.db.statements.mysql.MySqlSelectStatement.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "865a13ce046cfda5c45fa7578ddd26334f9e2851", "Url": "https://api.github.com/repos/NoJPA-LESS-IS-MORE/NoJPA", "Date": "2017-08-16T08:32:41Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.telenor.connect.ConnectSdk.isCellularDataNetworkConnected())) { parameters.add(\"prompt\", \"no_seam\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6693/buggy-version/connect.src.com.telenor.connect.AbstractSdkProfile.java", "BodyUseAPI": [], "Fixed commit": "a4d8e71750b654c0d3c27d05da77409344501691", "Url": "https://api.github.com/repos/telenordigital/connect-android-sdk", "Date": "2017-07-10T13:18:43Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(getAmount(node))) { return presentationFormat(org.symphonyoss.integration.webhook.salesforce.parser.BaseSalesforceParser.FORMATTED, new org.symphonyoss.integration.parser.SafeString(\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7827/buggy-version/src.main.java.org.symphonyoss.integration.webhook.salesforce.parser.BaseSalesforceParser.java", "BodyUseAPI": [], "Fixed commit": "fa2e90b622f7232247f40ebaf0be60ec0a795364", "Url": "https://api.github.com/repos/robson-sanchez/App-Integrations-Salesforce", "Date": "2017-03-29T16:54:23Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((observableMatcher.getMatcher()) != null) { tableViewerUtil.prepareTableViewerForMatcherConfiguration(observableMatcher, detailsTableViewer); java.lang.String patternFqn = org.eclipse.viatra2.patternlanguage.core.helper.CorePatternLanguageHelper.getFullyQualifiedName(observableMatcher.getMatcher().getPattern()); java.util.List<org.eclipse.viatra2.emf.incquery.queryexplorer.content.patternsviewer.PatternComponent> components = patternsViewerInput.find(patternFqn); if (components != null) { patternsTreeViewer.setSelection(new org.eclipse.jface.viewers.TreeSelection(new org.eclipse.jface.viewers.TreePath(components.toArray()))); } }else { clearTableViewer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3472/buggy-version/plugins.org.eclipse.viatra2.emf.incquery.tooling.gui.src.org.eclipse.viatra2.emf.incquery.queryexplorer.QueryExplorer.java", "BodyUseAPI": ["org.eclipse.viatra2.patternlanguage.core.helper.CorePatternLanguageHelper.getFullyQualifiedName(observableMatcher.getMatcher().getPattern())", "org.eclipse.viatra2.emf.incquery.queryexplorer.content.matcher.ObservablePatternMatcher.getMatcher()", "observableMatcher.getMatcher().getPattern()", "org.eclipse.viatra2.emf.incquery.queryexplorer.content.detail.TableViewerUtil.prepareTableViewerForMatcherConfiguration(org.eclipse.viatra2.emf.incquery.queryexplorer.content.matcher.ObservablePatternMatcher,org.eclipse.jface.viewers.TableViewer)"], "Fixed commit": "d5156dda4677c2baa8037e73f309fee3eac08bae", "Url": "https://api.github.com/repos/ujhelyiz/EMF-IncQuery", "Date": "2012-06-28T15:13:01Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((startIdx != endIdx) && (startIdx != 0)) && (endIdx != (-1))) { substring = pricePointIdString.substring(startIdx, endIdx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5005/buggy-version/ER_api.src.main.java.com.vodafone.global.er.util.CatalogUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "edd70f26fecd434d6da4d7fba58cd877a7ec1b78", "Url": "https://api.github.com/repos/raghera/er-common", "Date": "2016-12-05T11:53:26Z"},
{"Line": "=>891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.imag.adele.apam.impl.ComponentImpl.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((value == null) && ((getDeclaration()) != null)) value = getDeclaration().getProperty(attribute);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2664/buggy-version/runtime.core.src.main.java.fr.imag.adele.apam.impl.ComponentImpl.java", "BodyUseAPI": [], "Fixed commit": "2eccf8f78a5362f122d53b2586845ceaaf460b57", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2013-09-20T07:45:01Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.cask.cdap.client.AuthorizationClient.doExecuteRequest(co.cask.common.http.HttpRequest,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.net.HttpURLConnection.HTTP_NOT_FOUND) == (httpResponse.getResponseCode())) { if (!(listAllRoles().contains(new co.cask.cdap.proto.security.Role(principal.getName())))) { throw new co.cask.cdap.common.NotFoundException((\"Role: \" + (principal.getName()))); } throw new co.cask.cdap.common.NotFoundException(entityId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6807/buggy-version/cdap-client.src.main.java.co.cask.cdap.client.AuthorizationClient.java", "BodyUseAPI": [], "Fixed commit": "7803981f61c15722437b0025d7a34c51044bd073", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2016-06-20T18:32:15Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trip.pois.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5366/buggy-version/android.src.com.example.waypal.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "730316a686e21ce51edb18550c008ed909d21f45", "Url": "https://api.github.com/repos/kevinychen/waypal", "Date": "2014-10-05T09:29:14Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.silverpeas.form.fieldType.UserField.getUserId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (s == null) { s = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7397/buggy-version/lib-core.src.main.java.com.silverpeas.form.fieldType.UserField.java", "BodyUseAPI": [], "Fixed commit": "a773e9d798720c59758d91a0d77dcaa7b3e04676", "Url": "https://api.github.com/repos/NicolasEYSSERIC/Silverpeas-Core", "Date": "2013-01-31T14:44:34Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getUserId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (t == null) { t = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7397/buggy-version/lib-core.src.main.java.com.silverpeas.form.fieldType.UserField.java", "BodyUseAPI": [], "Fixed commit": "a773e9d798720c59758d91a0d77dcaa7b3e04676", "Url": "https://api.github.com/repos/NicolasEYSSERIC/Silverpeas-Core", "Date": "2013-01-31T14:44:34Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (templateOption == \"warp_non_existant\") { workingstring = Config.templates.getString(\"warp_non_existant\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7474/buggy-version/src.markehme.factionsplus.FactionsPlusTemplates.java", "BodyUseAPI": [], "Fixed commit": "c6fa8e247367985960bc7ec8c853b36af8345bb6", "Url": "https://api.github.com/repos/MarkehMe/FactionsPlus", "Date": "2013-05-15T06:26:03Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p_existingConnection == null) { (m_openConnections)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6787/buggy-version/nio.NIOConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "7b7d30cd48acaacfedf9fb79df9e1b9312e281e0", "Url": "https://api.github.com/repos/hhu-bsinfo/dxnet-src", "Date": "2017-12-19T10:40:02Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p_existingConnection == null) { (m_openConnections)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6787/buggy-version/nio.NIOConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "7b7d30cd48acaacfedf9fb79df9e1b9312e281e0", "Url": "https://api.github.com/repos/hhu-bsinfo/dxnet-src", "Date": "2017-12-19T10:40:02Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.lasthopesoftware.sql.SqlMapper.isSqlValueNull(parameterThree))) parameterOne.set(parameterTwo, java.lang.Enum.valueOf(((java.lang.Class<? extends java.lang.Enum>) (parameterOne.getType())), parameterThree));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/15/buggy-version/projectBlueWater.src.main.java.com.lasthopesoftware.sql.SqlMapper.java", "BodyUseAPI": ["java.lang.Enum.valueOf(java.lang.Class<?>,java.lang.String)", "java.lang.reflect.Field.set(java.lang.Object,? extends java.lang.Enum)"], "Fixed commit": "207354258b274d22d32aefd11a856a4e6063fcc8", "Url": "https://api.github.com/repos/namehillsoftware/projectBlue", "Date": "2015-12-20T02:07:16Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.lasthopesoftware.sql.SqlMapper.isSqlValueNull(parameterThree))) parameterOne.invoke(parameterTwo, java.lang.Enum.valueOf(((java.lang.Class<? extends java.lang.Enum>) (parameterOne.getParameterTypes()[0])), parameterThree));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/15/buggy-version/projectBlueWater.src.main.java.com.lasthopesoftware.sql.SqlMapper.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.Object,? extends java.lang.Enum)", "java.lang.Enum.valueOf(java.lang.Class<?>,java.lang.String)"], "Fixed commit": "207354258b274d22d32aefd11a856a4e6063fcc8", "Url": "https://api.github.com/repos/namehillsoftware/projectBlue", "Date": "2015-12-20T02:07:16Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position < (IBPLConstants.MAX_FRAMES_IN_SET)) { android.util.Log.v(com.vaugan.bpl.model.SetLogic.TAG, (\"Set Logic getView: setScoreIntegerArray=\" + (setScoreIntegerArray))); android.util.Log.v(com.vaugan.bpl.model.SetLogic.TAG, (\"Set Logic getView: position=\" + position)); android.util.Log.v(com.vaugan.bpl.model.SetLogic.TAG, (((\"Set Logic getView: setScoreIntegerArray[\" + position) + \"]=\") + (setScoreIntegerArray[position]))); imageView.setImageResource(com.vaugan.bpl.model.FrameCodeAPI.mFrameResultImages[setScoreIntegerArray[position]]); }else { android.util.Log.v(com.vaugan.bpl.model.SetLogic.TAG, (\"WARNING! position>MAX_FRAMES_IN_SET. Set Logic getView: position=\" + position)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/87/buggy-version/src.com.vaugan.bpl.model.SetLogic.java", "BodyUseAPI": ["android.util.Log.v(java.lang.String,java.lang.String)", "android.util.Log.v(java.lang.String,java.lang.String)", "android.util.Log.v(java.lang.String,java.lang.String)", "android.widget.ImageView.setImageResource(com.vaugan.bpl.model.FrameCodeAPI.mFrameResultImages[setScoreIntegerArray[position]])"], "Fixed commit": "acf2cd18797b96f18a84d45b5d742ff7885200e3", "Url": "https://api.github.com/repos/vaugan/BPLScoreboard", "Date": "2014-09-08T14:36:14Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project.getComposer().getGenerationMechanism()) == (de.ovgu.featureide.core.builder.IComposerExtensionClass.Mechanism.PREPROCESSOR)) { for (de.ovgu.featureide.core.fstmodel.FSTClass fstClass : fstModel.getClasses()) { for (de.ovgu.featureide.core.fstmodel.FSTRole role : fstClass.getRoles()) { if (((role.getFile()) != null) && (role.getFile().equals(file))) { for (de.ovgu.featureide.core.fstmodel.preprocessor.FSTDirective directive : role.getDirectives()) { if (directive.getCommand().isOneLineStatement()) { loc += 1; }else { loc += 2; } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7108/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.statistics.core.composite.lazyimplementations.StatisticsProgramSizeNew.java", "BodyUseAPI": [], "Fixed commit": "c1e10c02a872931f19a021f26caf7fc9a591836d", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-10-14T12:24:32Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paddingValue < ((byte) (16))) { byte compare = padded[((padded.length) - paddingValue)]; if (compare == paddingValue) { result = new byte[(padded.length) - paddingValue]; java.lang.System.arraycopy(padded, 0, result, 0, result.length); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2457/buggy-version/native.SalesforceSDK.src.com.salesforce.androidsdk.security.Encryptor.java", "BodyUseAPI": [], "Fixed commit": "195766a08494dec464d82813980d1f03aac2f504", "Url": "https://api.github.com/repos/khawkins/SalesforceMobileSDK-Android", "Date": "2012-08-16T18:34:17Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.length()) < 1) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6896/buggy-version/app.src.main.java.com.jungbluth.johannes.petroltracker.persistence.file.CSVFileReader.java", "BodyUseAPI": [], "Fixed commit": "20b2fb558cec3ad0081189aac77ddf236d0797a3", "Url": "https://api.github.com/repos/JohannesJungbluth/PetrolTracker", "Date": "2017-07-30T14:03:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inputComponent.getAttributes().getOrDefault(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (disabled) { writeAttribute(\"disabled\", \"true\", context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9235/buggy-version/src.main.java.com.outjected.jsf.renderers.Select2AutoCompleteRenderer.java", "BodyUseAPI": [], "Fixed commit": "509743f7627f29e1d2f93f31ac0839bf265dc7b1", "Url": "https://api.github.com/repos/codylerum/jsf-components", "Date": "2017-03-20T20:10:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) listener.notify(population);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5417/buggy-version/src.main.java.com.msu.moo.algorithms.nsgaII.NSGAII.java", "BodyUseAPI": [], "Fixed commit": "a4782cbcbe33e326119e563b6dbf7d953fcb52a7", "Url": "https://api.github.com/repos/julesy89/moo-java", "Date": "2016-01-27T17:52:27Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(sb.toString())) { strSyncKey = sb.toString().substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2545/buggy-version/src.main.java.xyz.fz.wxrobot.WxFun.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.String.substring(int)"], "Fixed commit": "1c161abfd869ee703163d7555789191844efcf0b", "Url": "https://api.github.com/repos/github20120522/wxRobot", "Date": "2016-06-12T13:56:39Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sunriseTime) != null) { currentSunriseLabel.setText(((\"Sunrise: \" + (convertUnix(sunriseTime))) + \" AM\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/956/buggy-version/src.tk.atherismotorsports.weather.Weather.java", "BodyUseAPI": [], "Fixed commit": "6a33f9a410db44e190244215fcf9517bafa5f38c", "Url": "https://api.github.com/repos/camm73/Atheris-UI", "Date": "2016-05-26T04:17:52Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sunsetTime) != null) { currentSunsetLabel.setText(((\"Sunset: \" + (convertUnix(sunsetTime))) + \" PM\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/956/buggy-version/src.tk.atherismotorsports.weather.Weather.java", "BodyUseAPI": [], "Fixed commit": "6a33f9a410db44e190244215fcf9517bafa5f38c", "Url": "https://api.github.com/repos/camm73/Atheris-UI", "Date": "2016-05-26T04:17:52Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["obj.getFamily().getCounter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8943/buggy-version/scouter.common.src.scouter.lang.counters.CounterEngine.java", "BodyUseAPI": [], "Fixed commit": "6e73a7a1d75c6be29a75e8cd911c5508ca6e09f1", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2015-09-25T06:12:07Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"bunny\".equals(cwlRunner))) { io.github.collaboratory.SecondaryFilesUtility secondaryFilesUtility = new io.github.collaboratory.SecondaryFilesUtility(cwlUtil, this.gson); secondaryFilesUtility.modifyWorkflowToIncludeToolSecondaryFiles(workflow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8716/buggy-version/dockstore-launcher.src.main.java.io.github.collaboratory.LauncherCWL.java", "BodyUseAPI": [], "Fixed commit": "e04225d1f742c76e1208628e2ca565415b39525f", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2017-08-18T18:09:11Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(path.isAbsolute())) { java.nio.file.Path currentRelativePath = java.nio.file.Paths.get(\"\"); cwlOutputPath = (currentRelativePath.toAbsolutePath().toString()) + cwlOutputPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8716/buggy-version/dockstore-launcher.src.main.java.io.github.collaboratory.LauncherCWL.java", "BodyUseAPI": [], "Fixed commit": "e04225d1f742c76e1208628e2ca565415b39525f", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2017-08-18T18:09:11Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.hawkengine.agent.models.Task.getTaskDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(taskDefinition.getSource().isEmpty())) { pathToFile = (pathToFile + (java.io.File.separator)) + (taskDefinition.getSource()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7420/buggy-version/Agent.src.main.java.net.hawkengine.agent.components.taskexecutor.executors.UploadArtifactExecutor.java", "BodyUseAPI": ["net.hawkengine.agent.models.UploadArtifactTask.getSource()"], "Fixed commit": "8597e3be225a45360dc402a476903c408a53281a", "Url": "https://api.github.com/repos/rndsolutions/hawkcd", "Date": "2016-10-05T10:02:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(props.hasKey(com.upinion.VectorDrawableAndroid.ReactVectorDrawableAndroidManager.PROP_RES))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7614/buggy-version/src.main.java.com.VectorDrawableAndroid.ReactVectorDrawableAndroidManager.java", "BodyUseAPI": [], "Fixed commit": "f7201f5fcd72125d47f1a6ba01ab70a98a8a813d", "Url": "https://api.github.com/repos/Upinion/react-native-vectordrawable-android", "Date": "2015-11-20T14:06:50Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(containedInLocations.contains(tId))) { containedInLocations.add(tId); getContainedInLocations(tId, containedInLocations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8423/buggy-version/src.main.java.edu.washington.multir.data.RelatedLocationMap.java", "BodyUseAPI": ["edu.washington.multir.data.RelatedLocationMap.getContainedInLocations(java.lang.String,java.util.Set<java.lang.String>)", "java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a3c3fbbfee22d0791a0495f27631ccc5ed669cd8", "Url": "https://api.github.com/repos/jgilme1/MultirExperiments", "Date": "2014-05-07T23:00:11Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(containsLocations.contains(tId))) { containsLocations.add(tId); getContainsLocations(tId, containsLocations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8423/buggy-version/src.main.java.edu.washington.multir.data.RelatedLocationMap.java", "BodyUseAPI": ["edu.washington.multir.data.RelatedLocationMap.getContainsLocations(java.lang.String,java.util.Set<java.lang.String>)", "java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a3c3fbbfee22d0791a0495f27631ccc5ed669cd8", "Url": "https://api.github.com/repos/jgilme1/MultirExperiments", "Date": "2014-05-07T23:00:11Z"},
{"Line": "=>1439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (haveFilters) unlockFilters(ses);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7876/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.util.nio.GridNioServer.java", "BodyUseAPI": [], "Fixed commit": "15f7f938215e4067b06b7b41da6b3085a11faf34", "Url": "https://api.github.com/repos/NSAmelchev/ignite", "Date": "2017-12-08T10:58:02Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.myapp.handbook.domain.RoleProfile.getFirstName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (studentFullName.contains(\" undefined\")) { studentFullName = studentFullName.replace(\" undefined\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4919/buggy-version/mobile.Android.app.src.main.java.com.myapp.handbook.adapter.MultiSelectionAdapter.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "b9ebf13b3291e238ffccf0cd84b0d93f112a091c", "Url": "https://api.github.com/repos/ashutoshpurohit/SCHPARERP", "Date": "2017-07-05T12:44:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends ninja.egg82.plugin.commands.PluginCommand>.getSimpleName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((name.length()) < 7) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4990/buggy-version/src.ninja.egg82.plugin.utils.SpigotReflectUtil.java", "BodyUseAPI": [], "Fixed commit": "bdaf162414f498cdd777854158f18a09c9879362", "Url": "https://api.github.com/repos/egg82/PluginLibrary", "Date": "2017-04-09T23:53:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends ninja.egg82.plugin.commands.EventCommand>.getSimpleName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((name.length()) < 7) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4990/buggy-version/src.ninja.egg82.plugin.utils.SpigotReflectUtil.java", "BodyUseAPI": [], "Fixed commit": "bdaf162414f498cdd777854158f18a09c9879362", "Url": "https://api.github.com/repos/egg82/PluginLibrary", "Date": "2017-04-09T23:53:50Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (displayList.contains(event)) { id = (displayList.indexOf(event)) + 1; }else { displayList.addWithoutSorting(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4249/buggy-version/src.main.java.cs2103.v15_1j.jimjim.ui.TaskEventRowFactory.java", "BodyUseAPI": ["cs2103.v15_1j.jimjim.model.DataLists.addWithoutSorting(cs2103.v15_1j.jimjim.model.Event)", "cs2103.v15_1j.jimjim.model.DataLists.indexOf(cs2103.v15_1j.jimjim.model.Event)"], "Fixed commit": "9160f0abeeb6ae88a205818cd475c0d35485d9b1", "Url": "https://api.github.com/repos/cs2103jan2016-v15-1j/main", "Date": "2016-04-04T05:16:24Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (displayList.contains(t)) { id = (displayList.indexOf(t)) + 1; }else { displayList.addWithoutSorting(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4249/buggy-version/src.main.java.cs2103.v15_1j.jimjim.ui.TaskEventRowFactory.java", "BodyUseAPI": ["cs2103.v15_1j.jimjim.model.DataLists.indexOf(cs2103.v15_1j.jimjim.model.FloatingTask)", "cs2103.v15_1j.jimjim.model.DataLists.addWithoutSorting(cs2103.v15_1j.jimjim.model.FloatingTask)"], "Fixed commit": "9160f0abeeb6ae88a205818cd475c0d35485d9b1", "Url": "https://api.github.com/repos/cs2103jan2016-v15-1j/main", "Date": "2016-04-04T05:16:24Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (displayList.contains(task)) { id = (displayList.indexOf(task)) + 1; }else { displayList.addWithoutSorting(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4249/buggy-version/src.main.java.cs2103.v15_1j.jimjim.ui.TaskEventRowFactory.java", "BodyUseAPI": ["cs2103.v15_1j.jimjim.model.DataLists.indexOf(cs2103.v15_1j.jimjim.model.DeadlineTask)", "cs2103.v15_1j.jimjim.model.DataLists.addWithoutSorting(cs2103.v15_1j.jimjim.model.DeadlineTask)"], "Fixed commit": "9160f0abeeb6ae88a205818cd475c0d35485d9b1", "Url": "https://api.github.com/repos/cs2103jan2016-v15-1j/main", "Date": "2016-04-04T05:16:24Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.htbest2000.v2ex.util.Misc.getTopicCount(this, topic.id)) < 1) { db.insert(Database.TABLE_TOPICS, cv); }else { db.update(Database.TABLE_TOPICS, cv, (((com.htbest2000.v2ex.api.Topics.NAME_TOPTIC_ID) + \"=\") + (topic.id)), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8375/buggy-version/src.com.htbest2000.v2ex.service.SyncService.java", "BodyUseAPI": ["com.htbest2000.v2ex.provider.Database.update(Database.TABLE_TOPICS,android.content.ContentValues,(((com.htbest2000.v2ex.api.Topics.NAME_TOPTIC_ID) + \"=\") + (topic.id)),<nulltype>)"], "Fixed commit": "a7e7dd390eb044a912feef63807ab5573c4830f3", "Url": "https://api.github.com/repos/obiwong/AndroidV2EX", "Date": "2011-06-19T13:52:14Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((affectedHistoricElements.size()) > 0) { basalEvents.add(new de.jhit.opendiabetes.vault.container.VaultEntry(de.jhit.opendiabetes.vault.container.VaultEntryType.BASAL_PROFILE, basalItem.getTimestamp(), affectedHistoricElements.get(0).getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/392/buggy-version/engine.src.de.jhit.opendiabetes.vault.importer.interpreter.PumpInterpreter.java", "BodyUseAPI": ["java.util.List<de.jhit.opendiabetes.vault.container.VaultEntry>.get(int)", "affectedHistoricElements.get(0).getValue()", "java.util.List<de.jhit.opendiabetes.vault.container.VaultEntry>.add(de.jhit.opendiabetes.vault.container.VaultEntry)"], "Fixed commit": "aae770a8abced4c1982dd65acbc0aeba55207500", "Url": "https://api.github.com/repos/juehv/OpenDiabetesVault", "Date": "2017-07-01T22:10:25Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((affectedHistoricElements.size()) > 0) { basalEvents.add(new de.jhit.opendiabetes.vault.container.VaultEntry(de.jhit.opendiabetes.vault.container.VaultEntryType.BASAL_PROFILE, basalItem.getTimestamp(), affectedHistoricElements.get(0).getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/392/buggy-version/engine.src.de.jhit.opendiabetes.vault.importer.interpreter.PumpInterpreter.java", "BodyUseAPI": ["affectedHistoricElements.get(0).getValue()", "java.util.List<de.jhit.opendiabetes.vault.container.VaultEntry>.get(int)", "java.util.List<de.jhit.opendiabetes.vault.container.VaultEntry>.add(de.jhit.opendiabetes.vault.container.VaultEntry)"], "Fixed commit": "aae770a8abced4c1982dd65acbc0aeba55207500", "Url": "https://api.github.com/repos/juehv/OpenDiabetesVault", "Date": "2017-07-01T22:10:25Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.equals(\"/favicon.ico\", uri)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4576/buggy-version/photoweb.src.com.service.filter.AuthFilter.java", "BodyUseAPI": [], "Fixed commit": "6b8aa03bec9182c74593f57911d9c2a6cbff30d9", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-05-19T12:25:11Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endTurnButton) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4496/buggy-version/taxe.core.src.fvs.taxe.controller.SideBarController.java", "BodyUseAPI": [], "Fixed commit": "251c3c802bb4cded217aa72613637881dc6c8afe", "Url": "https://api.github.com/repos/SEPRFVS/FVS4", "Date": "2015-04-14T12:01:44Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aQute.bnd.build.Container.getFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((file != null) && (file.isFile())) runbundles.add(file.getAbsolutePath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5862/buggy-version/biz.aQute.bndlib.src.aQute.bnd.build.ProjectLauncher.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "fc4908da352a5046312ef7f17e25fc175380a47a", "Url": "https://api.github.com/repos/mcculls/bnd", "Date": "2011-07-04T22:38:48Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getContextPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(contextPath.equals(\"/\"))) { url = contextPath + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9032/buggy-version/src.main.java.com.farpost.spring.UrlBuilder.java", "BodyUseAPI": [], "Fixed commit": "60ea6db54b61ba3dc2735776a3021b5659e74be7", "Url": "https://api.github.com/repos/bazhenov/spring-url-builder", "Date": "2011-07-30T08:04:23Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.docx4all.swing.text.DocumentElement) (getElement())).getSelected()) { setBackground(WordMLDocument.SELECTION_COLOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8737/buggy-version/docx4all.src.main.java.org.docx4all.swing.text.LabelView.java", "BodyUseAPI": [], "Fixed commit": "e2e69ce526996d52af494632965e609acc8e37fe", "Url": "https://api.github.com/repos/openflexo-team/openflexo-utils", "Date": "2015-09-24T09:26:27Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (object.has(\"users_pick\")) { if (!(object.isNull(\"users_pick\"))) { this.currentUserPickedWinnerId = object.getInt(\"users_pick\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5797/buggy-version/app.src.main.java.com.tba.theboxingapp.Model.Fight.java", "BodyUseAPI": [], "Fixed commit": "5509394bbdddccd29edb2521bb0d963613bbcfef", "Url": "https://api.github.com/repos/blacksantorum/tba-droid", "Date": "2014-10-05T11:09:56Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(connectedToInternet())) { setErrorView(getString(R.string.INTERNET_CONNECTION_ERROR_MSG)); }else { new se.chalmers.h_sektionen.InfoActivity.GetInfoTask().execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7096/buggy-version/H-sektionen.src.se.chalmers.h_sektionen.InfoActivity.java", "BodyUseAPI": [], "Fixed commit": "53ecfc602a776454ff3737965939cf7b9c499fb6", "Url": "https://api.github.com/repos/jonasberglund/skrubb_DAT255", "Date": "2013-10-11T10:13:43Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (implicitPort != null) { net.sf.saxon.s9api.XdmNode doc = runtime.parse(new org.xml.sax.InputSource(java.lang.System.in)); pipeline.writeTo(implicitPort, doc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2402/buggy-version/src.com.xmlcalabash.drivers.Main.java", "BodyUseAPI": ["com.xmlcalabash.runtime.XPipeline.writeTo(java.lang.String,net.sf.saxon.s9api.XdmNode)"], "Fixed commit": "66c1224db95a82a38299ec39457c5e2734277aff", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2013-01-29T15:01:26Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.jboss.netty.handler.codec.http.MultipartResponseDecoder.State.READ_CHUNKD_CONTENT.equals(this.state)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8980/buggy-version/src.org.jboss.netty.handler.codec.http.MultipartResponseDecoder.java", "BodyUseAPI": [], "Fixed commit": "9410311a7676f2c24b8daf66be02104db3b08d41", "Url": "https://api.github.com/repos/taichi/org.handwerkszeug.riak", "Date": "2011-06-07T19:11:33Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.jboss.netty.handler.codec.http.MultipartResponseDecoder.State.READ_CONTENT.equals(this.state)) { this.readContinue = multipart; }else { this.readContinue = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8980/buggy-version/src.org.jboss.netty.handler.codec.http.MultipartResponseDecoder.java", "BodyUseAPI": [], "Fixed commit": "9410311a7676f2c24b8daf66be02104db3b08d41", "Url": "https://api.github.com/repos/taichi/org.handwerkszeug.riak", "Date": "2011-06-07T19:11:33Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.readContinue) != null) { org.jboss.netty.buffer.ChannelBuffer cb = readContinue.getContent(); newone = org.jboss.netty.buffer.ChannelBuffers.copiedBuffer(cb.array(), newone.array()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8980/buggy-version/src.org.jboss.netty.handler.codec.http.MultipartResponseDecoder.java", "BodyUseAPI": [], "Fixed commit": "9410311a7676f2c24b8daf66be02104db3b08d41", "Url": "https://api.github.com/repos/taichi/org.handwerkszeug.riak", "Date": "2011-06-07T19:11:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(employeeForm.isNewEmployee())) { employeeForm.setUpdatedOn(employeeService.findOne(employeeForm.getEmployeeId()).getUpdatedOn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8515/buggy-version/src.main.java.com.colptha.controllers.AccountController.java", "BodyUseAPI": ["com.colptha.dom.command.EmployeeForm.getEmployeeId()", "com.colptha.services.EmployeeService.findOne(employeeForm.getEmployeeId())", "employeeService.findOne(employeeForm.getEmployeeId()).getUpdatedOn()", "com.colptha.dom.command.EmployeeForm.setUpdatedOn(employeeService.findOne(employeeForm.getEmployeeId()).getUpdatedOn())"], "Fixed commit": "a28fae9c64a30e3a6e9c398f614f01a5970a1438", "Url": "https://api.github.com/repos/Colptha/spring-warehouse-demo", "Date": "2017-05-15T21:14:21Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rexist == false) { roleJDBCTemplate.create(role); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4591/buggy-version/src.main.java.org.teamone.controller.AdminController.java", "BodyUseAPI": [], "Fixed commit": "25acc737d9746f87ae5a2695f23993e9ab5c5a8e", "Url": "https://api.github.com/repos/TOneElite/MavenSKS", "Date": "2014-01-25T11:24:59Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.jena.sparql.algebra.op.OpLeftJoin.getExprs()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exprs == null) { java.util.List<org.apache.jena.sparql.algebra.Op> elts = dest.getElements(); elts.listIterator(0).add(o.getLeft()); elts.listIterator(((elts.size()) - 1)).add(o.getRight()); }else { dest.add(op); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2026/buggy-version/jena-sparql-api-cache.src.main.java.org.aksw.jena_sparql_api.algebra.transform.TransformLeftJoinToSet.java", "BodyUseAPI": [], "Fixed commit": "8f49eaad9861f6217210ff480c0df0449bb0667e", "Url": "https://api.github.com/repos/SmartDataAnalytics/jena-sparql-api", "Date": "2016-09-23T00:41:11Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["core.xmate.demo.db.PersonDb.getInstance().accessSync(core.xmate.db.dao.FindDao)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (persons != null) { str = java.util.Arrays.toString(persons.toArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1966/buggy-version/demo.src.main.java.core.xmate.demo.app.MainActivity.java", "BodyUseAPI": ["java.util.List<core.xmate.demo.db.person.Person>.toArray()", "java.util.Arrays.toString(persons.toArray())"], "Fixed commit": "535aa4d429f3747f549e44461242056f421a122b", "Url": "https://api.github.com/repos/DrkCore/xMate3", "Date": "2017-08-10T08:38:55Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.getQueryManager().executeQuery(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rs.next())) { throw new org.pi.litepost.exceptions.PasswordResetException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8529/buggy-version/src.org.pi.litepost.applicationLogic.UserManager.java", "BodyUseAPI": [], "Fixed commit": "1f3a6f5357ffe3049436186419608e1bbded49d7", "Url": "https://api.github.com/repos/PraktischeInformatik/LitePost", "Date": "2015-03-09T12:08:25Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.pryv.utils.Logger.logger) == null) { java.lang.System.out.println(\"Logger: instanciate!\"); com.pryv.utils.Logger.logger = new com.pryv.utils.Logger(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9066/buggy-version/src.main.java.com.pryv.utils.Logger.java", "BodyUseAPI": [], "Fixed commit": "e3c5d3d48d6aba5641d1df2dfd4f44f2e602764b", "Url": "https://api.github.com/repos/pryv/lib-java", "Date": "2014-08-11T10:48:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((asistencia) != null) { faltasa = faltas(asistencia); faltasmes = faltasUltimoMes(faltasa); faltasMes.setText(java.lang.String.valueOf(faltasmes.size())); diaMayorFaltas.setText(java.lang.String.valueOf(diaMayorFaltas(faltasmes))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3023/buggy-version/app.src.main.java.co.edu.udea.compumovil.gr01_20171.proyectoescuela.Vista.InfoAsistenciaGrupo.java", "BodyUseAPI": [], "Fixed commit": "335a83c5afbb9c29ca9962fc0f91747338c1d19d", "Url": "https://api.github.com/repos/junmper/Administrativo", "Date": "2017-03-19T19:57:23Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.matches.isEmpty()) { return matches; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7999/buggy-version/core.src.main.java.de.dhbw.persistence.HibernateUserRepository.java", "BodyUseAPI": [], "Fixed commit": "6c6c8f2ea58890f62e17611a14ca90b9c2bd159b", "Url": "https://api.github.com/repos/pfehrmann/Fragen-um-die-Wette", "Date": "2017-04-13T10:41:26Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fr_payload.hasNextBit()) { int curr_bit_to_hide = fr_payload.getNextBit(); try { coverim_mod.write(swapLsb(curr_bit_to_hide, curr_byte)); } catch (java.io.IOException e) { return \"Fail: couldn't hide file bit in image byte\"; } }else { try { coverim_mod.write(curr_byte); } catch (java.io.IOException e) { return \"Fail: couldn't write current file byte\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1413/buggy-version/stego.java", "BodyUseAPI": ["java.io.FileReader.getNextBit()"], "Fixed commit": "2b7c9f7208e51e011c7c8b6009fb348900ae7b01", "Url": "https://api.github.com/repos/EuanCockburn/CS", "Date": "2016-02-19T18:51:53Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((method.getReturnType()) == (void.class)) { method.invoke(tile, argsToUse); return true; }else { return openperipheral.TypeUtils.convertToSuitableType(method.invoke(tile, argsToUse)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/158/buggy-version/src.openperipheral.HostedPeripheral.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(net.minecraft.tileentity.TileEntity,java.lang.Object[])", "openperipheral.TypeUtils.convertToSuitableType(java.lang.Object)", "java.lang.reflect.Method.invoke(net.minecraft.tileentity.TileEntity,java.lang.Object[])"], "Fixed commit": "d952b46c9493dca35068b5ee67d1dcba8e230e85", "Url": "https://api.github.com/repos/mikeemoo/OpenPeripheral", "Date": "2013-05-26T17:20:50Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subListLocationPassthrough.size()) == 0) { for (mad.mad_app.LocationGroupListItem location : groups) { subListLocationPassthrough.add(location.data); java.util.List<mad.mad_app.SpeedTest> childList = new java.util.ArrayList<>(); for (mad.mad_app.SpeedTestListItem test : childMap.get(location)) { childList.add(test.data); } subMapTestPassthrough.put(location.data, childList); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8720/buggy-version/app.src.main.java.mad.mad_app.MainActivity.java", "BodyUseAPI": ["java.util.List<mad.mad_app.LocationGroup>.add(location.data)"], "Fixed commit": "93996c435b03d9f09220020f0cf7872e304e9a80", "Url": "https://api.github.com/repos/mad-ltu/MAD", "Date": "2016-10-17T08:43:52Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(str.contains(\".\"))) return str; else if ((str.split(\"\\\\.\")[1].length()) <= 2) decimal = str.split(\"\\\\.\")[1]; else decimal = str.split(\"\\\\.\")[1].substring(0, 2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/117/buggy-version/TripWallet.app.src.main.java.com.example.sebastiao.tripwallet.Utils.Constants.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "6718c6b9c8d4bf17bb4f9830497bafccf38998d7", "Url": "https://api.github.com/repos/sebdsrp/ipm1718", "Date": "2017-11-26T14:59:37Z"},
{"Line": "=>1159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((location != null) && ((location.getWorld()) != null)) { if ((location.getWorld()) != (world)) { spawnAt(location); }else { session.send(new net.glowstone.entity.PositionRotationMessage(location)); setRawLocation(location); } }else { throw new java.lang.NullPointerException(\"Teleport location cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1978/buggy-version/src.main.java.net.glowstone.entity.GlowPlayer.java", "BodyUseAPI": ["net.glowstone.entity.Location.getWorld()", "net.glowstone.entity.GlowPlayer.setRawLocation(net.glowstone.entity.Location)", "net.glowstone.entity.GlowPlayer.spawnAt(net.glowstone.entity.Location)", "net.glowstone.net.GlowSession.send(net.glowstone.entity.PositionRotationMessage)"], "Fixed commit": "8f55fae033b06b651e99a67451e252fef705e177", "Url": "https://api.github.com/repos/m3rcuriel/Glowstone", "Date": "2014-11-10T08:31:32Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!noswt) return org.dyndns.fzoli.ui.systemtray.SystemTrayIcon.init(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/344/buggy-version/src.org.dyndns.fzoli.ui.systemtray.SystemTrayIcon.java", "BodyUseAPI": [], "Fixed commit": "420f0d2c2a82be1d9143b200c3a102a26689ce29", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-01-11T01:58:04Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCenterBitmap) != null) { mCenterBitmap.recycle(); mCenterBitmap = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1516/buggy-version/library.src.main.java.com.czp.library.ArcProgress.java", "BodyUseAPI": [], "Fixed commit": "00b264f58f3768a3905ab3129cfe3cc043d753e5", "Url": "https://api.github.com/repos/ZeeeeeeNo/ArcProgressBar", "Date": "2016-09-10T02:45:31Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getClass().equals(comquintonj.github.atlantastreetartproject.SubmitActivity.class)) { onBackPressed(); }else if ((user.getDisplayName()) == null) { android.widget.Toast.makeText(this, \"Please create an account to use this feature.\", Toast.LENGTH_SHORT).show(); }else { android.content.Intent submitIntent = new android.content.Intent(this, comquintonj.github.atlantastreetartproject.SubmitActivity.class); startActivity(submitIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5235/buggy-version/app.src.main.java.comquintonj.github.atlantastreetartproject.BaseDrawerActivity.java", "BodyUseAPI": [], "Fixed commit": "a9c69694330bbe255f016c624407d11a699a9bfd", "Url": "https://api.github.com/repos/quintonj/AtlantaStreetArtProject", "Date": "2017-02-18T06:16:53Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_viewportSpec.getColumns().contains(0)) { rowResults.add(com.opengamma.web.server.push.analytics.ViewportResults.stringCell(rowName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9134/buggy-version/projects.OG-Web.src.com.opengamma.web.server.push.analytics.MainGridViewport.java", "BodyUseAPI": [], "Fixed commit": "564095e508e6675c3a2e219623188a25655807dd", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2012-07-18T14:37:17Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_viewportSpec.getColumns().contains(1)) { rowResults.add(com.opengamma.web.server.push.analytics.ViewportResults.valueCell(row.getQuantity(), null, java.util.Collections.emptyList())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9134/buggy-version/projects.OG-Web.src.com.opengamma.web.server.push.analytics.MainGridViewport.java", "BodyUseAPI": [], "Fixed commit": "564095e508e6675c3a2e219623188a25655807dd", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2012-07-18T14:37:17Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (millis == (Alarm.NEXT_NON_REAL)) { earliestIndex = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4607/buggy-version/application.src.se.chalmers.dat255.sleepfighter.model.AlarmsManager.java", "BodyUseAPI": [], "Fixed commit": "2530d21ba3ccaaec60ff781f686023b480fc56f8", "Url": "https://api.github.com/repos/Hasselmannen/sleepfighter", "Date": "2013-09-19T01:09:27Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mungoae.DBObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (orderby == null) { orderby = fields; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3665/buggy-version/src.main.java.com.mungoae.collection.simple.BasicMungoCollection.java", "BodyUseAPI": [], "Fixed commit": "19500c308f906f38819d6ff9f5b35af023c1e7e2", "Url": "https://api.github.com/repos/mungo-appengine/mungo", "Date": "2014-02-24T10:46:53Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDisplay) != null) { for (int i = 0; i < (mDisplay.getChildCount()); i++) { final com.android2.calculator3.view.CalculatorEditText displayChild = ((com.android2.calculator3.view.CalculatorEditText) (mDisplay.getChildAt(i))); displayChild.setSelection(displayChild.length()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5900/buggy-version/mobile.src.main.java.com.android2.calculator3.floating.FloatingCalculator.java", "BodyUseAPI": [], "Fixed commit": "c42c2e8fe28efd661e475b867280015308060e45", "Url": "https://api.github.com/repos/Xlythe/Calculator", "Date": "2015-07-21T02:31:39Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.ProgressDialog.show(getContext(),java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (progressDialog != null) { progressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5658/buggy-version/app.src.main.java.com.example.kalongip.chatapp.ConversationListFragment.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "118af6c0144c29e3a0d3974eea7a7ecbd70b8a28", "Url": "https://api.github.com/repos/comp4521group16/ChatApp", "Date": "2016-05-21T14:43:05Z"},
{"Line": "=>1227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ability instanceof mage.abilities.mana.ManaAbility) { if (((mage.abilities.ActivatedAbility) (ability)).canActivate(playerId, game)) { useable.put(ability.getId(), ((mage.abilities.ActivatedAbility) (ability))); } }else if (canPlay(((mage.abilities.ActivatedAbility) (ability)), availableMana, object, game)) { useable.put(ability.getId(), ((mage.abilities.ActivatedAbility) (ability))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5479/buggy-version/Mage.src.mage.players.PlayerImpl.java", "BodyUseAPI": ["java.util.LinkedHashMap<java.util.UUID, mage.abilities.ActivatedAbility>.put(ability.getId(),mage.abilities.Ability)", "mage.abilities.Ability.getId()", "mage.abilities.Ability.getId()", "java.util.LinkedHashMap<java.util.UUID, mage.abilities.ActivatedAbility>.put(ability.getId(),mage.abilities.Ability)"], "Fixed commit": "7ac0fe65ef56667554e946a1b519e8bf82337ece", "Url": "https://api.github.com/repos/PwnedGalaxy/mage", "Date": "2015-10-21T21:24:04Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((counts[amt]) == (-1)) { throw new java.lang.RuntimeException((\"No solution for \" + amt)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7792/buggy-version/src.main.java.dynprog.CoinChange.java", "BodyUseAPI": [], "Fixed commit": "721cbaec8e96b177086e13b9e2d75197123da636", "Url": "https://api.github.com/repos/abhijitsharma/algorithms", "Date": "2012-04-12T10:36:32Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min == (java.lang.Integer.MAX_VALUE)) { counts[j] = -1; out[j] = -1; }else { counts[j] = 1 + min; out[j] = used; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7792/buggy-version/src.main.java.dynprog.CoinChange.java", "BodyUseAPI": [], "Fixed commit": "721cbaec8e96b177086e13b9e2d75197123da636", "Url": "https://api.github.com/repos/abhijitsharma/algorithms", "Date": "2012-04-12T10:36:32Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(folder.exists())) { java.net.URL url = java.lang.Thread.currentThread().getContextClassLoader().getResource(apiFolder); if (url == null) { org.simplity.rest.Operations.logger.error(\"{} is neither a valid folder, nor a path to valid resource. Boot strap failed.\", apiFolder); }else { apiFolder = url.getPath(); folder = new java.io.File(apiFolder); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1054/buggy-version/simplity.kernel.src.main.java.org.simplity.rest.Operations.java", "BodyUseAPI": [], "Fixed commit": "03a75502dd17098b5ecc4d08a30eee009c294809", "Url": "https://api.github.com/repos/simplity/simplity", "Date": "2017-08-30T06:43:32Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.System.getProperty(\"os.name\").toLowerCase().contains(\"windows\"))) { additionalChar = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4291/buggy-version/src.main.java.ui.ImageFromMap.java", "BodyUseAPI": [], "Fixed commit": "b5182eb042383e063afcd3154442eb55bd83fa08", "Url": "https://api.github.com/repos/williamahartman/CS3733Team2Project", "Date": "2015-12-12T19:34:01Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.System.getProperty(\"os.name\").toLowerCase().contains(\"windows\"))) { additionalChar = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4291/buggy-version/src.main.java.ui.Email.java", "BodyUseAPI": [], "Fixed commit": "b5182eb042383e063afcd3154442eb55bd83fa08", "Url": "https://api.github.com/repos/williamahartman/CS3733Team2Project", "Date": "2015-12-12T19:34:01Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selStart <= selEnd) { currentSelection = getText().toString().substring(selStart, selEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9021/buggy-version/app.src.main.java.org.connectbot.TerminalView.java", "BodyUseAPI": ["getText().toString().substring(int,int)"], "Fixed commit": "427ddb21a56ef0f85303ff7de64cbef2cdb5e472", "Url": "https://api.github.com/repos/jbcode42/connectbot", "Date": "2015-10-05T19:10:02Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connection.isConnected()) { send(new com.iKeirNez.CommunicationsFramework.implementation.packets.PacketDisconnect()).syncUninterruptibly(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8461/buggy-version/src.main.java.com.iKeirNez.CommunicationsFramework.implementation.handlers.PacketHandler.java", "BodyUseAPI": [], "Fixed commit": "6a271cc398f6c6bac393d884c4d9e1c4d26dda62", "Url": "https://api.github.com/repos/iKeirNez/CommunicationsFramework", "Date": "2014-05-04T14:53:30Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ml.shifu.shifu.core.binning.UpdateBinningInfoReducer.computePosRate(long[],long[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.lang.Double.isNaN(binPosRate[i]))) { if ((java.lang.Double.compare(max, binPosRate[i])) < 0) { max = binPosRate[i]; } if ((java.lang.Double.compare(min, binPosRate[i])) > 0) { min = binPosRate[i]; } sum += (binPosRate[i]) * ((binCountPos[i]) + (binCountNeg[i])); squaredSum += ((binPosRate[i]) * (binPosRate[i])) * ((binCountPos[i]) + (binCountNeg[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1880/buggy-version/src.main.java.ml.shifu.shifu.core.binning.UpdateBinningInfoReducer.java", "BodyUseAPI": ["java.lang.Double.compare(double,double)", "java.lang.Double.compare(double,double)"], "Fixed commit": "42fe0dda5639ae3794284e0817baffa8568be93b", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2015-06-01T07:23:11Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nbest.size()) == 1) { java.lang.String[] fields = Regex.threeBarsWithSpace.split(nbest.get(0)); if ((fields[1].equals(\"\")) || (Regex.spaces.matches(fields[1]))) { java.lang.System.err.println(java.lang.String.format(\"-> sentence is empty\")); return \"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8332/buggy-version/src.joshua.decoder.NbestMinRiskReranker.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "Regex.threeBarsWithSpace.split(java.lang.String)"], "Fixed commit": "1394d5ffe0b2dbdce7da6676e4d93730c339723c", "Url": "https://api.github.com/repos/lukeorland/joshua", "Date": "2012-11-28T20:29:44Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.tudelft.granula.util.json.JsonUtil.fromJson(nl.tudelft.granula.util.FileUtil.readFile(java.nio.file.Paths.get(driverLogPath)),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (execution.getPlatform().toLowerCase().contains(\"graphx\")) { granulaExecutor.setEnvEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2286/buggy-version/graphalytics-plugins-granula.src.main.java.nl.tudelft.graphalytics.granula.FailedJobArchiver.java", "BodyUseAPI": [], "Fixed commit": "bd2157c5a513bc40408e5ba0206e6b51c265146d", "Url": "https://api.github.com/repos/ldbc/ldbc_graphalytics", "Date": "2016-10-11T10:27:34Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((coreData.items.size()) > MAX_CACHED) { rssItemsSubset = coreData.items.subList(6, java.lang.Math.min(coreData.items.size(), MAX_CACHED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7936/buggy-version/app.src.main.java.fr.vpm.audiorss.process.AllFeedItemsDataModel.java", "BodyUseAPI": ["java.util.List<fr.vpm.audiorss.rss.RSSItem>.subList(int,int)", "java.util.List<fr.vpm.audiorss.rss.RSSItem>.size()", "java.lang.Math.min(coreData.items.size(),int)"], "Fixed commit": "31b32a69c9d68c2357e435ae1316b5e07e1a17f3", "Url": "https://api.github.com/repos/vpmalley/radiofeedz", "Date": "2015-03-19T15:48:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((student.position) == null) { student.position = position; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7727/buggy-version/src.de.selfmade4u.klassenmixer.gui.GraphicalStudent.java", "BodyUseAPI": [], "Fixed commit": "7228872ea8e8329e555b71cc05134cb046d76be2", "Url": "https://api.github.com/repos/mohe2015/Klassenmixer", "Date": "2017-06-12T18:38:06Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valor <= (saldo)) { saldo -= valor; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7332/buggy-version/src.main.java.edu.impacta.gcmaula11.ContaBancaria.java", "BodyUseAPI": [], "Fixed commit": "ddd28574a1a676377e6cd5aad5229360d839c4b4", "Url": "https://api.github.com/repos/joaocamargo009/gcm-aula11", "Date": "2017-06-04T22:00:01Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (param != 0) { at.rkn2014.plugins.PluginManager.getInstance().initPluginManager(param); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8524/buggy-version/rkn-proxy.src.at.rkn2014.proxy.DispatcherThread.java", "BodyUseAPI": [], "Fixed commit": "1c7fcf928def4bf7d65b6bf774e97a4ed266f535", "Url": "https://api.github.com/repos/eddybhaal/rkn_g20", "Date": "2014-06-27T12:23:35Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getProperties().getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(user)) user = propertyUser;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8260/buggy-version/lingual-hadoop.src.main.java.cascading.lingual.platform.hadoop.HadoopPlatformBroker.java", "BodyUseAPI": [], "Fixed commit": "eea14936ea2d5bdb2bdb724f7ef8f9e2cf2f6984", "Url": "https://api.github.com/repos/Cascading/lingual", "Date": "2013-08-09T22:05:17Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clazz != null) { aux.setOp(Operator.OR); java.lang.String auxClause = (((\"?\" + varName) + \" = <\") + clazz) + \"> \"; aux.setFilters(new org.weso.wesearch.domain.impl.filters.SPARQLFilters(new org.weso.wesearch.domain.impl.filters.SPARQLFilter(auxClause))); aux = ((org.weso.wesearch.domain.impl.filters.SPARQLFilters) (aux.getFilters())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6709/buggy-version/src.main.java.org.weso.wesearch.domain.SPARQLQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "45d5ee8d4cc561792830f0ea29438c067d419526", "Url": "https://api.github.com/repos/weso/wesearch", "Date": "2013-04-12T09:26:07Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (shoppingCart != null) { session.setAttribute(\"shoppingCart\", shoppingCart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5102/buggy-version/src.com.statboost.controllers.ShoppingCartServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(java.lang.String,com.statboost.models.session.ShoppingCartSessionObject)"], "Fixed commit": "0b50e888dedbb1adde7eee06329b5f129d9399a9", "Url": "https://api.github.com/repos/mpcodemonkey/statboostv2", "Date": "2014-11-21T02:47:12Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((shoppingCart != null) && (shoppingCart.getCartItems().isEmpty())) { session.removeAttribute(\"itemsInCart\"); session.removeAttribute(\"cartTotals\"); session.removeAttribute(\"orderTotal\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5102/buggy-version/src.com.statboost.controllers.ShoppingCartServlet.java", "BodyUseAPI": [], "Fixed commit": "0b50e888dedbb1adde7eee06329b5f129d9399a9", "Url": "https://api.github.com/repos/mpcodemonkey/statboostv2", "Date": "2014-11-21T02:47:12Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.sellingType) == (SellingType.BID)) { if ((this.endTime) == null) return false; return ((this.endTime.getTime()) - (java.lang.System.currentTimeMillis())) > ((1000 * 60) * 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6066/buggy-version/src.main.java.com.se.ebid.controller.RegisterItemForm.java", "BodyUseAPI": [], "Fixed commit": "26e0d7f38685edea06229f1bf76be57f3f27dc83", "Url": "https://api.github.com/repos/quxiz/ebid", "Date": "2014-12-03T14:33:54Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listID) == (ListElementHelper.COMPLETED_LIST_ID)) { ((android.widget.GridLayout) (findViewById(R.id.newListElementHolder))).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5325/buggy-version/IForgotThat.src.com.ehpefi.iforgotthat.ListWithElementsActivity.java", "BodyUseAPI": [], "Fixed commit": "9ac0acbfa940b91947b6bb5b1d9f1563572c0b78", "Url": "https://api.github.com/repos/evenh/IForgotThat", "Date": "2014-04-17T18:05:07Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nextIndex.get()) <= (tuple.index)) { nextIndex.set(((tuple.index) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5336/buggy-version/impl.src.main.java.org.ehcache.impl.persistence.FileBasedStateRepository.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicInteger.set(int)"], "Fixed commit": "5e94fbe0b4c8c232c1053bfd334860864675f570", "Url": "https://api.github.com/repos/GaryWKeim/ehcache3", "Date": "2016-07-13T17:09:53Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInitialised)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/154/buggy-version/src.dynamix_framework.dynamix-framework.src.eu.smartsantander.androidExperimentation.operations.PhoneProfiler.java", "BodyUseAPI": [], "Fixed commit": "2c958e09bf774d1f1c8a40cb6d15f6d398bc9a67", "Url": "https://api.github.com/repos/theodori/AndroidExperimentation", "Date": "2013-11-26T14:29:57Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tokenStack.isEmpty())) { java.lang.System.out.println((\"peek of tokenStack is \" + (tokenStack.peek()))); if (tokenStack.peek().equals(\")\")) { java.lang.System.out.println(\"peek() is a )\"); while ((!(tokenStack.isEmpty())) && (!(tokenStack.peek().equals(\"(\")))) { doubleQueue.add(tokenStack.pop()); } java.lang.System.out.println(\"tokenStack is popping\"); tokenStack.pop(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2897/buggy-version/src.InfixToPostfix.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.peek()", "java.util.Stack<java.lang.String>.pop()", "java.io.PrintStream.println(java.lang.String)", "java.util.Stack<java.lang.String>.peek()", "java.lang.String.equals(java.lang.String)", "java.util.concurrent.ArrayBlockingQueue<java.lang.String>.add(java.lang.String)", "java.util.Stack<java.lang.String>.isEmpty()", "java.util.Stack<java.lang.String>.peek()", "java.util.Stack<java.lang.String>.pop()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "d019b732d20e2f58765f4fd72a0cb4dd30efec8a", "Url": "https://api.github.com/repos/HappyHappyMan/2168-lab-3", "Date": "2013-02-24T23:59:42Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.ui.cbrobbi.com.trips.MainActivity.findViewById(R.id.nightNumber)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Integer.parseInt(nights_num.getText().toString())) < 1) { nights_error_message.setText(\"Atleast 1 Night!\"); }else { nights_error_message.setText(\"Enter a number!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5720/buggy-version/Trips.app.src.main.java.app.ui.cbrobbi.com.trips.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6eb35dccfcb347baafb604802e43b8d0be5a8acb", "Url": "https://api.github.com/repos/cbrobbi/cs6392016team5", "Date": "2016-07-10T05:34:25Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.ui.cbrobbi.com.trips.MainActivity.findViewById(R.id.childrenNumber)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (children_num.getText().toString().matches(\"\")) { children_num.setText(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5720/buggy-version/Trips.app.src.main.java.app.ui.cbrobbi.com.trips.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "6eb35dccfcb347baafb604802e43b8d0be5a8acb", "Url": "https://api.github.com/repos/cbrobbi/cs6392016team5", "Date": "2016-07-10T05:34:25Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.ui.cbrobbi.com.trips.MainActivity.findViewById(R.id.adultNumber)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((adults_num.getText().toString().matches(\"\")) || ((java.lang.Integer.parseInt(adults_num.getText().toString())) < 1)) { adults_error_message.setText(\"Enter a number!\"); if ((java.lang.Integer.parseInt(nights_num.getText().toString())) < 1) { adults_error_message.setText(\"Enter a number!\"); }else { adults_error_message.setText(\"Enter a number!\"); } }else if ((nights_num.getText().toString().matches(\"\")) || ((java.lang.Integer.parseInt(nights_num.getText().toString())) < 1)) { if ((java.lang.Integer.parseInt(nights_num.getText().toString())) < 1) { nights_error_message.setText(\"Atleast 1 Night!\"); }else { nights_error_message.setText(\"Enter a number!\"); } }else { if (children_num.getText().toString().matches(\"\")) { children_num.setText(\"0\"); } for (int i = 0; i < (count); i++) { android.widget.EditText child_text = ((android.widget.EditText) (findViewById((i + 1)))); android.widget.Spinner spinner_text = ((android.widget.Spinner) (findViewById(((i + 1) * 222)))); java.lang.String night_number = child_text.getText().toString(); java.lang.String city_name = spinner_text.getSelectedItem().toString(); cities.add(city_name); nights.add(night_number); } nights.add(0, nights_num.getText().toString()); java.lang.String allItems = \"\"; for (java.lang.String str : nights) { allItems = (allItems + \"\\n\") + str; } android.widget.Toast.makeText(getApplicationContext(), allItems, Toast.LENGTH_LONG).show(); android.content.Intent imDoneIntent = new android.content.Intent(this, app.ui.cbrobbi.com.trips.ImDoneActivity.class); imDoneIntent.putExtra(\"departure_city\", spinner_departure_cities.getSelectedItem().toString()); imDoneIntent.putExtra(\"cabin_class\", spinner_cabin_class.getSelectedItem().toString()); imDoneIntent.putExtra(\"rooms_num\", spinner_rooms_num.getSelectedItem().toString()); imDoneIntent.putExtra(\"arriving_city\", spinner_arriving_city.getSelectedItem().toString()); imDoneIntent.putExtra(\"selected_date\", date_selected.getText().toString()); imDoneIntent.putExtra(\"adults_number\", java.lang.Integer.parseInt(adults_num.getText().toString())); imDoneIntent.putExtra(\"children_number\", java.lang.Integer.parseInt(children_num.getText().toString())); imDoneIntent.putExtra(\"nights_number\", java.lang.Integer.parseInt(nights_num.getText().toString())); imDoneIntent.putExtra(\"mylist_nights\", nights); imDoneIntent.putExtra(\"mylist_cities\", cities); startActivity(imDoneIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5720/buggy-version/Trips.app.src.main.java.app.ui.cbrobbi.com.trips.MainActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,int)", "java.lang.Integer.parseInt(adults_num.getText().toString())", "android.widget.EditText.getText()", "adults_num.getText().toString()"], "Fixed commit": "6eb35dccfcb347baafb604802e43b8d0be5a8acb", "Url": "https://api.github.com/repos/cbrobbi/cs6392016team5", "Date": "2016-07-10T05:34:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o.has(\"note\")) messageToMediationService.setNote(o.getString(\"note\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2089/buggy-version/src.main.java.eu.trentorise.smartcampus.mediation.model.MessageToMediationService.java", "BodyUseAPI": ["eu.trentorise.smartcampus.mediation.model.MessageToMediationService.setNote(o.getString(\"note\"))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "0807a29406c72ab4a86d083b50d8b843ac4a1190", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.mediation", "Date": "2013-10-15T15:10:07Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((curDiceNumber) != ((movementCount) + 1)) { view.panel.MapPanel.ON_BANK = false; serving.serve(game.Game.getInstance().getPlayers(), game.Game.getInstance().getCurrentPlayer(), game.Game.getInstance().getMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7735/buggy-version/src.view.panel.MapPanel.java", "BodyUseAPI": [], "Fixed commit": "8549d18b2a88c0dab19b7895ab8c69bb9a7b601f", "Url": "https://api.github.com/repos/jzlshitian/Monopoly2", "Date": "2016-06-21T11:49:56Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { view.setBackground(drawable); }else { view.setBackgroundDrawable(drawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8664/buggy-version/Android.LuaViewSDK.src.com.taobao.luaview.userdata.ui.UDView.java", "BodyUseAPI": [], "Fixed commit": "f1320b58d05a77fabc66f6d423c78aab42be550e", "Url": "https://api.github.com/repos/Zhaoyy/LuaViewSDK", "Date": "2016-05-05T10:51:44Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.hisp.dhis.client.sdk.android.api.D2.isConfigured()) { org.hisp.dhis.android.eventcapture.model.AppAccountManager.getInstance().initialize(getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7130/buggy-version/app.src.main.java.org.hisp.dhis.android.eventcapture.views.activities.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "4679abf381876e95ec7b159c4e159868759527b4", "Url": "https://api.github.com/repos/dhis2/dhis2-android-eventcapture", "Date": "2016-05-04T10:20:10Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((RemoteDescriptorProvider.DATACLOUD_SERVER_NAME.equals(serverName)) && (url == null)) { url = org.datacleaner.descriptors.RemoteDescriptorProvider.DATACLOUD_URL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/277/buggy-version/desktop.ui.src.main.java.org.datacleaner.util.RemoteServersUtils.java", "BodyUseAPI": [], "Fixed commit": "7af133eb16131079fbf576f874350a50fddf2253", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2016-02-18T07:39:03Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entityplayer.isSneaking())) { int blockID = world.getBlockId(x, y, z); net.minecraft.block.Block block = (blockID > 0) ? net.minecraft.block.Block.blocksList[blockID] : null; if (block != null) { blockActivated = block.onBlockActivated(world, x, y, z, entityplayer, side, hitX, hitY, hitZ); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/498/buggy-version/TMF-source.slimevoid.tmf.items.tools.ItemMiningToolBelt.java", "BodyUseAPI": ["net.minecraft.block.Block.onBlockActivated(net.minecraft.world.World,int,int,int,net.minecraft.entity.player.EntityPlayer,int,float,float,float)"], "Fixed commit": "6d0e75f1b055faa1a1420d94f5387507234b30d4", "Url": "https://api.github.com/repos/SlimeVoid/TheMinersFriend", "Date": "2014-02-17T18:36:24Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.isFile()) { if (targetPath == null) { migrateFile(file, new java.io.File(target, name)); }else { migrateFile(file, new java.io.File(target, ((targetPath + \"/\") + name))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3636/buggy-version/project-maven-plugin.src.main.java.org.unidal.maven.plugin.project.MigrateMojo.java", "BodyUseAPI": ["org.unidal.maven.plugin.project.MigrateMojo.migrateFile(java.io.File,java.io.File)", "org.unidal.maven.plugin.project.MigrateMojo.migrateFile(java.io.File,java.io.File)"], "Fixed commit": "4cf90bb6b9c0f154fa300f9c8f398609765a00b9", "Url": "https://api.github.com/repos/unidal/maven-plugins", "Date": "2012-05-27T03:27:12Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.services.admin.directory.model.Member.getRole()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((gRole.equals(\"MANAGER\")) || (gRole.equals(\"OWNER\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2227/buggy-version/hooks.google-mail-groups-hook.docroot.WEB-INF.src.com.liferay.google.mail.groups.util.GoogleMailGroupsUtil.java", "BodyUseAPI": [], "Fixed commit": "a9db601220011000eb432bddac9e38780e134f4a", "Url": "https://api.github.com/repos/vsingleton/liferay-plugins", "Date": "2014-09-26T00:18:40Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wom == 5) { rrule.append(\";BYSETPOS=-1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6684/buggy-version/src.com.android.exchange.utility.CalendarUtilities.java", "BodyUseAPI": [], "Fixed commit": "cc1651fd85ccf83377daea31cf74eda07eafb751", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_Email", "Date": "2011-06-03T01:59:21Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.Concept.getDescription()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (newDescription != null) { field.setDescription(newDescription.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3502/buggy-version/api.src.main.java.org.openmrs.module.mergeconcepts.api.db.hibernate.HibernateMergeConceptsDAO.java", "BodyUseAPI": ["org.openmrs.module.mergeconcepts.api.db.hibernate.ConceptDescription.toString()", "org.openmrs.module.mergeconcepts.api.db.hibernate.Field.setDescription(newDescription.toString())"], "Fixed commit": "0e708154332aa13431cdb9e371ec68fad1a46dd8", "Url": "https://api.github.com/repos/albertsaave/openmrs-module-mergeconcepts", "Date": "2014-03-28T17:57:33Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Locale.getCountry()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((country == null) || ((country.trim().length()) == 0)) country = lang.toUpperCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4827/buggy-version/src.main.java.com.trsvax.tapestry.facebook.services.FBAsyncSupportImpl.java", "BodyUseAPI": [], "Fixed commit": "c203687c5809a7feeb14f27324f37f129864c3a5", "Url": "https://api.github.com/repos/mlusetti/tapestry-facebook", "Date": "2011-03-25T16:41:21Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jitsi.videobridge.simulcast.sendmodes.RewritingSendMode.State.getNext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (next == simStream) { if (org.jitsi.videobridge.simulcast.sendmodes.RewritingSendMode.logger.isDebugEnabled()) { org.jitsi.videobridge.simulcast.sendmodes.RewritingSendMode.logger.debug(((((\"order-\" + (simStream.getOrder())) + \" stream is already the target from \") + (getSimulcastSender().getSimulcastReceiver().getSimulcastEngine().getVideoChannel().getEndpoint().getID())) + \".\")); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4848/buggy-version/src.main.java.org.jitsi.videobridge.simulcast.sendmodes.RewritingSendMode.java", "BodyUseAPI": ["org.jitsi.videobridge.simulcast.sendmodes.Logger.debug(((((\"order-\" + (simStream.getOrder())) + \" stream is already the target from \") + (getSimulcastSender().getSimulcastReceiver().getSimulcastEngine().getVideoChannel().getEndpoint().getID())) + \".\"))", "org.jitsi.videobridge.simulcast.sendmodes.SimulcastStream.getOrder()"], "Fixed commit": "2b490e7ba9ad75ee433cf424f45bc13fe7739299", "Url": "https://api.github.com/repos/jitsi/jitsi-videobridge", "Date": "2016-04-16T04:29:25Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jitsi.videobridge.simulcast.sendmodes.RewritingSendMode.logger.isDebugEnabled()) { org.jitsi.videobridge.simulcast.sendmodes.RewritingSendMode.logger.debug(((((\"order-\" + (simStream.getOrder())) + \" stream is already streaming from \") + (getSimulcastSender().getSimulcastReceiver().getSimulcastEngine().getVideoChannel().getEndpoint().getID())) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4848/buggy-version/src.main.java.org.jitsi.videobridge.simulcast.sendmodes.RewritingSendMode.java", "BodyUseAPI": ["org.jitsi.videobridge.simulcast.sendmodes.Logger.debug(((((\"order-\" + (simStream.getOrder())) + \" stream is already streaming from \") + (getSimulcastSender().getSimulcastReceiver().getSimulcastEngine().getVideoChannel().getEndpoint().getID())) + \".\"))"], "Fixed commit": "2b490e7ba9ad75ee433cf424f45bc13fe7739299", "Url": "https://api.github.com/repos/jitsi/jitsi-videobridge", "Date": "2016-04-16T04:29:25Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nextRowCol.size()) < 11) { exists = false; }else { if ((nextRowCol.get(1).text().charAt(0)) == 160) { exists = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5467/buggy-version/app.src.main.java.uhmanoa.droid_sch.ParserThread.java", "BodyUseAPI": ["nextRowCol.get(1).text()", "nextRowCol.get(1).text().charAt(int)", "org.jsoup.select.Elements.get(int)"], "Fixed commit": "c6f0a7a8b49f16666ffa0a2014db5f7df13821d9", "Url": "https://api.github.com/repos/1andyn/droid_sch", "Date": "2015-04-10T02:05:21Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isAdded()) == false) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2978/buggy-version/Source_App.app.src.main.java.app.robo.fhv.roboapp.views.welcome.WelcomeHowItsDone.java", "BodyUseAPI": [], "Fixed commit": "5deaff8a1de89e66c8b2ddf89d2dd331929156b3", "Url": "https://api.github.com/repos/Blackjack92/fhvRobot", "Date": "2016-01-27T09:44:16Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.handler.codec.http.HttpMessageDecoder.actualReadableBytes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (readLimit == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2397/buggy-version/src.main.java.org.jboss.netty.handler.codec.http.HttpMessageDecoder.java", "BodyUseAPI": [], "Fixed commit": "d464e867338614dfa4489f4ef86d34b6094720a3", "Url": "https://api.github.com/repos/netty/netty", "Date": "2012-07-04T07:44:01Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.handler.codec.http.HttpMessageDecoder.actualReadableBytes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (readLimit == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2397/buggy-version/src.main.java.org.jboss.netty.handler.codec.http.HttpMessageDecoder.java", "BodyUseAPI": [], "Fixed commit": "d464e867338614dfa4489f4ef86d34b6094720a3", "Url": "https://api.github.com/repos/netty/netty", "Date": "2012-07-04T07:44:01Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chosenLocation) != null) { setReceivedLocation(chosenLocation, FetchAddressIntentService.CHOOSE_LOCATION); enableButton(FetchAddressIntentService.CHOOSE_LOCATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2413/buggy-version/app.src.main.java.com.svenwesterlaken.gemeentebreda.presentation.fragments.NewReportLocationFragment.java", "BodyUseAPI": [], "Fixed commit": "36d6ea10738debad5526695448a2c673af11b55b", "Url": "https://api.github.com/repos/SvenWesterlaken/gemeente-breda", "Date": "2017-06-08T07:43:29Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.instantiation.getInstantiationMethod()) == (edu.stanford.bmir.protege.web.shared.xd.data.CodpInstantiationMethod.TEMPLATE_BASED)) { axioms = generateFrameTreeCreationAxioms(project, frameTree, com.google.common.base.Optional.<org.semanticweb.owlapi.model.OWLEntity>absent()); }else { org.semanticweb.owlapi.model.OWLEntity parentEntity; org.semanticweb.owlapi.model.IRI parentIri = frameTree.getParent().getData().getIri().get(); if ((frameTree.getData()) instanceof edu.stanford.bmir.protege.web.shared.xd.data.entityframes.ClassFrame) { parentEntity = edu.stanford.bmir.protege.web.shared.DataFactory.getOWLEntity(EntityType.CLASS, parentIri); }else if ((frameTree.getData()) instanceof edu.stanford.bmir.protege.web.shared.xd.data.entityframes.ObjectPropertyFrame) { parentEntity = edu.stanford.bmir.protege.web.shared.DataFactory.getOWLEntity(EntityType.OBJECT_PROPERTY, parentIri); }else { parentEntity = edu.stanford.bmir.protege.web.shared.DataFactory.getOWLEntity(EntityType.DATA_PROPERTY, parentIri); } axioms = generateFrameTreeCreationAxioms(project, frameTree, com.google.common.base.Optional.of(parentEntity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5596/buggy-version/src.main.java.edu.stanford.bmir.protege.web.server.xd.OdpInstantiationChangeListGenerator.java", "BodyUseAPI": [], "Fixed commit": "9cbcaa998ed46c868194b48be7ba5fa197acaba9", "Url": "https://api.github.com/repos/hammar/webprotege", "Date": "2016-09-22T09:22:38Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetNode instanceof javafx.scene.Parent) { ((javafx.scene.Parent) (targetNode)).requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8672/buggy-version/module-decoration.src.main.java.jidefx.scene.control.decoration.DecorationUtils.java", "BodyUseAPI": [], "Fixed commit": "3958283d33bcc856c598a5cfa2983261c175ab6f", "Url": "https://api.github.com/repos/jidesoft/jidefx-oss", "Date": "2013-10-03T18:41:57Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetNode instanceof javafx.scene.Parent) { ((javafx.scene.Parent) (targetNode)).requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8672/buggy-version/module-decoration.src.main.java.jidefx.scene.control.decoration.DecorationUtils.java", "BodyUseAPI": [], "Fixed commit": "3958283d33bcc856c598a5cfa2983261c175ab6f", "Url": "https://api.github.com/repos/jidesoft/jidefx-oss", "Date": "2013-10-03T18:41:57Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetNode instanceof javafx.scene.Parent) { ((javafx.scene.Parent) (targetNode)).requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8672/buggy-version/module-decoration.src.main.java.jidefx.scene.control.decoration.DecorationUtils.java", "BodyUseAPI": [], "Fixed commit": "3958283d33bcc856c598a5cfa2983261c175ab6f", "Url": "https://api.github.com/repos/jidesoft/jidefx-oss", "Date": "2013-10-03T18:41:57Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (insideGraph) { g2d.drawLine(screenPositionXCoord, screenPositionYCoord, screenPositionXCoord, screenPositionYCoord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2532/buggy-version/src.main.java.org.diyefi.openlogviewer.graphing.SingleGraphPanel.java", "BodyUseAPI": [], "Fixed commit": "5c9fea34259dbe35a324899f7d4e12c18f050d1d", "Url": "https://api.github.com/repos/gufi/OpenLogViewer", "Date": "2011-11-22T20:15:25Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (atGraphEnd) { insideGraph = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2532/buggy-version/src.main.java.org.diyefi.openlogviewer.graphing.SingleGraphPanel.java", "BodyUseAPI": [], "Fixed commit": "5c9fea34259dbe35a324899f7d4e12c18f050d1d", "Url": "https://api.github.com/repos/gufi/OpenLogViewer", "Date": "2011-11-22T20:15:25Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<float[]>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vals.length) <= 1) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6855/buggy-version/src.com.phyloa.dlib.dui.DLinePlot.java", "BodyUseAPI": [], "Fixed commit": "556d96ae842bd852731017429c9388cf4133bdf8", "Url": "https://api.github.com/repos/danwinkler/dlib", "Date": "2013-02-03T00:36:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(distance)) > 4.0) { Robot.navController.setSetpoint(heading); Robot.distanceController.setSetpointRelative(distance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7030/buggy-version/src.org.frc1721.steamworks.commands.DriveToCoordinates.java", "BodyUseAPI": ["Robot.distanceController.setSetpointRelative(double)"], "Fixed commit": "e01e10a68698f275b159361dc1fdcd20d2f092d7", "Url": "https://api.github.com/repos/FRC-1721/2017-Steamworks", "Date": "2017-02-17T01:30:03Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mRecipientNameEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((recipient.trim().length()) == 0) { displayModalDialog(R.string.alert_dialog_title_oops, R.string.alert_dialog_message_no_recipient, R.string.OK, null, 0, null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2749/buggy-version/KitePrintSDK.src.main.java.ly.kite.address.AddressEditActivity.java", "BodyUseAPI": [], "Fixed commit": "69a45aa211c7cd6985fc1df486ee539e883c8744", "Url": "https://api.github.com/repos/OceanLabs/Android-Print-SDK", "Date": "2015-09-05T19:34:42Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mAddressLine1EditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((line1.trim().length()) == 0) { displayModalDialog(R.string.alert_dialog_title_oops, R.string.alert_dialog_message_no_line1, R.string.OK, null, 0, null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2749/buggy-version/KitePrintSDK.src.main.java.ly.kite.address.AddressEditActivity.java", "BodyUseAPI": [], "Fixed commit": "69a45aa211c7cd6985fc1df486ee539e883c8744", "Url": "https://api.github.com/repos/OceanLabs/Android-Print-SDK", "Date": "2015-09-05T19:34:42Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mAddressPostcodeEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((postalCode.trim().length()) == 0) { displayModalDialog(R.string.alert_dialog_title_oops, R.string.alert_dialog_message_no_postal_code, R.string.OK, null, 0, null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2749/buggy-version/KitePrintSDK.src.main.java.ly.kite.address.AddressEditActivity.java", "BodyUseAPI": [], "Fixed commit": "69a45aa211c7cd6985fc1df486ee539e883c8744", "Url": "https://api.github.com/repos/OceanLabs/Android-Print-SDK", "Date": "2015-09-05T19:34:42Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (planName == null) planName = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/702/buggy-version/app.src.main.java.com.main.toledo.gymtrackr.DatabaseWrapper.java", "BodyUseAPI": [], "Fixed commit": "ce2b95cadfc69855969c7e6a791e0635543c9f7f", "Url": "https://api.github.com/repos/kodieGlosser/FitnessApp", "Date": "2015-03-13T03:53:51Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (holder != null) { writer.write(org.apache.commons.lang3.StringUtils.substring(mainResult, start, holder.index)); java.lang.String result = viewResultMap.get(holder.pageletId); if (result != null) { writer.write(result); } start = holder.index; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1123/buggy-version/src.main.java.com.xiuhao.pagelet.servlet.NoChunkedAsyncProcessor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)", "java.io.PrintWriter.write(org.apache.commons.lang3.StringUtils.substring(mainResult, start, holder.index))"], "Fixed commit": "f731399a025743c1ced860552f28d5c605931dbb", "Url": "https://api.github.com/repos/seanlinwang/commons", "Date": "2014-07-01T13:08:37Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org) == null) org = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1055/buggy-version/src.main.java.com.terrasystems.emedics.model.User.java", "BodyUseAPI": [], "Fixed commit": "3534295bcd3270098b564770b2ea436605b6e21f", "Url": "https://api.github.com/repos/profiside/emedics-back", "Date": "2016-07-13T12:55:39Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (started) { stopServer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9247/buggy-version/src.main.java.com.sangupta.lineup.server.LineUpServer.java", "BodyUseAPI": [], "Fixed commit": "87bbcb11fd348c0586da529271e5439a70def254", "Url": "https://api.github.com/repos/sangupta/lineup", "Date": "2013-06-11T12:49:51Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(courseId.isEmpty())) { numberOfPendingComments = (logic.getCommentsForSendingState(courseId, CommentSendingState.PENDING).size()) + (logic.getFeedbackResponseCommentsForSendingState(courseId, CommentSendingState.PENDING).size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2811/buggy-version/src.main.java.teammates.ui.controller.InstructorCommentsPageAction.java", "BodyUseAPI": ["logic.getCommentsForSendingState(courseId, CommentSendingState.PENDING).size()", "logic.getFeedbackResponseCommentsForSendingState(courseId, CommentSendingState.PENDING).size()", "teammates.ui.controller.InstructorCommentsPageAction.getCommentsForSendingState(java.lang.String,CommentSendingState.PENDING)", "teammates.ui.controller.InstructorCommentsPageAction.getFeedbackResponseCommentsForSendingState(java.lang.String,CommentSendingState.PENDING)"], "Fixed commit": "9a3836c739722815e71c5d3972761885729a2570", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-09-10T12:09:16Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d2.isBefore(d1)) { throw new java.lang.IllegalArgumentException(((((\"The first date must be not after the second [ \" + d1) + \" - \") + d2) + \" ]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5490/buggy-version/src.main.java.net.giomagi.hpt.helpers.UkCalendar.java", "BodyUseAPI": [], "Fixed commit": "9ddc9bd65af2836c46f5e0e4e86adbbc35c63971", "Url": "https://api.github.com/repos/giomagi/holiday-planning-tools", "Date": "2017-01-28T12:19:56Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.GameCommanderImpl.getCard(((java.util.UUID) (player.getSideboard().toArray()[0])))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((commander.getSpellAbility().getManaCosts()) == null) { org.apache.log4j.Logger.getLogger(mage.game.GameCommanderImpl.class).warn((\"Got commander without Mana costs: \" + (commander.getName()))); commanderMana = new mage.Mana(); }else { commanderMana = commander.getSpellAbility().getManaCosts().getMana(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4386/buggy-version/Mage.src.mage.game.GameCommanderImpl.java", "BodyUseAPI": ["mage.cards.Card.getSpellAbility()", "commander.getSpellAbility().getManaCosts()", "org.apache.log4j.Logger.getLogger(mage.game.GameCommanderImpl.class).warn((\"Got commander without Mana costs: \" + (commander.getName())))", "commander.getSpellAbility().getManaCosts().getMana()", "mage.cards.Card.getName()"], "Fixed commit": "4536587fb961d9ea8bc59bfd84ad13a9bb029503", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-12-01T09:00:10Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(dir).isDirectory())) { throw new java.io.IOException((dir + \" doesn't denote a directory\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5548/buggy-version/src.ru.fizteh.fivt.students.vlmazlov.storeable.StoreableTableProviderFactory.java", "BodyUseAPI": [], "Fixed commit": "4a52bd8d4134dceef9cb6177b1a4107dfeacacb1", "Url": "https://api.github.com/repos/VlMazlov/fizteh-java-2013", "Date": "2013-11-13T08:40:41Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gridY >= (rowCount)) { gridY = (rowCount) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9031/buggy-version/src.be.kuleuven.socialmap.util.GridHash.java", "BodyUseAPI": [], "Fixed commit": "dd8b54f21cc7f0241f291d901fe20f152ab9dd71", "Url": "https://api.github.com/repos/asrointernship/jasper-app", "Date": "2012-06-13T08:16:49Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[0].equals(\"indev\")) { java.lang.System.out.println(\"Running in development environment\"); JBOT.Main.indev = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8751/buggy-version/src.main.java.JBOT.Main.java", "BodyUseAPI": [], "Fixed commit": "8821087c1a22543f91ed43a14b457106da3f85ad", "Url": "https://api.github.com/repos/Vrend/JBot", "Date": "2017-01-15T03:34:33Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newLine) { if (nextChar == '+') { segmentType = com.atlassian.stash.content.DiffSegmentType.ADDED; }else if (nextChar == '-') { segmentType = com.atlassian.stash.content.DiffSegmentType.REMOVED; }else { segmentType = com.atlassian.stash.content.DiffSegmentType.CONTEXT; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1106/buggy-version/src.main.java.com.pbaranchikov.stash.checks.EolCheckHook.java", "BodyUseAPI": [], "Fixed commit": "ce0c609f3f5512612b6155e0018181550f11c194", "Url": "https://api.github.com/repos/pbaranchikov/stash-eol-check", "Date": "2014-11-20T12:04:47Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity == (ru.mvk.athene.model.User.class)) result = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4352/buggy-version/src.ru.mvk.athene.model.User.java", "BodyUseAPI": [], "Fixed commit": "ba72e7b29ca5b6bd6f9724c1073daebbc5801e95", "Url": "https://api.github.com/repos/raptor-mvk/Athene", "Date": "2014-10-17T11:57:33Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(MRJobConfig.MAP_JAVA_OPTS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mapJavaOpts == null) { mapJavaOpts = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8406/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.JobHelper.java", "BodyUseAPI": [], "Fixed commit": "2d87750d2b57a8bea463e83be8cd3a87d84c6977", "Url": "https://api.github.com/repos/wywlds/druid", "Date": "2017-07-21T10:49:09Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(MRJobConfig.REDUCE_JAVA_OPTS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (reduceJavaOpts == null) { reduceJavaOpts = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8406/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.JobHelper.java", "BodyUseAPI": [], "Fixed commit": "2d87750d2b57a8bea463e83be8cd3a87d84c6977", "Url": "https://api.github.com/repos/wywlds/druid", "Date": "2017-07-21T10:49:09Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["todo.javier.mera.todolist.ui.FragmentHelper.findFragment(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fragment.isRemovingItems()) { fragment.removeItems(); mPresenter.updateToolbarBackground(R.color.colorPrimary); mPresenter.showFabButton(); getSupportActionBar().setHomeAsUpIndicator(0); }else { onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3695/buggy-version/app.src.main.java.todo.javier.mera.todolist.ui.MainActivity.java", "BodyUseAPI": ["todo.javier.mera.todolist.fragments.FragmentRecycler.removeItems()"], "Fixed commit": "ea2da279759a11c4218271341569b36c819ccf19", "Url": "https://api.github.com/repos/JaviMera/TodoList", "Date": "2017-01-22T22:05:30Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(closed)) { closed = true; iterator.close(); writeSemaphoreDown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3747/buggy-version/blueprints-graph-sail.src.main.java.com.tinkerpop.blueprints.pgm.oupls.sail.GraphSailConnection.java", "BodyUseAPI": [], "Fixed commit": "a251642062c83fc77e8d63fcb59b9494a1740885", "Url": "https://api.github.com/repos/tinkerpop/blueprints", "Date": "2011-08-19T09:47:11Z"},
{"Line": "=>1302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataValuesJson.has(\"orgUnit\")) dhisOrgUnitUid = dataValuesJson.getString(\"orgUnit\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3949/buggy-version/api.src.main.java.org.openmrs.module.systemmonitor.api.impl.SystemMonitorServiceImpl.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "ad492f3b8485a24627b7dc7106bc585a41c99d73", "Url": "https://api.github.com/repos/jembi/openmrs-module-systemmonitor", "Date": "2016-09-01T03:08:25Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/601/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "53c869286f0e83003e1481f1c7673ea7be2026a4", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.elmakers.mine.bukkit.utility.NMSUtils.class_EntityArmorStand_disabledSlotsField.getType()) != (java.lang.Integer.TYPE)) throw new java.lang.Exception(\"Looks like 1.9\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7841/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.utility.NMSUtils.java", "BodyUseAPI": [], "Fixed commit": "cc9fcb28c7f5195cb84027fea6079f934225ea52", "Url": "https://api.github.com/repos/S-Toad/MagicPlugin", "Date": "2016-08-23T15:59:19Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expenses) != null) { return expenses.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/968/buggy-version/DailyExpense.app.src.main.java.com.example.troytaylor.dailyexpense.UI.ExpenseListAdapter.java", "BodyUseAPI": [], "Fixed commit": "7a0261a74888ef8bd090c08674f49f4cb1381730", "Url": "https://api.github.com/repos/ttt10/DailySpendingTracker", "Date": "2016-11-23T22:50:52Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectIndex) < 0) { mSelectIndex = 0; }else if ((mSelectIndex) > ((mSize) - 1)) { mSelectIndex = (mSize) - 1; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3772/buggy-version/library.src.main.java.me.ghui.library.PickerView.java", "BodyUseAPI": [], "Fixed commit": "2f1be52122c6f09ab82688732c1566634bbe0786", "Url": "https://api.github.com/repos/lantouzi/PickerView-Android", "Date": "2015-11-30T12:59:08Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.model.utils.TopicUtilities.getMatchingMinHash(javax.persistence.EntityManager,java.util.Map<java.lang.Integer, java.lang.Integer>,java.lang.Float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((matchingTopics.size()) == 0) { return new java.util.ArrayList<java.lang.Integer>() { { add((-1)); } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4246/buggy-version/src.main.java.org.jboss.pressgang.ccms.model.utils.TopicUtilities.java", "BodyUseAPI": [], "Fixed commit": "e9fe03aeb16e0f77f7e19da31a1cc86acfb4c389", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSModel", "Date": "2013-11-28T19:36:46Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((permissions.length) > 0) { android.util.Log.v(link.standen.michael.slideshow.MainActivity.TAG, (((\"Permission: \" + (permissions[0])) + \" was \") + (grantResults[0]))); if ((grantResults[0]) == (android.content.pm.PackageManager.PERMISSION_GRANTED)) { updateListView(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1874/buggy-version/app.src.main.java.link.standen.michael.slideshow.MainActivity.java", "BodyUseAPI": ["android.util.Log.v(java.lang.String,java.lang.String)"], "Fixed commit": "1218be7a06df1d95fbdaf13f991ec79181c67adc", "Url": "https://api.github.com/repos/ScreamingHawk/android-slideshow", "Date": "2017-10-11T18:42:15Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canPlay) { soundManager.playSound(message.getSeconds()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4141/buggy-version/app.src.main.java.com.petarvelikov.taxikooperant.model.tcp.TcpService.java", "BodyUseAPI": [], "Fixed commit": "2ffe97ebc61c3b0aedc33b439b712929206ff072", "Url": "https://api.github.com/repos/VelikovPetar/TaxiKooperant", "Date": "2017-10-04T13:57:36Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["o1.getUpdateDate().compareTo(o2.getUpdateDate())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compareResult == 0) { compareResult = (java.lang.Integer.parseInt(o1.getId())) - (java.lang.Integer.parseInt(o2.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4570/buggy-version/web-core.src.main.java.com.silverpeas.look.PublicationUpdateDateComparator.java", "BodyUseAPI": [], "Fixed commit": "fff2d4e721cbadbc599ee148b24d9902e40a4de9", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2015-10-21T15:19:44Z"},
{"Line": "=>1617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.AnimeIndex.searchBar.getText().isEmpty()) list = main.AnimeIndex.getJList(); else list = main.AnimeIndex.searchList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/480/buggy-version/src.main.AnimeIndex.java", "BodyUseAPI": [], "Fixed commit": "a19c346888e4878d5564d409576a69a8374951a4", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-25T11:33:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.asMap().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activities != null) { for (at.fh.swenga.project.model.Activity a : activities) { activitiesInt.add(a.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/748/buggy-version/src.at.fh.swenga.project.controller.ActivityController.java", "BodyUseAPI": [], "Fixed commit": "e7c2f30dbecf66cc0fbc56f3a4e2d595afa7121d", "Url": "https://api.github.com/repos/hoxhagra14/fhj.swenga.project.meet", "Date": "2016-06-21T18:27:00Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.array()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((valueArray[((valueArray.length) - 1)]) == 0) { valueArray = java.util.Arrays.copyOf(valueArray, ((valueArray.length) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/864/buggy-version/src.main.java.net.alexweinert.coolc.processors.jbc.JbcEncoder.java", "BodyUseAPI": ["java.util.Arrays.copyOf(byte[],int)"], "Fixed commit": "23de6de4aee6acb474f2441fd3ac45276cb2d4b5", "Url": "https://api.github.com/repos/aweinert/coolc", "Date": "2015-04-09T21:00:17Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").contains(\"Windows\")) { java.lang.System.out.printf(\"%s | \", java.lang.Character.toString(Game.grid[i][j])); }else if (java.lang.System.getProperty(\"os.name\").contains(\"Mac\")) { if ((Game.grid[i][j]) == (Game.null_char)) { java.lang.System.out.printf(\" %s | \", java.lang.Character.toString(Game.grid[i][j])); }else { java.lang.System.out.printf(\"%s | \", java.lang.Character.toString(Game.grid[i][j])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6366/buggy-version/Game.java", "BodyUseAPI": [], "Fixed commit": "aef76b9e2e3ef2fccb000311cd2b3f110c94d0e4", "Url": "https://api.github.com/repos/joelamltc/DSA-Assignment", "Date": "2015-10-22T09:34:45Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) > 0) headNode.previous = newNode;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2930/buggy-version/Deque.java", "BodyUseAPI": [], "Fixed commit": "e8cd4c1ce7d87fac6d1ec703c12ccb95e5112900", "Url": "https://api.github.com/repos/EulersSerum/deque", "Date": "2016-02-14T23:06:19Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) > 0) { Deque.Node refNode = tailNode; tailNode = tailNode.previous; if ((size) > 1) tailNode.next = null; (size)--; return refNode; }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2930/buggy-version/Deque.java", "BodyUseAPI": [], "Fixed commit": "e8cd4c1ce7d87fac6d1ec703c12ccb95e5112900", "Url": "https://api.github.com/repos/EulersSerum/deque", "Date": "2016-02-14T23:06:19Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) > 0) { Deque.Node refNode = headNode; headNode = headNode.next; if ((size) > 1) headNode.previous = null; (size)--; return refNode; }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2930/buggy-version/Deque.java", "BodyUseAPI": [], "Fixed commit": "e8cd4c1ce7d87fac6d1ec703c12ccb95e5112900", "Url": "https://api.github.com/repos/EulersSerum/deque", "Date": "2016-02-14T23:06:19Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) > 0) tailNode.next = newNode;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2930/buggy-version/Deque.java", "BodyUseAPI": [], "Fixed commit": "e8cd4c1ce7d87fac6d1ec703c12ccb95e5112900", "Url": "https://api.github.com/repos/EulersSerum/deque", "Date": "2016-02-14T23:06:19Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) > (org.apache.airavata.api.server.security.authzcache.AuthzCache.MAX_SIZE)) { org.apache.airavata.api.server.security.authzcache.AuthzCache.logger.info(\"Authz cache max size exceeded. Removing the old entries.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6937/buggy-version/airavata-api.airavata-api-server.src.main.java.org.apache.airavata.api.server.security.authzcache.AuthzCache.java", "BodyUseAPI": [], "Fixed commit": "f080ac263c6cd1c1df98dcfbd5f3366f0734fb44", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2015-08-17T03:44:51Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (filename != null) { if (filename.endsWith(((java.io.File.separator) + \"DB\"))) connField.setText(filename.substring(0, ((filename.length()) - 3))); else connField.setText(filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4601/buggy-version/de.bund.bfr.knime.openkrise.src.de.bund.bfr.knime.openkrise.DbConfigurationUi.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.substring(int,int)", "javax.swing.JTextField.setText(java.lang.String)", "java.lang.String.length()", "javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "2c46ce33b9ddf1e98f76abc6606fbc2964f24dd9", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-05-05T10:30:07Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (viewGroupParent != null) viewGroupParent.removeView(songjong.com.seongnamgiftcard.TabFragment.GoogleMapFragment.layout);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7961/buggy-version/SeongnamGiftCard.app.src.main.java.songjong.com.seongnamgiftcard.TabFragment.GoogleMapFragment.java", "BodyUseAPI": ["android.view.ViewGroup.removeView(android.view.View)"], "Fixed commit": "64f70d3fa5719393202c792ab58c7d49c5702f37", "Url": "https://api.github.com/repos/Hyung-Kim/seongnam", "Date": "2017-08-20T11:23:38Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exec == (Execute)) { havabol.ResultValue whileCond = expr(\":\", \"\"); if (!(sc.currentToken.tokenStr.equals(\":\"))) { error(\"Expected ':' after while, found '%s', line '%d', postion '%d'\", sc.currentToken.tokenStr, sc.currentToken.iSourceLineNr, sc.currentToken.iColPos); } if (whileCond.getValue().equals(\"T\")) { if (exec == (havabol.Parser.Exec.EXECUTE)) { bWhile = true; } }else if (whileCond.getValue().equals(\"F\")) { bWhile = false; }else { error(\"Result of boolean expression not T or F, for while at line '%d', postion '%d'\", whileToken.iSourceLineNr, whileToken.iColPos); } }else { sc.skipTo(\":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2332/buggy-version/src.havabol.Parser.java", "BodyUseAPI": [], "Fixed commit": "5af03ff59ef1e24949b93573151a83ffa24a9354", "Url": "https://api.github.com/repos/CHouse013/HavaBol", "Date": "2017-04-27T03:27:36Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(request.getPath().startsWith(\"/st-internal/\"))) { incrementQueue(response500s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5703/buggy-version/src.main.java.io.stallion.monitoring.HealthTracker.java", "BodyUseAPI": [], "Fixed commit": "7ac58b7120f45e278e2db3c72e8d12750f9cf541", "Url": "https://api.github.com/repos/StallionCMS/stallion-core", "Date": "2016-08-25T19:40:11Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((tags == null) || (tags.isEmpty())) || (myTags == null)) || (myTags.isEmpty())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3667/buggy-version/app.src.main.java.wumf.com.sharedapps.firebase.observable.ObservablePeopleFirebase.java", "BodyUseAPI": [], "Fixed commit": "851c07ce46285bd877ba23f4271eccb6d86a4dd6", "Url": "https://api.github.com/repos/mlevytskiy/SharedApps", "Date": "2017-01-13T12:36:11Z"},
{"Line": "=>1820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nschmidt.ldparteditor.logger.NLogger.DEBUG) { org.nschmidt.ldparteditor.logger.NLogger.debug(getClass(), \"Selected data:\"); for (org.nschmidt.ldparteditor.data.GData g : selectedData) { org.nschmidt.ldparteditor.logger.NLogger.debug(getClass(), g.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2885/buggy-version/src.org.nschmidt.ldparteditor.data.VM01SelectHelper.java", "BodyUseAPI": [], "Fixed commit": "2f7f27b928ae82c60611d7bd8bfc2d86ae97da55", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-03-23T11:08:24Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 23) { android.os.Handler handler = new android.os.Handler(); handler.postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { capture.onResume(); } }, 10); }else { capture.onResume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5610/buggy-version/app.src.main.java.com.cryptocurrencies.bitcoinpos.ScanQrCodeActivity.java", "BodyUseAPI": [], "Fixed commit": "ec42c4ded0e057e977cec4e1afe8fc8c3a38dad1", "Url": "https://api.github.com/repos/karask/bitcoinpos", "Date": "2016-07-25T13:12:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (menu != null) { menu.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/166/buggy-version/app.src.main.java.com.example.xyl.hotmovie.MainFragment.java", "BodyUseAPI": ["android.view.Menu.clear()"], "Fixed commit": "51870861a1157230f0ddcf7051aee9415cd89c06", "Url": "https://api.github.com/repos/xylgz1989/HotMovie", "Date": "2017-01-11T05:36:42Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (handler.isDebug()) { e.printStackTrace(); }else { plugin.getLogger().severe((\"NametagEdit Query Failed - Reason: \" + (e.getMessage()))); plugin.getLogger().severe(\"If this is not a connection error, please enable debug with /nte debug and post the error on our GitHub Issue Tracker.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3965/buggy-version/src.main.java.com.nametagedit.plugin.storage.database.tasks.DatabaseUpdater.java", "BodyUseAPI": [], "Fixed commit": "bcdb64e4985f47daeee7c506e65e6670da3d7d0c", "Url": "https://api.github.com/repos/sgtcaze/NametagEdit", "Date": "2017-06-14T05:26:41Z"},
{"Line": "=>887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((animations.size) > 0) { animations.get(0).act(delta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4081/buggy-version/core.src.com.majalis.character.EnemyCharacter.java", "BodyUseAPI": ["animations.get(0).act(float)", "com.badlogic.gdx.utils.Array<com.majalis.asset.AnimatedActor>.get(int)"], "Fixed commit": "89d85db92a4d9d851b4e8169447848629295ca22", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2017-06-26T02:19:32Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (reply == (javax.swing.JOptionPane.YES_OPTION)) { removeAccount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6319/buggy-version/TrackMyBills.src.userInterface.BillTrackerAccountPage.java", "BodyUseAPI": [], "Fixed commit": "4f552328850c964a199c6f364b4f6ff6b20a9f94", "Url": "https://api.github.com/repos/RyanJamesCaldwell/TrackMyBills", "Date": "2017-07-24T14:31:42Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.kura.core.net.NetworkConfiguration.getNetInterfaceConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (netInterfaceConfig == null) { netInterfaceConfig = newNetworkConfig.getNetInterfaceConfig(usbPort); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1888/buggy-version/kura.org.eclipse.kura.net.admin.src.main.java.org.eclipse.kura.net.admin.monitor.ModemMonitorServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "445eb75fdbf8f12b3f11d1ebf0b8fdf9e14496fa", "Url": "https://api.github.com/repos/eclipse/kura", "Date": "2015-02-28T01:41:48Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.in.SDTReader.getSizeX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((paddedWidth > sizeX) && ((planeSize * (getSizeC())) > blockSize)) && ((((planeSize / paddedWidth) * sizeX) * (getSizeC())) <= blockSize)) { paddedWidth = sizeX; planeSize = ((sizeX * sizeY) * times) * bpp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1665/buggy-version/components.formats-gpl.src.loci.formats.in.SDTReader.java", "BodyUseAPI": [], "Fixed commit": "62425d8717ab3b4f56101e18c7a30ec1e7079057", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-02-24T03:01:40Z"},
{"Line": "=>928", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userId > 0) { sqlQuery += \" and systemUserId = :userId\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7604/buggy-version/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.hierarchy.hierarchyDAO.java", "BodyUseAPI": [], "Fixed commit": "88597475a9506bc9ebb36bfeeec9488d0a7c09fc", "Url": "https://api.github.com/repos/bowlinktech/rr-mvn-repo", "Date": "2016-11-01T12:20:44Z"},
{"Line": "=>936", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userId > 0) { removeProgram.setParameter(\"userId\", userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7604/buggy-version/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.hierarchy.hierarchyDAO.java", "BodyUseAPI": ["org.hibernate.Query.setParameter(java.lang.String,java.lang.Integer)"], "Fixed commit": "88597475a9506bc9ebb36bfeeec9488d0a7c09fc", "Url": "https://api.github.com/repos/bowlinktech/rr-mvn-repo", "Date": "2016-11-01T12:20:44Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmp == (rear)) { rear = front; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3172/buggy-version/src.tianma.learn.ds.lineartable.MyLinkedQueue.java", "BodyUseAPI": [], "Fixed commit": "a13bfac76154480a0766cf57f1f08a93be3d390a", "Url": "https://api.github.com/repos/tianma8023/DataStructure", "Date": "2016-04-06T06:49:43Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((className.startsWith(\"co/paralleluniverse/fibers/instrument/\")) && (!(co.paralleluniverse.common.util.Debug.isUnitTest()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7231/buggy-version/quasar-core.src.main.java.co.paralleluniverse.fibers.instrument.QuasarInstrumentor.java", "BodyUseAPI": [], "Fixed commit": "9218fa1b49bcdc32a1ffaa14a3db3671e82417db", "Url": "https://api.github.com/repos/puniverse/quasar", "Date": "2013-11-24T11:40:08Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lbHostUsagesMapByTime.get(timeKey).get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentUsage == null) { if (previousRecords == null) { previousRecords = new java.util.HashMap<java.lang.Integer, org.openstack.atlas.service.domain.usage.entities.LoadBalancerHostUsage>(); } previousRecords.put(hostId, currentUsage); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8586/buggy-version/jobs.src.main.java.org.openstack.atlas.usagerefactor.helpers.UsagePollerHelper.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, org.openstack.atlas.service.domain.usage.entities.LoadBalancerHostUsage>.put(java.lang.Integer,org.openstack.atlas.service.domain.usage.entities.LoadBalancerHostUsage)"], "Fixed commit": "8b3ccb3e35a2243ef604c453fa57d51602ccfa82", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-06-27T00:34:38Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDetached()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6373/buggy-version/app.src.main.java.com.zjp.translateit.fragment.BaseTranslateFragment.java", "BodyUseAPI": [], "Fixed commit": "305e58b3125667bf390847b41e993dd20b724389", "Url": "https://api.github.com/repos/zunpiau/TranslateIt", "Date": "2017-02-16T06:37:45Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (endRow.find()) { if ((row.indexOf(\";\")) != (row.lastIndexOf(\";\"))) { throw new oop.ex6.main.IllegalException(oop.ex6.main.Parser.BAD_FORMAT_ERROR, lineNumber); }else { row = row.substring(0, endRow.start()); } }else { throw new oop.ex6.main.IllegalException(oop.ex6.main.Parser.BAD_FORMAT_ERROR, lineNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8058/buggy-version/src.oop.ex6.main.Parser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.util.regex.Matcher.start()"], "Fixed commit": "5b3bc48280f71bf51e48de56c7630ae8c9d840da", "Url": "https://api.github.com/repos/david-wies/ex6", "Date": "2016-06-14T17:02:34Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.EventController.getDateLengthValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (value != null) { while (treeMap.containsKey(value)) { value++; } treeMap.put(value, event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9022/buggy-version/src.main.java.controllers.MainSceneController.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, controllers.EventController>.containsKey(java.lang.Integer)"], "Fixed commit": "bd7083191536cc8819532aadd0ad6a654e6b4631", "Url": "https://api.github.com/repos/KiwiPolarBear/EventPlanner", "Date": "2016-08-10T08:43:53Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.reactome.web.diagram.data.ContentFactory.getDiagramObjectByStableId(node.getStId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (diagramObject != null) { pathway.addDiagramObject(diagramObject); diagramObject.setGraphObject(pathway); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1578/buggy-version/src.main.java.org.reactome.web.diagram.data.ContentFactory.java", "BodyUseAPI": ["org.reactome.web.diagram.data.layout.DiagramObject.setGraphObject(org.reactome.web.diagram.data.GraphPathway)", "org.reactome.web.diagram.data.GraphPathway.addDiagramObject(org.reactome.web.diagram.data.layout.DiagramObject)"], "Fixed commit": "d1bd04f41906a338453be3cd6870358564dec3f3", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-11-25T11:19:13Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stack.stackSize) <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2944/buggy-version/src.powercrystals.minefactoryreloaded.tile.machine.TileEntityItemRouter.java", "BodyUseAPI": [], "Fixed commit": "c97a79d8b6a92ab3097b0c14bb14b300ddb3a18f", "Url": "https://api.github.com/repos/skyboy/MineFactoryReloaded", "Date": "2015-01-29T08:16:39Z"},
{"Line": "=>1496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.getVersionValue()) != null) putString(fieldObject, com.redhat.lightblue.metadata.parser.MetadataParser.STR_VERSION_VALUE, field.getVersionValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6432/buggy-version/metadata.src.main.java.com.redhat.lightblue.metadata.parser.MetadataParser.java", "BodyUseAPI": ["com.redhat.lightblue.metadata.ReferenceField.getVersionValue()", "com.redhat.lightblue.metadata.parser.MetadataParser<T>.putString(T,java.lang.String,field.getVersionValue())"], "Fixed commit": "c95180939f06631519188a90b928812547f2330e", "Url": "https://api.github.com/repos/bserdar/lightblue-core", "Date": "2016-08-26T18:00:36Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mockit.coverage.modification.Startup.isTestRun()) { testCode = mockit.coverage.modification.ClassSelection.TEST_CLASS_NAME.matcher(\"\"); }else { testCode = null; readConfiguration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8972/buggy-version/coverage.src.mockit.coverage.modification.ClassSelection.java", "BodyUseAPI": [], "Fixed commit": "c11770b11b223b3d788b8e73ed01dbec7d3a04c3", "Url": "https://api.github.com/repos/maddingo/jmockit1", "Date": "2015-10-28T00:10:14Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.druid.indexing.overlord.RemoteTaskRunnerWorkQueue.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (workItem != null) { taskComplete(workItem, null, io.druid.indexing.common.TaskStatus.failure(taskId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5919/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.RemoteTaskRunner.java", "BodyUseAPI": ["io.druid.indexing.overlord.RemoteTaskRunner.3.taskComplete(io.druid.indexing.overlord.RemoteTaskRunnerWorkItem,<nulltype>,io.druid.indexing.common.TaskStatus.failure(taskId))"], "Fixed commit": "86d9b98f89a4ea42e0b27f282e0a8739bb1ee710", "Url": "https://api.github.com/repos/himanshug/druid", "Date": "2016-04-19T03:59:41Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((cause instanceof io.netty.handler.codec.DecoderException) && (cause != null)) { cause = cause.getCause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7422/buggy-version/src.main.java.com.floragunn.searchguard.ssl.http.netty.SearchGuardSSLNettyHttpServerTransport.java", "BodyUseAPI": ["java.lang.Throwable.getCause()"], "Fixed commit": "8dde36d847712acf89867b100806bff271e77d62", "Url": "https://api.github.com/repos/floragunncom/search-guard-ssl", "Date": "2017-07-30T17:20:46Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.MAVLink.common.msg_statustext.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(message)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6994/buggy-version/ServiceApp.src.org.droidplanner.core.MAVLink.MavLinkMsgHandler.java", "BodyUseAPI": [], "Fixed commit": "0ac75309dae6cca958548af9f5482dff4363d365", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-07-02T05:00:02Z"},
{"Line": "=>1051", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dotmarketing.business.APILocator.getContentletAPI().getBinaryFile(java.lang.String,field.getVelocityVarName(),com.liferay.portal.model.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (inputFile != null) { java.io.File acopyFolder = new java.io.File((((((((com.dotmarketing.business.APILocator.getFileAPI().getRealAssetPathTmpBinary()) + (java.io.File.separator)) + (user.getUserId())) + (java.io.File.separator)) + (field.getFieldContentlet())) + (java.io.File.separator)) + (com.dotmarketing.util.UUIDGenerator.generateUuid()))); if (!(acopyFolder.exists())) acopyFolder.mkdir(); java.lang.String shortFileName = com.liferay.util.FileUtil.getShortFileName(inputFile.getAbsolutePath()); java.io.File binaryFile = new java.io.File((((((((com.dotmarketing.business.APILocator.getFileAPI().getRealAssetPathTmpBinary()) + (java.io.File.separator)) + (user.getUserId())) + (java.io.File.separator)) + (field.getFieldContentlet())) + (java.io.File.separator)) + (shortFileName.trim()))); com.liferay.util.FileUtil.copyFile(inputFile, binaryFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1030/buggy-version/src.com.dotmarketing.portlets.contentlet.action.EditContentletAction.java", "BodyUseAPI": ["com.liferay.util.FileUtil.getShortFileName(java.lang.String)", "java.io.File.getAbsolutePath()", "com.liferay.util.FileUtil.copyFile(java.io.File,java.io.File)"], "Fixed commit": "fa531e68658ed7107f815a223fea04766f6c1938", "Url": "https://api.github.com/repos/signed8bit/dotCMS", "Date": "2013-11-27T12:10:28Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instance.getAllRoles().isEmpty()) { com.orientechnologies.common.log.OLogManager.instance().error(this, \"No security has been installed, create default users and roles\"); security.repair(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6316/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.OMetadata.java", "BodyUseAPI": [], "Fixed commit": "75793e58b05405f37ad811cd7d03a41e3dfeb1f5", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-01-29T15:53:34Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verbose || ((tsig_) != (ec.tstoolkit.modelling.arima.x13.AutoModelSpec.DEF_TSIG))) { info.add(ec.tstoolkit.modelling.arima.x13.AutoModelSpec.ARMALIMIT, tsig_); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3394/buggy-version/jtstoolkit.src.main.java.ec.tstoolkit.modelling.arima.x13.AutoModelSpec.java", "BodyUseAPI": [], "Fixed commit": "4244f58b1b525180bb9470016e137e7b7178364d", "Url": "https://api.github.com/repos/jdemetra/jdemetra-core", "Date": "2015-01-09T11:36:54Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (verbose || ((ubfinal_) != (ec.tstoolkit.modelling.arima.x13.AutoModelSpec.DEF_UBFINAL))) { info.add(ec.tstoolkit.modelling.arima.x13.AutoModelSpec.UBFINAL, ubfinal_); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3394/buggy-version/jtstoolkit.src.main.java.ec.tstoolkit.modelling.arima.x13.AutoModelSpec.java", "BodyUseAPI": [], "Fixed commit": "4244f58b1b525180bb9470016e137e7b7178364d", "Url": "https://api.github.com/repos/jdemetra/jdemetra-core", "Date": "2015-01-09T11:36:54Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7328/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "626b36eb64fb6b5f658bc33af1a7d92036d22b32", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-08T03:01:20Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().query(MovieEntry.CONTENT_URI,java.lang.String[],((name.meszaros.gabor.popularmovies.data.MoviesContract.MovieEntry.COLUMN_ID) + \"=?\"),java.lang.String[],<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != cursor) cursor.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8659/buggy-version/app.src.main.java.name.meszaros.gabor.popularmovies.activities.MovieDetailsActivity.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "753b8624a2dc954817b011c472fbd0472ee9b9d2", "Url": "https://api.github.com/repos/gabor-meszaros/popular-movies", "Date": "2017-04-08T18:10:40Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((zkSplit.length) > 1) { zkPathSuffix = ((zkSplit[1]) + \"/\") + zkPathSuffix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2638/buggy-version/pinot-broker.src.main.java.com.linkedin.pinot.broker.broker.helix.HelixBrokerStarter.java", "BodyUseAPI": [], "Fixed commit": "9efc31e4403207d939d7b3b3173421eda0e115b1", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-10-30T22:25:43Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) == null) { com.kappaware.ktail.Engine.log.debug(java.lang.String.format(\"No entry found. We are after the last message. Will seek to end\")); java.util.Collection<org.apache.kafka.common.TopicPartition> partitionAsList = java.util.Arrays.asList(new org.apache.kafka.common.TopicPartition[]{ entry.getKey() }); this.consumer.seekToEnd(partitionAsList); }else { consumer.seek(entry.getKey(), entry.getValue().offset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/404/buggy-version/src.main.java.com.kappaware.ktail.Engine.java", "BodyUseAPI": ["java.util.Map.Entry<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndTimestamp>.getKey()", "java.util.Arrays.asList(org.apache.kafka.common.TopicPartition[])", "java.util.Map.Entry<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndTimestamp>.getKey()", "java.util.Map.Entry<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndTimestamp>.getValue()", "entry.getValue().offset()", "org.apache.kafka.clients.consumer.KafkaConsumer<java.lang.String, java.lang.String>.seek(entry.getKey(),entry.getValue().offset())"], "Fixed commit": "89b877b3c2b05cdd325bc61ff42b8b493b794246", "Url": "https://api.github.com/repos/Kappaware/ktail", "Date": "2016-12-19T12:58:04Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configuration.isReuseChannel()) { producerCallback = callback; }else { producerCallback = new org.apache.camel.component.netty4.NettyProducer.NettyProducerCallback(channel, callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7246/buggy-version/components.camel-netty4.src.main.java.org.apache.camel.component.netty4.NettyProducer.java", "BodyUseAPI": [], "Fixed commit": "96d3ce29aadfe801b604b5db1db3581e64eb5ebd", "Url": "https://api.github.com/repos/pax95/camel", "Date": "2016-06-12T12:48:41Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parts.length) > 2) { if ((parts[2].toLowerCase().matches(\"p\")) | (parts[1].toLowerCase().matches(\"p\"))) { hour = hour + 12; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4267/buggy-version/src.main.java.de.dkt.eservices.eopennlp.timexRules.AutomaticEnglishDateRules.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "ef01a3fa662b64cb0104b4a21bc25c7b5dfde2f7", "Url": "https://api.github.com/repos/dkt-projekt/e-NLP", "Date": "2016-11-07T11:05:21Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.select.Elements.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tr.select(\"a\").size()) > 0) e.put(AccountData.KEY_RESERVATION_CANCEL, tr.select(\"a\").last().attr(\"href\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7014/buggy-version/src.de.geeksfactory.opacclient.apis.IOpac.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(AccountData.KEY_RESERVATION_CANCEL,tr.select(\"a\").last().attr(\"href\"))", "org.jsoup.nodes.Element.select(java.lang.String)", "tr.select(\"a\").last()", "tr.select(\"a\").last().attr(java.lang.String)"], "Fixed commit": "efd855109af545aa9311a11ef3a4dd63f2767f95", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2014-12-09T21:52:03Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.sound.midi.MidiMessage.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status == 192) { metaTypeByte = newMidiMessageArray[0]; }else { metaTypeByte = newMidiMessageArray[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6720/buggy-version/src.mckay.utilities.sound.midi.MIDIMethods.java", "BodyUseAPI": [], "Fixed commit": "736cc4d9bd6a86781255231d8055322f0a7f15f1", "Url": "https://api.github.com/repos/DDMAL/UtilityClasses", "Date": "2015-07-31T20:24:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(name)) { nl.giantit.minecraft.GiantShop.Misc.Heraut.say(player, \"Failed to add shop. Name can not be empty!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/281/buggy-version/src.nl.giantit.minecraft.GiantShop.Locationer.core.Commands.chat.add.java", "BodyUseAPI": [], "Fixed commit": "c2c6ff2d4f7e3e9aab5199f6b5c58c6a12f71707", "Url": "https://api.github.com/repos/Thidox/GiantShop-2.0", "Date": "2013-05-03T16:41:42Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiFile.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(text.contains(\"@flow\"))) { return com.github.dsilva.flowtc.TypeCheck.noProblems; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/139/buggy-version/src.com.github.dsilva.flowtc.TypeCheck.java", "BodyUseAPI": [], "Fixed commit": "70d91613828f6f18cdd16f85e8b7690b08a21a44", "Url": "https://api.github.com/repos/dsilva/webstorm-plugin-flow-typecheck", "Date": "2016-08-20T18:48:18Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.jamwiki.WikiBase.searchEngine) == null) { org.jamwiki.WikiBase.searchEngine = org.jamwiki.utils.WikiUtil.searchEngineInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8384/buggy-version/jamwiki-core.src.main.java.org.jamwiki.WikiBase.java", "BodyUseAPI": [], "Fixed commit": "bcc93b474ea2c1a143c750a433ee99ed61126848", "Url": "https://api.github.com/repos/km-works/jamwiki2", "Date": "2017-02-24T10:16:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.jamwiki.WikiBase.parserInstance) == null) { org.jamwiki.WikiBase.parserInstance = org.jamwiki.utils.WikiUtil.parserInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8384/buggy-version/jamwiki-core.src.main.java.org.jamwiki.WikiBase.java", "BodyUseAPI": [], "Fixed commit": "bcc93b474ea2c1a143c750a433ee99ed61126848", "Url": "https://api.github.com/repos/km-works/jamwiki2", "Date": "2017-02-24T10:16:05Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(dir)) < 10) { com.nodrex.android.tools.Util.log(\"diff is too small, so skipping\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/431/buggy-version/mobile.src.main.java.com.nodrex.connectedworld.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a89a103abc38946cb8f397a4ba1bd9f463f9ca4d", "Url": "https://api.github.com/repos/Nodrex/ConnectedWorld", "Date": "2016-10-19T21:29:20Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (next == null) { dect.add(dect.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/214/buggy-version/src.scotland.yard.GameMap.java", "BodyUseAPI": [], "Fixed commit": "68f460f08a80f778ea428d796b10c240e93db0c4", "Url": "https://api.github.com/repos/Rishabh2693/ScotlandYard", "Date": "2017-04-04T18:59:27Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((neighbors.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/214/buggy-version/src.scotland.yard.Detective.java", "BodyUseAPI": [], "Fixed commit": "68f460f08a80f778ea428d796b10c240e93db0c4", "Url": "https://api.github.com/repos/Rishabh2693/ScotlandYard", "Date": "2017-04-04T18:59:27Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secondsValue.length()) == 1) { secondsValue = \"0\" + secondsValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2447/buggy-version/src.main.java.ee.ellytr.chat.component.TimeComponent.java", "BodyUseAPI": [], "Fixed commit": "69b97c7ce1bc5e0cc64f883d95e20cca1748f5ae", "Url": "https://api.github.com/repos/CardinalDevelopment/EllyChat", "Date": "2016-07-01T04:13:44Z"},
{"Line": "=>685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<com.nibonn.lovepinche.UserMessage>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ums == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1782/buggy-version/lovePinche.src.main.java.com.nibonn.lovepinche.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "24009b9fc5a806654899b908b11d11728ab4ab6b", "Url": "https://api.github.com/repos/hefnrh/Embedded-Systems", "Date": "2014-05-03T13:42:14Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usingColumn.isEmpty()) { return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9258/buggy-version/src.main.java.org.mcstats.generator.ReflectionAggregator.java", "BodyUseAPI": [], "Fixed commit": "5195429bc4b220aa1d38e8107da028517543190f", "Url": "https://api.github.com/repos/Hidendra/MCStats", "Date": "2013-10-27T22:19:17Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usingInner.isEmpty()) { return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9258/buggy-version/src.main.java.org.mcstats.generator.ReflectionDonutAggregator.java", "BodyUseAPI": [], "Fixed commit": "5195429bc4b220aa1d38e8107da028517543190f", "Url": "https://api.github.com/repos/Hidendra/MCStats", "Date": "2013-10-27T22:19:17Z"},
{"Line": "=>1044", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((tf.root) instanceof org.scilab.forge.jlatexmath.RowAtom)) { org.scilab.forge.jlatexmath.TeXFormula.predefinedTeXFormulas.put(name, tf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/664/buggy-version/jlatexmath.src.main.java.org.scilab.forge.jlatexmath.TeXFormula.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.scilab.forge.jlatexmath.TeXFormula>.put(java.lang.String,org.scilab.forge.jlatexmath.TeXFormula)"], "Fixed commit": "9de14def95f0d1082c5abe8902cb001b226ca9f0", "Url": "https://api.github.com/repos/davidmoten/jlatexmath", "Date": "2017-05-20T12:58:51Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((receivedData != null) && (receivedData.hasExtra(\"checkedItems\"))) { checkedQuestionsID = new java.util.ArrayList<java.lang.Integer>(); java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>> temp = ((java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.String>>) (receivedData.getSerializableExtra(\"checkedItems\"))); for (int i = 0; i < (temp.size()); i++) { java.util.HashMap<java.lang.String, java.lang.String> hashMap = temp.get(i); checkedQuestionsID.add(java.lang.Integer.parseInt(hashMap.get(\"dbId\"))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8677/buggy-version/src.com.diplomadoUNAL.geosalesman.AddNewReportTemplate.java", "BodyUseAPI": ["android.content.Intent.getSerializableExtra(java.lang.String)"], "Fixed commit": "855d5f1d5e6f0244d0bc2c92d9b1aaf14c32a16d", "Url": "https://api.github.com/repos/migdus/Geo-Salesman", "Date": "2012-11-15T04:24:46Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (receivedIntent.getStringExtra(com.diplomadoUNAL.geosalesman.CRUDObject.QUERY_SOURCE).equals(com.diplomadoUNAL.geosalesman.CRUDObject.QUESTIONS)) { }else if (receivedIntent.getStringExtra(com.diplomadoUNAL.geosalesman.CRUDObject.QUERY_SOURCE).equals(com.diplomadoUNAL.geosalesman.CRUDObject.CLIENTS)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8677/buggy-version/src.com.diplomadoUNAL.geosalesman.CRUDObject.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(java.lang.String)", "receivedIntent.getStringExtra(com.diplomadoUNAL.geosalesman.CRUDObject.QUERY_SOURCE).equals(java.lang.String)"], "Fixed commit": "855d5f1d5e6f0244d0bc2c92d9b1aaf14c32a16d", "Url": "https://api.github.com/repos/migdus/Geo-Salesman", "Date": "2012-11-15T04:24:46Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (receivedIntent.getStringExtra(com.diplomadoUNAL.geosalesman.CRUDObject.QUERY_SOURCE).equals(com.diplomadoUNAL.geosalesman.CRUDObject.REPORT_TEMPLATES)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8677/buggy-version/src.com.diplomadoUNAL.geosalesman.CRUDObject.java", "BodyUseAPI": [], "Fixed commit": "855d5f1d5e6f0244d0bc2c92d9b1aaf14c32a16d", "Url": "https://api.github.com/repos/migdus/Geo-Salesman", "Date": "2012-11-15T04:24:46Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent instanceof com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.PhpContinue) { target = parent; replacement = com.jetbrains.php.lang.psi.PhpPsiElementFactory.createFromText(project, com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.PhpContinue.class, ((\"continue \" + (replacement.getText())) + ';')); }else if (parent instanceof com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.PhpBreak) { target = parent; replacement = com.jetbrains.php.lang.psi.PhpPsiElementFactory.createFromText(project, com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.PhpBreak.class, ((\"break \" + (replacement.getText())) + ';')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6677/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.codeStyle.UnnecessaryParenthesesInspector.java", "BodyUseAPI": [], "Fixed commit": "a6a7f5d785b0581d5c6e2088867146bd9d7f17b8", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2017-12-01T17:46:56Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3637/buggy-version/src.main.java.com.helger.jcodemodel.JPackage.java", "BodyUseAPI": [], "Fixed commit": "e1b768556c33cca2e97e138ff2bd1391d65f8451", "Url": "https://api.github.com/repos/sviperll/jcodemodel", "Date": "2015-08-11T18:30:08Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((StudentNetworkSimulator.aBuffer[j]) != null) { toLayer3(A, StudentNetworkSimulator.aBuffer[j]); java.lang.System.out.println(((\"Packet \" + (java.lang.Integer.toString(j))) + \" re-sent to B because of SACK.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4251/buggy-version/StudentNetworkSimulator.java", "BodyUseAPI": ["StudentNetworkSimulator.toLayer3(A,StudentNetworkSimulator.aBuffer[j])", "java.io.PrintStream.println(java.lang.String)", "java.lang.Integer.toString(int)"], "Fixed commit": "23f3a29c270a57b35a2984711cdb5c4c677df2da", "Url": "https://api.github.com/repos/saacg/reliable-transport-protocols", "Date": "2016-11-10T17:32:04Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((left.size()) != 0) c.follow(left.getLast());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/263/buggy-version/CarList.java", "BodyUseAPI": ["Car.follow(left.getLast())", "java.util.Deque<Car>.getLast()"], "Fixed commit": "054aa7046f617505929734c7e7787cf1a4644f0a", "Url": "https://api.github.com/repos/MMazzocchi/Car", "Date": "2013-12-01T20:10:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((right.size()) != 0) c.follow(right.getLast());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/263/buggy-version/CarList.java", "BodyUseAPI": ["Car.follow(right.getLast())", "java.util.Deque<Car>.getLast()"], "Fixed commit": "054aa7046f617505929734c7e7787cf1a4644f0a", "Url": "https://api.github.com/repos/MMazzocchi/Car", "Date": "2013-12-01T20:10:25Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MidiEventHandlers.TEMPO_HANDLER.getTempoMap().size()) == 0) return 500000;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6902/buggy-version/src.main.java.com.drmattyg.nanokaraoke.video.KaraokeScreenMediaTool.java", "BodyUseAPI": [], "Fixed commit": "64554118eb89edc869f9c3c35473e5867ec532ba", "Url": "https://api.github.com/repos/drmattyg/KarProcess", "Date": "2015-06-30T22:16:39Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.faeez.dao.MemberDao.getMemberById(uim.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (m == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6499/buggy-version/src.main.java.com.faeez.service.MemberServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4eade3da3e0085187ad7e45b6dd08fa93b3f1f0d", "Url": "https://api.github.com/repos/faeezshaikh/tttango", "Date": "2015-06-15T23:47:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uim == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6499/buggy-version/src.main.java.com.faeez.service.MemberServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4eade3da3e0085187ad7e45b6dd08fa93b3f1f0d", "Url": "https://api.github.com/repos/faeezshaikh/tttango", "Date": "2015-06-15T23:47:34Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(gov.nih.nci.cananolab.util.StringUtils.isEmpty(username))) && (!(gov.nih.nci.cananolab.util.StringUtils.isEmpty(oldpassword)))) && (!(gov.nih.nci.cananolab.util.StringUtils.isEmpty(newpassword)))) { gov.nih.nci.cananolab.restful.useraccount.UserAccountBO userAccountBO = ((gov.nih.nci.cananolab.restful.useraccount.UserAccountBO) (gov.nih.nci.cananolab.restful.SpringApplicationContext.getBean(httpRequest, \"userAccountBO\"))); userAccountBO.resetUserAccountPassword(oldpassword, newpassword, username); }else throw new java.lang.Exception(\"Username and old/new passwords are required for resetting password.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/846/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.UserAccountServices.java", "BodyUseAPI": ["gov.nih.nci.cananolab.restful.useraccount.UserAccountBO.resetUserAccountPassword(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "5ace1b6973b26c67496fab8255d44a4f692aba8a", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2017-01-19T18:11:50Z"},
{"Line": "=>543", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ref.getThreadId()) == (java.lang.Thread.currentThread().getId())) { logger.debug(\"Lock re-entrant for current thread for: {}\\n\\n(Lock was requested by:\\n{})\", file, caller); break; }else { logger.debug(\"Lock still held by: {}\\n\\n(Lock was requested by:\\n{})\", ref, caller); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/225/buggy-version/src.main.java.org.commonjava.util.partyline.JoinableFileManager.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,org.commonjava.util.partyline.LockOwner,java.lang.String)"], "Fixed commit": "46ab96956d67c2d9d16d5a03f49d88affccfa7c3", "Url": "https://api.github.com/repos/ligangty/partyline", "Date": "2016-07-29T08:15:25Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((token.getType()) == (compiler.fileanalyzer.TokenType.SQUARE_BRACKET_BLOCK)) { attribute = new compiler.cstruct.Attribute(type, \"\", true, 0); token = tokenIterator.next(); }else if (((token.getType()) == (compiler.fileanalyzer.TokenType.COMMA_OPERATOR)) || ((token.getType()) == (compiler.fileanalyzer.TokenType.CLOSING_BRACKET))) { attribute = new compiler.cstruct.Attribute(type, \"\", false, 0); }else { throw new compiler.InvalidExpressionException(token.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5687/buggy-version/compilador2.src.compiler.cstruct.Function.java", "BodyUseAPI": ["compiler.fileanalyzer.Token.getType()", "compiler.fileanalyzer.Token.toString()", "compiler.fileanalyzer.Token.getType()"], "Fixed commit": "8f6683f977d842e4ba73adbbb0d674ddbf11cc03", "Url": "https://api.github.com/repos/TVilaboa/Proyecto-Parser-C", "Date": "2014-03-18T21:51:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getElement(0).getElement(0).getText().equals(\"World 666\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3198/buggy-version/src.model.Scraper.java", "BodyUseAPI": [], "Fixed commit": "f33b468e33a0b94dd1f6d66af6517e5fe73d85ce", "Url": "https://api.github.com/repos/RealAtix/OSRS-World-Tracker", "Date": "2016-06-04T15:29:56Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getElement(0).getElement(0).getText().equals(\"World 666\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3198/buggy-version/src.model.Scraper.java", "BodyUseAPI": [], "Fixed commit": "f33b468e33a0b94dd1f6d66af6517e5fe73d85ce", "Url": "https://api.github.com/repos/RealAtix/OSRS-World-Tracker", "Date": "2016-06-04T15:29:56Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (version == null) { final org.eclipse.wst.common.project.facet.core.IProjectFacet facet = org.eclipse.wst.common.project.facet.core.ProjectFacetsManager.getProjectFacet(ExtJSCore.FACET_EXT); org.eclipse.wst.common.project.facet.core.IProjectFacetVersion result = null; for (final org.eclipse.wst.common.project.facet.core.IProjectFacetVersion version2 : facet.getVersions()) { if (result == null) { result = version2; }else if ((result.compareTo(version2)) < 0) { result = version2; } } return this.getDefaultEnvName(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3360/buggy-version/net.w3des.extjs.core.src.net.w3des.extjs.internal.core.libs.ExtJSLibraryManager.java", "BodyUseAPI": [], "Fixed commit": "95368b5735468962bd401a553e03e3d17a791a12", "Url": "https://api.github.com/repos/zulus/extjs-eclipse", "Date": "2014-06-19T05:13:25Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.isCommitted()) == false) { response.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7611/buggy-version/jestful-server.src.main.java.org.qfox.jestful.server.JestfulServletSupport.java", "BodyUseAPI": ["javax.servlet.ServletResponse.reset()"], "Fixed commit": "ca897f2f28952789844fd0bfaf93dc3cfe73f4cd", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2016-06-03T09:59:48Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.isCommitted()) == false) { response.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7611/buggy-version/jestful-server.src.main.java.org.qfox.jestful.server.JestfulFilterSupport.java", "BodyUseAPI": ["javax.servlet.ServletResponse.reset()"], "Fixed commit": "ca897f2f28952789844fd0bfaf93dc3cfe73f4cd", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2016-06-03T09:59:48Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (threadHandle == null) { threadHandle = sipStack.getThreadAuditor().addCurrentThread(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5666/buggy-version/src.gov.nist.javax.sip.stack.UDPMessageChannel.java", "BodyUseAPI": [], "Fixed commit": "5e64efb787db1078dda3e9a328987f27c7f76d6d", "Url": "https://api.github.com/repos/usnistgov/jsip", "Date": "2006-12-05T05:18:50Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.guardian.getPlotDatabase().getPlotManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((guardian.getPlotDatabase().getPlotByName(pm.getBlocksPlot(e.getBlock().getLocation()))) != null) { if ((!(guardian.canBuild(e.getPlayer(), e.getBlock().getLocation()))) || (!(e.getPlayer().hasPermission(\"plotguardian.admin\")))) { e.getPlayer().sendMessage(((((((org.bukkit.ChatColor.RED) + \"Whoa There \") + (org.bukkit.ChatColor.GOLD)) + (e.getPlayer().getName())) + (org.bukkit.ChatColor.RED)) + \"this is not your plot\")); e.getBlock().breakNaturally(); e.setCancelled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/384/buggy-version/src.com.daddyeric.guardian.events.PlayerListener.java", "BodyUseAPI": ["e.getPlayer().sendMessage(((((((org.bukkit.ChatColor.RED) + \"Whoa There \") + (org.bukkit.ChatColor.GOLD)) + (e.getPlayer().getName())) + (org.bukkit.ChatColor.RED)) + \"this is not your plot\"))", "org.bukkit.event.block.SignChangeEvent.getPlayer()", "com.daddyeric.guardian.PlotGuardian.canBuild(e.getPlayer(),e.getBlock().getLocation())", "e.getBlock().breakNaturally()", "org.bukkit.event.block.SignChangeEvent.getPlayer()", "org.bukkit.event.block.SignChangeEvent.getBlock()", "e.getPlayer().getName()", "e.getPlayer().hasPermission(java.lang.String)", "org.bukkit.event.block.SignChangeEvent.getBlock()", "e.getBlock().getLocation()", "org.bukkit.event.block.SignChangeEvent.setCancelled(boolean)", "org.bukkit.event.block.SignChangeEvent.getPlayer()", "org.bukkit.event.block.SignChangeEvent.getPlayer()"], "Fixed commit": "c85c8bab3f7804679ac6c00cfddbdbe0f14ee408", "Url": "https://api.github.com/repos/DTS-MC/PlotGuardian2.0", "Date": "2014-10-23T20:48:25Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((savedInstanceState != null) && ((savedInstanceState.getParcelableArrayList(com.example.nbtk123.tikalmovies.ui.RVMoviesAdapter.KEY_MOVIE_DATA)) != null)) { mData = savedInstanceState.getParcelableArrayList(com.example.nbtk123.tikalmovies.ui.RVMoviesAdapter.KEY_MOVIE_DATA); }else { mData = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1592/buggy-version/app.src.main.java.com.example.nbtk123.tikalmovies.ui.RVMoviesAdapter.java", "BodyUseAPI": [], "Fixed commit": "2a167da5a443cfbe6acae84808f5c2d180b2e484", "Url": "https://api.github.com/repos/nbtk123/TikalMovies", "Date": "2017-01-22T17:11:46Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JColorChooser.showDialog(edu.cs305.paintproject.client.SidePanel,java.lang.String,java.awt.Color)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newColor != null) { color = newColor; colorButton.setBackground(color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8610/buggy-version/src.edu.cs305.paintproject.client.SidePanel.java", "BodyUseAPI": [], "Fixed commit": "f0e99c64039dc383eaa79629e074a812078d3892", "Url": "https://api.github.com/repos/CS305JSX/PaintProject305", "Date": "2013-04-18T02:07:31Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.statusCenter.getReader().searchIntervalByTime(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (target.contains(mouseTime)) gc.fillText(target.getSpeaker(), ((ms.getX()) + 1.5), 29);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1192/buggy-version/src.dx.leesdy.model.paintcomponents.PDrawVerticalLine.java", "BodyUseAPI": ["javafx.scene.canvas.GraphicsContext.fillText(target.getSpeaker(),((ms.getX()) + 1.5),int)", "dx.leesdy.utils.LDSegment.getSpeaker()"], "Fixed commit": "83a1b2ea533491fda8792be6973ee05da20265e4", "Url": "https://api.github.com/repos/yakewdx/Leesdy", "Date": "2017-03-22T11:52:15Z"},
{"Line": "=>1359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"null\".equals(result))) try { return ((java.lang.String) (new org.json.JSONTokener(result).nextValue())); } catch (org.json.JSONException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6632/buggy-version/zerokit.src.main.java.com.tresorit.zerokit.Zerokit.java", "BodyUseAPI": ["org.json.JSONTokener.nextValue()"], "Fixed commit": "cef3b0edea54b5fad7f06fbac5f7347e49bc6d61", "Url": "https://api.github.com/repos/tresorit/ZeroKit-Android-SDK", "Date": "2017-05-04T15:24:06Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) { throw new java.lang.IllegalArgumentException(((\"Object id for \" + o) + \" is null.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4575/buggy-version/src.main.java.microsofia.rmi.impl.Registry.java", "BodyUseAPI": [], "Fixed commit": "06f2afba94261964d6e18577ed1076a91cab22bc", "Url": "https://api.github.com/repos/microsofia/microsofia-rmi", "Date": "2016-09-28T09:57:15Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(issue.isFixed())) { postProjectEvent(conversation, (((currentUser.getName()) + \" claimed \") + (issue.getReferenceAndLabel())), issue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5081/buggy-version/src.main.java.scrum.server.ScrumServiceImpl.java", "BodyUseAPI": ["scrum.server.ScrumServiceImpl.postProjectEvent(scrum.server.GwtConversation,(((currentUser.getName()) + \" claimed \") + (issue.getReferenceAndLabel())),scrum.server.issues.Issue)", "scrum.server.issues.Issue.getReferenceAndLabel()"], "Fixed commit": "91d915ee9c8baf9899b99c8e642f959386d1e60f", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2012-03-19T23:36:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((switchStatus.getSecondsLeft()) != null) res.setTimeout(switchStatus.getSecondsLeft());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6427/buggy-version/src.main.java.ge.edu.freeuni.sdp.iot.switches.sprinkler.model.SwitchCommand.java", "BodyUseAPI": ["ge.edu.freeuni.sdp.iot.switches.sprinkler.model.SwitchCommand.setTimeout(switchStatus.getSecondsLeft())", "ge.edu.freeuni.sdp.iot.switches.sprinkler.model.SwitchStatus.getSecondsLeft()"], "Fixed commit": "ef93ebce4dd396ff41ff867b0fd864d0589b3694", "Url": "https://api.github.com/repos/freeuni-sdp/iot-sprinkler-switch", "Date": "2016-06-25T11:49:42Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rhs) == 0) { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2339/buggy-version/src.Postfix.java", "BodyUseAPI": [], "Fixed commit": "2ca7e74fe16536f0f4e655c0f7c2961b4db9454a", "Url": "https://api.github.com/repos/EliGould/PostfixConverter", "Date": "2016-05-30T12:26:11Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(endpoint.startsWith(\"/\"))) { endpoint = \"/\" + endpoint; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6356/buggy-version/src.main.java.org.neo4j.server.extension.script.JRubyResource.java", "BodyUseAPI": [], "Fixed commit": "66767560b5678b9525f4de47cbede5b189cf3d0b", "Url": "https://api.github.com/repos/neo4j-contrib/script-extension", "Date": "2011-06-23T23:28:15Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != reqHeader) { injs[i] = new org.nutz.mvc.adaptor.injector.ReqHeaderInjector(reqHeader.value()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4720/buggy-version/src.org.nutz.mvc.adaptor.AbstractAdaptor.java", "BodyUseAPI": ["org.nutz.mvc.annotation.ReqHeader.value()"], "Fixed commit": "3747d73fadc6c6b2aaa128b45be7b0339fa3b97d", "Url": "https://api.github.com/repos/hzl7652/nutz", "Date": "2013-08-05T13:33:17Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item instanceof org.amahi.anywhere.server.model.ServerFile) { org.amahi.anywhere.server.model.ServerFile serverFile = ((org.amahi.anywhere.server.model.ServerFile) (item)); getFragmentManager().beginTransaction().replace(R.id.playback_controls_fragment_container, buildAudioFragment(serverFile)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/204/buggy-version/src.main.java.org.amahi.anywhere.tv.fragment.TvPlaybackAudioFragment.java", "BodyUseAPI": [], "Fixed commit": "2004ebb4324bba059575d3de52fdf756aec1b739", "Url": "https://api.github.com/repos/octacode/android", "Date": "2017-07-13T14:12:09Z"},
{"Line": "=>854", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.gorbin.asne.vk.VkSocialNetwork.12.get(com.github.gorbin.asne.vk.REQUEST_LOGIN)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (listener != null) listener.onError(getID(), com.github.gorbin.asne.vk.REQUEST_LOGIN, java.lang.String.valueOf(error), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/703/buggy-version/vk.src.main.java.com.github.gorbin.asne.vk.VkSocialNetwork.java", "BodyUseAPI": ["com.github.gorbin.asne.core.listener.base.SocialNetworkListener.onError(int,com.github.gorbin.asne.vk.REQUEST_LOGIN,java.lang.String,<nulltype>)"], "Fixed commit": "e3bf56d57a127c302361e6ce0b01f6cf68e27340", "Url": "https://api.github.com/repos/Firsto/ASNE", "Date": "2016-02-26T11:27:54Z"},
{"Line": "=>1544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aclItem == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/407/buggy-version/src.main.java.com.impossibl.postgres.jdbc.PGDatabaseMetaData.java", "BodyUseAPI": [], "Fixed commit": "0b83acb9166904b1595ac1e95d1d518224054c0b", "Url": "https://api.github.com/repos/brettwooldridge/pgjdbc-ng", "Date": "2013-11-23T20:56:07Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (documentTypeId != null) { reloadFormAfterDocumentTypeChange(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6622/buggy-version/app.src.com.constellio.app.modules.rm.ui.pages.document.AddEditDocumentPresenter.java", "BodyUseAPI": [], "Fixed commit": "f9c83023fc297aba0d7b4bb956ec319b150ebbc3", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-07-11T14:10:34Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previous) { where = (\"pubdate>'\" + (dateFm.format(current.PubDate))) + \"'\"; orderby = \"pubdate ASC, timestamp ASC\"; }else { where = (\"pubdate<'\" + (dateFm.format(current.PubDate))) + \"'\"; orderby = \"pubdate DESC, timestamp DESC\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7287/buggy-version/RssReader.src.com.lgq.rssreader.dal.BlogDalHelper.java", "BodyUseAPI": [], "Fixed commit": "dabf25cac6fe20ed080e042311304d829717a653", "Url": "https://api.github.com/repos/redelva/Android_RssReader", "Date": "2014-06-12T16:00:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["owner.read().readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (passwordCmd.toLowerCase().equals(\"quit\")) { owner.setEndOfTransmission(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5602/buggy-version/src.main.java.service.command.impl.mail.UserCommand.java", "BodyUseAPI": [], "Fixed commit": "2f95c98ee6cd278f05578a485a946e24ff8ff6a5", "Url": "https://api.github.com/repos/joseignaciosg/TPProtos2cuat2012", "Date": "2012-11-07T16:46:44Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.middleground.dao.CategoryDAO.findCategoryByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (category == null) return null; else return new com.middleground.dto.CategoryDto(category.getId(), category.getName(), category.getDescription());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7682/buggy-version/src.main.java.com.middleground.service.impl.CategoryServiceImpl.java", "BodyUseAPI": ["com.middleground.domain.Category.getId()", "com.middleground.domain.Category.getDescription()", "com.middleground.domain.Category.getName()"], "Fixed commit": "9b3fd6f07120976d1a352da5eb814b7ab51dd57d", "Url": "https://api.github.com/repos/vernozlak/middleground", "Date": "2013-03-30T19:03:56Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((play.getHealth()) == 0) { GameOverWindow gOW = new GameOverWindow(); dispose(); gOW.displayWindow(play.getName(), \"Died of starvation\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1554/buggy-version/GameplayWindow.java", "BodyUseAPI": ["Player.getName()", "GameOverWindow.displayWindow(play.getName(),java.lang.String)"], "Fixed commit": "b3f0ea2f6091a8dea9a208011cd838646d7b9aca", "Url": "https://api.github.com/repos/bsnyderman/csw-kramer-quest", "Date": "2017-10-31T14:09:33Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nonage.dao.iBatis.OrderDAO_iBatis.totalRecord(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endRow > totalRecord) endRow = totalRecord;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6080/buggy-version/src.com.nonage.dao.iBatis.OrderDAO_iBatis.java", "BodyUseAPI": [], "Fixed commit": "704099b1912ac945fc92dbd94daea761cfeaad9d", "Url": "https://api.github.com/repos/dditJspMini/mini", "Date": "2016-12-29T11:25:13Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (member_name.equals(\"\")) { member_name = \"%\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6080/buggy-version/src.com.nonage.dao.iBatis.OrderDAO_iBatis.java", "BodyUseAPI": [], "Fixed commit": "704099b1912ac945fc92dbd94daea761cfeaad9d", "Url": "https://api.github.com/repos/dditJspMini/mini", "Date": "2016-12-29T11:25:13Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["operation.getOperator().getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (id.equals(Ops.IS_NOT_NULL.getId())) { return isNotNull(((org.neo4j.cypherdsl.expression.Expression) (arg(operation.getArg(0))))); }else if (id.equals(Ops.LIKE.getId())) { return arg(operation.getArg(0)).regexp(arg(operation.getArg(1))); }else { throw new java.lang.IllegalArgumentException((((\"Unknown operator:\" + id) + \" in expression \") + operation)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/134/buggy-version/src.main.java.org.neo4j.cypherdsl.querydsl.CypherQueryDSL.java", "BodyUseAPI": ["java.lang.String.equals(Ops.LIKE.getId())"], "Fixed commit": "639042d92f7e408cc65e626572a190e8b542f99b", "Url": "https://api.github.com/repos/wouterv/cypher-dsl", "Date": "2014-02-20T09:00:48Z"},
{"Line": "=>847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSourceMm) { java.util.Map<java.lang.String, java.lang.String> tblproperties = table.getParameters(); tblproperties.put(\"transactional\", \"true\"); tblproperties.put(\"transactional_properties\", \"insert_only\"); table.setParameters(tblproperties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2694/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.parse.ImportSemanticAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "76998b91aa4795da4f96128e4b4fad4e83bac0e4", "Url": "https://api.github.com/repos/apache/hive", "Date": "2017-06-01T23:07:34Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(assignList.isEmpty())) wfInitiator = assignList.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6160/buggy-version/egov.egov-wtms.src.main.java.org.egov.wtms.application.workflow.ApplicationWorkflowCustomImpl.java", "BodyUseAPI": ["java.util.List<org.egov.eis.entity.Assignment>.get(int)"], "Fixed commit": "d222d281467f2992c7339c03129c436ad985de9f", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-08-17T06:48:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((numberStr != null) && (!(\"\".equals(numberStr)))) { mAppWidgetId = (java.lang.Integer.valueOf(intent.getData().getSchemeSpecificPart())) - (zmuzik.czechstocks.widgets.PortfolioWidgetProvider.randomNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4445/buggy-version/app.src.main.java.zmuzik.czechstocks.adapters.PortfolioAdapter.java", "BodyUseAPI": [], "Fixed commit": "6e42f1f4ae539dc2ce98ced65824de973ed59e6d", "Url": "https://api.github.com/repos/zmuzik/czech-stocks", "Date": "2015-04-14T03:49:11Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.MotionEventCompat.getActionMasked(android.view.MotionEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action == (android.view.MotionEvent.ACTION_DOWN)) { mFactorX = ev.getY(); mFactorX = ev.getY(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4334/buggy-version/library.src.main.java.com.xandy.widget.DragUpLayout.java", "BodyUseAPI": [], "Fixed commit": "596e89693af4f79ac634f754bac014b9aab213e2", "Url": "https://api.github.com/repos/XanderWang/DragUpLayout", "Date": "2016-05-04T15:48:09Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.Long, org.nesty.commons.writer.ByteArrayBuffer>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((buffer != null) && ((buffer.getOffset()) != 0)) { doWrite(buffer.getBuffer(), 0, buffer.getOffset(), true); buffer.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1742/buggy-version/commons.src.main.java.org.nesty.commons.writer.GenericFileWriter.java", "BodyUseAPI": ["org.nesty.commons.writer.GenericFileWriter.doWrite(buffer.getBuffer(),int,buffer.getOffset(),boolean)", "org.nesty.commons.writer.ByteArrayBuffer.getOffset()", "org.nesty.commons.writer.ByteArrayBuffer.clear()", "org.nesty.commons.writer.ByteArrayBuffer.getBuffer()"], "Fixed commit": "f8fbc52662d7746100b54461199854d77dc25180", "Url": "https://api.github.com/repos/gugemichael/nesty", "Date": "2017-01-24T03:47:49Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((refcount.get()) == 1) { flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1742/buggy-version/commons.src.main.java.org.nesty.commons.writer.GenericFileWriter.java", "BodyUseAPI": [], "Fixed commit": "f8fbc52662d7746100b54461199854d77dc25180", "Url": "https://api.github.com/repos/gugemichael/nesty", "Date": "2017-01-24T03:47:49Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getExtraRewardItemAmount(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (amount != 0) { return amount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/871/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.VoteSite.java", "BodyUseAPI": [], "Fixed commit": "0557c3ee1676958c47ee13ba862386f2c819e50b", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-04-04T21:11:52Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getExtraRewardMoneyAmount(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (amount != 0) { return amount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/871/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.VoteSite.java", "BodyUseAPI": [], "Fixed commit": "0557c3ee1676958c47ee13ba862386f2c819e50b", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-04-04T21:11:52Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.JavaCore.create(forFile.getProject())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (javaProject.exists()) { findInSourceFolders(findFirst, complementFileName, resources, javaProject, container); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1774/buggy-version/com.anjlab.eclipse.tapestry5.src.com.anjlab.eclipse.tapestry5.LocalTapestryContext.java", "BodyUseAPI": ["com.anjlab.eclipse.tapestry5.LocalTapestryContext.findInSourceFolders(boolean,java.lang.String,java.util.List<org.eclipse.core.resources.IFile>,org.eclipse.jdt.core.IJavaProject,org.eclipse.core.resources.IContainer)"], "Fixed commit": "984245ce4e541985b2d96853a61e12b7d6dc0a92", "Url": "https://api.github.com/repos/anjlab/eclipse-tapestry5-plugin", "Date": "2016-01-23T21:45:06Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((serviceParameter.getUrl()) == null) { serviceParameter.setUrl(serviceParameter.getIP()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7296/buggy-version/ServiceWatcher.src.main.java.com.cons.Configuration.java", "BodyUseAPI": ["com.cons.services.ServiceParameter.getIP()", "com.cons.services.ServiceParameter.setUrl(serviceParameter.getIP())"], "Fixed commit": "478bcb3dcfc7ab3d8c6b387d674b8a0f660cd2d1", "Url": "https://api.github.com/repos/gtrianta1965/ServiceWatcher", "Date": "2017-07-07T10:46:49Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bakeparser.BakeParser.BakeParserListener.bakeParserSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (iss != null) parser.parse(iss, baker);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5849/buggy-version/src.bakeparser.BakeParser.java", "BodyUseAPI": ["javax.xml.parsers.SAXParser.parse(org.xml.sax.InputSource,bakeparser.BakeParser.Baker)"], "Fixed commit": "09cc6dd5d8b88277dac1e837d79f64db3a656f82", "Url": "https://api.github.com/repos/kiriapurv/BakeParser", "Date": "2013-08-19T19:38:59Z"},
{"Line": "=>2379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSafeMediaVolumeState) != (SAFE_MEDIA_VOLUME_INACTIVE)) { mSafeMediaVolumeState = SAFE_MEDIA_VOLUME_ACTIVE; enforceSafeMediaVolume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/376/buggy-version/media.java.android.media.AudioService.java", "BodyUseAPI": [], "Fixed commit": "598d5e116cdc0244ee66d8bb32a674b6b58364b9", "Url": "https://api.github.com/repos/davros-/frameworks_base", "Date": "2013-04-17T21:36:14Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (description != null) { this.description = description; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1350/buggy-version/app.src.main.java.classexample.zhoumeasure.reference.ReferenceFragment.java", "BodyUseAPI": [], "Fixed commit": "88f4f22fe2225c2312601fcacb9118c458a75d2a", "Url": "https://api.github.com/repos/SnowyOwl-KHY/ZhouMeasure", "Date": "2015-08-08T01:22:39Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(request.getParameter(\"broadcastId\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (broadcastDAO.isOpen(broadcastId)) { com.cdk.dealersnetwork.dto.Bid bid = bidDAO.setBid(java.lang.Integer.parseInt(((java.lang.String) (request.getSession().getAttribute(\"dealerId\")))), broadcastId, java.lang.Float.parseFloat(request.getParameter(\"price\")), java.lang.Integer.parseInt(request.getParameter(\"deliveryHours\")), new java.util.Date()); return \"Bid placed, check it in your bids section\"; }else { return \"Sorry, broadcast just closed\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1897/buggy-version/src.main.java.com.cdk.dealersnetwork.controller.BidController.java", "BodyUseAPI": ["com.cdk.dealersnetwork.dao.BidDAO.setBid(int,int,float,int,java.util.Date)"], "Fixed commit": "1781b5ce232d2cc287a4433d321c53c76d3da407", "Url": "https://api.github.com/repos/chiragrtr/DealersNW", "Date": "2016-09-06T08:01:20Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.isNull()) { value.convert(defaultValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7910/buggy-version/base.core.src.main.java.leap.core.ioc.BeanConfigurator.java", "BodyUseAPI": ["leap.core.ioc.Property.convert(java.lang.String)"], "Fixed commit": "cdd8874dfadc519d3a570e4f5269aca8214507a5", "Url": "https://api.github.com/repos/leapframework/framework", "Date": "2017-01-06T06:57:15Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (head != null) { evenhead = head.next; ep = evenhead; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3860/buggy-version/odd_even_linked_list.Solution.java", "BodyUseAPI": [], "Fixed commit": "e2b40fc1bc7377485168aac3bab32d4d0e70349f", "Url": "https://api.github.com/repos/y1275963/Leetcode_Practice", "Date": "2016-02-23T15:21:46Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((absListView.getCount()) == 1) { absListView.smoothScrollToPosition(1); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1279/buggy-version/robotium-solo.src.main.java.com.robotium.solo.Scroller.java", "BodyUseAPI": ["T.smoothScrollToPosition(int)"], "Fixed commit": "0e04bd2918df59465774fbc97f7979015dcb83cf", "Url": "https://api.github.com/repos/SinnerSchraderMobileMirrors/robotium", "Date": "2014-06-15T13:20:12Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openstaxcollege.android.logic.WebviewLogic.getPDFUrl(currentContent.getBookTitle())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((pdfUrl == null) || (pdfUrl.equals(\"\"))) { android.widget.Toast.makeText(context, getString(R.string.pdf_url_missing), Toast.LENGTH_LONG).show(); }else { android.util.Log.d(\"Webview\", (\"PDF URL: \" + pdfUrl)); android.net.Uri uri = android.net.Uri.parse(pdfUrl); android.app.DownloadManager.Request request = new android.app.DownloadManager.Request(uri); request.setDestinationInExternalPublicDir((\"/\" + (getString(R.string.folder_name))), ((org.openstaxcollege.android.utils.MenuUtil.getTitle(currentContent.getBookTitle())) + \".pdf\")); request.setTitle(((currentContent.getBookTitle()) + \".pdf\")); dm.enqueue(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8145/buggy-version/app.src.main.java.org.openstaxcollege.android.activity.WebViewActivity.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "f7c541000091a98470d83cf5846e2fb85a02c6fd", "Url": "https://api.github.com/repos/Connexions/OSCAndroid", "Date": "2017-01-06T15:48:07Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.io.File.class) == type) return aQute.lib.json.JSONCodec.fh;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7272/buggy-version/aQute.libg.src.aQute.lib.json.JSONCodec.java", "BodyUseAPI": [], "Fixed commit": "40be007924aa962d75cbbc22230f823db6b7e4ce", "Url": "https://api.github.com/repos/tangyong/bnd", "Date": "2012-05-10T07:29:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.kubatatami.richedittext.styles.multi.BackgroundColorSpanController.getValueFromSpan(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (spanValue == (android.graphics.Color.TRANSPARENT)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6361/buggy-version/lib.src.main.java.com.github.kubatatami.richedittext.styles.multi.BackgroundColorSpanController.java", "BodyUseAPI": [], "Fixed commit": "37ae76caa14e39113adff6090337ba5153c277fe", "Url": "https://api.github.com/repos/kubatatami/RichEditText", "Date": "2016-02-14T14:20:23Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"number\".equals(type)) { return new com.veracloud.jton.JtonPrimitive(new com.veracloud.jton.internal.LazilyParsedNumber(text)); }else if (\"date\".equals(type)) { return new com.veracloud.jton.JtonPrimitive(javax.xml.bind.DatatypeConverter.parseDateTime(text).getTime()); }else if (\"sqldate\".equals(type)) { return new com.veracloud.jton.JtonPrimitive(new java.sql.Date(javax.xml.bind.DatatypeConverter.parseDate(text).getTime().getTime())); }else if (\"sqltime\".equals(type)) { return new com.veracloud.jton.JtonPrimitive(new java.sql.Time(javax.xml.bind.DatatypeConverter.parseDate(text).getTime().getTime())); }else if (\"sqltstamp\".equals(type)) { return new com.veracloud.jton.JtonPrimitive(new java.sql.Timestamp(javax.xml.bind.DatatypeConverter.parseDate(text).getTime().getTime())); }else { throw new com.veracloud.jton.serialization.SerializationException((\"Unknown type: \" + (type))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4123/buggy-version/src.com.veracloud.jton.serialization.XmlSerializer.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "3541fd9ec0361dfafca69e44df10aa3321d9bc09", "Url": "https://api.github.com/repos/chillblox/jton-lib", "Date": "2015-12-30T15:05:46Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.veracloud.jton.JtonElement.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value instanceof com.veracloud.jton.internal.LazilyParsedNumber) { type = \"number\"; }else if (value instanceof java.sql.Date) { type = \"sqldate\"; }else if (value instanceof java.sql.Time) { type = \"sqltime\"; }else if (value instanceof java.sql.Timestamp) { type = \"sqltstamp\"; }else { type = value.getClass().getSimpleName().toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4123/buggy-version/src.com.veracloud.jton.serialization.XmlSerializer.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getSimpleName()", "java.lang.Object.getClass()", "java.lang.String.toLowerCase()"], "Fixed commit": "3541fd9ec0361dfafca69e44df10aa3321d9bc09", "Url": "https://api.github.com/repos/chillblox/jton-lib", "Date": "2015-12-30T15:05:46Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.objecthunter.larch.service.IndexService.retrieve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((e.getVersionPaths()) == null) || (!(e.getVersionPaths().containsKey(i)))) { throw new java.io.IOException((((\"Unknown version \" + i) + \" for Entity \") + id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5486/buggy-version/larch-server.src.main.java.net.objecthunter.larch.service.impl.DefaultEntityService.java", "BodyUseAPI": [], "Fixed commit": "dd98cc55c8e7022cbcf4df45a54a955585cffe53", "Url": "https://api.github.com/repos/fasseg/larch", "Date": "2014-04-15T12:07:43Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.objecthunter.larch.service.IndexService.retrieve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (e.getVersion())) { return e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5486/buggy-version/larch-server.src.main.java.net.objecthunter.larch.service.impl.DefaultEntityService.java", "BodyUseAPI": [], "Fixed commit": "dd98cc55c8e7022cbcf4df45a54a955585cffe53", "Url": "https://api.github.com/repos/fasseg/larch", "Date": "2014-04-15T12:07:43Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.dba.html.CsdnFetcher.fetchUrlDoc(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (detailDoc == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6898/buggy-version/src.main.java.com.github.dba.html.CsdnFetcher.java", "BodyUseAPI": [], "Fixed commit": "2a0edd537084f0036820ed655d93a24bfd579869", "Url": "https://api.github.com/repos/zhaozhiming/department-blogs-analyser", "Date": "2014-06-02T04:48:09Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readRemaining < 0) bytesRead = ((int) (readRemaining)) + bytesRead;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1737/buggy-version/Downloader.java", "BodyUseAPI": [], "Fixed commit": "2c37ed8cf27dfb64a711745fff02e1224c425af6", "Url": "https://api.github.com/repos/activatedgeek/DownloadPlus", "Date": "2014-11-29T10:36:40Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.imageio.ImageIO.read(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (img.getColorModel().toString().contains(\"has alpha = false\")) { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_RGB); }else { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_ARGB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4557/buggy-version/src.androidresizer.AResizerFrame.java", "BodyUseAPI": [], "Fixed commit": "b0141389203c9536484ed350814290f5b88aecb8", "Url": "https://api.github.com/repos/BlitzKraig/AndroidResizer", "Date": "2014-10-16T16:56:13Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.imageio.ImageIO.read(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (img.getColorModel().toString().contains(\"has alpha = false\")) { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_RGB); }else { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_ARGB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4557/buggy-version/src.androidresizer.AResizerFrame.java", "BodyUseAPI": [], "Fixed commit": "b0141389203c9536484ed350814290f5b88aecb8", "Url": "https://api.github.com/repos/BlitzKraig/AndroidResizer", "Date": "2014-10-16T16:56:13Z"},
{"Line": "=>710", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.imageio.ImageIO.read(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (img.getColorModel().toString().contains(\"has alpha = false\")) { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_RGB); }else { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_ARGB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4557/buggy-version/src.androidresizer.AResizerFrame.java", "BodyUseAPI": [], "Fixed commit": "b0141389203c9536484ed350814290f5b88aecb8", "Url": "https://api.github.com/repos/BlitzKraig/AndroidResizer", "Date": "2014-10-16T16:56:13Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.imageio.ImageIO.read(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (img.getColorModel().toString().contains(\"has alpha = false\")) { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_RGB); }else { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_ARGB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4557/buggy-version/src.androidresizer.AResizerFrame.java", "BodyUseAPI": [], "Fixed commit": "b0141389203c9536484ed350814290f5b88aecb8", "Url": "https://api.github.com/repos/BlitzKraig/AndroidResizer", "Date": "2014-10-16T16:56:13Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.imageio.ImageIO.read(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (img.getColorModel().toString().contains(\"has alpha = false\")) { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_RGB); }else { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_ARGB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4557/buggy-version/src.androidresizer.AResizerFrame.java", "BodyUseAPI": [], "Fixed commit": "b0141389203c9536484ed350814290f5b88aecb8", "Url": "https://api.github.com/repos/BlitzKraig/AndroidResizer", "Date": "2014-10-16T16:56:13Z"},
{"Line": "=>769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.imageio.ImageIO.read(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (img.getColorModel().toString().contains(\"has alpha = false\")) { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_RGB); }else { bImage = new java.awt.image.BufferedImage(newImg.getWidth(null), newImg.getHeight(null), java.awt.image.BufferedImage.TYPE_INT_ARGB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4557/buggy-version/src.androidresizer.AResizerFrame.java", "BodyUseAPI": [], "Fixed commit": "b0141389203c9536484ed350814290f5b88aecb8", "Url": "https://api.github.com/repos/BlitzKraig/AndroidResizer", "Date": "2014-10-16T16:56:13Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.languagetool.tokenizers.de.GermanCompoundTokenizer.tokenize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((compoundedWord.size()) > 1) { word = org.languagetool.tools.StringTools.uppercaseFirstChar(compoundedWord.get(((compoundedWord.size()) - 1))); }else { word = compoundedWord.get(((compoundedWord.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7153/buggy-version/languagetool-language-modules.de.src.main.java.org.languagetool.tagging.de.GermanTagger.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)", "org.languagetool.tools.StringTools.uppercaseFirstChar(java.lang.String)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "c5fe3ce80e3fc97184e313a64026d549e83c5f4e", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2017-09-18T16:55:02Z"},
{"Line": "=>1136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callSite instanceof soot.jimple.DefinitionStmt) { soot.jimple.DefinitionStmt defnStmt = ((soot.jimple.DefinitionStmt) (callSite)); soot.Value leftOp = defnStmt.getLeftOp(); originalCallArg = defnStmt.getInvokeExpr().getArg(i); if (originalCallArg == leftOp) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3220/buggy-version/src.soot.jimple.infoflow.problems.InfoflowProblem.java", "BodyUseAPI": [], "Fixed commit": "a28983537c2b8aa21147ca279fa0351db0e8e316", "Url": "https://api.github.com/repos/jgarci40/soot-infoflow", "Date": "2014-10-29T08:37:04Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jenkins == null) { throw new java.lang.RuntimeException(\"Jenkins not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7482/buggy-version/src.main.java.com.srcclr.jenkins.installer.SrcclrUpdateSitePlugin.java", "BodyUseAPI": [], "Fixed commit": "7788fdfb92a9a1174d427938870ac606f228116c", "Url": "https://api.github.com/repos/srcclr/srcclr-installer-plugin", "Date": "2016-05-06T23:21:12Z"},
{"Line": "=>2409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((org.jaudiotagger.tag.id3.FrameBodyUFID) (next)).getUniqueIdentifier()) != null) { values.add(new java.lang.String(((org.jaudiotagger.tag.id3.FrameBodyUFID) (next)).getUniqueIdentifier())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4450/buggy-version/src.org.jaudiotagger.tag.id3.AbstractID3v2Tag.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "org.jaudiotagger.tag.id3.AbstractTagFrameBody.getUniqueIdentifier()"], "Fixed commit": "b6e9e1efc9a2b736519871649447854bf46ca00c", "Url": "https://api.github.com/repos/maxbruecken/jaudiotagger-android", "Date": "2015-02-09T05:40:29Z"},
{"Line": "=>2434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { values.add(entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4450/buggy-version/src.org.jaudiotagger.tag.id3.AbstractID3v2Tag.java", "BodyUseAPI": ["org.jaudiotagger.tag.id3.Pair.getValue()", "java.util.List<java.lang.String>.add(entry.getValue())"], "Fixed commit": "b6e9e1efc9a2b736519871649447854bf46ca00c", "Url": "https://api.github.com/repos/maxbruecken/jaudiotagger-android", "Date": "2015-02-09T05:40:29Z"},
{"Line": "=>2421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { values.add(entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4450/buggy-version/src.org.jaudiotagger.tag.id3.AbstractID3v2Tag.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(entry.getValue())", "org.jaudiotagger.tag.id3.Pair.getValue()"], "Fixed commit": "b6e9e1efc9a2b736519871649447854bf46ca00c", "Url": "https://api.github.com/repos/maxbruecken/jaudiotagger-android", "Date": "2015-02-09T05:40:29Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.outputStream) != null) { final java.io.OutputStream outputStream = this.outputStream; updateWriter(outputStream, encoding); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5418/buggy-version/src.main.java.org.jboss.logmanager.handlers.OutputStreamHandler.java", "BodyUseAPI": [], "Fixed commit": "4428d7b7a985222b5acdbcc034eb3d0ba5df504c", "Url": "https://api.github.com/repos/onagano-rh/jboss-logmanager", "Date": "2013-08-09T09:27:45Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((colors.length) - 1)) c = colors[i]; else c = colors[(i + 1)];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6311/buggy-version/src.lessons.welcome.loopfor.LoopCourseForestEntity.java", "BodyUseAPI": [], "Fixed commit": "4e6ab43b4c5cd509a928de542f18cbf421c7353f", "Url": "https://api.github.com/repos/FredMaranhao/PLM", "Date": "2014-09-08T19:47:45Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (endDate != null) { javax.persistence.criteria.Expression expression = root.get(\"createdOn\"); if (startDate == null) { cq.where(cb.lessThanOrEqualTo(expression, endDate.getTime())); }else { cq.where(cb.and(cq.getRestriction(), cb.lessThanOrEqualTo(expression, endDate.getTime()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4662/buggy-version/Fuse.qlack2-fuse-auditing.qlack2-fuse-auditing-impl.src.main.java.com.eurodyn.qlack2.fuse.auditing.impl.AuditLoggingServiceImpl.java", "BodyUseAPI": ["javax.persistence.criteria.CriteriaBuilder.lessThanOrEqualTo(javax.persistence.criteria.Expression,long)", "javax.persistence.criteria.CriteriaBuilder.lessThanOrEqualTo(javax.persistence.criteria.Expression,long)", "javax.persistence.criteria.CriteriaQuery<T>.where(cb.lessThanOrEqualTo(expression, endDate.getTime()))", "javax.persistence.criteria.CriteriaQuery<T>.where(cb.and(cq.getRestriction(), cb.lessThanOrEqualTo(expression, endDate.getTime())))", "java.util.Date.getTime()", "javax.persistence.criteria.CriteriaBuilder.and(cq.getRestriction(),cb.lessThanOrEqualTo(expression, endDate.getTime()))", "java.util.Date.getTime()"], "Fixed commit": "2a427e784ac75f0bd0fc406761f343767a333456", "Url": "https://api.github.com/repos/clebesis/Qlack2", "Date": "2017-05-12T13:37:32Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((com.codename1.ui.List) (popup.getComponentAt(0))).getModel().getSize()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2782/buggy-version/CodenameOne.src.com.codename1.ui.AutoCompleteTextField.java", "BodyUseAPI": [], "Fixed commit": "784e107564627d730c45ba748140d2117eda9719", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-05-10T16:24:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ranks.equals(\"\")) return set;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4472/buggy-version/src.main.java.edu.indiana.soic.spidal.configuration.sections.BlockMergerSection.java", "BodyUseAPI": [], "Fixed commit": "13a06b41ee46e03f62a23d38d62e131f526c1196", "Url": "https://api.github.com/repos/DSC-SPIDAL/dapwc", "Date": "2017-09-06T19:00:25Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line) != null) { unreadLines.add(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5923/buggy-version/embulk-standards.src.main.java.org.embulk.standards.CsvTokenizer.java", "BodyUseAPI": [], "Fixed commit": "bfed87af672091776a61e6330427bb316aed9c3c", "Url": "https://api.github.com/repos/embulk/embulk", "Date": "2015-08-20T19:05:30Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.lang.Boolean>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (hasPerm == null) { java.lang.Boolean newPerm = minecraftAPI.playerIdHasPermission(playerId, permString); playerPermCache.putIfAbsent(permString, newPerm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7303/buggy-version/src.main.java.com.pwn9.filter.bukkit.BukkitPlayer.java", "BodyUseAPI": [], "Fixed commit": "628e8f0f6cdb766d073f82856772ea88a2e7ff48", "Url": "https://api.github.com/repos/Pwn9/PwnFilter", "Date": "2016-05-13T13:13:18Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.habzy.image.models.ViewParams.ShownStyle.Pick_Single) == (mParams.getShownStyle())) { mModelsList.get(mCurrentItem).isSeleted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2933/buggy-version/source.src.com.habzy.image.viewpager.wrap.ViewPagerDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "927a66fa75838381ae45a33e917272717289c7dd", "Url": "https://api.github.com/repos/habzy/GridImagePicker", "Date": "2014-10-22T09:51:17Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((current.getWindAngle()) != (Conditions.INVALID_DIRECTION)) { int dir = windDirCount.get(current.getWindAngle().trim()); ++dir; windDirCount.put(current.getWindAngle().trim(), dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4337/buggy-version/gui.pa2.DataCalculator.java", "BodyUseAPI": ["gui.pa2.Conditions.getWindAngle()", "java.util.TreeMap<java.lang.String, java.lang.Integer>.put(current.getWindAngle().trim(),int)", "java.util.TreeMap<java.lang.String, java.lang.Integer>.get(current.getWindAngle().trim())", "current.getWindAngle().trim()", "gui.pa2.Conditions.getWindAngle()", "current.getWindAngle().trim()"], "Fixed commit": "c8dde37fda4771ac7dae44abbfa779158faf2316", "Url": "https://api.github.com/repos/nilam/JavaWeatherStation-SDSM-T-", "Date": "2011-11-20T19:35:50Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AppGlobals.checkingInternet) { android.widget.Toast.makeText(com.byteshaft.locationupdate.MainActivity.getInstance(), getResources().getString(R.string.no_internet), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1328/buggy-version/app.src.main.java.com.byteshaft.locationupdate.LocationService.java", "BodyUseAPI": [], "Fixed commit": "e1d121b3d780d736fb2ac7d95a3e761ac0858954", "Url": "https://api.github.com/repos/byteShaft/location_tracker", "Date": "2017-08-16T09:37:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (diff == 0) return sum;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/661/buggy-version/Algorithms.src.leet.problem_16.ThreeSum_Closest.java", "BodyUseAPI": [], "Fixed commit": "a94dc4d7f43f2615e75f50994338d08d56a0e685", "Url": "https://api.github.com/repos/arvindiy/Practise", "Date": "2017-11-16T01:55:03Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (jmsMessage != null) { jmsMessage.setJMSDeliveryMode(Message.DEFAULT_DELIVERY_MODE); jmsMessage.setJMSPriority(Message.DEFAULT_PRIORITY); jmsMessage.setJMSExpiration(Message.DEFAULT_TIME_TO_LIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4177/buggy-version/jms.org.wso2.carbon.transport.jms.src.main.java.org.wso2.carbon.transport.jms.sender.JMSClientConnectorImpl.java", "BodyUseAPI": ["javax.jms.Message.setJMSDeliveryMode(Message.DEFAULT_DELIVERY_MODE)", "javax.jms.Message.setJMSExpiration(Message.DEFAULT_TIME_TO_LIVE)", "javax.jms.Message.setJMSPriority(Message.DEFAULT_PRIORITY)"], "Fixed commit": "b02c366864a986b2fdef557fa4dd3cb49fe0abe5", "Url": "https://api.github.com/repos/erandacr/carbon-transports", "Date": "2017-10-01T16:10:30Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItemMainhand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (stack != null ? ((stack.getItem()) == (tschipp.carryon.common.handler.RegistrationHandler.itemTile)) && (tschipp.carryon.common.item.ItemTile.hasTileData(stack)) : false) { net.minecraft.block.Block block = tschipp.carryon.common.item.ItemTile.getBlock(stack); net.minecraft.block.state.IBlockState state = tschipp.carryon.common.item.ItemTile.getBlockState(stack); net.minecraft.nbt.NBTTagCompound tag = tschipp.carryon.common.item.ItemTile.getTileData(stack); net.minecraft.item.ItemStack tileItem = tschipp.carryon.common.item.ItemTile.getItemStack(stack); net.minecraft.entity.item.EntityItem entityItem = new net.minecraft.entity.item.EntityItem(net.minecraft.client.Minecraft.getMinecraft().theWorld, 0, 0, 0); entityItem.hoverStart = 0; entityItem.setEntityItemStack(tileItem); float rotation = -(player.renderYawOffset); int perspective = net.minecraft.client.Minecraft.getMinecraft().gameSettings.thirdPersonView; double d0 = (player.lastTickPosX) + (((player.posX) - (player.lastTickPosX)) * ((double) (partialticks))); double d1 = (player.lastTickPosY) + (((player.posY) - (player.lastTickPosY)) * ((double) (partialticks))); double d2 = (player.lastTickPosZ) + (((player.posZ) - (player.lastTickPosZ)) * ((double) (partialticks))); double c0 = (clientPlayer.lastTickPosX) + (((clientPlayer.posX) - (clientPlayer.lastTickPosX)) * ((double) (partialticks))); double c1 = (clientPlayer.lastTickPosY) + (((clientPlayer.posY) - (clientPlayer.lastTickPosY)) * ((double) (partialticks))); double c2 = (clientPlayer.lastTickPosZ) + (((clientPlayer.posZ) - (clientPlayer.lastTickPosZ)) * ((double) (partialticks))); double xOffset = d0 - c0; double yOffset = d1 - c1; double zOffset = d2 - c2; net.minecraft.client.renderer.GlStateManager.pushMatrix(); net.minecraft.client.renderer.GlStateManager.translate(xOffset, yOffset, zOffset); net.minecraft.client.renderer.GlStateManager.scale(0.6, 0.6, 0.6); if (CarryOnConfig.settings.facePlayer ? !(tschipp.carryon.client.event.RenderEvents.isChest(block)) : tschipp.carryon.client.event.RenderEvents.isChest(block)) { net.minecraft.client.renderer.GlStateManager.rotate(rotation, 0, 1.0F, 0); net.minecraft.client.renderer.GlStateManager.translate(0, 1.6, 0.65); }else { net.minecraft.client.renderer.GlStateManager.rotate((rotation + 180), 0, 1.0F, 0); net.minecraft.client.renderer.GlStateManager.translate(0, 1.6, (-0.65)); } if (player.isSneaking()) net.minecraft.client.renderer.GlStateManager.translate(0, (-0.3), 0); net.minecraft.client.renderer.block.model.IBakedModel model = (tschipp.carryon.common.handler.ModelOverridesHandler.hasCustomOverrideModel(state, tag)) ? tschipp.carryon.common.handler.ModelOverridesHandler.getCustomOverrideModel(state, tag, world, player) : net.minecraft.client.Minecraft.getMinecraft().getRenderItem().getItemModelWithOverrides((tileItem == null ? stack : tileItem), world, player); if (tschipp.carryon.common.handler.ModelOverridesHandler.hasCustomOverrideModel(state, tag)) { java.lang.Object override = tschipp.carryon.common.handler.ModelOverridesHandler.getOverrideObject(state, tag); if (override instanceof net.minecraft.item.ItemStack) { net.minecraft.client.Minecraft.getMinecraft().getRenderItem().renderItem(((net.minecraft.item.ItemStack) (override)), model); }else net.minecraft.client.Minecraft.getMinecraft().getRenderItem().renderItem((tileItem == null ? stack : tileItem), model); }else net.minecraft.client.Minecraft.getMinecraft().getRenderItem().renderItem((tileItem == null ? stack : tileItem), model); net.minecraft.client.renderer.GlStateManager.scale(1, 1, 1); net.minecraft.client.renderer.GlStateManager.popMatrix(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6035/buggy-version/src.main.java.tschipp.carryon.client.event.RenderEvents.java", "BodyUseAPI": ["tschipp.carryon.common.item.ItemTile.getBlockState(net.minecraft.item.ItemStack)", "tschipp.carryon.common.item.ItemTile.getTileData(net.minecraft.item.ItemStack)", "net.minecraft.client.Minecraft.getMinecraft().getRenderItem().renderItem((tileItem == null ? stack : tileItem),net.minecraft.client.renderer.block.model.IBakedModel)", "net.minecraft.client.Minecraft.getMinecraft().getRenderItem().renderItem((tileItem == null ? stack : tileItem),net.minecraft.client.renderer.block.model.IBakedModel)", "tschipp.carryon.common.item.ItemTile.getItemStack(net.minecraft.item.ItemStack)", "tschipp.carryon.common.item.ItemTile.getBlock(net.minecraft.item.ItemStack)", "net.minecraft.client.Minecraft.getMinecraft().getRenderItem().getItemModelWithOverrides((tileItem == null ? stack : tileItem),net.minecraft.world.World,net.minecraft.entity.player.EntityPlayer)"], "Fixed commit": "a1c4313e502536ddb446e8bdeb6e7c12fe297bfc", "Url": "https://api.github.com/repos/Tschipp/CarryOn", "Date": "2017-08-27T20:23:02Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.getSolver().getExplainer().explain(ce).getCauses()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (causes.isEmpty()) { if ((ce.c) instanceof org.chocosolver.solver.constraints.Propagator) { org.chocosolver.solver.constraints.Constraint cnstr = ((org.chocosolver.solver.constraints.Propagator) (ce.c)).getConstraint(); if (expl_map.containsKey(cnstr)) { expls.add(expl_map.get(cnstr)); } }else { it.cnr.istc.sponsor.solver.sponsorsolver.ChocoSolver.LOG.log(java.util.logging.Level.SEVERE, \"Unrecognized cause: {0}\", ce.c.getClass().getName()); } }else { for (org.chocosolver.solver.ICause c : causes) { if (c instanceof org.chocosolver.solver.constraints.Propagator) { org.chocosolver.solver.constraints.Constraint cnstr = ((org.chocosolver.solver.constraints.Propagator) (c)).getConstraint(); if (expl_map.containsKey(cnstr)) { expls.add(expl_map.get(cnstr)); } }else { it.cnr.istc.sponsor.solver.sponsorsolver.ChocoSolver.LOG.log(java.util.logging.Level.SEVERE, \"Unrecognized cause: {0}\", c.getClass().getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2529/buggy-version/src.main.java.it.cnr.istc.sponsor.solver.sponsorsolver.ChocoSolver.java", "BodyUseAPI": [], "Fixed commit": "efe9339e1a290d573b1593742a29d27f2286bc99", "Url": "https://api.github.com/repos/pstlab/SpONSORSolver", "Date": "2017-06-13T16:25:44Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fmd.getValueCount()) == 0) { v.clear(); }else { v.load(fmd, buf.slice(bufOffset, fmd.getBufferLength())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2290/buggy-version/sandbox.prototype.exec.java-exec.src.main.java.org.apache.drill.exec.record.RecordBatchLoader.java", "BodyUseAPI": ["org.apache.drill.exec.vector.ValueVector.load(org.apache.drill.exec.proto.UserBitShared.FieldMetadata,buf.slice(bufOffset, fmd.getBufferLength()))", "org.apache.drill.exec.proto.UserBitShared.FieldMetadata.getBufferLength()", "io.netty.buffer.ByteBuf.slice(int,fmd.getBufferLength())"], "Fixed commit": "7aa4e9b18aa1210e53dc94b1f881ddf4e7b01aa6", "Url": "https://api.github.com/repos/linuxN00b92/incubator-drill", "Date": "2013-07-30T23:43:16Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scrollable.exists())) { io.appium.android.bootstrap.Logger.debug((\"Not scrolling because scrollable does not exist: \" + (scrollable.getSelector()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1195/buggy-version/bootstrap.src.io.appium.android.bootstrap.utils.UiScrollableParser.java", "BodyUseAPI": ["com.android.uiautomator.core.UiScrollable.getSelector()", "io.appium.android.bootstrap.Logger.debug((\"Not scrolling because scrollable does not exist: \" + (scrollable.getSelector())))"], "Fixed commit": "5fd6082d17f280c0c753dbdeacf213c0420e0f90", "Url": "https://api.github.com/repos/ngsankha/appium-android-bootstrap", "Date": "2015-10-21T16:31:40Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resultMapping.containsKey(key)) && (filteredMappings.contains(key))) { resultMapping.remove(key); }else if (((resultMapping.containsKey(key)) && (!(filteredMappings.contains(key)))) && (!(cm.get(key).equals(resultMapping.get(key))))) { filteredMappings.add(key); resultMapping.remove(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5787/buggy-version/org.apache.flink.sca.src.main.java.org.apache.flink.sca.UdfAnalyzer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, org.apache.flink.sca.TaggedValue>.remove(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.HashMap<java.lang.String, org.apache.flink.sca.TaggedValue>.remove(java.lang.String)", "cm.get(key).equals(resultMapping.get(key))", "java.util.HashMap<java.lang.String, org.apache.flink.sca.TaggedValue>.get(java.lang.String)", "java.util.Map<java.lang.String, org.apache.flink.sca.TaggedValue>.get(java.lang.String)", "java.util.List<java.lang.String>.contains(java.lang.String)", "java.util.HashMap<java.lang.String, org.apache.flink.sca.TaggedValue>.containsKey(java.lang.String)"], "Fixed commit": "9b77308c30468b8d9522d749d4bb661e30a0dd8c", "Url": "https://api.github.com/repos/twalthr/flink", "Date": "2015-03-17T15:32:23Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((uri.indexOf(\"//\")) != (-1)) { super.renderResponseError400(request, response, queryParam); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4329/buggy-version/source.whois.src.com.cnnic.whois.controller.QueryController.java", "BodyUseAPI": [], "Fixed commit": "950a9fd8f9bd8322c652aa7435a764534c2c9d99", "Url": "https://api.github.com/repos/cnnic/restfulwhois", "Date": "2014-03-04T03:14:46Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (com.thinkaurelius.faunus.formats.titan.GraphFactory.graph)) com.thinkaurelius.faunus.formats.titan.GraphFactory.graph = com.thinkaurelius.titan.core.TitanFactory.open(com.thinkaurelius.faunus.formats.titan.GraphFactory.generateTitanConfiguration(config, prefix));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8873/buggy-version/src.main.java.com.thinkaurelius.faunus.formats.titan.GraphFactory.java", "BodyUseAPI": [], "Fixed commit": "e6a8bda1263969d5976dd053871c631c059eea2e", "Url": "https://api.github.com/repos/thinkaurelius/faunus", "Date": "2013-02-01T19:31:19Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((instance != null) && ((instance.getPluginManager()) != null)) { return instance.getPluginManager().getPlugin(\"tfs\").getVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9206/buggy-version/tfs.src.main.java.hudson.plugins.tfs.telemetry.TelemetryContextInitializer.java", "BodyUseAPI": ["instance.getPluginManager().getPlugin(java.lang.String)", "jenkins.model.Jenkins.getPluginManager()", "instance.getPluginManager().getPlugin(\"tfs\").getVersion()"], "Fixed commit": "c728860cbd8404b3e981c40f25ba354b8eaee50c", "Url": "https://api.github.com/repos/pvandervelde/tfs-plugin", "Date": "2017-06-23T19:55:08Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { sk.pluk64.unibakonto.Utils.showNoInternetConnection(getActivity().getApplicationContext()); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5363/buggy-version/unibakonto.src.main.java.sk.pluk64.unibakonto.fragments.menu.MenuFragment.java", "BodyUseAPI": [], "Fixed commit": "1f00fd7e5d598967926c0cbf280b43d34a9efedd", "Url": "https://api.github.com/repos/PaLy/UniBA-konto", "Date": "2017-05-23T21:49:58Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathToFopInstallationDir == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8036/buggy-version/src.org.intellij.lang.xslfo.XslFoUtils.java", "BodyUseAPI": [], "Fixed commit": "27e2c73824f9cdd14d77e76dfa37e671f7788749", "Url": "https://api.github.com/repos/dmitry-cherkas/intellij-xslfo-support", "Date": "2015-11-23T19:49:11Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (runningTasks.containsKey(taskProcess.getTaskId())) { infraManager.releaseResource(runningTasks.get(taskProcess.getTaskId())); runningTasks.remove(taskProcess.getTaskId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3043/buggy-version/src.main.java.org.fogbowcloud.blowout.scheduler.core.Scheduler.java", "BodyUseAPI": ["org.fogbowcloud.blowout.scheduler.core.model.TaskProcess.getTaskId()", "java.util.Map<java.lang.String, org.fogbowcloud.blowout.scheduler.core.model.Resource>.get(taskProcess.getTaskId())", "java.util.Map<java.lang.String, org.fogbowcloud.blowout.scheduler.core.model.Resource>.remove(taskProcess.getTaskId())", "org.fogbowcloud.blowout.scheduler.infrastructure.InfrastructureManager.releaseResource(runningTasks.get(taskProcess.getTaskId()))", "org.fogbowcloud.blowout.scheduler.core.model.TaskProcess.getTaskId()"], "Fixed commit": "dfa9f580c529d1143c0260b0271dbb723244ded7", "Url": "https://api.github.com/repos/fogbow/blowout", "Date": "2016-09-16T19:18:34Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((params.aid) != null) && ((params.aid.getAudioProperties().getNumberOfChannels()) >= 8)) && ((params.aid.isAACLC()) || (params.aid.isHEAAC()))) { transcodeOptions.add(\"-strict\"); transcodeOptions.add(\"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9193/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "fad2d3e361e9014679786fe74e6828b287bd9480", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-11-16T03:12:46Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotBlank(value)) { currentAudioTrack.getAudioProperties().setNumberOfChannels(net.pms.dlna.LibMediaInfoParser.MI.Get(audio, i, \"Channel(s)_Original\")); }else { currentAudioTrack.getAudioProperties().setNumberOfChannels(net.pms.dlna.LibMediaInfoParser.MI.Get(audio, i, \"Channel(s)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9193/buggy-version/src.main.java.net.pms.dlna.LibMediaInfoParser.java", "BodyUseAPI": [], "Fixed commit": "fad2d3e361e9014679786fe74e6828b287bd9480", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-11-16T03:12:46Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.isKeyDown(input.KEY_A)) && (input.isKeyDown(input.KEY_D))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3255/buggy-version/src.characters.Player.java", "BodyUseAPI": [], "Fixed commit": "71095b78af2e94e148a1e7774d9a7bea031d5960", "Url": "https://api.github.com/repos/Dzejrou/Taco-Eating-Jose", "Date": "2015-05-08T20:03:49Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object instanceof java.lang.Iterable) { for (java.lang.Object obj : ((java.lang.Iterable) (object))) { com.jsonrpclib.JsonConnector.verifyResultObject(obj, obj.getClass()); } }else { for (java.lang.reflect.Field field : object.getClass().getFields()) { try { field.setAccessible(true); if ((field.get(object)) == null) { if (field.isAnnotationPresent(com.jsonrpclib.JsonRequired.class)) { throw new com.jsonrpclib.JsonException(((((\"Field \" + (object.getClass().getName())) + \".\") + (field.getName())) + \" required.\")); } }else if (field.getType().isAnnotationPresent(com.jsonrpclib.JsonRequired.class)) { java.lang.Object iterableObject = field.get(object); if (iterableObject instanceof java.lang.Iterable) { for (java.lang.Object obj : ((java.lang.Iterable) (iterableObject))) { com.jsonrpclib.JsonConnector.verifyResultObject(obj, obj.getClass()); } }else { com.jsonrpclib.JsonConnector.verifyResultObject(field.get(object), field.getType()); } } } catch (java.lang.IllegalAccessException e) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9188/buggy-version/src.com.jsonrpclib.JsonConnector.java", "BodyUseAPI": ["java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.Class<? extends java.lang.Object>.getFields()", "com.jsonrpclib.JsonConnector.verifyResultObject(java.lang.Object,java.lang.Class<?>)", "java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()", "java.lang.Object.getClass()"], "Fixed commit": "c2ebd6ce2430cd16821e34866ee90e38b721dd47", "Url": "https://api.github.com/repos/kubatatami/JsonCallbacks", "Date": "2013-09-11T13:21:50Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.getType().isAnnotationPresent(com.jsonrpclib.JsonRequired.class)) { java.lang.Object iterableObject = field.get(object); if (iterableObject instanceof java.lang.Iterable) { for (java.lang.Object obj : ((java.lang.Iterable) (iterableObject))) { com.jsonrpclib.JsonConnector.verifyResultObject(obj, obj.getClass()); } }else { com.jsonrpclib.JsonConnector.verifyResultObject(field.get(object), field.getType()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9188/buggy-version/src.com.jsonrpclib.JsonConnector.java", "BodyUseAPI": ["java.lang.reflect.Field.get(java.lang.Object)", "com.jsonrpclib.JsonConnector.verifyResultObject(java.lang.Object,java.lang.Class<?>)", "java.lang.reflect.Field.getType()", "java.lang.reflect.Field.get(java.lang.Object)"], "Fixed commit": "c2ebd6ce2430cd16821e34866ee90e38b721dd47", "Url": "https://api.github.com/repos/kubatatami/JsonCallbacks", "Date": "2013-09-11T13:21:50Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getEntityManager().find(java.lang.Class,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.getContentSpec()) != null) { node.getContentSpec().removeChild(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2459/buggy-version/database-provider.src.main.java.org.jboss.pressgang.ccms.provider.DBCSNodeProvider.java", "BodyUseAPI": ["node.getContentSpec().removeChild(org.jboss.pressgang.ccms.model.contentspec.CSNode)", "org.jboss.pressgang.ccms.model.contentspec.CSNode.getContentSpec()"], "Fixed commit": "bd2e5ec68a4f794d62ced0956f1c6577a379707b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSDatasourceProviders", "Date": "2014-07-25T00:02:57Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getEntityManager().find(java.lang.Class,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.getContentSpec()) != null) { node.getContentSpec().removeChild(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2459/buggy-version/database-provider.src.main.java.org.jboss.pressgang.ccms.provider.DBCSNodeProvider.java", "BodyUseAPI": ["node.getContentSpec().removeChild(org.jboss.pressgang.ccms.model.contentspec.CSNode)", "org.jboss.pressgang.ccms.model.contentspec.CSNode.getContentSpec()"], "Fixed commit": "bd2e5ec68a4f794d62ced0956f1c6577a379707b", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSDatasourceProviders", "Date": "2014-07-25T00:02:57Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.team8.PerformanceManagement.PM.new_period) == (-1)) { com.team8.PerformanceManagement.PM.period = period; com.team8.PerformanceManagement.PM.periodUnit = periodUnit; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/297/buggy-version/PM.src.com.team8.PerformanceManagement.PM.java", "BodyUseAPI": [], "Fixed commit": "d1a9cade0fce6e8d6e448a266e53483446be2562", "Url": "https://api.github.com/repos/TJSoftwareReuse/2012T08", "Date": "2015-05-29T07:38:49Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBeingDragged) { if ((puppet) != null) { day = puppet.day; int previous = (displayable.getStart().getDayOfWeek()) % 7; if ((day) > previous) updateTime(displayable.getStart().plusDays(((day) - previous))); if (previous > (day)) updateTime(displayable.getStart().minusDays((previous - (day)))); } displayable.update(); edu.wpi.cs.wpisuitetng.modules.cal.ui.main.MainPanel.getInstance().display(displayable.getStart()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4813/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.cal.ui.views.day.collisiondetection.DayItem.java", "BodyUseAPI": [], "Fixed commit": "71e3c13729b92ef8e5fad76eba9b382b210f4a0b", "Url": "https://api.github.com/repos/cs3733-team4/wpi-suite", "Date": "2013-12-18T06:36:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dankeroni.dankbot.Utils.makeArgs(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((messageArgs.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8637/buggy-version/src.main.java.com.dankeroni.dankbot.modules.Raffle.java", "BodyUseAPI": [], "Fixed commit": "d293ac417ebb56a41c91aa393fe1d20e5ea2130e", "Url": "https://api.github.com/repos/dankeroni/dankbot", "Date": "2016-05-10T13:51:57Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.digitolio.jdbi.codegen.experimental.H2Generator.orderClasses(java.util.Set<java.lang.Class<?>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (classes.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5640/buggy-version/src.main.java.com.digitolio.jdbi.codegen.experimental.H2Generator.java", "BodyUseAPI": [], "Fixed commit": "e06aa7cf6371c4d31ac4b440747988c1ef7920fe", "Url": "https://api.github.com/repos/cemo/jdbi-codegen", "Date": "2013-10-12T12:53:56Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.digitolio.jdbi.codegen.Scanner.scanPackage(java.lang.String,CodeGen.CODE_GEN)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (classes.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5640/buggy-version/src.main.java.com.digitolio.jdbi.codegen.codemodel.DAOGeneratorExec.java", "BodyUseAPI": [], "Fixed commit": "e06aa7cf6371c4d31ac4b440747988c1ef7920fe", "Url": "https://api.github.com/repos/cemo/jdbi-codegen", "Date": "2013-10-12T12:53:56Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((w < 1) || (h < 1)) { return resizedImg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6/buggy-version/src.PhotoVis.src.PhotoViewer.java", "BodyUseAPI": [], "Fixed commit": "09acf985247a9d2af2eff77d232c92defd5a36fb", "Url": "https://api.github.com/repos/sasinghi/PhotoVis", "Date": "2017-03-27T15:46:44Z"},
{"Line": "=>1464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentOverlaps.size()) > 0) { ResolveOverlapsSemantic(((javax.swing.JPanel) (pane)), src.PhotoViewer.images, false, clicked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6/buggy-version/src.PhotoVis.src.PhotoViewer.java", "BodyUseAPI": [], "Fixed commit": "09acf985247a9d2af2eff77d232c92defd5a36fb", "Url": "https://api.github.com/repos/sasinghi/PhotoVis", "Date": "2017-03-27T15:46:44Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((enemyX > 495) && (enemyX < 505)) { setX((((rnd.nextDouble()) * (com.codecool.snake.Globals.WINDOW_WIDTH)) + 15)); }else if ((enemyY > 495) && (enemyY < 505)) { setY((((rnd.nextDouble()) * (com.codecool.snake.Globals.WINDOW_HEIGHT)) + 15)); }else { setX(((rnd.nextDouble()) * (com.codecool.snake.Globals.WINDOW_WIDTH))); setY(((rnd.nextDouble()) * (com.codecool.snake.Globals.WINDOW_HEIGHT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8757/buggy-version/src.com.codecool.snake.entities.Enemy.java", "BodyUseAPI": [], "Fixed commit": "d202eaf1a3e7d6c5e35b85a90a8a39c59dfe2fcf", "Url": "https://api.github.com/repos/CodecoolBP20171/java-se-snake-iron_jesus_lobotomy_crew", "Date": "2017-09-13T20:57:06Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentNoteId) == (-1)) { currentNoteId = mNoteDBAccess.insertNullNote(new com.mingzi.onenote.vo.Note(mDate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8850/buggy-version/OneNote.app.src.main.java.com.mingzi.onenote.activity.NewNoteActivity.java", "BodyUseAPI": [], "Fixed commit": "133b039993a379d7f8bb14fa6e29b8ef52aad817", "Url": "https://api.github.com/repos/mingzi12/MyNote", "Date": "2016-04-09T08:51:54Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentNoteId) == (-1)) { currentNoteId = mNoteDBAccess.insertNullNote(new com.mingzi.onenote.vo.Note(mDate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8850/buggy-version/OneNote.app.src.main.java.com.mingzi.onenote.activity.NewNoteActivity.java", "BodyUseAPI": [], "Fixed commit": "133b039993a379d7f8bb14fa6e29b8ef52aad817", "Url": "https://api.github.com/repos/mingzi12/MyNote", "Date": "2016-04-09T08:51:54Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grantResults[0]) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6340/buggy-version/app.src.main.java.com.nctu.bikeline.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c89ee102c9744213f7cded73e23512f19cdb2762", "Url": "https://api.github.com/repos/w86763777/BikeLine", "Date": "2017-04-05T17:33:38Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.hasTop()) { key = source.getTopKey(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4189/buggy-version/extensions.datastores.accumulo.src.main.java.mil.nga.giat.geowave.datastore.accumulo.query.QueryFilterIterator.java", "BodyUseAPI": ["org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value>.getTopKey()"], "Fixed commit": "f51187ac0b1e7609957637cd82e776ea36c5c97d", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-07-09T02:35:30Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["index.getIndexStrategy().getOrderedDimensionDefinitions()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dimensions[d]) instanceof mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) { baseDefinitionCls = ((mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) (dimensions[d])).getDimensionDefinition().getClass(); }else { baseDefinitionCls = dimensions[d].getClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4189/buggy-version/core.store.src.main.java.mil.nga.giat.geowave.core.store.data.CommonIndexedPersistenceEncoding.java", "BodyUseAPI": ["((mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) (dimensions[d])).getDimensionDefinition()", "((mil.nga.giat.geowave.core.index.sfc.SFCDimensionDefinition) (dimensions[d])).getDimensionDefinition().getClass()", "dimensions[d].getClass()"], "Fixed commit": "f51187ac0b1e7609957637cd82e776ea36c5c97d", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-07-09T02:35:30Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exists == false) { return name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4768/buggy-version/src.main.java.org.projectforge.continuousdb.DatabaseUpdateDao.java", "BodyUseAPI": [], "Fixed commit": "69bf47742c36605ca4a6eaed8f105530776d7a69", "Url": "https://api.github.com/repos/micromata/projectforge-continuous-db", "Date": "2013-12-29T14:29:12Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AceJet.AnchoredPathSet.getByPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (posPaths != null) { for (AceJet.AnchoredPath p : posPaths) { seedPathInstances.add(new edu.nyu.jet.ice.relation.Bootstrap.BootstrapAnchoredPath(p, sp, edu.nyu.jet.ice.relation.Bootstrap.BootstrapAnchoredPathType.POSITIVE)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2736/buggy-version/src.main.java.edu.nyu.jet.ice.relation.Bootstrap.java", "BodyUseAPI": [], "Fixed commit": "68e7b15375ac14bdc894b8b3e8539f56b97ebcaf", "Url": "https://api.github.com/repos/rgrishman/ice", "Date": "2015-11-06T22:21:42Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(artist.equals(\"\"))) { return searchPresenter.getAllSearchArtist(artist); }else { android.widget.Toast.makeText(this, \"please insert a valid text\", Toast.LENGTH_SHORT).show(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8455/buggy-version/app.src.main.java.com.mac.musicwiki.search.view.SearchActivity.java", "BodyUseAPI": ["com.mac.musicwiki.search.presenter.SearchPresenter.getAllSearchArtist(java.lang.String)"], "Fixed commit": "6227c24b0df5ddaf3b9ee50f9e930261ee113297", "Url": "https://api.github.com/repos/gvilchis23/MusicWiki", "Date": "2017-01-25T16:52:11Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (language != null) { user.setLangid(new java.math.BigDecimal(language)); }else { user.setLangid(new java.math.BigDecimal(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2805/buggy-version/src.cat.ehh.web.controller.UserController.java", "BodyUseAPI": ["cat.ehh.web.model.UserEHH.setLangid(java.math.BigDecimal)"], "Fixed commit": "57033a28efafb918ae933961c484666c3c5fc107", "Url": "https://api.github.com/repos/Health-Helpers/Internal-Web-Application", "Date": "2015-12-21T15:12:23Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(Children[2].equals(\"\u0985\u09ad\u09bf\u099c\u09cd\u099e\u09a4\u09be: \"))) { required_experience.setVisibility(View.VISIBLE); required_experience.setText(Children[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3457/buggy-version/app.src.main.java.demo.kolorob.kolorobdemoversion.adapters.Job_expand_list_adapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "15dadb4e796614168858b26b840b9176b9562a26", "Url": "https://api.github.com/repos/Kolorob/Kolorob", "Date": "2016-12-07T09:36:25Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(cursor.getString(cursor.getColumnIndex(EventEntry.COLUMN_NAME_CONTENT)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"\".equals(content))) { android.widget.Toast.makeText(this, content, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/539/buggy-version/src.com.henryPATHn.ShowRecentEventActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, content, Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(com.henryPATHn.ShowRecentEventActivity,java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "a1365b3dc02f704ba8112bb6e9889643daa00f77", "Url": "https://api.github.com/repos/henryPATHn/CuteCalendar", "Date": "2014-03-05T07:18:45Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((order.status) == (taxi.city.citytaxiclient.enums.OStatus.NEW)) { fetchDriversTask(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3178/buggy-version/app.src.main.java.taxi.city.citytaxiclient.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "de797d7539b914f380713f78e0f07d439c76dd39", "Url": "https://api.github.com/repos/danziamo/taxic", "Date": "2015-07-20T12:27:59Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (Database.isUserExist(username)) { errorLabel.setText(((\"Account:\" + username) + \" is existing\")); }else { Database.createAccount(username, password, accountType.toLowerCase()); accountType = accountType.toLowerCase(); if (accountType.equals(\"student\")) { app.setActiveUser(new Student(username, password, accountType)); }else if (accountType.equals(\"teacher\")) { app.setActiveUser(new Teacher(username, password, accountType)); } java.lang.System.out.printf(\"%s Account: %s is created\", accountType, username); errorLabel.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7700/buggy-version/Quiz.src.CreateAccount.java", "BodyUseAPI": ["javax.swing.JLabel.setText(java.lang.String)", "Database.createAccount(java.lang.String,java.lang.String,java.lang.String)", "App.setActiveUser(Teacher)", "java.io.PrintStream.printf(java.lang.String,java.lang.String,java.lang.String)", "App.setActiveUser(Student)"], "Fixed commit": "f97b13635f5a84ac7430ee80e7b234d5341189fe", "Url": "https://api.github.com/repos/coen275/Quiz", "Date": "2017-03-16T03:08:19Z"},
{"Line": "=>1334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((meta != null) && ((meta.length()) > 0)) { intent.putExtra(\"meta\", meta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/375/buggy-version/app.src.main.java.com.samourai.wallet.SendActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "70c5ea5decea53ff8d0a37ca2db66f6393c2a21b", "Url": "https://api.github.com/repos/Samourai-Wallet/samourai-wallet-android", "Date": "2017-02-07T08:41:40Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((initialInstance) == null) && ((targetEntityDef.getParent()) == null)) initialInstance = objectInstance.getRootEntityInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7042/buggy-version/zeidon-joe.src.main.java.com.quinsoft.zeidon.standardoe.IteratorBuilder.java", "BodyUseAPI": [], "Fixed commit": "9437996fa20aed9f499356ded15601290da1cfe1", "Url": "https://api.github.com/repos/DeegC/zeidon-joe", "Date": "2014-11-05T19:05:15Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (driver) { return aff + \" (permis)\"; }else { return aff; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/406/buggy-version/Mailman.java", "BodyUseAPI": [], "Fixed commit": "8fc35e3e79e0dbb474d084d0ff73a2db6a7852a1", "Url": "https://api.github.com/repos/teamOtee/x-facteur", "Date": "2017-05-11T06:56:36Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isStringSmallerThanWidth(maxWidth, string)) { return createViewModelContainedPadding(maxWidth, stringHeight, lineCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/704/buggy-version/src.com.mommoo.flat.text.textarea.FlatAutoResizeListener.java", "BodyUseAPI": ["com.mommoo.flat.text.textarea.FlatAutoResizeListener.StringCalculator.createViewModelContainedPadding(int,int,int)"], "Fixed commit": "81c0259eb7c6432a9ec7283b17536bf9d8ab2897", "Url": "https://api.github.com/repos/Mommoo/FlatSwing", "Date": "2017-10-04T19:09:31Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.hehaiyang.codegen.utils.PsiUtil.getIdeView(com.intellij.openapi.actionSystem.AnActionEvent)", "me.hehaiyang.codegen.utils.PsiUtil.getProject(com.intellij.openapi.actionSystem.AnActionEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((ideView != null) && (project != null)) { com.intellij.psi.PsiDirectory psiDirectory = com.intellij.ide.util.DirectoryChooserUtil.getOrChooseDirectory(ideView); if (psiDirectory != null) { isPackage = com.intellij.psi.impl.file.PsiDirectoryFactory.getInstance(project).isPackage(psiDirectory); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3809/buggy-version/src.me.hehaiyang.codegen.CodeGenAction.java", "BodyUseAPI": ["com.intellij.psi.impl.file.PsiDirectoryFactory.getInstance(project).isPackage(com.intellij.psi.PsiDirectory)", "com.intellij.psi.impl.file.PsiDirectoryFactory.getInstance(com.intellij.openapi.project.Project)", "com.intellij.ide.util.DirectoryChooserUtil.getOrChooseDirectory(com.intellij.ide.IdeView)"], "Fixed commit": "a383141f71c6f371fe3df600b74afa4b27579e87", "Url": "https://api.github.com/repos/hykes/CodeGen", "Date": "2017-04-12T02:07:13Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pass == 2) { failPass2.incrementAndGet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4710/buggy-version/whois-scheduler.src.main.java.net.ripe.db.whois.scheduler.task.loader.Result.java", "BodyUseAPI": [], "Fixed commit": "e49db9665364fb91ced59c8e1d1dabc1f0b4bec5", "Url": "https://api.github.com/repos/RIPE-NCC/whois", "Date": "2015-07-30T15:01:41Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(extractedLibFile.setReadable(true))) && (!(extractedLibFile.setExecutable(true)))) && (!(extractedLibFile.setWritable(true, true)))) { throw new java.lang.RuntimeException(\"Invalid path for library path\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7283/buggy-version/src.main.java.com.intel.chimera.utils.NativeCodeLoader.java", "BodyUseAPI": [], "Fixed commit": "6c83cc98d13df7f5a20d9f43070275a7cf17fc04", "Url": "https://api.github.com/repos/intel-hadoop/chimera", "Date": "2016-01-08T03:23:39Z"},
{"Line": "=>1442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.service.utils.VcResourceUtils.findRPInVCCluster(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (vcRp != null) { rpMap.put(vcRpName, vcRp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4832/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.impl.ClusteringService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.vmware.aurora.vc.VcResourcePool>.put(java.lang.String,com.vmware.aurora.vc.VcResourcePool)"], "Fixed commit": "dd5b118e25da60b474d5bae8afb12df657521fe3", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-08-15T04:51:00Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.isOp())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2512/buggy-version/src.me.i_Jedi.IParkour.Main.java", "BodyUseAPI": [], "Fixed commit": "4dc1f8568d74f2285eef67f5fde85aafaefa4a67", "Url": "https://api.github.com/repos/iJediPVP/iParkour", "Date": "2015-10-04T16:33:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.rs.security.jose.jwt.JwtClaims.getClaim(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resourceAud instanceof java.util.List) { auds = org.apache.cxf.helpers.CastUtils.cast(((java.util.List<?>) (resourceAud))); }else { auds = java.util.Collections.singletonList(((java.lang.String) (resourceAud))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4588/buggy-version/rt.rs.security.oauth-parent.oauth2.src.main.java.org.apache.cxf.rs.security.oauth2.filters.LocalJwtAccessTokenValidator.java", "BodyUseAPI": [], "Fixed commit": "73da1a1652874f8d7ac1823f4fe37168525fdb18", "Url": "https://api.github.com/repos/iweiss/cxf", "Date": "2016-08-09T16:19:12Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objIdx != ((data[bucketIdx].length) - 1)) { newBucket[objIdx] = data[bucketIdx][((data[bucketIdx].length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4159/buggy-version/src.cngl.tcd.qe.util.CustomHashSet.java", "BodyUseAPI": [], "Fixed commit": "bc2dcab13470bf0e3ede7eeddd90ebb3db4a43e2", "Url": "https://api.github.com/repos/erwanm/quest", "Date": "2012-12-14T12:38:04Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.mahout.cf.taste.model.DataModel.getPreferencesFromUser(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userPrefs.getItemID(idx)) != itemID) { if (org.plista.kornakapi.core.optimizer.ErrorALSWRFactorizer.log.isInfoEnabled()) { org.plista.kornakapi.core.optimizer.ErrorALSWRFactorizer.log.info(\"Ids dont coincide\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2092/buggy-version/src.main.java.org.plista.kornakapi.core.optimizer.ErrorALSWRFactorizer.java", "BodyUseAPI": [], "Fixed commit": "52e46ba64d5d7524350a714211d8bfca71396a65", "Url": "https://api.github.com/repos/KukumavMozolo/kornakapi", "Date": "2015-01-30T15:31:13Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (appName.equals(\"\")) appName = (packageName + \"-\") + (item.getUid());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4996/buggy-version/app.src.main.java.com.zohaltech.app.sigma.adapters.AppsTrafficReportAdapter.java", "BodyUseAPI": [], "Fixed commit": "957364aff014ed16069a1893bdcba762f2a265aa", "Url": "https://api.github.com/repos/zohaltech/MobileDataMonitor", "Date": "2016-01-12T06:59:41Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.huhx0015.hxaudio.audio.HXMusic.hxMusic.musicStatus.equals(com.huhx0015.hxaudio.audio.HXMusic.HXMusicStatus.PAUSED)) { com.huhx0015.hxaudio.audio.HXMusic.hxMusic.playMusic(com.huhx0015.hxaudio.audio.HXMusic.hxMusic.musicItem, com.huhx0015.hxaudio.audio.HXMusic.hxMusic.musicPosition, com.huhx0015.hxaudio.audio.HXMusic.hxMusic.isLooping, context.getApplicationContext()); if (((com.huhx0015.hxaudio.audio.HXMusic.hxMusic.musicListener) != null) && ((com.huhx0015.hxaudio.audio.HXMusic.hxMusic.musicItem) != null)) { com.huhx0015.hxaudio.audio.HXMusic.hxMusic.musicListener.onMusicResume(com.huhx0015.hxaudio.audio.HXMusic.hxMusic.musicItem); } return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/700/buggy-version/hxaudio.src.main.java.com.huhx0015.hxaudio.audio.HXMusic.java", "BodyUseAPI": ["com.huhx0015.hxaudio.interfaces.HXMusicListener.onMusicResume(com.huhx0015.hxaudio.model.HXMusicItem)", "com.huhx0015.hxaudio.audio.HXMusic.playMusic(com.huhx0015.hxaudio.model.HXMusicItem,int,boolean,context.getApplicationContext())"], "Fixed commit": "7b3fbea32b981833fc4909fc8983a615f7c4ccf1", "Url": "https://api.github.com/repos/huhx0015/HXAudioPlayer", "Date": "2017-04-20T10:48:45Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (column > (-1)) cols.remove(column);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/706/buggy-version/src.neu.ComputerPlayer.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.remove(int)"], "Fixed commit": "6c59bc98cd57457d5e63d37044e674ffb6e27ae0", "Url": "https://api.github.com/repos/JoelNiklaus/VierGewinnt", "Date": "2016-12-01T15:16:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cancelButtonPressed)) { server.dialogHelper.showWarningDialog(\"Error\", \"Socket already in use\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2768/buggy-version/Battleships.src.de.mash1t.battleships.ConnectionDialog.java", "BodyUseAPI": [], "Fixed commit": "435252ef5dc7532410fa9801cc38a2bdb3afecac", "Url": "https://api.github.com/repos/mash1t/Battleships", "Date": "2015-07-14T10:20:49Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rc.isActive()) { attacker(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6304/buggy-version/Soldier.java", "BodyUseAPI": [], "Fixed commit": "0431cfa5723cd3b8a1c463aeb7a4d6eee91395dd", "Url": "https://api.github.com/repos/loganinak/team018", "Date": "2015-10-16T04:57:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rc.isActive()) { spiralLoc(team018.HQLoc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6304/buggy-version/Soldier.java", "BodyUseAPI": [], "Fixed commit": "0431cfa5723cd3b8a1c463aeb7a4d6eee91395dd", "Url": "https://api.github.com/repos/loganinak/team018", "Date": "2015-10-16T04:57:21Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rc.isActive()) { rc.move(Direction.NORTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6304/buggy-version/Soldier.java", "BodyUseAPI": ["team018.Soldier.move(Direction.NORTH)"], "Fixed commit": "0431cfa5723cd3b8a1c463aeb7a4d6eee91395dd", "Url": "https://api.github.com/repos/loganinak/team018", "Date": "2015-10-16T04:57:21Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aSetOfContacts != null) { for (com.keimi.okamoto.app.items.Contact c : aSetOfContacts) { if (checkForValidId(c.getId())) { result = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3445/buggy-version/ContactManager.src.main.java.com.keimi.okamoto.app.organisers.ContactsContainerImpl.java", "BodyUseAPI": [], "Fixed commit": "3d5fa085caf889a3170bbdde9f322bafbc071930", "Url": "https://api.github.com/repos/kokamo01/ContactManager", "Date": "2014-03-06T01:34:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { this.data = \"\"; }else { this.data = data; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2462/buggy-version/bundle.src.main.java.com.adobe.acs.commons.errorpagehandler.cache.impl.CacheEntry.java", "BodyUseAPI": [], "Fixed commit": "b7de92afd4b2bd12ffc69c644d6c8e99c82be03d", "Url": "https://api.github.com/repos/steffenrosi/acs-aem-commons", "Date": "2014-12-06T03:03:33Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getData()) == null) { return 0; }else { return getData().getBytes(java.nio.charset.Charset.forName(\"UTF-8\")).length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2462/buggy-version/bundle.src.main.java.com.adobe.acs.commons.errorpagehandler.cache.impl.CacheEntry.java", "BodyUseAPI": [], "Fixed commit": "b7de92afd4b2bd12ffc69c644d6c8e99c82be03d", "Url": "https://api.github.com/repos/steffenrosi/acs-aem-commons", "Date": "2014-12-06T03:03:33Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adobe.acs.commons.util.ResourceDataUtil.getIncludeAsString(java.lang.String,org.apache.sling.api.SlingHttpServletRequest,org.apache.sling.api.SlingHttpServletResponse)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (data == null) { com.adobe.acs.commons.errorpagehandler.cache.impl.ErrorPageCacheImpl.log.debug(\"Error page representation to cache is null. Setting to empty string.\"); data = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2462/buggy-version/bundle.src.main.java.com.adobe.acs.commons.errorpagehandler.cache.impl.ErrorPageCacheImpl.java", "BodyUseAPI": [], "Fixed commit": "b7de92afd4b2bd12ffc69c644d6c8e99c82be03d", "Url": "https://api.github.com/repos/steffenrosi/acs-aem-commons", "Date": "2014-12-06T03:03:33Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (validToString != null) { this.validTo = org.mycontroller.standalone.db.TimerUtils.getValidFromToTime((validToString + \":59\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7103/buggy-version/src.main.java.org.mycontroller.standalone.db.tables.Timer.java", "BodyUseAPI": ["org.mycontroller.standalone.db.TimerUtils.getValidFromToTime(java.lang.String)"], "Fixed commit": "b5d511446686443951a9a2b71f93be2c6d6603d0", "Url": "https://api.github.com/repos/Dietmar-Franken/mycontroller", "Date": "2015-11-18T22:36:14Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (validFromString != null) { this.validFrom = org.mycontroller.standalone.db.TimerUtils.getValidFromToTime((validFromString + \":00\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7103/buggy-version/src.main.java.org.mycontroller.standalone.db.tables.Timer.java", "BodyUseAPI": ["org.mycontroller.standalone.db.TimerUtils.getValidFromToTime(java.lang.String)"], "Fixed commit": "b5d511446686443951a9a2b71f93be2c6d6603d0", "Url": "https://api.github.com/repos/Dietmar-Franken/mycontroller", "Date": "2015-11-18T22:36:14Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(uri.toString().startsWith(EntryColumns.CONTENT_URI.toString()))) { cr.notifyChange(EntryColumns.CONTENT_URI, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3280/buggy-version/src.net.fred.feedex.adapter.EntriesCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "88aa4b1147016b2f7bbfb54fe4f336d9e481f383", "Url": "https://api.github.com/repos/HoloAddict/FeedEx", "Date": "2013-07-01T21:28:35Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueComparator == (this.valueComparator)) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6975/buggy-version/src.com.tvl.util.ImmutableHashMap.java", "BodyUseAPI": [], "Fixed commit": "6e25a5347d7b4adfd9bcf1c04c70fbb521af1379", "Url": "https://api.github.com/repos/tunnelvisionlabs/java-immutable", "Date": "2015-05-29T04:50:02Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((user.getUsername()) == null) || (\"\".equals(user.getUsername())))) { if ((userAccountService.getByUsername(user.getUsername())) != null) { errors.rejectValue(\"username\", \"user.maintain.duplicate\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3550/buggy-version/Ebill-Quezelco.src.main.java.com.kairos.ebillquezelco.service.validator.UserAccountValidator.java", "BodyUseAPI": ["com.kairos.ebillquezelco.domain.user.UserAccount.getUsername()", "com.kairos.ebillquezelco.service.user.UserAccountService.getByUsername(user.getUsername())"], "Fixed commit": "f819578d7eec2a9932e6a81b23404971a5ba1389", "Url": "https://api.github.com/repos/jenmart-bonifacio/Kairos", "Date": "2014-01-07T06:09:36Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (principal != null) { return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3550/buggy-version/Ebill-Quezelco.src.main.java.com.kairos.ebillquezelco.controller.login.LoginController.java", "BodyUseAPI": [], "Fixed commit": "f819578d7eec2a9932e6a81b23404971a5ba1389", "Url": "https://api.github.com/repos/jenmart-bonifacio/Kairos", "Date": "2014-01-07T06:09:36Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["haven.Indir<haven.Resource>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (res == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1979/buggy-version/src.haven.ToolBeltWdg.java", "BodyUseAPI": [], "Fixed commit": "91eec83173827625e74d27f804af0d3a81a1d3c4", "Url": "https://api.github.com/repos/DonnEssime/Custom-Salem", "Date": "2013-12-30T20:27:57Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["haven.Indir<haven.Resource>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((res.layer(Resource.action)) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1979/buggy-version/src.haven.ToolBeltWdg.java", "BodyUseAPI": [], "Fixed commit": "91eec83173827625e74d27f804af0d3a81a1d3c4", "Url": "https://api.github.com/repos/DonnEssime/Custom-Salem", "Date": "2013-12-30T20:27:57Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bids.size()) == 0) { return new com.artatawe.Bid(owner, id, reserve); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9069/buggy-version/src.main.java.com.artatawe.Auction.java", "BodyUseAPI": [], "Fixed commit": "dbf77d8d22e892aa4c6e13fff2742cc481f84cf8", "Url": "https://api.github.com/repos/FortyIsAPass/artatawe", "Date": "2017-12-11T02:56:52Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (classType.equals(model.data.value.DateTimeValue.class)) { return new model.data.value.DateTimeValue(null, null, null, null, null, null); }else if (classType.equals(model.data.value.DateValue.class)) { return new model.data.value.DateValue(null, null, null); }else if (classType.equals(model.data.value.TimeValue.class)) { return new model.data.value.TimeValue(null, null, null); }else if (classType.equals(model.data.value.PeriodValue.class)) { return new model.data.value.PeriodValue(null, null, null); }else { return classType.getConstructor(classType.getMethod(\"getValue\").getReturnType()).newInstance(new java.lang.Object[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3035/buggy-version/src.main.java.model.data.value.DataValue.java", "BodyUseAPI": ["java.lang.Class<? extends model.data.value.DataValue>.getConstructor(java.lang.Class<?>)", "java.lang.Class<? extends model.data.value.DataValue>.equals(java.lang.Class)", "java.lang.Class<? extends model.data.value.DataValue>.equals(java.lang.Class)", "java.lang.reflect.Constructor<? extends model.data.value.DataValue>.newInstance(java.lang.Object[])", "java.lang.Class<? extends model.data.value.DataValue>.getMethod(java.lang.String)", "java.lang.Class<? extends model.data.value.DataValue>.equals(java.lang.Class)", "java.lang.reflect.Method.getReturnType()"], "Fixed commit": "8b09eed0f76c74d972079551dab8ab2c16f72e80", "Url": "https://api.github.com/repos/clanghout/Health-Informatics-3", "Date": "2015-06-10T21:15:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((org.entityapi.api.entity.mind.Mind.REQUIRED_DEFAULTS) == null) { org.entityapi.api.entity.mind.Mind.REQUIRED_DEFAULTS = new java.util.HashMap(); org.entityapi.api.entity.mind.Mind.REQUIRED_DEFAULTS.put(org.entityapi.api.entity.mind.CollideAttribute.class, new org.entityapi.api.entity.mind.DefaultCollideAttribute()); org.entityapi.api.entity.mind.Mind.REQUIRED_DEFAULTS.put(org.entityapi.api.entity.mind.InteractAttribute.class, new org.entityapi.api.entity.mind.DefaultInteractAttribute()); org.entityapi.api.entity.mind.Mind.REQUIRED_DEFAULTS.put(org.entityapi.api.entity.mind.PushAttribute.class, new org.entityapi.api.entity.mind.DefaultPushAttribute()); org.entityapi.api.entity.mind.Mind.REQUIRED_DEFAULTS.put(org.entityapi.api.entity.mind.TickAttribute.class, new org.entityapi.api.entity.mind.DefaultTickAttribute()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6981/buggy-version/modules.API.src.main.java.org.entityapi.api.entity.mind.Mind.java", "BodyUseAPI": [], "Fixed commit": "3c5f8905c04d4d71a10017be0193982ab352de67", "Url": "https://api.github.com/repos/EntityAPIDev/EntityAPI", "Date": "2014-08-20T12:26:42Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((src.length()) > 10) { d = ((java.text.DateFormat) (dateTimeFormat.clone())).parse(src); }else { d = ((java.text.DateFormat) (dateFormat.clone())).parse(src); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/295/buggy-version/src.org.nutz.castor.castor.String2Timestamp.java", "BodyUseAPI": ["((java.text.DateFormat) (dateTimeFormat.clone())).parse(java.lang.String)", "((java.text.DateFormat) (dateFormat.clone())).parse(java.lang.String)"], "Fixed commit": "74ccc536de11290f3339ba399c8aab463643c260", "Url": "https://api.github.com/repos/elkan1788/nutz", "Date": "2013-04-17T01:58:16Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Lamp) { ((it.polito.elite.dog.core.library.model.devicecategory.Lamp) (this.device)).notifyOff(); }else if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Buzzer) { ((it.polito.elite.dog.core.library.model.devicecategory.Buzzer) (this.device)).notifyOff(); }else ((it.polito.elite.dog.core.library.model.devicecategory.OnOffOutput) (this.device)).notifyOff();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8028/buggy-version/it.polito.elite.dog.drivers.knx.onoffdevice.src.it.polito.elite.dog.drivers.knx.onoffdevice.KnxIPOnOffDeviceDriverInstance.java", "BodyUseAPI": [], "Fixed commit": "e38d730368e9ee33bf2849dd6087560436e9f013", "Url": "https://api.github.com/repos/dog-gateway/knx-drivers", "Date": "2014-05-19T11:38:41Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Lamp) { ((it.polito.elite.dog.core.library.model.devicecategory.Lamp) (this.device)).notifyOn(); }else if ((this.device) instanceof it.polito.elite.dog.core.library.model.devicecategory.Buzzer) { ((it.polito.elite.dog.core.library.model.devicecategory.Buzzer) (this.device)).notifyOn(); }else ((it.polito.elite.dog.core.library.model.devicecategory.OnOffOutput) (this.device)).notifyOn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8028/buggy-version/it.polito.elite.dog.drivers.knx.onoffdevice.src.it.polito.elite.dog.drivers.knx.onoffdevice.KnxIPOnOffDeviceDriverInstance.java", "BodyUseAPI": [], "Fixed commit": "e38d730368e9ee33bf2849dd6087560436e9f013", "Url": "https://api.github.com/repos/dog-gateway/knx-drivers", "Date": "2014-05-19T11:38:41Z"},
{"Line": "=>2349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nutiteq.components.MapPos.getZoom()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentZoom > newZoom) { zoomOut = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7980/buggy-version/src.com.nutiteq.BasicMapComponent.java", "BodyUseAPI": [], "Fixed commit": "8b06285adae2560333641e5e76625981899ea5b3", "Url": "https://api.github.com/repos/camptocamp/maps-lib-nutiteq", "Date": "2011-03-04T09:29:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.rs.security.jose.jwt.JwtToken.getClaims()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(iss.equals(claims.getIssuer()))) { throw new java.lang.SecurityException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6359/buggy-version/rt.rs.security.oauth-parent.oauth2.src.main.java.org.apache.cxf.rs.security.oauth2.grants.code.JwtRequestCodeFilter.java", "BodyUseAPI": [], "Fixed commit": "e265a32de75478ae4f39b9031baa7e878f31a72c", "Url": "https://api.github.com/repos/peteryhwong/cxf", "Date": "2016-02-17T16:17:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.rs.security.jose.jwt.JwtClaims.getClaim(OAuthConstants.RESPONSE_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((tokenResponseType != null) && (!(tokenResponseType.equals(params.getFirst(OAuthConstants.RESPONSE_TYPE))))) { throw new java.lang.SecurityException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6359/buggy-version/rt.rs.security.oauth-parent.oauth2.src.main.java.org.apache.cxf.rs.security.oauth2.grants.code.JwtRequestCodeFilter.java", "BodyUseAPI": [], "Fixed commit": "e265a32de75478ae4f39b9031baa7e878f31a72c", "Url": "https://api.github.com/repos/peteryhwong/cxf", "Date": "2016-02-17T16:17:27Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mihalis.opal.obutton.AbstractButtonRenderer.createClipping()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (path.isDisposed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7555/buggy-version/src.main.java.org.mihalis.opal.obutton.AbstractButtonRenderer.java", "BodyUseAPI": [], "Fixed commit": "965f3b7d502c4c53e8c271cad90580b839793eaf", "Url": "https://api.github.com/repos/lcaron/opal", "Date": "2015-08-08T21:42:35Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<twitter4j.Status>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (shouldDisplayTweet(lastTweet)) { sendMessage(((((((((getCommandName()) + \" @\") + (lastTweet.getUser().getScreenName())) + \": \") + (lastTweet.getText())) + \" [\") + (org.hive13.jircbotx.listener.TwitterSearch.getTweetURL(lastTweet))) + \"]\"), eMsgTypes.publicMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7568/buggy-version/src.org.hive13.jircbotx.listener.TwitterSearch.java", "BodyUseAPI": ["lastTweet.getUser().getScreenName()", "org.hive13.jircbotx.listener.TwitterSearch.sendMessage(((((((((getCommandName()) + \" @\") + (lastTweet.getUser().getScreenName())) + \": \") + (lastTweet.getText())) + \" [\") + (org.hive13.jircbotx.listener.TwitterSearch.getTweetURL(lastTweet))) + \"]\"),eMsgTypes.publicMsg)", "org.hive13.jircbotx.listener.TwitterSearch.getTweetURL(twitter4j.Status)", "twitter4j.Status.getUser()", "twitter4j.Status.getText()"], "Fixed commit": "03a55ab506e2b03722a20177d888c19cd73cccf1", "Url": "https://api.github.com/repos/Hive13/jIRCBot", "Date": "2013-11-13T21:40:13Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (object.containsKey(\"text\")) { java.util.ArrayList<java.lang.String> txtVal = object.get(\"text\"); if ((txtVal.get(0).length()) == 0) { object.remove(\"text\"); messages.add(\"Warning - collex:text is blank\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6792/buggy-version/src.main.java.org.nines.ValidationUtility.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.remove(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "24ab62b0a11590a05a45f72dac3b097c0a9fc474", "Url": "https://api.github.com/repos/collex/rdf-indexer", "Date": "2015-06-10T14:49:55Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(recipe instanceof slimeknights.tconstruct.library.smeltery.CastingRecipe)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2841/buggy-version/src.main.com.smithsmodding.armory.weaponry.common.compatibility.ArmoryMaterialInitializer.java", "BodyUseAPI": [], "Fixed commit": "b0edb0ccdf589eaf0452f387ff7007f90b3999c6", "Url": "https://api.github.com/repos/SmithsGaming/Weaponry", "Date": "2016-07-15T07:34:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.semanticweb.owlapi.vocab.PrefixOWLOntologyFormat.getDefaultPrefix()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (defaultPrefix != null) prefixManager.setDefaultPrefix(defaultPrefix);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7334/buggy-version/src.main.java.org.swrlapi.core.SWRLAPIFactory.java", "BodyUseAPI": ["org.semanticweb.owlapi.util.DefaultPrefixManager.setDefaultPrefix(java.lang.String)"], "Fixed commit": "6f4ae56d868ed39f26cb85e82fa163b0d44ca617", "Url": "https://api.github.com/repos/protegeproject/swrlapi", "Date": "2014-07-01T15:14:44Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sysgears.service.processor.processable.IProcessable.getSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((buffer.length) > (size - progress)) { buffer = new byte[((int) (size - progress))]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2848/buggy-version/service.src.main.java.com.sysgears.service.processor.IOProcessor.java", "BodyUseAPI": [], "Fixed commit": "1cdc56cabf682f8746f5d96daa4429cbe7e2e771", "Url": "https://api.github.com/repos/YuriHeiko/MultithreadingSplitter", "Date": "2017-08-03T07:04:20Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (topic.getStorageType().equals(Storage.MYSQL)) { if ((topic.getStoragePartitionSize()) <= 10000) { reason = \"Database partition size should be bigger than 10000\"; passed = false; }else if ((topic.getStoragePartitionCount()) <= 5) { reason = \"Database partition count should be bigger than 5\"; passed = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7308/buggy-version/hermes-portal.src.main.java.com.ctrip.hermes.portal.resource.TopicResource.java", "BodyUseAPI": ["com.ctrip.hermes.core.bo.TopicView.getStoragePartitionCount()", "com.ctrip.hermes.core.bo.TopicView.getStoragePartitionSize()"], "Fixed commit": "5a0e1d8b2f973c6a11a816be9f88f7324727d747", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2015-07-27T02:16:09Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((facing == (net.minecraft.util.EnumFacing.DOWN)) || (facing == (net.minecraft.util.EnumFacing.UP))) { facing = net.minecraft.util.EnumFacing.NORTH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5605/buggy-version/src.main.java.flaxbeard.immersivepetroleum.common.blocks.metal.TileEntityAutoLubricator.java", "BodyUseAPI": [], "Fixed commit": "a052a48d401828f7c2314074f50b5f0556505996", "Url": "https://api.github.com/repos/Flaxbeard/ImmersivePetroleum", "Date": "2017-11-30T23:38:46Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((facing) == (net.minecraft.util.EnumFacing.DOWN)) || ((facing) == (net.minecraft.util.EnumFacing.UP))) { facing = net.minecraft.util.EnumFacing.NORTH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5605/buggy-version/src.main.java.flaxbeard.immersivepetroleum.common.blocks.metal.TileEntityAutoLubricator.java", "BodyUseAPI": [], "Fixed commit": "a052a48d401828f7c2314074f50b5f0556505996", "Url": "https://api.github.com/repos/Flaxbeard/ImmersivePetroleum", "Date": "2017-11-30T23:38:46Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.icleveret.watchers.components.SessionHolder.open(org.hibernate.SessionFactory)", "com.icleveret.watchers.services.SubscriberService.findByEmail(java.lang.String,sessionHolder.getSessionContainer())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tokenService.findBySubscriber(optOutSubscriber, sessionHolder.getSessionContainer())) != null) { tokenService.delete(tokenService.findBySubscriber(optOutSubscriber, sessionHolder.getSessionContainer()), sessionHolder.getSessionContainer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4993/buggy-version/src.main.java.com.icleveret.watchers.controllers.SubscriberController.java", "BodyUseAPI": ["com.icleveret.watchers.components.SessionHolder.getSessionContainer()", "com.icleveret.watchers.services.TokenService.delete(tokenService.findBySubscriber(optOutSubscriber, sessionHolder.getSessionContainer()),sessionHolder.getSessionContainer())", "com.icleveret.watchers.components.SessionHolder.getSessionContainer()", "com.icleveret.watchers.services.TokenService.findBySubscriber(com.icleveret.watchers.models.Subscriber,sessionHolder.getSessionContainer())"], "Fixed commit": "672050f80110677bf508456325e23986a61da8aa", "Url": "https://api.github.com/repos/iCleveret/icleveret-watcher", "Date": "2016-03-01T10:06:03Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tagData) == null) { return; }else if (tagData.isDeleted()) { com.todoroo.astrid.activity.FilterListFragment fl = ((com.todoroo.astrid.activity.AstridActivity) (getActivity())).getFilterListFragment(); if (fl != null) { fl.switchToActiveTasks(); fl.clear(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3426/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.TagViewFragment.java", "BodyUseAPI": [], "Fixed commit": "98f4cec2e7d43a89c2b055dca8a834d3d0d76623", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2012-08-13T20:02:15Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.todoroo.astrid.activity.AstridActivity) (getActivity())).getFilterListFragment()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (fl != null) { fl.switchToActiveTasks(); fl.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3426/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.TagViewFragment.java", "BodyUseAPI": ["com.todoroo.astrid.activity.FilterListFragment.clear()", "com.todoroo.astrid.activity.FilterListFragment.switchToActiveTasks()"], "Fixed commit": "98f4cec2e7d43a89c2b055dca8a834d3d0d76623", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2012-08-13T20:02:15Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMin) != (HPBar.currentMin)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7930/buggy-version/gamecode.src.com.saints.gamecode.HealthBar.java", "BodyUseAPI": [], "Fixed commit": "229710dc4432597e4bb8202661e25ebc71ba7e3a", "Url": "https://api.github.com/repos/meemsbror/Prjekt-", "Date": "2016-05-09T21:46:06Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.attachment.model.SimpleDocument.getLastPublicVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lastPublicVersion == null) { throw new org.silverpeas.attachment.web.WebApplicationException(javax.ws.rs.core.Response.Status.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8958/buggy-version/web-core.src.main.java.org.silverpeas.attachment.web.SimpleDocumentResource.java", "BodyUseAPI": [], "Fixed commit": "fabd25663147c267eb1b1a07826e11c3398c1764", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2016-01-29T10:09:10Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edacc.parameterspace.graph.ParameterGraph.getParameterMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pgraph_map.containsKey(param.getParameter().getName()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5060/buggy-version/src.edacc.api.APIImpl.java", "BodyUseAPI": [], "Fixed commit": "caddf7a007f73d5bd14af99a627c0c7c8045158f", "Url": "https://api.github.com/repos/ceari/edacc_api", "Date": "2011-10-15T14:59:41Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (removeItem != null) { lines--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1175/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.danmaku.renderer.android.DanmakusRetainer.java", "BodyUseAPI": [], "Fixed commit": "88ceae356722f1b79e0dabf917cf052da17ae24e", "Url": "https://api.github.com/repos/Bilibili/DanmakuFlameMaster", "Date": "2016-05-05T02:54:13Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (removeItem != null) { lines--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1175/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.danmaku.renderer.android.DanmakusRetainer.java", "BodyUseAPI": [], "Fixed commit": "88ceae356722f1b79e0dabf917cf052da17ae24e", "Url": "https://api.github.com/repos/Bilibili/DanmakuFlameMaster", "Date": "2016-05-05T02:54:13Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ol1.getOl_quantity()) != null) && ((ol2.getOl_quantity()) != null)) { if ((ol1.getOl_quantity().compareTo(ol2.getOl_quantity())) == 1) { return -1; }else if ((ol1.getOl_quantity().compareTo(ol2.getOl_quantity())) == (-1)) { return 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7726/buggy-version/src.edu.nus.cs4224.OLComparator.java", "BodyUseAPI": ["edu.nus.cs4224.d8.OrderLine.getOl_quantity()", "ol1.getOl_quantity().compareTo(ol2.getOl_quantity())", "ol1.getOl_quantity().compareTo(ol2.getOl_quantity())", "edu.nus.cs4224.d8.OrderLine.getOl_quantity()", "edu.nus.cs4224.d8.OrderLine.getOl_quantity()", "edu.nus.cs4224.d8.OrderLine.getOl_quantity()"], "Fixed commit": "a2a4efc9e7b9506e2222c829b6840eae0a4767fc", "Url": "https://api.github.com/repos/ligia0119/Supplier-Cassandra", "Date": "2015-11-07T13:07:33Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"one\".equalsIgnoreCase(str)) { str = \"1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1483/buggy-version/src.main.java.com.reviewrehashed.indexer.HTMLParser.java", "BodyUseAPI": [], "Fixed commit": "6f5d5cabdaad14099b7f29029c32f88a59785974", "Url": "https://api.github.com/repos/rajegannathan/Review-Rehashed", "Date": "2016-05-01T06:10:33Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((expArgs.size()) == 2) && (!(destDir.exists()))) && (destDir.getParentFile().isDirectory())) { java.io.File src = new java.io.File(getAbsolutePath(expArgs.get(0))); src.renameTo(destDir); }else { if (!(destDir.isDirectory())) throw new java.lang.IllegalArgumentException(((destDir.getPath()) + \" does not exist or is not a folder\")); for (int i = 0; i < ((expArgs.size()) - 1); ++i) { java.io.File src = new java.io.File(getAbsolutePath(expArgs.get(i))); java.io.File dest = new java.io.File(destDir, src.getName()); if (dest.exists()) throw new java.lang.IllegalArgumentException(((dest.getPath()) + \" already exists\")); src.renameTo(dest); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2107/buggy-version/src.main.java.javax.shell.Unix.java", "BodyUseAPI": ["javax.shell.Unix.9.size()", "javax.shell.Unix.9.get(int)", "java.io.File.isDirectory()", "java.io.File.getPath()", "java.io.File.renameTo(java.io.File)", "javax.shell.Unix.9.getAbsolutePath(expArgs.get(i))", "javax.shell.Unix.9.getAbsolutePath(expArgs.get(0))", "javax.shell.Unix.9.get(int)"], "Fixed commit": "164072c6789108e0fd5473146e0bd2b1c94667d3", "Url": "https://api.github.com/repos/luca-vercelli/java-shell", "Date": "2016-01-20T09:46:49Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity.isCompositePrimaryKey()) { entity.doWithProperties(new org.springframework.data.mapping.PropertyHandler<org.springframework.data.cassandra.mapping.CassandraPersistentProperty>() { @java.lang.Override public void doWithPersistentProperty(org.springframework.data.cassandra.mapping.CassandraPersistentProperty p) { where.and(com.datastax.driver.core.querybuilder.QueryBuilder.eq(p.getColumnName().toCql(), wrapper.getProperty(p))); } }); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7463/buggy-version/spring-data-cassandra.src.main.java.org.springframework.data.cassandra.convert.MappingCassandraConverter.java", "BodyUseAPI": ["org.springframework.data.cassandra.mapping.CassandraPersistentEntity<?>.doWithProperties(org.springframework.data.mapping.PropertyHandler<org.springframework.data.cassandra.mapping.CassandraPersistentProperty>)"], "Fixed commit": "2a921b46d3ca90b6ea320a15acbb1b61e2dfce74", "Url": "https://api.github.com/repos/spring-projects/spring-data-cassandra", "Date": "2014-09-12T16:13:17Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (text != null) { java.lang.String decomposed = java.text.Normalizer.normalize(text, java.text.Normalizer.Form.NFD); city = decomposed.replaceAll(\"\\\\p{InCombiningDiacriticalMarks}+\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5147/buggy-version/gmsworldlayers.src.main.java.net.gmsworld.server.layers.MapQuestUtils.java", "BodyUseAPI": ["java.text.Normalizer.normalize(java.lang.String,java.text.Normalizer.Form)"], "Fixed commit": "6f03148a4709743446ea8b32ff7c729e5111f835", "Url": "https://api.github.com/repos/jstakun/gms-world-server", "Date": "2015-10-18T15:35:43Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.compile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(dateFormat.matcher(s).matches())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3922/buggy-version/src.main.java.com.excilys.formation.computerdatabase.util.DateConverter.java", "BodyUseAPI": [], "Fixed commit": "299a3394032d5ce8263c35a112c7d9468237d30a", "Url": "https://api.github.com/repos/Zacaria/computer-database", "Date": "2016-03-10T16:34:42Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(request.containsHeader(\"User-Agent\"))) { request.addHeader(\"User-Agent\", \"Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; en-US; rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/146/buggy-version/meaningfulweb-core.src.main.java.org.meaningfulweb.util.http.HttpComponentsServiceImpl.java", "BodyUseAPI": ["org.apache.http.HttpRequest.addHeader(java.lang.String,java.lang.String)"], "Fixed commit": "8a67572803c11eb45594da9091d8e5757e04fb20", "Url": "https://api.github.com/repos/javasoze/meaningfulweb", "Date": "2011-05-22T16:24:48Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.widget.LinearLayoutManager.findLastCompletelyVisibleItemPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastFullyVisiblePosition == (android.support.v7.widget.RecyclerView.NO_POSITION)) { lastFullyVisiblePosition = layoutManager.findLastVisibleItemPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1934/buggy-version/recyclerviewfastscroller.src.main.java.xyz.danoz.recyclerviewfastscroller.calculation.progress.VerticalLinearLayoutManagerScrollProgressCalculator.java", "BodyUseAPI": [], "Fixed commit": "fe5f20f67642b5660c99ac4972818685869d5df6", "Url": "https://api.github.com/repos/jrgonzalezg/RecyclerViewFastScroller", "Date": "2015-03-27T18:45:01Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((authorList.getSelectedIndex()) == (-1)) { javax.swing.JOptionPane.showMessageDialog(null, \"Zum L\\u00f6schen bitte zun\\u00e4chst einen Autor aus der Liste w\\u00e4hlen.\", \"Fehler\", javax.swing.JOptionPane.ERROR_MESSAGE); }else { profileLogic.removeProfile(authorList.getSelectedIndex()); listModel.remove(authorList.getSelectedIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4692/buggy-version/src.org.textanalyzer.frontend.FrontendProfileManager.java", "BodyUseAPI": ["javax.swing.JList.getSelectedIndex()", "org.textanalyzer.profilemanager.ProfileManager.removeProfile(int)", "javax.swing.DefaultListModel.remove(int)", "javax.swing.JList.getSelectedIndex()"], "Fixed commit": "22e02a1c0ebe3e1e8251bc08490f94d8f5f34359", "Url": "https://api.github.com/repos/Schille/Text-Analyzer", "Date": "2012-11-10T11:27:50Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rank >= 1) { com.swarmconnect.SwarmAchievement.unlock(10129); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8038/buggy-version/workspace.Angr-android.src.fi.hbp.angr.AndroidScoreboard.java", "BodyUseAPI": [], "Fixed commit": "58d33413c0ff2836c1e4de3f8a3c702ebeab8354", "Url": "https://api.github.com/repos/OlliV/angr", "Date": "2013-02-20T00:32:10Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rank >= 0) { com.swarmconnect.SwarmAchievement.unlock(10127); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8038/buggy-version/workspace.Angr-android.src.fi.hbp.angr.AndroidScoreboard.java", "BodyUseAPI": [], "Fixed commit": "58d33413c0ff2836c1e4de3f8a3c702ebeab8354", "Url": "https://api.github.com/repos/OlliV/angr", "Date": "2013-02-20T00:32:10Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gitblit.utils.FileUtils.getExactFile(java.io.File)", "com.gitblit.utils.FileUtils.getExactFile(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (exactPath.getPath().startsWith(exactBase.getPath())) { return com.gitblit.utils.StringUtils.getRelativePath(exactBase.getPath(), exactPath.getPath()); }else if (exactPath.getPath().startsWith(basePath.getAbsolutePath())) { return com.gitblit.utils.StringUtils.getRelativePath(basePath.getAbsolutePath(), exactPath.getPath()); }else if (path.getAbsolutePath().startsWith(exactBase.getPath())) { return com.gitblit.utils.StringUtils.getRelativePath(exactBase.getPath(), path.getAbsolutePath()); }else if (path.getAbsolutePath().startsWith(basePath.getAbsolutePath())) { return com.gitblit.utils.StringUtils.getRelativePath(basePath.getAbsolutePath(), path.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6188/buggy-version/src.com.gitblit.utils.FileUtils.java", "BodyUseAPI": ["com.gitblit.utils.StringUtils.getRelativePath(java.lang.String,java.lang.String)", "java.io.File.getPath()", "java.io.File.getPath()", "java.io.File.getPath()", "com.gitblit.utils.StringUtils.getRelativePath(java.lang.String,java.lang.String)", "com.gitblit.utils.StringUtils.getRelativePath(java.lang.String,java.lang.String)", "java.io.File.getPath()", "java.io.File.getPath()", "java.lang.String.startsWith(java.lang.String)", "java.io.File.getPath()", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "5e010729291f732d4f31cbf66649dbac1e795a59", "Url": "https://api.github.com/repos/jcrygier/gitblit", "Date": "2012-07-28T01:41:26Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isAtMax()) || (isAtMin())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5969/buggy-version/src.com.gmail.einsyui.buildutils.geometry.BlockIndex.java", "BodyUseAPI": [], "Fixed commit": "9334df622a1979151420dbca8537ab13526dcb7f", "Url": "https://api.github.com/repos/Einsyui/BuildUtils", "Date": "2015-02-24T20:00:29Z"},
{"Line": "=>647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((items.length) > numberOfColumns) { java.lang.String[] newItems = new java.lang.String[numberOfColumns]; for (int j = 0; j < (items.length); j++) { if (j >= numberOfColumns) { newItems[(numberOfColumns - 1)] += ',' + (items[j]); }else { newItems[j] = items[j]; } } items = newItems; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4767/buggy-version/app.src.main.java.com.spencerpages.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3e83f0be6d7e879cef596f3e9c17c6e852125e12", "Url": "https://api.github.com/repos/sw23/coin-collection-android", "Date": "2017-01-02T22:36:33Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.tenant.configcontext.provider.store.TenantConfigurationContextStore.getInstance().getTenantConfigurationContextMap().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (clientContext != null) { clientContext.cleanupContexts(); org.wso2.carbon.tenant.configcontext.provider.store.TenantConfigurationContextStore.getInstance().getTenantConfigurationContextMap().remove(tenantID); org.wso2.carbon.tenant.configcontext.provider.listener.Axis2ConfigurationContextObserverImpl.log.info(((\"Configuration Context for Tenant ID: \" + tenantID) + \" is removed\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2182/buggy-version/components.tenant-mgt.org.wso2.carbon.tenant.configcontext.provider.src.main.java.org.wso2.carbon.tenant.configcontext.provider.listener.Axis2ConfigurationContextObserverImpl.java", "BodyUseAPI": ["org.apache.axis2.context.ConfigurationContext.cleanupContexts()"], "Fixed commit": "39b6411a5799fb4e769c1190ba1555cf88db2fd8", "Url": "https://api.github.com/repos/callkalpa/carbon-multitenancy", "Date": "2014-10-22T12:08:32Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lisong_mechlab.model.chassi.ChassiDB.canonize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keyShortName.contains(\"muro\")) { return lisong_mechlab.model.chassi.ChassiDB.lookup(\"CTF-IM\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4890/buggy-version/src.lisong_mechlab.model.chassi.ChassiDB.java", "BodyUseAPI": [], "Fixed commit": "ae040cc2cecc670039f0c8e3b954af16f2fb3767", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-10-02T21:38:18Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typeQuantityMap.get(StockMovementItem.MovementType.RECEIVE).length()) > 0) { return (java.lang.Long.parseLong(typeQuantityMap.get(StockMovementItem.MovementType.RECEIVE))) > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/938/buggy-version/app.src.main.java.org.openlmis.core.view.viewmodel.StockMovementViewModel.java", "BodyUseAPI": ["java.lang.Long.parseLong(typeQuantityMap.get(StockMovementItem.MovementType.RECEIVE))", "java.util.HashMap<StockMovementItem.MovementType, java.lang.String>.get(StockMovementItem.MovementType.RECEIVE)"], "Fixed commit": "8558319e8e57796d5ed7aa1a0db0ec2c17e9bf2f", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-06-16T08:30:35Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedCountry) == null) { setSelectedCountry(country); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5448/buggy-version/lib.src.main.java.com.auth0.android.lock.views.CountryCodeSelectorView.java", "BodyUseAPI": [], "Fixed commit": "c48b0dbefb8b6b74d96116ad4e29511328aa3a96", "Url": "https://api.github.com/repos/auth0/Lock.Android", "Date": "2016-06-02T15:12:21Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(pGama[i][j])) { pGama[i][j] = 1.0E-20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6905/buggy-version/src.ML.GMMAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "f31485c83b31b3b539bdde56f1ac0694b2dfe933", "Url": "https://api.github.com/repos/EddiePi/tracing-server", "Date": "2017-04-25T20:08:01Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((editorState.getCurrentAst()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8697/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.services.outline.SpoofaxOutlinePage.java", "BodyUseAPI": [], "Fixed commit": "f6ed64d91deee930d04997314f15493091700fcb", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2013-07-03T21:51:33Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInitialized())) { throw new java.lang.IllegalStateException(\"Cannot call getRenderSize() before initialized!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/9121/buggy-version/jme3-vr.src.main.java.com.jme3.input.vr.OculusVR.java", "BodyUseAPI": [], "Fixed commit": "8b85f0f571ff375a09a62463b4aa63e9386bbc55", "Url": "https://api.github.com/repos/ZNiPATHn/jmonkeyengine", "Date": "2017-10-01T05:17:41Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["book.getPlace().getPlace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"OTHERS\".equalsIgnoreCase(place)) { report.setPlace(job.getPlaceOther()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7187/buggy-version/src.java.com.smi.travel.datalayer.view.dao.impl.TransferJobReportImpl.java", "BodyUseAPI": [], "Fixed commit": "5292936ccbaa8d2c041d2d4f1045167776cfc1ce", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-05-16T09:39:09Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONValue.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (obj.get(\"type\").equals(\"keep-alive\")) { }else { throw new java.lang.IllegalStateException((\"Unrecognized message type: \" + (obj.toJSONString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3203/buggy-version/src.main.java.com.github.keenon.lense.human_server.server.HumanWorkerWebSocket.java", "BodyUseAPI": ["org.json.simple.JSONObject.toJSONString()"], "Fixed commit": "b13e5e8243630336efa1db192c21d2cb9c74666d", "Url": "https://api.github.com/repos/keenon/lense", "Date": "2016-02-06T21:20:57Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof com.github.keenon.lense.gameplay.Game.HumanExit) needJobPostings++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3203/buggy-version/src.main.java.com.github.keenon.lense.gameplay.players.GamePlayerThreshold.java", "BodyUseAPI": [], "Fixed commit": "b13e5e8243630336efa1db192c21d2cb9c74666d", "Url": "https://api.github.com/repos/keenon/lense", "Date": "2016-02-06T21:20:57Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needJobPostings > 0) { return new com.github.keenon.lense.gameplay.Game.HumanJobPosting(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3203/buggy-version/src.main.java.com.github.keenon.lense.gameplay.players.GamePlayerThreshold.java", "BodyUseAPI": [], "Fixed commit": "b13e5e8243630336efa1db192c21d2cb9c74666d", "Url": "https://api.github.com/repos/keenon/lense", "Date": "2016-02-06T21:20:57Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idlycyme.practice.gridimagesearch.activities.SearchActivity.onQueryTextSubmitTwice) { idlycyme.practice.gridimagesearch.activities.SearchActivity.onQueryTextSubmitTwice = !(idlycyme.practice.gridimagesearch.activities.SearchActivity.onQueryTextSubmitTwice); fetchSearchResults(query, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/130/buggy-version/week2_gridImageSearch.app.src.main.java.idlycyme.practice.gridimagesearch.activities.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "75a8c74283c1a5cd2eeeb09e1b0f78675077f449", "Url": "https://api.github.com/repos/idlycyme/androidAppPractice", "Date": "2015-08-31T05:12:34Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((set) != null) { set.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1354/buggy-version/mobile.src.main.java.com.fanny.traxivity.view.DailyTab.java", "BodyUseAPI": [], "Fixed commit": "f84b8f814396d572964703e535af4a15d04cc732", "Url": "https://api.github.com/repos/huextrat/SelfbackRGU", "Date": "2017-06-12T11:18:48Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entries.isEmpty())) { entries.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1354/buggy-version/mobile.src.main.java.com.fanny.traxivity.view.DailyTab.java", "BodyUseAPI": ["java.util.List<com.github.mikephil.charting.data.BarEntry>.clear()"], "Fixed commit": "f84b8f814396d572964703e535af4a15d04cc732", "Url": "https://api.github.com/repos/huextrat/SelfbackRGU", "Date": "2017-06-12T11:18:48Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType) { typeArguments = ((org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedDeclaredType) (type)).getTypeArguments(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/7738/buggy-version/src.checkers.inference.InferenceAnnotatedTypeFactory.java", "BodyUseAPI": [], "Fixed commit": "b36cdf593a2772a708fcef7cb83e5b6817bc8f6c", "Url": "https://api.github.com/repos/topnessman/checker-framework-inference", "Date": "2016-06-14T23:33:18Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item instanceof com.dit599.customPD.items.potions.PotionOfStrength) { (com.dit599.customPD.Dungeon.potionOfStrength)++; }else if (item instanceof com.dit599.customPD.items.Stylus) { (com.dit599.customPD.Dungeon.arcaneStyli)++; }else if (item instanceof com.dit599.customPD.items.scrolls.ScrollOfUpgrade) { (com.dit599.customPD.Dungeon.scrollsOfUpgrade)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/3393/buggy-version/src.com.dit599.customPD.levels.Level.java", "BodyUseAPI": [], "Fixed commit": "e5f4e068a75120bde58fb366805908d72f8cf7e1", "Url": "https://api.github.com/repos/QuattroX/pixel-dungeon", "Date": "2015-01-21T19:59:36Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((!(ignoreMissingData)) || (value != null)) { min = ((min == null) || ((type.compare(min, value)) > 0)) ? value : min; max = ((max == null) || ((type.compare(max, value)) < 0)) ? value : max; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/6146/buggy-version/src.main.org.deidentifier.arx.framework.check.distribution.DistributionAggregateFunction.java", "BodyUseAPI": ["org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.compare(T,T)", "org.deidentifier.arx.DataType.DataTypeWithRatioScale<T>.compare(T,T)"], "Fixed commit": "a43d5f483a313c53ba565ec5a60c561ea10faba0", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-10-01T13:14:40Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(interSect.isEmpty())) { message = \"plugin.setting.date.exitst.include.exclude\"; return SUCCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1463/buggy-version/src.main.java.org.everit.jira.timetracker.plugin.web.AdminSettingsWebAction.java", "BodyUseAPI": [], "Fixed commit": "174f70ba9a0b6496a165c6cd22d21fdc4c0d9f6a", "Url": "https://api.github.com/repos/everit-org/jira-timetracker-plugin", "Date": "2016-10-28T07:53:48Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.getRights().greaterOrEqual(rights())) { execute(player, plugin.commands.CommandParser.create(event.getInput())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2869/buggy-version/plugins.plugin.commands.Command.java", "BodyUseAPI": ["plugin.commands.Command.execute(astraeus.game.model.entity.mob.player.Player,plugin.commands.CommandParser.create(event.getInput()))"], "Fixed commit": "df2e99ebed14116077ed78abe2711b0ca8f42c08", "Url": "https://api.github.com/repos/nshusa/astraeus-legacy", "Date": "2016-08-22T15:20:06Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/2869/buggy-version/plugins.plugin.commands.Command.java", "BodyUseAPI": [], "Fixed commit": "df2e99ebed14116077ed78abe2711b0ca8f42c08", "Url": "https://api.github.com/repos/nshusa/astraeus-legacy", "Date": "2016-08-22T15:20:06Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLoading()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1461/buggy-version/app.src.main.java.ca.rmen.nounours.nounours.AndroidNounours.java", "BodyUseAPI": [], "Fixed commit": "1f47b4e405c243e5a8c2f5f3dd84a12734a5eca1", "Url": "https://api.github.com/repos/caarmen/nounours-android", "Date": "2015-10-25T20:29:05Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["baseline.hvac.HVACSystemImplUtil.boilerNumberCalculation(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numberOfBoiler == 1) { boilerList.add(\"Boiler%\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8397/buggy-version/src.baseline.hvac.system7.HVACSystem7.java", "BodyUseAPI": [], "Fixed commit": "61e36f8d65c207db55946bfcbe224eaa06cd2f39", "Url": "https://api.github.com/repos/weilixu/baseline", "Date": "2015-10-15T11:57:57Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["baseline.hvac.HVACSystemImplUtil.boilerNumberCalculation(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numberOfBoiler == 1) { boilerList.add(\"Boiler%\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8397/buggy-version/src.baseline.hvac.system5.HVACSystem5.java", "BodyUseAPI": [], "Fixed commit": "61e36f8d65c207db55946bfcbe224eaa06cd2f39", "Url": "https://api.github.com/repos/weilixu/baseline", "Date": "2015-10-15T11:57:57Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (containerJsonArr != null) { if ((containerJsonArr.size()) != 0) { chkRS.setMsg(\"\u8be5\u4e3b\u673a\u8d44\u6e90\u672a\u91ca\u653e\uff0c\u4e0d\u80fd\u51fa\u5e93\u3002\"); return chkRS; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4148/buggy-version/src.main.java.com.bsg.upm.api.check.HostCheck.java", "BodyUseAPI": ["com.alibaba.fastjson.JSONArray.size()"], "Fixed commit": "590681ff70b7e0e68ed10942c9e899ff562d0ac5", "Url": "https://api.github.com/repos/upmio/upm_api", "Date": "2017-05-17T11:32:46Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vagm.vagmdroid.service.BufferService.byteToInt(byte)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (errorTypeInt > 128) { errorTypeInt = errorTypeInt - 128; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/4049/buggy-version/src.main.java.com.vagm.vagmdroid.service.BufferService.java", "BodyUseAPI": [], "Fixed commit": "27b2c68a681ce1fa7779911ded47a180e3bf1dcb", "Url": "https://api.github.com/repos/romif/VAGm", "Date": "2014-05-21T19:23:18Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ids.contains(componentsVO.getId()))) { componentsList.add(componentsVO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1216/buggy-version/Quotations.src.com.kc.controller.ProductsCreateController.java", "BodyUseAPI": ["javafx.collections.ObservableList<com.kc.model.ComponentsVO>.add(com.kc.model.ComponentsVO)"], "Fixed commit": "c9b54ee3ff901c3c2bd644a222a8ecc4466fbcbc", "Url": "https://api.github.com/repos/friends-repository/QuotationFX", "Date": "2013-12-06T10:02:23Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ids.contains(componentsVO.getId()))) { componentList.add(componentsVO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/1216/buggy-version/Quotations.src.com.kc.controller.ProductsModifyController.java", "BodyUseAPI": ["javafx.collections.ObservableList<com.kc.model.ComponentsVO>.add(com.kc.model.ComponentsVO)"], "Fixed commit": "c9b54ee3ff901c3c2bd644a222a8ecc4466fbcbc", "Url": "https://api.github.com/repos/friends-repository/QuotationFX", "Date": "2013-12-06T10:02:23Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getServletRequest().getParameter(Constants.PARAM_VIEW)) != null) { indicatorViewForm.setView(((java.lang.String) (getServletRequest().getParameter(Constants.PARAM_VIEW)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8926/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.monitor.visibility.IndicatorChartsActionNG.java", "BodyUseAPI": [], "Fixed commit": "73b3b636ea18382d167a407f411272667453400c", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-01T12:58:44Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getSession().getAttribute(Constants.PARAM_VIEW)) != null) { indicatorViewsForm.setView(((java.lang.String) (request.getSession().getAttribute(Constants.PARAM_VIEW)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/8926/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.monitor.visibility.CurrentHealthActionNG.java", "BodyUseAPI": ["org.hyperic.hq.ui.action.resource.common.monitor.visibility.IndicatorViewsFormNG.setView(((java.lang.String) (request.getSession().getAttribute(Constants.PARAM_VIEW))))", "org.hyperic.hq.ui.action.resource.common.monitor.visibility.CurrentHealthActionNG.getSession()", "request.getSession().getAttribute(Constants.PARAM_VIEW)"], "Fixed commit": "73b3b636ea18382d167a407f411272667453400c", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-01T12:58:44Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Boot._init.fromJar()) cp += new java.io.File(s).getName(); else cp += new java.io.File(s).getCanonicalPath().substring(shared).replace('\\\\', '/');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/5047/buggy-version/src.main.java.water.sys.NodeHost.java", "BodyUseAPI": [], "Fixed commit": "bced466cacabf0a0f7003593ff0478d0792a02a4", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2013-03-20T06:23:50Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { pageNumber = savedInstanceState.getInt(ru.spbau.mit.antonpp.deepshot.fragment.HelpPageFragment.PageFragment.ARGUMENT_PAGE_NUMBER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V50/91/buggy-version/app.src.main.java.ru.spbau.mit.antonpp.deepshot.fragment.HelpPageFragment.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "154dcc78848aa9383c5d98164d694acc6d52de96", "Url": "https://api.github.com/repos/AntonGitName/DeepShot", "Date": "2015-12-19T19:56:03Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((URL_SOUND_RESOURCE) != null) { URL_SOUND_RESOURCE += \"/search\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2700/buggy-version/app.src.main.java.ar.com.ordia.collaborativesamples.APICallActivity.java", "BodyUseAPI": [], "Fixed commit": "45e874b5994c3798ba9260c391c385544c99c297", "Url": "https://api.github.com/repos/hordiales/bigdata-music-collab", "Date": "2017-07-21T00:32:24Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.categories) != null) { return java.lang.String.format(\"name=%s; id=%d ; ingredients= %s, categories= %s ; recipe=%s; imageUrl= %s\", this.name, this.id, this.ingredients, java.util.Arrays.deepToString(this.categories.toArray()), this.recipe, this.imageUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4130/buggy-version/bg.cakerecipes.daoservices.src.bg.cakerecipes.daoservices.rest.model.Cake.java", "BodyUseAPI": [], "Fixed commit": "5e3d07b260d36d446c7e90d82b2b5dcee8109234", "Url": "https://api.github.com/repos/svetlinas/cake.wizard", "Date": "2013-06-02T05:58:00Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.equals(computingType, \"ConcurrentHashMap2\")) { setupConcurrentHashMap2(); }else if (java.util.Objects.equals(computingType, \"Caffeine\")) { setupCaffeine(); }else if (java.util.Objects.equals(computingType, \"Guava\")) { setupGuava(); }else { throw new java.lang.AssertionError((\"Unknown computingType: \" + (computingType))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7620/buggy-version/src.jmh.java.com.github.benmanes.caffeine.cache.ComputeBenchmark.java", "BodyUseAPI": ["java.util.Objects.equals(java.lang.String,java.lang.String)", "java.util.Objects.equals(java.lang.String,java.lang.String)"], "Fixed commit": "98451104613fc0e823fd0fdd8bb9ed7b7cf9d1fa", "Url": "https://api.github.com/repos/ben-manes/caffeine", "Date": "2014-12-20T21:06:54Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.index.OIndex<?>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (lastIndexResult != null) result.addAll(applyTailIndexes(lastIndexResult));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4135/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OChainedIndexProxy.java", "BodyUseAPI": ["com.orientechnologies.orient.core.sql.OChainedIndexProxy<T>.applyTailIndexes(java.lang.Object)", "java.util.Set<com.orientechnologies.orient.core.db.record.OIdentifiable>.addAll(java.util.List<com.orientechnologies.orient.core.db.record.OIdentifiable>)"], "Fixed commit": "80e44bc4b122a3cb4c71ed6ae5dc7ad9476978f4", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-08-03T13:06:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (discDifference != 0) { return discDifference; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2183/buggy-version/app.src.main.java.agersant.polaris.features.browse.BrowseViewAlbum.java", "BodyUseAPI": [], "Fixed commit": "560190001698c43e38aa911e7a0318dd9377dd43", "Url": "https://api.github.com/repos/agersant/polaris-android", "Date": "2017-06-18T22:40:43Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fitems.get(position).icon) != null) && (!(fitems.get(position).icon.isEmpty()))) { back.setBackgroundDrawable(null); me.ccrama.rssslide.BaseApplication.getImageLoader(getContext()).displayImage(fitems.get(position).icon, back); }else { back.setBackgroundResource(R.drawable.circle); back.getBackground().setColorFilter(me.ccrama.rssslide.Palette.getColor(base), PorterDuff.Mode.MULTIPLY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3985/buggy-version/app.src.main.java.me.ccrama.rssslide.Adapters.SideArrayAdapter.java", "BodyUseAPI": ["me.ccrama.rssslide.BaseApplication.getImageLoader(getContext()).displayImage(fitems.get(position).icon,android.widget.ImageView)", "java.util.ArrayList<me.ccrama.rssslide.Realm.Feed>.get(int)"], "Fixed commit": "b835e4acad026cc0a83864882944becfcec7e549", "Url": "https://api.github.com/repos/ccrama/Slide-RSS", "Date": "2017-03-22T01:41:43Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(MainActivity.mTwoPane)) { android.support.v7.widget.Toolbar toolbar = ((android.support.v7.widget.Toolbar) (rootView.findViewById(R.id.toolbar))); ((android.support.v7.app.AppCompatActivity) (getActivity())).setSupportActionBar(toolbar); ((android.support.v7.app.AppCompatActivity) (getActivity())).getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6513/buggy-version/app.src.main.java.com.net.ddns.suyashbakshi.popularmovies.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "1030edd3f5bf121c620157ec678fcac6bfb6531b", "Url": "https://api.github.com/repos/suyashbakshi/Popular_Movies", "Date": "2016-04-03T07:10:13Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.server) != null) { this.server.disconnectUser(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7322/buggy-version/src.client.implementation.ClientDisplayer.java", "BodyUseAPI": [], "Fixed commit": "432310900644ae6a7c3b31b52529ccfed1c7db51", "Url": "https://api.github.com/repos/guiguilalane/GrumpyChat", "Date": "2013-11-04T12:10:10Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.croconaut.tictactoe.storage.GameRepository.getGameByGameId(inviteResponse.getGameId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.croconaut.tictactoe.utils.StateUtils.isGameInProgress(game.getGameState()))) { return valid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7517/buggy-version/app.src.main.java.com.croconaut.tictactoe.communication.GameCommunication.java", "BodyUseAPI": [], "Fixed commit": "bc3b8e484eda4345448252c6786c46ea22eb433a", "Url": "https://api.github.com/repos/croconaut/wifon", "Date": "2017-06-25T11:35:36Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bassebombecraft.world.WorldUtils.isWorldAtClientSide(worldIn)) { return super.onItemUse(player, worldIn, pos, hand, facing, hitX, hitY, hitZ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7436/buggy-version/bassebombecraft-1.8.src.main.java.bassebombecraft.item.book.GenericBlockClickedBook.java", "BodyUseAPI": ["net.minecraft.item.Item.onItemUse(net.minecraft.entity.player.EntityPlayer,net.minecraft.world.World,net.minecraft.util.math.BlockPos,net.minecraft.util.EnumHand,net.minecraft.util.EnumFacing,float,float,float)"], "Fixed commit": "578b39d5199cefd0b0b236a9cd447bbc05a27a8a", "Url": "https://api.github.com/repos/athrane/bassebombecraft", "Date": "2017-02-23T20:21:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resource.indexOf(\" \")) == 0) { input = resource.substring(1); }else { input = resource; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/852/buggy-version/src.main.java.AnnotedText2NIF.ConverterEngine.GatherAnnotationInformations.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "c004f3d4242e27f0f947114f472f72fb21853a90", "Url": "https://api.github.com/repos/dice-group/TextComparisonEvaluationTool", "Date": "2017-01-10T15:05:31Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.StringTokenizer.nextToken()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(value.equals(\"null\"))) { if (((startRow + i) < (jTable.getRowCount())) && ((startCol + j) < (jTable.getColumnCount()))) jTable.setValueAt(value, (startRow + i), (startCol + j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5195/buggy-version/src.gsingh.learnkirtan.ui.shabadeditor.tableeditor.ShabadTable.java", "BodyUseAPI": ["javax.swing.JTable.setValueAt(java.lang.String,int,int)"], "Fixed commit": "3a3cb033c157ca7a0e7b1543ff0cbaaead61927a", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2013-03-10T22:24:08Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (listProp.equalsIgnoreCase(\"last list\")) rdbtnLastList.setSelected(true); else { java.lang.String choosedListProp = AnimeIndex.appProp.getProperty(\"Last_list\"); rdbtnChooseList.setSelected(true); choosedList.setSelectedItem(choosedListProp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2607/buggy-version/src.util.window.PreferenceDialog.java", "BodyUseAPI": [], "Fixed commit": "97adeb2a999fbbfe2cb5ef68bbcce70ef7ca2e6d", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-07-22T14:08:00Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hotels.get(position).price.equals(\"\")) { android.widget.Toast.makeText(this, \"Invalid price\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/690/buggy-version/app.src.main.java.com.reka.tour.hotel.activity.ListHotelActivity.java", "BodyUseAPI": [], "Fixed commit": "a852d319aa9780fb62cb649f93de791c4bb07813", "Url": "https://api.github.com/repos/satryaway/rekausaha", "Date": "2016-03-07T10:21:51Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) locationText.setCompoundDrawables(getDrawable(R.drawable.ic_place_black), null, null, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/933/buggy-version/app.src.main.java.com.staysafe.staysafe.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5109d791ba9cc0007dcd3a69c5131409cb67af46", "Url": "https://api.github.com/repos/PtrDev/StaySafe", "Date": "2016-09-14T09:52:35Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/933/buggy-version/app.src.main.java.com.staysafe.staysafe.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5109d791ba9cc0007dcd3a69c5131409cb67af46", "Url": "https://api.github.com/repos/PtrDev/StaySafe", "Date": "2016-09-14T09:52:35Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(acs.tabbychat.core.TabbyChat.chanDataFile.getParentFile().exists())) acs.tabbychat.core.TabbyChat.chanDataFile.getParentFile().mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6847/buggy-version/acs.tabbychat.core.TabbyChat.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "0281f2820c3d9548eccd7a979da3b3c52d800188", "Url": "https://api.github.com/repos/rocketman10404/tabbychat", "Date": "2013-06-18T01:34:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.sasabz.android.sasabus.classes.MD5Utils.calculateMD5(java.io.File)", "it.sasabz.android.sasabus.classes.MD5Utils.extractMD5(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((md5 != null) && (calculatedMD5 != null)) return md5.equals(calculatedMD5); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7955/buggy-version/src.it.sasabz.android.sasabus.classes.MD5Utils.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "f06ddbc90eb7c8d6a5509b2e6071a77d4f982fbf", "Url": "https://api.github.com/repos/paolodongilli/SASAbus", "Date": "2012-04-25T06:13:42Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((site.getEncoding()) == null) { java.lang.String value = httpResponse.getEntity().getContentType().getValue(); site.setEncoding(new us.codecraft.spider.selector.PlainText(value).r(\"charset=([^\\\\s]+)\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8876/buggy-version/src.main.java.us.codecraft.spider.downloader.HttpClientDownloader.java", "BodyUseAPI": ["us.codecraft.spider.Site.setEncoding(new us.codecraft.spider.selector.PlainText(value).r(\"charset=([^\\\\s]+)\").toString())"], "Fixed commit": "3c3f0011869f58fbb7524ebcade491236e79d1c5", "Url": "https://api.github.com/repos/code4craft/webmagic", "Date": "2013-06-08T12:29:53Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (order < (filters.size())) { nextPoiTypeFilter = filters.get(order); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1989/buggy-version/src.main.java.io.mapsquare.osmcontributor.ui.activities.MapActivity.java", "BodyUseAPI": ["java.util.List<io.mapsquare.osmcontributor.ui.utils.PoiTypeFilter>.get(int)"], "Fixed commit": "865c2fa6959895afeb890ecbd974d532fa122c07", "Url": "https://api.github.com/repos/jawg/osm-contributor", "Date": "2016-06-27T11:40:01Z"},
{"Line": "=>1551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["semanticMarkup.ling.learn.Learner.markupByPatternHelper(this.myDataHolder.getSentenceHolder().get(i))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (flag) { myLogger.debug((\"Updated Sentence #\" + i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1984/buggy-version/src.semanticMarkup.ling.learn.Learner.java", "BodyUseAPI": [], "Fixed commit": "eabd1b6513d7e102b03d99a2d67c3b7855105d25", "Url": "https://api.github.com/repos/dongyemeng/charaparser-unsupervised", "Date": "2013-05-29T09:47:31Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.widget.ImageView>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (v != null) { android.view.ViewGroup parent = ((android.view.ViewGroup) (v.getParent())); if (parent != null) parent.removeView(v); container.addView(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8387/buggy-version/Abeceda.app.src.main.java.com.wargog.abeceda.ImagePagerAdapter.java", "BodyUseAPI": ["android.view.View.getParent()", "android.view.ViewGroup.removeView(android.view.View)", "android.view.ViewGroup.addView(android.view.View)"], "Fixed commit": "82bf01adba12daf22005893aa3b47aaabf47cd09", "Url": "https://api.github.com/repos/ikrcatov/Abeceda", "Date": "2014-10-16T19:57:34Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getAuthorizationStrategy()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (authorizationStrategy != null) for (java.lang.String group : authorizationStrategy.getGroups()) { referencedGroups.add(group.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3690/buggy-version/src.main.java.hudson.plugins.active_directory.ActiveDirectoryUserDetail.java", "BodyUseAPI": ["hudson.security.AuthorizationStrategy.getGroups()"], "Fixed commit": "4c70e16a07f7ee39901206f2356b94a178cc91c4", "Url": "https://api.github.com/repos/llecaroz/active-directory-plugin", "Date": "2015-11-12T19:39:46Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(findCameraIds())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8146/buggy-version/app.src.main.java.net.dvmansueto.hearhues.CamTone.java", "BodyUseAPI": [], "Fixed commit": "4f405e7c33efdf39686a74d1d06a8b582ce496bb", "Url": "https://api.github.com/repos/dvmansueto/HearHues", "Date": "2016-10-31T09:56:31Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params.isInvert()) == isFlash) foundStartBits++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5675/buggy-version/src.main.java.org.harctoolbox.analyze.AbstractBiphaseDecoder.java", "BodyUseAPI": [], "Fixed commit": "30531b53b7763234347258c2011556168ceada2c", "Url": "https://api.github.com/repos/bengtmartensson/IrpTransmogrifier", "Date": "2017-09-06T07:07:43Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sumitgouthaman.raven.persistence.Persistence.getUser(android.content.Context,newContact.secretUsername)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (alreadyExisting != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5552/buggy-version/raven.src.main.java.com.sumitgouthaman.raven.persistence.Persistence.java", "BodyUseAPI": [], "Fixed commit": "6c90fbace9f3483e8f77511d4c08422c6eed4fa6", "Url": "https://api.github.com/repos/sumitgouthaman/RavenChat", "Date": "2014-04-26T17:23:40Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion < 2) { db.execSQL(\"DROP TABLE IF EXISTS rel_prod_promo\"); db.delete(Constants.TABLE_PRODUCT, null, null); db.execSQL(((((\"ALTER TABLE \" + (com.facu.market.Utils.Constants.TABLE_PRODUCT)) + \" ADD COLUMN \") + (com.facu.market.Utils.Constants.QUANTITY)) + \" INTEGER\")); db.execSQL(((((\"ALTER TABLE \" + (com.facu.market.Utils.Constants.TABLE_PRODUCT)) + \" ADD COLUMN \") + (com.facu.market.Utils.Constants.PROMO_ID)) + \" INTEGER NULL\")); db.execSQL(((((\"ALTER TABLE \" + (com.facu.market.Utils.Constants.TABLE_PRODUCT)) + \" ADD COLUMN \") + (com.facu.market.Utils.Constants.HAS_PROMO)) + \" INTEGER\")); db.execSQL(Constants.TABLE_GLOBAL_SQL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3644/buggy-version/app.src.main.java.com.facu.market.ObjectDao.ProdDbDao.java", "BodyUseAPI": [], "Fixed commit": "70009ea256e54649bacc6ad1fd4a9d5f55e99dfb", "Url": "https://api.github.com/repos/facuesquivel/market", "Date": "2016-08-10T20:50:27Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.client.MongoCursor<T>.tryNext()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (proxiedNext == null) { return null; }else { return mapper.apply(proxiedNext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1852/buggy-version/driver.src.main.com.mongodb.MongoMappingCursor.java", "BodyUseAPI": ["com.mongodb.Function<T, U>.apply(T)"], "Fixed commit": "96bc7bbe9938231fd7b8295f4c8a10f4b6282424", "Url": "https://api.github.com/repos/jyemin/mongo-java-driver", "Date": "2014-11-13T03:50:17Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.getFormatName().equals(\"PubChem Compounds XML\")) { format = getFormat(\"PubChemCompoundXMLFormat\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7895/buggy-version/plugins.net.bioclipse.cdk.business.src.net.bioclipse.cdk.business.CDKManager.java", "BodyUseAPI": [], "Fixed commit": "a2ef10711bee8f7c31e2c531e61cbe7a8ad16ab9", "Url": "https://api.github.com/repos/bioclipse/bioclipse.cheminformatics", "Date": "2016-09-01T09:36:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((position == (mFoods.size())) && (position == 1)) { android.widget.Toast.makeText(v.getContext(), mFoods.get(0).getInfo(), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(v.getContext(), mFoods.get(position).getInfo(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4327/buggy-version/app.src.main.java.com.b3sk.fodmaper.adapters.RecyclerViewAdapter.java", "BodyUseAPI": ["mFoods.get(position).getInfo()", "android.widget.Toast.makeText(v.getContext(), mFoods.get(0).getInfo(), Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(v.getContext(),mFoods.get(0).getInfo(),Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(v.getContext(), mFoods.get(position).getInfo(), Toast.LENGTH_SHORT).show()", "java.util.List<com.b3sk.fodmaper.model.Food>.get(int)", "android.widget.Toast.makeText(v.getContext(),mFoods.get(position).getInfo(),Toast.LENGTH_SHORT)", "java.util.List<com.b3sk.fodmaper.model.Food>.get(int)", "mFoods.get(0).getInfo()"], "Fixed commit": "930fb5d8a6fa1fdf99451d9f541d47b20f95f91f", "Url": "https://api.github.com/repos/BarryBryant/fodmaper-android", "Date": "2016-05-23T01:22:28Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<byte[]>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((packetData.length) != 20) { return every15MinData; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6836/buggy-version/TLEShine.src.com.tranway.tleshine.model.BLEPacket.java", "BodyUseAPI": [], "Fixed commit": "1deba997338ad23e8d6c1888fe6069d28185946b", "Url": "https://api.github.com/repos/slowfall/tel", "Date": "2014-06-09T16:30:02Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getContext().asType(com.axelor.apps.base.db.Partner.class).getBankDetailsList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((bankDetailsList != null) && (!(bankDetailsList.isEmpty()))) { for (com.axelor.apps.base.db.BankDetails bankDetails : bankDetailsList) { if ((bankDetails.getIban()) != null) { com.axelor.apps.base.web.PartnerController.LOG.debug(\"checking iban code : {}\", bankDetails.getIban()); if (!(IBANCheckDigit.IBAN_CHECK_DIGIT.isValid(bankDetails.getIban()))) { ibanInError.add(bankDetails.getIban()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5429/buggy-version/axelor-base.src.main.java.com.axelor.apps.base.web.PartnerController.java", "BodyUseAPI": [], "Fixed commit": "d40662d2c9da83e7c7cf4ead9e828c2317c4541c", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2016-03-15T14:41:58Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((split.length) == 2) this.data[0] = com.v3ld1n.util.StringUtil.toInteger(split[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1396/buggy-version/src.com.v3ld1n.util.Particle.java", "BodyUseAPI": ["com.v3ld1n.util.StringUtil.toInteger(java.lang.String)"], "Fixed commit": "29c3f6bd0100cd27643f3386b3f0f1f035ed92a9", "Url": "https://api.github.com/repos/V3LD1N/V3LD1N-Bukkit-Plugin", "Date": "2016-12-21T02:14:29Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cu.getPackage()) != null) { packageName = cu.getPackage().getName().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2998/buggy-version/Debugger.src.debugger.PrintCodeListener.java", "BodyUseAPI": ["cu.getPackage().getName().toString()", "org.eclipse.jdt.core.dom.CompilationUnit.getPackage()", "cu.getPackage().getName()"], "Fixed commit": "2f625ec035e383d6e090429037f98921e1d3c231", "Url": "https://api.github.com/repos/llmhyy/BPRecorder", "Date": "2016-05-05T09:23:34Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isFinite(getInitialRootHeight())) { tuning = (getInitialRootHeight()) / 10.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4065/buggy-version/src.dr.app.beauti.options.PartitionTreeModel.java", "BodyUseAPI": [], "Fixed commit": "274eb00a2278cf0fe74290f8dbed23353e91bf4e", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2016-03-22T10:08:17Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Long.parseLong(rssFeed.pubdate)) - (java.lang.Long.parseLong(result.pubdate))) < 0) { com.maple.yuanweinan.feedstar.data.RssItemTable.delete(mFeedStarDBHelper, rssFeed.mID); rssFeed.clearAllItem(); rssFeed.addAllItem(result.getItems()); java.util.List<com.maple.yuanweinan.feedstar.lib.RSSItem> itemss = rssFeed.getItems(); for (int i = 0; i < (itemss.size()); i++) { com.maple.yuanweinan.feedstar.data.RssItemTable.insert(mFeedStarDBHelper, itemss.get(i)); } mAllRssItems.addAll(itemss); notifyFeedDataChanged(itemss); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6734/buggy-version/app.src.main.java.com.maple.yuanweinan.feedstar.manager.FeedStarDataManager.java", "BodyUseAPI": ["com.maple.yuanweinan.feedstar.lib.RSSFeed.addAllItem(result.getItems())", "com.maple.yuanweinan.feedstar.lib.RSSFeed.getItems()", "com.maple.yuanweinan.feedstar.lib.RSSFeed.getItems()", "com.maple.yuanweinan.feedstar.data.RssItemTable.delete(com.maple.yuanweinan.feedstar.db.FeedStarDBHelpler,rssFeed.mID)", "com.maple.yuanweinan.feedstar.lib.RSSFeed.clearAllItem()"], "Fixed commit": "943dd263bb4e448b240d674fdf60e2ed9a5e56c0", "Url": "https://api.github.com/repos/mapleyuan/FeedStar", "Date": "2016-04-26T13:53:07Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").substring(0, 2).equals(\"Wi\")) { fileDirectory = \"src\\\\books\"; }else if (java.lang.System.getProperty(\"os.name\").substring(0, 2).equals(\"Li\")) { fileDirectory = \"books\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7390/buggy-version/src.ClassLibrary.Bookshelf.java", "BodyUseAPI": [], "Fixed commit": "c92a019de383635a970832498595f3d68a5ae8d3", "Url": "https://api.github.com/repos/askewseth/Concordanator", "Date": "2016-02-03T12:05:44Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (op.getId().equals(\"Call\")) { if ((op.getChild(((op.getChildren().length) - 1)).getChildren()) != null) curr = op.getChild(((op.getChildren().length) - 1)).getChildren().length; }else if (((op.getId().equals(\"While\")) || (op.getId().equals(\"If\"))) || (op.getId().equals(\"Else\"))) { curr = limitStack(new java.lang.StringBuilder(), op, st); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3920/buggy-version/src.codeGenerator.CodeGenerator.java", "BodyUseAPI": ["op.getChild(((op.getChildren().length) - 1)).getChildren()", "codeGenerator.CodeGenerator.limitStack(java.lang.StringBuilder,semantic.HIRTree,semantic.Table)", "op.getId().equals(java.lang.String)", "op.getChild(((op.getChildren().length) - 1)).getChildren()", "semantic.HIRTree.getId()", "semantic.HIRTree.getChild(((op.getChildren().length) - 1))", "op.getId().equals(java.lang.String)", "semantic.HIRTree.getId()", "semantic.HIRTree.getChildren()", "semantic.HIRTree.getChild(((op.getChildren().length) - 1))", "semantic.HIRTree.getChildren()", "semantic.HIRTree.getId()", "op.getId().equals(java.lang.String)"], "Fixed commit": "2ce488fe3fdff7a23a7ec06235fd9737b35f7827", "Url": "https://api.github.com/repos/rpedro10/COMP", "Date": "2017-06-05T20:26:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isGroupFiles())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1545/buggy-version/components.formats-bsd.src.loci.formats.in.MicromanagerReader.java", "BodyUseAPI": [], "Fixed commit": "5d0c6e582bbeb9cb72da5bae5dda303015f9a37e", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-03-26T20:33:20Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pep.getEntryNamesMatches().contains(entryName)) { peptides.add(pep.getPeptide()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/884/buggy-version/web.src.main.java.org.nextprot.api.web.domain.PepXResponse.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "org.nextprot.api.web.domain.PepXResponse.PepXMatch.getPeptide()"], "Fixed commit": "74eae69399a38859974ce529712e169d049508ba", "Url": "https://api.github.com/repos/calipho-sib/nextprot-api", "Date": "2016-05-26T10:58:04Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((varAnnot.getVariant().getOriginal().length()) == 1) { if ((variantAA.length()) == 1) { sequenceWithVariant.setCharAt(variantPosition, varAnnot.getVariant().getVariant().charAt(0)); if (org.nextprot.api.core.utils.PeptideUtils.isPeptideContainedInTheSequence(peptide, sequenceWithVariant.toString(), modeIsoLeucine)) { resultAnnotations.add(varAnnot); } }else if ((variantAA.length()) == 0) { sequenceWithVariant.deleteCharAt(variantPosition); if (org.nextprot.api.core.utils.PeptideUtils.isPeptideContainedInTheSequence(peptide, sequenceWithVariant.toString(), modeIsoLeucine)) { resultAnnotations.add(varAnnot); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/884/buggy-version/web.src.main.java.org.nextprot.api.web.service.impl.PepXServiceImpl.java", "BodyUseAPI": ["java.util.List<org.nextprot.api.core.domain.annotation.Annotation>.add(org.nextprot.api.core.domain.annotation.Annotation)", "java.lang.StringBuilder.setCharAt(int,varAnnot.getVariant().getVariant().charAt(0))", "org.nextprot.api.core.domain.annotation.Annotation.getVariant()", "varAnnot.getVariant().getVariant().charAt(int)", "java.util.List<org.nextprot.api.core.domain.annotation.Annotation>.add(org.nextprot.api.core.domain.annotation.Annotation)", "varAnnot.getVariant().getVariant()"], "Fixed commit": "74eae69399a38859974ce529712e169d049508ba", "Url": "https://api.github.com/repos/calipho-sib/nextprot-api", "Date": "2016-05-26T10:58:04Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uploadSliceMillis != 0) { uploadSpeedTextView.setText(((uploadSliceSize / uploadSliceMillis) + \" KB/s\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1534/buggy-version/QiniuLab.src.com.qiniu.qiniulab.activity.SimpleUploadWithoutKeyActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "3d923d9963ccc225ad02165e270fce36e36fa912", "Url": "https://api.github.com/repos/jemygraw/qiniu-lab-android", "Date": "2014-12-04T07:24:32Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((thebetweenlands.manual.ManualManager.getCurrentCategory(BLItemRegistry.manualGuideBook, player)) != null) list.add(thebetweenlands.manual.ManualManager.getCurrentCategory(BLItemRegistry.manualGuideBook, player).name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7293/buggy-version/java.thebetweenlands.items.misc.ItemManual.java", "BodyUseAPI": ["thebetweenlands.manual.ManualManager.getCurrentCategory(BLItemRegistry.manualGuideBook,net.minecraft.entity.player.EntityPlayer)", "java.util.List.add(thebetweenlands.manual.ManualManager.getCurrentCategory(BLItemRegistry.manualGuideBook, player).name)"], "Fixed commit": "74bba04ef3d5682ff96b0e39719673b9172d89c7", "Url": "https://api.github.com/repos/Angry-Pixel/The-Betweenlands", "Date": "2016-01-15T23:39:29Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getExplicitValueType().equals(com.ge.research.sadl.jena.JenaBasedSadlModelValidator.ExplicitValueType.RESTRICTION)) { sb.append(\", restricted to explicit value '\"); }else { sb.append(\", is the explicit value '\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7973/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "12dcd0da38f96e80cfc6a613638e9ba7a336d0aa", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-10-07T16:55:39Z"},
{"Line": "=>1733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (leftConceptIdentifier == null) { issueAcceptor.addError(\"Type comparison not possible\", leftExpression); if ((metricsProcessor) != null) { metricsProcessor.addMarker(null, MetricsProcessor.ERROR_MARKER_URI, MetricsProcessor.UNCLASSIFIED_FAILURE_URI); } return false; }else if (rightConceptIdentifier == null) { issueAcceptor.addError(\"Type comparison not possible\", rightExpression); if ((metricsProcessor) != null) { metricsProcessor.addMarker(null, MetricsProcessor.ERROR_MARKER_URI, MetricsProcessor.UNCLASSIFIED_FAILURE_URI); } return false; }else if (!(compatibleTypes(operations, leftExpression, rightExpression, leftTypeCheckInfo, rightTypeCheckInfo))) { if (((leftTypeCheckInfo.getImplicitProperties()) != null) || ((rightTypeCheckInfo.getImplicitProperties()) != null)) { return compareTypesUsingImpliedProperties(operations, leftExpression, rightExpression, leftTypeCheckInfo, rightTypeCheckInfo); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7973/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "12dcd0da38f96e80cfc6a613638e9ba7a336d0aa", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-10-07T16:55:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dao.BookDao.read(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (book == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2981/buggy-version/src.service.implementation.GetBookInfoService.java", "BodyUseAPI": [], "Fixed commit": "c5e2130ee6c675c0351c39f3d72be5393c6ee322", "Url": "https://api.github.com/repos/vikdare11/LibraryServiceApp", "Date": "2016-04-03T16:40:35Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dao.ReaderDao.read(java.lang.Integer)", "dao.UserDao.read(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((reader == null) && (user == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2981/buggy-version/src.service.implementation.GetUserInfoService.java", "BodyUseAPI": [], "Fixed commit": "c5e2130ee6c675c0351c39f3d72be5393c6ee322", "Url": "https://api.github.com/repos/vikdare11/LibraryServiceApp", "Date": "2016-04-03T16:40:35Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentProductUri) != null) { quantityStr = mQuantityTextView.getText().toString(); }else { quantityStr = mQuantityEditText.getText().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6764/buggy-version/app.src.main.java.com.example.arun.udacity_inventory_app.ProductActivity.java", "BodyUseAPI": [], "Fixed commit": "153422882e4d92a1a2b007edca99fcfdbdd0c037", "Url": "https://api.github.com/repos/Gimbo44/Udacity_Inventory_App", "Date": "2016-11-08T05:25:01Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tileLayerExists) { res = ((org.geoserver.catalog.CoverageInfo) (layerInfo.getResource())); gwc.getCatalog().getResourcePool().clear(res.getStore()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1568/buggy-version/src.community.gridcoveragecache.src.main.java.org.geoserver.gwc.web.layer.RasterCachingLayerEditor.java", "BodyUseAPI": [], "Fixed commit": "d9252440f0dd263792f62cc51830fcd73cb1ae33", "Url": "https://api.github.com/repos/dromagnoli/geoserver", "Date": "2014-12-02T10:58:26Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSuccess) { mRepo.updateLatestCommitInfo(); mRepo.updateStatus(RepoContract.REPO_STATUS_NULL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8594/buggy-version/SGit.src.me.sheimi.sgit.repo.tasks.CloneTask.java", "BodyUseAPI": [], "Fixed commit": "817e0331af8e0643e09ea6a84d002d6b3d512a97", "Url": "https://api.github.com/repos/sheimi/SGit", "Date": "2013-12-24T23:34:45Z"},
{"Line": "=>932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (thisFinish.getPenalty().isFinishPenalty()) { thisFinish.getPenalty().clear(); thisFinish.setFinishPosition(new org.gromurph.javascore.model.FinishPosition(((fFinishers.getNumberFinishers()) + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/464/buggy-version/Javascore.src.main.java.org.gromurph.javascore.gui.DialogFinishListEditor.java", "BodyUseAPI": ["thisFinish.getPenalty().clear()", "org.gromurph.javascore.model.Finish.setFinishPosition(org.gromurph.javascore.model.FinishPosition)", "org.gromurph.javascore.model.Finish.getPenalty()"], "Fixed commit": "ea2c87a7c5ec277adba8ac808d853840d7e1565d", "Url": "https://api.github.com/repos/sgrosven/gromurph", "Date": "2016-11-07T21:59:56Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_ENTER)) { if (((connect.isEnabled()) && (name)) && (ip)) { ui.client.name = nameenter.getText(); ui.client.ip = ipenter.getText(); ui.client.start(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5576/buggy-version/src.ui.Lobby.java", "BodyUseAPI": [], "Fixed commit": "cdb76243d89904fe46bfea81b4bf38ebfce05d42", "Url": "https://api.github.com/repos/notmorbos/DrawMyThing", "Date": "2015-03-13T19:43:05Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getKeyCode()) == (java.awt.event.KeyEvent.VK_ENTER)) { if (((connect.isEnabled()) && (name)) && (ip)) { ui.client.name = nameenter.getText(); ui.client.ip = ipenter.getText(); ui.client.start(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5576/buggy-version/src.ui.Lobby.java", "BodyUseAPI": [], "Fixed commit": "cdb76243d89904fe46bfea81b4bf38ebfce05d42", "Url": "https://api.github.com/repos/notmorbos/DrawMyThing", "Date": "2015-03-13T19:43:05Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<manager.dht.FingerEntry, manager.ui.gfx.Arrow>.put(manager.dht.FingerEntry,manager.ui.gfx.Arrow)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (old != null) myFingers.remove(old);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3777/buggy-version/eclipse_projects.DHT.src.manager.ui.gfx.NodePanel.java", "BodyUseAPI": ["manager.ui.gfx.CirclePanel.remove(manager.ui.gfx.Arrow)"], "Fixed commit": "727597632ff9b0c785335cdbd34c89b0de5666e8", "Url": "https://api.github.com/repos/miun/mediasense", "Date": "2012-04-23T11:48:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(task.isCanceled())) { task.onCallback(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5287/buggy-version/src.cn.net.yto.engine.GeneralTaskEngine.java", "BodyUseAPI": ["cn.net.yto.engine.BaseTask.onCallback(java.lang.Object)"], "Fixed commit": "062ee03d359e3b401cfd1f0383f97de5a033343c", "Url": "https://api.github.com/repos/kit-team/xuebao", "Date": "2013-01-03T12:27:47Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((~(base.lastIndexOf(\".\"))) == (-1)) { base = base.substring(0, base.lastIndexOf(\".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9015/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissCZIReader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "d3ad56351b439da244e34845b9afe2a583cdb768", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-10T00:01:13Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((~(id.lastIndexOf(\".\"))) == (-1)) { base = id.substring(0, id.lastIndexOf(\".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9015/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissCZIReader.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "d3ad56351b439da244e34845b9afe2a583cdb768", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-10T00:01:13Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMessage) != null) send(currentMessage.createMessageResponse(composition.finish()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3649/buggy-version/src.com.thalmic.android.sample.helloworld.HelloWorldActivity.java", "BodyUseAPI": [], "Fixed commit": "013f187c027fbdf93e96e4b03dcfe5b316c6734b", "Url": "https://api.github.com/repos/Pebbleyo/android-app", "Date": "2014-09-14T05:19:50Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (statusCode != (org.apache.commons.httpclient.HttpStatus.SC_OK)) { edu.umich.ctools.sectionsUtilityTool.Utils.M_log.error(java.lang.String.format(\"The API call %s failed with status code %s due to %s \", clientRequest.getURI().toString(), statusCode, apiResponse)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2860/buggy-version/src.main.java.edu.umich.ctools.sectionsUtilityTool.Utils.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,clientRequest.getURI().toString(),int,java.lang.String)", "org.apache.commons.logging.Log.error(java.lang.String)"], "Fixed commit": "18e72504a5437a804490cfeb83c357a97c89a898", "Url": "https://api.github.com/repos/pushyamig/canvas_course_manager", "Date": "2017-05-31T19:09:12Z"},
{"Line": "=>1078", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distributedCache) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2634/buggy-version/core.javax.cache.src.main.java.org.wso2.carbon.caching.impl.CacheImpl.java", "BodyUseAPI": [], "Fixed commit": "a57ebc9fee3d551c78000df2d725c7d08e285d42", "Url": "https://api.github.com/repos/wso2/carbon-kernel", "Date": "2016-06-08T08:37:21Z"},
{"Line": "=>1124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distributedCache) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2634/buggy-version/core.javax.cache.src.main.java.org.wso2.carbon.caching.impl.CacheImpl.java", "BodyUseAPI": [], "Fixed commit": "a57ebc9fee3d551c78000df2d725c7d08e285d42", "Url": "https://api.github.com/repos/wso2/carbon-kernel", "Date": "2016-06-08T08:37:21Z"},
{"Line": "=>1108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((distributedCache) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2634/buggy-version/core.javax.cache.src.main.java.org.wso2.carbon.caching.impl.CacheImpl.java", "BodyUseAPI": [], "Fixed commit": "a57ebc9fee3d551c78000df2d725c7d08e285d42", "Url": "https://api.github.com/repos/wso2/carbon-kernel", "Date": "2016-06-08T08:37:21Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((saveFile) == null) { f = new java.io.File((((fileLocation.getText()) + (fileName.getText())) + \".txt\")); }else { f = saveFile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2996/buggy-version/src.org.horrgs.texteditor.windows.TESave.java", "BodyUseAPI": [], "Fixed commit": "ca14b6fbac0f02cfc2102cbe6ea9b784334e0abd", "Url": "https://api.github.com/repos/Horrgs/TextEditor", "Date": "2015-02-16T05:38:17Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6518/buggy-version/app.src.main.java.sxwang.me.ohmyyeelight.interaction.DefaultMessageDecoder.java", "BodyUseAPI": [], "Fixed commit": "0d03d2476f043ca81c067b12f0e3cb9e24babe55", "Url": "https://api.github.com/repos/wsxyeah/OhMyYeelight", "Date": "2017-05-03T10:09:14Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((commitmentList.size()) - 1)) commPanelLayout.putConstraint(javax.swing.SpringLayout.SOUTH, commitPanel, 0, javax.swing.SpringLayout.SOUTH, separator);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1964/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.CommitmentView.java", "BodyUseAPI": [], "Fixed commit": "0b4c068bf66351686d6668fcd2be934230d6246e", "Url": "https://api.github.com/repos/magwitch324/wpi-suite", "Date": "2013-11-20T07:03:37Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app.park.com.MainActivity.mBluetoothFragment.isBluetoothConnected()) { app.park.com.MainActivity.updateUi(Constants.MESSAGE_BT_CONNECTED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4564/buggy-version/app.src.main.java.app.park.com.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "27bc0beeb73b5a75902da9c8b875908ab8866bee", "Url": "https://api.github.com/repos/EvanHa/dt-demo", "Date": "2016-09-18T08:36:37Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xingcloud.delayserver.OrignalData.getInstance().redisCacheKeys.get(com.xingcloud.delayserver.FilterKey)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cacheKeyInfos == null) return caches;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1293/buggy-version/src.main.java.com.xingcloud.delayserver.DelayAnalysisLogicRunnable.java", "BodyUseAPI": [], "Fixed commit": "96f6a4e03b35f9fcf61f5dcf259afabb4cbb9fea", "Url": "https://api.github.com/repos/XingCloud/DelayLogServer", "Date": "2013-12-17T06:46:17Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sakaiproject.portal.render.portlet.services.SakaiOptionalPortletContainerServices.M_log.isDebugEnabled()) { org.sakaiproject.portal.render.portlet.services.SakaiOptionalPortletContainerServices.M_log.debug((\"Property name = \" + propertyName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1090/buggy-version/portal.portal-render-impl.impl.src.java.org.sakaiproject.portal.render.portlet.services.SakaiOptionalPortletContainerServices.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "69f03f2a7fac26424c8cf042ad95b02bd0fe060c", "Url": "https://api.github.com/repos/bjones86/sakai", "Date": "2016-02-19T23:18:31Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device) != null) { message = \" connection=\" + (device.getConnection().getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8103/buggy-version/NFCommunicator.nfcommunicator.src.main.java.com.neofect.communicator.CommunicationController.java", "BodyUseAPI": [], "Fixed commit": "358c50be53669e8d9ee2f1c09a00c5fc9ce830a8", "Url": "https://api.github.com/repos/Neofect/Communicator", "Date": "2017-10-20T13:18:40Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visible) mf.updateGrid(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6686/buggy-version/ruletris.src.ruletris.World.java", "BodyUseAPI": [], "Fixed commit": "7dde38baee8965b80f54bcdf6d1024115e38c780", "Url": "https://api.github.com/repos/dpp23/Ruletris", "Date": "2013-02-28T18:46:31Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.example.cesarsk.say_it.MainActivity.WordList.isEmpty()) { java.io.BufferedReader line_reader = new java.io.BufferedReader(new java.io.InputStreamReader(getResources().openRawResource(R.raw.wordlist))); java.lang.String line; try { while ((line = line_reader.readLine()) != null) { com.example.cesarsk.say_it.MainActivity.WordList.add(line); } } catch (java.io.IOException e) { e.printStackTrace(); } java.util.Collections.sort(com.example.cesarsk.say_it.MainActivity.WordList); android.widget.Toast.makeText(this, ((\"Caricate \" + (com.example.cesarsk.say_it.MainActivity.WordList.size())) + \" parole.\"), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4823/buggy-version/app.src.main.java.com.example.cesarsk.say_it.MainActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, ((\"Caricate \" + (com.example.cesarsk.say_it.MainActivity.WordList.size())) + \" parole.\"), Toast.LENGTH_LONG).show()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.size()", "java.util.Collections.sort(java.util.ArrayList<java.lang.String>)", "android.widget.Toast.makeText(com.example.cesarsk.say_it.MainActivity,java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "0825fa6917021b4b6e6945439ec99a400cf3d15d", "Url": "https://api.github.com/repos/Cesarsk/Say_it", "Date": "2017-02-15T09:20:38Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((amount > 0) && (type.getSpawnable())) { for (int i = 0; i < amount; i++) { com.jme3.scene.Node node = edu.chl.LifeOfAGoblin.jME3.factory.NodeFactory.createNode(type); node.setUserData(\"nodeType\", type.toString()); this.getSpatial().getParent().attachChild(node); node.setLocalTranslation(this.getSpatial().getLocalTranslation()); node.getControl(com.jme3.bullet.control.CharacterControl.class).warp(this.getSpatial().getLocalTranslation()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8273/buggy-version/src.main.java.edu.chl.LifeOfAGoblin.jME3.controller.SpawnControl.java", "BodyUseAPI": ["edu.chl.LifeOfAGoblin.jME3.factory.NodeType.toString()", "edu.chl.LifeOfAGoblin.jME3.factory.NodeFactory.createNode(edu.chl.LifeOfAGoblin.jME3.factory.NodeType)", "com.jme3.scene.Node.setUserData(java.lang.String,type.toString())"], "Fixed commit": "1575ae31141d0aa8814d49f634806564c2802d85", "Url": "https://api.github.com/repos/Mrmiffo/LifeOfAGoblin", "Date": "2015-05-21T09:42:39Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (examSparsity) ret.examSparsity();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4464/buggy-version/src.main.java.org.apache.sysml.runtime.matrix.data.LibMatrixNative.java", "BodyUseAPI": [], "Fixed commit": "d2bd629767bbe63708428aa3fca54e9c84f85562", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-04-27T05:02:01Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (examSparsity) ret.examSparsity();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4464/buggy-version/src.main.java.org.apache.sysml.runtime.matrix.data.LibMatrixNative.java", "BodyUseAPI": [], "Fixed commit": "d2bd629767bbe63708428aa3fca54e9c84f85562", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-04-27T05:02:01Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (title.equals(\"favicon\")) { return \"index\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1097/buggy-version/src.main.java.com.kirinpatel.mytime.spring.controllers.IndexController.java", "BodyUseAPI": [], "Fixed commit": "bff8a14b705a6eb36064a3082475d2fb25b139d8", "Url": "https://api.github.com/repos/ajchili/MyTime", "Date": "2017-08-22T20:55:25Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isBlank(username)) || (org.apache.commons.lang3.StringUtils.isBlank(password))) throw new java.lang.IllegalArgumentException(\"Configure user and password of ADMIN into properties file.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3337/buggy-version/cam-service.src.main.java.it.eng.cam.rest.security.authentication.credentials.admin.LoginAdminTask.java", "BodyUseAPI": [], "Fixed commit": "c905c112cd7109351eee0ee530d7c57ebf391e60", "Url": "https://api.github.com/repos/BEinCPPS/fitman-cam", "Date": "2016-12-21T15:44:39Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(v.toString().equals(\"-1\"))) neighbours.append(v.toString()).append(\",\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9166/buggy-version/parsingGPlusData.GPlusReducer.java", "BodyUseAPI": ["org.apache.hadoop.io.Text.toString()", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(v.toString())"], "Fixed commit": "acfeac627dd625b06460da1339c3d4b160e171a7", "Url": "https://api.github.com/repos/metastableB/bigDataExperiments", "Date": "2015-05-26T21:06:13Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (surveyInstances != null) { for (org.waterforpeople.mapping.domain.SurveyInstance surveyInstance : surveyInstances) { java.lang.Long surveyInstanceId = surveyInstance.getObjectId(); java.util.List<org.waterforpeople.mapping.domain.QuestionAnswerStore> answerStores = questionAnswerStoreMap.get(surveyInstanceId); org.waterforpeople.mapping.app.web.dto.SurveyInstanceDto siDto = createSurveyInstanceDto(questionDao, questionTypeMap, answerStores, surveyInstance); dto.getSurveyInstances().add(siDto); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7505/buggy-version/GAE.src.org.waterforpeople.mapping.app.web.SurveyedLocaleServlet.java", "BodyUseAPI": [], "Fixed commit": "8c7ad6bfcc92783b621f39a60e62607502b9f93f", "Url": "https://api.github.com/repos/akvo/akvo-flow", "Date": "2017-09-08T09:45:50Z"},
{"Line": "=>1913", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Character.isLetterOrDigit((ch = in.readUnsignedByte()))) { in.readPosition(position); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5846/buggy-version/src.main.java.net.openhft.chronicle.bytes.BytesInternal.java", "BodyUseAPI": ["net.openhft.chronicle.bytes.StreamingDataInput.readPosition(long)"], "Fixed commit": "eb3a1fa3d8156016e97260c8995d14ab3e0b9d5d", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Bytes", "Date": "2017-05-31T16:26:07Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((foundedNotebookPermission.getUserId()) == userId) { nbpMapper.delete(foundedNotebookPermission); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5761/buggy-version/noteit.src.de.hdm.itprojekt.noteit.server.NotesAdministrationImpl.java", "BodyUseAPI": ["de.hdm.itprojekt.noteit.server.db.NotebookPermissionMapper.delete(de.hdm.itprojekt.noteit.shared.bo.NotebookPermission)"], "Fixed commit": "20f8c635476566f42c6601c4bfaaa87b0f23c630", "Url": "https://api.github.com/repos/ChristianUlrichRoth/itprojektws1617-noteit", "Date": "2017-01-19T07:58:23Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { commandLine.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4695/buggy-version/src.dr.app.beast.BeastMain.java", "BodyUseAPI": [], "Fixed commit": "16dedc6dde1b8ab82f9c88e7d9c127254a94b49c", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2016-02-18T11:03:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((it.unical.ea.aquamarine.multigamingCompetitionSystem.games.tressette.TressetteGameManager.getInstance().getPlayerMatch(me)) == null) { it.unical.ea.aquamarine.multigamingCompetitionSystem.games.tressette.TressetteGameManager.getInstance().startMatch(new it.unical.ea.aquamarine.multigamingCompetitionSystem.games.core.Player(me), new it.unical.ea.aquamarine.multigamingCompetitionSystem.games.core.Player(otherPlayer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1677/buggy-version/src.java.it.unical.ea.aquamarine.multigamingCompetitionSystem.controllers.TressetteController.java", "BodyUseAPI": ["it.unical.ea.aquamarine.multigamingCompetitionSystem.games.tressette.TressetteGameManager.getInstance().startMatch(it.unical.ea.aquamarine.multigamingCompetitionSystem.games.core.Player,it.unical.ea.aquamarine.multigamingCompetitionSystem.games.core.Player)"], "Fixed commit": "b575dcb7a752f94f7d8a27eda13bfa39d93d608c", "Url": "https://api.github.com/repos/Acquamarine/aquamarineCompetitionSystem", "Date": "2015-01-03T15:41:22Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataList.isEmpty()) { mView.ptrListView.onRefreshComplete(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1793/buggy-version/app.src.free.java.cn.wehack.spurious.vp.user.works.MyWorksPresenter.java", "BodyUseAPI": [], "Fixed commit": "7ce6bec48c77073c9c93559016bb8fce750ad642", "Url": "https://api.github.com/repos/zhichangterry/almost-true-android", "Date": "2015-12-04T12:29:49Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.transactionSettings.testSession) == null) session.transactionSettings.testSession = session.getMesaSessionName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3000/buggy-version/session.src.main.java.gov.nist.toolkit.session.server.serviceManager.UtilityRunner.java", "BodyUseAPI": ["gov.nist.toolkit.session.server.Session.getMesaSessionName()"], "Fixed commit": "bfafb7912339b674bdb2b48eeccf74de4bdc8b04", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2017-01-06T02:11:22Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.transactionSettings.environmentName) == null) session.transactionSettings.environmentName = session.getCurrentEnvName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3000/buggy-version/session.src.main.java.gov.nist.toolkit.session.server.serviceManager.UtilityRunner.java", "BodyUseAPI": ["gov.nist.toolkit.session.server.Session.getCurrentEnvName()"], "Fixed commit": "bfafb7912339b674bdb2b48eeccf74de4bdc8b04", "Url": "https://api.github.com/repos/usnistgov/iheos-toolkit2", "Date": "2017-01-06T02:11:22Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.charAt(start)) == '\"') { start = start + 1; endChar = findNextQuote(input, start); }else { endChar = input.indexOf(\" \", start); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8357/buggy-version/jgrapht-ext.src.main.java.org.jgrapht.ext.DOTImporter.java", "BodyUseAPI": ["org.jgrapht.ext.DOTImporter<V, E>.findNextQuote(java.lang.String,int)", "java.lang.String.indexOf(java.lang.String,int)"], "Fixed commit": "525b446115fdbe55f46c4ebe3703d8b94ff25678", "Url": "https://api.github.com/repos/monora/jgrapht", "Date": "2016-04-01T19:26:23Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((topic) != null) topic = com.iskrembilen.quasseldroid.gui.MessageUtil.parseStyleCodes(this, topic.toString(), preferences.getBoolean(getResources().getString(R.string.preference_colored_text), true));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9259/buggy-version/QuasselDroid.src.main.java.com.iskrembilen.quasseldroid.gui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6fc24fb4bdb0b0d2eade2b3ec3569d8c0f20377c", "Url": "https://api.github.com/repos/justjanne/QuasselDroid", "Date": "2015-11-14T11:18:27Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (indexOfAppend != (-1)) { android.util.Log.d(\"YouTubeTrailer\", (\"indexOfAppend:\" + indexOfAppend)); youTubeTrailerId = youTubeTrailerId.substring(0, indexOfAppend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8394/buggy-version/PopularMovies.app.src.main.java.com.udevel.popularmovies.data.local.entity.YouTubeTrailer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "7a3424d915f13a7b7286250070e876b194bae11e", "Url": "https://api.github.com/repos/uDevel/Udacity-Project-1-PopularMovies", "Date": "2015-09-08T05:57:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getRelation().startsWith(\"$\")) { sb.append(getRelation().substring(1)); }else { sb.append(getRelation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3152/buggy-version/PigGeneWebApp.src.piggene.serialisation.workflow.StoreOperation.java", "BodyUseAPI": [], "Fixed commit": "44aaac012f3b83a7669a1822fdc5dcb1c3678c81", "Url": "https://api.github.com/repos/genepi/pig-gene", "Date": "2014-06-11T06:08:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selection.start) != (selection.end)) { for (android.text.style.StyleSpan span : getStyleSpans(str, selection)) { if ((span.getStyle()) == (style)) { result = true; break; } } }else { android.text.style.StyleSpan[] spansBefore = str.getSpans(((selection.start) - 1), selection.end, android.text.style.StyleSpan.class); android.text.style.StyleSpan[] spansAfter = str.getSpans(selection.start, ((selection.end) + 1), android.text.style.StyleSpan.class); for (android.text.style.StyleSpan span : spansBefore) { if ((span.getStyle()) == (style)) { result = true; break; } } if (result) { result = false; for (android.text.style.StyleSpan span : spansAfter) { if ((span.getStyle()) == (style)) { result = true; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/44/buggy-version/src.com.commonsware.cwac.richedit.StyleEffect.java", "BodyUseAPI": ["android.text.Spannable.getSpans(((selection.start) - 1),selection.end,java.lang.Class)", "com.commonsware.cwac.richedit.StyleEffect.getStyleSpans(android.text.Spannable,com.commonsware.cwac.richedit.Selection)", "android.text.Spannable.getSpans(selection.start,((selection.end) + 1),java.lang.Class)"], "Fixed commit": "c8b82342ced973ce32314b6fa45f1bf0b5897420", "Url": "https://api.github.com/repos/commonsguy/cwac-richedit", "Date": "2011-12-24T21:35:41Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selection.start) != (selection.end)) { T[] spans = str.getSpans(selection.start, selection.end, clazz); result = (spans.length) > 0; }else { T[] spansBefore = str.getSpans(((selection.start) - 1), selection.end, clazz); T[] spansAfter = str.getSpans(selection.start, ((selection.end) + 1), clazz); result = ((spansBefore.length) > 0) && ((spansAfter.length) > 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/44/buggy-version/src.com.commonsware.cwac.richedit.SimpleBooleanEffect.java", "BodyUseAPI": ["android.text.Spannable.getSpans(((selection.start) - 1),selection.end,java.lang.Class<T>)", "android.text.Spannable.getSpans(selection.start,selection.end,java.lang.Class<T>)", "android.text.Spannable.getSpans(selection.start,((selection.end) + 1),java.lang.Class<T>)"], "Fixed commit": "c8b82342ced973ce32314b6fa45f1bf0b5897420", "Url": "https://api.github.com/repos/commonsguy/cwac-richedit", "Date": "2011-12-24T21:35:41Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCounter) >= 0) && ((mCounter) < (PlayerUtils.mHand.size()))) { com.sdkcdg.cahphone.PlayerUtils.selectCards(mCounter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/470/buggy-version/CAHPhone.src.com.sdkcdg.cahphone.CardsFragment.java", "BodyUseAPI": [], "Fixed commit": "f3c205b8a94ed97ae038c73ffacfa7f22ff2073b", "Url": "https://api.github.com/repos/kushaank/AndroidTVHackathon-Feb2015", "Date": "2015-02-07T23:57:50Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.FragmentManager.findFragmentById(R.id.fragmentContainer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (cm == null) { fm.beginTransaction().add(R.id.fragmentContainer, cm).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/470/buggy-version/CAHPhone.src.com.sdkcdg.cahphone.MainActivity.java", "BodyUseAPI": ["fm.beginTransaction().add(R.id.fragmentContainer,com.sdkcdg.cahphone.CardsFragment)", "fm.beginTransaction().add(R.id.fragmentContainer, cm).commit()"], "Fixed commit": "f3c205b8a94ed97ae038c73ffacfa7f22ff2073b", "Url": "https://api.github.com/repos/kushaank/AndroidTVHackathon-Feb2015", "Date": "2015-02-07T23:57:50Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.isEmpty()) { return new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8378/buggy-version/Mage.src.mage.cards.repository.CardInfo.java", "BodyUseAPI": [], "Fixed commit": "e1fdae81e23ac850440281e92fd74b7444026b02", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-07-07T12:19:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.isActivePlayer(player)) { for (com.jaredpearson.puzzlestrike.Chip chip : game.getActivePlayerContext().getHand()) { actions.add(new com.jaredpearson.puzzlestrike.states.PlayActionState.GenericAction((\"Play \" + (chip.getName())))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1386/buggy-version/src.main.java.com.jaredpearson.puzzlestrike.states.PlayActionState.java", "BodyUseAPI": ["com.jaredpearson.puzzlestrike.Game.getActivePlayerContext()", "game.getActivePlayerContext().getHand()"], "Fixed commit": "462e09f690f16c673a86930dcd11bdff3916384a", "Url": "https://api.github.com/repos/jaredpearson/puzzlestrike", "Date": "2013-04-06T19:45:05Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openecard.apache.http.StatusLine.getStatusCode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (statusCode >= 400) { java.lang.String msg = java.lang.String.format(\"Received a result code %d '%s' from server.\", statusCode, reason); throw new org.openecard.transport.httpcore.InvalidResultStatus(msg); }else { conn.receiveResponseEntity(response); entity = response.getEntity(); finished = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6930/buggy-version/control-interface.control-modules.tctoken.src.main.java.org.openecard.control.module.tctoken.TCTokenGrabber.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int,java.lang.String)"], "Fixed commit": "7f5357f4f861c405ed1ee6a048a4b7e1e9589f03", "Url": "https://api.github.com/repos/ecsec/open-ecard", "Date": "2013-05-21T08:41:51Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.realm.internal.Table.getColumnIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) { throw new java.lang.IllegalArgumentException(((\"Invalid query: \" + (names[i])) + \" does not refer to a class.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6127/buggy-version/realm.src.main.java.io.realm.RealmQuery.java", "BodyUseAPI": [], "Fixed commit": "0e2c10feec11ad7be66f9a8030bdaf5722ceb69f", "Url": "https://api.github.com/repos/realm/realm-java", "Date": "2014-11-18T13:49:09Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attacker.getOwner().equals(defender.getOwner())) { throw new java.lang.IllegalArgumentException(\"Both territories are own by the same player.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6249/buggy-version/projecttemplate.src.main.java.edu.chl.ChalmersRisk.controller.ChalmersRisk.java", "BodyUseAPI": [], "Fixed commit": "3cdefda300ff73db9498a914c7871a33fa618720", "Url": "https://api.github.com/repos/rutanjr/group25", "Date": "2015-04-30T12:47:37Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mInitiator.isBound()) mInitiator.unbind();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8215/buggy-version/app.src.main.java.cargo.cargocollector.MainActivity.java", "BodyUseAPI": ["cargo.cargocollector.ServiceInitiator.unbind()"], "Fixed commit": "137e08872d0265faa198f7ae480a4a75d1d1a6f5", "Url": "https://api.github.com/repos/Cargo-Labs/CargoCollector", "Date": "2015-03-02T11:30:25Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mInitiator.isBound())) mInitiator.bind();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8215/buggy-version/app.src.main.java.cargo.cargocollector.MainActivity.java", "BodyUseAPI": ["cargo.cargocollector.ServiceInitiator.bind()"], "Fixed commit": "137e08872d0265faa198f7ae480a4a75d1d1a6f5", "Url": "https://api.github.com/repos/Cargo-Labs/CargoCollector", "Date": "2015-03-02T11:30:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mInitiator.isBound()) mInitiator.unbind();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8215/buggy-version/app.src.main.java.cargo.cargocollector.MainActivity.java", "BodyUseAPI": ["cargo.cargocollector.ServiceInitiator.unbind()"], "Fixed commit": "137e08872d0265faa198f7ae480a4a75d1d1a6f5", "Url": "https://api.github.com/repos/Cargo-Labs/CargoCollector", "Date": "2015-03-02T11:30:25Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.moveText) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9/buggy-version/app.src.main.java.com.ab.pgn.PgnItem.java", "BodyUseAPI": [], "Fixed commit": "abad542add363a5917e0b06db2f74ace3334d6e9", "Url": "https://api.github.com/repos/ab-chesspad/ChessPad", "Date": "2017-10-15T16:16:22Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (returnTile != null) returnTile.setWorldObj(world);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3128/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.blocks.BlockEnclosed.java", "BodyUseAPI": ["net.minecraft.tileentity.TileEntity.setWorldObj(net.minecraft.world.World)"], "Fixed commit": "2d2fec1fc2a65fe0eb23e9a395b19599d07aa7d3", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2015-04-18T13:35:24Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cookies == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/11/buggy-version/src.main.java.org.eweb4j.mvc.CookieProxy.java", "BodyUseAPI": [], "Fixed commit": "ff6050347fc6767991a11f86195cac8269c05a39", "Url": "https://api.github.com/repos/laiweiwei/eweb4j-framework", "Date": "2013-04-08T00:52:34Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (names == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/11/buggy-version/src.main.java.org.eweb4j.mvc.HttpSessionProxy.java", "BodyUseAPI": [], "Fixed commit": "ff6050347fc6767991a11f86195cac8269c05a39", "Url": "https://api.github.com/repos/laiweiwei/eweb4j-framework", "Date": "2013-04-08T00:52:34Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (names == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/11/buggy-version/src.main.java.org.eweb4j.mvc.ServletContextProxy.java", "BodyUseAPI": [], "Fixed commit": "ff6050347fc6767991a11f86195cac8269c05a39", "Url": "https://api.github.com/repos/laiweiwei/eweb4j-framework", "Date": "2013-04-08T00:52:34Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.getName().startsWith(\"D5\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3815/buggy-version/src.lab8_one_mers.SingleThreadedOneMer.java", "BodyUseAPI": [], "Fixed commit": "6860986aea600f387f88fa36259455bce0d137ce", "Url": "https://api.github.com/repos/palomnyk/adv_prog", "Date": "2017-11-08T19:18:51Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["representation.QuantumTable.getQuantum(((quantum.getLiteral()) * (-1)))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (mirrorQuantum != null) { possibleNextState.addForbiddenQuantum(mirrorQuantum); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5972/buggy-version/src.solvers.DualSolver.java", "BodyUseAPI": ["representation.SearchState.addForbiddenQuantum(representation.Quantum)"], "Fixed commit": "3cd28a063629d2537e6a99b8d5b6a167727ead6f", "Url": "https://api.github.com/repos/murilloflores/sat-solvers", "Date": "2012-10-13T19:41:44Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(result.next())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2042/buggy-version/src.DatabaseStuff.DatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "849c4fc9f3b90ae717e5f57fc60c8ff81c76f3c9", "Url": "https://api.github.com/repos/jojoman2/Kurskollen", "Date": "2015-03-30T09:37:48Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rVDO.getValue().startsWith(\"<\"))) rowData.put(\"count\", rVDO.getValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3472/buggy-version/ejb.src.org.openelis.bean.SDWISUnloadReportBean.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,rVDO.getValue())", "org.openelis.domain.ResultViewDO.getValue()"], "Fixed commit": "e8853ff65103fd44af85f6596afd383c7f985459", "Url": "https://api.github.com/repos/mbielicke/OpenELIS-Iowa", "Date": "2011-09-06T19:39:43Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentDataGraph) != null) { image(currentDataGraph, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1140/buggy-version/Observatory.src.observatory.Observatory.java", "BodyUseAPI": [], "Fixed commit": "483beb7d5539b52c22f4da75408ec965a19e343b", "Url": "https://api.github.com/repos/redfieldp/observatory_2014", "Date": "2014-04-16T00:43:10Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((AdvancedXP.instance.theme) != null) { java.lang.String tempFileNameStorage = AdvancedXP.instance.theme.fileName; AdvancedXP.instance.theme = co.bugg.advancedxp.util.FileUtil.deserializeTheme(new java.io.File(((AdvancedXP.instance.themesPath) + tempFileNameStorage))); AdvancedXP.instance.theme.fileName = tempFileNameStorage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4532/buggy-version/src.main.java.co.bugg.advancedxp.AdvancedXPEventHandler.java", "BodyUseAPI": [], "Fixed commit": "9c9a37801b7bc367b5df0f19ae9734e42ef20232", "Url": "https://api.github.com/repos/bugfroggy/AdvancedXP", "Date": "2017-09-28T01:24:12Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((annotations.get(desc)) != null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2719/buggy-version/core.src.main.java.org.teavm.parsing.Parser.java", "BodyUseAPI": [], "Fixed commit": "7019e1ada693422197ee58bc7493e1487b8835c7", "Url": "https://api.github.com/repos/jtulach/teavm", "Date": "2017-05-20T21:16:23Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearFromTriggers) { for (teamwork.goodVibrations.Trigger t : triggers.getTriggers()) { t.removeFunction(new java.lang.Integer(id)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5593/buggy-version/src.teamwork.goodVibrations.GoodVibrationsService.java", "BodyUseAPI": [], "Fixed commit": "31b86aaed8e2955abcc75a74b6d699f0d85bcc5e", "Url": "https://api.github.com/repos/schnej7/GoodVibrations", "Date": "2012-04-23T12:38:55Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (whereAlreadyAdded || (!isFirstTag)) { query.append(Constants.SPACE).append(Constants.AND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1309/buggy-version/src.main.java.com.db.influxdb.Query.java", "BodyUseAPI": [], "Fixed commit": "05ad008f3b81f24a93dcd04bab553771b2225a87", "Url": "https://api.github.com/repos/ashishdoneriya/influxdb-java", "Date": "2017-03-08T06:56:08Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, android.bluetooth.BluetoothGattCharacteristic>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/82/buggy-version/Smartlink.src.main.java.lib.smartlink.BLEService.java", "BodyUseAPI": [], "Fixed commit": "7351da3ac41db5952f02a83224613173d40bc6fe", "Url": "https://api.github.com/repos/TobyRich/lib-smartlink-android", "Date": "2014-07-22T11:26:39Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentapiVersion >= (Build.VERSION_CODES.KITKAT)) { seekBar.setProgress(((int) (HookMethods.editText.getBackground().getAlpha()))); }else { seekBar.setProgress(255); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2940/buggy-version/app.src.main.java.com.marz.snapprefs.HookedLayouts.java", "BodyUseAPI": [], "Fixed commit": "ec3b3a01357abe0d1e78640acac95ed6cc1a06bc", "Url": "https://api.github.com/repos/marzika/Snapprefs", "Date": "2016-05-06T15:35:22Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (newObject == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7053/buggy-version/com.googlecode.efactory.ui.src.com.googlecode.efactory.ui.contentassist.EFactoryProposalProvider.java", "BodyUseAPI": [], "Fixed commit": "e3801e8224d363a60b2e48b285a3c289054833c1", "Url": "https://api.github.com/repos/vorburger/efactory", "Date": "2013-06-07T13:24:34Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.xtext.resource.XtextResource.getParseResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parseResult == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7053/buggy-version/com.googlecode.efactory.ui.src.com.googlecode.efactory.ui.highlighting.EFactoryHighlightingCalculator.java", "BodyUseAPI": [], "Fixed commit": "e3801e8224d363a60b2e48b285a3c289054833c1", "Url": "https://api.github.com/repos/vorburger/efactory", "Date": "2013-06-07T13:24:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) player = ((org.bukkit.entity.Player) (sender));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2599/buggy-version/src.me.daddychurchill.CityWorld.CommandCityChunk.java", "BodyUseAPI": [], "Fixed commit": "bf678da62da18e4f5ae3c7af527377568ffbe3b8", "Url": "https://api.github.com/repos/echurchill/CityWorld", "Date": "2016-03-19T23:55:59Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tempFollowers == null) { myAuthor = new twitter.SocialNetwork.Author(author, 0); }else { myAuthor = new twitter.SocialNetwork.Author(author, followsGraph.get(author).size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6061/buggy-version/ps2.src.twitter.SocialNetwork.java", "BodyUseAPI": [], "Fixed commit": "ec5a829800d7a534fa7144bcf532e001f0ac003d", "Url": "https://api.github.com/repos/zgaleday/6_005", "Date": "2016-10-31T18:13:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lastName.equals(other.lastName)) { return firstName.compareTo(other.firstName); }else { return lastName.compareTo(other.lastName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3591/buggy-version/src.com.teamtreehouse.model.Player.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "4ba5039503f5c69d2cf88bce665fe4117e859b32", "Url": "https://api.github.com/repos/dbriesz/soccer-league-organizer", "Date": "2016-12-01T03:48:56Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outGoingChannels.size()) == 0) { NormalMessage noMessage = new NormalMessage(\"no connections\", 0, 0, this, this); messagesSend.add(noMessage); return messagesSend; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6787/buggy-version/Visual.src.Process.java", "BodyUseAPI": [], "Fixed commit": "c5df084ac43c8184946215d171cc55abd73488b1", "Url": "https://api.github.com/repos/BastinJafari/Visualisation", "Date": "2017-03-15T22:47:53Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ofy().load().type(net.mademocratie.gae.server.services.impl.Vote.class).limit(limit).list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((votes.size()) == 1) && ((votes.get(0)) == null)) { net.mademocratie.gae.server.services.impl.ManageVoteImpl.LOGGER.warning((\"unable to remove null entity (ofy bug?) :\" + (votes.get(0)))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3891/buggy-version/src.main.java.net.mademocratie.gae.server.services.impl.ManageVoteImpl.java", "BodyUseAPI": ["java.util.List<net.mademocratie.gae.server.services.impl.Vote>.get(int)", "java.util.logging.Logger.warning((\"unable to remove null entity (ofy bug?) :\" + (votes.get(0))))"], "Fixed commit": "00f67a0ba0301d66590ee94451d7e17739a259fe", "Url": "https://api.github.com/repos/boly38/mademae", "Date": "2013-06-16T11:59:59Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLoggedInUser()) != null) throw new org.ndexbio.model.exceptions.UnauthorizedOperationException((((\"User \" + (getLoggedInUser().getAccountName())) + \" doesn't have read access to network \") + networkId)); else throw new org.ndexbio.model.exceptions.UnauthorizedOperationException((\"Anonymous users don't have read access to network \" + networkId));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7799/buggy-version/src.main.java.org.ndexbio.rest.services.NetworkAService.java", "BodyUseAPI": [], "Fixed commit": "e5866a401f3d612d92f67a25644dfb2a3827cdea", "Url": "https://api.github.com/repos/ndexbio/ndex-rest", "Date": "2015-12-17T21:28:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((keyBytes == null) || ((keyBytes.length) == 0)) { this.rows.add(new com.netflix.astyanax.thrift.model.ThriftRowImpl<K, C>(null, null, new com.netflix.astyanax.thrift.model.ThriftColumnListImpl<C>(row.getColumns(), colSer))); }else { this.rows.add(new com.netflix.astyanax.thrift.model.ThriftRowImpl<K, C>(keySer.fromBytes(keyBytes), java.nio.ByteBuffer.wrap(keyBytes), new com.netflix.astyanax.thrift.model.ThriftColumnListImpl<C>(row.getColumns(), colSer))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3732/buggy-version/astyanax-thrift.src.main.java.com.netflix.astyanax.thrift.model.ThriftCqlRowsImpl.java", "BodyUseAPI": [], "Fixed commit": "9d8094b5a8ad7ff7c98ceb3b711c5b5fda401bac", "Url": "https://api.github.com/repos/shyamalan/astyanax", "Date": "2013-04-09T19:46:45Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getStoryFormattedID()) != null) { storyId = task.getStoryFormattedID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6896/buggy-version/src.main.java.com.sqasquared.toolkit.email.EmailGenerator.java", "BodyUseAPI": ["com.sqasquared.toolkit.connection.TaskRallyObject.getStoryFormattedID()"], "Fixed commit": "599b6d342099ef9b611ea6e3ad79eef1b4dbac07", "Url": "https://api.github.com/repos/jtran064/SQAAS_Toolkit", "Date": "2016-12-22T20:03:01Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((att.getAttributeValues().size()) < 1) { _logger.error((\"Empty attribute (skipped): \" + att)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8163/buggy-version/asimba-am-remote-saml2.src.main.java.com.alfaariss.oa.authentication.remote.saml2.profile.AbstractAuthNMethodSAML2Profile.java", "BodyUseAPI": ["org.apache.commons.logging.Log.error((\"Empty attribute (skipped): \" + att))"], "Fixed commit": "5aa7b5de359efc8e59dea99e76a44586b534ed83", "Url": "https://api.github.com/repos/GluuFederation/gluu-Asimba", "Date": "2016-09-21T13:37:05Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Index.constructQuery(java.lang.String,models.Parameter.id(category))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (queryBuilder == null) { throw new java.lang.IllegalStateException(java.lang.String.format(\"Could not construct query for term '%s', index '%s', category '%s'\", query, index, category)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7927/buggy-version/lodmill-ui.app.models.Search.java", "BodyUseAPI": [], "Fixed commit": "52be03b53357dc23f42b2168c7dc09a7ec7ba7f1", "Url": "https://api.github.com/repos/fsteeg/lodmill", "Date": "2013-05-22T14:49:52Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.isFile()) mGroupFiles.add(new com.csus.csc258.csc258_group_project.GroupFile(f.getName(), getApplicationContext(), deviceID, null));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1865/buggy-version/app.src.main.java.com.csus.csc258.csc258_group_project.MainActivity.java", "BodyUseAPI": ["java.io.File.getName()", "java.util.List<com.csus.csc258.csc258_group_project.GroupFile>.add(com.csus.csc258.csc258_group_project.GroupFile)"], "Fixed commit": "814a162447fcb5aecf3f743145f16810a6be37bd", "Url": "https://api.github.com/repos/Yulonggg/CSc258_Group_Project", "Date": "2016-05-13T03:11:09Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<java.io.File>.add(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newElement) { jodd.util.ClassLoaderUtil.addInnerClasspathItems(classpaths, f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8293/buggy-version/jodd-core.src.main.java.jodd.util.ClassLoaderUtil.java", "BodyUseAPI": [], "Fixed commit": "137810ff4c4c0f206963b4d8472864b26db4ca94", "Url": "https://api.github.com/repos/oblac/jodd", "Date": "2012-10-03T10:35:01Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((table != null) && (!(table.name().equals(\"\")))) { persistedClasses.put(table.name(), className); tables.add(table.name()); }else { tables.add(simpleClassName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1230/buggy-version/src.main.java.it.polimi.modaclouds.cpimlibrary.entitymng.PersistenceMetadata.java", "BodyUseAPI": ["javax.persistence.Table.name()", "java.util.Map<java.lang.String, java.lang.String>.put(table.name(),java.lang.String)", "javax.persistence.Table.name()", "java.util.Set<java.lang.String>.add(table.name())"], "Fixed commit": "986c6744b9de90b8ba539ac78c8649a19e05b1fe", "Url": "https://api.github.com/repos/Arci/modaclouds-cpim-library", "Date": "2015-01-22T14:35:21Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tableName == null) { throw new java.lang.NullPointerException(\"Table name cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1230/buggy-version/src.main.java.it.polimi.modaclouds.cpimlibrary.entitymng.migration.SeqNumberDispenserImpl.java", "BodyUseAPI": [], "Fixed commit": "986c6744b9de90b8ba539ac78c8649a19e05b1fe", "Url": "https://api.github.com/repos/Arci/modaclouds-cpim-library", "Date": "2015-01-22T14:35:21Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (injectedMethodReturnType.equals(\"void\")) { elseContent = (((\"\\t\\t\" + \"object.\") + injectedMethodName) + \"();\") + \"\\r\\n\"; }else { elseContent = (((\"\\t\\t\" + \" return object.\") + injectedMethodName) + \"();\") + \"\\r\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5422/buggy-version/src.ntut.csie.aspect.AddAspectsMarkerResoluation.java", "BodyUseAPI": [], "Fixed commit": "f66ad6c387b3a791be8dbcdc75dcc84957f5b78a", "Url": "https://api.github.com/repos/NTUTLAB1321Robusta/Robusta", "Date": "2016-05-30T02:09:12Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMode) == (uk.co.dw87.mbed.m3picontroller.RobotThread.STATE_PAUSED)) { prevMode = uk.co.dw87.mbed.m3picontroller.RobotThread.STATE_PAUSED; }else if ((mMode) == (uk.co.dw87.mbed.m3picontroller.RobotThread.STATE_RUNNING)) { prevMode = uk.co.dw87.mbed.m3picontroller.RobotThread.STATE_RUNNING; setState(uk.co.dw87.mbed.m3picontroller.RobotThread.STATE_PAUSED); resetDisplay(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7870/buggy-version/app.src.main.java.uk.co.dw87.mbed.m3picontroller.RobotThread.java", "BodyUseAPI": [], "Fixed commit": "1351c5f0556cc4044dd84ab42bdb3143eb99cf25", "Url": "https://api.github.com/repos/dw87/m3piController", "Date": "2014-03-18T19:15:37Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (com.verivital.hyst.grammar.formula.Expression.expressionPrinter)) { throw new java.lang.RuntimeException((\"expressionPrinter not initialized \" + \"in the expression.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1416/buggy-version/src.java.com.verivital.hyst.grammar.formula.Expression.java", "BodyUseAPI": [], "Fixed commit": "236a924a94c458f717fd94e2b23b1815d652a5e7", "Url": "https://api.github.com/repos/smover/hyst", "Date": "2016-12-11T19:25:54Z"},
{"Line": "=>1363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(paused)) || (!(ingame))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4598/buggy-version/src.org.fbla.game.boards.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "97162363f3810412bb57a7e1d97b7d31e280ebb0", "Url": "https://api.github.com/repos/FBLA-Game/Trinnorica", "Date": "2016-04-19T14:49:03Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exists) tool.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4598/buggy-version/src.org.fbla.game.spriteutils.Entity.java", "BodyUseAPI": [], "Fixed commit": "97162363f3810412bb57a7e1d97b7d31e280ebb0", "Url": "https://api.github.com/repos/FBLA-Game/Trinnorica", "Date": "2016-04-19T14:49:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request instanceof javax.servlet.http.HttpServletRequest) && ((((javax.servlet.http.HttpServletRequest) (request)).getSession(false)) != null)) { de.springbootbuch.webmvc.DemoFilter.LOG.info(\"Request from {}\", (shoppingCart.get().getContent().isEmpty() ? \"\" : \"not\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/623/buggy-version/src.main.java.de.springbootbuch.webmvc.DemoFilter.java", "BodyUseAPI": [], "Fixed commit": "31efd439c29a3a64b53c53475f630d31f51d3eb5", "Url": "https://api.github.com/repos/springbootbuch/webmvc", "Date": "2017-06-12T12:32:57Z"},
{"Line": "=>4461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/762/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "3817f2042c58909ac0eca6f5a666ad0d5176f7fc", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-08-31T04:27:39Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getEntityType().equals(EntityType.HORSE)) { org.bukkit.entity.Horse horse = ((org.bukkit.entity.Horse) (event.getEntity())); if ((horse.getPassenger()) != null) { if (horse.isTamed()) event.setCancelled(true); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1056/buggy-version/Stables.src.me.raum.stables.EventListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageEvent.setCancelled(boolean)", "org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Fixed commit": "4ee41b230269725399c12757b040656efaecbff6", "Url": "https://api.github.com/repos/externo6/Stables", "Date": "2014-07-28T22:54:28Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(LibraryConstants.PREFS_KEY_CAMERA_WARNING_SHOWN,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (warningAlreadyShown) { doTakePicture(icicle); }else { eu.geopaparazzi.library.util.GPDialogs.infoDialog(this, \"IMPORTANT README: If you experience crashes of the app while taking pictures try to lower the resolution of your camera in the settings.\", new java.lang.Runnable() { @java.lang.Override public void run() { doTakePicture(icicle); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/763/buggy-version/geopaparazzilibrary.src.main.java.eu.geopaparazzi.library.camera.CameraNoteActivity.java", "BodyUseAPI": [], "Fixed commit": "4158a2e30cb1c3f903a99105e0d3a29053c80f57", "Url": "https://api.github.com/repos/geopaparazzi/geopaparazzi", "Date": "2017-11-20T08:11:44Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (null != clusterFriendlyName) { cluster.setFriendlyName(clusterFriendlyName.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4927/buggy-version/src.main.java.com.emc.rpsp.dataloader.service.impl.DataLoaderServiceImpl.java", "BodyUseAPI": ["java.lang.Object.toString()", "com.emc.rpsp.rpsystems.ClusterSettings.setFriendlyName(java.lang.String)"], "Fixed commit": "ba48e34a39245da98ad866f1dc6dc219d8eb110f", "Url": "https://api.github.com/repos/cunla/RPSP", "Date": "2015-11-11T12:11:40Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2791/buggy-version/src.igwmod.gui.GuiWiki.java", "BodyUseAPI": [], "Fixed commit": "1d9e2080cc93a041307269b649d7db55b1d9cdd6", "Url": "https://api.github.com/repos/MineMaarten/IGW-mod", "Date": "2016-01-21T12:04:18Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (extras == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2228/buggy-version/app.src.main.java.com.app.university.GcmIntentService.java", "BodyUseAPI": [], "Fixed commit": "3142c9500d2c6067c66e29ec502dd874eaa8ead3", "Url": "https://api.github.com/repos/acstep/aaa", "Date": "2015-03-15T05:16:40Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content == null) || (content.equals(\"\"))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5698/buggy-version/app.src.main.java.jp.ac.titech.psg.nakano.keyphrasememo.activities.fragments.GetTagTask.java", "BodyUseAPI": [], "Fixed commit": "56d48501a03495f078c0a5ae2602a40b453b0690", "Url": "https://api.github.com/repos/mi-nakano/KeyphraseMemo", "Date": "2015-07-23T00:22:12Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["indexedSlicesQuery.execute().get().getList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (results.isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6292/buggy-version/IdentityService.src.main.java.com.slandir.identity.dao.CassandraPersonDao.java", "BodyUseAPI": [], "Fixed commit": "088a74d49e688c580c7906e988acb18bd15b062c", "Url": "https://api.github.com/repos/jarwel/Slandir", "Date": "2012-04-10T15:34:15Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["indexedSlicesQuery.execute().get().getList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (results.isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6292/buggy-version/SubmissionService.src.main.java.com.slandir.submission.dao.CassandraGrievanceDao.java", "BodyUseAPI": [], "Fixed commit": "088a74d49e688c580c7906e988acb18bd15b062c", "Url": "https://api.github.com/repos/jarwel/Slandir", "Date": "2012-04-10T15:34:15Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.isInfoEnabled()) org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.info(\"Stopping Zuul Proxy server\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1066/buggy-version/egov.egov-services.src.main.java.org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "e7e18e1be109fddbad5aac9e18a2b7c8a9b3b57e", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-03-22T12:15:12Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.isInfoEnabled()) org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.logger.info(\"Starting Zuul Proxy server\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1066/buggy-version/egov.egov-services.src.main.java.org.egov.services.zuulproxy.listeners.ZuulProxyStartServerListener.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "e7e18e1be109fddbad5aac9e18a2b7c8a9b3b57e", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-03-22T12:15:12Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groupValues.size()) == 0) groupEdit.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1968/buggy-version/app.src.main.java.com.example.master.mastercontacts.NewContactActivity.java", "BodyUseAPI": [], "Fixed commit": "db24f9979650d65ab15697533574f620d6d49839", "Url": "https://api.github.com/repos/r9software/contacts_sample", "Date": "2017-03-31T17:53:32Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((groupEdit.getSelectedItem()) != null) contact.setGroupId(groups.get(groupEdit.getSelectedItem().toString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1968/buggy-version/app.src.main.java.com.example.master.mastercontacts.NewContactActivity.java", "BodyUseAPI": ["com.example.master.mastercontacts.model.Contact.setGroupId(java.lang.Integer)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(groupEdit.getSelectedItem().toString())", "android.widget.Spinner.getSelectedItem()", "groupEdit.getSelectedItem().toString()"], "Fixed commit": "db24f9979650d65ab15697533574f620d6d49839", "Url": "https://api.github.com/repos/r9software/contacts_sample", "Date": "2017-03-31T17:53:32Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (biome != null) { aint[i] = biome; }else { aint[i] = ints[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8488/buggy-version/src.main.java.com.mcjty.rftools.dimension.world.GenLayerFiltered.java", "BodyUseAPI": [], "Fixed commit": "f28aa1264136f81476c05f7a453bcf7a8d48e43c", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-03-17T11:07:14Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.willshex.blogwt.client.page.PageType.fromString(current.getPage())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p == null) { p = com.willshex.blogwt.client.page.PageType.PostsPageType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8955/buggy-version/src.main.java.com.willshex.blogwt.client.part.HeaderPart.java", "BodyUseAPI": [], "Fixed commit": "21239f9b4629605bdb19536bb1eb2f8c85a303e4", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2015-06-25T11:30:59Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextLevelID > (rsmg.io.CharacterProgress.getUnlockedLevels())) { rsmg.io.CharacterProgress.setUnlockedLevels(nextLevelID); rsmg.io.CharacterProgress.saveFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8164/buggy-version/src.rsmg.controller.LevelState.java", "BodyUseAPI": ["rsmg.io.CharacterProgress.setUnlockedLevels(int)"], "Fixed commit": "2db1527ba3810302d9e4c60fe93ba599817b24f4", "Url": "https://api.github.com/repos/MaTachi/Robots-Stole-My-Girlfriend", "Date": "2012-05-08T07:44:04Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (charindex >= (w1.length())) { return true; }else if (charindex >= (w2.length())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3627/buggy-version/HW6.src.tasktwo.CodeSort.java", "BodyUseAPI": [], "Fixed commit": "925f833599b9589348ad5a1a147471d621367362", "Url": "https://api.github.com/repos/tjiang11/HW6", "Date": "2015-04-29T16:22:33Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((PassThroughConstants.FAULTS_AS_HTTP_200.equals(name)) && (axis2MessageCtx.getProperty(PassThroughConstants.FAULTS_AS_HTTP_200).toString().toLowerCase().equals(\"true\"))) { axis2MessageCtx.setProperty(PassThroughConstants.HTTP_SC, 200); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8407/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.builtin.PropertyMediator.java", "BodyUseAPI": ["org.apache.synapse.MessageContext.setProperty(PassThroughConstants.HTTP_SC,int)"], "Fixed commit": "e25e48299ad56c9e2c9497becb7e90ec83374f1b", "Url": "https://api.github.com/repos/Shakila/wso2-synapse", "Date": "2015-05-19T08:30:13Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends com.almasb.fxgl.asset.AssetManager>.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (url.toString().startsWith(\"jar\")) return com.almasb.fxgl.asset.AssetManager.loadFileNamesJar(directory.substring(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6712/buggy-version/src.com.almasb.fxgl.asset.AssetManager.java", "BodyUseAPI": [], "Fixed commit": "ffef37dd81929b61f1168c0f4b95be87426ddac9", "Url": "https://api.github.com/repos/AlmasB/FXGL", "Date": "2015-07-04T19:31:42Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.zip.ZipEntry.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entryName.endsWith(\"/\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6712/buggy-version/src.com.almasb.fxgl.asset.AssetManager.java", "BodyUseAPI": [], "Fixed commit": "ffef37dd81929b61f1168c0f4b95be87426ddac9", "Url": "https://api.github.com/repos/AlmasB/FXGL", "Date": "2015-07-04T19:31:42Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (professor.getText().contains(\";\")) { for (int j = 0; j < ((professor.getText().split(\";\").length) - 1); j++) { com.wpi.cs509.teamA.ui.Dialog.Professor p = new com.wpi.cs509.teamA.ui.Dialog.Professor(professor.getText().split(\";\")[j], node.getId()); professors.add(p); } }else { com.wpi.cs509.teamA.ui.Dialog.Professor p = new com.wpi.cs509.teamA.ui.Dialog.Professor(professor.getText(), node.getId()); professors.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1022/buggy-version/BaseModel.src.com.wpi.cs509.teamA.ui.Dialog.NodeInfoDIalog.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.lang.String.split(java.lang.String)", "javax.swing.JTextField.getText()", "java.lang.String.split(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "27c9190f24e2caf6df737a176bddb9e22741ffa5", "Url": "https://api.github.com/repos/cuixiongyi/WPI-F2015-CS509-TeamA", "Date": "2015-12-15T16:59:46Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.Period.getWeeks()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (weeksAgo == 0) { age = com.repaskys.microblog.domain.Post.PERIOD_FORMATTER.print(period.normalizedStandard()); }else { age = \"a long while back\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1064/buggy-version/microblog.src.main.java.com.repaskys.microblog.domain.Post.java", "BodyUseAPI": [], "Fixed commit": "6e93dcba3d6bb5d517ab4789b018be6689d260b3", "Url": "https://api.github.com/repos/d-rep/Microblog", "Date": "2012-05-23T00:56:13Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bytesToCopy != 0) { addOneTo(_V); _engine.processBlock(_V, 0, out, 0); java.lang.System.arraycopy(out, 0, output, (i * (out.length)), bytesToCopy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6378/buggy-version/core.src.main.java.org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG.java", "BodyUseAPI": ["java.lang.System.arraycopy(byte[],int,byte[],int,int)"], "Fixed commit": "bd2ce823231aa11c40f44d4a4b16f7ba7b10629f", "Url": "https://api.github.com/repos/bcgit/bc-java", "Date": "2015-02-08T11:47:36Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iCreate) db.create(); else throw new com.orientechnologies.orient.core.exception.ODatabaseException(((\"Database '\" + (url)) + \"' not found\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2637/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientGraphFactory.java", "BodyUseAPI": [], "Fixed commit": "3c70ace7e7e81ec86e673a9643783fdcf82550a5", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-04-12T10:36:30Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.id.ORID.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (rec != null) rec.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2776/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ODatabaseRecordTx.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.ORecord<?>.delete()"], "Fixed commit": "3949b7c45f4eacac194fcbdb64a00b8ec532ee20", "Url": "https://api.github.com/repos/pellyadolfo/orientdb", "Date": "2013-05-21T12:36:09Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (running) { android.support.v4.app.FragmentTransaction transaction = getSupportFragmentManager().beginTransaction(); transaction.replace(R.id.flFragment, frag); transaction.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7747/buggy-version/app.src.main.java.azevedo.jp.bra.activities.ActivityMain.java", "BodyUseAPI": [], "Fixed commit": "cd71751c76bc1a8cd399a47cea10e926a67f68d2", "Url": "https://api.github.com/repos/JPAzevedo/BRA", "Date": "2017-07-11T01:18:16Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exchange.hasOut()) { query.setVariable(\"out\", exchange.getOut()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/206/buggy-version/components.camel-josql.src.main.java.org.apache.camel.builder.sql.SqlBuilder.java", "BodyUseAPI": ["org.apache.camel.Exchange.getOut()", "org.josql.Query.setVariable(java.lang.String,exchange.getOut())"], "Fixed commit": "cf9212221e63a4318210c20aa5ffe77dd989d64c", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-12-05T12:59:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(filterInvocation.getResponse().isCommitted())) { filterInvocation.getChain().doFilter(filterInvocation.getRequest(), filterInvocation.getResponse()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1627/buggy-version/src.main.java.com.leewaiho.Security.MyFilterSecurityInterceptor.java", "BodyUseAPI": ["org.springframework.security.web.FilterInvocation.getChain()", "org.springframework.security.web.FilterInvocation.getResponse()", "org.springframework.security.web.FilterInvocation.getRequest()", "filterInvocation.getChain().doFilter(filterInvocation.getRequest(),filterInvocation.getResponse())"], "Fixed commit": "1ab1e0687433cee592373bc45415963a78527e74", "Url": "https://api.github.com/repos/LeeWaiHo/spring-boot-security-oauth2-rbac-demo", "Date": "2017-07-24T09:21:42Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch.uepaa.quickstart.MainActivity.mIsStarting) { ch.uepaa.quickstart.MainActivity.mIsStarting = false; startP2pDiscovery(); startGeoDiscovery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8243/buggy-version/app.src.main.java.ch.uepaa.quickstart.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f2baa507b82bcf05e3be2f8c9a15d7d76e27b402", "Url": "https://api.github.com/repos/Uepaa-AG/p2pkit-quickstart-android", "Date": "2015-07-20T13:05:46Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedMap) == 0) { selectedMap = (mapNames.size()) - 1; }else { selectedMap = (selectedMap) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6195/buggy-version/core.src.tankRevolution.view.CustomGameView.java", "BodyUseAPI": [], "Fixed commit": "5e2d9bea16dbf680d6c56e2da71119b742bb1067", "Url": "https://api.github.com/repos/skarrman/Wapitihjort", "Date": "2017-05-18T12:41:22Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mAdapter) == null) || ((mRules) == null)) { android.widget.Toast.makeText(getActivity(), getResources().getText(R.string.rule_list_fab_when_no_internet_message), Toast.LENGTH_LONG).show(); }else if (mAdapter.getShouldRetry()) { android.widget.Toast.makeText(getActivity(), getResources().getText(R.string.rule_list_fab_when_retry_message), Toast.LENGTH_LONG).show(); }else { android.content.Intent i = com.homesky.homesky.fragments.clause.ClauseActivity.newIntent(getActivity(), mNodeId, mControllerId); startActivityForResult(i, com.homesky.homesky.fragments.ruleList.RuleListFragment.NEW_RULE_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5882/buggy-version/app.src.main.java.com.homesky.homesky.fragments.ruleList.RuleListFragment.java", "BodyUseAPI": [], "Fixed commit": "e155cb78c742831f29b72d31e8bd71c82cf36baf", "Url": "https://api.github.com/repos/HomeSkyLtd/app", "Date": "2016-10-18T20:00:33Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (files == null) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/335/buggy-version/app.src.main.java.com.roman.zapriy.severefilemanager.content_for_list.DirectoryModel.java", "BodyUseAPI": [], "Fixed commit": "14831985bb324b48077e85c35c676a8bd2e82806", "Url": "https://api.github.com/repos/alexeyzapriy/SevereFileManager", "Date": "2016-05-26T21:33:11Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((item.getValue()) != null) && (value != null)) && (item.getValue().equals(value))) return item;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/813/buggy-version/src.main.java.net.sf.rubycollect4j.RubyHash.java", "BodyUseAPI": [], "Fixed commit": "9203c336386b7aa361a0aa41f6d25779327a81b3", "Url": "https://api.github.com/repos/wnameless/rubycollect4j", "Date": "2013-10-03T07:30:07Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { value = fieldElement.getChildText((fieldName + \".1\"), fieldElement.getNamespace()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6217/buggy-version/Product.Production.Software.src.main.java.org.cophm.validation.XmlParser.java", "BodyUseAPI": [], "Fixed commit": "e02bb46fe1b19ade2c020cae2799b78e2706f1fd", "Url": "https://api.github.com/repos/SCHIEPPH/schiepph", "Date": "2012-09-25T19:56:19Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.kamron.pogoiv.ScreenGrabber.getInstance()) != null) { @android.support.annotation.ColorInt int[] pixels = com.kamron.pogoiv.ScreenGrabber.getInstance().grabPixels(area); if (pixels != null) { if ((areaColor[0]) != null) { return ((pixels[0]) == (areaColor[0])) && ((pixels[1]) == (areaColor[1])); }else { return (((pixels[0]) == (android.graphics.Color.rgb(250, 250, 250))) || ((pixels[0]) == (android.graphics.Color.rgb(249, 249, 249)))) && ((pixels[1]) == (android.graphics.Color.rgb(28, 135, 150))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2712/buggy-version/app.src.main.java.com.kamron.pogoiv.pokeflycomponents.ScreenWatcher.java", "BodyUseAPI": [], "Fixed commit": "90bd5cab51c099c85f7ebc6b47f5d98cf6341426", "Url": "https://api.github.com/repos/thearaks/GoIV", "Date": "2017-09-25T22:18:55Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.Text.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (workingDir.equals(\".\")) { workingDir = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/128/buggy-version/org.erlide.ui.src.org.erlide.ui.launch.RuntimeTab.java", "BodyUseAPI": [], "Fixed commit": "a5ac7c0a4926105a8978c3f98f12d06a4264c80d", "Url": "https://api.github.com/repos/erlide/erlide", "Date": "2014-03-11T15:44:13Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSignedIn) { updateScheduleAndChosenLessons(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5041/buggy-version/src.main.java.upandgo.client.presenter.SchedulerPresenter.java", "BodyUseAPI": [], "Fixed commit": "21de7dffc7e3da3d5c51f75a30441df30ba3b2e9", "Url": "https://api.github.com/repos/TechnionYP5777/UpAndGo", "Date": "2017-06-29T00:02:09Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lessonGroupsList.size()) > (sched_index)) { listToSave = lessonGroupsList.get(sched_index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5041/buggy-version/src.main.java.upandgo.client.presenter.SchedulerPresenter.java", "BodyUseAPI": ["java.util.List<java.util.List<upandgo.shared.entities.LessonGroup>>.get(int)"], "Fixed commit": "21de7dffc7e3da3d5c51f75a30441df30ba3b2e9", "Url": "https://api.github.com/repos/TechnionYP5777/UpAndGo", "Date": "2017-06-29T00:02:09Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"valuelist\"))) != null) setValueList(org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"valuelist\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8003/buggy-version/job.eclcount.src.main.java.org.hpccsystems.pentaho.job.eclcount.ECLCount.java", "BodyUseAPI": ["org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"valuelist\"))", "org.pentaho.di.core.xml.XMLHandler.getSubNode(org.w3c.dom.Node,java.lang.String)", "org.hpccsystems.pentaho.job.eclcount.ECLCount.setValueList(org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"valuelist\")))"], "Fixed commit": "43b695d54d8ab3bb9ea209ff36cb9927b0dcddfc", "Url": "https://api.github.com/repos/arjunachala/spoon-plugins", "Date": "2013-05-13T20:25:01Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"recordset_name\"))) != null) setRecordsetName(org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"recordset_name\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8003/buggy-version/job.eclcount.src.main.java.org.hpccsystems.pentaho.job.eclcount.ECLCount.java", "BodyUseAPI": ["org.hpccsystems.pentaho.job.eclcount.ECLCount.setRecordsetName(org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"recordset_name\")))", "org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"recordset_name\"))", "org.pentaho.di.core.xml.XMLHandler.getSubNode(org.w3c.dom.Node,java.lang.String)"], "Fixed commit": "43b695d54d8ab3bb9ea209ff36cb9927b0dcddfc", "Url": "https://api.github.com/repos/arjunachala/spoon-plugins", "Date": "2013-05-13T20:25:01Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rep.getStepAttributeString(id_jobentry, \"keyed\")) != null) this.keyed = rep.getStepAttributeString(id_jobentry, \"keyed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8003/buggy-version/job.eclcount.src.main.java.org.hpccsystems.pentaho.job.eclcount.ECLCount.java", "BodyUseAPI": ["org.pentaho.di.repository.Repository.getStepAttributeString(org.pentaho.di.repository.ObjectId,java.lang.String)"], "Fixed commit": "43b695d54d8ab3bb9ea209ff36cb9927b0dcddfc", "Url": "https://api.github.com/repos/arjunachala/spoon-plugins", "Date": "2013-05-13T20:25:01Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rep.getStepAttributeString(id_jobentry, \"recordset\")) != null) this.recordset = rep.getStepAttributeString(id_jobentry, \"recordset\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8003/buggy-version/job.eclcount.src.main.java.org.hpccsystems.pentaho.job.eclcount.ECLCount.java", "BodyUseAPI": ["org.pentaho.di.repository.Repository.getStepAttributeString(org.pentaho.di.repository.ObjectId,java.lang.String)"], "Fixed commit": "43b695d54d8ab3bb9ea209ff36cb9927b0dcddfc", "Url": "https://api.github.com/repos/arjunachala/spoon-plugins", "Date": "2013-05-13T20:25:01Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rep.getStepAttributeString(id_jobentry, \"recordset_name\")) != null) this.recordsetName = rep.getStepAttributeString(id_jobentry, \"recordset_name\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8003/buggy-version/job.eclcount.src.main.java.org.hpccsystems.pentaho.job.eclcount.ECLCount.java", "BodyUseAPI": ["org.pentaho.di.repository.Repository.getStepAttributeString(org.pentaho.di.repository.ObjectId,java.lang.String)"], "Fixed commit": "43b695d54d8ab3bb9ea209ff36cb9927b0dcddfc", "Url": "https://api.github.com/repos/arjunachala/spoon-plugins", "Date": "2013-05-13T20:25:01Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"expression\"))) != null) setExpression(org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"expression\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8003/buggy-version/job.eclcount.src.main.java.org.hpccsystems.pentaho.job.eclcount.ECLCount.java", "BodyUseAPI": ["org.pentaho.di.core.xml.XMLHandler.getSubNode(org.w3c.dom.Node,java.lang.String)", "org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"expression\"))", "org.hpccsystems.pentaho.job.eclcount.ECLCount.setExpression(org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"expression\")))"], "Fixed commit": "43b695d54d8ab3bb9ea209ff36cb9927b0dcddfc", "Url": "https://api.github.com/repos/arjunachala/spoon-plugins", "Date": "2013-05-13T20:25:01Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rep.getStepAttributeString(id_jobentry, \"valuelist\")) != null) this.valuelist = rep.getStepAttributeString(id_jobentry, \"valuelist\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8003/buggy-version/job.eclcount.src.main.java.org.hpccsystems.pentaho.job.eclcount.ECLCount.java", "BodyUseAPI": ["org.pentaho.di.repository.Repository.getStepAttributeString(org.pentaho.di.repository.ObjectId,java.lang.String)"], "Fixed commit": "43b695d54d8ab3bb9ea209ff36cb9927b0dcddfc", "Url": "https://api.github.com/repos/arjunachala/spoon-plugins", "Date": "2013-05-13T20:25:01Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rep.getStepAttributeString(id_jobentry, \"expression\")) != null) this.expression = rep.getStepAttributeString(id_jobentry, \"expression\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8003/buggy-version/job.eclcount.src.main.java.org.hpccsystems.pentaho.job.eclcount.ECLCount.java", "BodyUseAPI": ["org.pentaho.di.repository.Repository.getStepAttributeString(org.pentaho.di.repository.ObjectId,java.lang.String)"], "Fixed commit": "43b695d54d8ab3bb9ea209ff36cb9927b0dcddfc", "Url": "https://api.github.com/repos/arjunachala/spoon-plugins", "Date": "2013-05-13T20:25:01Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"keyed\"))) != null) setKeyed(org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"keyed\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8003/buggy-version/job.eclcount.src.main.java.org.hpccsystems.pentaho.job.eclcount.ECLCount.java", "BodyUseAPI": ["org.hpccsystems.pentaho.job.eclcount.ECLCount.setKeyed(org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"keyed\")))", "org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"keyed\"))", "org.pentaho.di.core.xml.XMLHandler.getSubNode(org.w3c.dom.Node,java.lang.String)"], "Fixed commit": "43b695d54d8ab3bb9ea209ff36cb9927b0dcddfc", "Url": "https://api.github.com/repos/arjunachala/spoon-plugins", "Date": "2013-05-13T20:25:01Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"recordset\"))) != null) setRecordSet(org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"recordset\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8003/buggy-version/job.eclcount.src.main.java.org.hpccsystems.pentaho.job.eclcount.ECLCount.java", "BodyUseAPI": ["org.pentaho.di.core.xml.XMLHandler.getSubNode(org.w3c.dom.Node,java.lang.String)", "org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"recordset\"))", "org.hpccsystems.pentaho.job.eclcount.ECLCount.setRecordSet(org.pentaho.di.core.xml.XMLHandler.getNodeValue(org.pentaho.di.core.xml.XMLHandler.getSubNode(node, \"recordset\")))"], "Fixed commit": "43b695d54d8ab3bb9ea209ff36cb9927b0dcddfc", "Url": "https://api.github.com/repos/arjunachala/spoon-plugins", "Date": "2013-05-13T20:25:01Z"},
{"Line": "=>1513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["qora.web.Profile.getProfileOpt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (profileOpt != null) { if (profileOpt.getLikedPosts().contains(signature)) { blogEntry.addLikingUser(profileOpt.getName().getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2757/buggy-version/Qora.src.webserver.WebResource.java", "BodyUseAPI": ["profileOpt.getLikedPosts().contains(java.lang.String)", "qora.web.blog.BlogEntry.addLikingUser(profileOpt.getName().getName())", "qora.web.Profile.getLikedPosts()", "profileOpt.getName().getName()", "qora.web.Profile.getName()"], "Fixed commit": "e1d17d31dc4f8459ec0c8deee3c619e4a0d87032", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2015-07-26T17:59:56Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(c.isNull(c.getColumnIndex(com.example.indoorbeacon.app.model.dbmodels.DBHandler.COLUMN_CATEGORY)))) { category = c.getString(c.getColumnIndex(com.example.indoorbeacon.app.model.dbmodels.DBHandler.COLUMN_CATEGORY)); res.add(category); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3729/buggy-version/app.src.main.java.com.example.indoorbeacon.app.model.dbmodels.DBHandler.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getString(c.getColumnIndex(com.example.indoorbeacon.app.model.dbmodels.DBHandler.COLUMN_CATEGORY))"], "Fixed commit": "2446a35e5e58f1e5c55ff372f42b8576f4467980", "Url": "https://api.github.com/repos/GrosserStuhl/ViibeNav", "Date": "2015-09-13T22:45:41Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jvnet.hudson.plugins.m2release.M2ReleaseAction.StaplerRequestWrapper.containsKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (closeNexusStage) { isCloseNexusStage = java.lang.Boolean.parseBoolean(requestWrapper.getString(\"closeNexusStage\")); }else { isCloseNexusStage = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1537/buggy-version/src.main.java.org.jvnet.hudson.plugins.m2release.M2ReleaseAction.java", "BodyUseAPI": [], "Fixed commit": "a64b242ee37ecbbcfab6d3c8e7378487a3184900", "Url": "https://api.github.com/repos/thusithathilina/wso2-jenkins-m2release-plugin", "Date": "2017-08-29T08:35:44Z"},
{"Line": "=>722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<jkind.lustre.Type>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (argType instanceof jkind.lustre.SubrangeIntType) { java.math.BigInteger high = ((jkind.lustre.SubrangeIntType) (argType)).high; java.math.BigInteger low = ((jkind.lustre.SubrangeIntType) (argType)).low; if (low.equals(high)) { argType = jkind.lustre.NamedType.INT; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6548/buggy-version/jkind.src.jkind.analysis.TypeChecker.java", "BodyUseAPI": [], "Fixed commit": "847642d6cc0f9647efdbb6aace3767fbf788d3cd", "Url": "https://api.github.com/repos/backesj/jkind", "Date": "2015-09-15T15:58:34Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (error.getCause().toString().equals(\"java.io.EOFException\")) { userAPI.postUserQuote(id_u, id_word, this); }else { com.ayoprez.deilyquote.ErrorHandle.getInstance().informUser(context, context.getString(R.string.errorDefault)); com.ayoprez.deilyquote.ErrorHandle.getInstance().Error(com.ayoprez.restfulservice.QuoteSet.LOG_TAG, error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5248/buggy-version/mobile.src.main.java.com.ayoprez.restfulservice.QuoteSet.java", "BodyUseAPI": ["com.ayoprez.deilyquote.ErrorHandle.getInstance().Error(java.lang.String,retrofit.RetrofitError)"], "Fixed commit": "17fd37425842ef215ccf3b90ab0650e40ebd224b", "Url": "https://api.github.com/repos/AyoPrez/DeilyQ", "Date": "2016-03-19T15:18:05Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((remaining) == 0) { loadNextNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6254/buggy-version/src.main.java.bptree.Cursor.java", "BodyUseAPI": [], "Fixed commit": "576c2dc7f1a8df2b85f1f6e27c046afa914d0ed6", "Url": "https://api.github.com/repos/maxsumrall/Path-Index", "Date": "2015-03-17T14:48:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((genre) == (Genre.NON_FICTION)) return \"B\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5608/buggy-version/src.main.java.pl.sdacademy.books.Book.java", "BodyUseAPI": [], "Fixed commit": "1e84ed943a59a0e6949170b1741df709f5a09213", "Url": "https://api.github.com/repos/javakrk4/grupa_pierwsza_books", "Date": "2017-08-31T18:17:56Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((genre) == (Genre.FICTION)) return \"A\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5608/buggy-version/src.main.java.pl.sdacademy.books.Book.java", "BodyUseAPI": [], "Fixed commit": "1e84ed943a59a0e6949170b1741df709f5a09213", "Url": "https://api.github.com/repos/javakrk4/grupa_pierwsza_books", "Date": "2017-08-31T18:17:56Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.ether.dependencyView.FoxyMap<StringCache.S, StringCache.S>.foxyGet(StringCache.S)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (dependants != null) { dependants.removeAll(compiledFiles); for (org.jetbrains.ether.dependencyView.StringCache.S depFile : dependants) { final java.util.Set<org.jetbrains.ether.dependencyView.UsageRepr.Usage> usages = new java.util.HashSet<org.jetbrains.ether.dependencyView.UsageRepr.Usage>(sourceFileToUsages.foxyGet(depFile)); usages.retainAll(affectedUsages); if (!(usages.isEmpty())) { affectedFiles.add(depFile); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6604/buggy-version/src.org.jetbrains.ether.dependencyView.Mappings.java", "BodyUseAPI": ["java.util.Set<StringCache.S>.removeAll(java.util.Set<StringCache.S>)"], "Fixed commit": "8f13ca8ea743ededb3e4321180d81f0bee5629d5", "Url": "https://api.github.com/repos/dboulytchev/JPS", "Date": "2011-03-10T22:19:36Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.getPackageManager().getMetaClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (metaClassForInner != null) { metaClassForInner.getClassBytecode(model, classLocations); }else { org.adoptopenjdk.jitwatch.model.MetaClass.logger.warn(\"No MetaClass found for inner Class {}\", innerClassName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/766/buggy-version/src.main.java.org.adoptopenjdk.jitwatch.model.MetaClass.java", "BodyUseAPI": ["org.adoptopenjdk.jitwatch.model.MetaClass.getClassBytecode(org.adoptopenjdk.jitwatch.model.IReadOnlyJITDataModel,java.util.List<java.lang.String>)"], "Fixed commit": "43be46f47d3c47e8086f08e706139485dc61e61c", "Url": "https://api.github.com/repos/AdoptOpenJDK/jitwatch", "Date": "2015-07-14T22:32:57Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.wow.common.service.TaskService.selectOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((task.gettId()) == null) { orgId = accountService.getOrderOrgId(task.getId(), state); }else { orgId = accountService.getOrderOrgId(task.gettId(), state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3666/buggy-version/cqc-support.src.main.java.cn.wow.support.web.ResultController.java", "BodyUseAPI": ["cn.wow.common.domain.Task.gettId()", "cn.wow.common.service.AccountService.getOrderOrgId(task.getId(),java.lang.Integer)", "cn.wow.common.domain.Task.getId()", "cn.wow.common.service.AccountService.getOrderOrgId(task.gettId(),java.lang.Integer)"], "Fixed commit": "d77a863c7adcfa9fd7c593592192be3cd2ae8ccc", "Url": "https://api.github.com/repos/zjz0924/cqc-car", "Date": "2017-12-21T18:22:12Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (markupText == null) { markupText = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1560/buggy-version/src.main.java.com.gitblit.wicket.pages.DocPage.java", "BodyUseAPI": [], "Fixed commit": "b635f482e4b1a8ce4d39990f532a15d0ec0f0be2", "Url": "https://api.github.com/repos/yin8086/gitblit", "Date": "2014-03-07T20:15:52Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.suiton2d.assets.AssetManager.manager.isLoaded(asset.fileName)) com.suiton2d.assets.AssetManager.manager.unload(asset.fileName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2196/buggy-version/core.src.main.java.com.suiton2d.assets.AssetManager.java", "BodyUseAPI": ["com.badlogic.gdx.assets.AssetManager.unload(asset.fileName)"], "Fixed commit": "5d453ae94dee192fa4e45254e45a66d6294faca5", "Url": "https://api.github.com/repos/jonbonazza/suiton", "Date": "2015-08-07T02:50:53Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((item == null) || ((item.getItem()) == null)) || (!((item.getItem()) instanceof ec3.common.item.ItemCollectedMonsterSpawner))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6917/buggy-version/java.ec3.client.render.RenderCollectedSpawner.java", "BodyUseAPI": [], "Fixed commit": "fd5c0655dad11c8ed62629e2f9469c8aaf9a6423", "Url": "https://api.github.com/repos/Modbder/EssentialCraft3", "Date": "2015-08-14T12:46:04Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((planTree(item, world, plan, inve, inveTree)) == (Util.Max)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5908/buggy-version/AIPlayer.java", "BodyUseAPI": [], "Fixed commit": "f21ec18b2cfefbdae9bcab8901ee7baddf67d095", "Url": "https://api.github.com/repos/itai-m/Minecraft-A.I", "Date": "2016-05-09T17:34:13Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plan.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5908/buggy-version/AIPlayer.java", "BodyUseAPI": [], "Fixed commit": "f21ec18b2cfefbdae9bcab8901ee7baddf67d095", "Url": "https://api.github.com/repos/itai-m/Minecraft-A.I", "Date": "2016-05-09T17:34:13Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSON.parseObject(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((theme.getData()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5915/buggy-version/app.src.main.java.com.sxhxjy.roadmonitor.ui.main.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "e303e037bd656c80909a4bc5b8e15cd3f870f56d", "Url": "https://api.github.com/repos/michaelzhaofuning/RoadMonitor", "Date": "2017-01-09T01:14:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(classifiedToLabel ^ belongsToLabel)) tp++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1836/buggy-version/gr.auth.ee.lcs.evaluators.SingleLabelEvaluator.java", "BodyUseAPI": [], "Fixed commit": "4fc55b0b8d3895b8390fe36ebb8488eead8955e8", "Url": "https://api.github.com/repos/mallamanis/LCSFramework", "Date": "2011-04-20T17:00:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (component.getTooltip())) { java.lang.String tooltipPosition = component.getTooltipPosition(); if (null == tooltipPosition) tooltipPosition = ((java.lang.String) (((javax.faces.component.UIComponent) (component)).getAttributes().get(\"tooltip-position\"))); java.lang.String tooltipContainer = component.getTooltipContainer(); if (\"body\".equals(tooltipContainer)) tooltipContainer = ((java.lang.String) (((javax.faces.component.UIComponent) (component)).getAttributes().get(\"tooltip-container\"))); if (null == tooltipContainer) tooltipContainer = \"body\"; net.bootsfaces.render.Tooltip.generateTooltipInternal(context, rw, component.getTooltip(), tooltipPosition, tooltipContainer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7161/buggy-version/src.main.java.net.bootsfaces.render.Tooltip.java", "BodyUseAPI": ["net.bootsfaces.render.Tooltip.generateTooltipInternal(javax.faces.context.FacesContext,javax.faces.context.ResponseWriter,component.getTooltip(),java.lang.String,java.lang.String)", "net.bootsfaces.render.IHasTooltip.getTooltipPosition()", "net.bootsfaces.render.IHasTooltip.getTooltipContainer()", "net.bootsfaces.render.IHasTooltip.getTooltip()"], "Fixed commit": "64061be1eca8cebc24f314501592afd740a4ce2b", "Url": "https://api.github.com/repos/TheCoder4eu/BootsFaces-OSP", "Date": "2015-09-24T22:19:13Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Byte, java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (action != null) { input.Keyboard.setKey(action, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8475/buggy-version/Engine.src.input.Controller.java", "BodyUseAPI": ["input.Keyboard.setKey(java.lang.Integer,byte)"], "Fixed commit": "f7de5af95d734d78f4348719d31d4caf9d96c5a4", "Url": "https://api.github.com/repos/Callum-Shipton/JACAPP", "Date": "2017-08-02T15:12:35Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nombreViaWidget) != null) { if (nombreViaWidget.getSelectedItem().toString().isEmpty()) { layerController.setValue(nombreViaWidget.getName(), \"0\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6119/buggy-version/extGIA.src.es.icarto.gvsig.extgia.forms.utils.AbstractFormWithLocationWidgets.java", "BodyUseAPI": [], "Fixed commit": "4bd28847296c51089c9a648d140043d92f070c62", "Url": "https://api.github.com/repos/iCarto/siga", "Date": "2014-02-10T17:23:21Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changeDrawerAccount) { final java.util.ArrayList<com.mikepenz.materialdrawer.model.interfaces.IProfile> profiles = mAccount.getProfiles(); for (com.mikepenz.materialdrawer.model.interfaces.IProfile profile : profiles) { if (name.equals(profile.getName())) { mAccount.setActiveProfile(profile, false); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/559/buggy-version/app.src.main.java.org.kore.kolabnotes.android.fragment.OverviewFragment.java", "BodyUseAPI": [], "Fixed commit": "f91622bc388cb1e4b35e18069f9574c5634b238f", "Url": "https://api.github.com/repos/konradrenner/kolabnotes-android", "Date": "2015-06-29T15:21:31Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer) != 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/503/buggy-version/src.clueGame.ClueGame.java", "BodyUseAPI": [], "Fixed commit": "a93ccbb0d26b39d5bcda63756356a2f5ce382fc0", "Url": "https://api.github.com/repos/davidrhine/ClueGameDRSZ", "Date": "2017-04-18T21:57:13Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inventory.getItemList().isEmpty()) { result = \"You are carrying:\" + \" nothing.\"; }else { result = (\"You are carrying:\" + \" \") + (inventory.getItemList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4009/buggy-version/app.src.main.java.com.example.sam.textadventure.Player.java", "BodyUseAPI": ["com.example.sam.textadventure.Inventory.getItemList()"], "Fixed commit": "fd1bdde103552b69c1ce1f80451ef72bd22093eb", "Url": "https://api.github.com/repos/srob95/TextAdventure", "Date": "2016-10-23T07:43:07Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(par.hasChildNodes())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/999/buggy-version/src.main.java.io.bdrc.xmltoldmigration.xml2files.EtextBodyMigration.java", "BodyUseAPI": [], "Fixed commit": "6c1fef2023a1733a1e664cc582c69f74ed9f0d3f", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/xmltoldmigration", "Date": "2017-10-05T08:23:10Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Character.isLetter(str.charAt(((str.length()) - 1)))) str += \".\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4606/buggy-version/Master.java", "BodyUseAPI": [], "Fixed commit": "242c32202522ed8aabb9814808df56aa94b72cf7", "Url": "https://api.github.com/repos/aryadas98/AI", "Date": "2015-07-24T09:03:47Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainder > 0) { newColumn.addLine(allLines.get(lineCounter)); lineCounter++; remainder--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6467/buggy-version/SWE_Blocksatz.src.JustificationWizard.java", "BodyUseAPI": [], "Fixed commit": "c24771c7bb3e151ceb0cf3929c00bf2d0b8662e2", "Url": "https://api.github.com/repos/bollhals/SWE", "Date": "2014-02-20T14:12:55Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scrollY != oldScrollY) { android.util.Log.e(\"driclient\", ((oldScrollY + \" pos changed to \") + scrollY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1628/buggy-version/app.src.main.java.com.hustunique.jianguo.dribile.ui.activity.ShotInfoActivity.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "ac9cbd87e6dc34d8a2814687fbf15e4fb6368073", "Url": "https://api.github.com/repos/TedaLIEz/Dribile", "Date": "2016-05-25T15:52:01Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.nlp.ling.CoreLabel.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (gold_lemma == null) java.lang.System.out.println((\"Nav lemmas? \" + token));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7735/buggy-version/src.lv.lumii.morphotagger.MorphoCRF.java", "BodyUseAPI": [], "Fixed commit": "43402b837d21116bdaf9fb4e542de682d5f5c7c6", "Url": "https://api.github.com/repos/PeterisP/LVTagger", "Date": "2014-02-26T00:30:33Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.nodeTypeImpl.getImplementationArtifacts()) != null) { for (org.oasis_open.docs.tosca.ns._2011._12.TImplementationArtifact artifact : this.nodeTypeImpl.getImplementationArtifacts().getImplementationArtifact()) { this.ias.add(new org.opentosca.planbuilder.importer.context.impl.ImplementationArtifactImpl(artifact, this.definitions)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8086/buggy-version/org.opentosca.planbuilder.importer.src.org.opentosca.planbuilder.importer.context.impl.NodeTypeImplementationImpl.java", "BodyUseAPI": ["org.oasis_open.docs.tosca.ns._2011._12.TNodeTypeImplementation.getImplementationArtifacts()", "this.nodeTypeImpl.getImplementationArtifacts().getImplementationArtifact()"], "Fixed commit": "39acea913666c093434816a136563576563d72fe", "Url": "https://api.github.com/repos/OpenTOSCA/container", "Date": "2015-02-04T11:52:04Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["azkaban.webapp.servlet.HttpRequestUtils.getParam(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(emails.isEmpty())) { java.lang.String[] emailSplit = emails.split(\"\\\\s*,\\\\s*|\\\\s*;\\\\s*|\\\\s+\"); execOptions.setFailureEmails(java.util.Arrays.asList(emailSplit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1184/buggy-version/src.java.azkaban.webapp.servlet.HttpRequestUtils.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "4e535df55c561c11ab8159d27465b026de533abc", "Url": "https://api.github.com/repos/azkaban/azkaban2", "Date": "2013-04-04T01:42:23Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["azkaban.webapp.servlet.HttpRequestUtils.getParam(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(disabled.isEmpty())) { java.lang.String[] disabledNodes = disabled.split(\"\\\\s*,\\\\s*\"); execOptions.setDisabledJobs(java.util.Arrays.asList(disabledNodes)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1184/buggy-version/src.java.azkaban.webapp.servlet.HttpRequestUtils.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "4e535df55c561c11ab8159d27465b026de533abc", "Url": "https://api.github.com/repos/azkaban/azkaban2", "Date": "2013-04-04T01:42:23Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["azkaban.webapp.servlet.HttpRequestUtils.getParam(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(emails.isEmpty())) { java.lang.String[] emailSplit = emails.split(\"\\\\s*,\\\\s*|\\\\s*;\\\\s*|\\\\s+\"); execOptions.setSuccessEmails(java.util.Arrays.asList(emailSplit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1184/buggy-version/src.java.azkaban.webapp.servlet.HttpRequestUtils.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "4e535df55c561c11ab8159d27465b026de533abc", "Url": "https://api.github.com/repos/azkaban/azkaban2", "Date": "2013-04-04T01:42:23Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (suffix.isEmpty()) { formattedString = lastWordRemoved; }else { formattedString = ((lastWordRemoved + quote) + suffix) + quote; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6446/buggy-version/userInterface.Autocomplete.java", "BodyUseAPI": [], "Fixed commit": "9a3d475792933a38ba69dec064cbe10c4583c45a", "Url": "https://api.github.com/repos/cs2103aug2014-t14-2j/main", "Date": "2014-11-08T13:16:26Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataOwner) == null) { dataOwner = new mpv5.db.objects.Reminder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4124/buggy-version/src.mpv5.ui.panels.RemindPanel.java", "BodyUseAPI": [], "Fixed commit": "d1bf1052e5edb789cf9983b10f28a702f647fd4a", "Url": "https://api.github.com/repos/anti43/openyabs", "Date": "2013-03-25T07:17:40Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pLinearTransform.getScale()) < 0.5) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3349/buggy-version/BaseModel.src.com.wpi.cs509.teamA.util.PaintHelper.PaintHelperComposite.java", "BodyUseAPI": [], "Fixed commit": "927fd75a346ab73299d7d4096b2962e4de5b9ccc", "Url": "https://api.github.com/repos/cuixiongyi/WPI-F2015-CS509-TeamA", "Date": "2015-12-15T06:00:08Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (useMipMaps) { texture.setFilter(Texture.TextureFilter.MipMapLinearNearest, Texture.TextureFilter.Linear); }else { texture.setFilter(Texture.TextureFilter.Linear, Texture.TextureFilter.Linear); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/881/buggy-version/runtime.core.src.com.bigcustard.blurp.runtimemodel.RuntimeImage.java", "BodyUseAPI": [], "Fixed commit": "5a4ec6d952f6ae7f6261682dd524980c857e02df", "Url": "https://api.github.com/repos/phil-anderson/blurp", "Date": "2015-07-10T12:16:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(forward)) { step = -(h); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3492/buggy-version/src.main.java.org.orekit.propagation.sampling.OrekitStepNormalizer.java", "BodyUseAPI": [], "Fixed commit": "68676b69b4e6537f554533a51878c43935e7ecc9", "Url": "https://api.github.com/repos/CS-SI/Orekit", "Date": "2015-04-22T21:38:20Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastState) == null) { lastDate = interpolator.getPreviousDate(); interpolator.setInterpolatedDate(lastDate); lastState = interpolator.getInterpolatedState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3492/buggy-version/src.main.java.org.orekit.propagation.sampling.OrekitStepNormalizer.java", "BodyUseAPI": [], "Fixed commit": "68676b69b4e6537f554533a51878c43935e7ecc9", "Url": "https://api.github.com/repos/CS-SI/Orekit", "Date": "2015-04-22T21:38:20Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { com.mikepenz.materialdrawer.Drawer.Result drawerResult = ((net.jejer.hipda.ui.MainFrameActivity) (getActivity())).drawerResult; if (((drawerResult != null) && (!(drawerResult.isDrawerOpen()))) && ((drawerResult.getPositionFromIdentifier(identifier)) != (drawerResult.getCurrentSelection()))) drawerResult.setSelectionByIdentifier(identifier, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4470/buggy-version/hipda.src.main.java.net.jejer.hipda.ui.BaseFragment.java", "BodyUseAPI": [], "Fixed commit": "430aa573f5c55ca3eb3bd624c639858d1c6c071e", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2015-05-16T14:07:52Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCount()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3361/buggy-version/app.src.main.java.com.hoppingeagle.snapbuyer.AuctionArrayAdapter.java", "BodyUseAPI": [], "Fixed commit": "2199e346896942455fb20205a6b5ce87890098a5", "Url": "https://api.github.com/repos/hoppingeagle/snapbuyer-android", "Date": "2015-03-14T06:58:48Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((penetratingPower >= 0) && ((bullet.type.penetratingPower) > 1)) { damageModifier = penetratingPower / (bullet.type.penetratingPower); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4915/buggy-version/src.main.java.com.flansmod.common.guns.raytracing.PlayerHitbox.java", "BodyUseAPI": [], "Fixed commit": "72549d742174112ca606ddcdf3dad676e4152625", "Url": "https://api.github.com/repos/am-rex/Flan-s-Mod-Plus", "Date": "2017-07-16T16:50:56Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.concord.energy3d.util.Updater.messageShown)) { java.awt.EventQueue.invokeLater(new java.lang.Runnable() { @java.lang.Override public void run() { if ((javax.swing.JOptionPane.YES_OPTION) == (javax.swing.JOptionPane.showConfirmDialog(org.concord.energy3d.gui.MainFrame.getInstance(), \"A new update is available. Would you like to install updates and restart now?\", \"Update\", javax.swing.JOptionPane.YES_NO_OPTION))) { org.concord.energy3d.util.Updater.restartRequested = true; org.concord.energy3d.gui.MainFrame.getInstance().exit(); }else { org.concord.energy3d.util.Updater.firstTime = false; } } }); org.concord.energy3d.util.Updater.messageShown = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4661/buggy-version/src.main.java.org.concord.energy3d.util.Updater.java", "BodyUseAPI": [], "Fixed commit": "b3f066d4c3ef318f1f7f3cb88016e1ac8120a2d0", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2017-04-28T12:50:03Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasFocus) this.mGametime.startGameTime();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5768/buggy-version/app.src.main.java.com.olkunmustafa.memorygames.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cecec003f8146664bb844fcc3809e438a896ec9e", "Url": "https://api.github.com/repos/olkunmustafa/MemorizeGame", "Date": "2016-06-26T07:29:29Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x) < 700) && ((x) > 100)) { if (((y) < 100) && ((y) < 150)) { if ((y) > 145) { velY = 0; y = 145; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3377/buggy-version/src.LogoAnimatorJPanel.java", "BodyUseAPI": [], "Fixed commit": "776ac6f56f549362766ee4b53972182a1a47e629", "Url": "https://api.github.com/repos/joevo2/DSP_Assignment", "Date": "2016-05-02T09:10:06Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mListLayout.isEditMode())) { mRadioGroup.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/877/buggy-version/src.com.haoke.ui.video.Video_Activity_Main.java", "BodyUseAPI": [], "Fixed commit": "5c86007fa0e5f8f038a368e445e7c3189ad279e4", "Url": "https://api.github.com/repos/Yearlay/AmdMediaService", "Date": "2017-11-30T07:18:21Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bingo.lang.Strings.isEmpty(title)) && (bingo.lang.Strings.isEmpty(summary))) && (bingo.lang.Strings.isEmpty(longDescription))) { this.documentation = null; }else { this.documentation = new bingo.meta.edm.EdmDocumentation(title, summary, longDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7793/buggy-version/core-meta.src.main.java.bingo.meta.edm.EdmBuilderWithDocumentation.java", "BodyUseAPI": [], "Fixed commit": "b43d8243c95d06c2d37fc0301f03a7ba2b63b287", "Url": "https://api.github.com/repos/bingo-open-source/bingo-core", "Date": "2013-03-15T04:12:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bingo.lang.Strings.isEmpty(summary)) && (bingo.lang.Strings.isEmpty(longDescription))) { this.documentation = null; }else { this.documentation = new bingo.meta.edm.EdmDocumentation(summary, longDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7793/buggy-version/core-meta.src.main.java.bingo.meta.edm.EdmBuilderWithDocumentation.java", "BodyUseAPI": [], "Fixed commit": "b43d8243c95d06c2d37fc0301f03a7ba2b63b287", "Url": "https://api.github.com/repos/bingo-open-source/bingo-core", "Date": "2013-03-15T04:12:26Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<T>.getEnumConstants()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (enumConstants == null) { throw new java.lang.IllegalArgumentException((\"Input must be an enum: \" + collectionClass)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9138/buggy-version/src.org.broad.igv.util.collections.CollUtils.java", "BodyUseAPI": [], "Fixed commit": "26ddf37ae6599f5d6e1bb165bb242c0ae35cdcbd", "Url": "https://api.github.com/repos/broadinstitute/IGV", "Date": "2012-09-07T20:02:39Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((component.className()) != null) && (component.className().contains(\"navbar-ex1-collapse\"))) { parent.prependChild(component); }else if (((lm != null) && (constraints != null)) && (constraints instanceof java.lang.String)) { lm.addConstraintedElement(parent, component, constraints.toString()); }else if (lm != null) { lm.addConstraintedElement(parent, component); }else { parent.appendChild(component); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/977/buggy-version/src.main.java.org.twixml.technoproxy.jsoup.Parser.java", "BodyUseAPI": ["org.twixml.technoproxy.jsoup.layout.LayoutManager.addConstraintedElement(org.jsoup.nodes.Element,org.jsoup.nodes.Element,java.lang.String)", "org.jsoup.nodes.Element.appendChild(org.jsoup.nodes.Element)", "org.twixml.technoproxy.jsoup.layout.LayoutManager.addConstraintedElement(org.jsoup.nodes.Element,org.jsoup.nodes.Element)", "org.jsoup.nodes.Element.prependChild(org.jsoup.nodes.Element)"], "Fixed commit": "df0136eec05843fb409802e2df3350989600634e", "Url": "https://api.github.com/repos/libetl/twixml", "Date": "2013-09-27T16:02:58Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((viewPagerAdapter.getCurrentFragment()) != null) { viewPagerAdapter.getCurrentFragment().onResume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/611/buggy-version/app.src.main.java.com.example.vanahel.tasksmanagerapplication.MainActivity.java", "BodyUseAPI": ["viewPagerAdapter.getCurrentFragment().onResume()", "com.example.vanahel.tasksmanagerapplication.adapter.ViewPagerAdapter.getCurrentFragment()"], "Fixed commit": "8cb21748691932364a0e22975490068a163cde26", "Url": "https://api.github.com/repos/LizavetaVanahel/TaskManagerApplication", "Date": "2017-09-21T05:09:16Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position != (-1)) { if ((item.getCategory().getItemsByCategoryInList().size()) == 0) { mItemList.remove(item.getCategory()); notifyItemRemoved(position); }else { notifyItemChanged(position); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7697/buggy-version/app.src.main.java.ru.android.ainege.shoppinglist.adapter.ShoppingListAdapter.java", "BodyUseAPI": ["ru.android.ainege.shoppinglist.adapter.ShoppingListAdapter.notifyItemRemoved(int)", "ru.android.ainege.shoppinglist.adapter.ShoppingListAdapter.notifyItemChanged(int)"], "Fixed commit": "a90e606f4ff1ce6c032061f397c0dc7cb0d186ae", "Url": "https://api.github.com/repos/Ainege/ShoppingList", "Date": "2016-03-11T12:05:12Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uriInfo.getRequestUri().getQuery()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (userQuery != null) userQuery = userQuery.replaceAll(\" \", \"%20\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/752/buggy-version/src.acquisition.RequestHandler.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "5fbb1d7ffa13c47850ffcdbca0cfbdeace5cbd62", "Url": "https://api.github.com/repos/raavi-mehta/AuroraProxyServer", "Date": "2017-04-11T02:19:40Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start == null) && (end == null)) { start = end = java.time.Instant.parse(\"2016-02-17T10:00:00Z\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3519/buggy-version/ps2.src.twitter.Extract.java", "BodyUseAPI": [], "Fixed commit": "2460811afcebb84aef4ffa02ce5b2406160b2dbb", "Url": "https://api.github.com/repos/zgaleday/6_005", "Date": "2016-10-31T17:37:33Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_menu) != null) { _menu.findItem(R.id.action_refresh).setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6040/buggy-version/app.src.main.java.com.samourai.wallet.ReceiveActivity.java", "BodyUseAPI": [], "Fixed commit": "b24007682faeefb4dddbef112e7813e4b819e805", "Url": "https://api.github.com/repos/Samourai-Wallet/samourai-wallet-android", "Date": "2017-07-10T09:02:32Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.samourai.wallet.util.AddressFactory.getInstance().canIncReceiveAddress(SamouraiWallet.SAMOURAI_ACCOUNT)) { canRefresh = true; if ((_menu) != null) { _menu.findItem(R.id.action_refresh).setVisible(true); } }else { canRefresh = false; if ((_menu) != null) { _menu.findItem(R.id.action_refresh).setVisible(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6040/buggy-version/app.src.main.java.com.samourai.wallet.ReceiveActivity.java", "BodyUseAPI": [], "Fixed commit": "b24007682faeefb4dddbef112e7813e4b819e805", "Url": "https://api.github.com/repos/Samourai-Wallet/samourai-wallet-android", "Date": "2017-07-10T09:02:32Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.siddhi.extension.eventtable.rdbms.DBHandler.log.isDebugEnabled()) { org.wso2.siddhi.extension.eventtable.rdbms.DBHandler.log.debug(((\"Table \" + (tableName)) + \" Creation Failed. Transaction rollback error \"), ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8337/buggy-version/modules.siddhi-extensions.event-table.src.main.java.org.wso2.siddhi.extension.eventtable.rdbms.DBHandler.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String,java.lang.Exception)"], "Fixed commit": "7de0339791cbd6a7e03066942ec7eb466a95d079", "Url": "https://api.github.com/repos/grainier/siddhi", "Date": "2016-05-02T12:10:04Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((element.getChildNodes().getLength()) == 1) && ((element.getChildNodes().item(0).getNodeType()) == (org.w3c.dom.Node.TEXT_NODE))) { element.setAttribute(org.swixml.Parser.ATTR_INITCLASS, java.lang.String.class.getName()); initParameter = element.getChildNodes().item(0).getNodeValue().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1920/buggy-version/src.main.java.org.swixml.Parser.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeValue()", "java.lang.String.trim()", "org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)", "org.w3c.dom.Element.getChildNodes()"], "Fixed commit": "f8e96a27a6f28b09d765b244c201416c0e387434", "Url": "https://api.github.com/repos/libetl/twixml", "Date": "2013-09-20T12:22:35Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentState()) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1555/buggy-version/modules.converge-core.src.main.java.dk.i2m.converge.core.content.NewsItem.java", "BodyUseAPI": [], "Fixed commit": "8a24d80ed87292e8273ad25022cb39b9da75e065", "Url": "https://api.github.com/repos/getconverge/converge-1.x", "Date": "2015-08-09T10:27:33Z"},
{"Line": "=>1076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.iziozi.iziozi.core.IOGlobalConfiguration.isScanMode) { stopScanMode(); mainNavContainer.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1079/buggy-version/iziozi.src.main.java.it.iziozi.iziozi.gui.IOBoardActivity.java", "BodyUseAPI": [], "Fixed commit": "5f432f6ac0618596b4dd6995c415feeaa2a47f47", "Url": "https://api.github.com/repos/IziOzi/IziOzi", "Date": "2015-11-20T09:04:08Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isTryCatchBlock) { programBuffer.openIf(ar.edu.taco.simplejml.helpers.BlockStatementSolver.getTryCatchSurrounderCondition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/304/buggy-version/src.ar.edu.taco.simplejml.BlockStatementsVisitor.java", "BodyUseAPI": [], "Fixed commit": "aba6a50d5ae2d856c4c5d3b05c9efa36dd557b7f", "Url": "https://api.github.com/repos/zeminlu/comitaco", "Date": "2016-04-25T17:57:54Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isTryCatchBlock) { programBuffer.closeIf(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/304/buggy-version/src.ar.edu.taco.simplejml.BlockStatementsVisitor.java", "BodyUseAPI": [], "Fixed commit": "aba6a50d5ae2d856c4c5d3b05c9efa36dd557b7f", "Url": "https://api.github.com/repos/zeminlu/comitaco", "Date": "2016-04-25T17:57:54Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tileDeterminer.equals(\"UpDownLeftRight\")) { tiles[x][y].setRegion(stoneTileset[0][0]); }else { tiles[x][y].setRegion(stoneTileset[1][7]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1055/buggy-version/core.src.mcprog.duality.core.Terrain.java", "BodyUseAPI": [], "Fixed commit": "4cd87395c21c67c21d5e1e7d976af6377b37869e", "Url": "https://api.github.com/repos/mcprog/duality", "Date": "2015-10-15T06:48:35Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((se.blunden.haveibeenpwned.MainActivity.searchHistory.size()) > 0) { se.blunden.haveibeenpwned.MainActivity.searchHistory.remove(((se.blunden.haveibeenpwned.MainActivity.searchHistory.size()) - (id))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3317/buggy-version/src.se.blunden.haveibeenpwned.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.remove(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "17937e31df39fd297c6bc04815390d2406a4d79e", "Url": "https://api.github.com/repos/blunden/haveibeenpwned", "Date": "2014-10-20T19:42:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.core.api.security.ACP.getACL(ACL.INHERITED_ACL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (acl == null) { acl = acp.getACL(ACL.LOCAL_ACL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/250/buggy-version/nuxeo-automation.nuxeo-automation-io.src.main.java.org.nuxeo.ecm.automation.jaxrs.io.documents.JsonESDocumentWriter.java", "BodyUseAPI": [], "Fixed commit": "a880c18ba032fe7a2cfda7cda0f6eccbb5414f74", "Url": "https://api.github.com/repos/nuxeo/nuxeo-features", "Date": "2014-03-26T00:40:34Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMultiChoiceModeListener) != null) { mMultiChoiceModeListener.storeStateIn(outState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5686/buggy-version/src.com.owncloud.android.ui.fragment.OCFileListFragment.java", "BodyUseAPI": [], "Fixed commit": "84b64297ae6e73f7b62a42471e1ffcce3a6ba757", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-12-16T09:46:08Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.amorphcluster.startClusterService()) { pt.ulisboa.tecnico.amorphous.Amorphous.logger.info(\"Amorphous cluster successfully initialized!\"); this.globalStateService.start(); }else { pt.ulisboa.tecnico.amorphous.Amorphous.logger.error(\"Fatal error while booting Amorphous: Unable to initialize cluster service\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6270/buggy-version/src.main.java.pt.ulisboa.tecnico.amorphous.Amorphous.java", "BodyUseAPI": [], "Fixed commit": "0e1d303ab0378be48eb36721371da3d08d55011d", "Url": "https://api.github.com/repos/fazevedo86/floodlight", "Date": "2015-09-20T14:32:53Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == (org.antlr.v4.misc.CharSupport.ToRangeMode.BRACKETED)) { sb.append(\"]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8878/buggy-version/tool.src.org.antlr.v4.misc.CharSupport.java", "BodyUseAPI": [], "Fixed commit": "3598e7ad596909b9b48735cbbc92904ef723ac6a", "Url": "https://api.github.com/repos/bhamiltoncx/antlr4", "Date": "2017-02-15T17:37:51Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == (org.antlr.v4.misc.CharSupport.ToRangeMode.BRACKETED)) { sb.append(\"[\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8878/buggy-version/tool.src.org.antlr.v4.misc.CharSupport.java", "BodyUseAPI": [], "Fixed commit": "3598e7ad596909b9b48735cbbc92904ef723ac6a", "Url": "https://api.github.com/repos/bhamiltoncx/antlr4", "Date": "2017-02-15T17:37:51Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.crafting.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((i == (GuardianArmor.helmet)) || (i == (GuardianArmor.chestplate))) || (i == (GuardianArmor.legs))) || (i == (GuardianArmor.boots))) event.player.addStat(ARPAchievements.craftGuardianArmor, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1594/buggy-version/src.main.java.sokratis12GR.ArmorPlus.resources.GlobalEventsArmorPlus.java", "BodyUseAPI": [], "Fixed commit": "727e0ea2e382df03902d89300e6115e01061ff3e", "Url": "https://api.github.com/repos/TheDragonTeam/ArmorPlus", "Date": "2016-04-06T06:42:36Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.crafting.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((i == (GuardianArmor.helmet)) || (i == (GuardianArmor.chestplate))) || (i == (GuardianArmor.legs))) || (i == (GuardianArmor.boots))) itemStack.addEnchantment(net.minecraft.enchantment.Enchantment.getEnchantmentByID(34), 3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1594/buggy-version/src.main.java.sokratis12GR.ArmorPlus.resources.GlobalEventsArmorPlus.java", "BodyUseAPI": [], "Fixed commit": "727e0ea2e382df03902d89300e6115e01061ff3e", "Url": "https://api.github.com/repos/TheDragonTeam/ArmorPlus", "Date": "2016-04-06T06:42:36Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((num.number.length()) == (number.length())) { if (difference > 0) return -1; else if (difference < 0) return +1; else return 0; }else if ((num.number.length()) < (number.length())) { return 1; }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8128/buggy-version/BigNumber.src.BigNumber.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "4cd09143adb4bef5161ced58f4096c338b35ea5d", "Url": "https://api.github.com/repos/Tabrizian/BigNumber", "Date": "2015-04-08T06:56:57Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ans.equals(\"1\")) ans = \"True\"; else ans = \"False\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8128/buggy-version/BigNumber.src.Input.java", "BodyUseAPI": [], "Fixed commit": "4cd09143adb4bef5161ced58f4096c338b35ea5d", "Url": "https://api.github.com/repos/Tabrizian/BigNumber", "Date": "2015-04-08T06:56:57Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ans.equals(\"1\")) ans = \"True\"; else ans = \"False\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8128/buggy-version/BigNumber.src.Input.java", "BodyUseAPI": [], "Fixed commit": "4cd09143adb4bef5161ced58f4096c338b35ea5d", "Url": "https://api.github.com/repos/Tabrizian/BigNumber", "Date": "2015-04-08T06:56:57Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rule.getMinLightsOnDuration()) != null) && ((rule.getMinLightsOnDuration()) > (ruleState.getLightsOnTimeMs()))) { performReset = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/350/buggy-version/heckenlights-backend.src.main.java.de.paluch.heckenlights.application.ProcessQueue.java", "BodyUseAPI": [], "Fixed commit": "629fa320ea897945e90d10ea5166dffec7d08486", "Url": "https://api.github.com/repos/mp911de/heckenlights", "Date": "2014-11-23T18:23:18Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rule.getAction()) == (Rule.Action.LIGHTS_OFF)) || ((rule.getAction()) == (Rule.Action.OFFLINE))) { resetAll = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/350/buggy-version/heckenlights-backend.src.main.java.de.paluch.heckenlights.application.ProcessQueue.java", "BodyUseAPI": [], "Fixed commit": "629fa320ea897945e90d10ea5166dffec7d08486", "Url": "https://api.github.com/repos/mp911de/heckenlights", "Date": "2014-11-23T18:23:18Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.projectfirebase.soen341.root.Helper.isNullOrEmpty(sellerPhotoURL))) { setImage(getActivity(), dataSnapshot.child(\"ImageURL\").getValue(java.lang.String.class), seller_iv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2424/buggy-version/app.src.main.java.Fragments.ItemDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "59bc1d1ecae1d2fd5d6eecde4604b98858be160a", "Url": "https://api.github.com/repos/davidberard2/SOEN341GROUPC", "Date": "2017-11-27T09:26:46Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.child(\"ImageURL\").getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.projectfirebase.soen341.root.Helper.isNullOrEmpty(imgUrl))) { setImage(getActivity(), imgUrl, photo_iv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2424/buggy-version/app.src.main.java.Fragments.ProfileFragment.java", "BodyUseAPI": ["1.setImage(getActivity(),java.lang.String,android.widget.ImageView)"], "Fixed commit": "59bc1d1ecae1d2fd5d6eecde4604b98858be160a", "Url": "https://api.github.com/repos/davidberard2/SOEN341GROUPC", "Date": "2017-11-27T09:26:46Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastSequenceNumber == ((byte) (255))) { lastSequenceNumber = ((byte) (1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3912/buggy-version/src.Receiver.java", "BodyUseAPI": [], "Fixed commit": "2a672b71e70c9fe6c345dc148bdc6341730f8428", "Url": "https://api.github.com/repos/austinbruch/CNT4007PA2", "Date": "2015-03-16T04:41:16Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (db.deleteEntry(lastRead)) { lastRead = null; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7165/buggy-version/src.main.java.com.spidertracks.loggly.LogglyMessageQueue.java", "BodyUseAPI": [], "Fixed commit": "3d3cefc9f4b2438654c793d54b0c21cf339ed426", "Url": "https://api.github.com/repos/Spidertracks/logglylog4j", "Date": "2011-04-29T05:27:32Z"},
{"Line": "=>4558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elementCount > 0) { tree = new TreeMap<java.lang.Long, BTreeElement<java.lang.Long, net.spy.memcached.T>>((reverse ? java.util.Collections.reverseOrder() : null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5000/buggy-version/src.main.java.net.spy.memcached.ArcusClient.java", "BodyUseAPI": [], "Fixed commit": "194d355639ad38535008ff92e0faea9a8e24b7b6", "Url": "https://api.github.com/repos/jam2in/arcus-java-client", "Date": "2017-01-11T09:30:53Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.size()) < toindex) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5103/buggy-version/src.myprefix.utils.PageCreater.java", "BodyUseAPI": [], "Fixed commit": "6616ea4259a53f122d8d3c294c28d673a534c359", "Url": "https://api.github.com/repos/MCFT-Server/MyPrefix", "Date": "2016-10-30T12:43:40Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(imageLoadingAsyncTask.getStatus().equals(AsyncTask.Status.FINISHED))) { imageLoadingAsyncTask.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1809/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.online.ClientDetailsFragment.java", "BodyUseAPI": ["com.mifos.mifosxdroid.online.ClientDetailsFragment.ImageLoadingAsyncTask.cancel(boolean)"], "Fixed commit": "d0739c85e221ffd841954d87f335084d92203266", "Url": "https://api.github.com/repos/openMF/android-client", "Date": "2014-07-08T10:32:43Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!externalActive) { net.programmierecke.radiodroid2.PlayerServiceUtil.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4668/buggy-version/app.src.main.java.net.programmierecke.radiodroid2.Utils.java", "BodyUseAPI": [], "Fixed commit": "3a372ca323e0e0b334feee23df1a2a041d07e356", "Url": "https://api.github.com/repos/werman/RadioDroid", "Date": "2017-09-01T19:37:37Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gedcomx.conversion.gedcom.dq55.FactMapper.toFact(org.folg.gedcom.model.EventFact,org.gedcomx.conversion.GedcomxConversionResult)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (gedxFact != null) { gedxPerson.addFact(gedxFact); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1414/buggy-version/src.main.java.org.gedcomx.conversion.gedcom.dq55.PersonMapper.java", "BodyUseAPI": ["org.gedcomx.conversion.gedcom.dq55.Person.addFact(org.gedcomx.conversion.gedcom.dq55.Fact)"], "Fixed commit": "28862f40666724069e21a85fbc9b7c57106b2e53", "Url": "https://api.github.com/repos/FamilySearch/gedcom5-conversion", "Date": "2012-05-23T22:31:10Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((levelQuestStatusMap) == null) || ((currentLevel) == null)) { com.blastedstudios.gdxworld.util.Log.debug(\"GDXQuestManager.tick\", \"levelQuestStatusMap or currentLevel null, aborting\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4635/buggy-version/src.com.blastedstudios.gdxworld.world.quest.GDXQuestManager.java", "BodyUseAPI": [], "Fixed commit": "e404325abbef94a84395c7ab90c30269bc53a24c", "Url": "https://api.github.com/repos/narfman0/GDXWorld", "Date": "2015-10-17T02:43:14Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (h >= tvHigh) { if (begin == 0) { i = i - 2; }else if (h > tvHigh) { int margin = ((int) (tv.getLineSpacingExtra())); if ((h - margin) > tvHigh) { i--; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3762/buggy-version/app.src.main.java.com.moss.dbreader.ui.ReaderPageAdapter.java", "BodyUseAPI": [], "Fixed commit": "fa3cab01f65df0fb614b079131467c5b62a48a86", "Url": "https://api.github.com/repos/AndreiTang/dbreader", "Date": "2017-12-17T13:44:10Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total == 0) plugin.dataQueries.DeleteAuction(a.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5277/buggy-version/src.main.java.me.stutiguias.webportal.listeners.WebAuctionPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "84232d0e38ab14aaa4bafe3d313c7a94c044c678", "Url": "https://api.github.com/repos/stutiguias/webportal", "Date": "2012-09-19T22:18:54Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (total != 0) plugin.dataQueries.updateItemQuantity(total, a.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5277/buggy-version/src.main.java.me.stutiguias.webportal.listeners.WebAuctionPlayerListener.java", "BodyUseAPI": ["plugin.dataQueries.updateItemQuantity(int,a.getId())"], "Fixed commit": "84232d0e38ab14aaa4bafe3d313c7a94c044c678", "Url": "https://api.github.com/repos/stutiguias/webportal", "Date": "2012-09-19T22:18:54Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getCurrentItem().getAmount()) <= 1) { total = (a.getItemStack().getAmount()) - 1; }else { total = (a.getItemStack().getAmount()) - ((event.getCurrentItem().getAmount()) / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5277/buggy-version/src.main.java.me.stutiguias.webportal.listeners.WebAuctionPlayerListener.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "event.getCurrentItem().getAmount()"], "Fixed commit": "84232d0e38ab14aaa4bafe3d313c7a94c044c678", "Url": "https://api.github.com/repos/stutiguias/webportal", "Date": "2012-09-19T22:18:54Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.constructedFeatures.getFeatureVocabularySize()) != 0) plataniosDatum.features().set(this.sizeF_0, (((this.sizeF_0) + (this.constructedFeatures.getFeatureVocabularySize())) - 1), constructedF);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7890/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.model.SupervisedModelLogistmarGramression.java", "BodyUseAPI": ["plataniosDatum.features().set(int,(((this.sizeF_0) + (this.constructedFeatures.getFeatureVocabularySize())) - 1),org.platanios.learn.math.matrix.Vector)", "edu.cmu.ml.rtw.generic.data.feature.FilteredVocabFeatureSet<D, L>.getFeatureVocabularySize()"], "Fixed commit": "df4656fca69d85b9f9106f1bc44a5f24dc96a111", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2015-06-13T15:12:00Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dead) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/824/buggy-version/core.src.com.thepaperpilot.solar.Entities.Enemy.java", "BodyUseAPI": [], "Fixed commit": "2adebd7d9575b276d1ab88025cde05cb10a7024c", "Url": "https://api.github.com/repos/thepaperpilot/SolarTD", "Date": "2016-01-17T02:13:16Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.geekeclectic.android.stashcache.SelectFabricDialogFragment.mSelectedIndex) != (-1)) { com.geekeclectic.android.stashcache.SelectFabricDialogFragment.mSelectFabricDialogCallback.onSelectedFabric(com.geekeclectic.android.stashcache.SelectFabricDialogFragment.mFabrics.get(com.geekeclectic.android.stashcache.SelectFabricDialogFragment.mSelectedIndex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/648/buggy-version/StashCache.app.src.main.java.com.geekeclectic.android.stashcache.SelectFabricDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "3986b9ad8ee3d0c72adb5e35d0f86e7d25e748f8", "Url": "https://api.github.com/repos/sylkai/stash_cache", "Date": "2015-05-09T17:45:19Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stockObjs) == null) return list;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1886/buggy-version/Interpret.ObjectInfo.java", "BodyUseAPI": [], "Fixed commit": "dbf006fdac1d5ee05be336e73b27e122e9d10015", "Url": "https://api.github.com/repos/KohichiNishide/JAVA_TRAINING", "Date": "2012-09-11T13:49:01Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array) == null) return list;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1886/buggy-version/Interpret.ObjectInfo.java", "BodyUseAPI": [], "Fixed commit": "dbf006fdac1d5ee05be336e73b27e122e9d10015", "Url": "https://api.github.com/repos/KohichiNishide/JAVA_TRAINING", "Date": "2012-09-11T13:49:01Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(foutDir.exists())) { foutDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6539/buggy-version/src.main.java.org.owasp.dependencycheck.reporting.ReportGenerator.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "737fef465a89b17709b0fb9f9bf84f292634eb23", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2013-05-18T14:23:57Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.avgtechie.gocampingbackend.apis.DatastoreUtility.findSavedUserAccount(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (registeredUser != null) { java.util.List<java.lang.Long> usersCurrentCampingTrips = registeredUser.getCampingTripsKeys(); if (usersCurrentCampingTrips == null) { usersCurrentCampingTrips = new java.util.ArrayList<java.lang.Long>(); } usersCurrentCampingTrips.add(savedCampingTrip.getId()); registeredUser.setCampingTripsKeys(usersCurrentCampingTrips); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3460/buggy-version/gocampingbackend.src.main.java.com.avgtechie.gocampingbackend.apis.FamilyEndpoint.java", "BodyUseAPI": ["com.avgtechie.gocampingbackend.objectifymodels.UserAccount.setCampingTripsKeys(java.util.List<java.lang.Long>)", "com.avgtechie.gocampingbackend.objectifymodels.UserAccount.getCampingTripsKeys()"], "Fixed commit": "3668ddf559ccc629098686dafeff1580883be86b", "Url": "https://api.github.com/repos/apatel7734/Go_Camping_Backend_Android", "Date": "2016-04-30T22:07:21Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pathValue.endsWith(\"/\")) { pathValue = pathValue.substring(0, ((pathValue.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6957/buggy-version/jaxrs.src.main.java.feign.jaxrs.JAXRSContract.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "b85d5c1efc59dc074916db9f8b6d7fd7eaf4a3e1", "Url": "https://api.github.com/repos/gorcz/feign", "Date": "2015-06-12T00:52:21Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!exist) { userPets.add(editPet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3151/buggy-version/app.src.main.java.itesm.mx.perritos.pet.PetFragment.java", "BodyUseAPI": [], "Fixed commit": "147b31b907270d351cbab5a26e4ad57499336b70", "Url": "https://api.github.com/repos/jvazquez96/Perritos-app", "Date": "2017-05-01T17:57:14Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.funtip.ahoi.dao.AccomodationPriceDao.findExtraByAccomodationAndYear(net.funtip.ahoi.entity.Accomodation,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((dest.size()) > 0) { lastOrderNum = dest.get(((dest.size()) - 1)).getOrder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1623/buggy-version/src.main.java.net.funtip.ahoi.bl.AccomodationPriceBlImpl.java", "BodyUseAPI": ["java.util.List<net.funtip.ahoi.entity.AccomodationPrice>.size()", "dest.get(((dest.size()) - 1)).getOrder()", "java.util.List<net.funtip.ahoi.entity.AccomodationPrice>.get(((dest.size()) - 1))"], "Fixed commit": "7b58538d982d8afd52829b33d2ff9707b780d801", "Url": "https://api.github.com/repos/perryp/ahoi", "Date": "2013-04-27T20:51:43Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((dbSinkConfig.password) != null) { conf.put(DBConfiguration.PASSWORD_PROPERTY, dbSinkConfig.password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1890/buggy-version/database-plugins.src.main.java.co.cask.hydrator.plugin.db.batch.sink.DBSink.java", "BodyUseAPI": [], "Fixed commit": "54079545aa66cc00b7695a83371280fdca2afd42", "Url": "https://api.github.com/repos/caskdata/hydrator-plugins", "Date": "2016-04-19T01:00:23Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWrapAdapter) != null) { mWrapAdapter.setPullRefreshEnabled(enabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4601/buggy-version/LRecyclerview_library.src.main.java.com.github.jdsjlzx.recyclerview.LRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "c7a8416573b8be87f773be9c37bc6ea9f8839835", "Url": "https://api.github.com/repos/jdsjlzx/LRecyclerView", "Date": "2016-08-15T07:10:41Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (containerView != null) { final int offsetX = (containerView.getLeft()) + ((int) ((android.support.v4.view.ViewCompat.getTranslationX(containerView)) + 0.5F)); final int offsetY = (containerView.getTop()) + ((int) ((android.support.v4.view.ViewCompat.getTranslationY(containerView)) + 0.5F)); return com.fastbootmobile.encore.utils.ViewUtils.hitTest(dragHandleView, (x - offsetX), (y - offsetY)); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3572/buggy-version/src.main.java.com.fastbootmobile.encore.app.adapters.PlaylistListAdapter.java", "BodyUseAPI": ["android.view.View.getLeft()", "android.support.v4.view.ViewCompat.getTranslationX(android.view.View)", "android.view.View.getTop()", "android.support.v4.view.ViewCompat.getTranslationY(android.view.View)"], "Fixed commit": "63698a58dca896b6f89a1d2571a6edddb176e0bc", "Url": "https://api.github.com/repos/fastbootmobile/encore", "Date": "2016-09-08T20:13:48Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.parse.ParseUser.getCurrentUser()) != null) { query.whereEqualTo(\"location\", com.parse.ParseUser.getCurrentUser().getParseObject(\"location\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7844/buggy-version/app.src.main.java.com.thavelka.feedme.Food.java", "BodyUseAPI": [], "Fixed commit": "f9c2cb10696e9ee4dde262dc0c7f09ca5a0eab1f", "Url": "https://api.github.com/repos/thavelka/FeedMe", "Date": "2015-04-02T04:40:34Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.parse.ParseUser.getCurrentUser()) != null) { query.whereEqualTo(\"location\", com.parse.ParseUser.getCurrentUser().getParseObject(\"location\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7844/buggy-version/app.src.main.java.com.thavelka.feedme.Drinks.java", "BodyUseAPI": [], "Fixed commit": "f9c2cb10696e9ee4dde262dc0c7f09ca5a0eab1f", "Url": "https://api.github.com/repos/thavelka/FeedMe", "Date": "2015-04-02T04:40:34Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openhab.binding.zwave.internal.protocol.ZWaveNode.getCommandClass(CommandClass.WAKE_UP)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((wakeUpCommandClass != null) && ((wakeUpCommandClass.isAwake()) == true)) { org.openhab.binding.zwave.internal.protocol.initialization.ZWaveNodeStageAdvancer.logger.debug(\"NODE {}: Node advancer: WAIT - Node is awake\", node.getNodeId()); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3950/buggy-version/bundles.binding.org.openhab.binding.zwave.src.main.java.org.openhab.binding.zwave.internal.protocol.initialization.ZWaveNodeStageAdvancer.java", "BodyUseAPI": [], "Fixed commit": "1200635b7849b16b066002e690aa35e11e3e0462", "Url": "https://api.github.com/repos/cdjackson/openhab", "Date": "2014-12-13T11:37:29Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, java.lang.Class>.get(request.getClassId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(client.getUser().getUserName().equals(classToAdd.getInstructor().getUserName()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2478/buggy-version/ClassRoomServer.src.server.ServerModel.java", "BodyUseAPI": [], "Fixed commit": "9dd8c555eb73884e4b36afe8f5fa1c0b62655ed9", "Url": "https://api.github.com/repos/ajchuang/CloudClassRoom", "Date": "2014-05-12T01:44:02Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, java.lang.Class>.get(request.getClassId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(classToAdd.inClass(client.getUser().getUserName()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2478/buggy-version/ClassRoomServer.src.server.ServerModel.java", "BodyUseAPI": [], "Fixed commit": "9dd8c555eb73884e4b36afe8f5fa1c0b62655ed9", "Url": "https://api.github.com/repos/ajchuang/CloudClassRoom", "Date": "2014-05-12T01:44:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getStartFlag().compareAndSet(false, true)) { fireLifeCycleEvent(LifeCyclePhase.BEFORE_STOP); fireLifeCycleEvent(LifeCyclePhase.AFTER_STOP); }else { com.shinemo.mpush.common.BaseServerModule.log.error(((this.getClass().getSimpleName()) + \" has stoped\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/166/buggy-version/mpush-common.src.main.java.com.shinemo.mpush.common.BaseServerModule.java", "BodyUseAPI": [], "Fixed commit": "6ca8dd14bb389698f7e6c02dee3972f2e68657b1", "Url": "https://api.github.com/repos/zhileihuang/push", "Date": "2016-03-17T05:44:08Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getStartFlag().compareAndSet(false, true)) { fireLifeCycleEvent(LifeCyclePhase.BEFORE_START); fireLifeCycleEvent(LifeCyclePhase.AFTER_START); }else { com.shinemo.mpush.common.BaseServerModule.log.error(((this.getClass().getSimpleName()) + \" has started\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/166/buggy-version/mpush-common.src.main.java.com.shinemo.mpush.common.BaseServerModule.java", "BodyUseAPI": [], "Fixed commit": "6ca8dd14bb389698f7e6c02dee3972f2e68657b1", "Url": "https://api.github.com/repos/zhileihuang/push", "Date": "2016-03-17T05:44:08Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((songNames.length) == 1) { i = 1; }else { i = (songNames.length) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7705/buggy-version/jukebox.src.main.java.org.onebeartoe.juke.ui.RandomJuke.java", "BodyUseAPI": [], "Fixed commit": "dd5d8975433a9e928a4970285d46649c4fba35a5", "Url": "https://api.github.com/repos/onebeartoe/media-players", "Date": "2015-08-03T20:38:32Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Files.exists(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (exists) { timestamp = java.nio.file.Files.getLastModifiedTime(resourcePath).toMillis(); }else { timestamp = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1603/buggy-version/org.eclipse.flux.watcher.src.main.java.org.eclipse.flux.watcher.fs.JDKProjectWatchService.java", "BodyUseAPI": [], "Fixed commit": "2997553bb1e4daedf6c021fc5de6c733aac5dde6", "Url": "https://api.github.com/repos/fjodorver/flux", "Date": "2016-08-16T21:01:07Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dataSnapshot.exists())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6175/buggy-version/app.src.main.java.com.gamector.ttkoreanacademy.fragments.StudentPortalFragment.java", "BodyUseAPI": [], "Fixed commit": "636bf00690a4007a6063e14184f7bffd15227032", "Url": "https://api.github.com/repos/cabauman/TTKoreanAcademy", "Date": "2017-03-29T14:15:37Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.findViewById(R.id.home)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (imageView != null) { imageView.setVisibility(View.INVISIBLE); }else { ((android.app.Activity) (context)).getActionBar().setIcon(new android.graphics.drawable.ColorDrawable(((android.app.Activity) (context)).getResources().getColor(android.R.color.transparent))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6628/buggy-version/app.src.main.java.com.guguluk.sausozluk.util.Utils.java", "BodyUseAPI": ["android.widget.ImageView.setVisibility(View.INVISIBLE)"], "Fixed commit": "fdbdf3d6d3f77100b2e88fc6a859a31ea4189390", "Url": "https://api.github.com/repos/erayarslan/sau-sozluk-android", "Date": "2014-09-19T17:48:42Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callbacks) != null) { for (org.catrobat.catroid.scratchconverter.Client.DownloadFinishedListener callback : callbacks) { callback.onUserCanceledDownload(url); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/257/buggy-version/catroid.src.org.catrobat.catroid.ui.dialogs.OverwriteRenameDialog.java", "BodyUseAPI": [], "Fixed commit": "005d440a8e830e86b05526bdd3f6432859506e6c", "Url": "https://api.github.com/repos/rsamer/Catroid", "Date": "2016-08-10T00:08:17Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.vulcan.dto.ProjectStatusDto.getChangeLog()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (changeLog != null) { java.util.List<net.sourceforge.vulcan.dto.ChangeSetDto> changeSets = changeLog.getChangeSets(); java.util.Map<java.lang.String, java.lang.String> map = getChangeAuthorEmailMap(); java.lang.String[] profileAddresses = profile.getEmailAddresses(); for (net.sourceforge.vulcan.dto.ChangeSetDto changeSet : changeSets) { java.lang.String author = changeSet.getAuthor().trim(); if ((map.containsKey(author)) && (org.apache.commons.lang.ArrayUtils.contains(profileAddresses, map.get(author)))) { addresses.add(map.get(author)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1234/buggy-version/plugins.vulcan-mailer.source.main.java.net.sourceforge.vulcan.mailer.EmailPlugin.java", "BodyUseAPI": ["net.sourceforge.vulcan.dto.ChangeLogDto.getChangeSets()"], "Fixed commit": "0fbe4bacf059bf8c11cf3c00199271ca3b5ccd20", "Url": "https://api.github.com/repos/chriseldredge/vulcan", "Date": "2007-10-23T11:32:23Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tok.equals(\"crois\")) java.lang.System.out.println((((\"debugcrois \" + (token.getSegment().getStartFrame())) + \" \") + (token.getSegment().getEndFrame())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/693/buggy-version/src.fr.loria.synalp.jtrans.markup.out.TextGridSaverHelper.java", "BodyUseAPI": [], "Fixed commit": "0da3f04ac9c733f5560a053d2e55d5b5534c3ba1", "Url": "https://api.github.com/repos/synalp/jtrans", "Date": "2014-12-19T13:03:22Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tok.equals(\"crois\")) java.lang.System.out.println((((\"debugcrois \" + (token.getSegment().getStartSecond())) + \" \") + (token.getSegment().getEndSecond())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/693/buggy-version/src.fr.loria.synalp.jtrans.markup.out.TextGridSaverHelper.java", "BodyUseAPI": [], "Fixed commit": "0da3f04ac9c733f5560a053d2e55d5b5534c3ba1", "Url": "https://api.github.com/repos/synalp/jtrans", "Date": "2014-12-19T13:03:22Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 14) { ksCACert = java.security.KeyStore.getInstance(\"AndroidCAStore\"); ksCACert.load(null, null); }else { java.io.InputStream trustStoreStream = new java.io.FileInputStream(new java.io.File(path)); ksCACert.load(trustStoreStream, password.toCharArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6316/buggy-version/app.src.info.guardianproject.cacert.CACertManager.java", "BodyUseAPI": [], "Fixed commit": "f0f7ce2bd10725d32cbf2ed7832dda9921ad5ac3", "Url": "https://api.github.com/repos/RoundSparrow/cacert", "Date": "2014-04-22T14:05:46Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.nitrogenegames.netcraft.Netcraft.isConectedToCore(par1World, par2, par3, par4)) { this.getEntity(par1World, par2, par3, par4).update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4441/buggy-version/src.minecraft.com.nitrogenegames.netcraft.block.BlockCore.java", "BodyUseAPI": ["com.nitrogenegames.netcraft.block.BlockCore.getEntity(net.minecraft.world.World,int,int,int)", "com.nitrogenegames.netcraft.net.NetEntity.update()"], "Fixed commit": "7de10ebf035ff6267ff119e3f3df71d0cb9fc27b", "Url": "https://api.github.com/repos/NitrogeneGames/Netcraftv2.0", "Date": "2014-02-03T03:39:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.nitrogenegames.netcraft.Netcraft.isConectedToCore(par1World, par2, par3, par4)) { this.getEntity(par1World, par2, par3, par4).update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4441/buggy-version/src.minecraft.com.nitrogenegames.netcraft.block.BlockCore.java", "BodyUseAPI": ["com.nitrogenegames.netcraft.block.BlockCore.getEntity(net.minecraft.world.World,int,int,int)", "com.nitrogenegames.netcraft.net.NetEntity.update()"], "Fixed commit": "7de10ebf035ff6267ff119e3f3df71d0cb9fc27b", "Url": "https://api.github.com/repos/NitrogeneGames/Netcraftv2.0", "Date": "2014-02-03T03:39:39Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.nitrogenegames.netcraft.Netcraft.isConectedToCore(par1World, par2, par3, par4)) { this.getEntity(par1World, par2, par3, par4).update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4441/buggy-version/src.minecraft.com.nitrogenegames.netcraft.block.BlockCore.java", "BodyUseAPI": ["com.nitrogenegames.netcraft.block.BlockCore.getEntity(net.minecraft.world.World,int,int,int)", "com.nitrogenegames.netcraft.net.NetEntity.update()"], "Fixed commit": "7de10ebf035ff6267ff119e3f3df71d0cb9fc27b", "Url": "https://api.github.com/repos/NitrogeneGames/Netcraftv2.0", "Date": "2014-02-03T03:39:39Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.nitrogenegames.netcraft.Netcraft.isConectedToCore(par1World, par2, par3, par4)) { this.getEntity(par1World, par2, par3, par4).update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4441/buggy-version/src.minecraft.com.nitrogenegames.netcraft.block.BlockNodeConnection.java", "BodyUseAPI": ["com.nitrogenegames.netcraft.block.BlockNodeConnection.getEntity(net.minecraft.world.World,int,int,int)", "com.nitrogenegames.netcraft.net.NetEntity.update()"], "Fixed commit": "7de10ebf035ff6267ff119e3f3df71d0cb9fc27b", "Url": "https://api.github.com/repos/NitrogeneGames/Netcraftv2.0", "Date": "2014-02-03T03:39:39Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.nitrogenegames.netcraft.Netcraft.isConectedToCore(par1World, par2, par3, par4)) { this.getEntity(par1World, par2, par3, par4).update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4441/buggy-version/src.minecraft.com.nitrogenegames.netcraft.block.BlockNodeConnection.java", "BodyUseAPI": ["com.nitrogenegames.netcraft.block.BlockNodeConnection.getEntity(net.minecraft.world.World,int,int,int)", "com.nitrogenegames.netcraft.net.NetEntity.update()"], "Fixed commit": "7de10ebf035ff6267ff119e3f3df71d0cb9fc27b", "Url": "https://api.github.com/repos/NitrogeneGames/Netcraftv2.0", "Date": "2014-02-03T03:39:39Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.nitrogenegames.netcraft.Netcraft.isConectedToCore(par1World, par2, par3, par4)) { this.getEntity(par1World, par2, par3, par4).update(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4441/buggy-version/src.minecraft.com.nitrogenegames.netcraft.block.BlockNodeConnection.java", "BodyUseAPI": ["com.nitrogenegames.netcraft.net.NetEntity.update()", "com.nitrogenegames.netcraft.block.BlockNodeConnection.getEntity(net.minecraft.world.World,int,int,int)"], "Fixed commit": "7de10ebf035ff6267ff119e3f3df71d0cb9fc27b", "Url": "https://api.github.com/repos/NitrogeneGames/Netcraftv2.0", "Date": "2014-02-03T03:39:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stopPlayback) == true) { stopPlayback = false; java.lang.System.out.println(\"Start play thread\"); new superkidsapplication.controllers.MusicController.PlayThread().start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6574/buggy-version/GUI.src.main.java.superkidsapplication.controllers.MusicController.java", "BodyUseAPI": [], "Fixed commit": "6a0481a0d041269e97c60b5ea5d86917cb21a993", "Url": "https://api.github.com/repos/bduong/super-kids", "Date": "2012-10-26T09:50:01Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.sunshine.app.Utility.getFriendlyDayString(getActivity(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dayText.contains(\"Today\")) { dayText = \"Today\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4772/buggy-version/app.src.main.java.com.example.android.sunshine.app.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "0c42bfbec9146786f34d01d45f55745a2debe90f", "Url": "https://api.github.com/repos/pjlosco/Sunshine", "Date": "2014-08-12T21:11:26Z"},
{"Line": "=>1297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mDundOutputStream != null) mDundOutputStream.write(IpcMsgBuffer.array(), 0, WriteLen);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1915/buggy-version/src.org.codeaurora.bluetooth.dun.BluetoothDunService.java", "BodyUseAPI": ["java.io.OutputStream.write(byte[],int,int)"], "Fixed commit": "d93cd0e91f1de225c1c71aa93aa30c486b0db795", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_BluetoothExt", "Date": "2014-11-20T02:51:29Z"},
{"Line": "=>1267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mDundOutputStream != null) mDundOutputStream.write(IpcMsgBuffer.array(), 0, WriteLen);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1915/buggy-version/src.org.codeaurora.bluetooth.dun.BluetoothDunService.java", "BodyUseAPI": ["java.io.OutputStream.write(byte[],int,int)"], "Fixed commit": "d93cd0e91f1de225c1c71aa93aa30c486b0db795", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_BluetoothExt", "Date": "2014-11-20T02:51:29Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.preference.PreferenceManager.getDefaultSharedPreferences(this).getBoolean(\"DECIMAL_USE\", true)) { editText.setInputType((((android.text.InputType.TYPE_CLASS_NUMBER) | (android.text.InputType.TYPE_NUMBER_FLAG_SIGNED)) | (android.text.InputType.TYPE_NUMBER_FLAG_DECIMAL))); }else { editText.setInputType(((android.text.InputType.TYPE_CLASS_NUMBER) | (android.text.InputType.TYPE_NUMBER_FLAG_SIGNED))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8244/buggy-version/MatrixProCalculator.src.main.java.com.softminds.matrixcalculatorpro.dialog_activity.CustomValueFiller.java", "BodyUseAPI": [], "Fixed commit": "1083a1dc00df80b4598cface67dddc426158896b", "Url": "https://api.github.com/repos/coder3101/Matrix-Calculator-for-Android", "Date": "2017-03-02T15:20:49Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((board[toR][toC]) != null) && ((board[toR][toC].player()) == (owner))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7521/buggy-version/ChessGame.src.project3.ChessPiece.java", "BodyUseAPI": [], "Fixed commit": "e0a166d4dbae1c5005876402f238e899dd517ac3", "Url": "https://api.github.com/repos/suarezka/ChessGame", "Date": "2014-03-13T04:44:59Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (grade < 60) { java.lang.System.out.println('F'); }else if (grade < 70) { java.lang.System.out.println('D'); }else if (grade < 80) { java.lang.System.out.println('C'); }else if (grade < 90) { java.lang.System.out.println('B'); }else { java.lang.System.out.println('A'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7486/buggy-version/src.org.launchcode.java.demos.java4python.ElseIf.java", "BodyUseAPI": [], "Fixed commit": "93355f0a3c0d87bed4e7c4f7e169be904b6262f6", "Url": "https://api.github.com/repos/alarconm/java-exercises", "Date": "2017-07-28T03:44:00Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.length) > 0) { java.util.List<java.lang.Double> dataList = java.util.Arrays.asList(data); double tmp = java.util.Collections.min(dataList); if (min > tmp) { min = tmp; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/165/buggy-version/cat-home.src.main.java.com.dianping.cat.report.page.app.display.AppGraphCreator.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.Double[])"], "Fixed commit": "09461404baa97026bc38f68b98e6427923445a41", "Url": "https://api.github.com/repos/leonindy/cat", "Date": "2014-12-05T03:46:40Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kr.nexters.oneday.database.PersonDBAdapter.fetchTimeInfo(kr.nexters.oneday.vo.Person)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mCursor.moveToFirst()) { do { kr.nexters.oneday.widget.TimeTableView.DAY day = kr.nexters.oneday.widget.TimeTableView.DAY.valueOf(mCursor.getString(mCursor.getColumnIndex(DBHelper.KEY_DAYNUMBER))); kr.nexters.oneday.widget.TimeTableView.TIME time = kr.nexters.oneday.widget.TimeTableView.TIME.valueOf(mCursor.getString(mCursor.getColumnIndex(DBHelper.KEY_TIMENUMBER))); ti.add(new kr.nexters.oneday.vo.TimeInfo(day, time)); } while (mCursor.moveToNext() ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1615/buggy-version/src.kr.nexters.oneday.database.PersonDBAdapter.java", "BodyUseAPI": ["kr.nexters.oneday.widget.TimeTableView.DAY.valueOf(mCursor.getString(mCursor.getColumnIndex(DBHelper.KEY_DAYNUMBER)))", "android.database.Cursor.getColumnIndex(DBHelper.KEY_DAYNUMBER)", "android.database.Cursor.getString(mCursor.getColumnIndex(DBHelper.KEY_DAYNUMBER))", "android.database.Cursor.moveToNext()", "android.database.Cursor.getColumnIndex(DBHelper.KEY_TIMENUMBER)", "kr.nexters.oneday.widget.TimeTableView.TIME.valueOf(mCursor.getString(mCursor.getColumnIndex(DBHelper.KEY_TIMENUMBER)))", "android.database.Cursor.getString(mCursor.getColumnIndex(DBHelper.KEY_TIMENUMBER))"], "Fixed commit": "2d61c740afc900300dc33a553b495e7e87e0cdbe", "Url": "https://api.github.com/repos/Nexters/OneDay", "Date": "2014-08-29T01:12:16Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsProcessingEvent)) { for (dan.dit.whatsthat.achievement.AchievementDataEventListener removed : mRemovedListeners) { mListeners.remove(removed); } mRemovedListeners.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2317/buggy-version/app.src.main.java.dan.dit.whatsthat.achievement.AchievementData.java", "BodyUseAPI": [], "Fixed commit": "0dce9892698be6a98074a6504ef185c31c01c20f", "Url": "https://api.github.com/repos/DanDits/WhatsThat", "Date": "2015-06-21T20:14:05Z"},
{"Line": "=>2510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.getPort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret == (-1)) { if (u.getProtocol().equalsIgnoreCase(\"https\")) { ret = 443; }else { ret = 80; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4843/buggy-version/src.main.java.com.amazonaws.mws.MarketplaceWebServiceClient.java", "BodyUseAPI": [], "Fixed commit": "b4fe675a375376ee5d0b458750442ce98251fcf4", "Url": "https://api.github.com/repos/wspeirs/mws-sdk", "Date": "2012-07-22T17:22:14Z"},
{"Line": "=>932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pref.getString(\"distance\", null)) != null) { distance_km.setText(((java.lang.String.format(\"%.1f\", ((java.lang.Double.parseDouble(pref.getString(\"distance\", null))) / 1000.0))) + \" km from your current location\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6808/buggy-version/app.src.main.java.hu.bitnet.smartparking.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)", "java.lang.Double.parseDouble(pref.getString(\"distance\", null))", "java.lang.String.format(java.lang.String,((java.lang.Double.parseDouble(pref.getString(\"distance\", null))) / 1000.0))", "android.widget.TextView.setText(((java.lang.String.format(\"%.1f\", ((java.lang.Double.parseDouble(pref.getString(\"distance\", null))) / 1000.0))) + \" km from your current location\"))"], "Fixed commit": "7c61f31d1288ef91cab32044066d073d9bc4304e", "Url": "https://api.github.com/repos/rabdev/Smart_Parking", "Date": "2017-10-30T08:24:24Z"},
{"Line": "=>935", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pref.getString(\"time\", null)) != null) { distance_mins.setText(((java.lang.String.format(\"%.1f\", java.lang.Double.parseDouble(pref.getString(\"time\", null)))) + \" mins without traffic\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6808/buggy-version/app.src.main.java.hu.bitnet.smartparking.MainActivity.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)", "java.lang.Double.parseDouble(pref.getString(\"time\", null))", "java.lang.String.format(java.lang.String,double)", "android.widget.TextView.setText(((java.lang.String.format(\"%.1f\", java.lang.Double.parseDouble(pref.getString(\"time\", null)))) + \" mins without traffic\"))"], "Fixed commit": "7c61f31d1288ef91cab32044066d073d9bc4304e", "Url": "https://api.github.com/repos/rabdev/Smart_Parking", "Date": "2017-10-30T08:24:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) != null) exp += size.getXP();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8540/buggy-version/Server.src.main.java.data_structures.treasure.Treasure.java", "BodyUseAPI": [], "Fixed commit": "a3d488589b2c6f252d8c7bf896e9d49d7851d588", "Url": "https://api.github.com/repos/co0k/TreasureHunt", "Date": "2015-06-01T14:13:41Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content) != null) exp += content.getXP();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8540/buggy-version/Server.src.main.java.data_structures.treasure.Treasure.java", "BodyUseAPI": [], "Fixed commit": "a3d488589b2c6f252d8c7bf896e9d49d7851d588", "Url": "https://api.github.com/repos/co0k/TreasureHunt", "Date": "2015-06-01T14:13:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) != null) { exp += type.getXP(); if (((((type) instanceof data_structures.treasure.Quiz) && ((location) != null)) && ((((data_structures.treasure.Quiz) (type)).getLocationId()) != null)) && ((((data_structures.treasure.Quiz) (type)).getLocationId()) != (location.getId()))) exp *= 1.5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8540/buggy-version/Server.src.main.java.data_structures.treasure.Treasure.java", "BodyUseAPI": [], "Fixed commit": "a3d488589b2c6f252d8c7bf896e9d49d7851d588", "Url": "https://api.github.com/repos/co0k/TreasureHunt", "Date": "2015-06-01T14:13:41Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.zkoss.zk.ui.Executions.getCurrent().isExplorer())) { org.zkoss.zk.ui.Executions.getCurrent().addAuResponse(\"setUrl\", new org.zkoss.zk.au.out.AuScript(this, java.lang.String.format(\"window.history.pushState(\\\"%s\\\", \\\"%s\\\", window.location.protocol+\\\"//\\\"+window.location.host+\\\"%s\\\");\", getPagina(), getLabel(), path))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3329/buggy-version/web.src.main.java.es.caib.bpm.ui.tree.ApplicationTreecell.java", "BodyUseAPI": [], "Fixed commit": "a1775f61ea42965cae8a6095dae003d467f4073e", "Url": "https://api.github.com/repos/SoffidIAM/console", "Date": "2014-08-28T11:28:09Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (secs < 0) throw new java.lang.IllegalArgumentException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4026/buggy-version/src.main.java.com.github.marabou.helper.AudioFileHelper.java", "BodyUseAPI": [], "Fixed commit": "92dc9df77dbdc9540ad201c45bf295a1b0992bed", "Url": "https://api.github.com/repos/hennr/marabou", "Date": "2013-06-27T19:09:17Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((superType) instanceof VTypeInter) { Helper.ToDo(\"Please check whether the parrentType is implmented correctly\"); for (CuType t : superType.parentType) { java.util.Map<java.lang.String, CuFun> superfunLst = cur_context.mClasses.get(t.id).funList; for (java.util.Map.Entry<java.lang.String, CuFun> e : superfunLst.entrySet()) { if (funList.containsKey(e.getKey())) { if (!(e.getValue().ts.sameAs(e.getValue().ts, cur_context))) { throw new NoSuchTypeException(); } if ((funList.get(e.getKey()).funBody) instanceof EmptyBody) { funList.get(e.getKey()).funBody = e.getValue().funBody; } }else { super.mFunctions.put(e.getKey(), e.getValue().ts); super.funList.put(e.getKey(), e.getValue()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6697/buggy-version/src.CuClass.java", "BodyUseAPI": [], "Fixed commit": "132d962581485dfd0444543d3355122310bbf95d", "Url": "https://api.github.com/repos/lalalah/CompilersPS3-2", "Date": "2013-10-13T00:10:35Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (logs == null) { return javax.ws.rs.core.Response.ok(\"content was null\").build(); }else if ((logs.getSensorLogs()) == null) { return javax.ws.rs.core.Response.ok(\"content was null, no logs\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7050/buggy-version/src.main.java.mde519.server.services.MasterService.java", "BodyUseAPI": ["mde519.server.daos.LogData.getSensorLogs()"], "Fixed commit": "4d405be0a86e09b2b7325483d8a58c1c8b5fafeb", "Url": "https://api.github.com/repos/ikavvour/main-server-mema", "Date": "2014-09-27T17:21:12Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.actionbarsherlock.app.SherlockFragmentActivity.getSupportFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fragmentManager.findFragmentByTag(ScriptFragment.TAG).getTag()) == (org.catrobat.catroid.ui.fragment.FormulaEditorFragment.FORMULA_EDITOR_MULTIPLE_SEEKBAR_FRAGMENT_TAG)) { ((org.catrobat.catroid.content.bricks.KodeyRGBLightBrick) (currentBrick)).setIsFormulaEditorPreview(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4756/buggy-version/catroid.src.org.catrobat.catroid.ui.fragment.FormulaEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "3bd1a3ff81b447bba3d9f58ea89535c4945ff726", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2015-03-14T17:32:31Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.actionbarsherlock.app.SherlockFragmentActivity.getSupportFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fragmentManager.findFragmentByTag(ScriptFragment.TAG).getTag()) == (org.catrobat.catroid.ui.fragment.FormulaEditorFragment.FORMULA_EDITOR_MOTOR_BACKWARD_SINGLE_SEEKBAR_FRAGMENT_TAG)) { ((org.catrobat.catroid.content.bricks.KodeyMotorBackwardActionBrick) (currentBrick)).setIsFormulaEditorPreview(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4756/buggy-version/catroid.src.org.catrobat.catroid.ui.fragment.FormulaEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "3bd1a3ff81b447bba3d9f58ea89535c4945ff726", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2015-03-14T17:32:31Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.actionbarsherlock.app.SherlockFragmentActivity.getSupportFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fragmentManager.findFragmentByTag(ScriptFragment.TAG).getTag()) == (org.catrobat.catroid.ui.fragment.FormulaEditorFragment.FORMULA_EDITOR_MOTOR_FORWARD_SINGLE_SEEKBAR_FRAGMENT_TAG)) { ((org.catrobat.catroid.content.bricks.KodeyMotorForwardActionBrick) (currentBrick)).setIsFormulaEditorPreview(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4756/buggy-version/catroid.src.org.catrobat.catroid.ui.fragment.FormulaEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "3bd1a3ff81b447bba3d9f58ea89535c4945ff726", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2015-03-14T17:32:31Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(uk.co.oliwali.HawkEye.util.Util.isInteger(values[0]))) throw new java.lang.IllegalArgumentException((\"Invalid radius supplied: &7\" + (values[0])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7529/buggy-version/src.uk.co.oliwali.HawkEye.SearchParser.java", "BodyUseAPI": [], "Fixed commit": "b359f80f336faa0f290be9506d3ed8566adc87cd", "Url": "https://api.github.com/repos/oliverwoodings/HawkEye", "Date": "2011-08-19T12:34:11Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fsck.k9.mail.store.LocalStore.getLocalInstance(com.fsck.k9.Account,K9.app)", "java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (localStore.getAttachmentType(id).equals(\"image/jpg\")) { return \"image/jpeg\"; }else { return localStore.getAttachmentType(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2447/buggy-version/src.com.fsck.k9.provider.AttachmentProvider.java", "BodyUseAPI": ["com.fsck.k9.mail.store.LocalStore.getAttachmentType(java.lang.String)"], "Fixed commit": "fa5901d404be822d590b834fd508ef89676addef", "Url": "https://api.github.com/repos/kamilk/k-9", "Date": "2011-03-23T21:06:50Z"},
{"Line": "=>1667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((effects) != null) { java.util.List<com.nisovin.magicspells.spelleffects.SpellEffect> spellEffects = effects.get(pos); if (spellEffects != null) { for (com.nisovin.magicspells.spelleffects.SpellEffect e : spellEffects) { e.playTrackingLinePatterns(origin, target, originEntity, targetEntity); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6889/buggy-version/src.com.nisovin.magicspells.Spell.java", "BodyUseAPI": [], "Fixed commit": "49e6ce985b0310d0168580efd4ab6c5d0867572b", "Url": "https://api.github.com/repos/TheComputerGeek2/MagicSpells", "Date": "2016-04-06T19:43:16Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(allowHtml)) { return new java.lang.String(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8021/buggy-version/src.org.wsdeck.DeckProcessor.java", "BodyUseAPI": [], "Fixed commit": "3c12998a5c20fa2f3530da6517f716a918967e05", "Url": "https://api.github.com/repos/oiale/WSdeck", "Date": "2016-10-29T04:24:49Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(allowHtml)) { return new java.lang.String(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8021/buggy-version/src.org.wsdeck.DeckProcessor.java", "BodyUseAPI": [], "Fixed commit": "3c12998a5c20fa2f3530da6517f716a918967e05", "Url": "https://api.github.com/repos/oiale/WSdeck", "Date": "2016-10-29T04:24:49Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 9) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4164/buggy-version/src.main.java.train.common.tile.TileCrafterTierI.java", "BodyUseAPI": [], "Fixed commit": "6dbaf58d1d61757849ce62c8b15b2f1c1d5d78f4", "Url": "https://api.github.com/repos/EternalBlueFlame/Traincraft-5", "Date": "2016-07-14T21:33:07Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 17) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4164/buggy-version/src.main.java.train.common.tile.TileCrafterTierI.java", "BodyUseAPI": [], "Fixed commit": "6dbaf58d1d61757849ce62c8b15b2f1c1d5d78f4", "Url": "https://api.github.com/repos/EternalBlueFlame/Traincraft-5", "Date": "2016-07-14T21:33:07Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 17) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4164/buggy-version/src.main.java.train.common.tile.TileCrafterTierII.java", "BodyUseAPI": [], "Fixed commit": "6dbaf58d1d61757849ce62c8b15b2f1c1d5d78f4", "Url": "https://api.github.com/repos/EternalBlueFlame/Traincraft-5", "Date": "2016-07-14T21:33:07Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 9) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4164/buggy-version/src.main.java.train.common.tile.TileCrafterTierII.java", "BodyUseAPI": [], "Fixed commit": "6dbaf58d1d61757849ce62c8b15b2f1c1d5d78f4", "Url": "https://api.github.com/repos/EternalBlueFlame/Traincraft-5", "Date": "2016-07-14T21:33:07Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 9) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4164/buggy-version/src.main.java.train.common.tile.TileCrafterTierIII.java", "BodyUseAPI": [], "Fixed commit": "6dbaf58d1d61757849ce62c8b15b2f1c1d5d78f4", "Url": "https://api.github.com/repos/EternalBlueFlame/Traincraft-5", "Date": "2016-07-14T21:33:07Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 17) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4164/buggy-version/src.main.java.train.common.tile.TileCrafterTierIII.java", "BodyUseAPI": [], "Fixed commit": "6dbaf58d1d61757849ce62c8b15b2f1c1d5d78f4", "Url": "https://api.github.com/repos/EternalBlueFlame/Traincraft-5", "Date": "2016-07-14T21:33:07Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((packetCount) != 0) { return ((double) (outOfOrderCount)) / (packetCount); }else { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2621/buggy-version/android.src.com.mobiperf.measurements.UDPBurstTask.java", "BodyUseAPI": [], "Fixed commit": "5ca2ddb150155b11b8db4b5a10457c92d583420e", "Url": "https://api.github.com/repos/laoyaosniper/MobiPerf", "Date": "2014-03-07T01:10:45Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (filepath.contains(\".vcf.gz\")) filepath = filepath.replace(\".vcf.gz\", \".percent.txt\"); else filepath = filepath.replace(\".vcf\", \".percent.txt\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2531/buggy-version/src.main.java.vtc.tools.varstats.VariantPoolPercents.java", "BodyUseAPI": [], "Fixed commit": "530da5ef98314f5fec647654001196dfc9c0d103", "Url": "https://api.github.com/repos/mebbert/VariantToolChest", "Date": "2015-02-27T17:16:35Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restcomm.connect.dao.RecordingsDao.getRecording(org.restcomm.connect.commons.dao.Sid)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((recording.getFileUri()) != null) { fileExtension = (recording.getFileUri().toString().endsWith(\"wav\")) ? \".wav\" : \".mp4\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1525/buggy-version/restcomm.restcomm.http.src.main.java.org.restcomm.connect.http.RecordingsEndpoint.java", "BodyUseAPI": ["recording.getFileUri().toString().endsWith(java.lang.String)", "recording.getFileUri().toString()", "org.restcomm.connect.dao.entities.Recording.getFileUri()"], "Fixed commit": "36f5665886454b23db6be22d5c4e598cab9690ac", "Url": "https://api.github.com/repos/tspslegr/RestComm", "Date": "2017-04-06T22:13:32Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileExtension.equals(\".wav\")) { contentType = \"audio/x-wav\"; }else { contentType = \"video/mp4\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1525/buggy-version/restcomm.restcomm.http.src.main.java.org.restcomm.connect.http.RecordingsEndpoint.java", "BodyUseAPI": [], "Fixed commit": "36f5665886454b23db6be22d5c4e598cab9690ac", "Url": "https://api.github.com/repos/tspslegr/RestComm", "Date": "2017-04-06T22:13:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (selectedIcon)) { selectedIcon.setColorFilter(iconSelectedColorFilter, PorterDuff.Mode.SRC_ATOP); setCompoundDrawablesWithIntrinsicBounds(null, selectedIcon, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1703/buggy-version/app.src.main.java.com.chn.halo.view.bottomtabbar.SelectableBottomTextView.java", "BodyUseAPI": [], "Fixed commit": "f115bab458c19243cf9266924d66552bee3bdf7b", "Url": "https://api.github.com/repos/Halo-CHN/HelloGradle", "Date": "2016-09-14T05:59:35Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (unselectedIcon)) { unselectedIcon.setColorFilter(iconUnSelectedColorFilter, PorterDuff.Mode.SRC_ATOP); setCompoundDrawablesWithIntrinsicBounds(null, unselectedIcon, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1703/buggy-version/app.src.main.java.com.chn.halo.view.bottomtabbar.SelectableBottomTextView.java", "BodyUseAPI": [], "Fixed commit": "f115bab458c19243cf9266924d66552bee3bdf7b", "Url": "https://api.github.com/repos/Halo-CHN/HelloGradle", "Date": "2016-09-14T05:59:35Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(timelineArrayList.contains(_newEvent))) { timelineArrayList.add(_newEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5084/buggy-version/src.gui.MainPanel.java", "BodyUseAPI": ["java.util.ArrayList<src.Event>.add(src.Event)"], "Fixed commit": "36721796b2f978f154731717b17c179c03a4fb19", "Url": "https://api.github.com/repos/betaros/stralsund_erkunden", "Date": "2016-11-22T12:23:26Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(previewFragment.isHidden())) ft.hide(previewFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4729/buggy-version/app.src.main.java.com.codeforgvl.trolleytrackerclient.activities.MainActivity.java", "BodyUseAPI": ["android.app.FragmentTransaction.hide(com.codeforgvl.trolleytrackerclient.fragments.RoutePreviewFragment)"], "Fixed commit": "855297f5f82d5b0248e1531ed1909250a3578891", "Url": "https://api.github.com/repos/codeforgreenville/trolley-tracker-android-client", "Date": "2016-04-24T01:40:44Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(previewFragment.isHidden())) ft.hide(previewFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4729/buggy-version/app.src.main.java.com.codeforgvl.trolleytrackerclient.activities.MainActivity.java", "BodyUseAPI": ["android.app.FragmentTransaction.hide(com.codeforgvl.trolleytrackerclient.fragments.RoutePreviewFragment)"], "Fixed commit": "855297f5f82d5b0248e1531ed1909250a3578891", "Url": "https://api.github.com/repos/codeforgreenville/trolley-tracker-android-client", "Date": "2016-04-24T01:40:44Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scheduleFragment.isHidden())) ft.hide(scheduleFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4729/buggy-version/app.src.main.java.com.codeforgvl.trolleytrackerclient.activities.MainActivity.java", "BodyUseAPI": ["android.app.FragmentTransaction.hide(com.codeforgvl.trolleytrackerclient.fragments.ScheduleFragment)"], "Fixed commit": "855297f5f82d5b0248e1531ed1909250a3578891", "Url": "https://api.github.com/repos/codeforgreenville/trolley-tracker-android-client", "Date": "2016-04-24T01:40:44Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(scheduleFragment.isHidden())) ft.hide(scheduleFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4729/buggy-version/app.src.main.java.com.codeforgvl.trolleytrackerclient.activities.MainActivity.java", "BodyUseAPI": ["android.app.FragmentTransaction.hide(com.codeforgvl.trolleytrackerclient.fragments.ScheduleFragment)"], "Fixed commit": "855297f5f82d5b0248e1531ed1909250a3578891", "Url": "https://api.github.com/repos/codeforgreenville/trolley-tracker-android-client", "Date": "2016-04-24T01:40:44Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(trackerFragment.isHidden())) ft.hide(trackerFragment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4729/buggy-version/app.src.main.java.com.codeforgvl.trolleytrackerclient.activities.MainActivity.java", "BodyUseAPI": ["android.app.FragmentTransaction.hide(com.codeforgvl.trolleytrackerclient.fragments.TrackerFragment)"], "Fixed commit": "855297f5f82d5b0248e1531ed1909250a3578891", "Url": "https://api.github.com/repos/codeforgreenville/trolley-tracker-android-client", "Date": "2016-04-24T01:40:44Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paused) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7963/buggy-version/core.src.main.java.io.undertow.io.AsyncReceiverImpl.java", "BodyUseAPI": [], "Fixed commit": "dafc7ca35d507e04d89acecd4c7efde93f13107a", "Url": "https://api.github.com/repos/TomasHofman/undertow", "Date": "2015-07-30T22:38:09Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paused) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7963/buggy-version/core.src.main.java.io.undertow.io.AsyncReceiverImpl.java", "BodyUseAPI": [], "Fixed commit": "dafc7ca35d507e04d89acecd4c7efde93f13107a", "Url": "https://api.github.com/repos/TomasHofman/undertow", "Date": "2015-07-30T22:38:09Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.schlichtherle.truezip.file.TFile.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files != null) { for (de.schlichtherle.truezip.file.TFile file : files) { processArchivesRecursively(file); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5687/buggy-version/src.main.java.org.freeeed.main.ZipFileProcessor.java", "BodyUseAPI": [], "Fixed commit": "ecce02ffb90d3adfb99948e66d06c75f8b55f4ca", "Url": "https://api.github.com/repos/markkerzner/FreeEed", "Date": "2012-04-01T16:56:09Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deObj instanceof java.lang.String) { fixedValues[i] = org.zoodb.jdo.internal.server.index.BitTools.toSortableLong(((java.lang.String) (deObj))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/555/buggy-version/src.org.zoodb.jdo.internal.GenericObject.java", "BodyUseAPI": [], "Fixed commit": "b5132ef08af57720df87a709983956ffe2005bac", "Url": "https://api.github.com/repos/tzaeschke/zoodb", "Date": "2013-09-18T17:27:44Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ykn.get(k)) == null) || ((ykn.get(k).get(n)) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8628/buggy-version/LinSup.app.src.main.java.ru.grit.egor.linsup.utils.LinSupSolver.java", "BodyUseAPI": [], "Fixed commit": "11f774ad270e2d0fbafa509a8569e873e1e557dc", "Url": "https://api.github.com/repos/EgorGrisina/LinSup_OPT", "Date": "2017-03-19T21:28:08Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ykn.get(k)) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8628/buggy-version/LinSup.app.src.main.java.ru.grit.egor.linsup.utils.LinSupSolver.java", "BodyUseAPI": [], "Fixed commit": "11f774ad270e2d0fbafa509a8569e873e1e557dc", "Url": "https://api.github.com/repos/EgorGrisina/LinSup_OPT", "Date": "2017-03-19T21:28:08Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lk.get((k - 1))) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8628/buggy-version/LinSup.app.src.main.java.ru.grit.egor.linsup.utils.LinSupSolver.java", "BodyUseAPI": [], "Fixed commit": "11f774ad270e2d0fbafa509a8569e873e1e557dc", "Url": "https://api.github.com/repos/EgorGrisina/LinSup_OPT", "Date": "2017-03-19T21:28:08Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stop) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3084/buggy-version/pc.src.capteurs.CapteursProcess.java", "BodyUseAPI": [], "Fixed commit": "f4fafc29fa09e5cd635ecabd5d6601527027a9a8", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-12T15:51:01Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stop) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3084/buggy-version/pc.src.capteurs.CapteursProcess.java", "BodyUseAPI": [], "Fixed commit": "f4fafc29fa09e5cd635ecabd5d6601527027a9a8", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-12T15:51:01Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasSurName && hasName) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3385/buggy-version/com.onpositive.text.analisys.src.com.onpositive.text.analysis.lexic.dates.LongNameParser.java", "BodyUseAPI": [], "Fixed commit": "e13796accc65b6640e8c8350d42bfdb9b5e32036", "Url": "https://api.github.com/repos/OnPositive/text-analisis", "Date": "2015-02-12T00:26:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(list.containsKey(element.hashCode()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1585/buggy-version/src.dna.graph.datastructures.DHashMultimap.java", "BodyUseAPI": [], "Fixed commit": "1a9a92aaa9474d4b921cc21dcc0658189fcb8cda", "Url": "https://api.github.com/repos/BenjaminSchiller/DNA", "Date": "2014-05-28T07:38:05Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == requireAuthentication) { requireAuthentication = act.aaa.AAAService.ALWAYS_AUTHENTICATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/958/buggy-version/src.main.java.act.aaa.AAAService.java", "BodyUseAPI": [], "Fixed commit": "e22cd3f7ba34cb3cae5ec09fd4551dca3692635a", "Url": "https://api.github.com/repos/actframework/act-aaa-plugin", "Date": "2016-01-14T01:18:33Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addressToCheck.length()) < 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4234/buggy-version/portal-service.src.com.liferay.portal.kernel.util.Validator.java", "BodyUseAPI": [], "Fixed commit": "cc93b542309bb0840eea6b405007f4aa571f50de", "Url": "https://api.github.com/repos/vilmospapp/liferay-portal", "Date": "2012-07-25T08:29:01Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validInput == true) { setNumberOfChips(((-currentHighBet) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/384/buggy-version/HumanPokerPlayer.java", "BodyUseAPI": [], "Fixed commit": "1093eb35bd91680fe037c4502b3e27ed31cf7aeb", "Url": "https://api.github.com/repos/COMP30050DHK/PokerBot", "Date": "2017-04-21T13:30:10Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.giraffa.LeaseManager.renewLease(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((leases == null) || (leases.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1000/buggy-version/giraffa-core.src.main.java.org.apache.giraffa.hbase.NamespaceProcessor.java", "BodyUseAPI": [], "Fixed commit": "86d78a5f0f019eb79ef50358d2c174667998d672", "Url": "https://api.github.com/repos/GiraffaFS/giraffa", "Date": "2015-05-14T23:31:35Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(titleText.getText().equals(\"\"))) { item.setPostTitle(titleText.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5049/buggy-version/FindFreeStuff.app.src.main.java.edu.hmc.sp15.cs121.findfreestuff.ItemActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "edu.hmc.sp15.cs121.findfreestuff.FreeItem.setPostTitle(titleText.getText().toString())", "titleText.getText().toString()"], "Fixed commit": "b85497b4ead836f1aa339e45b1f206704e581155", "Url": "https://api.github.com/repos/sagarbatchu/findfreestuff", "Date": "2015-03-10T20:22:22Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(detailsText.getText().equals(\"\"))) { item.setPostDetails(detailsText.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5049/buggy-version/FindFreeStuff.app.src.main.java.edu.hmc.sp15.cs121.findfreestuff.ItemActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "detailsText.getText().toString()", "edu.hmc.sp15.cs121.findfreestuff.FreeItem.setPostDetails(detailsText.getText().toString())"], "Fixed commit": "b85497b4ead836f1aa339e45b1f206704e581155", "Url": "https://api.github.com/repos/sagarbatchu/findfreestuff", "Date": "2015-03-10T20:22:22Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size.length) == 2) { WIDTH = (((application.visualization.render2d.MatrixRender.PADDING) * 2) + (vspace)) + (((vspace) + (node_width)) * (size[1])); }else { WIDTH = (((application.visualization.render2d.MatrixRender.PADDING) * 2) + (vspace)) + (((vspace) + (node_width)) * 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4150/buggy-version/src.main.java.application.visualization.render2d.MatrixRender.java", "BodyUseAPI": [], "Fixed commit": "cfe566d64c128ca44f7965a406150abc8bde7970", "Url": "https://api.github.com/repos/datx02-16-23/project", "Date": "2016-05-09T08:14:29Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size.length) == 2) { HEIGHT = (((application.visualization.render2d.MatrixRender.PADDING) * 2) + (hspace)) + (((hspace) + (node_height)) * (size[1])); }else { HEIGHT = (((application.visualization.render2d.MatrixRender.PADDING) * 2) + (hspace)) + (((hspace) + (node_height)) * 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4150/buggy-version/src.main.java.application.visualization.render2d.MatrixRender.java", "BodyUseAPI": [], "Fixed commit": "cfe566d64c128ca44f7965a406150abc8bde7970", "Url": "https://api.github.com/repos/datx02-16-23/project", "Date": "2016-05-09T08:14:29Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (requesterIDs.contains(dKey)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1872/buggy-version/FaceToFace.app.src.main.java.nl.tue.facetoface.Activities.Map.java", "BodyUseAPI": [], "Fixed commit": "6e49dce91768842dacfa37273125140efde6bb9f", "Url": "https://api.github.com/repos/Peter9000222/DBLAppDev", "Date": "2017-04-10T10:34:58Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, nl.tue.facetoface.Models.NearbyUser>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((requester.getInterests()) == null) { empty.add(\"\"); nl.tue.facetoface.Activities.Map.interestListRequest.add(empty); }else { nl.tue.facetoface.Activities.Map.interestListRequest.add(requester.getInterests()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1872/buggy-version/FaceToFace.app.src.main.java.nl.tue.facetoface.Activities.Map.java", "BodyUseAPI": ["nl.tue.facetoface.Models.NearbyUser.getInterests()", "java.util.ArrayList<java.util.ArrayList<java.lang.String>>.add(requester.getInterests())"], "Fixed commit": "6e49dce91768842dacfa37273125140efde6bb9f", "Url": "https://api.github.com/repos/Peter9000222/DBLAppDev", "Date": "2017-04-10T10:34:58Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position < 3) { drawForecast(g, rect, f, position); position++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8614/buggy-version/src.net.igorkromin.View.java", "BodyUseAPI": ["net.igorkromin.View.drawForecast(java.awt.Graphics2D,java.awt.Rectangle,com.github.fedy2.weather.data.Forecast,int)"], "Fixed commit": "d3b7caffd14f2fcea7f34158072e6e39f68af56b", "Url": "https://api.github.com/repos/ikromin/jphotoframe", "Date": "2015-09-09T08:30:09Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((columnToValueMap.get(column)) != null) { org.apache.ibatis.jdbc.SqlBuilder.WHERE(((((\"`\" + column) + \"`\") + \"=:\") + column)); }else { org.apache.ibatis.jdbc.SqlBuilder.WHERE(((((\"`\" + column) + \"`\") + \" IS :\") + column)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/515/buggy-version/rdbms.src.main.java.com.flipkart.portkey.rdbms.querybuilder.RdbmsQueryBuilder.java", "BodyUseAPI": ["org.apache.ibatis.jdbc.SqlBuilder.WHERE(java.lang.String)", "org.apache.ibatis.jdbc.SqlBuilder.WHERE(java.lang.String)"], "Fixed commit": "6ec6525404f09dc6b9717ccaeffeec9e4a6105d9", "Url": "https://api.github.com/repos/flipkart-incubator/portkey", "Date": "2015-04-27T06:53:49Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (dto.getType())) { object.setType(main.java.info.jtrac.util.MappingUtil.parseInt(dto.getType())); }else { object.setType(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/160/buggy-version/src.main.java.info.jtrac.service.mapper.SpaceMapper.java", "BodyUseAPI": ["main.java.info.jtrac.domain.Space.setType(main.java.info.jtrac.util.MappingUtil.parseInt(dto.getType()))", "main.java.info.jtrac.service.dto.SpaceDTO.getType()", "main.java.info.jtrac.util.MappingUtil.parseInt(dto.getType())"], "Fixed commit": "20dddb4583210f11e010af7966a3ccd42d0ce496", "Url": "https://api.github.com/repos/tomdhondt/JTrackTicket", "Date": "2014-05-24T12:08:27Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URLClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (r == null) { com.orientechnologies.common.log.OLogManager.instance().error(this, \"Plugin definition file ('plugin.json') is not found for dynamic plugin '%s'\", pluginName); throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Plugin definition file ('plugin.json') is not found for dynamic plugin '%s'\", pluginName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7818/buggy-version/server.src.main.java.com.orientechnologies.orient.server.plugin.OServerPluginManager.java", "BodyUseAPI": [], "Fixed commit": "dff5261b438c22cf9cc79e8a945255f252aca36e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-11-07T14:52:37Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (invoker != null) { joinChannel(invoker); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8207/buggy-version/src.main.java.fredboat.audio.GuildPlayer.java", "BodyUseAPI": ["fredboat.audio.GuildPlayer.joinChannel(net.dv8tion.jda.entities.User)"], "Fixed commit": "f69ae80736a0ab4498791d262fcc260f7061807e", "Url": "https://api.github.com/repos/Frederikam/FredBoat", "Date": "2016-10-04T21:03:22Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (limit == 0) { docs = java.util.Collections.emptyList(); }else { java.util.List<? extends com.torodb.torod.core.subdocument.SplitDocument> splitDocs = executor.readCursor(getId(), limit).get(); docs = com.google.common.collect.Lists.newArrayListWithCapacity(splitDocs.size()); for (com.torodb.torod.core.subdocument.SplitDocument splitDocument : splitDocs) { docs.add(d2r.translate(splitDocument)); } position += docs.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6613/buggy-version/torod.connection.src.main.java.com.toro.torod.connection.cursors.StandardDocumentToroCursor.java", "BodyUseAPI": ["com.torodb.torod.core.executor.SessionExecutor.readCursor(getId(),int)", "executor.readCursor(getId(), limit).get()"], "Fixed commit": "60e3c6f5383d975b57516dcc39f4d2e9f2833639", "Url": "https://api.github.com/repos/jerolba/torodb", "Date": "2015-11-06T16:04:41Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (next.is_destination()) { r0 = new uk.org.rc0.logmygsm.Landmarks.Routing(pos, points[next.index], 0.0F); }else { float dist = uk.org.rc0.logmygsm.Linkages.calculate_distance(next, nearest.via); r0 = new uk.org.rc0.logmygsm.Landmarks.Routing(pos, points[next.index], dist); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/177/buggy-version/src.uk.org.rc0.logmygsm.Linkages.java", "BodyUseAPI": ["uk.org.rc0.logmygsm.Linkages.calculate_distance(uk.org.rc0.logmygsm.Linkages.Endpoint,uk.org.rc0.logmygsm.Linkages.Segment)"], "Fixed commit": "e2939e82c6353f56fe03dc13bea13701605c5d1a", "Url": "https://api.github.com/repos/rc0/logmygsm", "Date": "2013-05-05T23:53:20Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(java.io.File[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (listEnd > (files.size())) listEnd = files.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5392/buggy-version/local-movie-service.src.main.java.nr.localmovies.boundary.MovieInfoBoundary.java", "BodyUseAPI": ["java.util.List<java.io.File>.size()"], "Fixed commit": "c5d3f88b63da341c18fc742441a10b6e828087d0", "Url": "https://api.github.com/repos/rahmnathan/localmovies-server", "Date": "2017-03-11T18:07:56Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wahtod.wififixer.prefs.PrefUtil.readBoolean(this, Pref.LOG_KEY.key())) org.wahtod.wififixer.prefs.PrefUtil.notifyPrefChange(this, Pref.LOG_KEY.key(), false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/825/buggy-version/wififixer.src.org.wahtod.wififixer.ui.WifiFixerActivity.java", "BodyUseAPI": [], "Fixed commit": "acd41005baa2ad2797e652ac746016526da1e4ab", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2012-06-24T05:02:39Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wahtod.wififixer.prefs.PrefUtil.readBoolean(this, Pref.LOG_KEY.key())) org.wahtod.wififixer.prefs.PrefUtil.notifyPrefChange(this, Pref.LOG_KEY.key(), true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/825/buggy-version/wififixer.src.org.wahtod.wififixer.ui.WifiFixerActivity.java", "BodyUseAPI": [], "Fixed commit": "acd41005baa2ad2797e652ac746016526da1e4ab", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2012-06-24T05:02:39Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameter instanceof io.swagger.models.parameters.AbstractSerializableParameter) { ((io.swagger.models.parameters.AbstractSerializableParameter) (parameter)).setDefaultValue(param.defaultValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/469/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.jaxrs.BeanParamInjectParamExtention.java", "BodyUseAPI": [], "Fixed commit": "a1b0ebd00772930be359e43e87b7ae4e73bff39f", "Url": "https://api.github.com/repos/AlexElin/swagger-maven-plugin", "Date": "2016-06-30T12:12:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.function.BiFunction<java.util.List<INSTANCE_TYPE>, SEQUENCE_TYPE, java.util.List<java.util.List<org.cleartk.ml.Feature>>>.apply(java.util.List<INSTANCE_TYPE>,SEQUENCE_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((featureLists.size()) > 0) { java.util.List<CLASSIFIER_OUTPUT> outcomes = classifier.classify(featureLists); labeller.accept(outcomes, aSequence, instances); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/913/buggy-version/discourse.parser.parent.tools.src.main.java.ca.concordia.clac.ml.classifier.GenericSequenceClassifier.java", "BodyUseAPI": ["ca.concordia.clac.ml.classifier.GenericSequenceClassifier.classify(java.util.List<java.util.List<org.cleartk.ml.Feature>>)"], "Fixed commit": "084e1413b59f1152baa90c2b5504ceab2f4b9c6c", "Url": "https://api.github.com/repos/mjlaali/CLaCDiscourseParser", "Date": "2016-04-08T15:56:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((hour <= ((com.horunkan.timetable.Timestamp.Timestamp.endHour) + 1)) && (hour >= (com.horunkan.timetable.Timestamp.Timestamp.startHour))) new com.horunkan.timetable.Timestamp.ActiveTimeLine(activity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5883/buggy-version/app.src.main.java.com.horunkan.timetable.Timestamp.Timestamp.java", "BodyUseAPI": [], "Fixed commit": "2687b93209a19c56883181d6b0d0f9bdf80829c5", "Url": "https://api.github.com/repos/MaciejKitowski/Timetable", "Date": "2017-03-17T20:48:27Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.alfresco.service.cmr.repository.ContentService.getTempWriter()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (null != writer) { transformer.transform(reader, writer); org.alfresco.module.versionsdiff.VersionsDifferenceWebscript.logger.error(\"writer is not null\"); reader = writer.getReader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7365/buggy-version/Version-Differnce-repo.src.main.java.org.alfresco.module.versionsdiff.VersionsDifferenceWebscript.java", "BodyUseAPI": ["org.alfresco.repo.content.transform.ContentTransformer.transform(org.alfresco.service.cmr.repository.ContentReader,org.alfresco.service.cmr.repository.ContentWriter)", "org.alfresco.service.cmr.repository.ContentWriter.getReader()"], "Fixed commit": "e5265ac5156b7e3589f1257f38a8d3f05c128555", "Url": "https://api.github.com/repos/tusharkhanka/version-difference-alfresco", "Date": "2017-12-05T11:15:32Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagO1 == 2) O2++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagX2 == 2) X2++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagO2 == 1) O1++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagO1 == 3) O3++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagX1 == 1) X1++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagO1 == 1) O1++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagX1 == 3) X3++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagO2 == 2) O2++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagX2 == 1) X1++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagX1 == 2) X2++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagX2 == 3) X3++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagO2 == 3) O3++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5920/buggy-version/Java_Version.src.Evaluation.java", "BodyUseAPI": [], "Fixed commit": "135b205bd4e1f33ad0da0ca3c54bd5f73e101372", "Url": "https://api.github.com/repos/QingyunWu/AI_PROJECT", "Date": "2017-05-03T04:45:39Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status) { newReservation = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8796/buggy-version/src.domain.Controller.java", "BodyUseAPI": [], "Fixed commit": "6b0c0cb884d7e3fda19f7b04f122710cc3e17be6", "Url": "https://api.github.com/repos/nmcristian/CasablancaHotelProjectTeam2", "Date": "2014-04-14T15:15:21Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBluetoothAdapter) != null) if (mBluetoothAdapter.isDiscovering()) mBluetoothAdapter.cancelDiscovery();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/871/buggy-version/bluetoothhelper.src.main.java.com.atalay.bluetoothhelper.Provider.BluetoothProvider.java", "BodyUseAPI": [], "Fixed commit": "a63e618054bb7546a3ce25005af469b1736092df", "Url": "https://api.github.com/repos/barisatalay/thermalprinterhelper", "Date": "2017-03-10T15:05:22Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ch.astorm.ssmt.core.Index>.get(int)", "java.util.List<ch.astorm.ssmt.core.Index>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ti instanceof ch.astorm.ssmt.core.ForeignKey) || (fi instanceof ch.astorm.ssmt.core.ForeignKey)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3702/buggy-version/ssmt.src.ch.astorm.ssmt.diff.DiffManager.java", "BodyUseAPI": [], "Fixed commit": "ec03fe597d55b8271dc4668a8aae7805581f07ba", "Url": "https://api.github.com/repos/ctabin/ssmt", "Date": "2015-08-15T21:53:26Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.sheffield.leapmotion.App.out) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7251/buggy-version/leap.src.main.java.com.sheffield.leapmotion.App.java", "BodyUseAPI": [], "Fixed commit": "cb95773ac27c70bfb04cc123d3e3c13060b4d4a2", "Url": "https://api.github.com/repos/thomasdeanwhite/NuiMimic", "Date": "2017-02-21T13:05:49Z"},
{"Line": "=>912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestedCollections != null) { for (org.apache.solr.common.cloud.DocCollection ext : requestedCollections) { org.apache.solr.client.solrj.impl.CloudSolrClient.ExpiringCachedDocCollection cacheEntry = collectionStateCache.get(ext.getName()); if (cacheEntry == null) continue; cacheEntry.maybeStale = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1215/buggy-version/solr.solrj.src.java.org.apache.solr.client.solrj.impl.CloudSolrClient.java", "BodyUseAPI": [], "Fixed commit": "093e63533bc71c1e7c65709d05746b7d7b1a0a13", "Url": "https://api.github.com/repos/SerCeMan/lucene-solr", "Date": "2017-10-19T01:25:50Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task.tags) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8781/buggy-version/TaskManagerProject.src.manager.datamanager.searchfilter.TagFilter.java", "BodyUseAPI": [], "Fixed commit": "82788d57c3d4051b55bec00896bc7733c31a4ef5", "Url": "https://api.github.com/repos/cs2103aug2014-w11-1j/main", "Date": "2014-10-07T14:57:49Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url != \"\") { com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(url).into(imageView); }else { com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(\"https://www.vccircle.com/wp-content/uploads/2017/03/default-profile.png\").into(imageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4926/buggy-version/app.src.main.java.com.teamcaffeine.hotswap.navigation.ChatFragment.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(java.lang.String)", "com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(url).into(android.widget.ImageView)"], "Fixed commit": "f656b8957d1b7d2e5549eac522c3043639438d83", "Url": "https://api.github.com/repos/MeganFantes/HotSwap", "Date": "2017-12-04T00:32:51Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array != null) && ((array[0]) == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4226/buggy-version/DbQuery.src.main.java.com.bingzer.android.dbv.Util.java", "BodyUseAPI": [], "Fixed commit": "8084c330b73832a379631c2d590346073f8fee7e", "Url": "https://api.github.com/repos/bingzer/DbQuery", "Date": "2013-07-18T22:25:42Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args[i]) != null) array[i] = args[i].toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4226/buggy-version/DbQuery.src.main.java.com.bingzer.android.dbv.Util.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "8084c330b73832a379631c2d590346073f8fee7e", "Url": "https://api.github.com/repos/bingzer/DbQuery", "Date": "2013-07-18T22:25:42Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (whereArgs == null) return db.delete(getName(), whereClause, null); else return db.delete(getName(), whereClause, com.bingzer.android.dbv.Util.toStringArray(whereArgs));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4226/buggy-version/DbQuery.src.main.java.com.bingzer.android.dbv.sqlite.Table.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.delete(java.lang.String,java.lang.String,com.bingzer.android.dbv.Util.toStringArray(whereArgs))", "com.bingzer.android.dbv.Util.toStringArray(java.lang.Object[])"], "Fixed commit": "8084c330b73832a379631c2d590346073f8fee7e", "Url": "https://api.github.com/repos/bingzer/DbQuery", "Date": "2013-07-18T22:25:42Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) instanceof com.orientechnologies.orient.core.id.ORID) { value = ((com.orientechnologies.orient.core.db.record.OIdentifiable) (value)).getRecord(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7226/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.traverse.OTraverseMultiValueProcess.java", "BodyUseAPI": [], "Fixed commit": "d9b9a54c8954b00704c7f42aa665db4fc6b5937d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-09-22T15:32:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (queue.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3234/buggy-version/src.com.limelight.nvstream.av.RtpReorderQueue.java", "BodyUseAPI": [], "Fixed commit": "e3318c359babbaa4d9dafca41b27026f22dd6f79", "Url": "https://api.github.com/repos/irtimmer/limelight-common", "Date": "2014-08-09T10:39:14Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((orderBookUpdate.getLimitOrder().getTimestamp()) != null) && (((timeStamp) == null) || (orderBookUpdate.getLimitOrder().getTimestamp().after(timeStamp)))) { this.timeStamp = orderBookUpdate.getLimitOrder().getTimestamp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6940/buggy-version/xchange-core.src.main.java.com.xeiam.xchange.dto.marketdata.OrderBook.java", "BodyUseAPI": ["com.xeiam.xchange.dto.marketdata.OrderBookUpdate.getLimitOrder()", "orderBookUpdate.getLimitOrder().getTimestamp()"], "Fixed commit": "6a2a066b52af11abb56387ee265f76682d333832", "Url": "https://api.github.com/repos/timmolter/XChange", "Date": "2013-09-12T10:38:31Z"},
{"Line": "=>1134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((generics.getParentScope()) != null) { generics = new com.esotericsoftware.kryo.Generics(generics.getMappings()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3867/buggy-version/src.com.esotericsoftware.kryo.Kryo.java", "BodyUseAPI": ["com.esotericsoftware.kryo.Generics.getMappings()"], "Fixed commit": "6ebf7bb8ebf3193fdcb9bbd2e9727535b1427034", "Url": "https://api.github.com/repos/EsotericSoftware/kryo", "Date": "2014-04-03T17:50:15Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dest == null) { throw new hanto.common.HantoException(((currentTurn.getColor().name()) + \" cannot have a destination be a null coordinate.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7170/buggy-version/src.hanto.studentanivarthi.gamma.GammaHantoGame.java", "BodyUseAPI": [], "Fixed commit": "d614841f891ec5e7b0f57356f1bfc5e13c4d1e41", "Url": "https://api.github.com/repos/SIZMW/hanto-game", "Date": "2016-04-08T01:29:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (src.equals(dest)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7170/buggy-version/src.hanto.studentanivarthi.common.piece.HantoPieceImpl.java", "BodyUseAPI": [], "Fixed commit": "d614841f891ec5e7b0f57356f1bfc5e13c4d1e41", "Url": "https://api.github.com/repos/SIZMW/hanto-game", "Date": "2016-04-08T01:29:31Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentById(R.id.frag_detail)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (fragment != null) { fragment.resetViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4477/buggy-version/app.src.main.java.com.seniordesign.wolfpack.quizinator.Activities.HostGameActivity.java", "BodyUseAPI": ["com.seniordesign.wolfpack.quizinator.WifiDirect.DeviceDetailFragment.resetViews()"], "Fixed commit": "baedab8b19100b0d68e41461f65f7beec3de84ae", "Url": "https://api.github.com/repos/TeamWolfpack/Quizinator", "Date": "2016-11-02T00:07:10Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((android.app.Activity) (context)).getActionBar()) != null) { actionBarHeight = ((android.app.Activity) (context)).getActionBar().getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1225/buggy-version/mysnackbar.src.main.java.com.trycatch.mysnackbar.ScreenUtil.java", "BodyUseAPI": ["((android.app.Activity) (context)).getActionBar().getHeight()", "android.content.Context.getActionBar()"], "Fixed commit": "f8aa69420521d4521abfc8fbb9cad7263c83ea6c", "Url": "https://api.github.com/repos/guoyoujin/MySnackBar", "Date": "2016-09-01T08:19:40Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pokerPlayer.getBestHand().ordinal()) < highestHand) { highestHand = pokerPlayer.getBestHand().ordinal(); winnerPlayer = pokerPlayer; }else if ((pokerPlayer.getBestHand().ordinal()) == highestHand) { if (((pokerPlayer.getHighestRank()) == 1) && ((winnerPlayer.getHighestRank()) != 1)) { highestHand = pokerPlayer.getBestHand().ordinal(); winnerPlayer = pokerPlayer; }else if (((pokerPlayer.getHighestRank()) != 1) && ((winnerPlayer.getHighestRank()) != 1)) { if ((pokerPlayer.getHighestRank()) > (winnerPlayer.getHighestRank())) { highestHand = pokerPlayer.getBestHand().ordinal(); winnerPlayer = pokerPlayer; } }else if ((pokerPlayer.getHighestRank()) == (winnerPlayer.getHighestRank())) { winnerPlayer = tieBreaker(winnerPlayer, pokerPlayer); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2354/buggy-version/src.com.apollo.training.games.cardgames.poker.PokerTable.java", "BodyUseAPI": ["com.apollo.training.games.cardgames.poker.PokerPlayer.getBestHand()", "com.apollo.training.games.cardgames.poker.PokerPlayer.getHighestRank()", "pokerPlayer.getBestHand().ordinal()", "pokerPlayer.getBestHand().ordinal()", "com.apollo.training.games.cardgames.poker.PokerTable.tieBreaker(com.apollo.training.games.cardgames.poker.PokerPlayer,com.apollo.training.games.cardgames.poker.PokerPlayer)", "pokerPlayer.getBestHand().ordinal()", "pokerPlayer.getBestHand().ordinal()", "com.apollo.training.games.cardgames.poker.PokerPlayer.getBestHand()", "com.apollo.training.games.cardgames.poker.PokerPlayer.getBestHand()", "com.apollo.training.games.cardgames.poker.PokerPlayer.getHighestRank()", "com.apollo.training.games.cardgames.poker.PokerPlayer.getHighestRank()", "com.apollo.training.games.cardgames.poker.PokerPlayer.getHighestRank()", "com.apollo.training.games.cardgames.poker.PokerPlayer.getBestHand()"], "Fixed commit": "da722fc0b9e131c6b628d1fb2e7eece5429e1c8f", "Url": "https://api.github.com/repos/carlstaana/apollo", "Date": "2014-09-23T05:03:46Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pokerPlayer.getHighestRank()) > (winnerPlayer.getHighestRank())) { highestHand = pokerPlayer.getBestHand().ordinal(); winnerPlayer = pokerPlayer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2354/buggy-version/src.com.apollo.training.games.cardgames.poker.PokerTable.java", "BodyUseAPI": ["com.apollo.training.games.cardgames.poker.PokerPlayer.getBestHand()", "pokerPlayer.getBestHand().ordinal()"], "Fixed commit": "da722fc0b9e131c6b628d1fb2e7eece5429e1c8f", "Url": "https://api.github.com/repos/carlstaana/apollo", "Date": "2014-09-23T05:03:46Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sample.Controller.currentPcap) == null) { welcome.setVisible(true); tblViewDataItems.setVisible(false); }else { welcome.setVisible(false); tblViewDataItems.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5572/buggy-version/src.sample.Controller.java", "BodyUseAPI": [], "Fixed commit": "504a180a2d8fc4def9898466dec22ce5aab38254", "Url": "https://api.github.com/repos/HomyChen/pigApp", "Date": "2017-04-04T16:48:17Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((paramsBundle) != null) && (!(paramsBundle.isEmpty()))) { boolean isFirst = true; for (java.lang.String key : paramsBundle.keySet()) { if (isFirst) isFirst = false; else toString += \", \"; toString += (key + \"=\") + (paramsBundle.get(key)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2021/buggy-version/lib.src.com.ox3dr.services.android.lib.drone.connection.ConnectionParameter.java", "BodyUseAPI": ["android.os.Bundle.get(java.lang.String)", "android.os.Bundle.keySet()"], "Fixed commit": "e1c17b137c61f81674e92f153065e1cffc8bb8ca", "Url": "https://api.github.com/repos/ne0fhyk/droidplanner", "Date": "2014-11-10T15:35:30Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(companies.contains(right))) { companyCount++; companies.add(right); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5132/buggy-version/justinBranch.Acquire.src.Game.java", "BodyUseAPI": ["java.util.ArrayList<Company>.add(Company)"], "Fixed commit": "7bf9897a967448f718a95b2474ff13f42a88e497", "Url": "https://api.github.com/repos/cnreed/Slapitalist", "Date": "2015-03-21T22:59:26Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(companies.contains(bottom))) { companyCount++; companies.add(bottom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5132/buggy-version/justinBranch.Acquire.src.Game.java", "BodyUseAPI": ["java.util.ArrayList<Company>.add(Company)"], "Fixed commit": "7bf9897a967448f718a95b2474ff13f42a88e497", "Url": "https://api.github.com/repos/cnreed/Slapitalist", "Date": "2015-03-21T22:59:26Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(companies.contains(left))) { companyCount++; companies.add(left); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5132/buggy-version/justinBranch.Acquire.src.Game.java", "BodyUseAPI": ["java.util.ArrayList<Company>.add(Company)"], "Fixed commit": "7bf9897a967448f718a95b2474ff13f42a88e497", "Url": "https://api.github.com/repos/cnreed/Slapitalist", "Date": "2015-03-21T22:59:26Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((aType instanceof java.lang.reflect.ParameterizedType) && (anOtherType instanceof java.lang.reflect.WildcardType)) && ((((java.lang.reflect.WildcardType) (anOtherType)).getUpperBounds().length) > 0)) { java.lang.reflect.Type t = ((java.lang.reflect.WildcardType) (anOtherType)).getUpperBounds()[0]; return org.openflexo.connie.type.TypeUtils.isTypeAssignableFrom(aType, t, permissive); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5297/buggy-version/connie-core.src.main.java.org.openflexo.connie.type.TypeUtils.java", "BodyUseAPI": ["org.openflexo.connie.type.TypeUtils.isTypeAssignableFrom(java.lang.reflect.Type,java.lang.reflect.Type,boolean)", "java.lang.reflect.Type.getUpperBounds()"], "Fixed commit": "a18123525ee329730f87a6a93b7e12e813984fa3", "Url": "https://api.github.com/repos/openflexo-team/connie", "Date": "2017-03-24T07:23:39Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((kvs.length) < 2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5892/buggy-version/src.main.java.bid.fese.entity.SeCookies.java", "BodyUseAPI": [], "Fixed commit": "52c9da91aecc8d23c3b3cc4aa0c2201478079495", "Url": "https://api.github.com/repos/fefine/FeSe", "Date": "2017-06-03T01:25:35Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.exists())) { java.lang.System.out.println(path); java.lang.System.out.println(\"image not exist\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5486/buggy-version/run-pogs-run.src.com.pogs.runpogsrun.util.SpriterLoader.java", "BodyUseAPI": [], "Fixed commit": "1a3888d8fe689c5cfcc4bd88550aaaccad9cdf0f", "Url": "https://api.github.com/repos/pogsdbest/runpogsrun", "Date": "2013-10-16T23:45:47Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (firebaseError == null) { mHasError = false; mCode = 0; mDetails = null; mMessage = null; }else { mHasError = true; mCode = firebaseError.getCode(); mDetails = firebaseError.getDetails(); mMessage = firebaseError.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1359/buggy-version/app.src.main.java.fr.gobelins.crm14.workshop_android_crm14.services.user.saveUserData.SaveUserDataEvent.java", "BodyUseAPI": [], "Fixed commit": "83c503504151a7501411bf5177c1a0b1b61bbd84", "Url": "https://api.github.com/repos/jdacosta/workshop-android-crm14", "Date": "2015-10-16T11:39:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processExists(pid, sigar))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2000/buggy-version/jodconverter-core.src.main.java.org.artofsolving.jodconverter.process.SigarProcessManager.java", "BodyUseAPI": [], "Fixed commit": "4ab91796512dc866ff7d9f66362820b90a6ea385", "Url": "https://api.github.com/repos/RavnSystems/jodconverter", "Date": "2016-11-03T10:43:29Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subscription) != null) { subscription.unsubscribe(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9027/buggy-version/app.src.main.java.it.ennova.rxadvertise.DiscoveryFragment.java", "BodyUseAPI": [], "Fixed commit": "f2d90ac0b2a4b30993e294a3a37cf4a0583f12f5", "Url": "https://api.github.com/repos/Ennova-IT/ZeRXconf", "Date": "2016-01-26T11:07:50Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (protocol.equalsIgnoreCase(it.ennova.zerxconf.ZeRXconf.ALL_AVAILABLE_SERVICES)) { throw new it.ennova.zerxconf.exceptions.NsdException(it.ennova.zerxconf.exceptions.NsdException.INVALID_ARGUMENT, protocol, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9027/buggy-version/zerxconf.src.main.java.it.ennova.zerxconf.ZeRXconf.java", "BodyUseAPI": [], "Fixed commit": "f2d90ac0b2a4b30993e294a3a37cf4a0583f12f5", "Url": "https://api.github.com/repos/Ennova-IT/ZeRXconf", "Date": "2016-01-26T11:07:50Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (d.isShowing()) { d.dismiss(); cancelConnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2074/buggy-version/src.fr.eurecom.cardify.Lobby.java", "BodyUseAPI": ["android.app.Dialog.dismiss()"], "Fixed commit": "bdea983bf637defccc6470ce8fb354210fc30007", "Url": "https://api.github.com/repos/tjuicy/Cardify", "Date": "2013-12-10T14:45:43Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dbf.isExist(p.hostUuid, org.zstack.header.host.HostVO.class))) { dbf.removeByPrimaryKey(vo.getId(), org.zstack.header.storage.primary.ImageCacheShadowVO.class); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1922/buggy-version/plugin.localstorage.src.main.java.org.zstack.storage.primary.local.LocalStorageImageCleaner.java", "BodyUseAPI": ["org.zstack.storage.primary.local.LocalStorageImageCleaner.removeByPrimaryKey(vo.getId(),java.lang.Class)"], "Fixed commit": "15a583cc9c718e54663816ba90463195ccd18556", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-06T02:38:47Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.HONEYCOMB_MR2)) { android.view.WindowManager wm = ((android.view.WindowManager) (context.getSystemService(Context.WINDOW_SERVICE))); android.view.Display display = wm.getDefaultDisplay(); screenHeight = display.getHeight(); }else { android.view.Display display = ((com.expandlistviewdemo.Activity) (context)).getWindowManager().getDefaultDisplay(); com.expandlistviewdemo.Point size = new com.expandlistviewdemo.Point(); display.getSize(size); screenHeight = size.y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4027/buggy-version/app.src.main.java.com.expandlistviewdemo.DragNDropListView.java", "BodyUseAPI": [], "Fixed commit": "e61774d6bfe4421a822b49d33eb966c99539d1cd", "Url": "https://api.github.com/repos/JaydipZala/Drag-Drop-ExpandableListView", "Date": "2015-10-08T11:55:08Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempZombie) { g.setColor(java.awt.Color.YELLOW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/123/buggy-version/src.main.TileCell.java", "BodyUseAPI": [], "Fixed commit": "bd666e901b5aa647f0fc35b52cd47486051e12b9", "Url": "https://api.github.com/repos/mickmister/ZombiesTeam", "Date": "2014-04-10T01:16:03Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTemp) { if (map.checkValidPosition(map.getTempTile(), map.getTempPos().x, map.getTempPos().y)) { g.setColor(java.awt.Color.GREEN); }else { g.setColor(java.awt.Color.RED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/123/buggy-version/src.main.TileCell.java", "BodyUseAPI": [], "Fixed commit": "bd666e901b5aa647f0fc35b52cd47486051e12b9", "Url": "https://api.github.com/repos/mickmister/ZombiesTeam", "Date": "2014-04-10T01:16:03Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.example.dianaalgma.smartdisplay.MainActivity.cal.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.SUNDAY)) com.example.dianaalgma.smartdisplay.MainActivity.cal.add(java.util.Calendar.DAY_OF_WEEK, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3766/buggy-version/app.src.main.java.com.example.dianaalgma.smartdisplay.MainActivity.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "ac6523f99e2863302a0447e8394f8f928ac737c2", "Url": "https://api.github.com/repos/dianx93/SmartDisplay", "Date": "2016-11-30T16:08:19Z"},
{"Line": "=>716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.idProperty) == null) && ((this.parentEntityClass) != null)) { this.idProperty = this.context.getDescription(this.parentEntityClass).getIdProperty(); if ((this.idProperty) != null) { return getIdColumn(attribute); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5827/buggy-version/fastnate-generator.src.main.java.org.fastnate.generator.context.EntityClass.java", "BodyUseAPI": [], "Fixed commit": "eae7f67f6d64fbdfbad6e542e4ed29f06354e708", "Url": "https://api.github.com/repos/liefke/org.fastnate", "Date": "2016-06-28T15:50:01Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.util.Map.Entry<java.lang.String, zmq.Own>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(e.getKey().equals(addr_))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8804/buggy-version/src.main.java.zmq.SocketBase.java", "BodyUseAPI": [], "Fixed commit": "f32a57e56f55c84ad5ec23dd292e97adccb6ae8f", "Url": "https://api.github.com/repos/zeromq/jeromq", "Date": "2013-05-23T21:37:10Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemClickListener) != null) { itemClickListener.onItemClick(adapter.getItem(position), view, position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1996/buggy-version/simplelistview.src.main.java.com.orhanobut.simplelistview.SimpleListView.java", "BodyUseAPI": [], "Fixed commit": "e6e2de1bb79c9d59c0328da655c035d8ac997ef1", "Url": "https://api.github.com/repos/orhanobut/simplelistview", "Date": "2015-04-02T18:13:42Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twitter.kinesis.utils.Environment.clientId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clientId > 0) { return new com.twitter.hbc.core.endpoint.RealTimeEnterpriseStreamingEndpoint(account, product, label, clientId); }else { return new com.twitter.hbc.core.endpoint.RealTimeEnterpriseStreamingEndpoint(account, product, label); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8941/buggy-version/src.main.java.com.twitter.kinesis.ConnectorApplication.java", "BodyUseAPI": [], "Fixed commit": "76bf1ee4919ef36e2abdc949c0f64f3e1b306571", "Url": "https://api.github.com/repos/offerpop/sample-kinesis-connector", "Date": "2015-07-02T19:14:23Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rtnType.equalsIgnoreCase(\"FUNCTION\")) { comments(data); if (data.cfml.forwardIfCurrent(\"function \")) { comments(data); }else rtnType = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1975/buggy-version/railo-java.railo-core.src.railo.transformer.cfml.script.AbstrCFMLScriptTransformer.java", "BodyUseAPI": [], "Fixed commit": "81d1b4850a7f6170da566d7a6d49d191ea04f962", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-04-16T13:23:58Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.cfml.forwardIfCurrent(\"function \")) { rtnType = \"function\"; comments(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1975/buggy-version/railo-java.railo-core.src.railo.transformer.cfml.script.AbstrCFMLScriptTransformer.java", "BodyUseAPI": ["railo.transformer.cfml.script.AbstrCFMLScriptTransformer.comments(railo.transformer.cfml.script.Data)"], "Fixed commit": "81d1b4850a7f6170da566d7a6d49d191ea04f962", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-04-16T13:23:58Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actionsAtState != null) && (!(actionsAtState.isEmpty()))) { java.util.List<java.lang.Integer> actions = new java.util.ArrayList<>(actionsAtState); actionId = actions.get(random.nextInt(actions.size())); }else { actionId = random.nextInt(model.getActionCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4037/buggy-version/src.main.java.com.github.chen0040.rl.actionselection.EpsilonGreedyActionSelectionStrategy.java", "BodyUseAPI": [], "Fixed commit": "c5f12b8151acb32d4b9a659bccac56dd0037ecc0", "Url": "https://api.github.com/repos/chen0040/java-reinforcement-learning", "Date": "2017-12-02T06:02:51Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fixedInitialStore) != null) { info = analysis.createCopiedStore(fixedInitialStore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8150/buggy-version/framework.src.org.checkerframework.framework.flow.CFAbstractTransfer.java", "BodyUseAPI": [], "Fixed commit": "ef1926889c86127a2dea7285a4c1ba86d05cec70", "Url": "https://api.github.com/repos/typetools/checker-framework", "Date": "2015-12-08T18:14:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jmxCollection == null) || ((jmxCollection.getMbeanCount()) < 1)) { logger.info(\"No MBeans to collect.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5142/buggy-version/core.jmx.impl.src.main.java.org.opennms.netmgt.jmx.impl.DefaultJmxCollector.java", "BodyUseAPI": [], "Fixed commit": "73a9fa5c8113ba6c03d702cf0ca51f70543225d0", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2015-04-28T16:21:37Z"},
{"Line": "=>1230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (r.isHierarchyConnected()) { if (isSubtypeOfRawType(r)) return null; }else if (r.isRawType()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2280/buggy-version/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.Scope.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding.isRawType()", "org.eclipse.jdt.internal.compiler.lookup.Scope.isSubtypeOfRawType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)"], "Fixed commit": "6478e2ede221e392aeae64992fd8ab69061b142a", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2015-05-20T18:14:19Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (suche.equals(\"\")) { if ((book.getStatus()) == 0) { foundBooks.add(book); } }else { if ((book.getStatus()) == 0) { suche = suche.replaceAll(\" \", \"\").replaceAll(\":\", \"\").toLowerCase(); if ((((((((book.getBookName().toLowerCase().replaceAll(\" \", \"\").contains(suche)) || (book.getAuther().toLowerCase().replaceAll(\" \", \"\").contains(suche))) || (book.getISBN().toLowerCase().replaceAll(\" \", \"\").contains(suche))) || (book.getPrice().toLowerCase().replaceAll(\" \", \"\").contains(suche))) || (suche.contains(book.getISBN().toLowerCase().replaceAll(\" \", \"\")))) || (suche.contains(book.getAuther().toLowerCase().replaceAll(\" \", \"\")))) || (suche.contains(book.getPrice().toLowerCase().replaceAll(\" \", \"\")))) || (suche.contains(book.getBookName().toLowerCase().replaceAll(\" \", \"\")))) { foundBooks.add(book); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7825/buggy-version/buechern.app.controllers.Application.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "b74ef4a6757e005788fa81ca5dc896ea6c3742ba", "Url": "https://api.github.com/repos/toschill/buechern", "Date": "2015-01-10T13:24:40Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (defaultVal != null) { interpolated = interpolated.replace(match, defaultVal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6358/buggy-version/s-ramp-shell.src.main.java.org.overlord.sramp.shell.AbstractShellCommandReader.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "9ebe386c28d38209aa0553fe465e0317c7356661", "Url": "https://api.github.com/repos/dvirgiln/s-ramp", "Date": "2014-06-12T12:17:59Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (idx > 0) { key = keyWithOptionalDefault.substring(0, idx); defaultVal = keyWithOptionalDefault.substring((idx + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6358/buggy-version/s-ramp-shell.src.main.java.org.overlord.sramp.shell.AbstractShellCommandReader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "9ebe386c28d38209aa0553fe465e0317c7356661", "Url": "https://api.github.com/repos/dvirgiln/s-ramp", "Date": "2014-06-12T12:17:59Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((org.apache.brooklyn.core.location.AbstractLocation) (machine)).config().getBag().getAllConfig().get(\"provider\")) != null) && (((org.apache.brooklyn.core.location.AbstractLocation) (machine)).config().getBag().getAllConfig().get(\"provider\").equals(\"byon\"))) { parseMachineConfig(((org.apache.brooklyn.core.location.AbstractLocation) (machine))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8460/buggy-version/core.src.main.java.org.apache.brooklyn.location.byon.FixedListMachineProvisioningLocation.java", "BodyUseAPI": ["org.apache.brooklyn.location.byon.FixedListMachineProvisioningLocation<T>.parseMachineConfig(T)"], "Fixed commit": "30dd296fcea2a2449b6318d897626f992ad1753e", "Url": "https://api.github.com/repos/ivanayov/brooklyn-server", "Date": "2017-08-04T10:53:35Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldScale != newScale) resizeImage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6341/buggy-version/applications.plugins.org.csstudio.swt.widgets.src.org.csstudio.swt.widgets.symbol.SVGSymbolImage.java", "BodyUseAPI": [], "Fixed commit": "83e8965a2b62805b618c32ef71663edce17f25f2", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2014-12-10T11:34:05Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (out.exists()) out.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/83/buggy-version/src.com.github.mrebhan.imgdatacreator.Start.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "9805b95372fbe940c11f9acc5b8545df5dd057a6", "Url": "https://api.github.com/repos/therealfarfetchd/cursors.io-imgdata", "Date": "2015-07-29T17:57:13Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((year) > 99) { year %= 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/119/buggy-version/src.Date.java", "BodyUseAPI": [], "Fixed commit": "282a84a885016aabc390b58fe2de3c3c13ededc4", "Url": "https://api.github.com/repos/mqunell/Checkbook", "Date": "2015-12-07T04:29:00Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.taffy128s.tlcdbms.Table.getAttributeNames()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(parameter.isCustomOrder())) && ((parameter.getBlocks().size()) != (attributeNames.size()))) { java.lang.System.out.println(\"Input data size not match.\"); java.lang.System.out.println(((\" Expected: \" + (attributeNames.size())) + \".\")); java.lang.System.out.println(((\" Found: \" + (parameter.getBlocks().size())) + \".\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4691/buggy-version/src.com.github.taffy128s.tlcdbms.DBManager.java", "BodyUseAPI": ["com.github.taffy128s.tlcdbms.sqlparsers.SQLParseResult.getBlocks()", "parameter.getBlocks().size()", "java.util.ArrayList<java.lang.String>.size()", "java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(((\"     Found: \" + (parameter.getBlocks().size())) + \".\"))"], "Fixed commit": "766d2080b053610c7063d5b5fef835e04581ec12", "Url": "https://api.github.com/repos/taffy128s/TLC_DBMS", "Date": "2017-03-09T16:13:53Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dorokhov.pony.web.client.util.UserAgentUtils.getInfo().getBrowserName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (browser.equals(\"IE\")) { com.google.gwt.core.client.Scheduler.get().scheduleFinally(new com.google.gwt.user.client.Command() { @java.lang.Override public void execute() { albumList.getElement().setScrollTop(0); } }); }else { albumList.getElement().setScrollTop(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2689/buggy-version/server.pony.web.src.main.java.net.dorokhov.pony.web.client.mvp.library.album.AlbumListView.java", "BodyUseAPI": [], "Fixed commit": "51ee5264ac76d58a455722a5a397d86d4eee7a58", "Url": "https://api.github.com/repos/DenisDorokhov/pony", "Date": "2015-04-22T19:23:53Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((java.lang.System.currentTimeMillis()) - startTime) > 5000) { java.lang.System.err.println(\"run time over 5s, stop\"); stop = true; eventTimeout = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4522/buggy-version/app.icsetlv.src.main.java.icsetlv.variable.BreakpointDebugger.java", "BodyUseAPI": [], "Fixed commit": "d472ba679d0822ed42d4ca8fb3f546b1fcc2a90c", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2017-02-23T12:46:25Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (out != null) { out.flush(); out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5178/buggy-version/Exo2.java", "BodyUseAPI": ["java.io.BufferedOutputStream.flush()", "java.io.BufferedOutputStream.close()"], "Fixed commit": "dc9d6d28a82d581ac4e23098ce4f9e266ac891b3", "Url": "https://api.github.com/repos/raphaelauv/Algorithms", "Date": "2017-10-11T16:10:26Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, io.netty.channel.Channel>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (proxyChannel == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7472/buggy-version/proxy-server.src.main.java.org.fengfei.lanproxy.server.ProxyChannelManager.java", "BodyUseAPI": [], "Fixed commit": "36c8e8cab40a35c6dfa7cf99fbeef883c98b037f", "Url": "https://api.github.com/repos/ffay/lanproxy", "Date": "2016-12-21T04:51:46Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, io.netty.channel.Channel>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (proxyChannel != channel) { org.fengfei.lanproxy.server.ProxyChannelManager.proxyChannels.put(port, proxyChannel); }else { if (proxyChannel.isActive()) { proxyChannel.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7472/buggy-version/proxy-server.src.main.java.org.fengfei.lanproxy.server.ProxyChannelManager.java", "BodyUseAPI": ["io.netty.channel.Channel.isActive()", "java.util.Map<java.lang.Integer, io.netty.channel.Channel>.put(int,io.netty.channel.Channel)", "io.netty.channel.Channel.close()"], "Fixed commit": "36c8e8cab40a35c6dfa7cf99fbeef883c98b037f", "Url": "https://api.github.com/repos/ffay/lanproxy", "Date": "2016-12-21T04:51:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p1.x) == (p2.x)) return (p1.y) - (p2.y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6726/buggy-version/src.FractionalCascadingORQ2D.java", "BodyUseAPI": [], "Fixed commit": "dd863caea6b2bf793dfa44dbd8ffcf7ec171fa40", "Url": "https://api.github.com/repos/ivanovak/ORQ2D", "Date": "2014-12-19T15:12:01Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) animSetUp();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/232/buggy-version/app.src.main.java.com.example.cesarsk.say_it.ui.components.FadingTextView.java", "BodyUseAPI": [], "Fixed commit": "a10b960bd3e26a84021c1bac3aa1c31b40f2408f", "Url": "https://api.github.com/repos/Cesarsk/Say_it", "Date": "2017-03-27T13:51:13Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) animSetUp();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/232/buggy-version/app.src.main.java.com.example.cesarsk.say_it.ui.components.FadingTextView.java", "BodyUseAPI": [], "Fixed commit": "a10b960bd3e26a84021c1bac3aa1c31b40f2408f", "Url": "https://api.github.com/repos/Cesarsk/Say_it", "Date": "2017-03-27T13:51:13Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) animSetUp();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/232/buggy-version/app.src.main.java.com.example.cesarsk.say_it.ui.components.FadingTextView.java", "BodyUseAPI": [], "Fixed commit": "a10b960bd3e26a84021c1bac3aa1c31b40f2408f", "Url": "https://api.github.com/repos/Cesarsk/Say_it", "Date": "2017-03-27T13:51:13Z"},
{"Line": "=>1084", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collate) != null) { document.field(\"collate\", collate.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1124/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OPropertyImpl.java", "BodyUseAPI": [], "Fixed commit": "0e4b316e1225c50399a9c094257802b5c61206c2", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-08-04T14:07:15Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (reader)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/634/buggy-version/FileProcesser.src.main.java.com.IFRS.FileProcesser.Readers.LineReader.java", "BodyUseAPI": [], "Fixed commit": "fbed32f607f288cc9d5d2ffd7f1c7815d08577c7", "Url": "https://api.github.com/repos/JosenJP/FileProcesser", "Date": "2017-09-16T02:05:48Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((gcmReceiverType != null) && (gcmReceiverType.equals(\"text\"))) { com.julianogv.desktoptophonedatatransfer.Fragments.DataTransferFragment.setAutoLaunch(true); mViewPager.setCurrentItem(1); android.util.Log.d(Constants.TAG, \"SET SHOULD LAUNCH TEXT\"); }else if ((openCount > 1) && (!(com.julianogv.desktoptophonedatatransfer.Utils.getCachedShortDeviceId(context).isEmpty()))) { mViewPager.setCurrentItem(1); if (openCount == 7) { com.julianogv.desktoptophonedatatransfer.Utils.showRateDialog(context); } if (openCount == 12) { com.julianogv.desktoptophonedatatransfer.Utils.showBuyProVersionDialog(context); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7366/buggy-version/chromeandroiddatatransfer.app.src.main.java.com.julianogv.desktoptophonedatatransfer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a24b34827b0eccf7a451b5958300733daad2dde4", "Url": "https://api.github.com/repos/julianogv/desktopandroiddatatransfer", "Date": "2014-05-05T22:41:57Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.MainModule.getHistoricalTicksFor(model.Security,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ticks.isEmpty())) { java.text.SimpleDateFormat formatter = new java.text.SimpleDateFormat(\"yyyyMMdd\"); java.lang.System.out.println(\"SYMBOL\\t\\tDATE\\t\\tADJCLOSE\\tVOLUME\"); for (model.Tick t : ticks) { java.lang.System.out.println((((((((t.getSymbol()) + \"\\t\\t\") + (formatter.format(t.getDate()))) + \"\\t\") + (t.getAdjustedClose())) + \"\\t\") + (t.getVolume()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5588/buggy-version/src.view.MainModuleView.java", "BodyUseAPI": [], "Fixed commit": "9019343dcafeccdb3f7f6c6ba5fb27b2131a9ed4", "Url": "https://api.github.com/repos/m-pol/simu-trader", "Date": "2016-06-16T09:31:46Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduler) != null) scheduler.standby();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3853/buggy-version/solr.src.main.java.jp.aegif.nemaki.NemakiCoreAdminHandler.java", "BodyUseAPI": [], "Fixed commit": "aa090ec5d80e3d2c6b2965a9d288605c5deced3f", "Url": "https://api.github.com/repos/aegif/NemakiWare", "Date": "2015-10-06T16:07:57Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduler) != null) scheduler.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3853/buggy-version/solr.src.main.java.jp.aegif.nemaki.NemakiCoreAdminHandler.java", "BodyUseAPI": [], "Fixed commit": "aa090ec5d80e3d2c6b2965a9d288605c5deced3f", "Url": "https://api.github.com/repos/aegif/NemakiWare", "Date": "2015-10-06T16:07:57Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.doomy.torch.SettingsActivity.mPrefBright) { com.doomy.torch.SettingsActivity.mPrefBright = mPreferences.edit().putBoolean(\"mPrefBright\", false).commit(); android.widget.Toast.makeText(mContext, getString(R.string.discolored), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2539/buggy-version/app.src.main.java.com.doomy.torch.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "0fe53d52d8fd66d90ac6be6811c33d2928d21016", "Url": "https://api.github.com/repos/MrDoomy/Torch", "Date": "2015-03-13T10:57:07Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.browser.toLowerCase().contains(\"explore\")) { tmpBrowser = \"iexplore\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2321/buggy-version/src.model.SocketString.java", "BodyUseAPI": [], "Fixed commit": "f6821efcad022d7ce226d293d2511a1be3b9b01a", "Url": "https://api.github.com/repos/zaphinath/vmqueue", "Date": "2013-08-22T21:03:40Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8106/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "0beeb0cc81e79b286dbaf1d61990cf375a77fa02", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-16T19:36:35Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<taskey.messenger.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((toUpdate.getTaskTags()) != null) { newTask.setTaskTags(new java.util.ArrayList<java.lang.String>(toUpdate.getTaskTags())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2804/buggy-version/taskey.src.taskey.logic.LogicMemory.java", "BodyUseAPI": ["taskey.messenger.Task.getTaskTags()", "taskey.messenger.Task.setTaskTags(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "26594d405b0f270d1852c8684de400f6b39086a6", "Url": "https://api.github.com/repos/cs2103jan2016-f14-4j/main", "Date": "2016-04-05T14:58:31Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((icarus.io.router.FragmentRouter.current) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5484/buggy-version/router.src.main.java.icarus.io.router.FragmentRouter.java", "BodyUseAPI": [], "Fixed commit": "36419d0dc994b5981980ff5db61a4e720269c982", "Url": "https://api.github.com/repos/icarus-sullivan/fragmentrouter", "Date": "2016-03-04T08:14:39Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s1.isEmpty())) { android.support.v4.app.Fragment fragment = s1.pop(); s2.push(fragment); return fragment; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5484/buggy-version/router.src.main.java.icarus.io.router.FragmentRouter.java", "BodyUseAPI": ["java.util.Stack<android.support.v4.app.Fragment>.pop()"], "Fixed commit": "36419d0dc994b5981980ff5db61a4e720269c982", "Url": "https://api.github.com/repos/icarus-sullivan/fragmentrouter", "Date": "2016-03-04T08:14:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bufferedFacadPrintWriter) != null) { bufferedFacadPrintWriter.resetBuffer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3402/buggy-version/fenix-web-framework.src.main.java.pt.ist.fenixWebFramework.servlets.filters.contentRewrite.ResponseWrapper.java", "BodyUseAPI": [], "Fixed commit": "0b618ce3b730d0b4474139b1283af9aad36fb581", "Url": "https://api.github.com/repos/sergiofbsilva/bennu-renderers", "Date": "2013-02-20T19:25:10Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.hypetrainstudios.dontmiss.Creator.spawnWaveCounter) >= (com.hypetrainstudios.dontmiss.Creator.spawnWaveRate)) { com.hypetrainstudios.dontmiss.handlers.SpawnHandler.update(Creator.gameTime); com.hypetrainstudios.dontmiss.Creator.spawnWaveCounter = 0; java.lang.System.out.println(\"new wave coming\"); }else com.hypetrainstudios.dontmiss.Creator.spawnWaveCounter += delta;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1006/buggy-version/core.src.com.hypetrainstudios.dontmiss.screens.PlayScreen.java", "BodyUseAPI": [], "Fixed commit": "937918cdee600313a1e310df6c0be164347024c9", "Url": "https://api.github.com/repos/HypeTrainStudios/DontMiss", "Date": "2014-06-25T01:59:36Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((UserInput.length()) > 0) { try { if (((java.lang.Integer.parseInt(UserInput)) >= 0) && ((java.lang.Integer.parseInt(UserInput)) < ListSize)) { new Main.ServerThread(mylog, JobLock, MasterJobQueue).JobLoader(\"LOAD\", FitleredResults.get(java.lang.Integer.parseInt(UserInput)).getName()); }else { mylog.out(\"WARN\", \"Number is out of bounds\"); } } catch (java.lang.NumberFormatException e) { mylog.out(\"ERROR\", \"String passed when number expected\"); } }else { mylog.out(\"INFO\", \"Load aborted by user request\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5617/buggy-version/src.Main.Server.java", "BodyUseAPI": ["java.io.File.getName()", "Main.ServerThread.JobLoader(java.lang.String,java.lang.String)", "java.util.ArrayList<java.io.File>.get(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "5ca30bb2719c43f449160994e15b0d534da7089c", "Url": "https://api.github.com/repos/MrColeC/Truss", "Date": "2013-11-17T03:22:04Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Node.getCdr()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(cdr.getCdr().getCdr().isNull())) { cdr.getCdr().getCdr().getCar().print((n + 4), false, q); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9266/buggy-version/proj1.Project_Skeleton_Code.If.java", "BodyUseAPI": ["Node.getCdr()", "cdr.getCdr().getCdr()", "cdr.getCdr().getCdr().getCar()", "cdr.getCdr().getCdr().getCar().print(int,boolean,boolean)"], "Fixed commit": "31b6ce2fdfabf6df1c1228e5189a04a1f33c343f", "Url": "https://api.github.com/repos/tford9/CSC-4101-Projects", "Date": "2014-10-11T00:26:09Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInputDevices) == null) { android.util.Log.w(com.android.bluetooth.hid.HidService.TAG, \"mInputDevices is null\"); return inputDevices; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1448/buggy-version/src.com.android.bluetooth.hid.HidService.java", "BodyUseAPI": [], "Fixed commit": "3a588d0b7371285f49a639b8dee34eb8eb88ac15", "Url": "https://api.github.com/repos/KlinkOnE/android_packages_apps_Bluetooth---daniel", "Date": "2016-02-04T17:22:12Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStateMachine) == null) { android.util.Log.w(com.android.bluetooth.a2dp.A2dpService.TAG, \"mStateMachine is null\"); return new java.util.ArrayList<android.bluetooth.BluetoothDevice>(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1448/buggy-version/src.com.android.bluetooth.a2dp.A2dpService.java", "BodyUseAPI": [], "Fixed commit": "3a588d0b7371285f49a639b8dee34eb8eb88ac15", "Url": "https://api.github.com/repos/KlinkOnE/android_packages_apps_Bluetooth---daniel", "Date": "2016-02-04T17:22:12Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (holder.isPriceInitialized()) { mProduct.removePrice(holder.getPrice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4139/buggy-version/app.src.main.java.nota.asyarif.com.nota.ProductDetailsActivity.java", "BodyUseAPI": ["nota.asyarif.com.nota.ProductDetailsActivity.PriceRowHolder.getPrice()", "nota.asyarif.com.nota.item.Product.removePrice(nota.asyarif.com.nota.item.Price)"], "Fixed commit": "cf083a4f3d9948fa3bbb86cbb885e3732eef33ca", "Url": "https://api.github.com/repos/asyarifstudio/Nota", "Date": "2017-11-28T13:58:48Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.nd4j.linalg.api.shape.Shape.opIsWholeBufferWithMatchingStrides(op)) { for (int i = 0; i < (op.n()); i++) { accumulation.update(op.op(op.x().data().getDouble(i))); } }else if (!((op.x()) instanceof org.nd4j.linalg.api.complex.IComplexNDArray)) { if ((op.y()) != null) { org.nd4j.linalg.api.ndarray.INDArray xLinear = op.x().reshape(1, op.x().length()); org.nd4j.linalg.api.ndarray.INDArray yLinear = op.y().reshape(1, op.y().length()); for (int i = 0; i < (op.n()); i++) { accumulation.update(op.op(xLinear.getDouble(0, i), yLinear.getDouble(0, i))); } }else { org.nd4j.linalg.api.ndarray.INDArray xLinear = op.x().reshape(1, op.x().length()); for (int i = 0; i < (op.n()); i++) { accumulation.update(op.op(xLinear.getDouble(0, i))); } } }else { for (int c = 0; c < (op.n()); c++) { apply(accumulation, c); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7271/buggy-version/nd4j-api.src.main.java.org.nd4j.linalg.api.ops.executioner.DefaultOpExecutioner.java", "BodyUseAPI": ["org.nd4j.linalg.api.ops.Accumulation.update(op.op(xLinear.getDouble(0, i)))", "org.nd4j.linalg.api.ops.Op.y()", "op.y().length()", "org.nd4j.linalg.api.ops.Accumulation.update(op.op(xLinear.getDouble(0, i), yLinear.getDouble(0, i)))", "op.x().reshape(int,op.x().length())", "org.nd4j.linalg.api.ops.Op.n()", "org.nd4j.linalg.api.ops.Op.x()", "org.nd4j.linalg.api.ops.Op.x()", "op.x().length()", "op.x().reshape(int,op.x().length())", "org.nd4j.linalg.api.ops.Op.op(xLinear.getDouble(0, i),yLinear.getDouble(0, i))", "op.x().length()", "org.nd4j.linalg.api.ops.Op.op(op.x().data().getDouble(i))", "org.nd4j.linalg.api.ops.Op.n()", "org.nd4j.linalg.api.ops.Op.op(xLinear.getDouble(0, i))", "org.nd4j.linalg.api.ops.Op.x()", "org.nd4j.linalg.api.ops.Op.n()", "org.nd4j.linalg.api.ops.Op.y()", "op.x().data()", "org.nd4j.linalg.api.ops.Op.y()", "org.nd4j.linalg.api.ops.Op.x()", "org.nd4j.linalg.api.ops.Op.x()", "op.y().reshape(int,op.y().length())", "org.nd4j.linalg.api.ops.Op.x()", "org.nd4j.linalg.api.ops.Accumulation.update(op.op(op.x().data().getDouble(i)))", "op.x().data().getDouble(int)", "org.nd4j.linalg.api.ops.Op.n()"], "Fixed commit": "ccfd21ad32d1d5d021944273bdfc5cee274273ea", "Url": "https://api.github.com/repos/deeplearning4j/nd4j", "Date": "2015-09-22T23:08:14Z"},
{"Line": "=>859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(names.contains(name))) && (!(name.toLowerCase().equals(\"computer\")))) { names.add(name); Game.Player player = new Game.Player(name, 1000, true, 0, false, 0, null); allPlayers.put(name, player); MG.setnumOfPlayer(n); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Invalid Input! Enter another name!\"); i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7617/buggy-version/src.Game.MonoplyGameGUI.java", "BodyUseAPI": [], "Fixed commit": "03f555b79218a1430a1ae401a861f1657899f155", "Url": "https://api.github.com/repos/10000TB/MonoplyGame", "Date": "2016-11-18T03:18:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((assembledMessage != null) && ((assembledMessage.length()) > 0)) { for (java.util.Map.Entry<se.crafted.chrisb.ecoCreature.messages.MessageToken, java.lang.String> entry : parameters.entrySet()) { if ((entry.getKey()) == (MessageToken.AMOUNT)) { assembledMessage = assembledMessage.replaceAll(entry.getKey().toString(), entry.getValue().replaceAll(\"\\\\$\", \"\\\\\\\\\\\\$\")); }else if ((entry.getKey()) == (MessageToken.ITEM)) { assembledMessage = assembledMessage.replaceAll(entry.getKey().toString(), se.crafted.chrisb.ecoCreature.messages.DefaultMessage.toCamelCase(entry.getValue())); }else { assembledMessage = assembledMessage.replaceAll(entry.getKey().toString(), entry.getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8757/buggy-version/src.main.java.se.crafted.chrisb.ecoCreature.messages.DefaultMessage.java", "BodyUseAPI": ["java.lang.String.replaceAll(entry.getKey().toString(),entry.getValue().replaceAll(\"\\\\$\", \"\\\\\\\\\\\\$\"))"], "Fixed commit": "4be51df1b7f8b6aab682cc35e7fbd671c347fe34", "Url": "https://api.github.com/repos/mung3r/ecoCreature", "Date": "2013-10-01T23:45:06Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((damager.getType()) == (org.bukkit.entity.EntityType.ARROW)) { org.bukkit.entity.LivingEntity shooter = ((org.bukkit.entity.Arrow) (damager)).getShooter(); if ((shooter instanceof org.bukkit.entity.Player) || (!(SkillType.UNARMED.getPVEEnabled()))) { return; } com.gmail.nossr50.skills.unarmed.UnarmedManager unarmedManager = mcMMOPlayer.getUnarmedManager(); if (unarmedManager.canDeflect()) { event.setCancelled(unarmedManager.deflectCheck()); if (event.isCancelled()) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4323/buggy-version/src.main.java.com.gmail.nossr50.util.skills.CombatUtils.java", "BodyUseAPI": [], "Fixed commit": "b36096e54dfee0e8fb81a3a6eacc5929c98987fa", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2013-05-02T12:23:18Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (shortContent.contains(\" \")) { shortContent = shortContent.substring(0, shortContent.lastIndexOf(' ')); }else { if ((shortContent.length()) > 50) { shortContent = shortContent.substring(0, 50); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3066/buggy-version/jcommune-model.src.main.java.org.jtalks.jcommune.model.entity.Post.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "28bbe6b079d321076236b088adf9954e4f08dee5", "Url": "https://api.github.com/repos/jtalks-org/jcommune", "Date": "2011-11-24T12:23:16Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result != null) { try { jsonObject = new org.json.JSONObject(result); } catch (org.json.JSONException e) { e.printStackTrace(); } }else { android.widget.Toast.makeText(mainActivity.getApplicationContext(), \"No Connection\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5718/buggy-version/app.src.main.java.andrewbeav.github.io.weathermeme.JSONDownloader.java", "BodyUseAPI": [], "Fixed commit": "afdc0d175ce09a0b6b5e5e97260177b3786691b6", "Url": "https://api.github.com/repos/andrewbeav/WeatherMeme", "Date": "2017-03-06T07:03:07Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonObject != null) { this.weatherInfo = new andrewbeav.github.io.weathermeme.WeatherInfo(jsonObject); mainActivity.cityNameText.setText(weatherInfo.getCityName()); mainActivity.tempText.setText((((java.lang.String.valueOf(weatherInfo.getTemperature())) + ((char) (176))) + \"F\")); mainActivity.humidityText.setText(((\"Humidity: \" + (java.lang.String.valueOf(weatherInfo.getHumidity()))) + \"%\")); if (weatherInfo.getMain().equals(\"Rain\")) { mainActivity.rainText.setText(weatherInfo.getMainDescription()); }else { mainActivity.rainText.setText(\"No Rain\"); } if (((weatherInfo.getWindSpeed()) != (-1)) && ((weatherInfo.getWindDirection()) != null)) { mainActivity.windText.setText((((\"Wind: \" + (java.lang.String.valueOf(weatherInfo.getWindSpeed()))) + \"mph, \") + (weatherInfo.getWindDirection()))); }else { mainActivity.windText.setText(\"No Wind\"); } andrewbeav.github.io.weathermeme.WeatherMemeGenerator memeGenerator = new andrewbeav.github.io.weathermeme.WeatherMemeGenerator(weatherInfo); mainActivity.setMeme(memeGenerator.getImageTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5718/buggy-version/app.src.main.java.andrewbeav.github.io.weathermeme.JSONDownloader.java", "BodyUseAPI": [], "Fixed commit": "afdc0d175ce09a0b6b5e5e97260177b3786691b6", "Url": "https://api.github.com/repos/andrewbeav/WeatherMeme", "Date": "2017-03-06T07:03:07Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.krinsoft.chestsync.SyncedChest.networks.get(network)) == null) { ok = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2902/buggy-version/src.main.java.net.krinsoft.chestsync.SyncedChest.java", "BodyUseAPI": [], "Fixed commit": "5155de7b0e4ea304af859862c933e1515e129e68", "Url": "https://api.github.com/repos/krinsdeath/ChestSync", "Date": "2011-08-05T05:55:38Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(model.enums.PositionID.isBenchPosition(this.getCurrentPositionID()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6806/buggy-version/src.model.model.scripting.brock.Script_00266_BrocksRhydon.java", "BodyUseAPI": [], "Fixed commit": "004cc20f51e199c919c78644e0a896b2471e54be", "Url": "https://api.github.com/repos/Krakomat/final_tcg_3", "Date": "2015-12-10T11:53:32Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gameModel.getPosition(model.enums.PositionID.getActivePokemon(color)).getTopCard()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (ownActive != null) { if (((((((ownActive.hasCondition(PokemonCondition.DAMAGEINCREASE10)) || (ownActive.hasCondition(PokemonCondition.DESTINY))) || (ownActive.hasCondition(PokemonCondition.HARDEN20))) || (ownActive.hasCondition(PokemonCondition.HARDEN30))) || (ownActive.hasCondition(PokemonCondition.INVULNERABLE))) || (ownActive.hasCondition(PokemonCondition.NO_DAMAGE))) || (ownActive.hasCondition(PokemonCondition.RETALIATION))) value = value + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6806/buggy-version/src.ai.ai.treebot.NeoTreeBotEvaluator.java", "BodyUseAPI": ["model.database.PokemonCard.hasCondition(PokemonCondition.DAMAGEINCREASE10)", "model.database.PokemonCard.hasCondition(PokemonCondition.DESTINY)", "model.database.PokemonCard.hasCondition(PokemonCondition.RETALIATION)", "model.database.PokemonCard.hasCondition(PokemonCondition.NO_DAMAGE)", "model.database.PokemonCard.hasCondition(PokemonCondition.HARDEN20)", "model.database.PokemonCard.hasCondition(PokemonCondition.INVULNERABLE)", "model.database.PokemonCard.hasCondition(PokemonCondition.HARDEN30)"], "Fixed commit": "004cc20f51e199c919c78644e0a896b2471e54be", "Url": "https://api.github.com/repos/Krakomat/final_tcg_3", "Date": "2015-12-10T11:53:32Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((displayAddress.size()) == 2) { return ((displayAddress.get(0)) + \", \") + (displayAddress.get(1)); }else { return displayAddress.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2736/buggy-version/SFFoodTruck.app.src.main.java.com.codepath.com.sffoodtruck.data.model.Location.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "4162c01796e6d0c6880901ae7e7c747cf28c7099", "Url": "https://api.github.com/repos/Codepath-Group7/Group7", "Date": "2017-10-18T23:11:33Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.matthew.ceftrails.MapsActivity.readCsv()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((coords.size()) > 0) mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(coords.get(0), com.matthew.ceftrails.MapsActivity.ZOOMLEVEL));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8455/buggy-version/app.src.main.java.com.matthew.ceftrails.MapsActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(coords.get(0), com.matthew.ceftrails.MapsActivity.ZOOMLEVEL))", "java.util.ArrayList<com.google.android.gms.maps.model.LatLng>.get(int)", "com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(coords.get(0),int)"], "Fixed commit": "f00364d9c7b956b61357af1f825ffe47709237ad", "Url": "https://api.github.com/repos/mdeange/CEF_Trails", "Date": "2016-04-12T01:45:13Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (normalBlock) { blockCounter.incrementTotalBlockCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4227/buggy-version/src.com.trajan.android.game.Quado.levels.Level.java", "BodyUseAPI": [], "Fixed commit": "ca3d4c5033c3d5d5f1bbb0776791e903ab8a3373", "Url": "https://api.github.com/repos/tomastrajan/Quado", "Date": "2014-12-11T18:48:38Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getServletPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userPath.equals(\"/submitCompare\")) { response.sendRedirect(\"/Photo_Grader/compare\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1464/buggy-version/src.java.controller.Compare_controller.java", "BodyUseAPI": [], "Fixed commit": "28333eb88710040e987fced10273c091dacdd166", "Url": "https://api.github.com/repos/aryner/Photo_Grader", "Date": "2015-11-07T00:10:42Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListView.getAdapter()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tA.getCount()) > 0) { hacks.coachs_timer.Timer[] data = tA.getData(); for (hacks.coachs_timer.Timer t : data) { t.start(sysClock); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5189/buggy-version/app.src.main.java.hacks.coachs_timer.GroupTimerFragment.java", "BodyUseAPI": ["hacks.coachs_timer.TimerAdapter.getData()"], "Fixed commit": "3a04133185ae510a6ae47bd5600f8a45201f9a2d", "Url": "https://api.github.com/repos/mluke94/Coachs_Timer", "Date": "2016-02-29T01:00:38Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.nossr50.api.PartyAPI.getOnlineMembers(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (members != null) { for (org.bukkit.entity.Player member : members) { party.add(member.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1854/buggy-version/src.main.java.se.crafted.chrisb.ecoCreature.rewards.parties.McMMOParty.java", "BodyUseAPI": [], "Fixed commit": "677f9262ac26ca7cb9d778a471d69aca47b4c639", "Url": "https://api.github.com/repos/mung3r/ecoCreature", "Date": "2012-09-22T23:12:08Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spatial.StandardParticleEmitter.textureForParticles) == null) { spatial.StandardParticleEmitter.textureForParticles = assetManager.loadTexture(\"Textures/Explosion/flame.png\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5657/buggy-version/Kandidat33MobileGame.src.spatial.StandardParticleEmitter.java", "BodyUseAPI": [], "Fixed commit": "d2a38197b3f62c2376ad670053309ff58bf39843", "Url": "https://api.github.com/repos/forssenm/kandidat-projekt", "Date": "2013-04-26T08:06:00Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.Control.getLayoutData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (GData != null) { GData.exclude = true && hideit; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5939/buggy-version/org.jcryptool.analysis.freqanalysis.src.org.jcryptool.analysis.freqanalysis.ui.SimpleAnalysisUI.java", "BodyUseAPI": [], "Fixed commit": "b2304d77b2f8c4442e39261a3960ae3992ca6cc6", "Url": "https://api.github.com/repos/jcryptool/crypto", "Date": "2015-04-01T15:11:19Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1297/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "3b0c749567005fe4bc717fa49606b65b73fda689", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1297/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "3b0c749567005fe4bc717fa49606b65b73fda689", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.getFilteredPersonList().get(targetIndex.getZeroBased()).getAddress().toString().equals(\"\")) { throw new seedu.address.logic.commands.exceptions.CommandException(java.lang.String.format(seedu.address.logic.commands.LocateCommand.MESSAGE_NO_ADDRESS_FAILURE, targetIndex.getOneBased())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2586/buggy-version/src.main.java.seedu.address.logic.commands.LocateCommand.java", "BodyUseAPI": ["seedu.address.commons.core.index.Index.getOneBased()", "java.lang.String.format(java.lang.String,targetIndex.getOneBased())"], "Fixed commit": "5f4eb18e1d66bddab3a53ca93e372480766c3ba8", "Url": "https://api.github.com/repos/Esilocke/addressbook-level4", "Date": "2017-11-13T09:53:42Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) != null) return name.get(\"en-US\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5600/buggy-version/src.main.java.gov.adlnet.xapi.model.ActivityDefinition.java", "BodyUseAPI": [], "Fixed commit": "e56fb7d52c1f7b6fc9996d5c0a4677d7cff41a42", "Url": "https://api.github.com/repos/adlnet/jxapi", "Date": "2014-11-16T17:42:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fromElemType instanceof wyil.lang.Type.Union) && (toElemType instanceof wyil.lang.Type.Union)) { toElem = fromElem; }else { wycc.lang.SyntaxError.internalFailure(\"Not implemented!\", \"ConvertInterpreter.java\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2236/buggy-version/modules.wyopcl.src.wyopcl.interpreter.C.ConvertInterpreter.java", "BodyUseAPI": [], "Fixed commit": "1333a8a7c7195caeb267a03531a309d391cc6f7a", "Url": "https://api.github.com/repos/samminweng/WhileyOpenCL", "Date": "2014-08-15T16:33:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastKnownUserLocation) != null) { lastLocation = com.todome.Util.locationToGeoPoint(lastKnownUserLocation); }else { lastLocation = new com.google.android.maps.GeoPoint(beginLat, beginLong); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/137/buggy-version/src.com.todome.MapViewActivity.java", "BodyUseAPI": [], "Fixed commit": "793394d19a06e2fd19775613890fc9007daa34ba", "Url": "https://api.github.com/repos/ToDoMe/ToDoMe", "Date": "2011-10-27T16:37:09Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (expr != null) { org.zkoss.zss.model.sys.formula.FormulaEngine fe = org.zkoss.zss.model.sys.EngineFactory.getInstance().createFormulaEngine(); catFormula = fe.parse(expr, new org.zkoss.zss.model.sys.formula.FormulaParseContext(chart.getSheet(), getRef())); }else { catFormula = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2706/buggy-version/zssmodel.src.org.zkoss.zss.model.impl.chart.GeneralChartDataImpl.java", "BodyUseAPI": ["org.zkoss.zss.model.sys.formula.FormulaEngine.parse(java.lang.String,org.zkoss.zss.model.sys.formula.FormulaParseContext)"], "Fixed commit": "d3a097ed0d274c8cebb4381d2bded4a6766c61bc", "Url": "https://api.github.com/repos/zkoss/zkspreadsheet", "Date": "2014-03-05T09:11:35Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zss.range.impl.imexp.ChartDataSource<?>.getPointCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count <= 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2706/buggy-version/zssmodel.src.org.zkoss.zss.range.impl.imexp.ExcelXlsxImporter.java", "BodyUseAPI": [], "Fixed commit": "d3a097ed0d274c8cebb4381d2bded4a6766c61bc", "Url": "https://api.github.com/repos/zkoss/zkspreadsheet", "Date": "2014-03-05T09:11:35Z"},
{"Line": "=>1068", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.runwaysdk.geodashboard.DashboardState.getDashboardState(com.runwaysdk.geodashboard.Dashboard,com.runwaysdk.geodashboard.GeodashboardUser)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (state != null) { state.lock(); state.setMapThumbnail(image); state.apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1373/buggy-version/geodashboard-server.src.main.java-gen.stub.com.runwaysdk.geodashboard.Dashboard.java", "BodyUseAPI": ["com.runwaysdk.geodashboard.DashboardState.apply()", "com.runwaysdk.geodashboard.DashboardState.setMapThumbnail(byte[])", "com.runwaysdk.geodashboard.DashboardState.lock()"], "Fixed commit": "06310da3b5fa7708eec5a12d67e0cf31f3a38dc9", "Url": "https://api.github.com/repos/terraframe/geoprism", "Date": "2015-10-30T15:51:26Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8458/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "fb29ed3d225a74042ac2eb2516675439630eec78", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) instanceof android.app.Activity) { activity = ((android.app.Activity) (getContext())); }else { android.view.ContextThemeWrapper ctw = ((android.view.ContextThemeWrapper) (getContext())); activity = ((android.app.Activity) (ctw.getBaseContext())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6212/buggy-version/library.src.main.java.it.bsdsoftware.dynamicquestion.library.BSDDynamicForm.java", "BodyUseAPI": [], "Fixed commit": "fa587acc259d10c2fe644dae26ae00ccaa4055a4", "Url": "https://api.github.com/repos/bsdsoftware/BSDAndroidDynamicForm", "Date": "2015-11-06T10:24:20Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intel.getNode()) != (activeNode)) { getFirebaseUtils().pushNode(activeNode); getFirebaseUtils().pushUser(user); toastify((((((((\"you: \" + (user.getPoints())) + \"; \") + (activeNode.getName())) + \": \") + (activeNode.getColor())) + \" \") + (activeNode.getOwnership()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8647/buggy-version/app.src.main.java.com.example.davelkan.mapv2.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "84a6c0b5673ae8177bd577ca2fe749342b36834a", "Url": "https://api.github.com/repos/davelkan/whisperspot", "Date": "2014-12-18T06:39:00Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arrays[depth]) { throw new java.io.IOException(\"Unclosed array\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2775/buggy-version/core.src.main.java.de.odysseus.staxon.json.stream.impl.JsonStreamSourceImpl.java", "BodyUseAPI": [], "Fixed commit": "d1017706109f63eb5b289259cd0d8b5a9539b197", "Url": "https://api.github.com/repos/beckchr/staxon", "Date": "2012-07-17T12:52:43Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((depth) == 0) { throw new java.io.IOException(\"Not in an object\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2775/buggy-version/core.src.main.java.de.odysseus.staxon.json.stream.impl.JsonStreamSourceImpl.java", "BodyUseAPI": [], "Fixed commit": "d1017706109f63eb5b289259cd0d8b5a9539b197", "Url": "https://api.github.com/repos/beckchr/staxon", "Date": "2012-07-17T12:52:43Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.io.File>.listIterator()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (iterator.hasNext()) { final java.io.File current = iterator.next(); if ((previous != null) && (current != null)) { mergeFiles(previous, current); iterator.remove(); iterator.previous(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4502/buggy-version/src.main.com.valkryst.VcLSM.FileMerger.java", "BodyUseAPI": ["java.util.ListIterator<java.io.File>.previous()", "java.util.ListIterator<java.io.File>.remove()", "java.util.ListIterator<java.io.File>.next()"], "Fixed commit": "3c6f56db9e815efdf3b2a997893be9d7535aeaed", "Url": "https://api.github.com/repos/JiapengZhu/VcLSM", "Date": "2017-04-15T18:04:46Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spaceshipMenu) == null) { MineSpaceships.proxy.makeTerminal(player, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/730/buggy-version/src.main.java.com.minespaceships.mod.overhead.ChatRegisterEntity.java", "BodyUseAPI": [], "Fixed commit": "bb22c901164e87ba0ebeffc9a7a45ac93537bd55", "Url": "https://api.github.com/repos/DevraRabbit/mineSpaceships", "Date": "2015-04-01T19:57:04Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.util.ParamUtil.getString(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(uidStr)) { ezvcard.property.Uid uid = new ezvcard.property.Uid(uidStr); vCard.setUid(uid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8574/buggy-version/contact-manager.src.main.java.ch.inofix.portlet.contact.portlet.PortletUtil.java", "BodyUseAPI": [], "Fixed commit": "11f7ec0c1f9471f74eb320eb7c8755a914685886", "Url": "https://api.github.com/repos/inofix/liferay-modules", "Date": "2015-05-18T21:00:34Z"},
{"Line": "=>1382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x > key) && yIsSet) && (y > key)) { output[0] = 0; if (x < y) { output[1] = x; }else { output[1] = y; } }else if (x > key) { output[0] = 0; output[1] = x; }else if (yIsSet && (y > key)) { output[0] = 0; output[1] = y; }else { output[0] = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5652/buggy-version/src.main.java.thirdparty.edu.princeton.cs.algs4.RedBlackBSTLongInt2.java", "BodyUseAPI": [], "Fixed commit": "f6e17bec17f8d790940d578dac8f9f8e6449a412", "Url": "https://api.github.com/repos/nking/shared", "Date": "2017-07-18T19:23:23Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recreateView) != null) { recreateView.recreate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/14/buggy-version/CCP.android.sub_app.fermat-ccp-android-sub-app-intra-wallet-user-community-bitdubai.src.main.java.com.bitdubai.sub_app.intra_user_community.common.popups.PresentationIntraUserCommunityDialog.java", "BodyUseAPI": [], "Fixed commit": "6db2ba842f4df6c028c0286fad429946e3124117", "Url": "https://api.github.com/repos/acostarodrigo/fermat", "Date": "2016-01-11T02:23:37Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recreateView) != null) recreateView.recreate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/14/buggy-version/CCP.android.sub_app.fermat-ccp-android-sub-app-intra-wallet-user-community-bitdubai.src.main.java.com.bitdubai.sub_app.intra_user_community.common.popups.PresentationIntraUserCommunityDialog.java", "BodyUseAPI": [], "Fixed commit": "6db2ba842f4df6c028c0286fad429946e3124117", "Url": "https://api.github.com/repos/acostarodrigo/fermat", "Date": "2016-01-11T02:23:37Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.carver.paul.dotavision.Ui.MainActivity.findViewById(R.id.fab_clear)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fab.getAlpha()) != 1.0F) { fab.animate().alpha(1.0F).setDuration(150).setStartDelay(50); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8935/buggy-version/app.src.main.java.com.carver.paul.dotavision.Ui.MainActivity.java", "BodyUseAPI": ["fab.animate().alpha(float)", "fab.animate().alpha(1.0F).setDuration(int)", "android.view.View.animate()", "fab.animate().alpha(1.0F).setDuration(150).setStartDelay(int)"], "Fixed commit": "2140540d3d5abde29d78fbb9cc77452858819f6a", "Url": "https://api.github.com/repos/dbdkmezz/true-sight-dota", "Date": "2016-02-26T19:03:13Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((overlayWidget.getNumberingType()) != null) { if (overlayWidget.getNumberingType().isConstant()) { return java.lang.Integer.toString(((overlayWidget.getTypeIndex()) + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1980/buggy-version/src.main.java.org.nsesa.editor.gwt.core.client.ui.overlay.DefaultLocator.java", "BodyUseAPI": ["java.lang.Integer.toString(((overlayWidget.getTypeIndex()) + 1))", "org.nsesa.editor.gwt.core.client.ui.overlay.document.OverlayWidget.getNumberingType()", "overlayWidget.getNumberingType().isConstant()", "org.nsesa.editor.gwt.core.client.ui.overlay.document.OverlayWidget.getTypeIndex()"], "Fixed commit": "f250c57da5de2ace76aa7faaf1301848e07eb78f", "Url": "https://api.github.com/repos/e-parliament/nsesa-editor", "Date": "2014-09-05T08:49:17Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["swp_compiler_ss13.javabite.codegen.converters.DoWhileNodeConverter.popIdentifierData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.getIdentifier().startsWith(\"#\")) { if (result.getIdentifier().equalsIgnoreCase(\"#true\")) { icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateBranch(startLabel)); } }else { icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateConditionalBranch(result, startLabel, endLabel)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4619/buggy-version/javabite-code-gen.src.main.java.swp_compiler_ss13.javabite.codegen.converters.DoWhileNodeConverter.java", "BodyUseAPI": ["result.getIdentifier().equalsIgnoreCase(java.lang.String)", "swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateConditionalBranch(swp_compiler_ss13.javabite.codegen.IdentifierData,java.lang.String,java.lang.String)", "swp_compiler_ss13.javabite.codegen.IdentifierData.getIdentifier()", "swp_compiler_ss13.javabite.codegen.converters.DoWhileNodeConverter.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateConditionalBranch(result, startLabel, endLabel))"], "Fixed commit": "76d8e4cee6c8f9581a155ab112e72b47436e7a7e", "Url": "https://api.github.com/repos/swp-uebersetzerbau-ss13/javabite", "Date": "2013-07-10T19:09:25Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["result.getIdentifier().startsWith(java.lang.String)", "result.getIdentifier().equalsIgnoreCase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!isConditionConstant) || isTrue) { if (!isConditionConstant) { icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateConditionalBranch(result, trueLabel, endLabel)); icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateLabel(trueLabel)); } icg.processNode(loopNode.getLoopBody()); icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateBranch(startLabel)); icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateLabel(endLabel)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4619/buggy-version/javabite-code-gen.src.main.java.swp_compiler_ss13.javabite.codegen.converters.WhileNodeConverter.java", "BodyUseAPI": [], "Fixed commit": "76d8e4cee6c8f9581a155ab112e72b47436e7a7e", "Url": "https://api.github.com/repos/swp-uebersetzerbau-ss13/javabite", "Date": "2013-07-10T19:09:25Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["result.getIdentifier().startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (conditionIsConstant) { if (result.getIdentifier().equalsIgnoreCase(\"#true\")) { icg.processNode(branchNode.getStatementNodeOnTrue()); }else { if (hasFalseBlock) { icg.processNode(branchNode.getStatementNodeOnFalse()); } } }else if (hasFalseBlock) { icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateConditionalBranch(result, trueLabel, falseLabel)); icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateLabel(trueLabel)); icg.processNode(branchNode.getStatementNodeOnTrue()); icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateBranch(endLabel)); icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateLabel(falseLabel)); icg.processNode(branchNode.getStatementNodeOnFalse()); icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateLabel(endLabel)); }else { icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateConditionalBranch(result, trueLabel, endLabel)); icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateLabel(trueLabel)); icg.processNode(branchNode.getStatementNodeOnTrue()); icg.addQuadruple(swp_compiler_ss13.javabite.codegen.QuadrupleFactoryJb.generateLabel(endLabel)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4619/buggy-version/javabite-code-gen.src.main.java.swp_compiler_ss13.javabite.codegen.converters.BranchNodeConverter.java", "BodyUseAPI": [], "Fixed commit": "76d8e4cee6c8f9581a155ab112e72b47436e7a7e", "Url": "https://api.github.com/repos/swp-uebersetzerbau-ss13/javabite", "Date": "2013-07-10T19:09:25Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bomb.isExploded()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2788/buggy-version/src.main.java.com.github.apixandru.dyna.ui.BombUi.java", "BodyUseAPI": [], "Fixed commit": "796c31cb889d73c5a570eb286cdb84a466884628", "Url": "https://api.github.com/repos/apixandru/slick2dyna", "Date": "2015-06-02T16:41:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getParameter(AuthenticationRequest.AuthenticationRequestConstants.SESSION_KEY)) == null) { context.addParameter(AuthenticationRequest.AuthenticationRequestConstants.SESSION_KEY, sessionKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6797/buggy-version/components.org.wso2.carbon.identity.gateway.src.main.java.org.wso2.carbon.identity.gateway.processor.handler.session.SessionHandler.java", "BodyUseAPI": ["org.wso2.carbon.identity.gateway.context.AuthenticationContext.addParameter(AuthenticationRequest.AuthenticationRequestConstants.SESSION_KEY,java.lang.String)"], "Fixed commit": "b283c43711c6b117308eb01466761463bfa8df0e", "Url": "https://api.github.com/repos/wso2/carbon-identity-framework", "Date": "2017-02-16T01:40:14Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ui.MyTextfield.passCheck(getText())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (idx == (txt.length())) { int width = getTextWidthFor(txt); if ((mouseX - prevWidth) < (width - mouseX)) { --idx; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2876/buggy-version/RobotRun.src.ui.MyTextfield.java", "BodyUseAPI": ["ui.MyTextfield.getTextWidthFor(java.lang.String)"], "Fixed commit": "1640aa969f3fb6af25f8af5b961af7c9fc9aa851", "Url": "https://api.github.com/repos/skuhl/RobotRun", "Date": "2017-08-29T14:43:54Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((org.apache.wicket.Session.get().getMetaData(org.onexus.ui.website.Website.WEBSITE_CONFIG)) == null) { org.apache.wicket.Session.get().setMetaData(org.onexus.ui.website.Website.WEBSITE_CONFIG, config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2505/buggy-version/org.onexus.ui.website.src.main.java.org.onexus.ui.website.Website.java", "BodyUseAPI": [], "Fixed commit": "edf7c6bf39dcc4be2c53365d66fb0fa0c2432e77", "Url": "https://api.github.com/repos/onexus/onexus", "Date": "2012-10-04T07:46:04Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openrdf.model.URI.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uriString.endsWith(\".\")) { prefix = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2201/buggy-version/src.main.java.org.nanopub.CustomTrigWriter.java", "BodyUseAPI": [], "Fixed commit": "13372b6088a146e0a5ac3c9a84340bce83a6a2c6", "Url": "https://api.github.com/repos/Nanopublication/nanopub-java", "Date": "2014-06-25T11:39:40Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.internetapplications.web.taglib.combined.tags.CombineJsonConfiguration.readConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (parent.isPresent()) { return new se.internetapplications.web.taglib.combined.tags.ConfigurationItemsCollection(parent.get()); }else { return new se.internetapplications.web.taglib.combined.tags.ConfigurationItemsCollection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1486/buggy-version/src.main.java.se.internetapplications.web.taglib.combined.tags.ConfigurationItemAwareTagSupport.java", "BodyUseAPI": ["com.google.common.base.Optional<se.internetapplications.web.taglib.combined.tags.ConfigurationItemsCollection>.get()"], "Fixed commit": "58bc395196387a180aeeca2eb4b858d990e62446", "Url": "https://api.github.com/repos/jmbe/combine-taglib", "Date": "2013-09-22T09:45:30Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vg.civcraft.mc.namelayer.group.Group.getPlayerType(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((promoteecurrentType == (vg.civcraft.mc.namelayer.GroupManager.PlayerType.MODS)) || (promoteecurrentType == (vg.civcraft.mc.namelayer.GroupManager.PlayerType.ADMINS))) || (promoteecurrentType == (vg.civcraft.mc.namelayer.GroupManager.PlayerType.OWNER))) { if ((promoteeType == (vg.civcraft.mc.namelayer.GroupManager.PlayerType.MEMBERS)) || (promoteeType == (vg.civcraft.mc.namelayer.GroupManager.PlayerType.SUBGROUP))) { vg.civcraft.mc.namelayer.events.PromotePlayerEvent event = new vg.civcraft.mc.namelayer.events.PromotePlayerEvent(oProm); org.bukkit.Bukkit.getPluginManager().callEvent(event); if (event.isCancelled()) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1611/buggy-version/src.vg.civcraft.mc.namelayer.command.commands.PromotePlayer.java", "BodyUseAPI": [], "Fixed commit": "30342d902da13d2feac6a5bc8795972df2d2f915", "Url": "https://api.github.com/repos/clone2204/NameLayer", "Date": "2015-02-07T00:12:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((articleDB.get(\"link\")) != null) { this.link = articleDB.get(\"link\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1661/buggy-version/app.models.Article.java", "BodyUseAPI": [], "Fixed commit": "40cc45433c8fdb2b076d3c738eb62a17ed99669c", "Url": "https://api.github.com/repos/CMUSV-SmartReader/SmartReader", "Date": "2013-06-26T21:29:22Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((articleDB.get(\"updateDate\")) != null) { this.updateDate = ((java.util.Date) (articleDB.get(\"updateDate\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1661/buggy-version/app.models.Article.java", "BodyUseAPI": [], "Fixed commit": "40cc45433c8fdb2b076d3c738eb62a17ed99669c", "Url": "https://api.github.com/repos/CMUSV-SmartReader/SmartReader", "Date": "2013-06-26T21:29:22Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((articleDB.get(\"desc\")) != null) { this.desc = articleDB.get(\"desc\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1661/buggy-version/app.models.Article.java", "BodyUseAPI": [], "Fixed commit": "40cc45433c8fdb2b076d3c738eb62a17ed99669c", "Url": "https://api.github.com/repos/CMUSV-SmartReader/SmartReader", "Date": "2013-06-26T21:29:22Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((articleDB.get(\"publishDate\")) != null) { this.publishDate = ((java.util.Date) (articleDB.get(\"publishDate\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1661/buggy-version/app.models.Article.java", "BodyUseAPI": [], "Fixed commit": "40cc45433c8fdb2b076d3c738eb62a17ed99669c", "Url": "https://api.github.com/repos/CMUSV-SmartReader/SmartReader", "Date": "2013-06-26T21:29:22Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,e.toString().length())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (expectedEnd != actualEnd) { android.util.Log.e(\"<><><><><>\", \"Code model out of sync with code text\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7884/buggy-version/projects.android_studio.JavaLisp.AndroidLispGuiBuilder.src.main.java.com.evolved.automata.android.lisp.guibuilder.v2.LispEditText.java", "BodyUseAPI": [], "Fixed commit": "936fdd0b0cc70cb139d80676c311937bae8a41fc", "Url": "https://api.github.com/repos/hexagonc/Android-Lisp", "Date": "2017-05-08T19:28:12Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLessStyleSheetURI(uri))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3164/buggy-version/src.eclipse.net.vtst.ow.eclipse.less.src.net.vtst.ow.eclipse.less.scoping.LessImportStatementResolver.java", "BodyUseAPI": [], "Fixed commit": "7d17c815997b50f1cbb3627d66f9238dc296e108", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2012-05-01T08:39:35Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.common.util.URI.fileExtension()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fileExtension == null) uri = uri.appendFileExtension(LessRuntimeModule.LESS_EXTENSION);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3164/buggy-version/src.eclipse.net.vtst.ow.eclipse.less.src.net.vtst.ow.eclipse.less.scoping.LessImportStatementResolver.java", "BodyUseAPI": [], "Fixed commit": "7d17c815997b50f1cbb3627d66f9238dc296e108", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2012-05-01T08:39:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (db.DatabaseController.getInstance().allowedToOpenTreasure(token, treasureID)) { core.CoreModel.getInstance().addTreasureReservation(treasureID, token); return core.CoreModel.getInstance().isReservedForUser(treasureID, token); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3045/buggy-version/Server.src.main.java.core.commands.ReserveTreasureCommand.java", "BodyUseAPI": ["core.CoreModel.getInstance().isReservedForUser(int,int)", "core.CoreModel.getInstance().addTreasureReservation(int,int)"], "Fixed commit": "3d1c3610a0af6dcb29d525945438d5493b70a524", "Url": "https://api.github.com/repos/co0k/TreasureHunt", "Date": "2015-06-15T13:00:31Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Long) { getBuilder().setClaimsSetIssuedAt(value); }else { getBuilder().setClaimsSetIssuedAt(((java.lang.Integer) (value)).longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1773/buggy-version/oauth-2.0.jwt.src.main.java.org.apache.oltu.oauth2.jwt.io.JWTClaimsSetParser.java", "BodyUseAPI": ["getBuilder().setClaimsSetIssuedAt(T)"], "Fixed commit": "4e3f0a3a4785f9a251d66509d13163f0f7602a9f", "Url": "https://api.github.com/repos/vikpj/oltu", "Date": "2015-10-20T22:30:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Long) { getBuilder().setClaimsSetExpirationTime(value); }else { getBuilder().setClaimsSetExpirationTime(((java.lang.Integer) (value)).longValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1773/buggy-version/oauth-2.0.jwt.src.main.java.org.apache.oltu.oauth2.jwt.io.JWTClaimsSetParser.java", "BodyUseAPI": ["getBuilder().setClaimsSetExpirationTime(T)"], "Fixed commit": "4e3f0a3a4785f9a251d66509d13163f0f7602a9f", "Url": "https://api.github.com/repos/vikpj/oltu", "Date": "2015-10-20T22:30:45Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.example.parsa.self3.DataModel.Shopping.menuFoodCanBeReserved(food)) { ((com.example.parsa.self3.MainActivity) (context)).addNewFood(food); Shopping.selectedFoods.add(food); android.widget.Toast.makeText(context, ((food.getFoodCaption()) + \" \u0628\u0647 \u0633\u0628\u062f \u062e\u0631\u06cc\u062f \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f! \"), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(context, \"\u062d\u062f\u0627\u06a9\u062b\u0631 \u062a\u0639\u062f\u0627\u062f \u0627\u06cc\u0646 \u063a\u0630\u0627 \u0628\u0647 \u0633\u0628\u062f \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f\u0647\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4592/buggy-version/app.src.main.java.com.example.parsa.self3.MenuFoodFragment.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,((food.getFoodCaption()) + \" \u0628\u0647 \u0633\u0628\u062f \u062e\u0631\u06cc\u062f \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f! \"),Toast.LENGTH_SHORT)", "com.example.parsa.self3.DataModel.MenuFood.getFoodCaption()", "android.content.Context.addNewFood(com.example.parsa.self3.DataModel.MenuFood)", "android.widget.Toast.makeText(context, ((food.getFoodCaption()) + \" \u0628\u0647 \u0633\u0628\u062f \u062e\u0631\u06cc\u062f \u0627\u0641\u0632\u0648\u062f\u0647 \u0634\u062f! \"), Toast.LENGTH_SHORT).show()", "Shopping.selectedFoods.add(com.example.parsa.self3.DataModel.MenuFood)"], "Fixed commit": "b3f911062d0b07929952433f4ebfed0257580d92", "Url": "https://api.github.com/repos/aliparsa/Self3", "Date": "2015-01-29T08:28:58Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) { if (cnt == 0) { longImage += value; }else { longImage += \",\" + value; } cnt++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1707/buggy-version/src.controller.AdminServlet.java", "BodyUseAPI": [], "Fixed commit": "7a6244f8ee0a37b8834ce60dde589ad6b9afe837", "Url": "https://api.github.com/repos/zitinghan/SSPPP", "Date": "2016-11-10T02:02:47Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getParameterMap().containsKey(\"featured\")) { featured = request.getParameter(\"featured\").trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1707/buggy-version/src.controller.AdminServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "request.getParameter(\"featured\").trim()"], "Fixed commit": "7a6244f8ee0a37b8834ce60dde589ad6b9afe837", "Url": "https://api.github.com/repos/zitinghan/SSPPP", "Date": "2016-11-10T02:02:47Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getParameterMap().containsKey(\"featured\")) { featured = request.getParameter(\"featured\").trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1707/buggy-version/src.controller.AdminServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "request.getParameter(\"featured\").trim()"], "Fixed commit": "7a6244f8ee0a37b8834ce60dde589ad6b9afe837", "Url": "https://api.github.com/repos/zitinghan/SSPPP", "Date": "2016-11-10T02:02:47Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((fileExtension.charAt(0)) != '.') { fileExtension = \".\" + fileExtension; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4947/buggy-version/spring-webmvc.src.main.java.org.springframework.web.servlet.mvc.condition.PatternsRequestCondition.java", "BodyUseAPI": [], "Fixed commit": "e98dc50f994708beb3bab2065336a6ec23fa1332", "Url": "https://api.github.com/repos/SpringSource/spring-framework", "Date": "2012-10-15T13:41:23Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (contactExtra != null) { trigger = true; createUri = android.net.Uri.fromParts(\"tel\", contactExtra, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1446/buggy-version/core.java.android.widget.QuickContactBadge.java", "BodyUseAPI": ["android.net.Uri.fromParts(java.lang.String,java.lang.String,<nulltype>)"], "Fixed commit": "b25aa527b6d34d14bd68f35527e5d0cf993ad957", "Url": "https://api.github.com/repos/LiquidSmooth/android_frameworks_base", "Date": "2014-07-23T16:22:10Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cz.filmtit.client.Gui.user) != null) { return cz.filmtit.client.Gui.user.getName(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9070/buggy-version/src.gui.src.main.java.cz.filmtit.client.Gui.java", "BodyUseAPI": [], "Fixed commit": "e6171f3942c7607aaa2cf84a0efe34e1e2d4252d", "Url": "https://api.github.com/repos/runn1ng/FilmTit", "Date": "2012-08-10T03:36:05Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((int) (environment.Map.getNovice().getPosition().first)) + 1) < (environment.Map.WIDTH)) { if (((environment.Map.getBoard()[(((int) (environment.Map.getNovice().getPosition().first)) + 1)][((int) (environment.Map.getNovice().getPosition().second))].getTileType()) == (utility.TileType.MONSTER)) && ((environment.Map.getNovice().getFaceDirection()) == (utility.Direction.RIGHT))) { environment.Map.getNovice().attack(environment.Map.getBoard()[(((int) (environment.Map.getNovice().getPosition().first)) + 1)][((int) (environment.Map.getNovice().getPosition().second))].entity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9269/buggy-version/src.main.Handler.java", "BodyUseAPI": ["environment.Map.getNovice().attack(environment.Map.getBoard()[(((int) (environment.Map.getNovice().getPosition().first)) + 1)][((int) (environment.Map.getNovice().getPosition().second))].entity)", "environment.Map.getBoard()[(((int) (environment.Map.getNovice().getPosition().first)) + 1)][((int) (environment.Map.getNovice().getPosition().second))].getTileType()"], "Fixed commit": "1a0cee5c0a73b8f17a212c28de7c9271514284ba", "Url": "https://api.github.com/repos/mawinw/DotC", "Date": "2017-11-21T15:30:25Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((int) (environment.Map.getNovice().getPosition().second)) + 1) < (environment.Map.HEIGHT)) { if (((environment.Map.getBoard()[((int) (environment.Map.getNovice().getPosition().first))][(((int) (environment.Map.getNovice().getPosition().second)) + 1)].getTileType()) == (utility.TileType.MONSTER)) && ((environment.Map.getNovice().getFaceDirection()) == (utility.Direction.DOWN))) { environment.Map.getNovice().attack(environment.Map.getBoard()[((int) (environment.Map.getNovice().getPosition().first))][(((int) (environment.Map.getNovice().getPosition().second)) + 1)].entity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9269/buggy-version/src.main.Handler.java", "BodyUseAPI": ["environment.Map.getBoard()[((int) (environment.Map.getNovice().getPosition().first))][(((int) (environment.Map.getNovice().getPosition().second)) + 1)].getTileType()", "environment.Map.getNovice().attack(environment.Map.getBoard()[((int) (environment.Map.getNovice().getPosition().first))][(((int) (environment.Map.getNovice().getPosition().second)) + 1)].entity)"], "Fixed commit": "1a0cee5c0a73b8f17a212c28de7c9271514284ba", "Url": "https://api.github.com/repos/mawinw/DotC", "Date": "2017-11-21T15:30:25Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((int) (environment.Map.getNovice().getPosition().first)) - 1) > 0) { if (((environment.Map.getBoard()[(((int) (environment.Map.getNovice().getPosition().first)) - 1)][((int) (environment.Map.getNovice().getPosition().second))].getTileType()) == (utility.TileType.MONSTER)) && ((environment.Map.getNovice().getFaceDirection()) == (utility.Direction.LEFT))) { environment.Map.getNovice().attack(environment.Map.getBoard()[(((int) (environment.Map.getNovice().getPosition().first)) - 1)][((int) (environment.Map.getNovice().getPosition().second))].entity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9269/buggy-version/src.main.Handler.java", "BodyUseAPI": ["environment.Map.getNovice().attack(environment.Map.getBoard()[(((int) (environment.Map.getNovice().getPosition().first)) - 1)][((int) (environment.Map.getNovice().getPosition().second))].entity)", "environment.Map.getBoard()[(((int) (environment.Map.getNovice().getPosition().first)) - 1)][((int) (environment.Map.getNovice().getPosition().second))].getTileType()"], "Fixed commit": "1a0cee5c0a73b8f17a212c28de7c9271514284ba", "Url": "https://api.github.com/repos/mawinw/DotC", "Date": "2017-11-21T15:30:25Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((int) (environment.Map.getNovice().getPosition().second)) - 1) > 0) { if (((environment.Map.getBoard()[((int) (environment.Map.getNovice().getPosition().first))][(((int) (environment.Map.getNovice().getPosition().second)) - 1)].getTileType()) == (utility.TileType.MONSTER)) && ((environment.Map.getNovice().getFaceDirection()) == (utility.Direction.UP))) { environment.Map.getNovice().attack(environment.Map.getBoard()[((int) (environment.Map.getNovice().getPosition().first))][(((int) (environment.Map.getNovice().getPosition().second)) - 1)].entity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9269/buggy-version/src.main.Handler.java", "BodyUseAPI": ["environment.Map.getBoard()[((int) (environment.Map.getNovice().getPosition().first))][(((int) (environment.Map.getNovice().getPosition().second)) - 1)].getTileType()", "environment.Map.getNovice().attack(environment.Map.getBoard()[((int) (environment.Map.getNovice().getPosition().first))][(((int) (environment.Map.getNovice().getPosition().second)) - 1)].entity)"], "Fixed commit": "1a0cee5c0a73b8f17a212c28de7c9271514284ba", "Url": "https://api.github.com/repos/mawinw/DotC", "Date": "2017-11-21T15:30:25Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.example.q.shareplaylist.MainActivity.isLoggedIn())) { android.support.design.widget.Snackbar.make(rootView.findViewById(R.id.findgroup_coordinator), \"You have to be logged in!\", Snackbar.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1431/buggy-version/android.app.src.main.java.com.example.q.shareplaylist.FindGroup.java", "BodyUseAPI": [], "Fixed commit": "39af64868228d1a9f2f7f69c50868c4c6dfb3684", "Url": "https://api.github.com/repos/HwangheeKim/SharePlaylist", "Date": "2017-01-24T14:20:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.example.q.shareplaylist.MainActivity.isLoggedIn())) { android.support.design.widget.Snackbar.make(rootView.findViewById(R.id.findgroup_coordinator), \"You have to be logged in!\", Snackbar.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1431/buggy-version/android.app.src.main.java.com.example.q.shareplaylist.FindGroup.java", "BodyUseAPI": [], "Fixed commit": "39af64868228d1a9f2f7f69c50868c4c6dfb3684", "Url": "https://api.github.com/repos/HwangheeKim/SharePlaylist", "Date": "2017-01-24T14:20:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["imageXObject.getStream().getFilters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (filters != null) { for (org.verapdf.features.pb.objects.COSName filter : filters) { this.filterNames.add(filter.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5384/buggy-version/pdfbox-feature-reporting.src.main.java.org.verapdf.features.pb.objects.PBImageXObjectFeaturesObjectAdapter.java", "BodyUseAPI": [], "Fixed commit": "3cc577835fcc39363ca9ad8bfba0b10eefd96532", "Url": "https://api.github.com/repos/veraPDF/veraPDF-pdfbox-validation", "Date": "2017-04-10T12:18:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.painlessshopping.mohamed.findit.CustomAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.painlessshopping.mohamed.findit.CartInfoProvider.getCart().contains(item)) { android.widget.ImageView imageView = ((android.widget.ImageView) (convertView.findViewById(R.id.addCart))); imageView.setImageResource(R.drawable.ic_shopping_cart_black_24dp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4655/buggy-version/src.main.java.com.painlessshopping.mohamed.findit.CustomAdapter.java", "BodyUseAPI": [], "Fixed commit": "4b7378bbba8f5905b28a50e87ecbdefd623c2fe2", "Url": "https://api.github.com/repos/FindItPS/Find-It-Android", "Date": "2017-01-07T01:08:06Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fields != null) { page = getPageContent(link, fields); logger.debug(page.outerHtml()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3631/buggy-version/src.pw.thedrhax.mosmetro.authenticator.Authenticator.java", "BodyUseAPI": ["pw.thedrhax.mosmetro.authenticator.Authenticator.getPageContent(java.lang.String,java.lang.String)"], "Fixed commit": "3521e9bf30f404e643fcd7168e773bf1970ee544", "Url": "https://api.github.com/repos/mosmetro-android/mosmetro-android", "Date": "2016-02-29T21:18:03Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRefreshLayout) != null) { if (mRefreshLayout.equalsOnHookUIRefreshCompleteCallback(mHookUIRefreshCompleteCallBack)) mRefreshLayout.setOnHookUIRefreshCompleteCallback(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3670/buggy-version/library.src.main.java.me.dkzwm.smoothrefreshlayout.extra.header.MaterialHeader.java", "BodyUseAPI": [], "Fixed commit": "7127f9ae0b3cc06b05c4cab5016caced61113706", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2017-06-28T09:14:42Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Integer.valueOf(cards.get(i).getRank()).equals(cards.get((i + 1)).getRank())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2597/buggy-version/Evaluate.java", "BodyUseAPI": [], "Fixed commit": "7f83ce6f0ba5aaeaf2234e067f9429d6ca04fdf0", "Url": "https://api.github.com/repos/FilipeBicho/Heads-Up-Texas-Hold-em-English-", "Date": "2017-10-28T23:35:04Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((style) == (org.cocoa4android.ui.UITableView.UITableViewStyle.UITableViewStyleGrouped)) { listView.setDivider(new android.graphics.drawable.ColorDrawable(backgroundColor.getColor())); listView.setDividerHeight(1); if ((cellSeparatorStyle) != null) { this.setSeparatorStyle(cellSeparatorStyle); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6469/buggy-version/Cocoa4Android.src.org.cocoa4android.ui.UITableView.java", "BodyUseAPI": [], "Fixed commit": "b4e686636d23de4e9b2438c6b1a9e3935060ddef", "Url": "https://api.github.com/repos/youmumzgit/Cocoa4Android", "Date": "2012-12-03T08:32:42Z"},
{"Line": "=>1013", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sync) { content.force(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5784/buggy-version/concourse-server.src.main.java.org.cinchapi.concourse.server.storage.temp.Buffer.java", "BodyUseAPI": [], "Fixed commit": "6940c7da7c4eabc5af07cca513c86403ff99123f", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2015-02-28T18:00:19Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state.isEmpty()) { return null; }else { return state; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5152/buggy-version/rx2-savestate.src.main.java.com.twistedequations.rx2state.internal.RxSaveStateFragment.java", "BodyUseAPI": [], "Fixed commit": "524132bd470c82b6a45c7a36556d14626caf3cda", "Url": "https://api.github.com/repos/patrick-doyle/android-rxstate", "Date": "2017-01-05T00:34:30Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state.isEmpty()) { return null; }else { return state; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5152/buggy-version/rx-savestate.src.main.java.com.twistedequations.rxstate.internal.RxSaveStateFragment.java", "BodyUseAPI": [], "Fixed commit": "524132bd470c82b6a45c7a36556d14626caf3cda", "Url": "https://api.github.com/repos/patrick-doyle/android-rxstate", "Date": "2017-01-05T00:34:30Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (server.readyClients.contains(this)) { server.readyClients.remove(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5969/buggy-version/orbit.core.src.orbit.OrbitServerThread.java", "BodyUseAPI": ["server.readyClients.remove(orbit.OrbitServerThread)"], "Fixed commit": "dfd4c5a6ef23f80bac0f706321b20ff86c4ba37b", "Url": "https://api.github.com/repos/kyle-v/orbit", "Date": "2015-04-26T01:13:04Z"},
{"Line": "=>2268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m.get(\"grants\")) != null) p.setGrantLogins(new java.util.HashSet<java.lang.String>(((java.util.List<java.lang.String>) (m.get(\"grants\")))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6713/buggy-version/araqne-logdb-client.src.main.java.org.araqne.logdb.client.LogDbClient.java", "BodyUseAPI": ["org.araqne.logdb.client.ProcedureInfo.setGrantLogins(java.util.HashSet<java.lang.String>)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "a4d711f9c4edf416872550f014153b7bbedcbb06", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2016-02-21T11:19:31Z"},
{"Line": "=>2271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m.get(\"grant_groups\")) != null) p.setGrantGroups(new java.util.HashSet<java.lang.String>(((java.util.List<java.lang.String>) (m.get(\"grant_groups\")))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6713/buggy-version/araqne-logdb-client.src.main.java.org.araqne.logdb.client.LogDbClient.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "org.araqne.logdb.client.ProcedureInfo.setGrantGroups(java.util.HashSet<java.lang.String>)"], "Fixed commit": "a4d711f9c4edf416872550f014153b7bbedcbb06", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2016-02-21T11:19:31Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getView().getSupportFragmentManager().isDestroyed()) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3495/buggy-version/common-ui.src.main.java.org.opensilk.common.ui.mortarfragment.FragmentManagerOwner.java", "BodyUseAPI": [], "Fixed commit": "5f3d27688a19d28bfbc23b5946a62c7b40ca7b49", "Url": "https://api.github.com/repos/Zillode/syncthing-silk", "Date": "2015-07-24T07:22:07Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileInfo == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9057/buggy-version/seadas-processing.src.main.java.gov.nasa.gsfc.seadas.processing.general.FilenamePatterns.java", "BodyUseAPI": [], "Fixed commit": "1c7a7b8f5066d8bef415dfa902e936e35d4cfbdb", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2013-03-21T15:41:38Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (geoFile == null) { if ((possibleGeoFiles.size()) > 0) { geoFile = possibleGeoFiles.get(0); }else { geoFile = new java.io.File(\"yourGeoFilename.geo\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9057/buggy-version/seadas-processing.src.main.java.gov.nasa.gsfc.seadas.processing.general.FilenamePatterns.java", "BodyUseAPI": [], "Fixed commit": "1c7a7b8f5066d8bef415dfa902e936e35d4cfbdb", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2013-03-21T15:41:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.gsfc.seadas.processing.general.FilenamePatterns.getGeoFile(gov.nasa.gsfc.seadas.processing.general.FileInfo)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (geoFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9057/buggy-version/seadas-processing.src.main.java.gov.nasa.gsfc.seadas.processing.general.FilenamePatterns.java", "BodyUseAPI": [], "Fixed commit": "1c7a7b8f5066d8bef415dfa902e936e35d4cfbdb", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2013-03-21T15:41:38Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usageEvent == (org.openstack.atlas.service.domain.events.UsageEvent.DELETE_LOADBALANCER)) { usageRecordToProcess.setNumVips(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7882/buggy-version/persistence.src.main.java.org.openstack.atlas.usagerefactor.processor.impl.UsageEventProcessorImpl.java", "BodyUseAPI": [], "Fixed commit": "3e1956b8bbdb1fa7887c411111943bf6d117773d", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-05-22T21:24:14Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7595/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "6721f4fb034ce65d19b9f96107e18952227fcaa5", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["datum.getMetrics().getEntry(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((java.lang.Math.abs((point - (median)))) < 1.0E-5) { return 0; }else { return (java.lang.Math.abs((point - (median)))) / (MAD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7199/buggy-version/src.main.java.macrobase.analysis.stats.MAD.java", "BodyUseAPI": ["java.lang.Math.abs(double)"], "Fixed commit": "a1c31fb8c878ebd1d97030d43e8a3149ffb863ac", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2016-07-26T19:05:46Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(station.isInitialized())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6894/buggy-version/common.buildcraft.robotics.ai.AIRobotSearchStation.java", "BodyUseAPI": [], "Fixed commit": "528e6449e3dfaf65e4dc95e96e2be5369bb1e2df", "Url": "https://api.github.com/repos/AlexIIL/BuildCraft", "Date": "2015-07-27T22:52:26Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numPassengers <= 0) { throw new java.lang.IllegalArgumentException(\"The number of passengers must be greater than 0.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1423/buggy-version/Project1.src.cscie55.hw1.elevator.Elevator.java", "BodyUseAPI": [], "Fixed commit": "e35ee522a2e6a212fc3f80980b4acdcc79a9ecb2", "Url": "https://api.github.com/repos/ilsteiner/DistribuitedComputingCourse", "Date": "2015-02-11T01:10:14Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ah.getAccount(obj.getString(\"sharedUsername\"))) == null) { return postit.server.ServerMessagePackager.createResponse(false, \"\", \"Shared user does not exist.\", asset, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3469/buggy-version/server.src.main.java.postit.server.controller.RequestHandler.java", "BodyUseAPI": [], "Fixed commit": "126dc59d160a061c2c1bd0a58ccc2f5b18d136a0", "Url": "https://api.github.com/repos/jjl284/postit", "Date": "2017-04-21T01:00:35Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(table.startsWith(\"E_\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7047/buggy-version/sqlg-core.src.main.java.org.umlg.sqlg.structure.SqlgStartupManager.java", "BodyUseAPI": [], "Fixed commit": "264911ccb686d0926c27540c6383d48694b6d724", "Url": "https://api.github.com/repos/s-nel/sqlg", "Date": "2017-05-31T01:37:46Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(table.startsWith(\"E_\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7047/buggy-version/sqlg-core.src.main.java.org.umlg.sqlg.structure.SqlgStartupManager.java", "BodyUseAPI": [], "Fixed commit": "264911ccb686d0926c27540c6383d48694b6d724", "Url": "https://api.github.com/repos/s-nel/sqlg", "Date": "2017-05-31T01:37:46Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(table.startsWith(\"V_\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7047/buggy-version/sqlg-core.src.main.java.org.umlg.sqlg.structure.SqlgStartupManager.java", "BodyUseAPI": [], "Fixed commit": "264911ccb686d0926c27540c6383d48694b6d724", "Url": "https://api.github.com/repos/s-nel/sqlg", "Date": "2017-05-31T01:37:46Z"},
{"Line": "=>1015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rs.wasNull()) dp.setTemplateId(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4536/buggy-version/Core.src.com.serotonin.m2m2.db.dao.DataPointDao.java", "BodyUseAPI": [], "Fixed commit": "1a986812eebd0486c89cbb4bdb27b4872be67e60", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2015-02-27T00:45:22Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rs.wasNull()) dp.setTemplateId(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4536/buggy-version/Core.src.com.serotonin.m2m2.db.dao.DataPointDao.java", "BodyUseAPI": [], "Fixed commit": "1a986812eebd0486c89cbb4bdb27b4872be67e60", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2015-02-27T00:45:22Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.runningracehisotry.utilities.CustomSharedPreferences.getPreferences(Constants.PREF_USER_ID,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(userId.isEmpty())) { if ((userId != null) && ((userId.length()) > 0)) { com.runningracehisotry.utilities.LogUtil.d(Constants.LOG_TAG, (\"METHOD_REMOVE_LIKE user ID: \" + userId)); if ((listRaceDetail.keySet().size()) > 0) { java.util.Set<java.lang.String> keys = listRaceDetail.keySet(); for (java.lang.String key : keys) { java.util.List<com.runningracehisotry.models.Race> listRace = listRaceDetail.get(key); java.util.List<com.runningracehisotry.models.Race> listRaceTemp = new java.util.ArrayList<com.runningracehisotry.models.Race>(listRace); int i; int len = listRaceTemp.size(); for (i = 0; i < len; i++) { if ((listRace.get(i).getId()) == (this.likeRaceId)) { java.util.List<com.runningracehisotry.models.Like> likes = listRace.get(i).getLikes(); if ((likes != null) && ((likes.size()) > 0)) { int lenLike = likes.size(); for (int j = 0; j < lenLike; j++) { com.runningracehisotry.utilities.LogUtil.d(Constants.LOG_TAG, (\"METHOD_REMOVE_LIKE DONE IN: \" + (likes.get(j).getUserID()))); if (java.lang.String.valueOf(likes.get(j).getUserID()).equalsIgnoreCase(userId)) { com.runningracehisotry.utilities.LogUtil.d(Constants.LOG_TAG, \"METHOD_REMOVE_LIKE DONE IN IN\"); listRace.get(i).getLikes().remove(j); break; } } } com.runningracehisotry.utilities.LogUtil.d(Constants.LOG_TAG, \"METHOD_REMOVE_LIKE DONE\"); break; } } } } listRaceDetail = sortDataNew(listRaceDetail); if ((mRacesAdapter) != null) { mRacesAdapter.notifyDataSetChanged(); } }else { com.runningracehisotry.utilities.LogUtil.d(Constants.LOG_TAG, \"METHOD_REMOVE_LIKE user ID empty SNS?\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7691/buggy-version/runningRaceHisotry.src.main.java.com.runningracehisotry.RacesDetailActivity.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.equalsIgnoreCase(java.lang.String)", "com.runningracehisotry.utilities.LogUtil.d(Constants.LOG_TAG,java.lang.String)"], "Fixed commit": "8074ea5fa42e2440bd98edd26c87072ab353bd89", "Url": "https://api.github.com/repos/nvhaiwork/RunningRaceHisotry", "Date": "2015-05-07T06:19:06Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectedRace) == (com.runningracehisotry.constants.Constants.SELECT_RACE_OTHER)) { for (java.lang.String keyDetail : listRaceDetail.keySet()) { java.util.List<com.runningracehisotry.models.Race> temp = new java.util.ArrayList<com.runningracehisotry.models.Race>(listRaceDetail.get(keyDetail)); for (com.runningracehisotry.models.Race rTemp : temp) { com.runningracehisotry.utilities.LogUtil.d(Constants.LOG_TAG, (\"Call API get Like for race ID: \" + (rTemp.getId()))); com.runningracehisotry.webservice.base.GetLikeOfRaceRequest request = new com.runningracehisotry.webservice.base.GetLikeOfRaceRequest(rTemp.getId()); request.setListener(callBackEvent); new java.lang.Thread(request).start(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7691/buggy-version/runningRaceHisotry.src.main.java.com.runningracehisotry.RacesDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "8074ea5fa42e2440bd98edd26c87072ab353bd89", "Url": "https://api.github.com/repos/nvhaiwork/RunningRaceHisotry", "Date": "2015-05-07T06:19:06Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxPower) <= 0) { maxPower = buildcraft.transport.pipe.flow.PipeFlowPower.DEFAULT_MAX_POWER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4713/buggy-version/common.buildcraft.transport.pipe.flow.PipeFlowPower.java", "BodyUseAPI": [], "Fixed commit": "313c1e38112c5be7c96ee4955bdf57d7792827c3", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2017-01-22T00:47:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (locationTo == null) { return textUnknown; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9121/buggy-version/projects.TrackMe.src.at.software2014.trackme.ContactEntry.java", "BodyUseAPI": [], "Fixed commit": "a62209b14dcabdb300b5a506002cf8eb51297015", "Url": "https://api.github.com/repos/bodedejavu/sw14_free_29", "Date": "2014-06-10T17:17:49Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((y > 0) && (y < baseHeight)) && (position == 0)) { scrollVerticallyToPosition(1); }else { scrollVerticallyToPosition(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4229/buggy-version/library.src.main.java.com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView.java", "BodyUseAPI": ["com.github.ksoichiro.android.observablescrollview.ObservableRecyclerView.scrollVerticallyToPosition(int)"], "Fixed commit": "24981db706c2281bfe1cf9b3129f50345548beca", "Url": "https://api.github.com/repos/gnr/Android-ObservableScrollView", "Date": "2015-03-20T21:26:23Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (caseInsensitive) { absoluteCurrentFile = absoluteCurrentFile.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6815/buggy-version/compiler-jx.src.main.java.org.apache.flex.compiler.internal.codegen.js.JSWriter.java", "BodyUseAPI": [], "Fixed commit": "6b7bc48d1efabdb3d02ae14ea21fed12880a2eaa", "Url": "https://api.github.com/repos/apache/royale-compiler", "Date": "2017-09-28T22:33:11Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (caseInsensitive) { relativeToFilePath = relativeToFilePath.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6815/buggy-version/compiler-jx.src.main.java.org.apache.flex.compiler.internal.codegen.js.JSWriter.java", "BodyUseAPI": [], "Fixed commit": "6b7bc48d1efabdb3d02ae14ea21fed12880a2eaa", "Url": "https://api.github.com/repos/apache/royale-compiler", "Date": "2017-09-28T22:33:11Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCompositeKey) { compositeKeyInstance = getCompositeKeyInstance(metadata); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8483/buggy-version/src.kundera-cassandra.cassandra-ds-driver.src.main.java.com.impetus.kundera.client.cassandra.dsdriver.DSClient.java", "BodyUseAPI": [], "Fixed commit": "07101c6b64139dc004b48eb3465e7176ab798e03", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-03-27T09:30:01Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.jdbw.util.SQLWorker.top(java.lang.String,java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rowAsObjects == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3971/buggy-version/src.main.java.com.googlecode.jdbw.util.SQLWorker.java", "BodyUseAPI": [], "Fixed commit": "13489e2d4a66d1b285ec4e4435d6dbba7dc005e0", "Url": "https://api.github.com/repos/mabe02/jdbw", "Date": "2015-09-03T20:22:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.genreId) != null) { this.genre = this.em.find(it.unipv.se2.tmtkt.model.Genre.class, this.genreId); if (((seatId) != null) && ((seatId.intValue()) != 0)) { this.sector = this.em.find(it.unipv.se2.tmtkt.model.Seat.class, seatId).getSector(); }else { this.sector = this.em.find(it.unipv.se2.tmtkt.model.Sector.class, ((short) (1))); } this.priceScheme = priceSchemeController.subscriptionPrice(genre, sector, user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9061/buggy-version/tm-tkt.src.main.java.it.unipv.se2.tmtkt.controller.SubscriptionController.java", "BodyUseAPI": [], "Fixed commit": "5247e616c5d666b87ca85a85970cb9ef8161fed9", "Url": "https://api.github.com/repos/glgerard/tm-tkt", "Date": "2014-01-24T20:08:35Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isATV())) setUpNavigationFragment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1982/buggy-version/src.main.java.org.amahi.anywhere.activity.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "6cef8c3bdd8bf36f1a3d07738be4a8275f073c3c", "Url": "https://api.github.com/repos/octacode/android", "Date": "2017-06-09T13:40:26Z"},
{"Line": "=>860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((((scaffoldEngine != null) && ((scaffoldEngine.getConfig()) != null)) && ((scaffoldEngine.getConfig().getWorker()) != null)) && ((scaffoldEngine.getConfig().getWorker().getRunner()) != null)) && ((scaffoldEngine.getConfig().getWorker().getRunner().getWorkerConfiguration()) != null)) { final edu.mayo.mprc.config.ResourceConfig workerConfiguration = scaffoldEngine.getConfig().getWorker().getRunner().getWorkerConfiguration(); if (!(workerConfiguration instanceof edu.mayo.mprc.scaffold.ScaffoldWorker.Config)) { edu.mayo.mprc.utilities.exceptions.ExceptionUtilities.throwCastException(workerConfiguration, ScaffoldWorker.Config.class); return null; } final java.io.File scaffoldUnimod = new java.io.File(((edu.mayo.mprc.scaffold.ScaffoldWorker.Config) (workerConfiguration)).getScaffoldUnimod()); return scaffoldUnimod; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6398/buggy-version/services.swift-search.src.main.java.edu.mayo.mprc.swift.search.task.SearchRunner.java", "BodyUseAPI": ["scaffoldEngine.getConfig().getWorker().getRunner().getWorkerConfiguration()", "edu.mayo.mprc.swift.db.SearchEngine.getConfig()", "scaffoldEngine.getConfig().getWorker()", "scaffoldEngine.getConfig().getWorker().getRunner()"], "Fixed commit": "9a9954bbed0fc4b13df5b75e168eabfc0ae41809", "Url": "https://api.github.com/repos/romanzenka/swift", "Date": "2013-05-02T21:54:19Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layer.getName()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6593/buggy-version/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.internal.ui.CrsWidget.java", "BodyUseAPI": [], "Fixed commit": "6ce93e0686b1cc7dc0d83a5dfb99d69040ae7fd3", "Url": "https://api.github.com/repos/mapplus/spatial_statistics_for_geotools_udig", "Date": "2015-12-06T03:45:54Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layer.getName()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/6593/buggy-version/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.internal.ui.BoundingBoxWidget.java", "BodyUseAPI": [], "Fixed commit": "6ce93e0686b1cc7dc0d83a5dfb99d69040ae7fd3", "Url": "https://api.github.com/repos/mapplus/spatial_statistics_for_geotools_udig", "Date": "2015-12-06T03:45:54Z"},
{"Line": "=>1659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof wyil.lang.Type.Existential) { wyil.lang.Type.Existential x = ((wyil.lang.Type.Existential) (t)); data = x.nid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2375/buggy-version/src.wyil.lang.Type.java", "BodyUseAPI": [], "Fixed commit": "5de53545da72606711aacc1c38402d1ae630d374", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-09-04T02:37:38Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.length()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8262/buggy-version/src.logViewer.TableModel.java", "BodyUseAPI": [], "Fixed commit": "929c3373c7bbc27c428cc4d185839e4f2a753b3d", "Url": "https://api.github.com/repos/shubhamtagra/LogViewer", "Date": "2013-07-10T05:16:31Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matchedTaskIds.size()) == 0) { throw new java.util.NoSuchElementException(TaskData.messageNoResults); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3954/buggy-version/src.main.java.TaskData.java", "BodyUseAPI": [], "Fixed commit": "b43c064d19d9382ff7b79a84e7444309390a23ae", "Url": "https://api.github.com/repos/cs2103jan2015-t10-2j/main", "Date": "2015-04-01T21:31:43Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (selectedApi != null) { org.wso2.carbon.apimgt.gateway.handlers.security.Resource[] selectedAPIResources = selectedApi.getResources(); if ((selectedAPIResources.length) > 0) { for (org.apache.synapse.rest.dispatch.RESTDispatcher dispatcher : org.wso2.carbon.apimgt.gateway.handlers.security.RESTUtils.getDispatchers()) { org.wso2.carbon.apimgt.gateway.handlers.security.Resource resource = dispatcher.findResource(messageContext, java.util.Arrays.asList(selectedAPIResources)); if (resource != null) { selectedResource = resource; if (java.util.Arrays.asList(resource.getMethods()).contains(httpMethod)) { selectedResourceWithVerb = resource; break; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/975/buggy-version/components.apimgt.org.wso2.carbon.apimgt.gateway.src.main.java.org.wso2.carbon.apimgt.gateway.handlers.security.CORSRequestHandler.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.gateway.handlers.security.API.getResources()"], "Fixed commit": "084248d6754cbd2d0ea013a8117579aa9f7790a9", "Url": "https://api.github.com/repos/chamilaadhi/carbon-apimgt", "Date": "2016-01-25T04:28:08Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(propValues.isEmpty())) { for (java.lang.Object item : ((java.util.List<java.lang.Object>) (propValue))) { org.xtx.ut4converter.t3d.T3DUtils.write(sb, propName, item, prefix); sb.append(\",\"); } sb.deleteCharAt(((sb.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/4221/buggy-version/src.main.java.org.xtx.ut4converter.t3d.T3DUtils.java", "BodyUseAPI": [], "Fixed commit": "5e197b2bcd7d44aac30525a60e2bf795c79a6d70", "Url": "https://api.github.com/repos/xtremexp/UT4X-Converter", "Date": "2016-06-15T08:44:40Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) != 0) w.key(\"results\").value(((results) != null ? results : \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/2821/buggy-version/roquette.WEB-INF.src.LanceRequete.java", "BodyUseAPI": [], "Fixed commit": "ec568b00afa02dab029688d1ffe84f1ffc5b8bc0", "Url": "https://api.github.com/repos/batou9150/lo17a008", "Date": "2014-01-12T20:29:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((database) == null) database = new no.priv.garshol.duke.databases.LuceneDatabase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/7343/buggy-version/src.main.java.no.priv.garshol.duke.ConfigurationImpl.java", "BodyUseAPI": [], "Fixed commit": "74d8d929f97588b79eeda7293840fc52b5b06de4", "Url": "https://api.github.com/repos/fabriziofortino/Duke", "Date": "2014-02-16T11:13:39Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mergedFilters.isEmpty())) { this.filters.put(\"$and\", pushdownFilters); }else { this.filters = pushdownFilters; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3037/buggy-version/contrib.storage-mongo.src.main.java.org.apache.drill.exec.store.mongo.MongoRecordReader.java", "BodyUseAPI": [], "Fixed commit": "db86fd09ddb997e6f08ac32bf40d4b726662e7e5", "Url": "https://api.github.com/repos/kameshb/incubator-drill", "Date": "2014-09-12T13:10:51Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, org.md2k.autosense.antradio.connection.ChannelController>.get((((autoSensePlatform.getPlatformType()) + \":\") + (autoSensePlatform.getDeviceId())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (channelController != null) channelController.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/8398/buggy-version/autosense.src.main.java.org.md2k.autosense.antradio.connection.ServiceAutoSense.java", "BodyUseAPI": ["org.md2k.autosense.antradio.connection.ChannelController.close()"], "Fixed commit": "0af4cb780bdfafedd5d4012b85a072618680489c", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-AutoSense", "Date": "2016-03-28T11:42:33Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (currentDN != null) { taskman.ticket10163.Main.replaceOrDelete(attrMap, taskman.ticket10163.Main.ATTR_PHONE, currentDN); taskman.ticket10163.Main.replaceOrDelete(attrMap, taskman.ticket10163.Main.ATTR_FAX, currentDN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/1349/buggy-version/10163.src.taskman.ticket10163.Main.java", "BodyUseAPI": ["taskman.ticket10163.Main.replaceOrDelete(java.util.Map<java.lang.String, java.lang.String>,java.lang.String,java.lang.String)", "taskman.ticket10163.Main.replaceOrDelete(java.util.Map<java.lang.String, java.lang.String>,java.lang.String,java.lang.String)"], "Fixed commit": "9268135b5aa9f62c047cfc2d2b2658e9e25c011a", "Url": "https://api.github.com/repos/andreimelis/taskman.eionet.europa.eu-10163", "Date": "2013-02-19T13:55:39Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMigration) == (receive_perkies)) { perkie.deleteAllPerkies(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9000/buggy-version/app.src.main.java.com.llp.lunchkaki.activities.MigrationActivity.java", "BodyUseAPI": [], "Fixed commit": "adc68d32e456f03204ede571b1eccb4365b046ad", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-04-22T12:37:13Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMigration) == (receive_requests)) { request.deleteAllRequests(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/9000/buggy-version/app.src.main.java.com.llp.lunchkaki.activities.MigrationActivity.java", "BodyUseAPI": [], "Fixed commit": "adc68d32e456f03204ede571b1eccb4365b046ad", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-04-22T12:37:13Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.grarak.kerneladiutor.utils.kernel.CPUVoltage.getVoltages()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (voltages != null) for (int i = 0; i < (mVoltageCard.length); i++) { mVoltageCard[i].setDescription(((voltages.get(i)) + (getString(R.string.mv)))); mVoltageCard[i].setValue(voltages.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/5047/buggy-version/app.src.main.java.com.grarak.kerneladiutor.fragments.kernel.CPUVoltageFragment.java", "BodyUseAPI": ["mVoltageCard[i].setDescription(((voltages.get(i)) + (getString(R.string.mv))))", "java.util.List<java.lang.String>.get(int)", "mVoltageCard[i].setValue(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "f5230d09248b570f81971e5cb06b819535cc4485", "Url": "https://api.github.com/repos/Grarak/KernelAdiutor", "Date": "2015-03-08T23:48:34Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (finished) (Player.lives)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V51/3338/buggy-version/LenzDefenz.src.data.Enemy.java", "BodyUseAPI": [], "Fixed commit": "52ce4c9969a4467e892d17cea47a4c38556930af", "Url": "https://api.github.com/repos/Orangensaft21/LenzDefenz", "Date": "2016-05-02T18:47:57Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.getStatus()) == (com.dianping.phoenix.lb.deploy.model.DeployAgentStatus.SUCCESS)) { endWithSuccess(); }else { endWithFail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/992/buggy-version/phoenix-load-balancer.src.main.java.com.dianping.phoenix.lb.deploy.agent.DefaultAgentClient.java", "BodyUseAPI": [], "Fixed commit": "5f807a2eb91c3a871f007c82e9f88431d3c075e9", "Url": "https://api.github.com/repos/atellwu/phoenix", "Date": "2013-12-13T10:15:35Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isContentTypePreservedHeader) { if ((msgCtx.getProperty(Constants.Configuration.CONTENT_TYPE)) != null) { return ((java.lang.String) (msgCtx.getProperty(Constants.Configuration.CONTENT_TYPE))); }else if ((msgCtx.getProperty(Constants.Configuration.MESSAGE_TYPE)) != null) { return ((java.lang.String) (msgCtx.getProperty(Constants.Configuration.MESSAGE_TYPE))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4067/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.passthru.util.TargetRequestFactory.java", "BodyUseAPI": [], "Fixed commit": "18214c54cbff519f12a3917abea475041a42954e", "Url": "https://api.github.com/repos/Buddhima/wso2-synapse", "Date": "2016-05-25T05:51:38Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (t != null) { for (org.bukkit.entity.Entity t_ : t.getChunk().getEntities()) { if ((t_.getType()) == (org.bukkit.entity.EntityType.DROPPED_ITEM)) { t_.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8968/buggy-version/src.com.comze_instancelabs.mgskywars.IArena.java", "BodyUseAPI": ["org.bukkit.Location.getChunk()", "t.getChunk().getEntities()"], "Fixed commit": "af948bd0d0cc987b9efa9717efcc45eb6a0a0c84", "Url": "https://api.github.com/repos/MC-Minigames/MGSkyWars", "Date": "2014-12-16T17:40:14Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rule.length) > 1) domain = rule[1];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7717/buggy-version/BE.nnCloudRESTService.src.main.java.com.mycompany.nncloudrestservice.misc.ActivationFunctionParser.java", "BodyUseAPI": [], "Fixed commit": "36336972fbeb5d3eb1287d6054364c0b3f87169a", "Url": "https://api.github.com/repos/kowalt/nnCloud", "Date": "2016-10-06T19:13:42Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((info.flags) & (FLAG_NO_HISTORY)) != 0) || (com.lody.virtual.server.am.ActivityStack.containFlags(intent, Intent.FLAG_ACTIVITY_NO_HISTORY))) { targetIntent.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/701/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.server.am.ActivityStack.java", "BodyUseAPI": [], "Fixed commit": "075a36bb66f16a2a53f52d2d002e1c7295cba9b6", "Url": "https://api.github.com/repos/hhkhub/VirtualApp", "Date": "2017-03-22T13:25:50Z"},
{"Line": "=>1065", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.equals(\"about:blank\"))) { appView.loadUrl(\"javascript:try{ PhoneGap.onNativeReady.fire();}catch(e){_nativeReady = true;}\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3985/buggy-version/framework.src.com.phonegap.DroidGap.java", "BodyUseAPI": [], "Fixed commit": "10e1808c5671ae15b11fa5bb9eb48f3228b2d8f8", "Url": "https://api.github.com/repos/macdonst/phonegap-android", "Date": "2011-05-31T20:11:02Z"},
{"Line": "=>1085", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.equals(\"about:blank\")) { if ((this.ctx.callbackServer) != null) { this.ctx.callbackServer.destroy(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3985/buggy-version/framework.src.com.phonegap.DroidGap.java", "BodyUseAPI": [], "Fixed commit": "10e1808c5671ae15b11fa5bb9eb48f3228b2d8f8", "Url": "https://api.github.com/repos/macdonst/phonegap-android", "Date": "2011-05-31T20:11:02Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((trList.size()) == 0) { trList = doc.select(\"table:has(input[type=checkbox]) tr\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8889/buggy-version/opacclient.libopac.src.main.java.de.geeksfactory.opacclient.apis.BiBer1992.java", "BodyUseAPI": [], "Fixed commit": "f6e5ed5131c7765d05027840118004f9b2c1d32f", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2017-05-28T14:56:15Z"},
{"Line": "=>954", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numEvaluationEntities == 0) { nameValues = new java.util.ArrayList[50]; }else { nameValues = new java.util.ArrayList[numEvaluationEntities * 50]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5901/buggy-version/src.main.java.com.appdynamics.bmc.bppmClient.SendADNotificationToBPPM.java", "BodyUseAPI": [], "Fixed commit": "ac326d6fc136cf8861e2534483bf05106777e5e4", "Url": "https://api.github.com/repos/Appdynamics/bppm-alerting-extension", "Date": "2014-06-25T00:56:57Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((nameValues == null) || (name == null)) || (dataType == null)) || (valueObject == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5901/buggy-version/src.main.java.com.appdynamics.bmc.bppmClient.SendADNotificationToBPPM.java", "BodyUseAPI": [], "Fixed commit": "ac326d6fc136cf8861e2534483bf05106777e5e4", "Url": "https://api.github.com/repos/Appdynamics/bppm-alerting-extension", "Date": "2014-06-25T00:56:57Z"},
{"Line": "=>1080", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((argsIndex - 1) == (com.appdynamics.bmc.bppmClient.SendADNotificationToBPPM.PVN_NUM_OF_EVAL_ENTITIES_INDEX)) { parmIndex = 29; argsIndex++; }else { com.appdynamics.bmc.bppmClient.SendADNotificationToBPPM.setNameValuePair(nameValues[0], com.appdynamics.bmc.bppmClient.SendADNotificationToBPPM.pvnParmsAndTypes[parmIndex][2], args[(argsIndex++)], com.appdynamics.bmc.bppmClient.SendADNotificationToBPPM.pvnParmsAndTypes[parmIndex][1]); parmIndex++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5901/buggy-version/src.main.java.com.appdynamics.bmc.bppmClient.SendADNotificationToBPPM.java", "BodyUseAPI": [], "Fixed commit": "ac326d6fc136cf8861e2534483bf05106777e5e4", "Url": "https://api.github.com/repos/Appdynamics/bppm-alerting-extension", "Date": "2014-06-25T00:56:57Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getBytes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bytes != null) { try { java.io.ByteArrayInputStream bais; bais = new java.io.ByteArrayInputStream(bytes); newImage = javax.imageio.ImageIO.read(bais); } catch (java.io.IOException ex) { java.util.logging.Logger.getLogger(examproject2017.DAL.VolunteerHandler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); newImage = null; } }else { newImage = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4828/buggy-version/ExamProject2017.src.examproject2017.DAL.VolunteerHandler.java", "BodyUseAPI": [], "Fixed commit": "07e1bd90930f70f0c22ba7ba7c5af00b9dc92384", "Url": "https://api.github.com/repos/ingvarorn87/FinalProjectEyjafjallajokull", "Date": "2017-05-27T10:47:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.berkeley.eduride.editoroverlay.BoxConstrainedEditorOverlay.ensureInstalled(org.eclipse.ui.IEditorPart)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(evkl.isTurnedOn())) { evkl.toggle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7312/buggy-version/authoring.plugin.src.handlers.BCEOCreateHandler.java", "BodyUseAPI": ["edu.berkeley.eduride.editoroverlay.BoxConstrainedEditorOverlay.toggle()"], "Fixed commit": "e4265da6f4d72e505f26c0fe14b4fcc99d120f60", "Url": "https://api.github.com/repos/IDE4edu/instructors", "Date": "2014-02-28T23:11:55Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSettingsView) != null) { return super.onInterceptTouchEvent(ev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4107/buggy-version/app.src.main.java.org.exalm.tabletkat.statusbar.tablet.NotificationPanel.java", "BodyUseAPI": [], "Fixed commit": "dd72e8d1ad1c891924f55ba39777555a6182dd60", "Url": "https://api.github.com/repos/Exalm/tabletkat", "Date": "2014-09-22T18:42:31Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSettingsView) != null) { return super.onTouchEvent(ev); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4107/buggy-version/app.src.main.java.org.exalm.tabletkat.statusbar.tablet.NotificationPanel.java", "BodyUseAPI": [], "Fixed commit": "dd72e8d1ad1c891924f55ba39777555a6182dd60", "Url": "https://api.github.com/repos/Exalm/tabletkat", "Date": "2014-09-22T18:42:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(country_raw.equals(\"\"))) this.country_id = java.lang.Integer.parseInt(country_raw); else this.country_id = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3267/buggy-version/AmazingPetDirectory.src.directory.adt.amazingpetdirectory.LoginConnector.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "4d76b8c0e851f043a1cc99e0fe05082fb373da64", "Url": "https://api.github.com/repos/rayrayj92/APD", "Date": "2015-01-29T01:20:32Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subscriptionDownloader) != null) subscriptionDownloader.get(1, java.util.concurrent.TimeUnit.MINUTES);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5695/buggy-version/src.info.bottiger.podcast.service.PodcastDownloadManager.java", "BodyUseAPI": [], "Fixed commit": "3325d66dd52da704f9ae38ac48923a08b3818bfe", "Url": "https://api.github.com/repos/bottiger/SoundWaves", "Date": "2013-02-04T23:45:19Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((info.bottiger.podcast.SwipeActivity.gReader) != null) { subscriptionDownloader = SwipeActivity.gReader.getSubscriptionsFromReader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5695/buggy-version/src.info.bottiger.podcast.service.PodcastDownloadManager.java", "BodyUseAPI": [], "Fixed commit": "3325d66dd52da704f9ae38ac48923a08b3818bfe", "Url": "https://api.github.com/repos/bottiger/SoundWaves", "Date": "2013-02-04T23:45:19Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.os.Environment.getExternalStorageState()) == (android.os.Environment.MEDIA_MOUNTED)) || (!(info.bottiger.podcast.provider.DiskLruImageCache.Utils.isExternalStorageRemovable()))) cachePath = info.bottiger.podcast.provider.DiskLruImageCache.Utils.getExternalCacheDir(context).getPath(); else cachePath = context.getCacheDir().getPath();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5695/buggy-version/src.info.bottiger.podcast.provider.DiskLruImageCache.java", "BodyUseAPI": [], "Fixed commit": "3325d66dd52da704f9ae38ac48923a08b3818bfe", "Url": "https://api.github.com/repos/bottiger/SoundWaves", "Date": "2013-02-04T23:45:19Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.languagetool.tokenizers.de.GermanCompoundTokenizer.tokenize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((compoundedWord.size()) > 1) { word = org.languagetool.tools.StringTools.uppercaseFirstChar(compoundedWord.get(((compoundedWord.size()) - 1))); }else { word = compoundedWord.get(((compoundedWord.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3342/buggy-version/languagetool-language-modules.de.src.main.java.org.languagetool.tagging.de.GermanTagger.java", "BodyUseAPI": ["org.languagetool.tools.StringTools.uppercaseFirstChar(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "92ba7d7ea197caab1bafaae1d64ca4dea65fb561", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2017-09-18T16:55:02Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((config.getInt(ProducerConfig.MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION)) != 1) { throw new org.apache.kafka.common.config.ConfigException(((\"Must set '\" + (ProducerConfig.MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION)) + \"' to 1 inorder to use the idempotent producer.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4688/buggy-version/clients.src.main.java.org.apache.kafka.clients.producer.KafkaProducer.java", "BodyUseAPI": [], "Fixed commit": "dfd6ae6b795c86674e7d67267df4be36174870bc", "Url": "https://api.github.com/repos/confluentinc/kafka", "Date": "2017-02-24T21:20:21Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((config.getInt(ProducerConfig.RETRIES_CONFIG)) == 0) { throw new org.apache.kafka.common.config.ConfigException(((\"Need to set '\" + (ProducerConfig.RETRIES_CONFIG)) + \"' to greater than zero inorder to use the idempotent producer.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4688/buggy-version/clients.src.main.java.org.apache.kafka.clients.producer.KafkaProducer.java", "BodyUseAPI": [], "Fixed commit": "dfd6ae6b795c86674e7d67267df4be36174870bc", "Url": "https://api.github.com/repos/confluentinc/kafka", "Date": "2017-02-24T21:20:21Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ie == null) { throw new java.lang.NullPointerException(\"IndexEntity can't be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2357/buggy-version/src.main.java.com.deusdatsolutions.migrantverde.handlers.IndexHandler.java", "BodyUseAPI": [], "Fixed commit": "c34b78a9f86d34f09ffa0266ef57da8ba4cfb49e", "Url": "https://api.github.com/repos/deusdat/migrantverde", "Date": "2016-07-24T05:27:00Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lists.get(position).order) < 9999) { (lists.get(position).order)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8693/buggy-version/app.src.main.java.com.liamfruzyna.android.lister.DialogFragments.SortListsDialog.java", "BodyUseAPI": ["java.util.List<com.liamfruzyna.android.lister.Data.WishList>.get(int)"], "Fixed commit": "60936c9faad717aa4b6d354bc68cb610e2a248fa", "Url": "https://api.github.com/repos/mail929/Lister", "Date": "2015-12-15T02:06:59Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (discountMasterData != null) { if (((discountMasterData.getDiscountRate()) != null) && ((billingOrderData.getBillStartDate().after(discountMasterData.getDiscountStartDate().toDate())) || ((billingOrderData.getBillStartDate().compareTo(discountMasterData.getDiscountStartDate().toDate())) == 0))) { if (discountMasterData.getDiscountType().equalsIgnoreCase(\"percentage\")) { discountAmount = price.multiply(discountMasterData.getDiscountRate().divide(new java.math.BigDecimal(100), java.math.RoundingMode.HALF_UP)); price = price.subtract(discountAmount); }else if (discountMasterData.getDiscountType().equalsIgnoreCase(\"flat\")) { price = price.subtract(discountMasterData.getDiscountRate()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1654/buggy-version/obsplatform.src.main.java.org.mifosplatform.finance.billingorder.service.GenerateDisconnectionBill.java", "BodyUseAPI": ["org.mifosplatform.billing.discountmaster.data.DiscountMasterData.getDiscountRate()", "java.math.BigDecimal.subtract(discountMasterData.getDiscountRate())", "org.mifosplatform.billing.discountmaster.data.DiscountMasterData.getDiscountRate()", "billingOrderData.getBillStartDate().compareTo(discountMasterData.getDiscountStartDate().toDate())", "org.mifosplatform.billing.discountmaster.data.DiscountMasterData.getDiscountStartDate()", "org.mifosplatform.billing.discountmaster.data.DiscountMasterData.getDiscountType()", "discountMasterData.getDiscountRate().divide(java.math.BigDecimal,java.math.RoundingMode)", "discountMasterData.getDiscountStartDate().toDate()", "discountMasterData.getDiscountType().equalsIgnoreCase(java.lang.String)", "discountMasterData.getDiscountType().equalsIgnoreCase(java.lang.String)", "java.math.BigDecimal.multiply(discountMasterData.getDiscountRate().divide(new java.math.BigDecimal(100), java.math.RoundingMode.HALF_UP))", "org.mifosplatform.billing.discountmaster.data.DiscountMasterData.getDiscountRate()", "discountMasterData.getDiscountStartDate().toDate()", "org.mifosplatform.billing.discountmaster.data.DiscountMasterData.getDiscountType()", "org.mifosplatform.billing.discountmaster.data.DiscountMasterData.getDiscountStartDate()", "billingOrderData.getBillStartDate().after(discountMasterData.getDiscountStartDate().toDate())"], "Fixed commit": "f348fa4a513a983ea1477d1bcfae610efc005231", "Url": "https://api.github.com/repos/kiranhugo/Project-One", "Date": "2015-07-06T09:30:07Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((price.compareTo(java.math.BigDecimal.ZERO)) != 0) { listOfTaxes = this.calculateTax(billingOrderData, price, disconnectionDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1654/buggy-version/obsplatform.src.main.java.org.mifosplatform.finance.billingorder.service.GenerateDisconnectionBill.java", "BodyUseAPI": ["org.mifosplatform.finance.billingorder.service.GenerateDisconnectionBill.calculateTax(org.mifosplatform.finance.billingorder.data.BillingOrderData,java.math.BigDecimal,org.joda.time.LocalDate)"], "Fixed commit": "f348fa4a513a983ea1477d1bcfae610efc005231", "Url": "https://api.github.com/repos/kiranhugo/Project-One", "Date": "2015-07-06T09:30:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (year.equals(\"\")) { core.Logger.log(Logger.TAG_CONSUME, \"Could not parse year from logs. So, SAT can not parse Main log.\"); SharedObjs.crsManagerPane.addLogLine(\"Could not find 'year' from bugreport. SAT will not parse main log.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6158/buggy-version/src.supportive.preanalyzers.logsparser.MainParser.java", "BodyUseAPI": [], "Fixed commit": "5b2e51665a7646abed79366e975bd14ca3d00ccb", "Url": "https://api.github.com/repos/cesarcardinali/SAT", "Date": "2015-10-28T18:10:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((AudioRecorderService.changeHistory.get(0)) != null) mTvGenericText.setText((\": \" + (AudioRecorderService.changeHistory.get(0).split(\": \")[1])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5552/buggy-version/src.edu.dartmouth.cs.audiorecorder.analytics.StressActivity.java", "BodyUseAPI": [], "Fixed commit": "cdea07511a954723d1fa261e237da1fa337a227e", "Url": "https://api.github.com/repos/bozhou94/SensorLabRecorder", "Date": "2013-07-18T19:16:17Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((AudioRecorderService.changeHistory.get(0)) != null) mTvGenericText.setText((\": \" + (AudioRecorderService.changeHistory.get(0).split(\": \")[1])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5552/buggy-version/src.edu.dartmouth.cs.audiorecorder.analytics.StressActivity.java", "BodyUseAPI": [], "Fixed commit": "cdea07511a954723d1fa261e237da1fa337a227e", "Url": "https://api.github.com/repos/bozhou94/SensorLabRecorder", "Date": "2013-07-18T19:16:17Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.design.widget.CoordinatorLayout.findViewById(R.id.top)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((((target.getTop()) + (top.getTop())) - dyUnconsumed) + 1) > ((target.getTop()) / 7)) && (dyUnconsumed > 0)) { top.offsetTopAndBottom((-dyUnconsumed)); back.offsetTopAndBottom(dyUnconsumed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7554/buggy-version/src.main.java.ui.FilmInfoBehavior.java", "BodyUseAPI": ["android.view.View.offsetTopAndBottom(int)", "android.view.View.offsetTopAndBottom(int)"], "Fixed commit": "5a111845160da8d1cf86f37f8ece6dbe37a8ae46", "Url": "https://api.github.com/repos/GreendaMi/movielineage", "Date": "2016-12-07T08:43:38Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["network.connection.TCPConnection.readPacket()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (distanceTable.update(new client.controller.DistancePacket(p.getData()))) { client.updateClients(distanceTable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2117/buggy-version/src.client.controller.NetworkController.java", "BodyUseAPI": ["client.controller.ClientController.updateClients(node.DistanceTable)"], "Fixed commit": "2648a18d13236c33c2d1cad2994faf511c6df439", "Url": "https://api.github.com/repos/Cotix/ChatProject", "Date": "2015-04-14T10:22:53Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((blank.length()) != (pattern.length())) { throw new java.lang.RuntimeException(\"Blank's length must match the pattern's length\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7480/buggy-version/openFaces.source.org.openfaces.renderkit.input.DateChooserRenderer.java", "BodyUseAPI": [], "Fixed commit": "72d8bcad1e0c47bc4dc0f42f033f63e6c965b2be", "Url": "https://api.github.com/repos/openfaces/OpenFaces", "Date": "2013-07-10T12:02:28Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sqlStat != null) { mergedSql = sqlStat.getSql(); }else { mergedSql = sql; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/55/buggy-version/src.main.java.com.alibaba.druid.filter.stat.StatFilter.java", "BodyUseAPI": ["com.alibaba.druid.stat.JdbcSqlStat.getSql()"], "Fixed commit": "7278cd3e94082927009ed67f6c21cefd2aaaa9a3", "Url": "https://api.github.com/repos/FlakyTestDetection/druid", "Date": "2017-09-11T13:22:14Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((others.get(pseudo)) != null) { others.get(pseudo).remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2334/buggy-version/ProjetIndustriel.app.src.main.java.miage.projetindustriel.controller.MapsActivity.java", "BodyUseAPI": ["others.get(pseudo).remove()", "java.util.HashMap<java.lang.String, com.google.android.gms.maps.model.Marker>.get(java.lang.String)"], "Fixed commit": "b5130b430d29fe88d11761e29252a6518844b7d4", "Url": "https://api.github.com/repos/ArthurMourey/ProjetIndustriel", "Date": "2017-01-25T12:38:28Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (timer)) { timer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/246/buggy-version/src.uk.ac.horizon.observer.vc.PlacesFragment.java", "BodyUseAPI": [], "Fixed commit": "3d19b32553e08b84489da31a44669ae8398a628b", "Url": "https://api.github.com/repos/pszjmb1/observer", "Date": "2014-02-08T15:41:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.topsun.posclient.datamodel.PartSales.getItemList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (items.get(i).getItemType().equals(AppConstants.ITEM_TYPE_RETURNED)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4577/buggy-version/com.topsun.posclient.sales.core.src.com.topsun.posclient.sales.core.PartSalesPrintData.java", "BodyUseAPI": [], "Fixed commit": "39de4c9a5b0abb34e80c902cd95a871245e8fa24", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2014-02-21T00:22:42Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count % 2) == 0) { inQuote = false; sb.append(cur); }else { sb.append(cur); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2167/buggy-version/src.edu.ucla.cs.mine.PredicatePatternMiner.java", "BodyUseAPI": [], "Fixed commit": "5484b1de0475ba35197f8e8a9a4967b5ff101b08", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-17T01:54:58Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user != null) { forecasts = DB.ForecastDB.getForecasts(user.getEmail()); }else { forecasts = DB.ForecastDB.getForecasts(admin.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/861/buggy-version/src.java.Controllers.ForecastController.java", "BodyUseAPI": ["DB.ForecastDB.getForecasts(user.getEmail())", "Beans.User.getEmail()"], "Fixed commit": "1b557fa59a858c2fb88420fa7c0507e32f5a76c0", "Url": "https://api.github.com/repos/StephenWeber11/WXForecaster", "Date": "2017-04-30T01:30:25Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user != null) { forecast.setForecasterEmail(user.getEmail()); }else { forecast.setForecasterEmail(admin.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/861/buggy-version/src.java.Controllers.ForecastController.java", "BodyUseAPI": ["Beans.User.getEmail()", "Beans.Forecast.setForecasterEmail(user.getEmail())"], "Fixed commit": "1b557fa59a858c2fb88420fa7c0507e32f5a76c0", "Url": "https://api.github.com/repos/StephenWeber11/WXForecaster", "Date": "2017-04-30T01:30:25Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user != null) { from = user.getEmail(); }else { from = admin.getEmail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/861/buggy-version/src.java.Controllers.ForecastController.java", "BodyUseAPI": ["Beans.User.getEmail()"], "Fixed commit": "1b557fa59a858c2fb88420fa7c0507e32f5a76c0", "Url": "https://api.github.com/repos/StephenWeber11/WXForecaster", "Date": "2017-04-30T01:30:25Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user != null) { sb.append(user.getEmail()); }else { sb.append(admin.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/861/buggy-version/src.java.Controllers.ForecastController.java", "BodyUseAPI": ["java.lang.StringBuilder.append(user.getEmail())", "Beans.User.getEmail()"], "Fixed commit": "1b557fa59a858c2fb88420fa7c0507e32f5a76c0", "Url": "https://api.github.com/repos/StephenWeber11/WXForecaster", "Date": "2017-04-30T01:30:25Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(FileUtils.PATH_SEPARATOR)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (separatorIndex == ((mRemotePath.length()) - 1)) { java.lang.String remotePathTemp = mRemotePath.substring(0, ((mRemotePath.length()) - 1)); int separatorIndexTemp = remotePathTemp.lastIndexOf(FileUtils.PATH_SEPARATOR); return separatorIndexTemp < 0 ? remotePathTemp : remotePathTemp.substring((separatorIndexTemp + 1), remotePathTemp.length()); }else { return separatorIndex < 0 ? mRemotePath : mRemotePath.substring((separatorIndex + 1), mRemotePath.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8182/buggy-version/WebDAV.jackrabbit-webdav.src.com.owncloud.android.lib.resources.files.RemoteFile.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "640a7cdd9d84a28d2e7bb7280f57eae18930a952", "Url": "https://api.github.com/repos/tuacy/WebDav", "Date": "2015-07-09T13:27:16Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.Message.getOriginalDestination()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (origDest != null) { org.apache.activemq.util.ByteSequence origDestBytes = marshaller.marshal(origDest); origDestBytes.compact(); coreMessage.putBytesProperty(org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.AMQ_MSG_ORIG_DESTINATION, origDestBytes.data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6030/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.OpenWireMessageConverter.java", "BodyUseAPI": ["org.apache.activemq.wireformat.WireFormat.marshal(org.apache.activemq.command.ActiveMQDestination)"], "Fixed commit": "4dc1247b2eb764d056d0d027f1dd0a4fddec39f5", "Url": "https://api.github.com/repos/apache/activemq-artemis", "Date": "2016-02-18T12:52:32Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["message.getText().replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(noWhitespace.contains(\",\"))) { return com.google.common.collect.Lists.newArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2550/buggy-version/LazyFanSrc.src.main.java.Twitter.DMHandler.java", "BodyUseAPI": [], "Fixed commit": "0aba1ddc0b277f72074ccceb643438518c343da2", "Url": "https://api.github.com/repos/blulub/LazyFan", "Date": "2016-07-13T15:40:55Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (channels == null) { throw new java.lang.RuntimeException((\"This should not have happened. Command was \" + \"called with illegal signature\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5925/buggy-version/polly.core.src.commands.JoinCommand.java", "BodyUseAPI": [], "Fixed commit": "d99f72f0203d07b2bb206aa410a3dd6e053a002c", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2012-04-19T07:30:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state.isMoving) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8501/buggy-version/src.butterseal.src.edu.smcm.gamedev.butterseal.BSMap.java", "BodyUseAPI": [], "Fixed commit": "3becf502629a31059c036b9a98980d713afaf9dd", "Url": "https://api.github.com/repos/vermiculus/butterseal", "Date": "2013-11-27T03:51:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((source.getSrcID()) == null) || ((source.getSrcID()) == \"\")) || (source.getSrcID().equals(\"0\"))) { com.eventshop.eventshoplinux.DAO.rule.RuleDao rd = new com.eventshop.eventshoplinux.DAO.rule.RuleDao(); rd.registerDefaultRule(source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4905/buggy-version/EventshopJava.src.main.java.com.eventshop.eventshoplinux.service.DataSourceService.java", "BodyUseAPI": ["com.eventshop.eventshoplinux.DAO.rule.RuleDao.registerDefaultRule(com.eventshop.eventshoplinux.domain.datasource.DataSource)"], "Fixed commit": "acc061c1ee06a32de938041fb706366025adbdd9", "Url": "https://api.github.com/repos/spongpai/es", "Date": "2016-02-24T07:16:20Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gr.aueb.dmst.istlab.unixtools.dal.CustomCommandRepository.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (deserializedModel != null) { this.model.setCommands(deserializedModel.getCommands()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1860/buggy-version/eclipse-unix-plugin.src.main.java.gr.aueb.dmst.istlab.unixtools.actions.impl.DeserializeCustomCommandsAction.java", "BodyUseAPI": ["gr.aueb.dmst.istlab.unixtools.core.model.CustomCommandModel.setCommands(deserializedModel.getCommands())", "gr.aueb.dmst.istlab.unixtools.core.model.CustomCommandModel.getCommands()"], "Fixed commit": "dd906f6ea42253b362b648156e52dac71e6b92d6", "Url": "https://api.github.com/repos/istlab/eclipse-unix", "Date": "2015-08-20T11:48:13Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gr.aueb.dmst.istlab.unixtools.dal.CommandPrototypeRepository.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (deserializedModel != null) { this.model.setCommands(deserializedModel.getCommands()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1860/buggy-version/eclipse-unix-plugin.src.main.java.gr.aueb.dmst.istlab.unixtools.actions.impl.DeserializeCommandPrototypesAction.java", "BodyUseAPI": ["gr.aueb.dmst.istlab.unixtools.core.model.CommandPrototypeModel.getCommands()", "gr.aueb.dmst.istlab.unixtools.core.model.CommandPrototypeModel.setCommands(deserializedModel.getCommands())"], "Fixed commit": "dd906f6ea42253b362b648156e52dac71e6b92d6", "Url": "https://api.github.com/repos/istlab/eclipse-unix", "Date": "2015-08-20T11:48:13Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.redraskal.arcadia.Arcadia.getPlugin(me.redraskal.arcadia.Arcadia.class).getAPI().getGameManager().getGameState()) == (me.redraskal.arcadia.api.game.GameState.INGAME)) { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1992/buggy-version/src.main.java.me.redraskal.arcadia.listener.WorldListener.java", "BodyUseAPI": [], "Fixed commit": "3abd6d46c025bc7d7456091cb00330157cdbbd1c", "Url": "https://api.github.com/repos/ArcadiaPlugins/Arcadia-Spigot", "Date": "2017-06-24T18:06:29Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getMessage().getSOAPBody().getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (operationNode != null) { operationName = operationNode.getLocalName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5764/buggy-version/oscm-apiversioning-soapmgmt.javasrc.org.oscm.apiversioning.soapmgmt.parser.SoapRequestParser.java", "BodyUseAPI": ["org.w3c.dom.Node.getLocalName()"], "Fixed commit": "64d276e988d955aefc830d3decedbf599a67254d", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-02-25T07:27:19Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentLineData.length) == 4) { map.put(\"referenceValue\", currentLineData[3]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1944/buggy-version/obsplatform.src.main.java.org.mifosplatform.scheduledjobs.dataupload.service.DataUploadHelper.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "21ddb5dc281b96be44eb9c67419d5210b2c10fa0", "Url": "https://api.github.com/repos/karthikreddy556/Project-One", "Date": "2015-04-29T09:33:21Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.iplantc.core.uidiskresource.client.views.widgets.AbstractDiskResourceSelector.2.getInfoText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(com.google.common.base.Strings.isNullOrEmpty(infoText))) && (!(infoText.equalsIgnoreCase(I18N.APPS_MESSAGES.nonDefaultFolderWarning())))) { setInfoErrorText(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4117/buggy-version/src.main.java.org.iplantc.core.uidiskresource.client.views.widgets.AbstractDiskResourceSelector.java", "BodyUseAPI": [], "Fixed commit": "20cef94360b89ab89746facdc457ed4ca34d451a", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/ui-disk-resource-module", "Date": "2014-02-11T20:03:02Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((query) == null) && ((rid) == null)) if (clazz == null) query = database.command(new com.orientechnologies.orient.core.sql.query.OSQLAsynchQuery<com.orientechnologies.orient.core.record.impl.ODocument>(\"select from V\", this)); else query = database.command(new com.orientechnologies.orient.core.sql.query.OSQLAsynchQuery<com.orientechnologies.orient.core.record.impl.ODocument>((\"select from \" + (clazz.getName())), this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/576/buggy-version/graphdb.src.main.java.com.orientechnologies.orient.graph.sql.OCommandExecutorSQLDeleteVertex.java", "BodyUseAPI": [], "Fixed commit": "b7c0499de5461e3b7264c0be0f85ae3849577888", "Url": "https://api.github.com/repos/w3aponx/orientdb", "Date": "2014-02-19T14:06:29Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPage) > 1) url += \"&page=\" + (mPage);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/127/buggy-version/hipda.src.main.java.net.jejer.hipda.async.SimpleListLoader.java", "BodyUseAPI": [], "Fixed commit": "507bfd9d60891c78c0ac4db9b65b5b596464eeb8", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2015-04-22T11:31:00Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataSnapshot.child(query.getQuestion().getUser_id()).child(\"isDoctor\").getValue(java.lang.Boolean.class)) { userNameTextView.setTextColor(-11613597); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8070/buggy-version/app.src.main.java.com.silk.smartdoc.View.AnswerResponse.java", "BodyUseAPI": [], "Fixed commit": "2b4832607fa6d4bebbf3a62607e33f2b0eba502b", "Url": "https://api.github.com/repos/mmjindal2555/SmartDoc", "Date": "2017-05-26T09:06:48Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rc.isCoreReady()) && ((brain.leaderMovingInDirection) != null)) { betterScouting.Direction dirToMove = rc.getLocation().directionTo(brain.leaderLocation.add(brain.leaderMovingInDirection)); betterScouting.Entity.move(rc, brain, dirToMove, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/578/buggy-version/betterScouting.Soldier.java", "BodyUseAPI": ["rc.getLocation().directionTo(brain.leaderLocation.add(brain.leaderMovingInDirection))", "betterScouting.Entity.move(betterScouting.RobotController,betterScouting.Brain,betterScouting.Direction,boolean)", "brain.leaderLocation.add(brain.leaderMovingInDirection)", "betterScouting.RobotController.getLocation()"], "Fixed commit": "c9ac3f3fc721c0ebada79070a1996e5bfaab73ca", "Url": "https://api.github.com/repos/joehan/ZombieApocalypse", "Date": "2016-01-18T03:15:59Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.openrdf.model.URI>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dest.equals(current)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3777/buggy-version/sglib.sglib-algo.src.main.java.slib.sglib.algo.graph.extraction.rvf.RVF_DAG.java", "BodyUseAPI": [], "Fixed commit": "1166be4fd9e83ba6ad8d94c7e2cbaf90fd241513", "Url": "https://api.github.com/repos/ehsane/slib", "Date": "2014-02-27T18:36:33Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(resourceGroups.containsKey(rg))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5694/buggy-version/src.main.java.org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.AllocationFileLoaderService.java", "BodyUseAPI": [], "Fixed commit": "2811b367360866916ba69031523b0bca7d3f80a0", "Url": "https://api.github.com/repos/asiainfo/hadoop-extension", "Date": "2014-11-14T08:59:29Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((riskTask.getRiskId()) != null) { if (allTasksCompletedFlag) { riskPlanRepository.updateRiskTaskStatus(SmtConstant.COMPLETED.getDescription(), java.lang.Long.valueOf(riskTask.getRiskId())); }else { riskPlanRepository.updateRiskTaskStatus(SmtConstant.NOTCOMPLETED.getDescription(), java.lang.Long.valueOf(riskTask.getRiskId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1205/buggy-version/src.main.java.com.deloitte.smt.service.RiskPlanService.java", "BodyUseAPI": ["com.deloitte.smt.entity.RiskTask.getRiskId()", "java.lang.Long.valueOf(riskTask.getRiskId())", "java.lang.Long.valueOf(riskTask.getRiskId())", "com.deloitte.smt.entity.RiskTask.getRiskId()", "com.deloitte.smt.repository.RiskPlanRepository.updateRiskTaskStatus(SmtConstant.COMPLETED.getDescription(),java.lang.Long)", "com.deloitte.smt.repository.RiskPlanRepository.updateRiskTaskStatus(SmtConstant.NOTCOMPLETED.getDescription(),java.lang.Long)"], "Fixed commit": "d4e71426df39f7a604bc8bf7af6d5a280d8b2123", "Url": "https://api.github.com/repos/srss-raju/stm", "Date": "2017-12-19T18:16:11Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 8) { com.pmarlen.migration.MigrarInventarioPM901_PM1041.fechaInicio = args[7]; }else { com.pmarlen.migration.MigrarInventarioPM901_PM1041.fechaInicio = \"2009-01-01\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7983/buggy-version/pmarlen-development-tasks.src.main.java.com.pmarlen.migration.MigrarInventarioPM901_PM1041.java", "BodyUseAPI": [], "Fixed commit": "47670bbdc2bb27d1bb82510c1ceff7ec5c0d42e6", "Url": "https://api.github.com/repos/tracktopell/PerfumeriaMarlen-10.4", "Date": "2016-05-27T01:29:36Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vertx.java.core.MultiMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cookie.indexOf(\";\")) != (-1)) { java.lang.String[] cookies = cookie.toString().split(\"\\\\;\"); for (java.lang.String c : cookies) { if (c.trim().startsWith(\"JSESSIONID=\")) { jsessionid = c.trim(); break; } } }else { java.util.List<java.lang.String> lstCookie = headers.getAll(\"cookie\"); for (java.lang.String c : lstCookie) { if (c.startsWith(\"JSESSIONID=\")) { jsessionid = cookie; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8942/buggy-version/vertx-core.src.main.java.org.vertx.java.core.sockjs.impl.BaseTransport.java", "BodyUseAPI": ["java.lang.String.toString()", "java.lang.String.split(java.lang.String)"], "Fixed commit": "c55badd402bb859c742052d763bfd2dccec60c1b", "Url": "https://api.github.com/repos/JoaoPedroFerreira/vert.x-1", "Date": "2015-01-27T10:36:06Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openhab.binding.zwave.internal.protocol.ZWaveController.getNode(bindingConfiguration.getNodeId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((node.getNodeStage()) != (org.openhab.binding.zwave.internal.protocol.NodeStage.DONE)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/568/buggy-version/bundles.binding.org.openhab.binding.zwave.src.main.java.org.openhab.binding.zwave.internal.converter.ZWaveConverterHandler.java", "BodyUseAPI": [], "Fixed commit": "d088dc23c8f131a5deeefff86f451f65d134c3b7", "Url": "https://api.github.com/repos/sumnerboy12/openhab", "Date": "2013-10-01T20:13:55Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.getRowLimit()) != (java.lang.Integer.MAX_VALUE)) { this.limit = new java.lang.Integer(obj.getRowLimit()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6556/buggy-version/connectors.translator-mongodb.src.main.java.org.teiid.translator.mongodb.MongoDBSelectVisitor.java", "BodyUseAPI": ["org.teiid.translator.mongodb.Limit.getRowLimit()"], "Fixed commit": "68ecc2771d5cd4e53d13aa691dbb10155836cba4", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2014-06-06T14:21:45Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.length()) == 1) { return new cz.milik.nmcalc.parser.Token(Token.Types.FLOAT, tokenOffset, value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5265/buggy-version/src.main.java.cz.milik.nmcalc.parser.Scanner.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()"], "Fixed commit": "faa3f9692729c1ac00f7c141a6b76ac8e9a8b34a", "Url": "https://api.github.com/repos/nnen/nmcalc", "Date": "2015-10-13T06:32:06Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buffer != null) { net.liquidpineapple.pang.AudioSystem.player = new javazoom.jl.player.Player(new java.io.ByteArrayInputStream(buffer)); net.liquidpineapple.pang.AudioSystem.player.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2374/buggy-version/src.main.java.net.liquidpineapple.pang.AudioSystem.java", "BodyUseAPI": [], "Fixed commit": "f040bb4fc5484bfaaebb46fc6bbd908e0e59a4e6", "Url": "https://api.github.com/repos/Fastjur/SEM-Project", "Date": "2016-09-22T21:38:27Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utils.SuffixTree.findPosition(utils.SuffixTreeNode,java.lang.StringBuilder)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((node.incomingEdge) != null) && (charsRemoved >= (((node.incomingEdge.labelEndPos) - (node.incomingEdge.labelStartPos)) + 1))) { completeIncomingEdgeMatch = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3373/buggy-version/Lab5.src.utils.SuffixTree.java", "BodyUseAPI": [], "Fixed commit": "87ff8031ab7a0e27d985d1d59bb05dd89ec820c9", "Url": "https://api.github.com/repos/dgillila/CPE448", "Date": "2013-05-24T00:40:39Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((findAncestor(after)) == null) after.setStartTime(new java.util.Date().getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6557/buggy-version/src.main.java.de.fau.cs.mad.fablab.rest.server.core.toolusage.ToolUsageDAO.java", "BodyUseAPI": ["de.fau.cs.mad.fablab.rest.core.ToolUsage.setStartTime(long)"], "Fixed commit": "1950a2720d20ba5d75a46e47c7de265c4c5f347d", "Url": "https://api.github.com/repos/FAU-Inf2/fablab-server", "Date": "2015-10-09T13:30:48Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fau.cs.mad.fablab.rest.server.core.toolusage.ToolUsageDAO.findAncestor(de.fau.cs.mad.fablab.rest.core.ToolUsage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ancestor != null) { ancestor.setSuccessor(usage.getSuccessor()); currentSession().update(ancestor); if (((((usage.getStartTime()) * (usage.getDuration())) * 60) * 1000) > (new java.util.Date().getTime())) updateStartTimes(ancestor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6557/buggy-version/src.main.java.de.fau.cs.mad.fablab.rest.server.core.toolusage.ToolUsageDAO.java", "BodyUseAPI": ["currentSession().update(de.fau.cs.mad.fablab.rest.core.ToolUsage)", "de.fau.cs.mad.fablab.rest.core.ToolUsage.setSuccessor(usage.getSuccessor())", "de.fau.cs.mad.fablab.rest.server.core.toolusage.ToolUsageDAO.updateStartTimes(de.fau.cs.mad.fablab.rest.core.ToolUsage)"], "Fixed commit": "1950a2720d20ba5d75a46e47c7de265c4c5f347d", "Url": "https://api.github.com/repos/FAU-Inf2/fablab-server", "Date": "2015-10-09T13:30:48Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocumentHelper.getFieldValue(com.orientechnologies.orient.core.db.record.OIdentifiable,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((conditionFieldValue != null) && (fieldValue != null)) conditionFieldValue = com.orientechnologies.orient.core.metadata.schema.OType.convert(conditionFieldValue, fieldValue.getClass());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4403/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocumentHelper.java", "BodyUseAPI": ["java.lang.Object.getClass()", "com.orientechnologies.orient.core.metadata.schema.OType.convert(java.lang.Object,java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "a2647da583c0c359adf99d87cde88051f187665c", "Url": "https://api.github.com/repos/w3aponx/orientdb", "Date": "2013-08-10T15:40:06Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFavourite)) { android.widget.Toast.makeText(this, getString(R.string.internet_error), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1302/buggy-version/app.src.main.java.com.example.android.popularmovies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "91d135b7278057d41349e622cd413296f38ca88a", "Url": "https://api.github.com/repos/jayjhaveri/Popular-movies-App", "Date": "2016-12-23T14:10:52Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom.Element.getAttributeValue(java.lang.String,element.getNamespace())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (spaceNo == null) { org.oruji.odt2html.App.outHTML.append(\"&nbsp;\"); }else { for (int i = 0; i < (spaceNo == null ? 0 : java.lang.Integer.parseInt(spaceNo)); i++) org.oruji.odt2html.App.outHTML.append(\"&nbsp;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9198/buggy-version/src.main.java.org.oruji.odt2html.App.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "aedce394924e027f747d92b34159b8cfca759456", "Url": "https://api.github.com/repos/aminpy/odt2html", "Date": "2013-09-15T12:39:01Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (attach) { com.techshroom.mods.common.Proxy.attachProxy(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2224/buggy-version/src.com.techshroom.mods.common.Proxy.java", "BodyUseAPI": [], "Fixed commit": "8e3a06b4b567f9ad11f17a2b746a9c97d22d6b67", "Url": "https://api.github.com/repos/TechShroom/TSModCore", "Date": "2014-11-22T00:23:30Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((allScreenState.length()) > 0) { windowList.clear(); for (int i = 0; i < (allScreenState.length()); i++) { try { org.json.JSONObject screenState = allScreenState.getJSONObject(i); net.bible.android.control.page.splitscreen.Window window = new net.bible.android.control.page.splitscreen.Window(); window.restoreState(screenState); windowList.add(window); } catch (org.json.JSONException je) { logger.error(\"Error restoring screen state\", je); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1417/buggy-version/AndBible.src.net.bible.android.control.page.splitscreen.WindowRepository.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)", "org.json.JSONArray.length()"], "Fixed commit": "f332b472328cdb46c75e674f93b65de840eac1e2", "Url": "https://api.github.com/repos/mjdenham/and-bible", "Date": "2015-05-09T13:28:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.DirectoryChooser.showDialog(javafx.stage.Stage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selectedDirectory == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2958/buggy-version/src.main.java.source.ui.FileExplorerPane.java", "BodyUseAPI": [], "Fixed commit": "3feb80d13aca561777b1e61e3fff28ce65cc6471", "Url": "https://api.github.com/repos/DGLABArquivos/roda-in", "Date": "2015-09-24T15:31:24Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((path.getFileName()) != null) title = path.getFileName().toString(); else title = path.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2958/buggy-version/src.main.java.source.ui.FileExplorerPane.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "java.nio.file.Path.toString()", "java.nio.file.Path.getFileName()"], "Fixed commit": "3feb80d13aca561777b1e61e3fff28ce65cc6471", "Url": "https://api.github.com/repos/DGLABArquivos/roda-in", "Date": "2015-09-24T15:31:24Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) != null) handler.filterStateChanged(filterId, filterState);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4564/buggy-version/src.org.openstreetmap.josm.plugins.rasterfilters.gui.FilterGuiListener.java", "BodyUseAPI": [], "Fixed commit": "759595c480a02565d30ec9addbab31470b418a71", "Url": "https://api.github.com/repos/Nipel-Crumple/josm_draft", "Date": "2015-08-16T17:54:51Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().getFragments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (fragments != null) { for (int i = 0, l = fragments.size(); i < l; i++) { if ((fragments.get(i)) instanceof com.example.darsh.fragment.MovieDetailFragment) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3370/buggy-version/app.src.main.java.com.example.darsh.activity.MovieDetailActivity.java", "BodyUseAPI": ["java.util.List<android.support.v4.app.Fragment>.get(int)", "java.util.List<android.support.v4.app.Fragment>.size()"], "Fixed commit": "2f06bfd85c2f919dc691a50320ccfeb2e2c5f068", "Url": "https://api.github.com/repos/darsh2/PopularMovies", "Date": "2016-05-05T10:33:55Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof la.kaike.deploy.biz.exception.BizMessageException) { la.kaike.deploy.biz.exception.BizMessageException bizEx = ((la.kaike.deploy.biz.exception.BizMessageException) (e)); return la.kaike.deploy.domain.Response.failure(messageSource.getMessage(bizEx.getCode(), bizEx.getArgs(), java.util.Locale.getDefault())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6442/buggy-version/auto-deploy-web-home.src.main.java.la.kaike.deploy.advice.ExceptionAdvice.java", "BodyUseAPI": [], "Fixed commit": "642f3c85c0235c9d999dff51c9abe4ca18ac1ad9", "Url": "https://api.github.com/repos/Justinmad/auto-deploy", "Date": "2017-07-05T14:33:55Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.byteshaft.ftpixer.AppGlobals.getSplashPath().getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (new java.io.File(splashBg).exists()) { splash.setImageURI(android.net.Uri.parse(splashBg)); }else { splash.setBackgroundResource(R.drawable.splash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3504/buggy-version/app.src.main.java.com.byteshaft.ftpixer.SplashScreen.java", "BodyUseAPI": ["android.widget.ImageView.setImageURI(android.net.Uri.parse(splashBg))", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "e9325f2d1a4d778a5101b73806317b1f5a3c8d38", "Url": "https://api.github.com/repos/husnain446/ftpixer", "Date": "2015-10-01T06:28:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(matcher.find())) { pattern = java.util.regex.Pattern.compile(directory_regexp); matcher = pattern.matcher(command); if (matcher.find()) { directory = new java.io.File(matcher.group().substring(5)); cloneCommand.setDirectory(directory); } }else { pattern = java.util.regex.Pattern.compile(repo_directory_regexp); matcher = pattern.matcher(command); if (matcher.find()) { java.lang.System.out.println(\"entred a safe zone\"); directory = new java.io.File(matcher.group().substring(0, ((matcher.group().length()) - 4))); cloneCommand.setDirectory(directory); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/655/buggy-version/src.main.java.com.imaginea.custom_cli.Clone.java", "BodyUseAPI": [], "Fixed commit": "0cd13f774eaa8cf397a9581bcf0cb236d1ea56f8", "Url": "https://api.github.com/repos/vineelal/CustomCLI", "Date": "2013-11-29T14:08:58Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fitness) > 1.0) { fitness = java.lang.Math.pow(fitness, ModelParameters.getFloat(\"EPISTASIS\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4392/buggy-version/src.Individual.java", "BodyUseAPI": [], "Fixed commit": "c258f1d06270c1623b9b2538effc067a0b35d477", "Url": "https://api.github.com/repos/bzhang/mutator-model", "Date": "2014-05-19T18:29:19Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fitness) >= 1.0) { fitness = java.lang.Math.exp(java.lang.Math.pow(java.lang.Math.log(fitness), ModelParameters.getFloat(\"EPISTASIS\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4392/buggy-version/src.Individual.java", "BodyUseAPI": [], "Fixed commit": "c258f1d06270c1623b9b2538effc067a0b35d477", "Url": "https://api.github.com/repos/bzhang/mutator-model", "Date": "2014-05-19T18:29:19Z"},
{"Line": "=>1284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["es.gobcan.eadmon.aed.ws.AedPortType.obtenerDocumentoFirma(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (firma != null) response = firma.getContenido();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8962/buggy-version/fap.app.services.aed.AedGestorDocumentalServiceImpl.java", "BodyUseAPI": ["es.gobcan.eadmon.gestordocumental.ws.gestionelementos.dominio.Firma.getContenido()"], "Fixed commit": "2dae63b4b3d2943836b88b12456e2a6b41c0100b", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2013-03-05T11:27:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getCurrentUser()) != null) && ((getLatestAction()) != null)) { return getCurrentUser().equals(getLatestAction().getNextActionPlayer()); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3012/buggy-version/src.android.otasyn.cardgames.activity.CardGameActivity.java", "BodyUseAPI": [], "Fixed commit": "7eddd4009e3bdd931c3a5c56aff5946b50a46494", "Url": "https://api.github.com/repos/otasyn/CardGames", "Date": "2014-01-06T06:48:38Z"},
{"Line": "=>2460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.dc.dao.DataCenterDao.findById(vm.getDataCenterId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((zone.getNetworkType()) == (com.cloud.dc.DataCenter.NetworkType.Basic)) { defaultNetwork = _networkModel.getExclusiveGuestNetwork(zone.getId()); }else { if (zone.isSecurityGroupEnabled()) { com.cloud.vm.NicVO defaultNic = _nicDao.findDefaultNicForVM(vm.getId()); if (defaultNic != null) { defaultNetwork = _networkDao.findById(defaultNic.getNetworkId()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7601/buggy-version/server.src.com.cloud.vm.UserVmManagerImpl.java", "BodyUseAPI": ["com.cloud.network.NetworkModel.getExclusiveGuestNetwork(zone.getId())", "com.cloud.dc.DataCenterVO.isSecurityGroupEnabled()", "com.cloud.dc.DataCenterVO.getId()"], "Fixed commit": "515d4088f76c031ca35decd9452d892ba2491cc4", "Url": "https://api.github.com/repos/DaanHoogland/cloudstack", "Date": "2016-01-12T09:56:07Z"},
{"Line": "=>2472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((defaultNetwork == null) || ((defaultNetwork.getGuestType()) != (Network.GuestType.Shared))) { throw new com.cloud.exception.InvalidParameterValueException((\"Cannot find default network for vm:\" + (vm.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7601/buggy-version/server.src.com.cloud.vm.UserVmManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "515d4088f76c031ca35decd9452d892ba2491cc4", "Url": "https://api.github.com/repos/DaanHoogland/cloudstack", "Date": "2016-01-12T09:56:07Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elementsByQName) != null) { stateMachine = elementsByQName.get(elemQName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7200/buggy-version/avro-to-xml.src.main.java.org.apache.ws.schema.walker.DomBuilderFromSax.java", "BodyUseAPI": [], "Fixed commit": "fc3e0af0a7e30404888790586987e7689b2c7c2d", "Url": "https://api.github.com/repos/mikepigott/xml-to-avro", "Date": "2014-08-27T15:17:23Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!query) { fr.smarquis.urlscheme.Printer.appendValue(truss, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7874/buggy-version/urlscheme.src.main.java.fr.smarquis.urlscheme.UrlSchemeActivity.java", "BodyUseAPI": [], "Fixed commit": "e5b8168be1ec5723be8f97e1cf3f22816649b537", "Url": "https://api.github.com/repos/SimonMarquis/Android-UrlSchemeInterceptor", "Date": "2015-08-30T12:43:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (savedData == null) { savedData = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5761/buggy-version/src.com.boomui.ddcharactersheet.SpellsKnown.java", "BodyUseAPI": [], "Fixed commit": "a4826eef6a846ff1fd112e82ac955d67975a1a8e", "Url": "https://api.github.com/repos/ermainz/com.boomui.ddcharactersheet", "Date": "2012-12-04T22:40:22Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results != null) || ((results.size()) != 0)) { for (com.crowdshelf.app.models.BookInfo result : results) { com.crowdshelf.app.io.network.GetBookInfosBySearch.putBookInfoInDatabase(result, dbEventType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6672/buggy-version/app.src.main.java.com.crowdshelf.app.io.network.GetBookInfosBySearch.java", "BodyUseAPI": [], "Fixed commit": "d9d61e0ef3e73478a2ca184a4d791ed18692a4ec", "Url": "https://api.github.com/repos/CrowdShelf/android", "Date": "2015-10-26T12:48:23Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sound.bark.length) == 0) { saturation = 0; hue = 0; brightness = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5343/buggy-version/src.org.teton_landis.jake.osc_visualizer.VisualizerApplet.java", "BodyUseAPI": [], "Fixed commit": "dc19970c3f877754486d64dc0b01077c74d4464c", "Url": "https://api.github.com/repos/justjake/music-visualizer-processing", "Date": "2013-12-10T07:34:20Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((xmlConfig.contains(\"<?xml\")) && (xmlConfig.contains(\"?>\"))) { java.lang.String line = xmlConfig.split(\"\\n\")[1]; xmlConfig = xmlConfig.replace(line, \"\").trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8732/buggy-version/src.frontend.org.voltcore.logging.VoltLog4jLogger.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "0724bf52d0bbe76100a53b4ed28b3d30738340fd", "Url": "https://api.github.com/repos/bsmr-voltdb/voltdb", "Date": "2014-10-29T13:31:16Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userFound) { return com.rest.addressbook.services.AddressBookServiceImpl.gson.toJson(contactList); }else { return \"labbheya nai\".toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7214/buggy-version/src.main.java.com.rest.addressbook.services.AddressBookServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c9ccbbf5113946154acead122cdfb0c6c56f2582", "Url": "https://api.github.com/repos/sikka/addressbook", "Date": "2015-08-23T21:34:57Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sv.isIconified())) { state.putCharSequence(com.commonsware.android.ab.search.ActionBarFragment.STATE_QUERY, sv.getQuery()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9145/buggy-version/ActionBar.SearchView.src.com.commonsware.android.ab.search.ActionBarFragment.java", "BodyUseAPI": ["android.os.Bundle.putCharSequence(java.lang.String,sv.getQuery())", "android.widget.SearchView.getQuery()"], "Fixed commit": "7dfa06c5cfa398653306280e4ca03b7cea136c94", "Url": "https://api.github.com/repos/commonsguy/cw-omnibus", "Date": "2014-01-13T13:39:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.playerName) == null) this.playerName = uniqueId.toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3152/buggy-version/src.main.java.us.tastybento.bskyblock.database.objects.Players.java", "BodyUseAPI": [], "Fixed commit": "002c54ef21062e0b907da327b07528842b487092", "Url": "https://api.github.com/repos/BentoBoxWorld/bentobox", "Date": "2017-12-31T22:08:15Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((isJSThread()) && (r != null)) { r.run(); }else { android.os.Message m = android.os.Message.obtain(mJSHandler, com.taobao.weex.common.WXThread.secure(r)); m.obj = token; m.sendToTarget(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8286/buggy-version/android.sdk.src.main.java.com.taobao.weex.bridge.WXBridgeManager.java", "BodyUseAPI": ["java.lang.Runnable.run()", "com.taobao.weex.common.WXThread.secure(java.lang.Runnable)", "android.os.Message.obtain(android.os.Handler,com.taobao.weex.common.WXThread.secure(r))"], "Fixed commit": "2b54731dd8606e509aa41aebdb2dbe7bf5d6c87a", "Url": "https://api.github.com/repos/sospartan/weex", "Date": "2016-09-29T03:15:34Z"},
{"Line": "=>968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((baseInterfacesObject) != null) { for (com.codename1.tools.translator.ByteCodeClass baseInterface : baseInterfacesObject) { baseInterface.buildStaticFieldList(fieldList); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5834/buggy-version/vm.ByteCodeTranslator.src.com.codename1.tools.translator.ByteCodeClass.java", "BodyUseAPI": [], "Fixed commit": "cbd4511b54c16e3de3c2446a3a802275aad8d9bc", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-03-22T19:15:23Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (name == null) { name = deps.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8378/buggy-version/src.main.java.tterrag.wailaplugins.plugins.PluginRegistrar.java", "BodyUseAPI": [], "Fixed commit": "5320a5b5e91299c00b6d747ccf968a2abf62a98b", "Url": "https://api.github.com/repos/tterrag1098/WAILAPlugins", "Date": "2015-10-20T06:12:18Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8378/buggy-version/src.main.java.tterrag.wailaplugins.plugins.PluginRegistrar.java", "BodyUseAPI": [], "Fixed commit": "5320a5b5e91299c00b6d747ccf968a2abf62a98b", "Url": "https://api.github.com/repos/tterrag1098/WAILAPlugins", "Date": "2015-10-20T06:12:18Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id.equals(\"V1\")) { java.lang.System.out.format(\"<%02d:%02d:%02d.%03d> [%s] link: %s currentLinkFreeCapacitySensor: %d isParked: %s destinationLink: %s linkToBeParkedAt: %s route: %s\\n\", hour, min, sec, msec, id, currentLinkSensor.read(), currentLinkFreeCapacitySensor.read(), isParkedSensor.read(), destinationLink, linkToBeParkedAt, route); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8811/buggy-version/example3.src.example3.VehicleComponent.java", "BodyUseAPI": ["java.io.PrintStream.format(java.lang.String,int,int,int,int,java.lang.String,currentLinkSensor.read(),currentLinkFreeCapacitySensor.read(),isParkedSensor.read(),org.matsim.api.core.v01.Id,org.matsim.api.core.v01.Id,java.util.List<org.matsim.api.core.v01.Id>)"], "Fixed commit": "478a2cba43fc9516daff6099e92555dbb7003c28", "Url": "https://api.github.com/repos/d3scomp/cbse-tutorial", "Date": "2014-06-29T06:35:07Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(keys.size(),int)", "java.util.Set<com.zenplanner.sql.Key>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((keys.size()) != (oldSize - count)) { java.lang.System.out.println(\"Not all keys used!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/729/buggy-version/src.main.java.com.zenplanner.sql.Table.java", "BodyUseAPI": [], "Fixed commit": "82393c1e983aec8b722a4d1db678ddc7e7eb5c6c", "Url": "https://api.github.com/repos/ZenPlanner/dbsync", "Date": "2014-10-28T14:56:08Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tcg_auto.manager.FileManager.getLogBufferedReaderInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (reader == null) { tcg_auto.manager.FileManager.writeLog(\"\"); return tcg_auto.manager.FileManager.getLogs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4865/buggy-version/src.main.java.tcg_auto.manager.FileManager.java", "BodyUseAPI": [], "Fixed commit": "22aa9571c02f932583b7ea76cd1576439a3e5770", "Url": "https://api.github.com/repos/sabdfettah/tcg_auto", "Date": "2017-04-15T17:43:37Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.axisType) == (org.jlab.groot.base.AxisAttributes.Z)) showAxis = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3976/buggy-version/src.main.java.org.jlab.groot.base.AxisAttributes.java", "BodyUseAPI": [], "Fixed commit": "90350314583d744e6c01475d57a099c02c801360", "Url": "https://api.github.com/repos/gavalian/groot", "Date": "2017-05-25T01:01:23Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.Settings.list_form.bindFromRequest().get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (list.title.equals(\"\")) { list.title = \"Untitled checklist\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7012/buggy-version/app.controllers.Settings.java", "BodyUseAPI": [], "Fixed commit": "3374b157bb064265ca90651c3e187fec00b55fec", "Url": "https://api.github.com/repos/schmave/demschooltools", "Date": "2015-07-21T01:32:48Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request().body().asFormUrlEncoded()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((form_data.get(\"tag_id\")) == null) { flash(\"error\", \"No tag specified for checklist. No checklist was created.\"); return redirect(routes.Settings.viewTaskLists()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7012/buggy-version/app.controllers.Settings.java", "BodyUseAPI": [], "Fixed commit": "3374b157bb064265ca90651c3e187fec00b55fec", "Url": "https://api.github.com/repos/schmave/demschooltools", "Date": "2015-07-21T01:32:48Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (adc == (-5)) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7933/buggy-version/clasrec-cvt.src.org.jlab.rec.cvt.hit.ADCConvertor.java", "BodyUseAPI": [], "Fixed commit": "b1d28cada621463d43ff2214c18590a10d912a14", "Url": "https://api.github.com/repos/zieglerv/tracking", "Date": "2016-03-11T16:24:25Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ptrFrame.isAutoRefresh())) { mainServiceHelper.scrapeForOverview(gradeHash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8557/buggy-version/app.src.main.java.de.mygrades.view.activity.GradeDetailedActivity.java", "BodyUseAPI": [], "Fixed commit": "1c03035f24cacf3ba951e99fe1aaecec7d367210", "Url": "https://api.github.com/repos/MyGrades/mygrades-app", "Date": "2015-11-02T09:31:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.activityinfo.api2.shared.Iri.asString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (iriAsString.startsWith(Cuids.IRI_PREFIX)) { iriAsString = iriAsString.substring(Cuids.IRI_PREFIX.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/40/buggy-version/server.src.main.java.org.activityinfo.api.shared.adapter.CuidAdapter.java", "BodyUseAPI": ["java.lang.String.substring(Cuids.IRI_PREFIX.length())"], "Fixed commit": "7723c924bfc120bfe6c2bd93cfd7ff2aba59cba4", "Url": "https://api.github.com/repos/bedatadriven/activityinfo", "Date": "2014-02-10T10:07:37Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arg.length) < 3) { tempCommand.setErrorMessage(Analyzer.ERROR_NULL_ARGUMENT); return tempCommand; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5395/buggy-version/JOYTZ.src.Analyzer.java", "BodyUseAPI": [], "Fixed commit": "c575e83f805f17869b12a76bdbca683f62bed4e9", "Url": "https://api.github.com/repos/cs2103aug2014-w09-2j/main", "Date": "2014-11-07T11:19:33Z"},
{"Line": "=>2227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((phyTimeoutMillis) > 0) { long phyConnectTimeMillis = currentTimeMillis - (connection.getTimeMillis()); if (phyConnectTimeMillis > (phyTimeoutMillis)) { evictList.add(connection); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6724/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSource.java", "BodyUseAPI": [], "Fixed commit": "c445f3965d3a0f431db80c1e8f4d254040de8da3", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-03-12T03:05:24Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operatingCompany.value().isClosed()) finishTurn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8655/buggy-version/src.main.java.net.sf.rails.game.specific._1835.OperatingRound_1835.java", "BodyUseAPI": [], "Fixed commit": "b6ae56c7164c4859d1a8764446bbe26ddbc5460b", "Url": "https://api.github.com/repos/blentz/Rails", "Date": "2015-08-08T16:19:07Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.model.Program.basicBlockAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sourceBlock.getExceptionVariable()) != null) { targetBlock.setExceptionVariable(targetBlock.getProgram().variableAt(sourceBlock.getExceptionVariable().getIndex())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1651/buggy-version/core.src.main.java.org.teavm.model.util.AsyncProgramSplitter.java", "BodyUseAPI": ["sourceBlock.getExceptionVariable().getIndex()", "org.teavm.model.BasicBlock.getExceptionVariable()", "targetBlock.getProgram().variableAt(sourceBlock.getExceptionVariable().getIndex())", "org.teavm.model.BasicBlock.setExceptionVariable(targetBlock.getProgram().variableAt(sourceBlock.getExceptionVariable().getIndex()))"], "Fixed commit": "f6103ec00bd05b9f43c00e45c6f6b7fbcc95b493", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2017-01-28T19:39:44Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.model.Program.basicBlockAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sourceBlock.getExceptionVariable()) != null) { targetBlock.setExceptionVariable(targetBlock.getProgram().variableAt(sourceBlock.getExceptionVariable().getIndex())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1651/buggy-version/core.src.main.java.org.teavm.model.util.AsyncProgramSplitter.java", "BodyUseAPI": ["org.teavm.model.BasicBlock.setExceptionVariable(targetBlock.getProgram().variableAt(sourceBlock.getExceptionVariable().getIndex()))", "sourceBlock.getExceptionVariable().getIndex()", "org.teavm.model.BasicBlock.getExceptionVariable()", "targetBlock.getProgram().variableAt(sourceBlock.getExceptionVariable().getIndex())"], "Fixed commit": "f6103ec00bd05b9f43c00e45c6f6b7fbcc95b493", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2017-01-28T19:39:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.theironyard.charlotte.CalendarSpring.services.EventRepo.findAllByDateTimeBetween(java.time.LocalDateTime,java.time.LocalDateTime)", "com.theironyard.charlotte.CalendarSpring.services.EventRepo.findAllByEndTimeBetween(java.time.LocalDateTime,java.time.LocalDateTime)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((timeCheck.isEmpty()) || (timeCheckEnd.isEmpty())) { java.lang.System.err.println(\"Not valid\"); }else if ((((currentTime.isBefore(startTime)) && (startTime.isBefore(eventEndTime))) && (timeCheck.isEmpty())) && (timeCheckEnd.isEmpty())) { com.theironyard.charlotte.CalendarSpring.entities.Event event = new com.theironyard.charlotte.CalendarSpring.entities.Event(description, startTime, eventEndTime, users.findFirstByName(userName)); events.save(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/60/buggy-version/src.main.java.com.theironyard.charlotte.CalendarSpring.controllers.ControllerCalendarSpring.java", "BodyUseAPI": ["java.util.List<com.theironyard.charlotte.CalendarSpring.entities.Event>.isEmpty()", "java.util.List<com.theironyard.charlotte.CalendarSpring.entities.Event>.isEmpty()"], "Fixed commit": "da838912a763a111564f6d2baf507ad72f0854d3", "Url": "https://api.github.com/repos/ArcSoftware/Calendar", "Date": "2017-05-11T21:22:34Z"},
{"Line": "=>914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sw.isShowing()) { removeCallbacks(moveAround); removeCallbacks(hideAlarmClock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2664/buggy-version/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java", "BodyUseAPI": [], "Fixed commit": "c52e7d9e6ee21867a6b2d9e479b3abac3ffec75e", "Url": "https://api.github.com/repos/firebirdberlin/nightdream", "Date": "2016-06-28T20:54:17Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(((maxCraftStack) - (craftStack.stackSize)),stack.stackSize)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (toMove < 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3662/buggy-version/src.main.java.com.dynious.refinedrelocation.grid.relocator.RelocatorModuleCrafting.java", "BodyUseAPI": [], "Fixed commit": "64045e724dbb1e581b840f95ba3d62b90030c87e", "Url": "https://api.github.com/repos/Dynious/RefinedRelocation", "Date": "2014-12-21T11:33:49Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needed < 0) return stack;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3662/buggy-version/src.main.java.com.dynious.refinedrelocation.grid.relocator.RelocatorModuleCrafting.java", "BodyUseAPI": [], "Fixed commit": "64045e724dbb1e581b840f95ba3d62b90030c87e", "Url": "https://api.github.com/repos/Dynious/RefinedRelocation", "Date": "2014-12-21T11:33:49Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > existingDataLen) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8934/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "164092f21c39c4b1eb1717804d3108ecb5d80d53", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-07T15:16:37Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sensor) instanceof simulation.robot.sensors.WallAndRobotSensor) { return ((simulation.robot.sensors.WallAndRobotSensor) (sensor)).getNumberOfSensors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1345/buggy-version/JBotSim.src.evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput.java", "BodyUseAPI": [], "Fixed commit": "fb936a42e4cba71825020934c35bd4106870636a", "Url": "https://api.github.com/repos/JustinoCaparica/JBotSim-Com", "Date": "2017-02-13T13:28:25Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.citizensnpcs.utils.StringUtils.capitalise(name.toLowerCase()).replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (formatted.equals(\"Pigzombie\")) formatted = \"PigZombie\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8213/buggy-version/src.core.net.citizensnpcs.utils.EntityUtils.java", "BodyUseAPI": [], "Fixed commit": "2f731518471aa6d8208764f41abe8eb5e52d6ab1", "Url": "https://api.github.com/repos/fullwall/Citizens", "Date": "2011-08-07T15:25:48Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(interview.guestUserId.equals(myId))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7659/buggy-version/app.src.main.java.com.example.vduder.vduder.Activity.UserListActivity.java", "BodyUseAPI": [], "Fixed commit": "e82515a8fa5a1bc29ba8cfa66a005e1f4be0168b", "Url": "https://api.github.com/repos/funtechhackday/vduder", "Date": "2017-10-15T04:53:11Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((intent != null) && ((intent.getExtras()) != null)) { target.putExtras(intent.getExtras()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3782/buggy-version/nearit-ui.src.main.java.com.nearit.ui_bindings.notifications.NearItUIProximityListener.java", "BodyUseAPI": ["android.content.Intent.getExtras()", "android.content.Intent.putExtras(intent.getExtras())"], "Fixed commit": "5c7dab2a67540984c26bdbc5a5365cba17d4bb91", "Url": "https://api.github.com/repos/nearit/Android-UI-Bindings", "Date": "2017-11-20T11:07:54Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getStack().getStackObject(event.getTargetId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (stackObject == null) { stackObject = ((mage.game.stack.StackObject) (game.getLastKnownInformation(event.getTargetId(), Zone.STACK))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5284/buggy-version/Mage.Sets.src.mage.sets.zendikar.LullmageMentor.java", "BodyUseAPI": [], "Fixed commit": "80ed481de579b07c90b59fa5ab078b2b3da68a8c", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-08-27T13:18:45Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pathways != null) this.pathways.addAll(pathways);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7610/buggy-version/src.main.java.org.gvt.action.OpenPathwaysAction.java", "BodyUseAPI": [], "Fixed commit": "f3b9ed0dfa1a63bc9652d1c85d113b4e633b23ea", "Url": "https://api.github.com/repos/PathwayCommons/chibe", "Date": "2015-08-10T20:33:20Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Document.getDocumentElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (elem != null) { net.arnx.xmlic.Nodes nodes = new net.arnx.xmlic.Nodes(this, doc(), 1); nodes.add(elem); return nodes; }else { return new net.arnx.xmlic.Nodes(this, doc(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6840/buggy-version/xmlic.src.net.arnx.xmlic.XML.java", "BodyUseAPI": ["net.arnx.xmlic.Nodes.add(org.w3c.dom.Element)"], "Fixed commit": "e4ebe5338c21f1d54b854c69ea4216102c3545e4", "Url": "https://api.github.com/repos/hidekatsu-izuno/xmlic", "Date": "2015-07-04T08:48:49Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sourceCompilationUnits.get(0).equals(sourceCompilationUnits.get(1))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!singleSourceCompilationUnit) { modifySourceCompilationUnitImportDeclarations(sourceCompilationUnits.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2883/buggy-version/src.gr.uom.java.jdeodorant.refactoring.manipulators.ExtractCloneRefactoring.java", "BodyUseAPI": [], "Fixed commit": "696538dbb5ab1133753785a3d720cb40e141c4d9", "Url": "https://api.github.com/repos/tsantalis/JDeodorant", "Date": "2015-05-06T16:34:53Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sourceCompilationUnits.get(0).equals(sourceCompilationUnits.get(1))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (singleSourceCompilationUnit) { modifySourceCompilationUnitImportDeclarations(sourceCompilationUnits.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2883/buggy-version/src.gr.uom.java.jdeodorant.refactoring.manipulators.ExtractCloneRefactoring.java", "BodyUseAPI": [], "Fixed commit": "696538dbb5ab1133753785a3d720cb40e141c4d9", "Url": "https://api.github.com/repos/tsantalis/JDeodorant", "Date": "2015-05-06T16:34:53Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calendarMode.equals(AbstractDateWidget.CalendarMode.FULL_DATE)) { dayPicker.setValue(ethiopianDate.getDayOfMonth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2190/buggy-version/collect_app.src.main.java.org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog.java", "BodyUseAPI": [], "Fixed commit": "1e19ddb409ab77b87b5ae3c7de6f543aa5e2fa4d", "Url": "https://api.github.com/repos/grzesiek2010/collect", "Date": "2017-10-03T11:44:26Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(calendarMode.equals(AbstractDateWidget.CalendarMode.YEAR))) { monthPicker.setValue(((ethiopianDate.getMonthOfYear()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2190/buggy-version/collect_app.src.main.java.org.odk.collect.android.fragments.dialogs.EthiopianDatePickerDialog.java", "BodyUseAPI": [], "Fixed commit": "1e19ddb409ab77b87b5ae3c7de6f543aa5e2fa4d", "Url": "https://api.github.com/repos/grzesiek2010/collect", "Date": "2017-10-03T11:44:26Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.sortCol) != null) && ((this.sortCol) != sortCol)) { ((org.pm4j.core.pm.impl.PmAttrEnumImpl<org.pm4j.core.pm.PmSortOrder>) (this.sortCol.getSortOrderAttr())).setBackingValue(PmSortOrder.NEUTRAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8943/buggy-version/pm4j-core.main.java.org.pm4j.core.pm.impl.PmTableImpl.java", "BodyUseAPI": [], "Fixed commit": "1613cdc9e2f3c545ddea7be0762c4050d1c00d5a", "Url": "https://api.github.com/repos/pm4j/org.pm4j", "Date": "2012-04-04T18:47:08Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 < c) cap += ap / c;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5855/buggy-version/src.ciir.umass.edu.metric.APIAScorer.java", "BodyUseAPI": [], "Fixed commit": "3e900d44dac589a3185679f547e16b99ffd71d7d", "Url": "https://api.github.com/repos/tmanabe/RankLibBM25F-IA", "Date": "2017-04-29T12:26:20Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jobIntendedTo.getText().equals(tempUserInfo[0])) acceptJobMenuItem.setEnabled(true); else acceptJobMenuItem.setEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4490/buggy-version/src.com.coddotech.teamsubb.jobs.JobWindow.java", "BodyUseAPI": [], "Fixed commit": "0957073fd989d78a9fc9d7a501a7366705406c01", "Url": "https://api.github.com/repos/coddo/TeamSubb", "Date": "2014-01-05T00:02:36Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(owningInstitutionBibId)) { owningInstitutionBibId = org.apache.commons.lang3.StringUtils.substringBetween(xmlRecord, \"<controlfield tag='001'>\", \"</controlfield>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8044/buggy-version/src.main.java.org.recap.route.XmlProcessor.java", "BodyUseAPI": [], "Fixed commit": "4d76132e807a58fbec8ce184d2e3efef680557fa", "Url": "https://api.github.com/repos/rajeshbabuk/scsb-etl", "Date": "2016-07-20T11:52:01Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.FileSystem.rename(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!renameOk) { throw new java.io.IOException((((\"Dataset merge failed during rename of \" + path) + \"to \") + newPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6426/buggy-version/kite-data.kite-data-core.src.main.java.org.kitesdk.data.filesystem.FileSystemDataset.java", "BodyUseAPI": [], "Fixed commit": "1a510888ed848ecf7a8dbc5590931d03d1acfe83", "Url": "https://api.github.com/repos/tomwhite/kite", "Date": "2014-02-28T12:42:56Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(fileSystem.exists(newPartitionDirectory))) { fileSystem.mkdirs(newPartitionDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6426/buggy-version/kite-data.kite-data-core.src.main.java.org.kitesdk.data.filesystem.FileSystemDataset.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.mkdirs(org.apache.hadoop.fs.Path)"], "Fixed commit": "1a510888ed848ecf7a8dbc5590931d03d1acfe83", "Url": "https://api.github.com/repos/tomwhite/kite", "Date": "2014-02-28T12:42:56Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aviadmini.quickimagepick.PickRequest.getCameraPicsDirectory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(dir.exists())) && (!(dir.mkdirs()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7962/buggy-version/library.src.main.java.com.aviadmini.quickimagepick.PickRequest.java", "BodyUseAPI": [], "Fixed commit": "c4320ef1157972696adab08d14015872c965834d", "Url": "https://api.github.com/repos/aviadmini/quickimagepick", "Date": "2016-12-13T08:52:34Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7224/buggy-version/src.main.java.com.io.traderbook.model.User.java", "BodyUseAPI": [], "Fixed commit": "774670fd14e1ad5fd75730e1d7ed35ad4cc3bd52", "Url": "https://api.github.com/repos/Desmond14/agh-networking-platform", "Date": "2014-06-10T08:02:05Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object.getClass()) != (com.io.traderbook.model.User.class)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7224/buggy-version/src.main.java.com.io.traderbook.model.User.java", "BodyUseAPI": [], "Fixed commit": "774670fd14e1ad5fd75730e1d7ed35ad4cc3bd52", "Url": "https://api.github.com/repos/Desmond14/agh-networking-platform", "Date": "2014-06-10T08:02:05Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getId()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7224/buggy-version/src.main.java.com.io.traderbook.model.User.java", "BodyUseAPI": [], "Fixed commit": "774670fd14e1ad5fd75730e1d7ed35ad4cc3bd52", "Url": "https://api.github.com/repos/Desmond14/agh-networking-platform", "Date": "2014-06-10T08:02:05Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.parameters) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/941/buggy-version/android.src.com.mobiperf.MeasurementDesc.java", "BodyUseAPI": [], "Fixed commit": "f2586f4c6d081c01db6075206a061a09e4a11468", "Url": "https://api.github.com/repos/sanaerosen/MobiPerf", "Date": "2014-02-04T23:41:13Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sub.getSubscriptionId()) != null) { subId = sub.getSubscriptionId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4249/buggy-version/oscm-domainobjects.javasrc.org.oscm.domobjects.bridge.SubscriptionClassBridge.java", "BodyUseAPI": ["org.oscm.domobjects.Subscription.getSubscriptionId()"], "Fixed commit": "0f5e7c0a7fc682e77e7dafa0ee326668543eb891", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-08-05T09:15:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((sub.getProduct()) != null) && ((sub.getProduct().getVendor()) != null)) && ((sub.getProduct().getVendor().getUdaDefinitions()) != null)) { udaDefList = sub.getProduct().getVendor().getUdaDefinitions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4249/buggy-version/oscm-domainobjects.javasrc.org.oscm.domobjects.bridge.SubscriptionClassBridge.java", "BodyUseAPI": ["sub.getProduct().getVendor().getUdaDefinitions()", "org.oscm.domobjects.Subscription.getProduct()", "sub.getProduct().getVendor()"], "Fixed commit": "0f5e7c0a7fc682e77e7dafa0ee326668543eb891", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-08-05T09:15:07Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((sub.getProduct()) != null) && ((sub.getProduct().getParameterSet()) != null)) && ((sub.getProduct().getParameterSet().getParameters()) != null)) { params = sub.getProduct().getParameterSet().getParameters(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4249/buggy-version/oscm-domainobjects.javasrc.org.oscm.domobjects.bridge.SubscriptionClassBridge.java", "BodyUseAPI": ["sub.getProduct().getParameterSet().getParameters()", "org.oscm.domobjects.Subscription.getProduct()", "sub.getProduct().getParameterSet()"], "Fixed commit": "0f5e7c0a7fc682e77e7dafa0ee326668543eb891", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-08-05T09:15:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sub.getPurchaseOrderNumber()) != null) { subRef = sub.getPurchaseOrderNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4249/buggy-version/oscm-domainobjects.javasrc.org.oscm.domobjects.bridge.SubscriptionClassBridge.java", "BodyUseAPI": ["org.oscm.domobjects.Subscription.getPurchaseOrderNumber()"], "Fixed commit": "0f5e7c0a7fc682e77e7dafa0ee326668543eb891", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-08-05T09:15:07Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (move > 0) vehicleGUIDecorator.moveVehicleGUI(move, vehicleGUIDecorator.getVehicleState());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5306/buggy-version/src.londonsw.controller.VehicleController.java", "BodyUseAPI": ["londonsw.view.simulation.VehicleGUIDecorator.moveVehicleGUI(int,vehicleGUIDecorator.getVehicleState())"], "Fixed commit": "50826865fe964073e0c39bc8f5f05660e2d3ed3a", "Url": "https://api.github.com/repos/violetavk/LondonSW_trafficsimulator", "Date": "2016-03-21T14:03:10Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accept(Kind.CLS_PAREN)) { eatToken(); }else { funcParams.add(expression()); while (accept(Kind.COMMA)) { eatToken(); funcParams.add(expression()); } expect(Kind.CLS_PAREN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7104/buggy-version/dlx_compiler.src.main.java.compiler.components.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "642b0efa5a2dfef104049781797472b02640cbdd", "Url": "https://api.github.com/repos/jpalomo/dlx_compiler", "Date": "2015-02-10T01:02:21Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<PostPojo.PostDataPojo.DataBean>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((pojo.getPost_comment_count()) != null) && ((pojo.getPost_comment_count().size()) > 0)) holder.mIbChat.setText(pojo.getPost_comment_count().get(0).getCount()); else holder.mIbChat.setText(\"0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3904/buggy-version/app.src.main.java.com.igniva.qwer.ui.adapters.RecyclerviewAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(pojo.getPost_comment_count().get(0).getCount())", "PostPojo.PostDataPojo.DataBean.getPost_comment_count()", "pojo.getPost_comment_count().get(0).getCount()", "pojo.getPost_comment_count().get(int)"], "Fixed commit": "bfe3ac2e3c02531cdc2c5105226d97b7d38a6411", "Url": "https://api.github.com/repos/ignivajitender/QWER_Tongy", "Date": "2017-11-14T13:45:49Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (extra != null) { receiver = extra.getString(\"sender\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2603/buggy-version/app.src.main.java.com.example.kalongip.chatapp.SocketActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "0ddb89fc188d1ce1e71358bff4c8ba28557e4788", "Url": "https://api.github.com/repos/comp4521group16/ChatApp", "Date": "2016-05-21T06:58:45Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSelected) { setBackground(list.getSelectionBackground()); setForeground(list.getSelectionForeground()); }else { if ((index % 2) == 0) { setBackground(new java.awt.Color(250, 200, 150)); }else { setBackground(list.getBackground()); } setForeground(list.getForeground()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3409/buggy-version/janno2.src.main.java.edu.depauw.janno2.SentWindow.java", "BodyUseAPI": [], "Fixed commit": "0eedca32a683c99e5d2c1a14ac1ba3c63ae032f6", "Url": "https://api.github.com/repos/bhoward/NLP", "Date": "2017-05-28T13:54:58Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myMembers.size()) > 0) return myMembers.get(_random.nextInt(myMembers.size())); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3450/buggy-version/src.main.java.org.dancres.paxos.impl.faildet.FailureDetectorImpl.java", "BodyUseAPI": ["java.util.Random.nextInt(int)", "java.util.LinkedList<java.net.InetSocketAddress>.size()", "java.util.LinkedList<java.net.InetSocketAddress>.get(int)"], "Fixed commit": "a08c94ddcf35cc0ac6f25c9bd76f682d2f299239", "Url": "https://api.github.com/repos/dancres/paxos", "Date": "2013-12-24T11:46:52Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_common.getTransport().getFD().getRandomMember(_common.getTransport().getLocalAddress())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (myNeedTarget != null) new org.dancres.paxos.impl.AcceptorLearner.LiveSender().send(aNeed, myNeedTarget);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3450/buggy-version/src.main.java.org.dancres.paxos.impl.AcceptorLearner.java", "BodyUseAPI": ["org.dancres.paxos.impl.AcceptorLearner.LiveSender.send(org.dancres.paxos.impl.Need,java.net.InetSocketAddress)"], "Fixed commit": "a08c94ddcf35cc0ac6f25c9bd76f682d2f299239", "Url": "https://api.github.com/repos/dancres/paxos", "Date": "2013-12-24T11:46:52Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stmt.endsWith(\";\")) { stmt = stmt.substring(0, ((stmt.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7654/buggy-version/modules.citrus-core.src.main.java.com.consol.citrus.actions.ExecuteSQLQueryAction.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "c884458b5f9b3bf1d3df6406a22de2f843b6d027", "Url": "https://api.github.com/repos/citrusframework/citrus", "Date": "2016-03-03T12:32:54Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andune.minecraft.hsp.server.api.Server.getWorld(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (baseWorld == null) { log.error(\"getInheritedWorld(): Got request for world \\\"{}\\\", but no such world was found on the server.\", worldName); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4184/buggy-version/core.src.main.java.com.andune.minecraft.hsp.manager.HomeLimitsManager.java", "BodyUseAPI": [], "Fixed commit": "165a6e4c15de63e4076fe26b18b1490d62f6d327", "Url": "https://api.github.com/repos/andune/HomeSpawnPlus", "Date": "2013-07-23T06:04:35Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.axelor.inject.Beans.get(com.axelor.apps.base.service.administration.GeneralService.class).getGeneral().getManageMultiBanks())) { return super.getDefaultCompanyBankDetails(company, paymentMode, partner); }else { if (paymentMode == null) { return null; } com.axelor.apps.base.db.BankDetails candidateBankDetails = getDefaultCompanyBankDetailsFromPartner(company, paymentMode, partner); java.util.List<com.axelor.apps.base.db.BankDetails> authorizedBankDetails = com.axelor.inject.Beans.get(com.axelor.apps.account.service.payment.PaymentModeService.class).getCompatibleBankDetailsList(paymentMode, company); if (((candidateBankDetails != null) && (authorizedBankDetails.contains(candidateBankDetails))) && (candidateBankDetails.getActive())) { return candidateBankDetails; }else { if ((authorizedBankDetails.size()) == 1) { return authorizedBankDetails.get(0); }else { return null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4418/buggy-version/axelor-account.src.main.java.com.axelor.apps.account.service.BankDetailsServiceAccountImpl.java", "BodyUseAPI": [], "Fixed commit": "80919e7716fd3d6db5e9f4576878f6e718a59953", "Url": "https://api.github.com/repos/dtr-axelor/axelor-business-suite", "Date": "2017-09-27T14:30:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wp.waypoint.isNull()) wp.init(((net.minecraft.entity.player.EntityPlayer) (player)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7887/buggy-version/src.main.java.tterrag.supermassivetech.block.BlockWaypoint.java", "BodyUseAPI": ["tterrag.supermassivetech.tile.TileWaypoint.init(net.minecraft.entity.EntityLivingBase)"], "Fixed commit": "64463c1f94632a7bb867de7fb89fa85159886687", "Url": "https://api.github.com/repos/tterrag1098/SuperMassiveTech", "Date": "2014-06-05T01:40:22Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noman.weekcalendar.fragment.WeekFragment.selectedDateTime) == null) noman.weekcalendar.fragment.WeekFragment.selectedDateTime = new org.joda.time.DateTime();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2120/buggy-version/weekcalendar.src.main.java.noman.weekcalendar.view.WeekPager.java", "BodyUseAPI": [], "Fixed commit": "77ee92b201639e57c1a684431bee307aa90692ca", "Url": "https://api.github.com/repos/nomanr/WeekCalendar", "Date": "2015-12-19T06:50:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.com.commbank.app.services.IAccountService.Get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (model != null) { setView(model); }else { android.widget.Toast.makeText(au.com.commbank.app.MainApplication.getInstance(), getString(R.string.datanotfound), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/961/buggy-version/app.src.main.java.au.com.commbank.app.MainFragment.java", "BodyUseAPI": ["au.com.commbank.app.MainFragment.setView(au.com.commbank.app.pojo.AccountModel)"], "Fixed commit": "639b17765683ed9defe6cef9b86027ef445a8a8a", "Url": "https://api.github.com/repos/codebased/android-test", "Date": "2015-03-23T21:19:34Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Environment.getExternalStorageState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Environment.MEDIA_MOUNTED.equals(state)) { filesDir = getExternalFilesDir(null); }else { filesDir = getFilesDir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/710/buggy-version/app.src.main.java.demo.kolorob.kolorobdemoversion.activity.OpeningActivity.java", "BodyUseAPI": [], "Fixed commit": "50bf3c7fcbe85f38d4aee8149da5b2f50c5b10a1", "Url": "https://api.github.com/repos/Kolorob/Kolorob", "Date": "2016-11-10T10:07:38Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.internal.processors.pool.PoolProcessor.customExecutor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (exec != null) exec.execute(c); else { org.apache.ignite.internal.util.typedef.internal.U.warn(log, (((\"Custom executor '\" + execName) + \"' doesn't exist. \") + \"The message will be processed in the pool specified by policy\")); pools.poolForPolicy(plc).execute(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/751/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.managers.communication.GridIoManager.java", "BodyUseAPI": ["java.util.concurrent.Executor.execute(java.lang.Runnable)"], "Fixed commit": "d48d6f77511b413c299d4d585f5421abcdbd9460", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-04-17T10:53:18Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((st.countTokens()) < 6) { throw new java.lang.IllegalArgumentException(\"Attempting to create a Rule from an incomplete tokenizer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3365/buggy-version/src.main.java.org.joda.time.tz.ZoneInfoCompiler.java", "BodyUseAPI": [], "Fixed commit": "f49c671d9926eb677490a76cc8317970e5be433c", "Url": "https://api.github.com/repos/Guardiola31337/joda-time", "Date": "2015-09-25T15:20:36Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg instanceof java.lang.reflect.ParameterizedType) { arg = ((java.lang.reflect.ParameterizedType) (arg)).getRawType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/278/buggy-version/library.src.main.java.eu.inloop.viewmodel.ProxyViewHelper.java", "BodyUseAPI": [], "Fixed commit": "f67a536ac033f0499caa54f582db78971d3064a0", "Url": "https://api.github.com/repos/inloop/AndroidViewModel", "Date": "2017-08-21T10:19:51Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.nodeCapacity) != null) { builder.setNodeCapacity(convertToProtoFormat(this.nodeCapacity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2961/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-common.src.main.java.org.apache.hadoop.yarn.server.api.protocolrecords.impl.pb.RegisterNodeManagerRequestPBImpl.java", "BodyUseAPI": [], "Fixed commit": "261673b0832d5e889c4670cd4ef83d0bc2ce2ef9", "Url": "https://api.github.com/repos/hasonhai/hadoop", "Date": "2016-10-28T07:07:39Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((childPath.trim().length()) == 0) { return root; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/972/buggy-version/src.ch.niceneasy.openstack.android.object.PseudoFileSystem.java", "BodyUseAPI": [], "Fixed commit": "80323aa4f735db54a84359455681e18c746460d2", "Url": "https://api.github.com/repos/bluebossa63/OpenStackIntegration", "Date": "2013-12-27T22:55:56Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.getQueryParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (adaptiveFormats == null) { return new java.lang.String[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8928/buggy-version/smartyoutubetv.src.main.java.com.liskovsoft.smartyoutubetv.helpers.VideoInfoBuilder.java", "BodyUseAPI": [], "Fixed commit": "eb1f62ec0fb5a83c8d82a8d921ea2bde22c43dc7", "Url": "https://api.github.com/repos/yuliskov/SmartYouTubeTV", "Date": "2017-03-09T16:16:30Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(method.isAccessible())) method.setAccessible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7116/buggy-version/easypermissions.src.main.java.pub.devrel.easypermissions.EasyPermissions.java", "BodyUseAPI": ["java.lang.reflect.Method.setAccessible(boolean)"], "Fixed commit": "efb36243042166bf3fd0e4fa077ef588568183a1", "Url": "https://api.github.com/repos/prempalsingh/easypermissions", "Date": "2015-12-27T21:01:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kValue > leastClassFileSize) { throw new edu.usc.cssl.tacit.classify.svm.services.CrossValidator.KValueException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6597/buggy-version/edu.usc.cssl.tacit.classify.svm.src.edu.usc.cssl.tacit.classify.svm.services.CrossValidator.java", "BodyUseAPI": [], "Fixed commit": "d74f90c357451fc91edbabd2104e3aa5164ec61d", "Url": "https://api.github.com/repos/USC-CSSL/TACIT", "Date": "2016-05-27T01:35:51Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kValue == 1) { svm.cross_train((\"k\" + 1), class1Label, class1Files, class2Label, class2Files, doPredictiveWeights, dateObj); double accuracy = svm.cross_predict((\"k\" + 1), class1Label, class1Files, class2Label, class2Files); edu.usc.cssl.tacit.common.ui.views.ConsoleView.printlInConsoleln(\"\"); edu.usc.cssl.tacit.common.ui.views.ConsoleView.printlInConsoleln(((((\"Average accuracy over \" + kValue) + \" folds = \") + accuracy) + \"%\")); createRunReport(outputPath, dateObj); clearFiles(kValue, outputPath); writeToCSV(new double[]{ accuracy }, outputPath, dateObj); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6597/buggy-version/edu.usc.cssl.tacit.classify.svm.src.edu.usc.cssl.tacit.classify.svm.services.CrossValidator.java", "BodyUseAPI": ["edu.usc.cssl.tacit.common.ui.views.ConsoleView.printlInConsoleln(java.lang.String)", "edu.usc.cssl.tacit.classify.svm.services.CrossValidator.clearFiles(int,java.lang.String)"], "Fixed commit": "d74f90c357451fc91edbabd2104e3aa5164ec61d", "Url": "https://api.github.com/repos/USC-CSSL/TACIT", "Date": "2016-05-27T01:35:51Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connection.isConnected()) { camSet = settings; setChanged(); notifyObservers(settings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4749/buggy-version/src.main.java.nl.tudelft.contextproject.camera.Camera.java", "BodyUseAPI": [], "Fixed commit": "2dd41b216241aef6c3e28ba66476e81320f45883", "Url": "https://api.github.com/repos/TH3steven/Context-TFP", "Date": "2016-06-03T16:17:19Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((params.length) > 1) { if (i == 0) { httpUrl = ((httpUrl + (params[0])) + \"=\") + (java.net.URLEncoder.encode(params[1], \"UTF-8\")); continue; } httpUrl = (((httpUrl + \"&\") + (params[0])) + \"=\") + (java.net.URLEncoder.encode(params[1], \"UTF-8\")); }else { if (i == 0) { httpUrl = ((httpUrl + (params[0])) + \"=\") + (java.net.URLEncoder.encode(\"\", \"UTF-8\")); continue; } httpUrl = (((httpUrl + \"&\") + (params[0])) + \"=\") + (java.net.URLEncoder.encode(\"\", \"UTF-8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2712/buggy-version/modules.android.Quhao.src.com.withiter.quhao.util.http.CommonHTTPRequest.java", "BodyUseAPI": ["java.net.URLEncoder.encode(java.lang.String,java.lang.String)", "java.net.URLEncoder.encode(java.lang.String,java.lang.String)"], "Fixed commit": "8e213e5fdc9df9ab2dd1db79c9b0755008b150b8", "Url": "https://api.github.com/repos/withitergroup/quhao", "Date": "2014-01-12T15:03:27Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapla.inject.generator.RaplaGwtModuleGenerator.getSourceWriter(com.google.gwt.core.ext.typeinfo.JClassType,com.google.gwt.core.ext.GeneratorContext,com.google.gwt.core.ext.TreeLogger)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (src == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/328/buggy-version/src.main.java.org.rapla.inject.generator.RaplaGwtModuleGenerator.java", "BodyUseAPI": [], "Fixed commit": "006bbe69efa8bb5158a52607914f5a48967e3233", "Url": "https://api.github.com/repos/rapla/restinject", "Date": "2015-09-22T06:34:39Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fullscreen) == enable) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4594/buggy-version/window.Window.java", "BodyUseAPI": [], "Fixed commit": "1132e6e9cbb1c7ae1f489ab011d31e4ac3ced53f", "Url": "https://api.github.com/repos/rapus95/LWJGLUtils", "Date": "2015-05-22T18:05:40Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enable) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4594/buggy-version/window.Window.java", "BodyUseAPI": [], "Fixed commit": "1132e6e9cbb1c7ae1f489ab011d31e4ac3ced53f", "Url": "https://api.github.com/repos/rapus95/LWJGLUtils", "Date": "2015-05-22T18:05:40Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((job != null) && (!(job.isEmpty()))) { java.nio.file.Path jobPath = java.nio.file.Paths.get(jobChain.getName()).getParent().resolve(job).normalize(); jobName = jobPath.toString().replace(\"\\\\\", \"/\"); node.setJobName(jobName); node.setJob(job); com.sos.jitl.reporting.db.DBItemInventoryJob jobDbItem = dbLayer.getJobIfExists(jobChain.getInstanceId(), job, jobName); if (jobDbItem != null) { node.setJobId(jobDbItem.getId()); }else { node.setJobId(DBLayer.DEFAULT_ID); } }else { node.setJobId(DBLayer.DEFAULT_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2741/buggy-version/jitl-jobs.src.main.java.com.sos.jitl.inventory.data.InventoryEventUpdateUtil.java", "BodyUseAPI": ["java.nio.file.Paths.get(jobChain.getName()).getParent().resolve(job).normalize()", "com.sos.jitl.inventory.db.DBLayerInventory.getJobIfExists(jobChain.getInstanceId(),java.lang.String,java.lang.String)", "com.sos.jitl.reporting.db.DBItemInventoryJobChainNode.setJob(java.lang.String)", "java.nio.file.Paths.get(jobChain.getName()).getParent().resolve(java.lang.String)"], "Fixed commit": "7ebfd83ce4dfb2819dded7d5f662d3ab32068d20", "Url": "https://api.github.com/repos/sos-berlin/jitl", "Date": "2017-01-10T13:30:20Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((webserviceRequest.crosslinkUdrRequestList) != null) && (!(webserviceRequest.crosslinkUdrRequestList.isEmpty()))) { single_Search_Result.crosslinkUdrItemList = processCrosslinkOrLooplink(searchId, org.yeastrc.xlink.www.webservices.Viewer_PSMsForMultUDR_Data_Service.LinkType.Crosslink, webserviceRequest.crosslinkUdrRequestList, searcherCutoffValuesSearchLevel, annotationTypesOrderByNameList, annotationTypeIdsForGettingAnnotationData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1054/buggy-version/proxl_web_app.src.org.yeastrc.xlink.www.webservices.Viewer_PSMsForMultUDR_Data_Service.java", "BodyUseAPI": ["org.yeastrc.xlink.www.webservices.Viewer_PSMsForMultUDR_Data_Service.processCrosslinkOrLooplink(int,org.yeastrc.xlink.www.webservices.Viewer_PSMsForMultUDR_Data_Service.LinkType,java.util.List<org.yeastrc.xlink.www.webservices.Viewer_PSMsForMultUDR_Data_Service.Viewer_UDR_Data_Service_Single_UDR_Request>,org.yeastrc.xlink.searcher_psm_peptide_cutoff_objects.SearcherCutoffValuesSearchLevel,java.util.List<org.yeastrc.xlink.dto.AnnotationTypeDTO>,java.util.Set<java.lang.Integer>)"], "Fixed commit": "3c08424864615cf64ff0e71cd38ffbc2d85acbcc", "Url": "https://api.github.com/repos/yeastrc/proxl-web-app", "Date": "2016-12-16T21:03:13Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((webserviceRequest.looplinkUdrRequestList) != null) && (!(webserviceRequest.looplinkUdrRequestList.isEmpty()))) { single_Search_Result.looplinkUdrItemList = processCrosslinkOrLooplink(searchId, org.yeastrc.xlink.www.webservices.Viewer_PSMsForMultUDR_Data_Service.LinkType.Looplink, webserviceRequest.looplinkUdrRequestList, searcherCutoffValuesSearchLevel, annotationTypesOrderByNameList, annotationTypeIdsForGettingAnnotationData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1054/buggy-version/proxl_web_app.src.org.yeastrc.xlink.www.webservices.Viewer_PSMsForMultUDR_Data_Service.java", "BodyUseAPI": ["org.yeastrc.xlink.www.webservices.Viewer_PSMsForMultUDR_Data_Service.processCrosslinkOrLooplink(int,org.yeastrc.xlink.www.webservices.Viewer_PSMsForMultUDR_Data_Service.LinkType,java.util.List<org.yeastrc.xlink.www.webservices.Viewer_PSMsForMultUDR_Data_Service.Viewer_UDR_Data_Service_Single_UDR_Request>,org.yeastrc.xlink.searcher_psm_peptide_cutoff_objects.SearcherCutoffValuesSearchLevel,java.util.List<org.yeastrc.xlink.dto.AnnotationTypeDTO>,java.util.Set<java.lang.Integer>)"], "Fixed commit": "3c08424864615cf64ff0e71cd38ffbc2d85acbcc", "Url": "https://api.github.com/repos/yeastrc/proxl-web-app", "Date": "2016-12-16T21:03:13Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((properties[12].split(\":\")[0].length()) < ((properties[12].length()) - 1)) { entry.specComments = java.lang.String.valueOf(properties[12].split(\":\")[1]); }else { entry.specComments = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4684/buggy-version/NRGScouting.app.src.main.java.com.competitionapp.nrgscouting.SEntry.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "aefd11a39f28c87a29f825d54c6e402d71b6d262", "Url": "https://api.github.com/repos/NRG948/NRG-Scouting-Application", "Date": "2017-09-21T23:25:19Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((properties[7].split(\":\")[0].length()) < ((properties[7].length()) - 1)) { entry.autoGearComment = java.lang.String.valueOf(properties[7].split(\":\")[1]); }else { entry.autoGearComment = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4684/buggy-version/NRGScouting.app.src.main.java.com.competitionapp.nrgscouting.SEntry.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "aefd11a39f28c87a29f825d54c6e402d71b6d262", "Url": "https://api.github.com/repos/NRG948/NRG-Scouting-Application", "Date": "2017-09-21T23:25:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof org.openqa.selenium.StaleElementReferenceException) { java.lang.System.out.println(\"StaleElementReferenceException\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8165/buggy-version/src.jhd.Main.java", "BodyUseAPI": [], "Fixed commit": "11db44d6c9a7a541592907c7ed925d2bf5d0efaa", "Url": "https://api.github.com/repos/jhd147350/AutoRefreshAndRemind", "Date": "2017-03-19T23:29:06Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.worldwind.gesture.GestureRecognizer.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state == (gov.nasa.worldwind.WorldWind.POSSIBLE)) { this.transitionToState(event, WorldWind.FAILED); }else if ((state == (gov.nasa.worldwind.WorldWind.BEGAN)) || (state == (gov.nasa.worldwind.WorldWind.CHANGED))) { this.transitionToState(event, WorldWind.CANCELLED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5419/buggy-version/worldwind.src.main.java.gov.nasa.worldwind.gesture.GestureRecognizer.java", "BodyUseAPI": [], "Fixed commit": "0be17ff1b0596b0c4d7deb417a6c60b185bb3860", "Url": "https://api.github.com/repos/NASAWorldWind/WorldWindAndroid", "Date": "2016-06-14T19:21:57Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.activeGestures) > 0) { (this.activeGestures)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5419/buggy-version/worldwind.src.main.java.gov.nasa.worldwind.BasicWorldWindowController.java", "BodyUseAPI": [], "Fixed commit": "0be17ff1b0596b0c4d7deb417a6c60b185bb3860", "Url": "https://api.github.com/repos/NASAWorldWind/WorldWindAndroid", "Date": "2016-06-14T19:21:57Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { varBuilder.setObject(EventProtos.Var.Object.newBuilder().setValue(\"\").setType(\"null\").build()); return varBuilder.build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3206/buggy-version/src.main.java.com.github.kornilova_l.profiler.logger.Logger.java", "BodyUseAPI": [], "Fixed commit": "f8e3e37ab9d228811fd8eea376a5bb03fc971d59", "Url": "https://api.github.com/repos/kornilova-l/flamegraph-visualizer", "Date": "2017-06-21T14:29:39Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(postIds.add(post.idAlone))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7571/buggy-version/src.main.java.org.quantumbadger.redreader.adapters.PostListingAdapter.java", "BodyUseAPI": [], "Fixed commit": "8efb9155c52babe7e274af534a415f0eb2c7ebe8", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2013-04-05T16:32:53Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Session.get(java.lang.Class,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (student != null) return student.getNameWithInitials(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4860/buggy-version/src.ims.business.CheckUserToLogin.java", "BodyUseAPI": ["ims.data.Student.getNameWithInitials()"], "Fixed commit": "885fde94cde01c74500c8ba6dd6a89244e854d35", "Url": "https://api.github.com/repos/fitdetroit/InternshipManagementSystem_2", "Date": "2013-10-30T02:13:12Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Session.get(java.lang.Class,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (company != null) return company.getCompanyName(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4860/buggy-version/src.ims.business.CheckUserToLogin.java", "BodyUseAPI": ["ims.data.Company.getCompanyName()"], "Fixed commit": "885fde94cde01c74500c8ba6dd6a89244e854d35", "Url": "https://api.github.com/repos/fitdetroit/InternshipManagementSystem_2", "Date": "2013-10-30T02:13:12Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) == null) { peer = new com.guokr.simbase.SimTable(); }else { peer = new com.guokr.simbase.SimTable(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5598/buggy-version/src.main.java.com.guokr.simbase.SimTable.java", "BodyUseAPI": [], "Fixed commit": "ec4a3d250f2e519edb58165733bf469ab2cdd081", "Url": "https://api.github.com/repos/guokr/simbase", "Date": "2013-10-30T07:50:23Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Ctx.project.getSelectedScene()) != null) addElements(Ctx.project.getSelectedScene().getVerbManager(), java.util.Arrays.asList(Ctx.project.getSelectedScene().getVerbManager().getVerbs().values().toArray(new com.bladecoder.engine.model.Verb[0]))); else addElements(null, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8412/buggy-version/adventure-editor.src.main.java.com.bladecoder.engineeditor.ui.VerbList.java", "BodyUseAPI": [], "Fixed commit": "5718bbf39be1abc19c4206676e48e28dfc8f1848", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2016-05-25T09:01:25Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configured.getConf()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (conf == null) { conf = new org.apache.hadoop.conf.Configuration(); setConf(conf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6604/buggy-version/analytics.mapreduce.src.main.java.mil.nga.giat.geowave.analytic.mapreduce.kde.KDEJobRunner.java", "BodyUseAPI": [], "Fixed commit": "72ec5e2bf5fbf137a1b46c091fb223896c0a7175", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-01-27T23:33:05Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configured.getConf()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (conf == null) { conf = new org.apache.hadoop.conf.Configuration(); setConf(conf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6604/buggy-version/extensions.adapters.raster.src.main.java.mil.nga.giat.geowave.adapter.raster.resize.RasterTileResizeJobRunner.java", "BodyUseAPI": [], "Fixed commit": "72ec5e2bf5fbf137a1b46c091fb223896c0a7175", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-01-27T23:33:05Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (media instanceof info.movito.themoviedbapi.model.MovieDb) { getSupportActionBar().setTitle(((info.movito.themoviedbapi.model.MovieDb) (this.media)).getTitle()); }else { getSupportActionBar().setTitle(((info.movito.themoviedbapi.model.tv.TvSeries) (this.media)).getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3554/buggy-version/app.src.main.java.com.github.skittlesdev.kubrick.MediaActivity.java", "BodyUseAPI": [], "Fixed commit": "db547596c3da77b7aa6716279810887600842d63", "Url": "https://api.github.com/repos/skittlesdev/kubrick", "Date": "2015-11-06T16:44:19Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layer.getName()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3666/buggy-version/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.GeometryToFeaturesDialog.java", "BodyUseAPI": [], "Fixed commit": "6be8fba646f9c8bef4915de5e266e215c932af8c", "Url": "https://api.github.com/repos/mapplus/spatial_statistics_for_geotools_udig", "Date": "2015-12-13T10:54:21Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newIndex > oldIndex) { minIndex += 1; maxIndex += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5960/buggy-version/src.io.github.zachohara.percussionpacker.column.CardList.java", "BodyUseAPI": [], "Fixed commit": "4edf16a743a20e1dc3c84d8f1edb3507e202b72b", "Url": "https://api.github.com/repos/ZachOhara/Percussion-Packer", "Date": "2016-05-22T02:26:48Z"},
{"Line": "=>3880", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!r) r = consumeToken(b, com.intellij.plugins.haxe.lang.parser.OCOMMA);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1844/buggy-version/gen.com.intellij.plugins.haxe.lang.parser.HaxeParser.java", "BodyUseAPI": [], "Fixed commit": "39fb57221093ef52cfd247f41d3fdc3ee45ea6a5", "Url": "https://api.github.com/repos/HaxeFoundation/intellij-haxe", "Date": "2015-03-17T20:14:54Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tasks.size()) > 0) { newView.add(tasks.get(((tasks.size()) - 1)).getView()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1726/buggy-version/Panic.MidPanelView.java", "BodyUseAPI": ["javax.swing.JPanel.add(tasks.get(((tasks.size()) - 1)).getView())", "java.util.ArrayList<Panic.Task>.size()", "tasks.get(((tasks.size()) - 1)).getView()", "java.util.ArrayList<Panic.Task>.get(((tasks.size()) - 1))"], "Fixed commit": "28154dd539df2ae8485a261a113de0e409a09e34", "Url": "https://api.github.com/repos/ShervinS/dontpanic", "Date": "2013-02-21T20:41:39Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.alternadev.georenting.data.tasks.UpdateGeofencesTask.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lastLocation == null) { mRealm.close(); return com.google.android.gms.gcm.GcmNetworkManager.RESULT_RESCHEDULE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/316/buggy-version/app.src.main.java.de.alternadev.georenting.data.tasks.UpdateGeofencesTask.java", "BodyUseAPI": [], "Fixed commit": "0f71b5209de52b62b762a0340ca8605a1a1bc737", "Url": "https://api.github.com/repos/alternaDev/georenting-android", "Date": "2016-04-14T07:13:57Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rarity <= 4) { values.add(info[8]); }else { values.add(\"---\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2547/buggy-version/mhag-web.src.main.java.org.mhag.builder.LoaderUtils.java", "BodyUseAPI": [], "Fixed commit": "7351fc7e2c1b8a84ee5d2d777216f483e61a0492", "Url": "https://api.github.com/repos/bronwen-cassidy/mhag-info", "Date": "2016-09-06T15:31:06Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.nagarro.gde.controller.ADD_CYCLE_ENTRY.equals(cycleMasterDataDtoObj.getActionType())) || (com.nagarro.gde.controller.UPDATE_CYCLE_ENTRY.equals(cycleMasterDataDtoObj.getActionType()))) || (com.nagarro.gde.controller.UPDATE_CYCLE_ASSESSMENT.equals(cycleMasterDataDtoObj.getActionType()))) || (com.nagarro.gde.controller.UPDATE_CYCLE_ONLINE_TEST.equals(cycleMasterDataDtoObj.getActionType()))) { cycleMasterDataValidator.validate(cycleMasterDataDtoObj, result); if (!(result.hasErrors())) { com.nagarro.gde.persistence.model.CycleMasterData masterData = cycleMasterDataService.saveOrUpdate(cycleMasterDataDtoObj); if (com.nagarro.gde.controller.ADD_CYCLE_ENTRY.equals(cycleMasterDataDtoObj.getActionType())) { java.lang.StringBuilder urlLink = new java.lang.StringBuilder(); urlLink.append(getApplicationPath(httpServletRequest)).append(\"?cycleId=\").append(masterData.getId()); java.lang.String[] args = new java.lang.String[]{ urlLink.toString() }; model.addAttribute(\"message\", getMessageSource().getMessage(\"cycle.successfully.created.message\", args, locale).replaceAll(\"CYCLE_TITLE\", masterData.getCycleName())); }else if (com.nagarro.gde.controller.UPDATE_CYCLE_ASSESSMENT.equals(cycleMasterDataDtoObj.getActionType())) { model.addAttribute(\"message\", getMessageSource().getMessage(\"cycle.assessment.successfully.created.message\", null, locale)); } homeView = CYCLE_MASTERDATA_VIEW; }else { if ((com.nagarro.gde.controller.ADD_CYCLE_ENTRY.equals(cycleMasterDataDtoObj.getActionType())) || (com.nagarro.gde.controller.UPDATE_CYCLE_ENTRY.equals(cycleMasterDataDtoObj.getActionType()))) { java.util.Map<java.lang.Long, java.lang.String> allowedCitizenshipMap = getAllowedCitizenshipMapFromDto(cycleMasterDataDtoObj, locale); model.addAttribute(\"citizenshipDropDown\", allowedCitizenshipMap); return new org.springframework.web.servlet.ModelAndView(com.nagarro.gde.util.GDEStringUtils.prepend(com.nagarro.gde.controller.CYCLE_REGISTRATION_VIEW, com.nagarro.gde.controller.FORM_SET_ONE)); }else if (com.nagarro.gde.controller.UPDATE_CYCLE_ASSESSMENT.equals(cycleMasterDataDtoObj.getActionType())) { return new org.springframework.web.servlet.ModelAndView(com.nagarro.gde.util.GDEStringUtils.prepend(com.nagarro.gde.controller.CYCLE_ASSESSMENT_VIEW, com.nagarro.gde.controller.FORM_SET_ONE)); } } }else if (com.nagarro.gde.controller.DELETE_CYCLE_ENTRY.equals(cycleMasterDataDtoObj.getActionType())) { cycleMasterDataService.deleteCycle(cycleMasterDataDtoObj.getObjId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2582/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.controller.CycleMasterDataController.java", "BodyUseAPI": ["com.nagarro.gde.service.api.CycleMasterDataService.deleteCycle(cycleMasterDataDtoObj.getObjId())", "com.nagarro.gde.controller.UPDATE_CYCLE_ENTRY.equals(cycleMasterDataDtoObj.getActionType())", "com.nagarro.gde.dto.CycleMasterDataDto.getActionType()", "com.nagarro.gde.dto.CycleMasterDataDto.getActionType()", "com.nagarro.gde.dto.CycleMasterDataDto.getActionType()", "com.nagarro.gde.controller.DELETE_CYCLE_ENTRY.equals(cycleMasterDataDtoObj.getActionType())", "com.nagarro.gde.controller.ADD_CYCLE_ENTRY.equals(cycleMasterDataDtoObj.getActionType())", "com.nagarro.gde.controller.ADD_CYCLE_ENTRY.equals(cycleMasterDataDtoObj.getActionType())", "com.nagarro.gde.controller.UPDATE_CYCLE_ASSESSMENT.equals(cycleMasterDataDtoObj.getActionType())", "com.nagarro.gde.controller.UPDATE_CYCLE_ASSESSMENT.equals(cycleMasterDataDtoObj.getActionType())", "com.nagarro.gde.service.api.CycleMasterDataService.saveOrUpdate(com.nagarro.gde.dto.CycleMasterDataDto)", "com.nagarro.gde.dto.CycleMasterDataDto.getActionType()", "com.nagarro.gde.dto.CycleMasterDataDto.getActionType()", "com.nagarro.gde.dto.CycleMasterDataDto.getObjId()", "com.nagarro.gde.validator.CycleMasterDataValidator.validate(com.nagarro.gde.dto.CycleMasterDataDto,org.springframework.validation.BindingResult)", "com.nagarro.gde.dto.CycleMasterDataDto.getActionType()", "com.nagarro.gde.controller.CycleMasterDataController.getAllowedCitizenshipMapFromDto(com.nagarro.gde.dto.CycleMasterDataDto,java.util.Locale)"], "Fixed commit": "d3bdeb1c0693eea9f1cd4560a23ccdb4b8213ece", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-04-28T12:31:36Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentPermission.getAccessKey()) != null) && ((currentPermission.getAccessKey().getUser().getRole()) != (com.devicehive.model.enums.UserRole.ADMIN))) { if (com.devicehive.model.AvailableActions.getAdminActions().contains(allowedAction.getValue())) { permissionsToRemove.add(currentPermission); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9179/buggy-version/src.main.java.com.devicehive.auth.CheckPermissionsHelper.java", "BodyUseAPI": ["java.util.Set<com.devicehive.model.AccessKeyPermission>.add(com.devicehive.model.AccessKeyPermission)"], "Fixed commit": "e1fa00925e4dbc4fa394b63b932a695246f69a97", "Url": "https://api.github.com/repos/devicehive/devicehive-java-server", "Date": "2015-09-25T22:02:01Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["emailTxt.getText().toString()", "passwordTxt.getText().toString()", "passwordConfirmationTxt.getText().toString()", "nickNameTxt.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((email.equals(\"\")) || (nickname.equals(\"\"))) || (pass.equals(\"\"))) || (passconf.equals(\"\"))) { android.widget.Toast.makeText(context, \"Please fill all fields.\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6702/buggy-version/app.src.main.java.pt.ulisboa.tecnico.cmov.airdesk_g10.activities.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "e0a156c851db63cf7b019dfb8bccee7b6f2e609a", "Url": "https://api.github.com/repos/CMOV-g10/AirDesk-g10", "Date": "2015-04-10T22:15:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isChildRequestScroll(child)) { consumed[1] = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2502/buggy-version/app.src.main.java.cq.behaviordemo.behavior.TabBehavior.java", "BodyUseAPI": [], "Fixed commit": "904970d3a6d02d276343160b55d54318b7149487", "Url": "https://api.github.com/repos/CSnowStack/BehaviorDemo", "Date": "2016-12-15T07:23:24Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ch.inofix.portlet.data.service.impl.MeasurementLocalServiceImpl._log.isDebugEnabled()) { ch.inofix.portlet.data.service.impl.MeasurementLocalServiceImpl._log.debug(\"search()\"); ch.inofix.portlet.data.service.impl.MeasurementLocalServiceImpl._log.debug((\"sort = \" + sort)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8570/buggy-version/data-portlet.src.main.java.ch.inofix.portlet.data.service.impl.MeasurementLocalServiceImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.log.Log.debug((\"sort = \" + sort))", "com.liferay.portal.kernel.log.Log.debug(java.lang.String)"], "Fixed commit": "3d43a8ee210745abff3b2343c3bee5c8a2974f99", "Url": "https://api.github.com/repos/inofix/liferay-modules", "Date": "2017-11-30T14:39:15Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ok2Delete) { context.liveOkeUDPClient.sendMessage(((wsCommand + \",\") + rsvpNumber), context.liveOkeUDPClient.liveOkeIPAddress, context.liveOkeUDPClient.LIVEOKE_UDP_PORT); if (wsCommand.equalsIgnoreCase(\"deleter\")) { it.remove(); } }else { com.nispok.snackbar.SnackbarManager.show(com.nispok.snackbar.Snackbar.with(context).type(SnackbarType.MULTI_LINE).duration(Snackbar.SnackbarDuration.LENGTH_LONG).textColor(Color.WHITE).color(Color.RED).text(\"No Permission: Only the HOST has access to this action.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5102/buggy-version/app.src.main.java.com.vnguyen.liveokeremote.helper.AlertDialogHelper.java", "BodyUseAPI": [], "Fixed commit": "07bbd4d10110b4197309d7390a76b9a5131a2b6d", "Url": "https://api.github.com/repos/vnguyen972/LiveOkeRemote", "Date": "2015-01-25T16:01:25Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.serverMasterCode) != null) { if (((masterCode != null) && (!(masterCode.equals(\"\")))) && (masterCode.equalsIgnoreCase(context.serverMasterCode))) { ok2Delete = true; } }else { ok2Delete = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5102/buggy-version/app.src.main.java.com.vnguyen.liveokeremote.helper.AlertDialogHelper.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(context.serverMasterCode)"], "Fixed commit": "07bbd4d10110b4197309d7390a76b9a5131a2b6d", "Url": "https://api.github.com/repos/vnguyen972/LiveOkeRemote", "Date": "2015-01-25T16:01:25Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((window.getScriptDisplayFrame().getScript()) != null) { scriptDB.save(window.getScriptDisplayFrame().getScript()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2526/buggy-version/src.gui.ScriptDBFrame.java", "BodyUseAPI": ["window.getScriptDisplayFrame().getScript()", "gui.RoboScripterWindow.getScriptDisplayFrame()", "script.ScriptDB.save(window.getScriptDisplayFrame().getScript())"], "Fixed commit": "3e29ff6434c35cb0b1135df28a334021b1db0311", "Url": "https://api.github.com/repos/funkiben/RoboScripter", "Date": "2015-10-27T00:17:46Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((serviceImageConfig.getContainerId()) != null) { boolean done = com.cloudezz.houston.deployer.DeployerUtil.deleteContainer(dockerClient, serviceImageConfig); if (!done) containerIdFailList.add(serviceImageConfig.getContainerId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6266/buggy-version/src.main.java.com.cloudezz.houston.deployer.DeployerImpl.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(serviceImageConfig.getContainerId())", "com.cloudezz.houston.deployer.DeployerUtil.deleteContainer(com.cloudezz.houston.deployer.docker.client.DockerClient,com.cloudezz.houston.domain.ServiceImageCfg)", "com.cloudezz.houston.domain.ServiceImageCfg.getContainerId()"], "Fixed commit": "e569a560696710fa937a6c5232c672e585c1a5e4", "Url": "https://api.github.com/repos/cloudezz/houston", "Date": "2014-03-12T19:55:36Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appImageConfig.getContainerId()) != null) { boolean success = com.cloudezz.houston.deployer.DeployerUtil.deleteContainer(dockerClient, appImageConfig); if (((containerIdFailList.size()) > 0) || (!success)) { throw new com.cloudezz.houston.deployer.docker.client.DockerImageStopException(\"Few container's delete failed\"); }else { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6266/buggy-version/src.main.java.com.cloudezz.houston.deployer.DeployerImpl.java", "BodyUseAPI": ["com.cloudezz.houston.deployer.DeployerUtil.deleteContainer(com.cloudezz.houston.deployer.docker.client.DockerClient,com.cloudezz.houston.domain.AppImageCfg)"], "Fixed commit": "e569a560696710fa937a6c5232c672e585c1a5e4", "Url": "https://api.github.com/repos/cloudezz/houston", "Date": "2014-03-12T19:55:36Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expr instanceof org.nlpcn.es4sql.SQLVariantRefExpr) { value = expr.toString(); }else if (expr instanceof org.nlpcn.es4sql.SQLAllColumnExpr) { value = \"*\"; }else { throw new org.nlpcn.es4sql.exception.SqlParseException((\"can not support this type \" + (expr.getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8710/buggy-version/src.main.java.org.nlpcn.es4sql.Util.java", "BodyUseAPI": ["org.nlpcn.es4sql.SQLExpr.toString()", "org.nlpcn.es4sql.SQLExpr.getClass()"], "Fixed commit": "fc7e95375798bea290eb4b0e0361539a1f95f2c7", "Url": "https://api.github.com/repos/jstortz/elasticsearch-sql", "Date": "2015-10-16T21:36:52Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCheckedItemCount()) > 1) intent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, fils); else intent.putExtra(Intent.EXTRA_STREAM, fils.get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7509/buggy-version/src.com.akrolsmir.bakegami.FavoritesView.java", "BodyUseAPI": [], "Fixed commit": "baa290221fc83998f1ab32ef77bf3930119ab6e7", "Url": "https://api.github.com/repos/akrolsmir/Bakegami", "Date": "2014-11-05T21:04:10Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fils.size()) == (getCheckedItemCount())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7509/buggy-version/src.com.akrolsmir.bakegami.FavoritesView.java", "BodyUseAPI": [], "Fixed commit": "baa290221fc83998f1ab32ef77bf3930119ab6e7", "Url": "https://api.github.com/repos/akrolsmir/Bakegami", "Date": "2014-11-05T21:04:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) dataLabel = ((data.getClass().getSimpleName()) + \"@\") + (data.hashCode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9273/buggy-version/src.gui.org.deidentifier.arx.gui.model.ModelEvent.java", "BodyUseAPI": [], "Fixed commit": "2318a766c5c663f3b7b8173886fd086ac28ae0df", "Url": "https://api.github.com/repos/johnpatcher/arx", "Date": "2014-04-01T14:14:31Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source) != null) sourceLabel = ((source.getClass().getSimpleName()) + \"@\") + (source.hashCode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9273/buggy-version/src.gui.org.deidentifier.arx.gui.model.ModelEvent.java", "BodyUseAPI": [], "Fixed commit": "2318a766c5c663f3b7b8173886fd086ac28ae0df", "Url": "https://api.github.com/repos/johnpatcher/arx", "Date": "2014-04-01T14:14:31Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.collections.FXCollections.observableArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(items.isEmpty())) { listview_dataprop.setItems(items); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4124/buggy-version/SkosShopper.src.controller.SkosEditorController.java", "BodyUseAPI": ["javafx.scene.control.ListView<java.lang.String>.setItems(javafx.collections.ObservableList<java.lang.String>)"], "Fixed commit": "0fcd0a57a7c977b47468b732016f211028cafcb3", "Url": "https://api.github.com/repos/VRage/SkosShopper", "Date": "2014-11-09T14:11:35Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (geocode == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3361/buggy-version/main.src.cgeo.geocaching.connector.ec.ECConnector.java", "BodyUseAPI": [], "Fixed commit": "e6f7585487ef3bc8d2e8e8157d7c962842448004", "Url": "https://api.github.com/repos/cgeo/cgeo", "Date": "2013-12-17T09:41:07Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["was.Scenario.loc(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((((l.x) > 0) && ((l.x) < (tmpGb.getCols()))) && ((l.y) > 0)) && ((l.y) < (tmpGb.getRows()))) { try { if (tmpGb.isEmptyCell(l.x, l.y)) { return tmpGb.addPlayer(((was.Player) (p.newInstance())), l); } } catch (java.lang.IndexOutOfBoundsException ex) { } catch (java.lang.InstantiationException ex) { java.util.logging.Logger.getLogger(was.Scenario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } catch (java.lang.IllegalAccessException ex) { java.util.logging.Logger.getLogger(was.Scenario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7807/buggy-version/src.was.Scenario.java", "BodyUseAPI": ["was.GameBoard.addPlayer(java.lang.Object,was.GameLocation)", "was.GameBoard.isEmptyCell(l.x,l.y)"], "Fixed commit": "22ae8acc4f2f586d1ca50ab6a5e1fcdefab250f5", "Url": "https://api.github.com/repos/davidswelt/wolvesandsheep", "Date": "2014-04-09T03:52:17Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socleerHosts.size()) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/749/buggy-version/routing.community.Socleer.java", "BodyUseAPI": [], "Fixed commit": "8392654c990a3253b7f070d661d2847479ff2a30", "Url": "https://api.github.com/repos/esquire-/the-one-pitt", "Date": "2016-04-12T19:36:37Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.isEmpty()) { result.add(java.net.Proxy.NO_PROXY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4282/buggy-version/src.main.java.com.github.markusbernhardt.proxy.selector.misc.ProxyListFallbackSelector.java", "BodyUseAPI": ["java.util.List<java.net.Proxy>.add(java.net.Proxy)"], "Fixed commit": "a6fe6feb04f8d6c7fdbedb1455c344c3cc9cac3f", "Url": "https://api.github.com/repos/dbdr/proxy-vole", "Date": "2017-09-29T14:55:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.concord.energy3d.util.Config.isWebStart()) { if (((args.length) > 1) && (!(args[((args.length) - 1)].startsWith(\"-\")))) mainFrame.open(args[((args.length) - 1)]); }else { if ((args.length) > 0) mainFrame.open(args[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2874/buggy-version/src.main.java.org.concord.energy3d.MainApplication.java", "BodyUseAPI": [], "Fixed commit": "8c483b4944ba1b480ff5ca399aedf9d6ffdc02e5", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2015-08-28T19:56:44Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((section.getElementId()) != null) && ((section.getElementId().trim().length()) > 0)) { section.setElement(model.getElement(section.getElementId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/635/buggy-version/structurizr-core.src.com.structurizr.documentation.Documentation.java", "BodyUseAPI": ["com.structurizr.documentation.Section.setElement(model.getElement(section.getElementId()))", "com.structurizr.model.Model.getElement(section.getElementId())", "com.structurizr.documentation.Section.getElementId()"], "Fixed commit": "20f6053978a5e8f702e3f5f31482ea19b4881cfc", "Url": "https://api.github.com/repos/structurizr/java", "Date": "2017-07-20T16:38:13Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.mjr.extraplanets.Config.radiation) this.potashGen = new micdoodle8.mods.galacticraft.core.world.gen.WorldGenMinableMeta(com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.potash, 5, 0, true, com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.mercuryBlocks, 2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2476/buggy-version/src.main.java.com.mjr.extraplanets.planets.Mercury.worldgen.BiomeDecoratorMercury.java", "BodyUseAPI": [], "Fixed commit": "3ee4c42164e349b0a867be23346c619b091cffb4", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-07-07T15:22:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.radiation) this.generateOre(10, this.potashGen, 0, 20);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2476/buggy-version/src.main.java.com.mjr.extraplanets.planets.Mercury.worldgen.BiomeDecoratorMercury.java", "BodyUseAPI": [], "Fixed commit": "3ee4c42164e349b0a867be23346c619b091cffb4", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-07-07T15:22:31Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((engine.network.client.GlobalData.getCurrentState()) instanceof engine.state.MainMenu) { ((engine.state.MainMenu) (engine.network.client.GlobalData.getCurrentState())).error(message); }else { engine.network.client.GlobalData.setCurrentState(new engine.state.MainMenu(message)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4732/buggy-version/src.engine.network.client.Client.java", "BodyUseAPI": [], "Fixed commit": "f24460cb0abb3ca443d0e014face7fdacd9de1c8", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-02-18T14:53:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((climateConditionsSystem) != null) { climateConditionsSystem.addHumidityModifier(java.lang.Integer.MIN_VALUE, new org.terasology.climateConditions.ConditionModifier() { @java.lang.Override public float getCondition(float value, float x, float y, float z) { return getHumidity(value); } }); climateConditionsSystem.addTemperatureModifier(java.lang.Integer.MIN_VALUE, new org.terasology.climateConditions.ConditionModifier() { @java.lang.Override public float getCondition(float value, float x, float y, float z) { return getTemperature(value); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2895/buggy-version/src.main.java.org.terasology.seasons.SeasonSystem.java", "BodyUseAPI": [], "Fixed commit": "894036e719e682daf7f70c7629a6722a3009d266", "Url": "https://api.github.com/repos/Terasology/Seasons", "Date": "2014-10-27T17:19:11Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.comment) == null) { this.comment = (commentwritten) ? commentValue.toString() : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/608/buggy-version/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java", "BodyUseAPI": [], "Fixed commit": "fa9f8034f9930702b4b058b186ce52d5bc57930b", "Url": "https://api.github.com/repos/RIPE-NCC/whois", "Date": "2014-01-15T10:35:28Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visualObject.player) == player) { for (mytown.handlers.VisualsHandler.BlockCoords coord : visualObject.blockCoords) { if (((((coord.x) == x) && ((coord.y) == y)) && ((coord.z) == z)) && ((coord.dim) == dim)) { coord.packetSent = false; return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7223/buggy-version/src.main.java.mytown.handlers.VisualsHandler.java", "BodyUseAPI": [], "Fixed commit": "09bde753c0e79a1d6adbbfc569231b57b477f7fe", "Url": "https://api.github.com/repos/MyEssentials/MyTown2", "Date": "2015-06-21T18:23:20Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentlyBestAxioms.isEmpty())) { logger.info((\"Best axiom was \" + (currentlyBestAxioms.first()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7602/buggy-version/components-core.src.main.java.org.dllearner.core.AbstractAxiomLearningAlgorithm.java", "BodyUseAPI": ["org.slf4j.Logger.info((\"Best axiom was \" + (currentlyBestAxioms.first())))", "java.util.SortedSet<org.dllearner.core.EvaluatedAxiom<T>>.first()"], "Fixed commit": "d985c906c20a0d692a4f52bf4284ec1781f4afe8", "Url": "https://api.github.com/repos/AKSW/DL-Learner", "Date": "2014-09-17T15:32:38Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == (follow)) fill(255); else noFill();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1342/buggy-version/src.main.java.Visualizer.java", "BodyUseAPI": [], "Fixed commit": "23651fed39461bfa253c101bcb5037daf1464179", "Url": "https://api.github.com/repos/erictapen/weird-tree-presenter", "Date": "2015-10-17T10:32:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pine.dao.Dao.getKey(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.pine.dao.Dao.getTable(key.getTableId()).getType()) != (org.pine.model.TableType.ENUMERATION)) { getDialog(out, key, content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2656/buggy-version/src.org.pine.servlets.ui.dialogs.GetParameterTypeDialog.java", "BodyUseAPI": ["org.pine.servlets.ui.dialogs.GetParameterTypeDialog.getDialog(java.io.PrintWriter,org.pine.model.Key,java.lang.String)"], "Fixed commit": "15c58c9330654a2b69b38609290a70091612f192", "Url": "https://api.github.com/repos/barik87/pine", "Date": "2013-04-22T22:07:27Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.isArrayUsedAsTypeForGenericBoundedWildcard(arrayDeclarator)) { typeOrIdent = arrayDeclarator.getParent(); }else { typeOrIdent = arrayDeclarator.getFirstChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1253/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getParent()"], "Fixed commit": "ba4f230c35058332bec79ab575c86b64118e12df", "Url": "https://api.github.com/repos/liscju/checkstyle", "Date": "2015-04-18T00:21:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movie) != null) movie.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2413/buggy-version/src.main.java.de.screenflow.frankenstein.vf.input.VideoInput.java", "BodyUseAPI": [], "Fixed commit": "e487bfdf352cf1f722b270e387dcddc3491c6eae", "Url": "https://api.github.com/repos/olir/Frankenstein", "Date": "2017-07-04T16:48:32Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, com.xingcloud.userprops_meta_util.UpdateFunc>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (uf == null) { metaMap = getMetaInfo(projectID); uf = metaMap.get(qualifier); if (uf == null) { com.xingcloud.xa.coprocessor.SecondaryIndexCoprocessor.LOG.error(((\"Attribute: [\" + qualifier) + \"] doesn't exist in meta table!\")); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/517/buggy-version/IndexGenerator.src.main.java.com.xingcloud.xa.coprocessor.SecondaryIndexCoprocessor.java", "BodyUseAPI": [], "Fixed commit": "a7ee91a77e62c60a43e4e26b784b8d2179a91a47", "Url": "https://api.github.com/repos/XingCloud/HSecondaryIndex", "Date": "2013-07-26T02:59:28Z"},
{"Line": "=>2918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((np) == (-1)) { np = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4232/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONLexerBase.java", "BodyUseAPI": [], "Fixed commit": "61c32c9b3077e4ec68463dcbd183cc3d68a6cb01", "Url": "https://api.github.com/repos/zhangwei5095/alibaba-fastjson", "Date": "2015-08-30T12:03:49Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!allVms) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3427/buggy-version/src.main.java.com.appdynamics.monitors.VMWare.VMWareMonitor.java", "BodyUseAPI": [], "Fixed commit": "6e0794402cfbd3922a676641881b1a8358e4dd50", "Url": "https://api.github.com/repos/Appdynamics/vmware-vsphere-monitoring-extension", "Date": "2016-03-04T08:08:59Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"*\".equals(vmNameFromConfig)) { allVms = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3427/buggy-version/src.main.java.com.appdynamics.monitors.VMWare.VMWareMonitor.java", "BodyUseAPI": [], "Fixed commit": "6e0794402cfbd3922a676641881b1a8358e4dd50", "Url": "https://api.github.com/repos/Appdynamics/vmware-vsphere-monitoring-extension", "Date": "2016-03-04T08:08:59Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentFormula.containsArduinoSensors()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7127/buggy-version/catroid.src.org.catrobat.catroid.ui.fragment.FormulaEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "413cf480f697ce898f6d9d784a737d0f7d31f0e7", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2014-07-02T06:23:41Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.ui.controllers.PrescriptionItem.getMedicationForm()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((medicationForm == null) || (medicationForm.equals(\"\"))) { medicationForm = \"N/A\"; }else { medicationForm = medicationForm.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/360/buggy-version/app.femr.ui.controllers.PDFController.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "5ac103b1f5cacc242f740bf8341f7c6c327ab837", "Url": "https://api.github.com/repos/gerrytucker78/femr", "Date": "2016-10-11T01:05:03Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6860/buggy-version/src.main.java.com.mridang.hardware.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "6721ee5d43d3c4d1e9b6a55e4f5e3d91e7b0c8ed", "Url": "https://api.github.com/repos/mridang/dashclock-hardware", "Date": "2015-03-29T09:10:30Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.title) == (AcademicRole.PROFESSOR)) this.setDrunkTurns(params.getParamValue(\"professorDrunkTurns\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1570/buggy-version/src.domain.Academic.java", "BodyUseAPI": [], "Fixed commit": "64f191f7ccf34dbce05bf49e9a6454ac82809765", "Url": "https://api.github.com/repos/HerrSubset/UniSim", "Date": "2015-12-24T10:15:58Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (resources != null) { try { entryName = resources.getResourceEntryName(action.getIcon()); } catch (java.lang.Exception ignored) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9220/buggy-version/app.src.main.java.james.medianotification.services.NotificationService.java", "BodyUseAPI": ["android.content.res.Resources.getResourceEntryName(action.getIcon())"], "Fixed commit": "b3f34080874614624aed2b564d7297c99996f735", "Url": "https://api.github.com/repos/TheAndroidMaster/MediaNotification", "Date": "2017-08-10T18:34:03Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adsManager) != null) { adsManager.destroy(); adsManager = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/828/buggy-version/demo.src.main.java.com.google.googlemediaframeworkdemo.demo.adplayer.ImaPlayer.java", "BodyUseAPI": [], "Fixed commit": "dd9c485ea25a057e6360ebf51177afbee9bea9c6", "Url": "https://api.github.com/repos/googleads/google-media-framework-android", "Date": "2015-11-13T18:58:42Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLayerLevel) == (ttyy.com.jinviews.swipe.SlidingLeftMenu.TOP)) { if (left < (-(mMenuView.getMeasuredWidth()))) { left = -(mMenuView.getMeasuredWidth()); } if (left > 0) { left = 0; } }else { if (left < 0) { left = 0; } if (left > (mMenuView.getMeasuredWidth())) { left = mMenuView.getMeasuredWidth(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4726/buggy-version/lib.src.main.java.ttyy.com.jinviews.swipe.SlidingLeftMenu.java", "BodyUseAPI": [], "Fixed commit": "a4322e643cb98fdd39c0c859f7850f8544c8979a", "Url": "https://api.github.com/repos/yztazjin/JinViews", "Date": "2017-07-26T09:01:32Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quarters.length) == 1) btnYear.setFont(javafx.scene.text.Font.font(\"\", FontWeight.BOLD, 13)); else btnYear.setFont(javafx.scene.text.Font.font(\"\", FontWeight.BOLD, 17.5));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2959/buggy-version/src.client.view.components.Timeline.java", "BodyUseAPI": [], "Fixed commit": "1e2154fd011a3c6354e0d1d23889f02253f246da", "Url": "https://api.github.com/repos/mammo0/PROJECT", "Date": "2015-01-24T14:51:01Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.dreamdigitizers.androidbaselibrary.utilities.UtilsString.isEmpty(pAccessToken)) { this.getActivity().finish(); }else { this.mPresenter.saveAccessToken(pAccessToken); com.dreamdigitizers.mysound.Share.setAccessToken(pAccessToken); this.goToMainActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1355/buggy-version/app.src.main.java.com.dreamdigitizers.mysound.views.classes.fragments.screens.ScreenLogin.java", "BodyUseAPI": ["this.mPresenter.saveAccessToken(java.lang.String)", "com.dreamdigitizers.mysound.Share.setAccessToken(java.lang.String)"], "Fixed commit": "c97a9a6c635412779262c12e83d65ee3c432a34a", "Url": "https://api.github.com/repos/daole/MySound", "Date": "2016-03-23T17:45:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7849/buggy-version/dristhi-app.src.main.java.org.ei.drishti.view.customControls.CustomFontTextView.java", "BodyUseAPI": [], "Fixed commit": "3c29d985c3e9d8223b3e5684f9447bb43c3076ab", "Url": "https://api.github.com/repos/dimasciput/dristhi-app", "Date": "2015-02-27T05:29:04Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isInEditMode()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7849/buggy-version/dristhi-app.src.main.java.org.ei.drishti.view.customControls.CustomFontTextView.java", "BodyUseAPI": [], "Fixed commit": "3c29d985c3e9d8223b3e5684f9447bb43c3076ab", "Url": "https://api.github.com/repos/dimasciput/dristhi-app", "Date": "2015-02-27T05:29:04Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isInEditMode()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7849/buggy-version/dristhi-app.src.main.java.org.ei.drishti.view.customControls.CustomFontTextView.java", "BodyUseAPI": [], "Fixed commit": "3c29d985c3e9d8223b3e5684f9447bb43c3076ab", "Url": "https://api.github.com/repos/dimasciput/dristhi-app", "Date": "2015-02-27T05:29:04Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isInEditMode()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7849/buggy-version/dristhi-app.src.main.java.org.ei.drishti.view.customControls.CustomFontTextView.java", "BodyUseAPI": [], "Fixed commit": "3c29d985c3e9d8223b3e5684f9447bb43c3076ab", "Url": "https://api.github.com/repos/dimasciput/dristhi-app", "Date": "2015-02-27T05:29:04Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bankOrder.getSignatoryEbicsUser().getEbicsTypeSelect()) == (com.axelor.apps.bankpayment.db.repo.EbicsUserRepository.EBICS_TYPE_TS)) { fileToSend = com.axelor.meta.MetaFiles.getPath(bankOrder.getSignedMetaFile()).toFile(); }else { fileToSend = com.axelor.meta.MetaFiles.getPath(bankOrder.getGeneratedMetaFile()).toFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4212/buggy-version/axelor-bank-payment.src.main.java.com.axelor.apps.bankpayment.service.bankorder.BankOrderServiceImpl.java", "BodyUseAPI": ["com.axelor.meta.MetaFiles.getPath(bankOrder.getGeneratedMetaFile()).toFile()", "com.axelor.meta.MetaFiles.getPath(bankOrder.getSignedMetaFile()).toFile()", "com.axelor.apps.bankpayment.service.bankorder.BankOrder.getGeneratedMetaFile()", "com.axelor.meta.MetaFiles.getPath(bankOrder.getSignedMetaFile())", "com.axelor.apps.bankpayment.service.bankorder.BankOrder.getSignedMetaFile()", "com.axelor.meta.MetaFiles.getPath(bankOrder.getGeneratedMetaFile())"], "Fixed commit": "5915d20032e3897125ca026c5b7177c50d90c720", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2017-04-06T16:52:12Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mudJob.isRepeated()) { submitScheduledTask(mudJob); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2285/buggy-version/src.main.java.javamud.server.MudEngine.java", "BodyUseAPI": ["javamud.server.MudEngine.MudEngineDequeJob.submitScheduledTask(javamud.server.MudJob)"], "Fixed commit": "0cfba2b086b9b40795d673dfe08babcc642a8f8f", "Url": "https://api.github.com/repos/mproctor/javamud", "Date": "2012-04-08T08:23:03Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(qs.startsWith(\"&\"))) qs = \"&\" + qs;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5339/buggy-version/annotation.server.src.main.java.edu.dfci.cccb.mev.annotation.server.controllers.AnnotationController.java", "BodyUseAPI": [], "Fixed commit": "2742c2e948e8bb8bada12f3cdb728bb333ef4096", "Url": "https://api.github.com/repos/dfci-cccb/mev", "Date": "2014-06-10T17:11:17Z"},
{"Line": "=>1421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.registryKit.survey.surveyManager.getSubmittedSurveySessionStaff(java.lang.Integer,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sessionStaffDetails != null) { sessionStaffDetails.setDirectStaffTimeHours(hours); surveymanager.saveStaffMemberToSurvey(sessionStaffDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4352/buggy-version/webapp.src.main.java.com.rr.wabshs.ui.clients.clientController.java", "BodyUseAPI": ["com.registryKit.survey.surveyManager.saveStaffMemberToSurvey(com.registryKit.survey.submittedsurveysessionstaff)", "com.registryKit.survey.submittedsurveysessionstaff.setDirectStaffTimeHours(java.lang.String)"], "Fixed commit": "0fdcc949deafe9266c12dec23eea6b26f422ca0e", "Url": "https://api.github.com/repos/bowlinktech/wabshsRR", "Date": "2017-02-12T13:34:54Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck.DescriptiveErrorListener.JAVADOC_MISSED_HTML_CLOSE.equals(aMsg)) { log(lineNumber, com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck.DescriptiveErrorListener.JAVADOC_MISSED_HTML_CLOSE, token.getText()); throw new org.antlr.v4.runtime.misc.ParseCancellationException(); }else if (com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck.DescriptiveErrorListener.JAVADOC_WRONG_SINGLETON_TAG.equals(aMsg)) { log(lineNumber, com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck.DescriptiveErrorListener.JAVADOC_WRONG_SINGLETON_TAG, token.getText()); throw new org.antlr.v4.runtime.misc.ParseCancellationException(); }else { log(lineNumber, \"javadoc.parse.error\", aMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3575/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck.DescriptiveErrorListener.log(int,java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)", "com.puppycrawl.tools.checkstyle.checks.javadoc.AbstractJavadocCheck.DescriptiveErrorListener.log(int,java.lang.String,token.getText())"], "Fixed commit": "64f628a5f1562a68bd9975ac9f7c4e2df35988d3", "Url": "https://api.github.com/repos/baratali/checkstyle", "Date": "2014-10-13T14:12:15Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (os_name.contains(\"Windows\")) { os_name = \"Windows\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3610/buggy-version/MemoryAnalyzer.src.crossplatform.Help.java", "BodyUseAPI": [], "Fixed commit": "11eee2a3ccfc0cd7a0b6c15f96d4f22e45fc1a27", "Url": "https://api.github.com/repos/dimagerasimov/MemoryAnalyzer", "Date": "2016-11-29T11:57:37Z"},
{"Line": "=>852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(char,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (className.equals(\"java.lang.Object\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7426/buggy-version/src.main.java.io.github.lukehutch.fastclasspathscanner.FastClasspathScanner.java", "BodyUseAPI": [], "Fixed commit": "e4d849bafa8b8bbd03aafaaf0d8385a4abafefc1", "Url": "https://api.github.com/repos/classgraph/classgraph", "Date": "2015-05-25T07:19:20Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fixtureInfo[1].trim().length()) <= (fixtureInfo[2].trim().length())) { model = fixtureInfo[1].trim(); partNumber = fixtureInfo[2].trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1864/buggy-version/src.main.java.com.terragoedge.streetlight.service.StreetlightChicagoService.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.trim()"], "Fixed commit": "214d8548df8a226d17aa30b3e5cc26f327d9fe4f", "Url": "https://api.github.com/repos/terragotech/streetlight", "Date": "2017-11-07T10:11:32Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (plugin.playerIsOnIsland(p)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1456/buggy-version/src.com.wasteofplastic.askyblock.IslandGuard.java", "BodyUseAPI": [], "Fixed commit": "dc0a399c25da1029280b8e66e02530f81e9fef2a", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2014-12-20T23:53:53Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m_transformations.get(i).transformDataLine(org.pharmgkb.parser.vcf.model.VcfMetadata,org.pharmgkb.parser.vcf.model.VcfPosition,java.util.List<org.pharmgkb.parser.vcf.model.VcfSample>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (keep) { m_writers.get(i).writeLine(metadata, position, sampleData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7065/buggy-version/src.main.java.org.pharmgkb.parser.vcf.TransformingVcfLineParser.java", "BodyUseAPI": [], "Fixed commit": "d37f25c06d4ca76b1e483b73a532338e9decd21b", "Url": "https://api.github.com/repos/PharmGKB/vcf-parser", "Date": "2015-12-20T02:01:38Z"},
{"Line": "=>1276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGps) mLocationManager.removeUpdates(mLocationListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/797/buggy-version/app.src.main.java.com.nxn.intercomm.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f585a063b04c90eb4c28a8b5ba2a6fb8a1962244", "Url": "https://api.github.com/repos/NeiroNx/Intercomm", "Date": "2014-08-01T17:06:06Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.sql.Types.TIME) == (sourceResultSet.getMetaData().getColumnType((i + 1)))) { rowData[i] = sourceResultSet.getTimestamp((i + 1)); }else { rowData[i] = sourceResultSet.getObject((i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6501/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.TVP.java", "BodyUseAPI": ["java.sql.ResultSet.getTimestamp(int)", "java.sql.ResultSet.getObject(int)"], "Fixed commit": "5fef638997d18ea91e4590a6987af6c550b23768", "Url": "https://api.github.com/repos/v-PATHngs/mssql-jdbc-PATHngs", "Date": "2017-05-26T18:26:06Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loc == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9147/buggy-version/src.com.citizens.resources.npclib.PathNPC.java", "BodyUseAPI": [], "Fixed commit": "5344f03ed15e11d8ba168e02e9e02f389c7e2856", "Url": "https://api.github.com/repos/fullwall/Citizens", "Date": "2011-07-20T13:46:30Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.widget.CheckBox) (findViewById(R.id.other_event))).isChecked()) { categories.add(\"other\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1800/buggy-version/ucevents.src.com.ucevents.schedule.AddEvent.java", "BodyUseAPI": [], "Fixed commit": "ff7abbe7dabad6fe0b99babbe3b247d934e5d6e0", "Url": "https://api.github.com/repos/mkoba/Tinasaurus", "Date": "2014-03-12T19:23:27Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gkw.getTypes().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (kwType == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6699/buggy-version/src.org.rascalmpl.interpreter.result.ConstructorFunction.java", "BodyUseAPI": [], "Fixed commit": "025502902e888ee7cf965c5fc06801172bf3bd53", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2014-12-28T22:16:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.client.Minecraft.getMinecraft().thePlayer) == null) { for (pneumaticCraft.api.client.pneumaticHelmet.IUpgradeRenderHandler handler : pneumaticCraft.client.render.pneumaticArmor.UpgradeRenderHandlerList.instance().upgradeRenderers) { handler.reset(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4531/buggy-version/src.pneumaticCraft.client.ClientTickHandler.java", "BodyUseAPI": [], "Fixed commit": "25aabc879274f4352eeafae6efb759e1fdb8a3d7", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-22T16:29:26Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lm) == null) { lm = ((android.location.LocationManager) (getSystemService(Context.LOCATION_SERVICE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2722/buggy-version/App.android.src.com.GGI.uParty.android.AndroidLauncher.java", "BodyUseAPI": [], "Fixed commit": "79f946c36d39e91dc52bb8a5e51b9dd64ad274f6", "Url": "https://api.github.com/repos/GoodGameIndustries/uParty-the-great-release", "Date": "2016-08-24T22:12:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lm) == null) { lm = ((android.location.LocationManager) (getSystemService(Context.LOCATION_SERVICE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2722/buggy-version/App.android.src.com.GGI.uParty.android.AndroidLauncher.java", "BodyUseAPI": [], "Fixed commit": "79f946c36d39e91dc52bb8a5e51b9dd64ad274f6", "Url": "https://api.github.com/repos/GoodGameIndustries/uParty-the-great-release", "Date": "2016-08-24T22:12:25Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pokeklon.model.IMonster.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(sourceType.getClass().equals(pokeklon.model.impl.types.TypeNormal.class))) { if (sourceType.getStrength().equals(targetType.getType())) { typeStat = 2; }else if (sourceType.getWeak().equals(targetType.getType())) { typeStat = 0.7F; }else { typeStat = 1; } }else { typeStat = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9183/buggy-version/htwg.se.pokeklon.src.pokeklon.controller.impl.Action.java", "BodyUseAPI": ["sourceType.getWeak().equals(targetType.getType())", "pokeklon.model.IType.getWeak()", "sourceType.getStrength().equals(targetType.getType())", "pokeklon.model.IType.getStrength()"], "Fixed commit": "abfb810b346e0c74571967cd5f4c3779cd7e6875", "Url": "https://api.github.com/repos/konraifen88/de.htwg.ain.pokeklon", "Date": "2015-01-16T10:18:32Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivity) != null) { mDeviceRotation = mActivity.getWindowManager().getDefaultDisplay().getRotation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4556/buggy-version/vrlib.src.main.java.com.asha.vrlib.strategy.interactive.MotionStrategy.java", "BodyUseAPI": [], "Fixed commit": "5c23f60997a0435ff9cf27ba94c82fc94ec85d02", "Url": "https://api.github.com/repos/vannywang/MD360Player4Android", "Date": "2016-09-02T03:39:26Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Exception.getTargetException()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t instanceof com.aliyun.oss.ServiceException) { throw new com.aliyun.oss.ServiceException(e.getMessage(), e.getCause()); }else if (t instanceof com.aliyun.oss.ClientException) { throw new com.aliyun.oss.ClientException(e.getMessage(), e.getCause()); }else { throw new java.io.IOException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7732/buggy-version/hadoop-tools.hadoop-aliyun.src.main.java.com.aliyun.fs.oss.utils.OSSClientAgent.java", "BodyUseAPI": [], "Fixed commit": "693c5b162cc0fd8acdea0f66cbca509560a9fd40", "Url": "https://api.github.com/repos/uncleGen/hadoop", "Date": "2016-04-23T10:49:40Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i % 2) == 1) currLen++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1465/buggy-version/src.codebook.string.Manacher.java", "BodyUseAPI": [], "Fixed commit": "510b7aa2ba6f4847eb157030c94d20e1cced319d", "Url": "https://api.github.com/repos/jeffrey-PATHo/competitive-programming", "Date": "2016-04-14T03:41:58Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.onResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7025/buggy-version/app.src.main.java.message.centit.com.message.UpLoadService.java", "BodyUseAPI": [], "Fixed commit": "df06c2a96012e13ca3b9740385a0c10e6403c06b", "Url": "https://api.github.com/repos/zhuyu1022/message", "Date": "2017-11-09T16:25:54Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, java.lang.String>.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (at.edu.uas.fm.db.DBHelper.FREQUENCY_ONCE.equals(frequency)) { }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2975/buggy-version/src.at.edu.uas.fm.db.DBHelper.java", "BodyUseAPI": [], "Fixed commit": "2551bfd1a0985da7dbcdf90594d58e5e17fd5562", "Url": "https://api.github.com/repos/JosefVazanic/FacilityManagerService", "Date": "2013-01-28T21:06:53Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.execom.lunchorder.dao.MealDao.findOne(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((meal.getMenus().size()) == 0) { meal.setUsed(false); mealDao.save(meal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2270/buggy-version/src.main.java.eu.execom.lunchorder.controller.MenuController.java", "BodyUseAPI": ["eu.execom.lunchorder.dao.MealDao.save(eu.execom.lunchorder.model.Meal)", "eu.execom.lunchorder.model.Meal.setUsed(boolean)"], "Fixed commit": "f771fb9ec40f81b70b52c9e833fae3e26d136618", "Url": "https://api.github.com/repos/execom-eu/ECLunchOrder", "Date": "2015-03-16T15:12:03Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.execom.lunchorder.dao.MealDao.findOne(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(meal.isUsed())) { meal.setUsed(true); mealDao.save(meal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2270/buggy-version/src.main.java.eu.execom.lunchorder.controller.MenuController.java", "BodyUseAPI": ["eu.execom.lunchorder.dao.MealDao.save(eu.execom.lunchorder.model.Meal)", "eu.execom.lunchorder.model.Meal.setUsed(boolean)"], "Fixed commit": "f771fb9ec40f81b70b52c9e833fae3e26d136618", "Url": "https://api.github.com/repos/execom-eu/ECLunchOrder", "Date": "2015-03-16T15:12:03Z"},
{"Line": "=>1018", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.idega.presentation.IWContext.getCurrentUser()", "is.idega.idegaweb.egov.citizen.business.CitizenServices.getCalendarManagementService()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(calendarService.unsubscribeCalendars(user, paths))) { response.put(\"status\", \"Internal Error\"); response.put(\"message\", iwrb.getLocalizedString(\"error_while_unsubscribing\", \"Error while unsubscribing.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4892/buggy-version/src.java.is.idega.idegaweb.egov.citizen.business.CitizenServices.java", "BodyUseAPI": [], "Fixed commit": "d0429f9d29503c40a8785870f8fd248c6a1efd26", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.citizen", "Date": "2012-10-05T15:15:01Z"},
{"Line": "=>1010", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.idega.presentation.IWContext.getCurrentUser()", "is.idega.idegaweb.egov.citizen.business.CitizenServices.getCalendarManagementService()", "java.util.Map<java.lang.String, java.util.Collection<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(calendarService.subscribeCalendars(user, paths))) { response.put(\"status\", \"Internal Error\"); response.put(\"message\", iwrb.getLocalizedString(\"error_while_subscribing\", \"Error while subscribing.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4892/buggy-version/src.java.is.idega.idegaweb.egov.citizen.business.CitizenServices.java", "BodyUseAPI": [], "Fixed commit": "d0429f9d29503c40a8785870f8fd248c6a1efd26", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.citizen", "Date": "2012-10-05T15:15:01Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entity.isDestroyed())) { entity.addHealth(com.agorria.ouroboros.simulation.entity.Repairer.REPAIR_AMOUNT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3561/buggy-version/src.com.agorria.ouroboros.simulation.entity.Repairer.java", "BodyUseAPI": ["com.agorria.ouroboros.simulation.entity.Entity.addHealth(int)"], "Fixed commit": "9b952c76772480049ad2a56c6b2c57d08dcafe99", "Url": "https://api.github.com/repos/IonAgorria/Ouroboros", "Date": "2017-09-21T07:31:03Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getServletRequest().getParameter(\"view\")) != null) && (!(\"\".equals(getServletRequest().getParameter(\"view\"))))) { view = getServletRequest().getParameter(\"view\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3154/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.DetermineLocationActionNG.java", "BodyUseAPI": [], "Fixed commit": "3dc0be97a3da31cb8dedcdcc335ba46ee6a64b37", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-15T14:57:57Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((workItem.getParameter(\"DocumentId\")) != null) { documentId = new java.lang.Long(workItem.getParameter(\"DocumentId\").toString()); }else if ((workItem.getParameter(\"document\")) != null) { com.wira.pmgt.shared.model.Document document = ((com.wira.pmgt.shared.model.Document) (workItem.getParameter(\"document\"))); documentId = document.getId(); assert document != null; }else { log.error((\"UpdateApprovalStatusWorkItemHandler: 'DocumentId' cannot be null;\" + (\" please ensure you've declared a input called DocumentId, or document and \" + \" that you've mapped it appropriately in your BPMN File\"))); throw new java.lang.IllegalArgumentException((\"UpdateApprovalStatusWorkItemHandler: 'documentId' cannot be null;\" + (\" please ensure you've declared a input called documentId, or document and \" + \" that you've mapped it appropriately in your BPMN File\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4669/buggy-version/src.xtension.workitems.UpdateApprovalStatusWorkItemHandler.java", "BodyUseAPI": ["org.drools.runtime.process.WorkItem.getParameter(java.lang.String)", "org.drools.runtime.process.WorkItem.getParameter(java.lang.String)", "workItem.getParameter(\"DocumentId\").toString()", "org.drools.runtime.process.WorkItem.getParameter(java.lang.String)"], "Fixed commit": "f60e1bff121e262a64aefde6f213beebab3f7779", "Url": "https://api.github.com/repos/duggankimani/IConserv", "Date": "2014-05-27T15:58:13Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((summ.getName()) == null) { spnSubject.setInnerText(summ.getSubject()); }else { spnSubject.setInnerText(summ.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4669/buggy-version/src.com.wira.pmgt.client.ui.tasklistitem.TaskItemView.java", "BodyUseAPI": ["com.wira.pmgt.shared.model.HTSummary.getName()", "com.google.gwt.dom.client.DivElement.setInnerText(summ.getName())", "com.google.gwt.dom.client.DivElement.setInnerText(summ.getSubject())", "com.wira.pmgt.shared.model.HTSummary.getSubject()"], "Fixed commit": "f60e1bff121e262a64aefde6f213beebab3f7779", "Url": "https://api.github.com/repos/duggankimani/IConserv", "Date": "2014-05-27T15:58:13Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"serialVersionUID\".equals(aux.getId().getName()))) { aux.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5673/buggy-version/src.main.java.org.walkmod.pmd.ruleset.java.unusedcode.visitors.UnusedPrivateField.java", "BodyUseAPI": ["org.walkmod.javalang.ast.body.VariableDeclarator.remove()"], "Fixed commit": "cfe7e06a237fe2d21a57af5cd891dcae6fd75ded", "Url": "https://api.github.com/repos/walkmod/walkmod-pmd-plugin", "Date": "2017-03-07T09:47:31Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.contains(\".\")) { if ((s.contains(\"[\")) && ((s.indexOf(\"[\")) < (s.indexOf(\".\")))) { result = s.substring(0, s.indexOf(\"[\")); }else { result = s.substring(0, s.indexOf(\".\")); } }else if (s.contains(\"[\")) { result = s.substring(0, s.indexOf(\"[\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7925/buggy-version/processors.src.main.java.org.zenbeam.util.FieldInfoUtils.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "b1e0dc63d8190ed78b754cb99f0a3b74fa31589a", "Url": "https://api.github.com/repos/michaelfreitag/zenbeam", "Date": "2015-03-03T15:47:52Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.activeandroid.query.Select().from(com.project.communityorganizer.sqlite.models.Friend.class).where(\"email = ?\", email).executeSingle()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (existingUser != null) { existingUser.phone_owner = true; existingUser.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8734/buggy-version/app.src.main.java.com.project.communityorganizer.sqlite.models.Friend.java", "BodyUseAPI": ["com.project.communityorganizer.sqlite.models.Friend.save()"], "Fixed commit": "365a7156c7d584ef5a03a9a0f6922877ddd932da", "Url": "https://api.github.com/repos/seshagiriprabhu/Community-AndroidApp", "Date": "2015-03-29T11:53:53Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((engineResult.getStatus()) == (javax.net.ssl.SSLEngineResult.Status.OK)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2118/buggy-version/Network.src.main.java.org.voovan.network.SSLParser.java", "BodyUseAPI": [], "Fixed commit": "09a6ab30c0a075f40909876c7b148ff5d2919807", "Url": "https://api.github.com/repos/helyho/Voovan", "Date": "2017-10-01T17:06:40Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (src.isSetCodeSpace()) dest.setCodeSpace(src.getCodeSpace());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8349/buggy-version/src.org.citygml4j.builder.jaxb.marshal.citygml.generics.Generics200Marshaller.java", "BodyUseAPI": ["net.opengis.citygml.generics._2.GenericAttributeSetType.setCodeSpace(src.getCodeSpace())", "org.citygml4j.model.citygml.generics.GenericAttributeSet.getCodeSpace()"], "Fixed commit": "67a9d208768529bd0caea7bf8d1e4e0b316b8097", "Url": "https://api.github.com/repos/citygml4j/citygml4j", "Date": "2015-07-21T22:08:26Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) >= 1) { configFilename = args[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4081/buggy-version/src.net.entgaming.wc3connectd.WCServer.java", "BodyUseAPI": [], "Fixed commit": "51d28068eba295c088ddeeda72eb353000a6fc61", "Url": "https://api.github.com/repos/uakfdotb/wc3connect", "Date": "2013-11-26T23:35:52Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (PAUSED)) playerEntering(player, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8919/buggy-version/src.main.java.com.randude14.hungergames.games.HungerGame.java", "BodyUseAPI": [], "Fixed commit": "e5dc145d142a45a78d8015f3fdf428a9bf24ae50", "Url": "https://api.github.com/repos/kitskub/MyHungerGames", "Date": "2012-09-17T22:02:04Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sys <= 0) || (dias <= 0)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6257/buggy-version/assignment9.src.Model.PatientClassification.java", "BodyUseAPI": [], "Fixed commit": "42df0ba4b910a162e8d7027c72a6851757376f0e", "Url": "https://api.github.com/repos/elliae01/assignment9", "Date": "2016-12-06T20:35:31Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.sevntu.checkstyle.checks.coding.PreferMapEntryToIterateWholeMapCheck.isClassHasNeedImport()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkNeededImport == false) { result--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3127/buggy-version/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.PreferMapEntryToIterateWholeMapCheck.java", "BodyUseAPI": [], "Fixed commit": "cc9d2e21201d8791efa5d9e62d404dca2bb23c01", "Url": "https://api.github.com/repos/maxvetrenko/sevntu.checkstyle", "Date": "2013-08-03T19:22:57Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myLayout.getMeasuredWidth()) > (myLayout.getMeasuredHeight())) { mClock.layout(0, 0, myLayout.getMeasuredWidth(), ((myLayout.getMeasuredHeight()) + 30)); }else { mClock.layout(0, 0, myLayout.getMeasuredWidth(), myLayout.getMeasuredHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2440/buggy-version/wear.src.main.java.com.mkiisoft.uiweather.UIWeatherWatchFace.java", "BodyUseAPI": ["com.mkiisoft.uiweather.utils.Analog24HClock.layout(int,int,myLayout.getMeasuredWidth(),((myLayout.getMeasuredHeight()) + 30))", "android.view.View.getMeasuredHeight()", "android.view.View.getMeasuredWidth()", "com.mkiisoft.uiweather.utils.Analog24HClock.layout(int,int,myLayout.getMeasuredWidth(),myLayout.getMeasuredHeight())", "android.view.View.getMeasuredHeight()", "android.view.View.getMeasuredWidth()"], "Fixed commit": "3aec8667a4971ee73f101ce7063eef710a369332", "Url": "https://api.github.com/repos/mkiisoft/UIWeather", "Date": "2015-12-22T17:41:50Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x.getKey()) < (this.min.getKey())) { this.min = x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8741/buggy-version/src.FibonacciHeap.java", "BodyUseAPI": [], "Fixed commit": "28c899ad32cb34b4b91eec99fd30fd040cd4d429", "Url": "https://api.github.com/repos/richker/FibonacciHeap", "Date": "2017-01-19T15:15:50Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.sldc.assist.CSQLBuildIns.isInvalid(obj)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8019/buggy-version/src.org.sldc.assist.multitypes.BuildInPrint.java", "BodyUseAPI": [], "Fixed commit": "e7b91891d2b418f79c5a526c7269f20f80046662", "Url": "https://api.github.com/repos/yunfzhan/SLDC", "Date": "2014-06-30T06:13:07Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((owner) != null) { tag.setString(\"owner\", owner.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2573/buggy-version/src.main.java.jotato.quantumflux.machine.exciter.TileEntityRFExciter.java", "BodyUseAPI": [], "Fixed commit": "41ac646769901f391f24dc1b468d591fa3d5c4d6", "Url": "https://api.github.com/repos/FantasyTeddy/QuantumFlux", "Date": "2015-09-23T15:44:05Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["budgetapp.models.BudgetModel.getSomeDays(int,BudgetDataSource.DESCENDING)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((days.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6432/buggy-version/src.budgetapp.views.MainView.java", "BodyUseAPI": [], "Fixed commit": "d31b1f74c78b95e7d05cc1ca9983f6eff9768e01", "Url": "https://api.github.com/repos/steenstn/BudgetApp", "Date": "2013-12-02T19:56:57Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getOfferImageSource()) != null) { try { java.lang.String offerImageUrl = imageHelper.saveOfferImage(event.getOfferImageSource(), event.getId().toString()); event.setOfferImage(offerImageUrl); } catch (java.lang.Exception e) { se.travappar.api.controller.EventController.logger.error(\"Error while saving image\", e); if (e instanceof java.lang.RuntimeException) { return new org.springframework.http.ResponseEntity<se.travappar.api.model.Event>(org.springframework.http.HttpStatus.BAD_REQUEST); } return new org.springframework.http.ResponseEntity<se.travappar.api.model.Event>(org.springframework.http.HttpStatus.INTERNAL_SERVER_ERROR); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1487/buggy-version/src.main.java.se.travappar.api.controller.EventController.java", "BodyUseAPI": ["se.travappar.api.model.Event.getId()", "se.travappar.api.model.Event.setOfferImage(java.lang.String)", "se.travappar.api.utils.ImageHelper.saveOfferImage(event.getOfferImageSource(),event.getId().toString())", "se.travappar.api.model.Event.getOfferImageSource()", "event.getId().toString()"], "Fixed commit": "27399086d00537fbb7c36e8f2ca8cf8bbce4a552", "Url": "https://api.github.com/repos/Aldrian/4DV611-api", "Date": "2015-12-10T22:35:01Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(preferences.contains(com.rastating.droidbeard.Preferences.EMPHASIZE_SHOW_NAME))) { putBoolean(com.rastating.droidbeard.Preferences.EMPHASIZE_SHOW_NAME, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4441/buggy-version/app.src.main.java.com.rastating.droidbeard.Preferences.java", "BodyUseAPI": ["com.rastating.droidbeard.Preferences.putBoolean(java.lang.String,boolean)"], "Fixed commit": "73e92adfa6150bca8330381c126c52a02984449a", "Url": "https://api.github.com/repos/serramat/DroidBeard", "Date": "2015-05-25T18:10:45Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ttd.cain.timetodie.activities.CaptureUserInfoActivity.getUserDOB().isEmpty()) { dateOfBirthButton.setText(R.string.dob_btn_text); }else { dateOfBirthButton.setText(getResources().getString(R.string.dob_btn_display, com.ttd.cain.timetodie.activities.CaptureUserInfoActivity.getUserDOB())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1969/buggy-version/app.src.main.java.com.ttd.cain.timetodie.activities.CaptureUserInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "e629e029622b161049bc7716f91670b8566aec8a", "Url": "https://api.github.com/repos/ajr-zimmer/time-to-die", "Date": "2017-01-02T10:46:32Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gzplanet.xposed.xperiaphonevibrator.XperiaPhoneVibrator.getConnection(com.android.internal.telephony.Phone,com.android.internal.telephony.Call)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.gzplanet.xposed.xperiaphonevibrator.XperiaPhoneVibrator.pref.getBoolean(\"pref_vibrate_incoming\", true)) && (c.isIncoming())) vibratePhone(param.thisObject, patternConnected);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6691/buggy-version/src.com.gzplanet.xposed.xperiaphonevibrator.XperiaPhoneVibrator.java", "BodyUseAPI": [], "Fixed commit": "ce0586443aae70c8af3685ad86241d63f785cfd3", "Url": "https://api.github.com/repos/itandy/xperia_phone_vibrator", "Date": "2013-10-09T08:23:10Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Boolean.parseBoolean(properties.getCurrentCard().getModeratorNeeded())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7563/buggy-version/app.src.main.java.com.seniordesign.wolfpack.quizinator.Activities.GamePlayActivity.java", "BodyUseAPI": [], "Fixed commit": "fa1aaebd2ba58375b0ff06952dfebfc669c96c63", "Url": "https://api.github.com/repos/TeamWolfpack/Quizinator", "Date": "2017-02-01T03:18:36Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (beanAttr.contains(\"MessagesInPerSec\")) messagesInPerSec = ((java.lang.Double) (entry.getValue())); else if (beanAttr.contains(\"BytesOutPerSec\")) { bytesOutPerSec = ((java.lang.Double) (entry.getValue())); if ((maxBytesOutPerSec_) < bytesOutPerSec) maxBytesOutPerSec_ = bytesOutPerSec; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5218/buggy-version/KafkaMonitor.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "4283da1cb043babde7eaaea0b50b442f06fecb75", "Url": "https://api.github.com/repos/imais/kafkamon", "Date": "2016-11-14T01:54:49Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (register == (org.robovm.llvm.debuginfo.DebugVariableInfo.OP_breg31)) return \"OP_breg31\"; else if (register == (org.robovm.llvm.debuginfo.DebugVariableInfo.OP_fbreg)) return \"OP_fbreg\"; else return \"OP_\" + (java.lang.Integer.toHexString(register));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6394/buggy-version/compiler.llvm.src.main.java.org.robovm.llvm.debuginfo.DebugVariableInfo.java", "BodyUseAPI": ["java.lang.Integer.toHexString(int)"], "Fixed commit": "67d4e69a95a85bef341b961b5e131117a102c324", "Url": "https://api.github.com/repos/dkimitsa/robovm", "Date": "2017-12-06T12:14:47Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uk.sky.cirrus.locking.LockService.SCHEMA_CREATED.get()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4483/buggy-version/src.main.java.uk.sky.cirrus.locking.LockService.java", "BodyUseAPI": [], "Fixed commit": "3e6dca591f7b54ab0eec856d48366a8df2f8f098", "Url": "https://api.github.com/repos/sky-uk/cqlmigrate", "Date": "2015-11-16T17:11:18Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(crazypants.enderio.config.Config.darkSteelRightClickPlaceEnabled)) || (world.isRemote)) { return net.minecraft.util.EnumActionResult.PASS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3181/buggy-version/src.main.java.crazypants.enderio.item.darksteel.ItemDarkSteelPickaxe.java", "BodyUseAPI": [], "Fixed commit": "4beaede1d7dab9a6ee1c5d9a70b0fdd207bdde69", "Url": "https://api.github.com/repos/SleepyTrousers/EnderIO", "Date": "2016-06-20T12:13:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.logilibre.server.ApplicationController.validateEntity(net.jc.beeerp.module.Entity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (errors.isEmpty()) { java.lang.Integer newId = orm.add(entityDef.getTable(), entityValue); model.addAttribute(\"value\", entityValue); log.debug(\"postadd data: {}\", param); return java.lang.String.format(\"redirect:/%s/%s/get/%s\", module, entity, newId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7157/buggy-version/beeerp.server.src.main.java.com.logilibre.server.ApplicationController.java", "BodyUseAPI": [], "Fixed commit": "92af07059b393bf9fcbe9d38f591e8c8e7a7227b", "Url": "https://api.github.com/repos/cloutierjo/beeerp", "Date": "2016-09-10T17:26:35Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (group == null) { group = ncFile.findGroup(\"sensor_band_parameters\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1391/buggy-version/seadas-reader.src.main.java.gov.nasa.gsfc.seadas.dataio.SeadasFileReader.java", "BodyUseAPI": [], "Fixed commit": "f3bbb5a5c2992260dd59da01ce0ca0c3382b4b9c", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2014-01-10T21:33:10Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (group == null) { group = ncFile.findGroup(\"geophysical_data\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1391/buggy-version/seadas-reader.src.main.java.gov.nasa.gsfc.seadas.dataio.SeadasFileReader.java", "BodyUseAPI": [], "Fixed commit": "f3bbb5a5c2992260dd59da01ce0ca0c3382b4b9c", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2014-01-10T21:33:10Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.nc2.NetcdfFile.findGroup(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (group == null) { group = ncFile.findGroup(\"scan_line_attributes\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1391/buggy-version/seadas-reader.src.main.java.gov.nasa.gsfc.seadas.dataio.SeadasFileReader.java", "BodyUseAPI": [], "Fixed commit": "f3bbb5a5c2992260dd59da01ce0ca0c3382b4b9c", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2014-01-10T21:33:10Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (division) { rightDist = exp.substring(startIndex, i); break; }else o++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7868/buggy-version/src.expression.Expression.java", "BodyUseAPI": [], "Fixed commit": "84ba93fedcd85ba2c6aeb2a8f6e31a815423b302", "Url": "https://api.github.com/repos/CalebTaber/AlgebraLib", "Date": "2017-10-31T21:19:45Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.view.PlayerView.getLibraryCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count > 99) { java.awt.Font font = libraryLabel.getFont(); font = font.deriveFont(9.0F); libraryLabel.setFont(font); changedFont = true; }else if (changedFont) { java.awt.Font font = libraryLabel.getFont(); font = font.deriveFont(12.0F); libraryLabel.setFont(font); changedFont = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7218/buggy-version/Mage.Client.src.main.java.mage.client.game.PlayerPanelExt.java", "BodyUseAPI": [], "Fixed commit": "4adb63cc7a4896094a9f402aedca1c50e56765f0", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-03-20T04:27:55Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_MAP_LOCATION_SELECT_OK)) lastLatLng = latLng;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9116/buggy-version/app.src.main.java.com.kingwaytek.cpami.biking.app.ui.planning.UiMyPlanEditActivity.java", "BodyUseAPI": [], "Fixed commit": "829b9cbdf40fed7ffb6e065fb2c13c0ec5523e50", "Url": "https://api.github.com/repos/Stillwildman/BikingGO", "Date": "2017-05-17T03:55:06Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dateRange.contains(\"NOW\")) { if (facet.equals(\"diseasetrait\")) { addFilterQuery(solrSearchBuilder, \"study_catalogAddedDate\", dateRange); }else { addFilterQuery(solrSearchBuilder, \"catalogAddedDate\", dateRange); } }else { addFilterQuery(solrSearchBuilder, \"publicationDate\", dateRange); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7045/buggy-version/goci-interfaces.goci-ui.src.main.java.uk.ac.ebi.spot.goci.ui.controller.SolrSearchController.java", "BodyUseAPI": ["uk.ac.ebi.spot.goci.ui.controller.SolrSearchController.addFilterQuery(java.lang.StringBuilder,java.lang.String,java.lang.String)", "uk.ac.ebi.spot.goci.ui.controller.SolrSearchController.addFilterQuery(java.lang.StringBuilder,java.lang.String,java.lang.String)", "uk.ac.ebi.spot.goci.ui.controller.SolrSearchController.addFilterQuery(java.lang.StringBuilder,java.lang.String,java.lang.String)"], "Fixed commit": "460ec3e20d188b2b37b29bc22d7e309f2a2ac83a", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2015-03-19T14:51:55Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(security.isAcceptable(len))) && ((security.getPolicy()) == (com.revtekk.nioflex.security.RejectionPolicy.REJECT_READ))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1916/buggy-version/src.main.java.com.revtekk.nioflex.utils.SocketUtil.java", "BodyUseAPI": [], "Fixed commit": "8a4dd4dba18d96569e54ccfdb02fe83b26f71d3f", "Url": "https://api.github.com/repos/maheshkhanwalkar/NioFlex", "Date": "2015-07-26T18:14:17Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.revtekk.nioflex.utils.SocketUtil.readBuffer(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (buf != null) return buf.array();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1916/buggy-version/src.main.java.com.revtekk.nioflex.utils.SocketUtil.java", "BodyUseAPI": ["java.nio.ByteBuffer.array()"], "Fixed commit": "8a4dd4dba18d96569e54ccfdb02fe83b26f71d3f", "Url": "https://api.github.com/repos/maheshkhanwalkar/NioFlex", "Date": "2015-07-26T18:14:17Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.revtekk.nioflex.utils.SocketUtil.readBytes(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bytes != null) return new java.lang.String(bytes);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1916/buggy-version/src.main.java.com.revtekk.nioflex.utils.SocketUtil.java", "BodyUseAPI": [], "Fixed commit": "8a4dd4dba18d96569e54ccfdb02fe83b26f71d3f", "Url": "https://api.github.com/repos/maheshkhanwalkar/NioFlex", "Date": "2015-07-26T18:14:17Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(io.hypertrack.sendeta.store.ActionManager.getSharedManager(this).isActionLive())) { shareLink.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8203/buggy-version/app.src.main.java.io.hypertrack.sendeta.view.Home.java", "BodyUseAPI": [], "Fixed commit": "1f03e88e76959c1adf312c69feda256fcd6c7304", "Url": "https://api.github.com/repos/hypertrack/hypertrack-live-android", "Date": "2017-08-25T20:40:41Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (desc.has(\"location\")) { org.codehaus.jackson.JsonNode location = desc.get(\"location\"); if ((desc.has(\"latitude\")) && (desc.has(\"longitude\"))) { org.codehaus.jackson.JsonNode latitude = location.get(\"latitude\"); org.codehaus.jackson.JsonNode longitude = location.get(\"longitude\"); if ((((latitude != null) && (latitude.isNumber())) && (longitude != null)) && (longitude.isNumber())) { loc = new org.eol.globi.geo.LatLng(latitude.asDouble(), longitude.asDouble()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8034/buggy-version/eol-globi-data-sources.src.main.java.org.eol.globi.service.GitHubImporterFactory.java", "BodyUseAPI": ["org.codehaus.jackson.JsonNode.has(java.lang.String)", "org.codehaus.jackson.JsonNode.get(java.lang.String)", "org.codehaus.jackson.JsonNode.has(java.lang.String)"], "Fixed commit": "ac78daab8e7cce343e18f44e7d3a63ccff144dc4", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2016-12-21T17:00:56Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 1) { itemHolder.powerButton.setDrawableOff(android.support.v4.content.ContextCompat.getDrawable(this, R.drawable.power_enable_icon)); itemHolder.powerButton.setDrawableOn(android.support.v4.content.ContextCompat.getDrawable(this, R.drawable.power_disable_icon)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1179/buggy-version/app.src.main.java.com.general.mediaplayer.kasa.activity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "b074d2edef63ba4730184c1117395b22467f6c73", "Url": "https://api.github.com/repos/codeatena/Kasa", "Date": "2017-06-14T01:08:05Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.MenuSelectionManager.getSelectedPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path[1]) instanceof org.irsn.javax.swing.CodeEditorPane.KeyWordItem) { org.irsn.javax.swing.CodeEditorPane.KeyWordItem item = ((org.irsn.javax.swing.CodeEditorPane.KeyWordItem) (path[1])); int code = e.getKeyChar(); if ((code == (java.awt.event.KeyEvent.VK_ENTER)) && (item.name.equals(name))) { getAction().actionPerformed(null); } }else if ((path[1]) instanceof javax.swing.JMenuItem) { javax.swing.JMenuItem item = ((javax.swing.JMenuItem) (path[1])); int code = e.getKeyChar(); if ((code == (java.awt.event.KeyEvent.VK_ENTER)) && (item.getText().equals(\"...\"))) { item.getAction().actionPerformed(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2135/buggy-version/src.main.java.org.irsn.javax.swing.CodeEditorPane.java", "BodyUseAPI": [], "Fixed commit": "7f00fd3f06bc2671c73d90bf68087be001fd9339", "Url": "https://api.github.com/repos/hofma103/jxtextpane", "Date": "2017-05-06T20:21:25Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hash.contains(\"\\n\")) { java.lang.System.out.println(\"[LIB][WARNING] Ho dovuto rimuovere \\\\n dall\\'hash di una stringa.\"); hash = hash.replace(\"\\n\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7760/buggy-version/NetLibz.src.utilz.Utils.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "310247a34fc13c658aef0a612f927d546f60eb0a", "Url": "https://api.github.com/repos/fazo96/LionChat", "Date": "2013-09-14T18:27:39Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.value) != (seedu.jobs.model.task.Time.DEFAULT_TIME)) { java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern(\"dd/MM/uuuu\"); java.lang.String oldDate = seedu.jobs.model.task.Time.extractDate(this.value); java.lang.String time = seedu.jobs.model.task.Time.extractTime(this.value); java.time.LocalDate date = java.time.LocalDate.parse(oldDate, formatter); this.value = ((date.plusDays(days).format(formatter)) + \" \") + time; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8469/buggy-version/src.main.java.seedu.jobs.model.task.Time.java", "BodyUseAPI": [], "Fixed commit": "820a4834b4c6737b1a4928cf0da89d326874856f", "Url": "https://api.github.com/repos/CS2103JAN2017-F11-B1/main", "Date": "2017-04-06T05:25:56Z"},
{"Line": "=>833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getDeviceFromAttached().equals(device))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9252/buggy-version/app.src.main.java.org.broeuschmeul.android.gps.usb.provider.USBGpsManager.java", "BodyUseAPI": [], "Fixed commit": "0c00f65af349dcf172fc193990df72f6c9329392", "Url": "https://api.github.com/repos/freshollie/UsbGps4Droid", "Date": "2017-05-12T04:47:08Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/817/buggy-version/src.java.contact.constraint.EmailValidator.java", "BodyUseAPI": [], "Fixed commit": "716794ec70e2bc130ff4d738c06d6f81fda7effd", "Url": "https://api.github.com/repos/10suns/ServletContactForm", "Date": "2016-03-21T03:08:37Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zezo.zezomusicplayer.SongListView.1.getCheckedItemPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((firstItemIndex < checkedItemIndex) && (secondItemIndex >= checkedItemIndex)) setItemChecked((checkedItemIndex - 1), true); else if ((firstItemIndex > checkedItemIndex) && (secondItemIndex <= checkedItemIndex)) setItemChecked((checkedItemIndex + 1), true); else { boolean isSecondChecked = isItemChecked(secondItemIndex); setItemChecked(secondItemIndex, isItemChecked(firstItemIndex)); setItemChecked(firstItemIndex, isSecondChecked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7107/buggy-version/ZezoMusicPlayer.src.com.zezo.zezomusicplayer.SongListView.java", "BodyUseAPI": ["com.zezo.zezomusicplayer.SongListView.1.setItemChecked(int,isItemChecked(firstItemIndex))", "com.zezo.zezomusicplayer.SongListView.1.setItemChecked(int,boolean)", "com.zezo.zezomusicplayer.SongListView.1.isItemChecked(int)", "com.zezo.zezomusicplayer.SongListView.1.isItemChecked(int)", "com.zezo.zezomusicplayer.SongListView.1.setItemChecked(int,boolean)", "com.zezo.zezomusicplayer.SongListView.1.setItemChecked(int,boolean)"], "Fixed commit": "15103e5980192c41ab4017f2b4f184c5f6796898", "Url": "https://api.github.com/repos/aycanadal/Zezo", "Date": "2014-11-10T11:35:06Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (node == root) { java.util.Collections.sort(node.getChildren(), new java.util.Comparator<com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode>() { @java.lang.Override public int compare(com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode lhs, com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode rhs) { long t1 = lhs.getTweet().getTime(); long t2 = rhs.getTweet().getTime(); if (t1 == t2) { return 0; }else if (t1 > t2) { return 1; }else { return -1; } } }); }else { java.util.Collections.sort(node.getChildren(), new java.util.Comparator<com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode>() { @java.lang.Override public int compare(com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode lhs, com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode rhs) { long t1 = lhs.getTweet().getTime(); long t2 = rhs.getTweet().getTime(); if (t1 == t2) { return 0; }else if (t1 > t2) { return 1; }else { return -1; } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1755/buggy-version/src.main.java.com.vaguehope.onosendai.model.TweetListAdapter.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.ArrayList<com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode>,java.util.Comparator<com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode>)", "com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode.getChildren()", "com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode.getChildren()", "java.util.Collections.sort(java.util.ArrayList<com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode>,java.util.Comparator<com.vaguehope.onosendai.model.TweetListAdapter.TweetTreeNode>)"], "Fixed commit": "8df467318888dd49003ecc29248a6b575c0c85f4", "Url": "https://api.github.com/repos/phtan/Onosendai", "Date": "2013-12-28T02:57:07Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tree instanceof absyn.VarDec) absyn.Absyn.showTree(((absyn.VarDec) (tree)), spaces); else { absyn.Absyn.indent(spaces); java.lang.System.out.println((\"Illegal expression at line \" + (tree.pos))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5877/buggy-version/absyn.Absyn.java", "BodyUseAPI": ["java.io.PrintStream.println((\"Illegal expression at line \" + (tree.pos)))"], "Fixed commit": "c94aee1e526ecfbe7d007d134c5888ea8a5acbec", "Url": "https://api.github.com/repos/CallumWilliams/CIS4650", "Date": "2017-03-20T19:49:20Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tree.size) != null) absyn.Absyn.showTree(tree.size, spaces);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5877/buggy-version/absyn.Absyn.java", "BodyUseAPI": ["absyn.Absyn.showTree(tree.size,int)"], "Fixed commit": "c94aee1e526ecfbe7d007d134c5888ea8a5acbec", "Url": "https://api.github.com/repos/CallumWilliams/CIS4650", "Date": "2017-03-20T19:49:20Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpLucky) player.sendMessage(((org.bukkit.ChatColor.GOLD) + \"OP!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4172/buggy-version/src.main.java.com.blocktyper.yearmarked.listeners.SuperCreeperDamageListener.java", "BodyUseAPI": [], "Fixed commit": "ccde46c630814340d06ce225a39ccb2f5cf93c05", "Url": "https://api.github.com/repos/spaarkimus/yearmarked", "Date": "2016-10-15T05:12:25Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((A.length) == 0) { return 0; }else { return A[0].length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5814/buggy-version/IJC_UI.src.nl.detoren.ijc.ui.util.minimizetriagonal.java", "BodyUseAPI": [], "Fixed commit": "e167095b1f8e532ab91f7d35a34d6df9ed90d05b", "Url": "https://api.github.com/repos/lmeulen/IJC_UI", "Date": "2016-11-07T15:29:21Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isComplete) return isComplete; else { if (((((getTitle()) != \"\") && ((getDescription()) != \"\")) && ((getDate()) != \"\")) && ((getCategories()) != \"\")) isComplete = true; return isComplete; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6262/buggy-version/app.src.main.java.com.example.ashi.safecityandroid.Models.Report.java", "BodyUseAPI": [], "Fixed commit": "1708eb888c3a6a42bfc41d28db78a21c752e5e0a", "Url": "https://api.github.com/repos/ashi-agrawal/SafeCity-Android", "Date": "2016-12-05T06:20:59Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path.size()) == (i + 1)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7498/buggy-version/src.main.java.main.DirectionsGenerator.java", "BodyUseAPI": [], "Fixed commit": "8ef67912de985c70b743aaecfa1b874a3029aa14", "Url": "https://api.github.com/repos/linuxboss182/SoftEng-2017", "Date": "2017-04-29T22:26:00Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.inovex.zabbixmobile.model.ZaxPreferences.getInstance(getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefs.isDarkTheme()) setTheme(R.style.AppThemeDark); else setTheme(R.style.AppTheme);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7068/buggy-version/src.com.inovex.zabbixmobile.activities.GraphFullscreenActivity.java", "BodyUseAPI": [], "Fixed commit": "a22b861620a9511ab33e3e1864f8706ecb6025a4", "Url": "https://api.github.com/repos/inovex/zax", "Date": "2014-02-27T16:01:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.zxing.common.detector.MathUtils.sum(int[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bitCountSum > 1) { for (int i = 0; i < (bitCountRatios.length); i++) { bitCountRatios[i] = (moduleBitCount[i]) / ((float) (bitCountSum)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4566/buggy-version/core.src.main.java.com.google.zxing.pdf417.decoder.PDF417CodewordDecoder.java", "BodyUseAPI": [], "Fixed commit": "5b14d23194f7797e4ce189bcb20a6aca313d044e", "Url": "https://api.github.com/repos/zxing/zxing", "Date": "2017-04-06T13:31:14Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getManager().getNativeAdapter().isOffloadedScanBatchingSupported()) { final com.idevicesinc.sweetblue.utils.Interval scanReportDelay = getManager().m_config.scanReportDelay; final long scanReportDelay_millis = (false == (com.idevicesinc.sweetblue.utils.Interval.isDisabled(scanReportDelay))) ? scanReportDelay.millis() : 0; builder.setReportDelay(scanReportDelay_millis); }else { builder.setReportDelay(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2199/buggy-version/src.com.idevicesinc.sweetblue.P_Task_Scan.java", "BodyUseAPI": [], "Fixed commit": "4d0a36fe30fb1f71a6c0b81ca4cda37a8d7457c8", "Url": "https://api.github.com/repos/iDevicesInc/SweetBlue", "Date": "2015-10-02T20:47:16Z"},
{"Line": "=>1352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source instanceof com.datatorrent.api.Operator.ProxyOutputPort) { for (java.util.Map.Entry<com.datatorrent.stram.plan.logical.Operator.OutputPort<?>, com.datatorrent.stram.plan.logical.Operator.InputPort<?>> e : streamLinks.get(id).entrySet()) { if ((e.getValue()) == null) { e.setValue(sink); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6512/buggy-version/engine.src.main.java.com.datatorrent.stram.plan.logical.LogicalPlan.java", "BodyUseAPI": [], "Fixed commit": "e5c505008fe77511cd7354681247f669ca0592f2", "Url": "https://api.github.com/repos/chinmaykolhatkar/apex-core", "Date": "2015-10-30T09:02:44Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/796/buggy-version/src.gol.world.neo.BasicLine.java", "BodyUseAPI": [], "Fixed commit": "dd76dc1335ac1d5b81bb172c223590a0e0a847a1", "Url": "https://api.github.com/repos/jockbert/conways-game-of-life-refactoring", "Date": "2016-04-16T21:14:12Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.parseLong(java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((m.group(1).length()) > 1) && (oper1 == 0)) || (((m.group(3).length()) > 1) && (oper2 == 0))) || (((m.group(4).length()) > 1) && (res == 0))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8622/buggy-version/acm_icpc.pacnw.2014.div1.A.java", "BodyUseAPI": [], "Fixed commit": "3601af3b8322f0b22438f5a0c164dc5a2e7226ab", "Url": "https://api.github.com/repos/wonjohnchoi/competitions", "Date": "2015-01-23T11:36:22Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["columnasTabla.get(i).getNombre()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(insertColumnNames.contains(nombreColumna))) { insertData.add(\"NULL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9028/buggy-version/src.dbms.VisitorAdolfo.java", "BodyUseAPI": [], "Fixed commit": "b1c7763c180d071828d690cb9a09dcf25acd2a22", "Url": "https://api.github.com/repos/fcpauldiaz-archive/DBMS", "Date": "2016-04-06T06:04:48Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((project.getSeller().getId()) != 0) projectLiquidation.setSale(((projectLiquidation.getEarnings()) * (java.lang.Double.parseDouble(servicelayer.core.CoreGlobalConfiguration.GetInstance().getConfigurationValueByCode(\"PERCENTAGE_SALE\"))))); else projectLiquidation.setSale(0.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3385/buggy-version/WebService.src.servicelayer.core.CoreProjectLiquidation.java", "BodyUseAPI": [], "Fixed commit": "3e75c429046e4b6de6e44d00f5c27821946532fc", "Url": "https://api.github.com/repos/Matias1991/proyecto-grado-2015", "Date": "2015-10-12T18:02:39Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((project.getSeller()) != null) seller = servicelayer.core.CoreEmployed.GetInstance().getEmployed(project.getSeller().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3385/buggy-version/WebService.src.servicelayer.core.CoreProjectLiquidation.java", "BodyUseAPI": ["servicelayer.core.CoreEmployed.GetInstance().getEmployed(project.getSeller().getId())", "servicelayer.entity.businessEntity.Project.getSeller()", "project.getSeller().getId()"], "Fixed commit": "3e75c429046e4b6de6e44d00f5c27821946532fc", "Url": "https://api.github.com/repos/Matias1991/proyecto-grado-2015", "Date": "2015-10-12T18:02:39Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.t3.networking.registry.T3Registry.heartBeat(config.getPort()))) { throw new java.lang.RuntimeException(\"Your server disconnected from T\u00b3. It can no longer be found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7023/buggy-version/TabletopTool.src.main.java.com.t3.networking.T3Server.java", "BodyUseAPI": [], "Fixed commit": "35a9c57c7ee2b58c419e1fabca5361a96dbc0dec", "Url": "https://api.github.com/repos/virenerus/tabletoptool", "Date": "2014-07-12T17:43:00Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["driver.quotaDao.selectAfterMeasureDate(java.lang.Long,java.lang.Long,QuotaConst.QUOTA_SMOKE_ID,java.sql.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((quotaList.size()) == 0) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1162/buggy-version/src.main.java.com.curus.utils.service.supervise.smoke.SSmokeServiseUtils.java", "BodyUseAPI": [], "Fixed commit": "f76094836dc5b76b0d463a8f2c6eba281fdba83a", "Url": "https://api.github.com/repos/stupid-coder/CurusSpring", "Date": "2016-06-11T15:44:40Z"},
{"Line": "=>2549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dev.ukanth.ufirewall.util.G.enableMultiProfile()) { java.lang.String profile = \"\"; switch (dev.ukanth.ufirewall.util.G.storedProfile()) { case \"AFWallPrefs\" : profile = G.gPrefs.getString(\"default\", context.getString(R.string.defaultProfile)); break; case \"AFWallProfile1\" : profile = G.gPrefs.getString(\"profile1\", context.getString(R.string.profile1)); break; case \"AFWallProfile2\" : profile = G.gPrefs.getString(\"profile2\", context.getString(R.string.profile2)); break; case \"AFWallProfile3\" : profile = G.gPrefs.getString(\"profile3\", context.getString(R.string.profile3)); break; default : profile = dev.ukanth.ufirewall.util.G.storedProfile(); break; } notificationText = (((context.getString(R.string.active)) + \"(\") + profile) + \")\"; }else { notificationText = context.getString(R.string.active); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5369/buggy-version/aFWall.src.main.java.dev.ukanth.ufirewall.Api.java", "BodyUseAPI": [], "Fixed commit": "323cd2549ee005397000fa5ba5ddab911a6a361b", "Url": "https://api.github.com/repos/ukanth/afwall", "Date": "2015-08-03T03:35:11Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4785/buggy-version/app.models.ProjectToken.java", "BodyUseAPI": [], "Fixed commit": "c8ce4912e9915f4fea687617000d5ac046151dce", "Url": "https://api.github.com/repos/MultiAgencyCollective/exchange-net", "Date": "2013-05-08T16:56:41Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.newMapWindow) != null) this.newMapWindow.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7638/buggy-version/src.map.MapSelection.java", "BodyUseAPI": [], "Fixed commit": "27520d65e959fdfbef8ee634179581d05aaf8ec6", "Url": "https://api.github.com/repos/Link250/PixelKingdom", "Date": "2015-12-04T13:48:49Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.newServerWindow) != null) this.newServerWindow.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7638/buggy-version/src.main.ServerList.java", "BodyUseAPI": [], "Fixed commit": "27520d65e959fdfbef8ee634179581d05aaf8ec6", "Url": "https://api.github.com/repos/Link250/PixelKingdom", "Date": "2015-12-04T13:48:49Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotMinUser()) { Resources.warningDialog.show(\"You must need the at least the same users as task partners\", TeacherMain.teacherGamesScreen.getStage()); }else { com.project.terminkalender.screens.TeacherGamesScreen teacherGamesScreen = ((com.project.terminkalender.screens.TeacherGamesScreen) (com.project.terminkalender.TeacherMain.teacherGamesScreen)); TeacherMain.teacherWebSockets.openGame(name, teacherGamesScreen.getTeacher(), password, tasksToString(), usersToString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8008/buggy-version/core.src.com.project.terminkalender.games.TeacherGame.java", "BodyUseAPI": [], "Fixed commit": "71df9990e7bb6b34468b0d961fb42e7a7d7d38d4", "Url": "https://api.github.com/repos/javosuher/Terminkalender", "Date": "2015-12-05T12:04:34Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ZkMonitorPath.instance.register(config.name)) { lc.process(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8712/buggy-version/src.main.java.io.uve.yypush.collect.CollectorThread.java", "BodyUseAPI": [], "Fixed commit": "9eaa538758114eda320f967e8b95c0147a09db4f", "Url": "https://api.github.com/repos/uveio/YYPush", "Date": "2016-04-22T10:03:45Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationKeys.size()) == 0) { refreshLayout.setRefreshing(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6008/buggy-version/app.src.main.java.gmu.cs.cs477.courseproject.PostsActivity.java", "BodyUseAPI": [], "Fixed commit": "ea9005f87fd09cbfad4ed2f207c4c91a66220883", "Url": "https://api.github.com/repos/dramzy/CourseProject", "Date": "2015-11-27T23:01:05Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ridavoy.Clock.getBytecodesLeft()) < 501) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7766/buggy-version/teams.ridavoy.Zdaniya.java", "BodyUseAPI": [], "Fixed commit": "95b9b60e3707366d887f8d48e69f2b369235f81b", "Url": "https://api.github.com/repos/miraziz/bcode2015-scaffold", "Date": "2015-01-13T03:08:10Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.solr.schema.IndexSchema.getFieldOrNull(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (field != null) { addConvertedFieldValue(shard, parent, value, field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4493/buggy-version/federated.src.merge.java.org.apache.solr.search.federated.MergeSearchComponent.java", "BodyUseAPI": ["org.apache.solr.search.federated.MergeSearchComponent.addConvertedFieldValue(java.lang.String,org.apache.solr.common.SolrDocument,java.lang.Object,org.apache.solr.schema.SchemaField)"], "Fixed commit": "3ed59be8c8cd9d8b8a6e373af9d9b40d15811479", "Url": "https://api.github.com/repos/flaxsearch/BioSolr", "Date": "2015-12-10T16:57:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inSize > downSize) { for (int i = 0; i < downSize; i++) { final int pos = i + (rand.nextInt((inSize - i))); final int temp = indices[pos]; indices[pos] = indices[i]; indices[i] = temp; mask.set(i); } }else { for (int j = 0; j < (mask.size()); j++) { mask.set(j); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2339/buggy-version/src.main.java.inflor.core.utils.BitSetUtils.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "4a33ee3acffed4e5ed9ea28a8336af4e204c1998", "Url": "https://api.github.com/repos/Landysh/fleur", "Date": "2017-02-28T09:33:44Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jourio.roope.interactivestory.model.Story.getPage(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (page.isFinalPage()) { choice1Button.setVisibility(View.INVISIBLE); choice2Button.setText(R.string.play_again_buttontext); }else { loadButtons(page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1824/buggy-version/StoryApp.InteractiveStory.app.src.main.java.com.jourio.roope.interactivestory.ui.StoryActivity.java", "BodyUseAPI": ["com.jourio.roope.interactivestory.ui.StoryActivity.loadButtons(com.jourio.roope.interactivestory.model.Page)"], "Fixed commit": "57b2e84ea728b13d7ecf04aeafcd220d0490d50b", "Url": "https://api.github.com/repos/Jourio/AndroidApps", "Date": "2017-09-06T07:12:15Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5475/buggy-version/src.com.jonathonstaff.ideaascii.AsciiComment.java", "BodyUseAPI": [], "Fixed commit": "36a4d08b79079156eba68c430000dabfe22462a7", "Url": "https://api.github.com/repos/jonstaff/IdeaAscii", "Date": "2014-07-01T10:59:04Z"},
{"Line": "=>2822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.net.DNSToSwitchMapping.resolve(java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((rNameList == null) || ((rNameList.get(0)) == null)) { rName = org.apache.hadoop.net.NetworkTopology.DEFAULT_RACK; org.apache.hadoop.mapred.JobTracker.LOG.warn((((\"Couldn't resolve \" + name) + \". Falling back to \") + (org.apache.hadoop.net.NetworkTopology.DEFAULT_RACK))); }else { rName = rNameList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7967/buggy-version/src.mapred.org.apache.hadoop.mapred.JobTracker.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "eb5191195ae142f6678b633af5625a4fce5c9c59", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2014-12-19T19:39:04Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTargetDataLine()) == null) { javax.sound.sampled.DataLine.Info dataLineInfo = new javax.sound.sampled.DataLine.Info(javax.sound.sampled.TargetDataLine.class, getAudioFormat()); setTargetDataLine(((javax.sound.sampled.TargetDataLine) (javax.sound.sampled.AudioSystem.getLine(dataLineInfo)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6998/buggy-version/src.com.darkprograms.speech.microphone.Microphone.java", "BodyUseAPI": [], "Fixed commit": "f7c5335a7074201d878ca90215fc8c672862f499", "Url": "https://api.github.com/repos/The-Shadow/java-speech-api", "Date": "2013-10-06T19:45:41Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainActivity.mButtonUnitConvert.getText()) == \"C\") { mTemperatureLabel.setText(((java.lang.Math.round(TempInC)) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1127/buggy-version/app.src.main.java.com.bojie.stormy.adapter.HourAdapter.java", "BodyUseAPI": [], "Fixed commit": "11486cf3cbe40589fe6ee189aceefd07fe721471", "Url": "https://api.github.com/repos/jbj88817/WeatherBo-android", "Date": "2015-03-07T07:36:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainActivity.mButtonUnitConvert.getText()) == \"C\") { holder.temperatureLabel.setText(((java.lang.Math.round(TempInC)) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1127/buggy-version/app.src.main.java.com.bojie.stormy.adapter.DayAdapter.java", "BodyUseAPI": [], "Fixed commit": "11486cf3cbe40589fe6ee189aceefd07fe721471", "Url": "https://api.github.com/repos/jbj88817/WeatherBo-android", "Date": "2015-03-07T07:36:07Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) == null) { var = 0; }else { var = name.hashCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5318/buggy-version/src.breakout.Score.java", "BodyUseAPI": [], "Fixed commit": "b29cd9aa6620ff60df160a2c0134847cc394d232", "Url": "https://api.github.com/repos/sederj/Breakout", "Date": "2017-04-19T23:49:42Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mStickman.getStickmanStageController()) != null) { if (!(mStickman.getStickmanStageController().ismNetwork())) { mStickman.notifyListeners(mID); }else { mStickman.getStickmanStageController().sendAnimationUpdate(\"end\", getmID()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2245/buggy-version/src.de.dfki.stickmanSwing.animationlogic.AnimationSwing.java", "BodyUseAPI": ["mStickman.getStickmanStageController().sendAnimationUpdate(java.lang.String,java.lang.String)", "de.dfki.stickmanSwing.StickmanSwing.notifyListeners(java.lang.String)", "de.dfki.stickmanSwing.StickmanSwing.getStickmanStageController()", "mStickman.getStickmanStageController().ismNetwork()", "de.dfki.stickmanSwing.StickmanSwing.getStickmanStageController()"], "Fixed commit": "35ff86b0681149b723e426c12e0e800571614adb", "Url": "https://api.github.com/repos/SceneMaker/Stickman", "Date": "2017-03-28T08:50:58Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.jolbol1.RandomCoordinates.RandomCoords.getPlugin().hasPayed(player, finalThisCost)) { player.teleport(finalLocationTP); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4240/buggy-version/src.com.jolbol1.RandomCoordinates.managers.Coordinates.java", "BodyUseAPI": ["org.bukkit.entity.Player.teleport(com.jolbol1.RandomCoordinates.managers.Location)"], "Fixed commit": "437c1a638fbe17195c8ddc06c1d67bc3b38c9e01", "Url": "https://api.github.com/repos/jolbol1/RandomCoordinatesV2", "Date": "2016-07-08T02:48:49Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zf.zson.ZSON.ZsonParse.getElementInstance(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (temp != null) { classType = temp.getClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8296/buggy-version/src.main.java.com.zf.zson.ZSON.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "55bfff62be96967f6002d61f348f5a8f80a08e77", "Url": "https://api.github.com/repos/zhangfei19841004/zson", "Date": "2017-06-21T07:50:59Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zf.zson.ZSON.ZsonParse.getElementInstance(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (temp != null) { classType = temp.getClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8296/buggy-version/src.main.java.com.zf.zson.ZSON.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "55bfff62be96967f6002d61f348f5a8f80a08e77", "Url": "https://api.github.com/repos/zhangfei19841004/zson", "Date": "2017-06-21T07:50:59Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(currentUrl.startsWith(\"http://\"))) { currentUrl = \"https://\" + (currentUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3258/buggy-version/app.src.main.java.com.raccoonapps.pricemanager.app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c68e128edee9a54bcaabc508d13b13a11e41c39a", "Url": "https://api.github.com/repos/sanyok7734/PriceManager", "Date": "2016-01-09T19:19:03Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { java.lang.System.out.println((((\"TiPi: PSF_Estimation, \" + task) + \" : \") + (minimizer.getReason()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3187/buggy-version/src.mitiv.microscopy.PSF_Estimation.java", "BodyUseAPI": [], "Fixed commit": "59f5123e570c19214959d6780a4aed7116e5ead7", "Url": "https://api.github.com/repos/emmt/TiPi", "Date": "2016-10-09T09:49:34Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { java.lang.System.out.format(\"Warning: too many iterations (%d).\\n\", maxiter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3187/buggy-version/src.mitiv.microscopy.PSF_Estimation.java", "BodyUseAPI": [], "Fixed commit": "59f5123e570c19214959d6780a4aed7116e5ead7", "Url": "https://api.github.com/repos/emmt/TiPi", "Date": "2016-10-09T09:49:34Z"},
{"Line": "=>1484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inaturalist.android.INaturalistService.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (json == null) return new org.inaturalist.android.BetterJSONObject();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8783/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": [], "Fixed commit": "f2ca5f04084127f841a226df36edf670940175ca", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-08-07T02:24:47Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentSlot instanceof org.jgll.grammar.slot.RegularListGrammarSlot) { return (set.add(((org.jgll.grammar.slot.RegularListGrammarSlot) (currentSlot)).getRegularList().getCharacterClass())) || changed; }else { return changed; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9211/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": [], "Fixed commit": "97629870ddfe6f80270b81adc918c975d3e497c6", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-09-24T21:22:40Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Boolean>.get(org.apache.commons.lang.StringUtils.lowerCase(column.getColumnName()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (isRequired == null) { table = dbDialect.findTable(data.getSchemaName(), data.getTableName(), false); isRequiredMap = new java.util.HashMap<java.lang.String, java.lang.Boolean>(); for (org.apache.ddlutils.model.Column tableColumn : table.getColumns()) { isRequiredMap.put(org.apache.commons.lang.StringUtils.lowerCase(tableColumn.getName()), tableColumn.isRequired()); } isRequired = isRequiredMap.get(org.apache.commons.lang.StringUtils.lowerCase(column.getColumnName())); if (isRequired == null) { throw new com.alibaba.otter.node.etl.load.exception.LoadException(java.lang.String.format(\"column name %s is not found in Table[%s]\", column.getColumnName(), table.toString())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1833/buggy-version/node.etl.src.main.java.com.alibaba.otter.node.etl.load.loader.db.DbLoadAction.java", "BodyUseAPI": [], "Fixed commit": "a4b4ee72be28a55a310bdc211ec0b4eba562bfce", "Url": "https://api.github.com/repos/alibaba/otter", "Date": "2016-11-10T03:26:34Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(node.getDeclaringClass().equals(classNode))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1956/buggy-version/src.main.org.codehaus.groovy.classgen.Verifier.java", "BodyUseAPI": [], "Fixed commit": "13183f96a14379f91421b113f438a0b9fa4312a4", "Url": "https://api.github.com/repos/groovy/groovy-core", "Date": "2013-01-18T12:12:38Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<org.nschmidt.ldparteditor.data.GData>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((g1.type()) == 3) { org.nschmidt.ldparteditor.data.GData3 g3 = ((org.nschmidt.ldparteditor.data.GData3) (g1)); org.nschmidt.ldparteditor.data.Vertex[] vt = triangles.get(g3); java.util.TreeSet<org.nschmidt.ldparteditor.data.Vertex> tvs = new java.util.TreeSet<org.nschmidt.ldparteditor.data.Vertex>(); tvs.add(vt[0]); tvs.add(vt[1]); tvs.add(vt[2]); tvs.removeAll(h1); tvs.removeAll(h2); if (tvs.isEmpty()) return; v3 = tvs.iterator().next(); n1 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vt[2]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vt[0]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vt[1])); }else { org.nschmidt.ldparteditor.data.GData4 g4 = ((org.nschmidt.ldparteditor.data.GData4) (g1)); org.nschmidt.ldparteditor.data.Vertex[] vq = quads.get(g4); java.util.TreeSet<org.nschmidt.ldparteditor.data.Vertex> qvs = new java.util.TreeSet<org.nschmidt.ldparteditor.data.Vertex>(); qvs.add(vq[0]); qvs.add(vq[1]); qvs.add(vq[2]); qvs.add(vq[3]); qvs.removeAll(h1); qvs.removeAll(h2); if (qvs.isEmpty()) return; if ((qvs.contains(vq[0])) && (qvs.contains(vq[1]))) { v3 = vq[0]; n1 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[2]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[3]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[0])); }else if ((qvs.contains(vq[1])) && (qvs.contains(vq[2]))) { v3 = vq[1]; n1 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[3]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[0]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[1])); }else if ((qvs.contains(vq[2])) && (qvs.contains(vq[3]))) { v3 = vq[2]; n1 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[0]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[1]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[2])); }else { v3 = vq[3]; n1 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[1]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[2]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[3])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4345/buggy-version/src.org.nschmidt.ldparteditor.data.VM06Edger2.java", "BodyUseAPI": [], "Fixed commit": "372a20df73acd31e6715625a029979a4b0c1e7ac", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-12-30T11:47:34Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.data.VM06Edger2.get(org.nschmidt.ldparteditor.data.GData4)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((qvs.contains(vq[2])) && (qvs.contains(vq[3]))) { v3 = vq[2]; n1 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[0]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[1]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[2])); }else { v3 = vq[3]; n1 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[1]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[2]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[3])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4345/buggy-version/src.org.nschmidt.ldparteditor.data.VM06Edger2.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(org.nschmidt.ldparteditor.helpers.math.Vector3d,org.nschmidt.ldparteditor.helpers.math.Vector3d,org.nschmidt.ldparteditor.helpers.math.Vector3d)", "org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(org.nschmidt.ldparteditor.helpers.math.Vector3d,org.nschmidt.ldparteditor.helpers.math.Vector3d,org.nschmidt.ldparteditor.helpers.math.Vector3d)"], "Fixed commit": "372a20df73acd31e6715625a029979a4b0c1e7ac", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-12-30T11:47:34Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<org.nschmidt.ldparteditor.data.GData>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((g2.type()) == 3) { org.nschmidt.ldparteditor.data.GData3 g3 = ((org.nschmidt.ldparteditor.data.GData3) (g2)); org.nschmidt.ldparteditor.data.Vertex[] vt = triangles.get(g3); java.util.TreeSet<org.nschmidt.ldparteditor.data.Vertex> tvs = new java.util.TreeSet<org.nschmidt.ldparteditor.data.Vertex>(); tvs.add(vt[0]); tvs.add(vt[1]); tvs.add(vt[2]); tvs.removeAll(h1); tvs.removeAll(h2); if (tvs.isEmpty()) return; v4 = tvs.iterator().next(); n2 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vt[2]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vt[0]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vt[1])); }else { org.nschmidt.ldparteditor.data.GData4 g4 = ((org.nschmidt.ldparteditor.data.GData4) (g2)); org.nschmidt.ldparteditor.data.Vertex[] vq = quads.get(g4); java.util.TreeSet<org.nschmidt.ldparteditor.data.Vertex> qvs = new java.util.TreeSet<org.nschmidt.ldparteditor.data.Vertex>(); qvs.add(vq[0]); qvs.add(vq[1]); qvs.add(vq[2]); qvs.add(vq[3]); qvs.removeAll(h1); qvs.removeAll(h2); if (qvs.isEmpty()) return; if ((qvs.contains(vq[0])) && (qvs.contains(vq[1]))) { v4 = vq[0]; n2 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[2]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[3]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[0])); }else if ((qvs.contains(vq[1])) && (qvs.contains(vq[2]))) { v4 = vq[1]; n2 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[3]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[0]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[1])); }else if ((qvs.contains(vq[2])) && (qvs.contains(vq[3]))) { v4 = vq[2]; n2 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[0]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[1]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[2])); }else { v4 = vq[3]; n2 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[1]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[2]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[3])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4345/buggy-version/src.org.nschmidt.ldparteditor.data.VM06Edger2.java", "BodyUseAPI": [], "Fixed commit": "372a20df73acd31e6715625a029979a4b0c1e7ac", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-12-30T11:47:34Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.data.VM06Edger2.get(org.nschmidt.ldparteditor.data.GData4)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((qvs.contains(vq[2])) && (qvs.contains(vq[3]))) { v4 = vq[2]; n2 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[0]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[1]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[2])); }else { v4 = vq[3]; n2 = org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[1]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[2]), new org.nschmidt.ldparteditor.helpers.math.Vector3d(vq[3])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4345/buggy-version/src.org.nschmidt.ldparteditor.data.VM06Edger2.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(org.nschmidt.ldparteditor.helpers.math.Vector3d,org.nschmidt.ldparteditor.helpers.math.Vector3d,org.nschmidt.ldparteditor.helpers.math.Vector3d)", "org.nschmidt.ldparteditor.helpers.math.Vector3d.getNormal(org.nschmidt.ldparteditor.helpers.math.Vector3d,org.nschmidt.ldparteditor.helpers.math.Vector3d,org.nschmidt.ldparteditor.helpers.math.Vector3d)"], "Fixed commit": "372a20df73acd31e6715625a029979a4b0c1e7ac", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-12-30T11:47:34Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.M)) { java.lang.reflect.Field mVPathRendererField = mVectorStateObj.getClass().getDeclaredField(\"mVPathRenderer\"); mVPathRendererField.setAccessible(true); objectToUse = mVPathRendererField.get(mVectorStateObj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8395/buggy-version/morpher.src.main.java.com.kamenov.android.morpher.MorphSlot.java", "BodyUseAPI": [], "Fixed commit": "eea8eaf20e6a9813febda5d5c57de85ec46bdb13", "Url": "https://api.github.com/repos/BorislavKamenov/morpher", "Date": "2016-12-29T09:21:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (c == null) throw new java.lang.ClassNotFoundException(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3875/buggy-version/core.src.main.java.forklift.classloader.ChildFirstClassLoader.java", "BodyUseAPI": [], "Fixed commit": "ad1ee60ba6195a459a8d5bba8c541e1e06e1af75", "Url": "https://api.github.com/repos/nateww/forklift", "Date": "2015-06-24T03:11:17Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jstakun.gms.android.utils.HttpUtils.loadLandmarkList(java.net.URI,java.util.List<org.apache.http.NameValuePair>,boolean,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((utils.getResponseCode()) >= 400) && (received.isEmpty())) { url = (com.jstakun.gms.android.config.ConfigurationManager.getInstance().getSecuredRHCloudUrl()) + \"search\"; received = utils.loadLandmarkList(new java.net.URI(url), params, true, new java.lang.String[]{ \"deflate\", \"application/x-java-serialized-object\" }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6478/buggy-version/GMSLib.src.com.jstakun.gms.android.ui.GMSSearchActivity.java", "BodyUseAPI": ["com.jstakun.gms.android.utils.HttpUtils.loadLandmarkList(java.net.URI,java.util.List<org.apache.http.NameValuePair>,boolean,java.lang.String[])"], "Fixed commit": "5a5c3d499b3419059b675a5bc58e84fa2de0ef07", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-03-15T14:40:25Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ignore && longEnough) && (line.contains(end))) { ignore = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2020/buggy-version/src.com.qubitproducts.compilejs.MainProcessorHelper.java", "BodyUseAPI": [], "Fixed commit": "7383a66b2baf08cc0df28d9c370a0bd6a27d99d5", "Url": "https://api.github.com/repos/peterfronc/compilejs", "Date": "2015-06-19T10:57:04Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ignore && longEnough) && (line.contains(end))) { ignore = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2020/buggy-version/src.com.qubitproducts.compilejs.MainProcessorHelper.java", "BodyUseAPI": [], "Fixed commit": "7383a66b2baf08cc0df28d9c370a0bd6a27d99d5", "Url": "https://api.github.com/repos/peterfronc/compilejs", "Date": "2015-06-19T10:57:04Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ignore && longEnough) && (line.contains(end))) { ignore = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2020/buggy-version/src.com.qubitproducts.compilejs.MainProcessorHelper.java", "BodyUseAPI": [], "Fixed commit": "7383a66b2baf08cc0df28d9c370a0bd6a27d99d5", "Url": "https://api.github.com/repos/peterfronc/compilejs", "Date": "2015-06-19T10:57:04Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.getCurrentPosition()) != (MainActivity.TASKS_FRAGMENT)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5594/buggy-version/src.de.azapps.mirakel.main_activity.TasksFragment.java", "BodyUseAPI": [], "Fixed commit": "73d949ef7daef78da7ef1ec20b33fa57ce75adc6", "Url": "https://api.github.com/repos/charno/mirakel-android", "Date": "2013-11-11T18:42:28Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((containsString(Playermessage, \"sai\")) && (containsString(Playermessage, \"op\"))) { if (p.isOp()) { org.bukkit.entity.Player target = me.jamiemac262.ServerAIReWrite.ServerChatListener.findPlayerInArray(Playermessage); if (target != null) { target.setOp(true); new me.jamiemac262.ServerAIReWrite.function.SendAIMessage(0.5, ((\"\" + (org.bukkit.Bukkit.getPlayer(Playermessage[2]).getDisplayName())) + \" is now an op\"), (\"ok opping \" + (org.bukkit.Bukkit.getPlayer(Playermessage[2]).getDisplayName())), ((org.bukkit.Bukkit.getPlayer(Playermessage[2]).getDisplayName()) + \" you are now an op. Don't abuse this privalege\")); }else { new me.jamiemac262.ServerAIReWrite.function.SendAIMessage(0.5, \"Player is not online, and has never been online\", \"are you sure that player exists?\", \"I have infinite knowledge and cannot find that player in my database!\"); } }else { me.jamiemac262.ServerAIReWrite.ServerChatListener.noPerms(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/714/buggy-version/src.me.jamiemac262.ServerAIReWrite.ServerChatListener.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPlayer(Playermessage[2]).getDisplayName()", "org.bukkit.Bukkit.getPlayer(java.lang.String)", "org.bukkit.Bukkit.getPlayer(java.lang.String)", "me.jamiemac262.ServerAIReWrite.ServerChatListener.findPlayerInArray(java.lang.String[])", "org.bukkit.Bukkit.getPlayer(Playermessage[2]).getDisplayName()", "org.bukkit.Bukkit.getPlayer(java.lang.String)", "org.bukkit.Bukkit.getPlayer(Playermessage[2]).getDisplayName()"], "Fixed commit": "af5cd6a363e158372382288d8182c7e67577d625", "Url": "https://api.github.com/repos/jamiemac262/ServerAI", "Date": "2013-03-18T15:42:10Z"},
{"Line": "=>707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (function.getName().equals(\"=\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2100/buggy-version/SMTInterpol.src.de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.EprTheory.java", "BodyUseAPI": [], "Fixed commit": "295933c13ac0639a7d33b98bc356615400d34d94", "Url": "https://api.github.com/repos/ultimate-pa/smtinterpol", "Date": "2016-06-01T22:10:12Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tickManager == null) || (server == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6201/buggy-version/src.StartServer.java", "BodyUseAPI": [], "Fixed commit": "cd18427f75175383596f2cb56d2609b432eea7e3", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-02-14T18:35:22Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fromUpgrade) { io.undertow.protocols.http2.Http2Channel.StreamHolder streamHolder = new io.undertow.protocols.http2.Http2Channel.StreamHolder(((io.undertow.protocols.http2.Http2StreamSinkChannel) (null))); streamHolder.sinkClosed = true; currentStreams.put(1, streamHolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5892/buggy-version/core.src.main.java.io.undertow.protocols.http2.Http2Channel.java", "BodyUseAPI": [], "Fixed commit": "94ec72f5efb6b778ce769ce9c0006e88c07d5d5d", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2016-09-14T21:12:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((json.get(\"kind\")) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6641/buggy-version/java.src.org.dartlang.vm.service.element.Frame.java", "BodyUseAPI": [], "Fixed commit": "c4a5c2deb27165885a6bf6ce2f61a1070e2abe2d", "Url": "https://api.github.com/repos/devoncarew/vm_service_drivers", "Date": "2017-02-13T18:54:47Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((org.bukkit.entity.LivingEntity) (event.getEntity())).isLeashed())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5550/buggy-version/src.main.java.com.sk89q.craftbook.mech.BetterLeads.java", "BodyUseAPI": [], "Fixed commit": "b19c4097361e3175c77f9c94fc4bed72cac260ea", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-08-08T09:22:16Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.datavyu.plugins.qtkitplayer.QTKitViewer.5.getPlaybackSpeed()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((prevRate < 0) && (prevRate > (-8))) { java.lang.System.out.println(\"Moderate seeking!\"); movie.setTimeModerate(position, movie.id); }else { java.lang.System.out.println(\"Fast seeking!\"); movie.setTime(position, movie.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3709/buggy-version/src.main.java.org.datavyu.plugins.qtkitplayer.QTKitViewer.java", "BodyUseAPI": [], "Fixed commit": "62be7ec4fc55d7182c8a0ed5636fd863fc597e97", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2016-05-02T02:42:42Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg0.getSource().equals(this.selectAll)) { if (!(this.checkboxList.isEmpty())) { for (int i = 0; i < (this.checkboxList.size()); i++) { this.checkboxList.get(i).setSelected(this.selectAll.isSelected()); } } }else if (arg0.getSource().equals(this.btnOK)) { pnlParentPanel.purgeWatchTab(); for (int i = 0; i < (this.checkboxList.size()); i++) { if (this.checkboxList.get(i).isSelected()) { this.selectedVar.add(this.varList.get(i)); } } pnlParentPanel.setListWatchVariables(this.selectedVar); this.dispose(); }else if (arg0.getSource().equals(this.btnClose)) { pnlParentPanel.closeWatch(); this.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7545/buggy-version/src.com.ide.DialogWatch.java", "BodyUseAPI": ["java.lang.Object.equals(javax.swing.JButton)", "java.lang.Object.equals(javax.swing.JButton)", "javax.swing.JCheckBox.setSelected(boolean)", "javax.swing.JCheckBox.isSelected()", "java.awt.event.MouseEvent.getSource()", "java.awt.event.MouseEvent.getSource()"], "Fixed commit": "8ce1b77f2e1371d8eeff6367ed58df49cba66191", "Url": "https://api.github.com/repos/luis-madrigal/PROGLAN_MP", "Date": "2017-12-01T09:51:44Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (headers == null) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7623/buggy-version/volleycontroller.src.main.java.com.libraries.inlacou.volleycontroller.InternetCall.java", "BodyUseAPI": [], "Fixed commit": "02f1c9c35cebfc656cb05e74f04db251357834f3", "Url": "https://api.github.com/repos/inlacou/VolleyControllerLibrary", "Date": "2016-12-26T13:36:13Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jukta.jtahoe.ServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (path.endsWith(\".js\")) { response.setContentType(\"text/javascript\"); }else if (path.endsWith(\".css\")) { response.setContentType(\"text/css\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4557/buggy-version/j-tahoe-core.src.main.java.com.jukta.jtahoe.LibraryResourcesFilter.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "eaa714272fdf17dca3f6c5ead82ab9bcb552b72b", "Url": "https://api.github.com/repos/jukta/j-tahoe", "Date": "2017-01-20T01:54:20Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.navigation.Navigation.newLocation) != null) { mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(com.example.navigation.Navigation.newLocation.getLatitude(), com.example.navigation.Navigation.newLocation.getLongitude()), 18)); goToLocation(com.example.navigation.Navigation.newLocation.getLatitude(), com.example.navigation.Navigation.newLocation.getLongitude(), 18, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1637/buggy-version/NavigationLibrary.navigation.src.main.java.com.example.navigation.Navigation.java", "BodyUseAPI": [], "Fixed commit": "7e70663709cf3e6a765c658a62e453cb199e45bc", "Url": "https://api.github.com/repos/nguyenphuc1995/navigation", "Date": "2017-07-20T05:03:46Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (googleApiClient.isConnected()) { LocationServices.FusedLocationApi.removeLocationUpdates(googleApiClient, this); StopGoogleApiClient(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1637/buggy-version/NavigationLibrary.navigation.src.main.java.com.example.navigation.Navigation.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.removeLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,com.example.navigation.Navigation)"], "Fixed commit": "7e70663709cf3e6a765c658a62e453cb199e45bc", "Url": "https://api.github.com/repos/nguyenphuc1995/navigation", "Date": "2017-07-20T05:03:46Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { edu.boun.cmpe451.group2.android.ingredient.IngredientAdapter adapter = new edu.boun.cmpe451.group2.android.ingredient.IngredientAdapter(getApplicationContext(), R.id.ingredient_add_list, result.getItem()); ingredientListView.setAdapter(adapter); }else { android.app.AlertDialog.Builder diyalog = new android.app.AlertDialog.Builder(this); diyalog.setMessage(\"There is no such an ingredient!\").setCancelable(false).setPositiveButton(\"Tamam\", new android.content.DialogInterface.OnClickListener() { @java.lang.Override public void onClick(android.content.DialogInterface dialog, int which) { dialog.dismiss(); } }); diyalog.create().show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8790/buggy-version/aciktim-andriod.app.src.main.java.edu.boun.cmpe451.group2.android.ingredient.IngredientAddActivity.java", "BodyUseAPI": ["edu.boun.cmpe451.group2.android.ingredient.IngredientList.getItem()"], "Fixed commit": "aed4a066cb9cb53b83ebe3687df3b703720a5211", "Url": "https://api.github.com/repos/bounswe/bounswe2015group2", "Date": "2015-12-21T11:08:05Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(keyRingCollection.contains(publicKeyRing.getPublicKey().getKeyID()))) { keyRingCollection = org.bouncycastle.openpgp.PGPPublicKeyRingCollection.addPublicKeyRing(keyRingCollection, publicKeyRing); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2098/buggy-version/src.main.java.ie.dcu.collir24.KeyRing.java", "BodyUseAPI": ["org.bouncycastle.openpgp.PGPPublicKeyRingCollection.addPublicKeyRing(org.bouncycastle.openpgp.PGPPublicKeyRingCollection,org.bouncycastle.openpgp.PGPPublicKeyRing)"], "Fixed commit": "a99794f5694059ec98b2f18d3617f7aca62a8da6", "Url": "https://api.github.com/repos/collinsrj/dependency-integrity", "Date": "2013-02-14T08:35:46Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controller.Controller.city.getName().equals(\"City2\")) && (old_city.equals(\"City1\"))) { controller.Controller.player.setY((2 * (playerHeight))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5239/buggy-version/pokemonstro.src.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "3a0c7df2f17f05326566e2bd49c042bd36556e9a", "Url": "https://api.github.com/repos/DaniloCharantola/pokemonstro", "Date": "2015-06-05T18:42:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(command.getRecurrence().equals(\"\"))) { java.lang.String[] recurrence = command.getRecurrence().split(\" \"); recurrenceType = getRecurrence(recurrence[1]); recurrenceFrequency = stringToInteger(recurrence[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/170/buggy-version/src.main.java.backend.Logic.AddCommand.java", "BodyUseAPI": ["command.getRecurrence().split(java.lang.String)", "main.java.backend.Logic.Command.getRecurrence()"], "Fixed commit": "6dc2e90ce49696433722b496182dbc02eb15cb1f", "Url": "https://api.github.com/repos/cs2103aug2015-w15-1j/main", "Date": "2015-11-09T04:43:57Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(char[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((fileData.length()) == 0) && (readData.startsWith(com.orientechnologies.common.io.OIOUtils.UTF8_BOM))) readData = readData.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4529/buggy-version/core.src.main.java.com.orientechnologies.common.io.OIOUtils.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "724ef1f6e8cc6c6827d1c07ced1067c406e6ec5d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-16T08:36:03Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GM.gameTimeLeft()) == 0) { handler.sendEmptyMessage(2); }else { handler.sendEmptyMessage(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8221/buggy-version/app.src.main.java.cheetah.cheetah_mobile.cheetah.java", "BodyUseAPI": [], "Fixed commit": "b8330a413e2945f73e87195c65a8e0bae2b38de8", "Url": "https://api.github.com/repos/vaddmt/cheetah_mobile", "Date": "2014-10-13T21:35:50Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ndx2 == (ndx1 + 1)) { result.append(macroPrefix); i = ndx1; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2112/buggy-version/jodd-core.src.main.java.jodd.util.StringTemplateParser.java", "BodyUseAPI": [], "Fixed commit": "199e811667ab7396b175fae397233eb34c666565", "Url": "https://api.github.com/repos/oblac/jodd", "Date": "2015-08-20T10:55:24Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plan_runner.utilities.LocalMergeResults._computedAgg.printContent().isEmpty()) || (plan_runner.utilities.LocalMergeResults._fileAgg.printContent().isEmpty())) { throw new java.lang.RuntimeException(\"Final aggregation state should not be empty!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6961/buggy-version/src.plan_runner.utilities.LocalMergeResults.java", "BodyUseAPI": [], "Fixed commit": "2e11dbb23538a20fc87c99fc6c524a86474167ea", "Url": "https://api.github.com/repos/avitorovic/squall", "Date": "2012-09-06T17:03:11Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hero.getFatLevel()) <= 0) { hero.endGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8848/buggy-version/src.GameCanvas.java", "BodyUseAPI": ["FatBoyHero.endGame()"], "Fixed commit": "76a06bcb54d7731ea7ed6c6f1deda1e56416c6f0", "Url": "https://api.github.com/repos/Rovanion/FatBoy", "Date": "2014-03-01T11:30:02Z"},
{"Line": "=>1090", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mVisibleDots)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7345/buggy-version/core.java.com.android.internal.widget.LockPatternView.java", "BodyUseAPI": [], "Fixed commit": "5f6b3ba6142008ca3c05bf40426f14d68cd4ba3c", "Url": "https://api.github.com/repos/mickybart/android_frameworks_base", "Date": "2015-04-10T00:12:51Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getMetadata().getAnnotations()) != null) { nodeInfo.setDiskInfo(node.getMetadata().getAnnotations().get(GlobalConstant.DISK_STR)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3585/buggy-version/DomeOS.src.main.java.org.domeos.api.service.cluster.impl.ClusterServiceImpl.java", "BodyUseAPI": ["org.domeos.api.model.cluster.NodeInfo.setDiskInfo(node.getMetadata().getAnnotations().get(GlobalConstant.DISK_STR))", "node.getMetadata().getAnnotations()", "node.getMetadata().getAnnotations().get(GlobalConstant.DISK_STR)", "org.domeos.api.service.cluster.impl.Node.getMetadata()"], "Fixed commit": "b6247bd52eb79166942ce1d45dee3f9154fc4836", "Url": "https://api.github.com/repos/domeos/server", "Date": "2016-03-24T02:45:28Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mBalance.getKrw()) > 0) { writeBalanceLog(mBalance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3842/buggy-version/app.src.main.java.com.sungjae.coinsurfer.service.TradeService.java", "BodyUseAPI": ["com.sungjae.coinsurfer.service.TradeService.writeBalanceLog(com.sungjae.coinsurfer.tradedata.Balance)"], "Fixed commit": "fcd040cd003827934c400ad4bd4070c95452efe8", "Url": "https://api.github.com/repos/jaebae/CoinSurfer", "Date": "2017-12-29T10:41:26Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getFormat().equals(FormatEnum.JSON.name)) { return element; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/298/buggy-version/es.alrocar.poiproxy.src.main.java.es.alrocar.poiproxy.configuration.DescribeService.java", "BodyUseAPI": [], "Fixed commit": "73d573e141aab4fe7148836a63888358e67f16ec", "Url": "https://api.github.com/repos/alrocar/POIProxy", "Date": "2015-01-15T10:15:26Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) == (-1)) { x = 0; return current; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4774/buggy-version/src.com.gmail.einsyui.geometry.BlockIndex2D.java", "BodyUseAPI": [], "Fixed commit": "75fd99e1086829a8ddf3d161ff4505f3db500960", "Url": "https://api.github.com/repos/Einsyui/BuildUtils", "Date": "2015-02-19T11:04:28Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (outFile.exists()) { outFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8068/buggy-version/LanweilMichNicht.src.controller.PDFCutter.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "6d2d65acbe27d0673842ce0dab079027ebf42daa", "Url": "https://api.github.com/repos/desperateCoder/PdfConcat", "Date": "2017-05-07T11:35:41Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (outputFile.exists()) { outputFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8068/buggy-version/LanweilMichNicht.src.controller.PDFCutter.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "6d2d65acbe27d0673842ce0dab079027ebf42daa", "Url": "https://api.github.com/repos/desperateCoder/PdfConcat", "Date": "2017-05-07T11:35:41Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.gcm.GoogleCloudMessaging.getMessageType(android.content.Intent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (messageType != null) { android.util.Log.e(\"GCM rec unknown message\", messageType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5115/buggy-version/app.src.main.java.se.jakobkrantz.transit.app.reporting.MessageIntentService.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "b5a60a6935a30708538115e5ee318fb4bb47b7bb", "Url": "https://api.github.com/repos/jakkra/Transit", "Date": "2015-01-24T22:23:39Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreLast) length--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5938/buggy-version/src.java.relex.parser.LocalLGParser.java", "BodyUseAPI": [], "Fixed commit": "301695ce024b7db150009b93d99f92299b30dbbe", "Url": "https://api.github.com/repos/opencog/relex", "Date": "2017-05-05T21:26:38Z"},
{"Line": "=>1157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (amount != null) mTransaction.getTransferAmount().setAmountMajor(amount.negate());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8174/buggy-version/myExpenses.src.main.java.org.totschnig.myexpenses.activity.ExpenseEdit.java", "BodyUseAPI": ["mTransaction.getTransferAmount().setAmountMajor(java.math.BigDecimal)", "java.math.BigDecimal.negate()"], "Fixed commit": "139173ee825dca543174c2251bbcc86952f936fe", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2016-01-09T21:03:01Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getItem()) == (net.minecraftforge.common.ForgeModContainer.getInstance().universalBucket)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7020/buggy-version/src.main.java.cyano.poweradvantage.machines.fluidmachines.MetalTankTileEntity.java", "BodyUseAPI": [], "Fixed commit": "01e66745e26d81a75f6ff1778f29c61e1c023702", "Url": "https://api.github.com/repos/cyanobacterium/PowerAdvantageAPI", "Date": "2016-06-04T23:09:33Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slot >= (this.getInventory().length)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7020/buggy-version/src.main.java.cyano.poweradvantage.machines.fluidmachines.MetalTankTileEntity.java", "BodyUseAPI": [], "Fixed commit": "01e66745e26d81a75f6ff1778f29c61e1c023702", "Url": "https://api.github.com/repos/cyanobacterium/PowerAdvantageAPI", "Date": "2016-06-04T23:09:33Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (src.exists()) { java.io.File dst = new java.io.File(destinationPath, \"jscoverage.json\"); jscover.util.IoUtils ioUtils = new jscover.util.IoUtils(); ioUtils.copy(src, dst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6358/buggy-version/plugin.src.main.java.sbt.CoverageUtils.java", "BodyUseAPI": ["jscover.util.IoUtils.copy(java.io.File,java.io.File)"], "Fixed commit": "4be02f195db4cadf812f1e88b9a93add08ec71c6", "Url": "https://api.github.com/repos/g00dnatur3/jscover-sbt-plugin", "Date": "2014-07-13T00:01:58Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((umlsDetList != null) && ((umlsDetList.size()) > 0)) { if (!(umlsDetList.contains(semanticDetailsList))) { semanticDetailsList.add(umlsDetList.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/119/buggy-version/ctakes-web-rest.src.main.java.org.apache.ctakes.rest.util.XMLParser.java", "BodyUseAPI": ["java.util.List.toString()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List.contains(java.util.List<java.lang.String>)"], "Fixed commit": "5993e856272639f91ccd106402760ec753384e97", "Url": "https://api.github.com/repos/GoTeamEpsilon/ctakes-rest-service", "Date": "2017-12-14T03:56:50Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kvstore.KVMessage.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) throw new kvstore.KVException(reskvm);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4320/buggy-version/kvstore.src.kvstore.KVClient.java", "BodyUseAPI": [], "Fixed commit": "43b95f094810b0c5e02af0e17384c6bc0ae7924e", "Url": "https://api.github.com/repos/QAQO-O/KVStore", "Date": "2014-05-24T08:58:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.happs_lives.kuaiyuecar.Utils.isSignIn) == false) { accountText.setText(R.string.login_get_more); redirectActivity(com.example.happs_lives.kuaiyuecar.activity.LoginActivity.class); }else { accountText.setText(Utils.bean.getUserName()); redirectActivity(com.example.happs_lives.kuaiyuecar.activity.UserActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3452/buggy-version/app.src.main.java.com.example.happs_lives.kuaiyuecar.activity.SlideMenu.java", "BodyUseAPI": [], "Fixed commit": "66fa076cc3ba29614a6807a2f95ce51f69f46147", "Url": "https://api.github.com/repos/newgoo/kuaiyue-android", "Date": "2017-05-28T03:59:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.happs_lives.kuaiyuecar.Utils.isSignIn) == false) { redirectActivity(com.example.happs_lives.kuaiyuecar.activity.LoginActivity.class); }else { redirectActivity(com.example.happs_lives.kuaiyuecar.activity.UserActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3452/buggy-version/app.src.main.java.com.example.happs_lives.kuaiyuecar.activity.SlideMenu.java", "BodyUseAPI": [], "Fixed commit": "66fa076cc3ba29614a6807a2f95ce51f69f46147", "Url": "https://api.github.com/repos/newgoo/kuaiyue-android", "Date": "2017-05-28T03:59:34Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pdfbmp) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2529/buggy-version/FoxitSDK.src.com.yangyang.foxitsdk.view.PDFView.java", "BodyUseAPI": [], "Fixed commit": "99bae82dbedb7fbced4a1e7dc1a0aafcdb6c3a03", "Url": "https://api.github.com/repos/caipengyang/sweet-bear", "Date": "2012-11-22T13:19:32Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.zoomStatus) != null) { this.openLink(((int) ((e.getX()) / (zoomStatus.getScaleX()))), ((int) ((e.getY()) / (zoomStatus.getScaleY())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2529/buggy-version/FoxitSDK.src.com.yangyang.foxitsdk.view.PDFView.java", "BodyUseAPI": [], "Fixed commit": "99bae82dbedb7fbced4a1e7dc1a0aafcdb6c3a03", "Url": "https://api.github.com/repos/caipengyang/sweet-bear", "Date": "2012-11-22T13:19:32Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (domEventListeners != null) for (java.lang.String eventType : domEventListeners.keySet()) for (org.swows.xmlinrdf.DomEventListener listener : domEventListeners.get(eventType)) domDecoder.addDomEventListener(eventType, listener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1536/buggy-version/swows.src.main.java.org.swows.xmlinrdf.DomDecoder2.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<org.swows.xmlinrdf.DomEventListener>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Set<org.swows.xmlinrdf.DomEventListener>>.keySet()"], "Fixed commit": "cb715d842e6258bbbbcf46a1f03ebabc77ab42a4", "Url": "https://api.github.com/repos/miguel76/SWOWS", "Date": "2013-06-22T04:42:47Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (domEventListeners != null) for (java.lang.String eventType : domEventListeners.keySet()) for (org.swows.xmlinrdf.DomEventListener listener : domEventListeners.get(eventType)) domDecoder.addDomEventListener(eventType, listener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1536/buggy-version/swows.src.main.java.org.swows.xmlinrdf.DomDecoder2.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<org.swows.xmlinrdf.DomEventListener>>.keySet()", "java.util.Map<java.lang.String, java.util.Set<org.swows.xmlinrdf.DomEventListener>>.get(java.lang.String)"], "Fixed commit": "cb715d842e6258bbbbcf46a1f03ebabc77ab42a4", "Url": "https://api.github.com/repos/miguel76/SWOWS", "Date": "2013-06-22T04:42:47Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (domEventListeners != null) for (java.lang.String eventType : domEventListeners.keySet()) for (org.swows.xmlinrdf.DomEventListener listener : domEventListeners.get(eventType)) domDecoder.addDomEventListener(eventType, listener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1536/buggy-version/swows.src.main.java.org.swows.xmlinrdf.DomDecoder2.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<org.swows.xmlinrdf.DomEventListener>>.keySet()", "java.util.Map<java.lang.String, java.util.Set<org.swows.xmlinrdf.DomEventListener>>.get(java.lang.String)"], "Fixed commit": "cb715d842e6258bbbbcf46a1f03ebabc77ab42a4", "Url": "https://api.github.com/repos/miguel76/SWOWS", "Date": "2013-06-22T04:42:47Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (domEventListeners != null) for (java.lang.String eventType : domEventListeners.keySet()) for (org.swows.xmlinrdf.DomEventListener listener : domEventListeners.get(eventType)) domDecoder.addDomEventListener(eventType, listener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1536/buggy-version/swows.src.main.java.org.swows.xmlinrdf.DomDecoder2.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<org.swows.xmlinrdf.DomEventListener>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Set<org.swows.xmlinrdf.DomEventListener>>.keySet()"], "Fixed commit": "cb715d842e6258bbbbcf46a1f03ebabc77ab42a4", "Url": "https://api.github.com/repos/miguel76/SWOWS", "Date": "2013-06-22T04:42:47Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.get(Keys.IS_SNEAKING).orElse(false)) { player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.RED, \"You can not sell items while sneaking\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1805/buggy-version/src.main.java.me.nentify.playershops.events.BlockEventHandler.java", "BodyUseAPI": ["org.spongepowered.api.entity.living.player.Player.sendMessage(org.spongepowered.api.text.Text.of(TextColors.RED, \"You can not sell items while sneaking\"))"], "Fixed commit": "2b6a0cf7a6b5d3178167de94b6fd7fdef1ace3a3", "Url": "https://api.github.com/repos/LukeJS/PlayerShops", "Date": "2016-09-02T18:45:41Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.atomic.AtomicInteger.get()", "this.getWorkerManager().getWorkerDriver().getRunningWorkers().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (runningWorkersFromQueue > runningWorkersFromDriver) { runningWorkers = runningWorkersFromDriver; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/232/buggy-version/src.main.java.com.miniplay.minicortex.modules.balancer.ElasticBalancer.java", "BodyUseAPI": [], "Fixed commit": "a2c038fa4bb5a1c91983193b1072c7a5e3cac05b", "Url": "https://api.github.com/repos/miniplay/minicortex", "Date": "2016-11-22T09:26:59Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.factoryfx.factory.attribute.ReferenceAttribute<?>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (factory != null) { factory.collectLiveObjects(liveObjects); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5674/buggy-version/factory.src.main.java.de.factoryfx.factory.FactoryBase.java", "BodyUseAPI": ["de.factoryfx.factory.FactoryBase<de.factoryfx.factory.LiveObject, ?>.collectLiveObjects(java.util.Map<java.lang.String, de.factoryfx.factory.LiveObject>)"], "Fixed commit": "7f14644c413a81df8d55af6b21b654da9cde7a51", "Url": "https://api.github.com/repos/factoryfx/factoryfx", "Date": "2016-05-26T15:58:33Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lenght <= 0) { _onLoadFinishCallback.onBulkFriendLoadFinish(_currentUser); android.util.Log.v(com.sun.tweetfiltrr.twitter.callables.BulkFriendRetriever.TAG, (((\"reuting becauase we cant search for friends, current array index is: \" + currentIndex) + \" with lenght \") + lenght)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3982/buggy-version/TweetFiltrr.src.main.java.com.sun.tweetfiltrr.twitter.callables.BulkFriendRetriever.java", "BodyUseAPI": ["android.util.Log.v(java.lang.String,java.lang.String)"], "Fixed commit": "611bd11908e064fe593ee7f0b8a6559000eaa9f3", "Url": "https://api.github.com/repos/SundeepK/TwitterFilttr", "Date": "2014-03-01T23:12:58Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((geoPointValues) != null) { geoPointValues = atomicFieldData.getGeoPointValues(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3043/buggy-version/src.main.java.org.elasticsearch.search.aggregations.context.FieldDataSource.java", "BodyUseAPI": [], "Fixed commit": "e4da5aa5600aec87fd95a2f5a2731a8701dba426", "Url": "https://api.github.com/repos/elasticsearch/elasticsearch", "Date": "2013-11-15T20:43:40Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (delegate != null) { setPosition(delegate.getPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4350/buggy-version/sofia-micro.src.sofia.micro.internal.DelegatingShape.java", "BodyUseAPI": ["sofia.graphics.Shape.getPosition()", "sofia.micro.internal.DelegatingShape.setPosition(delegate.getPosition())"], "Fixed commit": "b9764a57432ec22baed7c088f7e34b1747fd7165", "Url": "https://api.github.com/repos/web-cat/sofia-micro", "Date": "2014-04-16T04:34:20Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((localQuery.getFilters()) == null) || ((localQuery.getFilters().size()) == 0)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3314/buggy-version/src.main.java.mediator_wrapper.wrapper.impl.CsvWrapper.java", "BodyUseAPI": [], "Fixed commit": "11e50795bba88d00a791d69717ae515f01004517", "Url": "https://api.github.com/repos/cDanowski/3D-IVIS-Mediator", "Date": "2016-08-08T17:53:19Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((javassist.Modifier.isStatic(field.getModifiers())) == false) && ((javassist.Modifier.isFinal(field.getModifiers())) == false)) { fields.add(field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6929/buggy-version/src.main.java.de.terrestris.shogun.dao.DatabaseDao.java", "BodyUseAPI": ["java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)"], "Fixed commit": "9ce4bf7cc7a0596cf952dcd85198be66e014e4be", "Url": "https://api.github.com/repos/marcjansen/shogun", "Date": "2013-08-05T06:56:39Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((beforeStep.getY2()) >= (r2.getY1())) { r1.move(new com.fisherevans.fizzics.Vector(0, ((r2.getY1()) - (r1.getY2())))); isVerticalHit = true; }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3814/buggy-version/src.com.fisherevans.fizzics.World.java", "BodyUseAPI": ["com.fisherevans.fizzics.Rectangle.getY1()", "com.fisherevans.fizzics.Rectangle.move(com.fisherevans.fizzics.Vector)"], "Fixed commit": "c3db168307e1e4e3053f779120ebb3f3ce87d1c8", "Url": "https://api.github.com/repos/fisherevans/Fizzics", "Date": "2013-12-17T22:22:47Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (condition.getParams().size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7852/buggy-version/commons.model.src.main.java.org.beangle.commons.dao.query.builder.Conditions.java", "BodyUseAPI": [], "Fixed commit": "5caa377daf2bbc77aa0127ec01ee709c25217f23", "Url": "https://api.github.com/repos/beangle/library", "Date": "2014-04-09T04:04:59Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isEmpty(config.getUsername())) && (org.apache.commons.lang.StringUtils.isEmpty(config.getPassword()))) { return new com.github.sardine.impl.SardineImpl(httpClientBuilder); }else { return new com.github.sardine.impl.SardineImpl(httpClientBuilder, config.getUsername(), config.getPassword()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/217/buggy-version/bundles.io.org.openhab.io.caldav.src.main.java.org.openhab.io.caldav.internal.CalDavLoaderImpl.java", "BodyUseAPI": ["org.openhab.io.caldav.internal.CalDavConfig.getUsername()", "org.openhab.io.caldav.internal.CalDavConfig.getPassword()"], "Fixed commit": "c22c7bee64126d63d86bc8122815897a0f55f793", "Url": "https://api.github.com/repos/querdenker2k/openhab", "Date": "2015-10-05T19:34:10Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isEmpty(config.getUsername())) && (org.apache.commons.lang.StringUtils.isEmpty(config.getPassword()))) { return new com.github.sardine.impl.SardineImpl(); }else { return new com.github.sardine.impl.SardineImpl(config.getUsername(), config.getPassword()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/217/buggy-version/bundles.io.org.openhab.io.caldav.src.main.java.org.openhab.io.caldav.internal.CalDavLoaderImpl.java", "BodyUseAPI": ["org.openhab.io.caldav.internal.CalDavConfig.getUsername()", "org.openhab.io.caldav.internal.CalDavConfig.getPassword()"], "Fixed commit": "c22c7bee64126d63d86bc8122815897a0f55f793", "Url": "https://api.github.com/repos/querdenker2k/openhab", "Date": "2015-10-05T19:34:10Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (-1)) isBlockAir = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7476/buggy-version/1.10.2.src.main.java.com.wynprice.Sound.SoundEventPlay.java", "BodyUseAPI": [], "Fixed commit": "12898fdb96c98dbc3b247d662433abb7d352506e", "Url": "https://api.github.com/repos/Wyn-Price/Sounds-Extended", "Date": "2017-06-11T21:40:30Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (-1)) isBlockAir = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7476/buggy-version/1.11.2.src.main.java.com.wynprice.Sound.SoundEventPlay.java", "BodyUseAPI": [], "Fixed commit": "12898fdb96c98dbc3b247d662433abb7d352506e", "Url": "https://api.github.com/repos/Wyn-Price/Sounds-Extended", "Date": "2017-06-11T21:40:30Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (-1)) isBlockAir = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7476/buggy-version/1.12.src.main.java.com.wynprice.Sound.SoundEventPlay.java", "BodyUseAPI": [], "Fixed commit": "12898fdb96c98dbc3b247d662433abb7d352506e", "Url": "https://api.github.com/repos/Wyn-Price/Sounds-Extended", "Date": "2017-06-11T21:40:30Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mapDir != null) { mapDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5054/buggy-version/src.java.jnibwapi.JNIBWAPI.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "ccd8273a1cd473328b5bd04a86de4815060cd29a", "Url": "https://api.github.com/repos/JNIBWAPI/JNIBWAPI", "Date": "2013-08-06T04:04:46Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMultiChoiceModeListener) != null) { mMultiChoiceModeListener.storeStateIn(outState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4174/buggy-version/src.com.owncloud.android.ui.fragment.OCFileListFragment.java", "BodyUseAPI": [], "Fixed commit": "48f540dab31df7b380bdd631845c2761c9efc451", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-12-16T09:46:08Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(org.codinjutsu.tools.jenkins.logic.PARAMETER_DEFAULT_PARAM_VALUE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (defaultValue != null) { jobParameter.setDefaultValue(defaultValue.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3277/buggy-version/src.main.java.org.codinjutsu.tools.jenkins.logic.JenkinsJsonParser.java", "BodyUseAPI": ["org.codinjutsu.tools.jenkins.logic.JobParameter.setDefaultValue(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "695ddf2326de2704c602409500c7a6bde9ebc66c", "Url": "https://api.github.com/repos/nyver/jenkins-control-plugin", "Date": "2013-06-12T13:42:33Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.gr.java_conf.shioyang.polyhedraltodolist.PolyMainList.moveUpTask(jp.gr.java_conf.shioyang.polyhedraltodolist.PolyTodoItem,jp.gr.java_conf.shioyang.polyhedraltodolist.PolyTodoList)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSuccess) { polyTodoItems = polyTodoList.getLocalList(); refreshView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7384/buggy-version/app.src.main.java.jp.gr.java_conf.shioyang.polyhedraltodolist.PolyListActivity.java", "BodyUseAPI": [], "Fixed commit": "9612751f28e6fcf80db906ae2ab3d3bb28671c9b", "Url": "https://api.github.com/repos/shioyang/PolyhedralTodoList", "Date": "2015-08-21T13:35:54Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["alien4cloud.application.ApplicationEnvironmentService.getTopologyId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (topologyId == null) { throw new alien4cloud.exception.ApplicationVersionNotFoundException(\"An application version is required by an application environment.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/65/buggy-version/alien4cloud-rest-api.src.main.java.alien4cloud.rest.application.ApplicationEnvironmentController.java", "BodyUseAPI": [], "Fixed commit": "0b9d898488bb9712e0991e24e01a66adf9436b96", "Url": "https://api.github.com/repos/igorng/alien4cloud", "Date": "2015-05-07T10:46:45Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameterStr.contains(\"[\")) || (parameterStr.contains(\"<\"))) { throw new com.dounine.japi.exception.JapiException(\"\u6682\u65f6\u4e0d\u652f\u6301\u6570\u7ec4\u6216\u5217\u8868\u5bf9\u8c61\u6570\u636e\u89e3\u6790.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2480/buggy-version/java.client.src.main.java.com.dounine.japi.core.valid.JSR303Valid.java", "BodyUseAPI": [], "Fixed commit": "2651540b3a4b5877161aeed0be51d6d4a8afe738", "Url": "https://api.github.com/repos/dounine/japi", "Date": "2017-03-04T03:49:21Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringMode) { current_token.add(current_char.toString()); current_token = incrementToken(current_token); current_char = charStream.push(); }else { current_token.add(current_char.toString()); current_char = charStream.push(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4310/buggy-version/Lexer.java", "BodyUseAPI": [], "Fixed commit": "bf17526944b5cee0002d85db55146eb3ce9c22f0", "Url": "https://api.github.com/repos/antonyliang/bestCompiler", "Date": "2015-02-23T22:25:11Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ub0r.android.callmeter.ui.prefs.Preferences.getCurrencySymbol(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (c.equals(\"$\")) { c = \"\\\\$\"; de.ub0r.android.lib.Log.d(de.ub0r.android.callmeter.ui.prefs.Preferences.TAG, (\"custom currency symbol: \" + c)); }else if (c.equals(\"%\")) { c = \"%%\"; de.ub0r.android.lib.Log.d(de.ub0r.android.callmeter.ui.prefs.Preferences.TAG, (\"custom currency symbol: \" + c)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2102/buggy-version/src.de.ub0r.android.callmeter.ui.prefs.Preferences.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "84c7e59728afbbd77383e41bd65942834db124eb", "Url": "https://api.github.com/repos/felixb/callmeter", "Date": "2011-02-25T16:41:23Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentIndex) == 0) { dvdInfo.setText(infoBank[(currentIndex += infoBank.length)].toString()); }else { dvdInfo.setText(infoBank[((currentIndex) - 1)].toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3745/buggy-version/src.dvdplayer.java", "BodyUseAPI": ["infoBank[((currentIndex) - 1)].toString()", "javax.swing.JLabel.setText(infoBank[((currentIndex) - 1)].toString())"], "Fixed commit": "611b7da3f7efaac2e2d0472909537b61c91b2b8e", "Url": "https://api.github.com/repos/KieranJSThompson/CollegeGUI", "Date": "2016-03-09T16:35:34Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cmd.startsWith(\"/\"))) cmd = \"/\" + cmd;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6852/buggy-version/src.main.java.net.dmulloy2.ultimatearena.UltimateArena.java", "BodyUseAPI": [], "Fixed commit": "ab84dc33d7547a13edd614fa58ee516a9c982fa1", "Url": "https://api.github.com/repos/MineSworn/UltimateArena", "Date": "2014-01-30T22:02:44Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (temp[2].contains(net.slipcor.pvparena.core.StringParser.SAFE_BREAK)) { if (mat == (org.bukkit.Material.POTION)) { data = temp[2]; }else if (mat == (org.bukkit.Material.INK_SACK)) { data = temp[2]; }else if (mat == (org.bukkit.Material.WOOL)) { data = temp[2]; }else { data = temp[2].split(net.slipcor.pvparena.core.StringParser.SAFE_BREAK)[0]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3429/buggy-version/src.net.slipcor.pvparena.core.StringParser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "b829e3264b1e259551e71588b3d666a8f3f8be66", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2014-12-28T18:46:13Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, interfaces.Option>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (option == null) { throw new interfaces.OptionNotSetException(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2077/buggy-version/src.interfaces.Options.java", "BodyUseAPI": [], "Fixed commit": "fc30bbc33ff88d66e28ca886169b0aed91ec6961", "Url": "https://api.github.com/repos/EliasVansteenkiste/FPGA-CAD-Framework", "Date": "2015-11-19T23:03:39Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((progression) > 0) { board.setLastMove(moves.get(((progression) - 1))); }else { board.setLastMove(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4456/buggy-version/src.name.matco.checkmate.game.Game.java", "BodyUseAPI": ["java.util.List<name.matco.checkmate.game.Move>.get(int)", "name.matco.checkmate.game.Board.setLastMove(moves.get(((progression) - 1)))"], "Fixed commit": "d3f6f64edad83bf93f74328bbed11d21a37db087", "Url": "https://api.github.com/repos/Plonk42/checkmate", "Date": "2014-01-27T20:30:02Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7013/buggy-version/TreeToStringConverter.java", "BodyUseAPI": [], "Fixed commit": "9376c279520fc010a21704ef4ec202ad43fabe02", "Url": "https://api.github.com/repos/fabsx00/codesensor", "Date": "2012-10-28T22:45:49Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((requestException) == null) && ((requestInformation) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4502/buggy-version/public.mbw.src.main.java.com.mycelium.wallet.activity.send.VerifyPaymentRequestActivity.java", "BodyUseAPI": [], "Fixed commit": "cf86e30d1b305ecd42fc9434654485f3e7b4856c", "Url": "https://api.github.com/repos/mycelium-com/wallet-android", "Date": "2015-09-10T18:47:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t.isDirectory()) { org.mcuosmipcuter.orcc.util.ClassPathExplodedDirLoader.recurse(t.list(), pathB, fileSeparator, packAge, resultSet, targetClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5403/buggy-version/orcc-core.src.main.java.org.mcuosmipcuter.orcc.util.ClassPathExplodedDirLoader.java", "BodyUseAPI": ["java.io.File.list()", "org.mcuosmipcuter.orcc.util.ClassPathExplodedDirLoader.recurse(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Set<java.lang.String>,java.lang.Class<?>)"], "Fixed commit": "096525068d5b8029912ef33887b5b49674934fbe", "Url": "https://api.github.com/repos/Michael-Heinzelmann-IT-Consulting/ORCC-open-rapid-content-creation", "Date": "2012-09-10T11:49:19Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ua.p2psafety.data.Prefs.getFbAppId(ua.p2psafety.SosActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (appId == null) { appId = getString(R.string.app_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1476/buggy-version/p2psafety-android.p2psafety.src.ua.p2psafety.SosActivity.java", "BodyUseAPI": [], "Fixed commit": "e3af7e1621ad671d82365c8b0dba618bb635e409", "Url": "https://api.github.com/repos/42cc/p2psafety", "Date": "2014-04-16T18:54:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (location != null) { street = location.getStreet(); city = location.getCity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5361/buggy-version/app.src.main.java.com.iic.shopingo.services.UserConnector.java", "BodyUseAPI": ["com.facebook.model.GraphLocation.getCity()", "com.facebook.model.GraphLocation.getStreet()"], "Fixed commit": "0742cb45a5812f883ced74b86a8b833bc21a7205", "Url": "https://api.github.com/repos/rot-13/shopingo", "Date": "2015-03-04T07:40:58Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slots.get(id).shouldDropOnClosing()) { net.minecraft.item.ItemStack item = getStackInSlot(id); setInventorySlotContents(id, null); return item; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1750/buggy-version/src.main.java.vswe.production.tileentity.TileEntityTable.java", "BodyUseAPI": ["vswe.production.tileentity.TileEntityTable.setInventorySlotContents(int,<nulltype>)", "vswe.production.tileentity.TileEntityTable.getStackInSlot(int)"], "Fixed commit": "80992e391024119dfc22906811b5d615827f82c8", "Url": "https://api.github.com/repos/Vswe/Production", "Date": "2014-08-20T04:58:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((observations.remove(observer)) && (observations.isEmpty())) { observations = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2668/buggy-version/uk.co.strangeskies.observable.src.uk.co.strangeskies.observable.HotObservable.java", "BodyUseAPI": [], "Fixed commit": "9397808edb0f237130c234d84e327f29b10d6861", "Url": "https://api.github.com/repos/eliasvasylenko/uk.co.strangeskies", "Date": "2017-07-17T21:25:04Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(JDBCFunctions.userLogin())) run = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2462/buggy-version/project1.src.JDBCShell.java", "BodyUseAPI": [], "Fixed commit": "99fac9e79a86bc084e0d48ed8b94aa8364827850", "Url": "https://api.github.com/repos/rodrigih/CS122B", "Date": "2016-04-05T18:40:20Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryComment.getParentComment()) != null) { java.lang.Long parentCommentId = queryComment.getParentComment().getId(); java.lang.Long copiedParentCommentId = commentMap.get(parentCommentId); if (copiedParentCommentId != null) { copiedParentComment = queryQuestionCommentDAO.findById(copiedParentCommentId); }else { fi.metatavu.edelphi.utils.QueryUtils.logger.log(java.util.logging.Level.SEVERE, java.lang.String.format(\"Could not find %d from commentMap\", parentCommentId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8978/buggy-version/edelphi.src.main.java.fi.metatavu.edelphi.utils.QueryUtils.java", "BodyUseAPI": ["queryComment.getParentComment().getId()", "fi.metatavu.edelphi.domainmodel.querydata.QueryQuestionComment.getParentComment()"], "Fixed commit": "642ee67008623e4c8bd7a22061279a341b9ce689", "Url": "https://api.github.com/repos/Metatavu/edelphi", "Date": "2017-01-18T14:37:29Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["classified.classifiedbuzzmovieselector.model.UserManager.getLoggedUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user != null) { classified.classifiedbuzzmovieselector.model.UserRating r = new classified.classifiedbuzzmovieselector.model.UserRating(comment, score, movie, user); classified.classifiedbuzzmovieselector.model.UserRatingManager.addUserRating(r); java.util.ArrayList<classified.classifiedbuzzmovieselector.model.UserRating> listOfRatings = ((java.util.ArrayList<classified.classifiedbuzzmovieselector.model.UserRating>) (classified.classifiedbuzzmovieselector.model.UserRatingManager.getUserRatingsByMovie(movie))); android.widget.ListView ratingList = ((android.widget.ListView) (findViewById(R.id.ratingListView))); ratingList.setAdapter(new classified.classifiedbuzzmovieselector.controllers.RatingAdapter(this, R.layout.rating_layout, R.id.ratingUsername, listOfRatings)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8893/buggy-version/app.src.main.java.classified.classifiedbuzzmovieselector.controllers.MovieInformationActivity.java", "BodyUseAPI": [], "Fixed commit": "5bc1c802c7b77ee54e890207182ea258e6e00314", "Url": "https://api.github.com/repos/agiddings/classifiedbuzzmovieselector", "Date": "2016-03-07T18:10:09Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!complete) { loadFrameLayout.removeAllViews(); tryAgain.setVisibility(View.VISIBLE); }else { loadFrameLayout.removeAllViews(); recyclerView.setVisibility(View.VISIBLE); mAdapter.updateDataSet(adapterList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8644/buggy-version/app.src.main.java.com.wm.remusic.activity.PlaylistActivity.java", "BodyUseAPI": [], "Fixed commit": "082e09692142bfc6a10b923236bf010c89eda435", "Url": "https://api.github.com/repos/feedquest/remusic", "Date": "2017-05-13T11:55:56Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.censoredsoftware.Demigods.Engine.Object.Player.PlayerWrapper.getPlayer(player).getCurrent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (character == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6861/buggy-version/src.main.java.com.censoredsoftware.Demigods.Engine.Object.Deity.Deity.java", "BodyUseAPI": [], "Fixed commit": "6c4f9b3eca7a2b7fdb4d92553f30ff70bfa71f84", "Url": "https://api.github.com/repos/CensoredSoftware/Minecraft-Demigods", "Date": "2013-07-16T21:46:14Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.gtaun.shoebill.SampObjectStore.getPlayer(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (player == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7061/buggy-version/src.main.java.net.gtaun.shoebill.SampEventLogger.java", "BodyUseAPI": [], "Fixed commit": "7019a60191b88108da04f287ff900d9be0b2e9a4", "Url": "https://api.github.com/repos/Shoebill/shoebill-runtime", "Date": "2014-05-21T17:40:45Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == ((game.getMachineParts().length) - 1)) { timeMachineTexPath = game.getMachineParts()[i].getShipImagePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8473/buggy-version/core.src.fi.tamk.tiko.kivimiesgaming.RoomSelection.java", "BodyUseAPI": ["game.getMachineParts()[i].getShipImagePath()", "fi.tamk.tiko.kivimiesgaming.RoomSelection.getMachineParts()"], "Fixed commit": "04536668ddf4aeda6cdd79dba5ade9ce20858d1f", "Url": "https://api.github.com/repos/Infinitz/VapriikkiEscape", "Date": "2017-04-25T08:12:43Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(io.github.xhinliang.lunarcalendar.utils.TextUtils.isEmpty(result))) { tmp[i][j].add(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/856/buggy-version/src.main.java.io.github.xhinliang.lunarcalendar.DPCNCalendar.java", "BodyUseAPI": ["tmp[i][j].add(java.lang.String)"], "Fixed commit": "20eddf41e4399798e92d8dd840253b7da95e081c", "Url": "https://api.github.com/repos/hzhou81/LunarCalendar", "Date": "2016-12-27T11:35:32Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.jboot.utils.StringUtils.isNotBlank(sessionid)) { return sessionid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4398/buggy-version/src.main.java.io.jboot.web.session.JbootHttpSessionWapper.java", "BodyUseAPI": [], "Fixed commit": "229d6c7398901fe1d7bba7f5f54acc47809e57e4", "Url": "https://api.github.com/repos/jekey/jboot", "Date": "2017-08-24T02:46:43Z"},
{"Line": "=>1472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info[i]) != null) { items[i] = info[i].label; if ((activities) != null) { checked[i] = activities.contains(info[i].packageName); }else { checked[i] = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4519/buggy-version/src.com.martinborjesson.o2xtouchlednotifications.ui.MainPreferences.java", "BodyUseAPI": ["com.martinborjesson.o2xtouchlednotifications.ui.SerializableArrayList<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "6d57792a67dbfe7dea97f64642c31c49ff1e24a0", "Url": "https://api.github.com/repos/mborjesson/LG-Optimus-2X-Black-Notifications", "Date": "2011-07-26T22:09:30Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (owner.isInvalid()) { com.dynious.refinedrelocation.api.tileentity.ISortingInventory myInventory = ((com.dynious.refinedrelocation.api.tileentity.ISortingInventory) (this.owner)); myInventory.getSortingHandler().onTileRemoved(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/156/buggy-version/java.com.dynious.refinedrelocation.sorting.SortingMemberHandler.java", "BodyUseAPI": [], "Fixed commit": "0a28f975f61a90b18e940269ece6c45c5ed36f61", "Url": "https://api.github.com/repos/Dynious/RefinedRelocation", "Date": "2014-05-02T12:36:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.hasIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Source()))) { return java.util.Objects.nonNull(org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Source())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6960/buggy-version/openflowplugin-impl.src.main.java.org.opendaylight.openflowplugin.impl.protocol.serialization.match.Ipv6SourceEntrySerializer.java", "BodyUseAPI": ["java.util.Objects.nonNull(org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Source()))", "org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.getIpv6Source()", "org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Source())", "org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.Match.getLayer3Match()", "java.lang.Class.cast(match.getLayer3Match())"], "Fixed commit": "b574fc6a8ff7f2f081b0fd856ef95a2baaa71bc7", "Url": "https://api.github.com/repos/opendaylight/openflowplugin", "Date": "2017-05-30T04:41:09Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.hasIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Destination()))) { return java.util.Objects.nonNull(org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Destination())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6960/buggy-version/openflowplugin-impl.src.main.java.org.opendaylight.openflowplugin.impl.protocol.serialization.match.Ipv6DestinationEntrySerializer.java", "BodyUseAPI": ["org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.Match.getLayer3Match()", "org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.getIpv6Destination()", "java.util.Objects.nonNull(org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Destination()))", "java.lang.Class.cast(match.getLayer3Match())", "org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Destination())"], "Fixed commit": "b574fc6a8ff7f2f081b0fd856ef95a2baaa71bc7", "Url": "https://api.github.com/repos/opendaylight/openflowplugin", "Date": "2017-05-30T04:41:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPriority()) == 100) { list = scheduleDao.getSchedule(beginDate, endDate); }else { list = scheduleDao.getScheduleByTeacher(beginDate, endDate, user.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3035/buggy-version/src.main.java.com.lvping.lin.course.model.service.ScheduleService.java", "BodyUseAPI": ["com.lvping.lin.course.model.dao.ScheduleDao.getScheduleByTeacher(java.lang.String,java.lang.String,user.getName())", "com.lvping.lin.course.model.entity.User.getName()"], "Fixed commit": "0b59d779047f1f01289819c7a63a686aa4ec7090", "Url": "https://api.github.com/repos/linlvping/course", "Date": "2015-01-13T11:14:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { edu.fiu.cs.seniorproject.utils.Logger.Debug((((((((\"compare events nameA=\" + aName) + \" nameB=\") + bName) + \" lcs=\") + lcs) + \" distance=\") + (distance[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1613/buggy-version/seniorproject.src.edu.fiu.cs.seniorproject.utils.DataUtils.java", "BodyUseAPI": [], "Fixed commit": "cb0c84089f09acee5fde837cdd40703924561394", "Url": "https://api.github.com/repos/seniorprojectandroid/seniorproject", "Date": "2012-11-05T03:38:20Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isWindows) java.lang.Runtime.getRuntime().exec((\"chmod 777 \" + prog));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4435/buggy-version/LittleSmartTool2.src.littlesmarttool2.util.UpdateUtil.java", "BodyUseAPI": [], "Fixed commit": "f8c221ff60f02b41ca4a4fc631566a27a1f1f509", "Url": "https://api.github.com/repos/LittleSmartThings/LittleSmartTool2", "Date": "2013-06-04T10:14:33Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentPageIndex) > (getLastPageIndex())) { this.currentPageIndex = getLastPageIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6464/buggy-version/forms.forms-view.src.main.java.org.bonitasoft.forms.client.view.widget.TableWidget.java", "BodyUseAPI": [], "Fixed commit": "f98856c7c4a9196c289d1e333b97595118245a09", "Url": "https://api.github.com/repos/bonitasoft/bonita-web", "Date": "2014-07-23T13:07:32Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myDrawerToggle.onOptionsItemSelected(item)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7479/buggy-version/app.src.main.java.cityboys.golfapp.Skorkort.java", "BodyUseAPI": [], "Fixed commit": "28d4b649e2b7b47e4965f516163b27db80251d57", "Url": "https://api.github.com/repos/hilmarorn/golfapp", "Date": "2014-10-14T13:50:39Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myDrawerToggle.onOptionsItemSelected(item)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7479/buggy-version/app.src.main.java.cityboys.golfapp.RastimaSkraning.java", "BodyUseAPI": [], "Fixed commit": "28d4b649e2b7b47e4965f516163b27db80251d57", "Url": "https://api.github.com/repos/hilmarorn/golfapp", "Date": "2014-10-14T13:50:39Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == b) return a;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4321/buggy-version/spark-gremlin.src.main.java.org.apache.tinkerpop.gremlin.spark.process.computer.MemoryAccumulator.java", "BodyUseAPI": [], "Fixed commit": "7bf8213a5e27026f9a378a0eb166f3a67038321f", "Url": "https://api.github.com/repos/apache/tinkerpop", "Date": "2016-02-20T17:03:25Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == a) return b;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4321/buggy-version/spark-gremlin.src.main.java.org.apache.tinkerpop.gremlin.spark.process.computer.MemoryAccumulator.java", "BodyUseAPI": [], "Fixed commit": "7bf8213a5e27026f9a378a0eb166f3a67038321f", "Url": "https://api.github.com/repos/apache/tinkerpop", "Date": "2016-02-20T17:03:25Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bibliome.util.files.OutputFile.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(dir.exists())) { dir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/9088/buggy-version/bibliome.src.main.java.org.bibliome.alvisnlp.modules.html.QuickHTML.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "a1f4ca3d76ca65e3bf53b8c8a845ee8d919d7f7a", "Url": "https://api.github.com/repos/Bibliome/alvisnlp", "Date": "2017-08-01T08:18:57Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((visualInboundEndpoint.getSocketTimeoutMs()) != (-1)) { addParameterForConfig(inboundEndpoint, InboundEndpointConstants.SOCKET_TIMEOUT_MS, java.lang.Integer.toString(visualInboundEndpoint.getSocketTimeoutMs())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5207/buggy-version/plugins.org.wso2.developerstudio.eclipse.gmf.esb.persistence.src.org.wso2.developerstudio.eclipse.gmf.esb.internal.persistence.InboundEndpointTransformer.java", "BodyUseAPI": ["java.lang.Integer.toString(visualInboundEndpoint.getSocketTimeoutMs())", "org.wso2.developerstudio.eclipse.gmf.esb.internal.persistence.InboundEndpointTransformer.addParameterForConfig(org.apache.synapse.inbound.InboundEndpoint,InboundEndpointConstants.SOCKET_TIMEOUT_MS,java.lang.String)", "org.apache.synapse.inbound.InboundEndpoint.getSocketTimeoutMs()"], "Fixed commit": "31510f000358891ffc42a36ce22ded13f562bea5", "Url": "https://api.github.com/repos/hariss63/devstudio-tooling-esb", "Date": "2017-02-28T05:49:58Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, java.util.ArrayList<java.lang.Integer>>.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((grid != null) && ((grid.size()) != 0)) { deshacerPila = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4132/buggy-version/src.mouserun.mouse.SuperRaton.java", "BodyUseAPI": [], "Fixed commit": "7e424d20623b0bf78e5b30be79dd6e890b2b555e", "Url": "https://api.github.com/repos/mdiazm/Practica1IA", "Date": "2017-03-05T19:38:46Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seed.length) != (io.github.pr0methean.betterrandom.prng.XorShiftRandom.SEED_SIZE_BYTES)) { throw new java.lang.IllegalArgumentException(\"XorShiftRandom requires a 20-byte seed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3041/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.XorShiftRandom.java", "BodyUseAPI": [], "Fixed commit": "16d07abf37d36ec9134b061af17723e2448d39d5", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-09-12T18:39:41Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (canvas != null) this.gamePanel.render(canvas, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6182/buggy-version/plugin-cardgame-base.src.main.java.ac.robinson.bettertogether.plugin.base.cardgame.player.PlayerThread.java", "BodyUseAPI": ["ac.robinson.bettertogether.plugin.base.cardgame.player.PlayerPanel.render(android.graphics.Canvas,boolean)"], "Fixed commit": "4aa2a0d71d5d69ccbce0642c7c45cee11f761596", "Url": "https://api.github.com/repos/sudheesh001/better-together", "Date": "2017-06-27T18:57:31Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thread instanceof ac.robinson.bettertogether.plugin.base.cardgame.player.PlayerThread) { ((ac.robinson.bettertogether.plugin.base.cardgame.player.PlayerThread) (thread)).setRunning(false); }else { ((ac.robinson.bettertogether.plugin.base.cardgame.dealer.DealerThread) (thread)).setRunning(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6182/buggy-version/plugin-cardgame-base.src.main.java.ac.robinson.bettertogether.plugin.base.cardgame.player.PlayerPanel.java", "BodyUseAPI": [], "Fixed commit": "4aa2a0d71d5d69ccbce0642c7c45cee11f761596", "Url": "https://api.github.com/repos/sudheesh001/better-together", "Date": "2017-06-27T18:57:31Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (canvas != null) this.gamePanel.render(canvas);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6182/buggy-version/plugin-cardgame-base.src.main.java.ac.robinson.bettertogether.plugin.base.cardgame.dealer.DealerThread.java", "BodyUseAPI": ["ac.robinson.bettertogether.plugin.base.cardgame.dealer.DealerPanel.render(android.graphics.Canvas)"], "Fixed commit": "4aa2a0d71d5d69ccbce0642c7c45cee11f761596", "Url": "https://api.github.com/repos/sudheesh001/better-together", "Date": "2017-06-27T18:57:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((floorSign.getLine(2).length()) > 0) text2 = floorSign.getLine(2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2223/buggy-version/src.main.java.net.mywk.RockNLift.LiftManager.java", "BodyUseAPI": ["org.bukkit.block.Sign.getLine(int)"], "Fixed commit": "b483ff5e226a7322d5670fd778824265c1416f92", "Url": "https://api.github.com/repos/Mywk/RockNLift", "Date": "2013-12-07T02:37:24Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((floorSign.getLine(1).length()) > 0) text1 = floorSign.getLine(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2223/buggy-version/src.main.java.net.mywk.RockNLift.LiftManager.java", "BodyUseAPI": ["org.bukkit.block.Sign.getLine(int)"], "Fixed commit": "b483ff5e226a7322d5670fd778824265c1416f92", "Url": "https://api.github.com/repos/Mywk/RockNLift", "Date": "2013-12-07T02:37:24Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.oredict.OreDictionary.getOres(\"dustStone\").size()) > 0) { k4unl.minecraft.Hydraulicraft.events.EventHelper.itemDust = net.minecraftforge.oredict.OreDictionary.getOres(\"dustStone\").get(0).copy(); k4unl.minecraft.Hydraulicraft.events.EventHelper.itemDust.stackSize = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2450/buggy-version/java.k4unl.minecraft.Hydraulicraft.events.EventHelper.java", "BodyUseAPI": [], "Fixed commit": "420c5b858754073313a677c1ab24f86b41f4ff96", "Url": "https://api.github.com/repos/K-4U/Hydraulicraft", "Date": "2015-09-21T16:50:54Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.deletescape.lawnchair.pixelify.PixelIconProvider.getAlternateIcon(java.lang.String,ch.deletescape.lawnchair.compat.LauncherActivityInfoCompat)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((drawable == null) && (icon != null)) drawable = pip.getDefaultIcon(laic, DisplayMetrics.DENSITY_XXXHIGH, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2585/buggy-version/app.src.main.java.ch.deletescape.lawnchair.ShortcutInfo.java", "BodyUseAPI": [], "Fixed commit": "9ef8748a61e691ec513910d32c0e4f8346d9e7d3", "Url": "https://api.github.com/repos/LawnchairLauncher/Lawnchair", "Date": "2017-08-26T04:36:50Z"},
{"Line": "=>932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shopBlock.getBlockNumber()) == 490) { lmr.randomizer.dat.shop.BlockStringData blockStringData = shopBlock.getString(6); blockStringData.getData().clear(); blockStringData.getData().addAll(java.util.Arrays.asList(((short) (70)), ((short) (8)), ((short) (297)), ((short) (315)), ((short) (308)), ((short) (321)), ((short) (318)), ((short) (326)), ((short) (32)), ((short) (320)), ((short) (328)), ((short) (310)), ((short) (315)), ((short) (264)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6648/buggy-version/src.main.java.lmr.randomizer.update.GameDataTracker.java", "BodyUseAPI": ["lmr.randomizer.dat.shop.ShopBlock.getString(int)"], "Fixed commit": "7757388bb058957c14928c984968c5be774893b8", "Url": "https://api.github.com/repos/thezerothcat/LaMulanaRandomizer", "Date": "2017-09-10T22:41:09Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.talk.demo.util.HttpRequest.get(com.talk.demo.util.NetworkUtilities.AUTH_URI).getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (conn == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5060/buggy-version/Demo.src.com.talk.demo.util.NetworkUtilities.java", "BodyUseAPI": [], "Fixed commit": "ff6e94107d5c2269eafeed4884efed149e439a9d", "Url": "https://api.github.com/repos/youtaya/crabapple", "Date": "2014-12-07T15:43:05Z"},
{"Line": "=>1187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mpigott.avro.xml.XmlSchemaPathNode.getStateMachineNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((elemQName.getLocalPart().equals(\"Revenues\")) && (state.getElement().getQName().getLocalPart().equals(\"Revenues\"))) { java.lang.System.err.println(\"Found revenues in the schema tree!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5167/buggy-version/avro-to-xml.src.main.java.mpigott.avro.xml.XmlToAvroPathCreator.java", "BodyUseAPI": [], "Fixed commit": "a1627023d2a57d95e0e04d2f145eed7186794086", "Url": "https://api.github.com/repos/mikepigott/xml-to-avro", "Date": "2014-08-01T15:44:02Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == message) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6131/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.consumer.cacheable.DelayTask.java", "BodyUseAPI": [], "Fixed commit": "29f52ee203070fd7a3d6a8ca421ccd67cdf6d985", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2014-12-05T09:09:54Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.isEvent()) { java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"); java.time.LocalDateTime startDateTime = task.getStartTime(); java.lang.String formattedStartTime = startDateTime.format(formatter); java.time.LocalDateTime endDateTime = task.getEndTime(); java.lang.String formattedEndTime = endDateTime.format(formatter); result = (((result + \" from \") + formattedStartTime) + \" to \") + formattedEndTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5595/buggy-version/src.taskbar.Interpreter.java", "BodyUseAPI": ["taskbar.Task.getEndTime()", "taskbar.Task.getStartTime()"], "Fixed commit": "96c9918eca6014aa8629c89d452d8246f69118fb", "Url": "https://api.github.com/repos/cs2103aug2014-t10-3j/TaskBar-MainRepo", "Date": "2014-10-22T12:50:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.isDeadLineTask()) { java.time.format.DateTimeFormatter formatter = java.time.format.DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"); java.time.LocalDateTime scheduledDateTime = task.getDeadline(); java.lang.String formattedScheduleTime = scheduledDateTime.format(formatter); result = (result + \" by \") + formattedScheduleTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5595/buggy-version/src.taskbar.Interpreter.java", "BodyUseAPI": ["taskbar.Task.getDeadline()"], "Fixed commit": "96c9918eca6014aa8629c89d452d8246f69118fb", "Url": "https://api.github.com/repos/cs2103aug2014-t10-3j/TaskBar-MainRepo", "Date": "2014-10-22T12:50:01Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((contentType != null) && (!(contentType.equals(\"folder\")))) && (!(contentType.equals(\"asset\")))) { org.craftercms.studio.impl.v1.service.content.ContentTypeConfigTO config = servicesConfig.getContentTypeConfig(site, contentType); if (config != null) { item.setForm(config.getForm()); item.setFormPagePath(config.getFormPath()); item.setPreviewable(config.isPreviewable()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3922/buggy-version/src.main.java.org.craftercms.studio.impl.v1.service.content.ContentServiceImpl.java", "BodyUseAPI": ["org.craftercms.studio.api.v1.service.configuration.ServicesConfig.getContentTypeConfig(java.lang.String,java.lang.String)"], "Fixed commit": "c0e3a57353f342f4cafcad28e8b9cac9e27a79f3", "Url": "https://api.github.com/repos/hlim/studio2", "Date": "2015-04-24T01:59:47Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.internalName) == null) item.internalName = item.name;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3922/buggy-version/src.main.java.org.craftercms.studio.impl.v1.service.content.ContentServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c0e3a57353f342f4cafcad28e8b9cac9e27a79f3", "Url": "https://api.github.com/repos/hlim/studio2", "Date": "2015-04-24T01:59:47Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.enkeloversikt.newroute.new_route.database.DatabaseHelper.fetchType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (d != null) { dist = java.lang.Math.round(java.lang.Float.parseFloat(d)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6391/buggy-version/app.src.main.java.no.enkeloversikt.newroute.new_route.FinishedActivity.java", "BodyUseAPI": ["java.lang.Math.round(float)", "java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "090bcce471ae29f9c55d5c612b36b75c7b1582c1", "Url": "https://api.github.com/repos/eilifjohansen/new-route", "Date": "2016-11-11T21:09:14Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<taskey.messenger.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(taskLists.get(taskey.logic.LogicMemory.INDEX_COMPLETED).contains(toDelete))) { removeTaskTags(toDelete.getTaskTags()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3122/buggy-version/taskey.src.taskey.logic.LogicMemory.java", "BodyUseAPI": ["taskey.logic.LogicMemory.removeTaskTags(toDelete.getTaskTags())", "taskey.messenger.Task.getTaskTags()"], "Fixed commit": "343c44388feae6fe6711584dddc8baa2ee71fd5d", "Url": "https://api.github.com/repos/cs2103jan2016-f14-4j/main", "Date": "2016-03-29T06:17:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (principal == null) { return \"loginPage\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4311/buggy-version/src.main.java.com.leminh.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "abfd4b69f6b476415df3206ed236ff483a850731", "Url": "https://api.github.com/repos/1412320/SmartphoneShopping", "Date": "2017-06-06T18:20:15Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(task.isCanceled())) && (position == (staticHolder.currentPosition))) { notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6155/buggy-version/app.src.main.java.com.door43.translationstudio.ui.translate.ChooseSourceTranslationAdapter.java", "BodyUseAPI": [], "Fixed commit": "b044cfdf4ccd7d5a603fa9596b71e972ada9b2e6", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2016-11-30T23:04:41Z"},
{"Line": "=>2220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elementType.isExactly(typeFact().getIntegerType())) { if ((step) == null) { return make().Binary(PLUS, indexName.makeIdent(), indexableName.makeIdent()); }else { return make().Conditional(make().Binary(EQ, stepName.makeIdent(), make().Literal(1L)), make().Binary(PLUS, indexName.makeIdent(), indexableName.makeIdent()), make().Apply(null, naming.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES), \"neighbour\"), com.sun.tools.javac.util.List.<com.sun.tools.javac.tree.JCTree.JCExpression>of(indexableName.makeIdent(), indexName.makeIdent()))); } }else { if ((step) == null) { return make().Apply(null, naming.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES), \"neighbour\"), com.sun.tools.javac.util.List.<com.sun.tools.javac.tree.JCTree.JCExpression>of(indexableName.makeIdent(), indexName.makeIdent())); }else { return make().Conditional(make().Binary(EQ, stepName.makeIdent(), make().Literal(1L)), make().Apply(null, naming.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES), \"codepoint\"), com.sun.tools.javac.util.List.<com.sun.tools.javac.tree.JCTree.JCExpression>of(make().Binary(PLUS, indexName.makeIdent(), indexableName.makeIdent()))), make().Apply(null, naming.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES), \"neighbour\"), com.sun.tools.javac.util.List.<com.sun.tools.javac.tree.JCTree.JCExpression>of(indexableName.makeIdent(), indexName.makeIdent()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5278/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.StatementTransformer.java", "BodyUseAPI": ["make().Apply(<nulltype>,naming.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES), \"neighbour\"),com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree.JCExpression>)", "com.redhat.ceylon.compiler.java.codegen.StatementTransformer.SegmentOpIteration.makeJavaType(com.redhat.ceylon.model.typechecker.model.Type,com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES)", "com.redhat.ceylon.compiler.java.codegen.StatementTransformer.SegmentOpIteration.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES),java.lang.String)", "com.redhat.ceylon.compiler.java.codegen.StatementTransformer.SegmentOpIteration.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES),java.lang.String)", "com.redhat.ceylon.compiler.java.codegen.StatementTransformer.SegmentOpIteration.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES),java.lang.String)", "make().Conditional(make().Binary(EQ, stepName.makeIdent(), make().Literal(1L)),make().Binary(PLUS, indexName.makeIdent(), indexableName.makeIdent()),make().Apply(null, naming.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES), \"neighbour\"), com.sun.tools.javac.util.List.<com.sun.tools.javac.tree.JCTree.JCExpression>of(indexableName.makeIdent(), indexName.makeIdent())))", "make().Apply(<nulltype>,naming.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES), \"neighbour\"),com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree.JCExpression>)", "make().Conditional(make().Binary(EQ, stepName.makeIdent(), make().Literal(1L)),make().Apply(null, naming.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES), \"codepoint\"), com.sun.tools.javac.util.List.<com.sun.tools.javac.tree.JCTree.JCExpression>of(make().Binary(PLUS, indexName.makeIdent(), indexableName.makeIdent()))),make().Apply(null, naming.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES), \"neighbour\"), com.sun.tools.javac.util.List.<com.sun.tools.javac.tree.JCTree.JCExpression>of(indexableName.makeIdent(), indexName.makeIdent())))", "com.redhat.ceylon.compiler.java.codegen.StatementTransformer.SegmentOpIteration.makeJavaType(com.redhat.ceylon.model.typechecker.model.Type,com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES)", "com.redhat.ceylon.compiler.java.codegen.StatementTransformer.SegmentOpIteration.makeJavaType(com.redhat.ceylon.model.typechecker.model.Type,com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES)", "com.redhat.ceylon.compiler.java.codegen.StatementTransformer.SegmentOpIteration.makeJavaType(com.redhat.ceylon.model.typechecker.model.Type,com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES)", "make().Apply(<nulltype>,naming.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES), \"codepoint\"),com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree.JCExpression>)", "make().Apply(<nulltype>,naming.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES), \"neighbour\"),com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree.JCExpression>)", "com.redhat.ceylon.compiler.java.codegen.StatementTransformer.SegmentOpIteration.makeSelect(makeJavaType(elementType, com.redhat.ceylon.compiler.java.codegen.JT_NO_PRIMITIVES),java.lang.String)"], "Fixed commit": "0d75c16bb0d60158f955de26e569e108ec7d0eaa", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2015-06-16T14:11:16Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.feldim2425.OTPGen.ui.MainUI.window) != null) MainUI.window.reinitTags();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2517/buggy-version/src.com.feldim2425.OTPGen.SaveFile.java", "BodyUseAPI": [], "Fixed commit": "e9db97df4713b1ba17bd77b405a440af5c44ca45", "Url": "https://api.github.com/repos/feldim2425/TOTP-Generator", "Date": "2015-10-25T15:11:14Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotType) { data.set(1, st.nextToken()); st.hasMoreTokens(); data.set(2, st.nextToken()); }else { data.set(2, st.nextToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7791/buggy-version/src.map3.java", "BodyUseAPI": [], "Fixed commit": "f98081507eb66ec0d338c35855be83424735a20f", "Url": "https://api.github.com/repos/wensby/ai-project", "Date": "2013-06-12T06:56:39Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (serversDat.exists()) { try { org.apache.commons.io.FileUtils.copyFile(serversDat, new java.io.File(net.blay09.mods.defaultoptions.DefaultOptions.getDefaultOptionsFolder(), \"servers.dat\")); return true; } catch (java.io.IOException e) { e.printStackTrace(); return false; } }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4816/buggy-version/src.main.java.net.blay09.mods.defaultoptions.DefaultOptions.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.copyFile(java.io.File,java.io.File)"], "Fixed commit": "51b03bbd341b586c683aad1e34387b939569f92d", "Url": "https://api.github.com/repos/blay09/DefaultOptions", "Date": "2016-06-23T16:26:25Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.gmsworld.server.utils.NumberUtils.getInt(request.getHeader(Commons.APP_HEADER),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (appId > (-1)) { flex.put(\"appId\", appId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6689/buggy-version/gmsworldserver.src.main.java.net.gmsworld.server.layers.NotificationsServlet.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,int)"], "Fixed commit": "dda01c8555df7e1d66178a22e5a6844f7a292415", "Url": "https://api.github.com/repos/jstakun/gms-world-server", "Date": "2015-08-24T11:35:27Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.gmsworld.server.utils.NumberUtils.getInt(request.getHeader(Commons.APP_VERSION_HEADER),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (version > 0) { flex.put(\"version\", version); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6689/buggy-version/gmsworldserver.src.main.java.net.gmsworld.server.layers.NotificationsServlet.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,int)"], "Fixed commit": "dda01c8555df7e1d66178a22e5a6844f7a292415", "Url": "https://api.github.com/repos/jstakun/gms-world-server", "Date": "2015-08-24T11:35:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) throw new java.util.NoSuchElementException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8836/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OIndexAbstractCursor.java", "BodyUseAPI": [], "Fixed commit": "cb04a5e80c3cceb3cce226943e2cfd310c176434", "Url": "https://api.github.com/repos/emrul/orientdb", "Date": "2014-09-15T09:03:44Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstTime) { nextEntry = nextEntry(); firstTime = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8836/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OIndexAbstractCursor.java", "BodyUseAPI": [], "Fixed commit": "cb04a5e80c3cceb3cce226943e2cfd310c176434", "Url": "https://api.github.com/repos/emrul/orientdb", "Date": "2014-09-15T09:03:44Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainder > 0) fillup = (this.microtaskPerSession) - remainder; else fillup = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/765/buggy-version/src.edu.uci.ics.sdcl.firefly.WorkerSessionFactory.java", "BodyUseAPI": [], "Fixed commit": "accc508e6236305dd165b36339c25f3b187b122e", "Url": "https://api.github.com/repos/christianadriano/crowd-debug-firefly", "Date": "2014-10-06T10:23:37Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"/quit\".equals(parsedString[0])) { systemServer.NetworkClient.consoleOut.print(\"Exiting client...\"); if (systemServer.NetworkClient.isConnected()) { systemServer.NetworkClient.consoleOut.println(\"Still connected to server, disconnecting\"); systemServer.NetworkClient.disconnectFromServer(); } return false; }else if (((parsedString[0].length()) != 0) && (\"/\".equals(parsedString[0].charAt(0)))) { systemServer.NetworkClient.consoleOut.println(\"Invalid command, try again, or type /help for a list of commands.\"); }else { systemServer.NetworkClient.sendChatMessage(command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4861/buggy-version/src.server.systemServer.NetworkClient.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.equals(char)"], "Fixed commit": "0262b0bff5af8f996bb88ef8fa18792784301645", "Url": "https://api.github.com/repos/cjeffery/sworsorc", "Date": "2014-04-16T02:01:51Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.james.meetingplanner.ArrangeMeeting.findViewById(R.id.editDur)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(isValidNum(edu))) { android.widget.Toast.makeText(this, \"Enter a duration less than 13 hours!\", Toast.LENGTH_SHORT).show(); }else if ((((!(isValid(en))) || (!(isValid(el)))) || (!(isValid(ea)))) || (!(isValid(edu)))) { android.widget.Toast.makeText(this, \"Please fill in all fields with alphanumerical characters only!\", Toast.LENGTH_SHORT).show(); }else android.widget.Toast.makeText(this, \"Select a time and date!\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4767/buggy-version/app.src.main.java.com.example.james.meetingplanner.ArrangeMeeting.java", "BodyUseAPI": ["com.example.james.meetingplanner.ArrangeMeeting.isValid(android.widget.EditText)"], "Fixed commit": "7862f5ba9c368cde982690dc90678c1a57b7b80f", "Url": "https://api.github.com/repos/Yamsie/MeetingPlanner", "Date": "2016-04-30T16:37:06Z"},
{"Line": "=>987", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"searchStock\".equalsIgnoreCase(type)) { java.lang.String payStockNo = map.get(\"payStockNo\").toString(); java.util.List<com.smi.travel.datalayer.entity.PaymentStock> paymentStockList = paymentOutboundDao.getPaymentStock(payStockNo); if ((paymentStockList.size()) > 0) { result = buildPaymentStockHTML(paymentStockList); }else { result = \"null\"; } }else if (\"checkPayStock\".equalsIgnoreCase(type)) { java.lang.String payStockNo = map.get(\"payStockNo\").toString(); java.util.List<com.smi.travel.datalayer.entity.PaymentStock> paymentStockList = paymentOutboundDao.getPaymentStock(payStockNo); if (paymentStockList != null) { result = \"success\"; }else { result = \"fail\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1485/buggy-version/src.java.com.smi.travel.datalayer.bean.master.AJAXBean.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "4cab12c2b64687e151e500c5a485625d56e68150", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-12-28T10:48:41Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((localName.isEmpty()) && (prefixIdx > (-1))) { localName = qname.substring((prefixIdx + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5716/buggy-version/src.org.exist.dom.memtree.MemTreeBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "6092df14f1d99998d92323c8cfac145a42bd0994", "Url": "https://api.github.com/repos/dizzzz/exist", "Date": "2017-11-29T01:55:54Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<org.kitteh.irc.client.library.element.ChannelUserMode>>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (modes != null) { this.trackUser(newNick, modes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3324/buggy-version/src.main.java.org.kitteh.irc.client.library.implementation.ActorProvider.java", "BodyUseAPI": ["org.kitteh.irc.client.library.implementation.ActorProvider.IRCChannel.trackUser(java.lang.String,java.util.Set<org.kitteh.irc.client.library.element.ChannelUserMode>)"], "Fixed commit": "eff37e71b8ad5c014434d4bcc7424b79ca16476b", "Url": "https://api.github.com/repos/kashike/KittehIRCClientLib", "Date": "2015-07-19T18:10:14Z"},
{"Line": "=>909", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ticket.getIdTicketType()) == (TicketingConstants.PROPERTY_UNSET_INT)) { addError(TicketingConstants.MESSAGE_ERROR_TICKET_TYPE_NOT_SELECTED, getLocale()); bIsFormValid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7199/buggy-version/src.java.fr.paris.lutece.plugins.ticketing.web.ManageTicketsJspBean.java", "BodyUseAPI": [], "Fixed commit": "50693669164b0950df5cde52bc8527d318911ac2", "Url": "https://api.github.com/repos/lutece-platform/lutece-collab-plugin-ticketing", "Date": "2017-04-12T13:58:11Z"},
{"Line": "=>915", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ticket.getIdTicketDomain()) == (TicketingConstants.PROPERTY_UNSET_INT)) { addError(TicketingConstants.MESSAGE_ERROR_TICKET_DOMAIN_NOT_SELECTED, getLocale()); bIsFormValid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7199/buggy-version/src.java.fr.paris.lutece.plugins.ticketing.web.ManageTicketsJspBean.java", "BodyUseAPI": [], "Fixed commit": "50693669164b0950df5cde52bc8527d318911ac2", "Url": "https://api.github.com/repos/lutece-platform/lutece-collab-plugin-ticketing", "Date": "2017-04-12T13:58:11Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((webDriver) != null) { try { webDriver.quit(); } finally { webDriver = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1423/buggy-version/src.main.java.com.technologyconversations.bdd.steps.WebSteps.java", "BodyUseAPI": [], "Fixed commit": "b942fcaca29c3b225480caf2dd092c00950b37cb", "Url": "https://api.github.com/repos/TechnologyConversations/TechnologyConversationsBddSteps", "Date": "2014-07-19T20:19:11Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(plugin.getDumpDirectory().exists())) { if (!(plugin.getDumpDirectory().mkdirs())) { sendMessage(sender, colorize(\"{RED}Unable to create dump directory\")); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4261/buggy-version/src.main.java.org.tyrannyofheaven.bukkit.zPermissions.SubCommands.java", "BodyUseAPI": ["plugin.getDumpDirectory().mkdirs()", "org.tyrannyofheaven.bukkit.zPermissions.ZPermissionsPlugin.getDumpDirectory()"], "Fixed commit": "a9ae79b36d3edca88eb492d6e2403e93871c12be", "Url": "https://api.github.com/repos/ZerothAngel/zPermissions", "Date": "2011-09-21T21:56:46Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((player1) == null) | ((player2) == null)) { return null; }else { if (player.equals(player1)) { return player2.getName(); }else return player1.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/4271/buggy-version/ttt2.src.java.capstone.game.GameSession.java", "BodyUseAPI": [], "Fixed commit": "79339a60a812173a4d016c5bda42b426dabc9a39", "Url": "https://api.github.com/repos/mbdietrich/MUCapstone2013_Team2", "Date": "2013-10-17T23:56:01Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spacetrader.cosmos.UniverseGenerationEvent.registeredListeners) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6905/buggy-version/SpaceTrader.src.spacetrader.cosmos.UniverseGenerationEvent.java", "BodyUseAPI": [], "Fixed commit": "02a422dc276118b8d25a73c32aed793ad9b360a4", "Url": "https://api.github.com/repos/Team3Plus2/SpaceTraders", "Date": "2014-10-04T05:38:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cameraAvailable) options.add(activity.getString(R.string.actfm_picture_camera));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7047/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.ActFmCameraModule.java", "BodyUseAPI": [], "Fixed commit": "f553284cdc969815eb1123a5449e1ffb64f6d9c5", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2012-05-16T22:24:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.qii.weiciyuan.support.utils.GlobalContext.getInstance().getEnableBigAvatar()) { url = msg.getUser().getAvatar_large(); }else { url = msg.getUser().getProfile_image_url(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7481/buggy-version/src.org.qii.weiciyuan.ui.adapter.CommentListAdapter.java", "BodyUseAPI": [], "Fixed commit": "7e62ee8d2f75819f676d1fa2afbe6db852c62afd", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-30T16:03:17Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.igorko.accesibleif.manager.CityManager.getInstance().isCityWasRecentlyChanged()) { com.igorko.accesibleif.manager.CityManager.getInstance().setCityWasRecentlyChanged(false); if ((mMap) != null) { com.igorko.accesibleif.utils.CameraUtils.moveToCenterCity(mMap, false, false); } getAppData(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5724/buggy-version/app.src.main.java.com.igorko.accesibleif.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8914ec1fadc506cfa612ac808e71db13fb958220", "Url": "https://api.github.com/repos/SoftJourn/friendlyIf_android", "Date": "2017-03-03T14:56:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.graphstream.graph.Node>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (outgoingNode != curr) { outWeight = curr.getEdgeBetween(outgoingNode).getAttribute(\"weight\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7072/buggy-version/src.main.java.algorithms.FloydWarshall.java", "BodyUseAPI": ["org.graphstream.graph.Node.getEdgeBetween(org.graphstream.graph.Node)", "curr.getEdgeBetween(outgoingNode).getAttribute(java.lang.String)"], "Fixed commit": "c900ba1a8f5365326b5b6f0648a34b0e0b9921d0", "Url": "https://api.github.com/repos/mattx7/HAW_graph-theory", "Date": "2016-11-18T14:51:28Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.graphstream.graph.Node>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (incomingNode != curr) { incomeWeight = incomingNode.getEdgeBetween(curr).getAttribute(\"weight\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7072/buggy-version/src.main.java.algorithms.FloydWarshall.java", "BodyUseAPI": ["incomingNode.getEdgeBetween(curr).getAttribute(java.lang.String)", "org.graphstream.graph.Node.getEdgeBetween(org.graphstream.graph.Node)"], "Fixed commit": "c900ba1a8f5365326b5b6f0648a34b0e0b9921d0", "Url": "https://api.github.com/repos/mattx7/HAW_graph-theory", "Date": "2016-11-18T14:51:28Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.duke.cs.osprey.astar.conf.scoring.mplp.MessageVars.getEnergy(int,int)", "edu.duke.cs.osprey.astar.conf.scoring.mplp.MessageVars.get(int,int,int)", "edu.duke.cs.osprey.ematrix.EnergyMatrix.getPairwise(int,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((java.lang.Double.isFinite(theta)) && (java.lang.Double.isFinite(gamma1))) && (java.lang.Double.isFinite(gamma2))) { minVal = java.lang.Math.min(minVal, ((theta + ((2 * gamma1) / (confIndex.getNumUndefined()))) - gamma2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/3443/buggy-version/src.edu.duke.cs.osprey.astar.conf.scoring.mplp.NodeUpdater.java", "BodyUseAPI": ["java.lang.Math.min(double,((theta + ((2 * gamma1) / (confIndex.getNumUndefined()))) - gamma2))"], "Fixed commit": "f2612b60f1eb88921d0c4365781f65eeb3483f9a", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2017-03-15T22:57:04Z"},
{"Line": "=>1378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mProjectIds.contains(java.lang.Integer.valueOf(INaturalistService.DEFAULT_PROJECT_ID)))) { mProjectIds.add(INaturalistService.DEFAULT_PROJECT_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5929/buggy-version/iNaturalist.src.main.java.org.inaturalist.manitoba.android.ObservationEditor.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(INaturalistService.DEFAULT_PROJECT_ID)"], "Fixed commit": "c1e811d0773237fd4f80bd8744b21c0864608177", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2015-08-05T05:08:11Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (aux != null) { aux.add(this.carros.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/8531/buggy-version/PBL3.pbl3.2_1Cley.src.controller.Controller.java", "BodyUseAPI": ["java.util.ArrayList<controller.ControllerCarro>.add(this.carros.get(i))"], "Fixed commit": "0ccc3d614fc3e2ff23f046d38fb6ac186a1f6c95", "Url": "https://api.github.com/repos/cleybsoncardoso/PBLredes", "Date": "2016-09-13T04:57:08Z"},
{"Line": "=>4515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection.getMetaData().getDriverName().contains(\"MS SQL\")) || (connection.getMetaData().getDriverName().contains(\"Microsoft\"))) { sqlQuery = sqlQuery.replaceAll(\"NAME\", \"cast(NAME as varchar(100)) collate SQL_Latin1_General_CP1_CI_AS as NAME\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/1544/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.java", "BodyUseAPI": [], "Fixed commit": "f0f9a47a677104ddeebd15ae4d32138a1dca2aa4", "Url": "https://api.github.com/repos/harsha89/carbon-apimgt", "Date": "2016-06-22T11:03:02Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (line.contains(\"\\\\\")) { if ((line.endsWith(\"\\\\\\\\n\")) || (line.endsWith(\"\\\\\\\\r\\\\n\"))) { line = (line.replace(\"\\\\\", \"\")) + \"\\\\\\\\n\"; }else { line = line.replace(\"\\\\\", \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2682/buggy-version/src.main.java.org.datavyu.controllers.OpenDatabaseFileC.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "1c5cc54a5883c6082b196a55504b9da3a40ee840", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2013-07-24T00:01:25Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (line.contains(\"\\\\\")) { if ((line.endsWith(\"\\\\\")) || (line.endsWith(\"\\\\\\\\\"))) { line = (line.replace(\"\\\\\", \"\")) + \"\\\\\"; }else { line = line.replace(\"\\\\\", \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/2682/buggy-version/src.main.java.org.datavyu.controllers.OpenDatabaseFileC.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "1c5cc54a5883c6082b196a55504b9da3a40ee840", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2013-07-24T00:01:25Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(subwordsonly)) { posIncAtt.setPositionIncrement(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/5995/buggy-version/src.main.java.org.xbib.elasticsearch.index.analysis.decompound.DecompoundTokenFilter.java", "BodyUseAPI": [], "Fixed commit": "0ba56eaf4af6c70078fc5ad24777159034802733", "Url": "https://api.github.com/repos/jprante/elasticsearch-plugin-bundle", "Date": "2015-12-03T15:54:07Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (zeGridz < (allTheBoxes.size())) { ECS.BoxComponent zeBoxSpace = ((ECS.BoxComponent) (allTheBoxes.get(zeGridz).getComponent(\"zeBox\"))); if ((zeBoxSpace.whatBox) == (BoxType.EMPTY)) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/7110/buggy-version/app.src.main.java.ECS.GridSystem.java", "BodyUseAPI": ["java.util.LinkedList<ECS.Entity>.get(int)", "allTheBoxes.get(zeGridz).getComponent(java.lang.String)"], "Fixed commit": "7e0b50ea1f65af43ba1a51f292d76eec343480dd", "Url": "https://api.github.com/repos/sekheng/GoGREEN", "Date": "2017-01-16T09:41:42Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<lib.datastructs.Point>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(agent.getSearchMap().isVisitedCell(point.row, point.col))) sum = sum + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/6448/buggy-version/src.agent.coverage.DGSAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "3584b5346bf27583ad90ea6ddeab5c875fb02705", "Url": "https://api.github.com/repos/aarellano/collaborative-agents", "Date": "2013-11-26T00:12:05Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.author) != null) { author.setText(data.author.getName()); }else { author.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/898/buggy-version/app.src.main.java.catgirl.oneesama.activity.chapterlist.fragments.chapterlist.view.ChapterViewHolder.java", "BodyUseAPI": ["android.widget.TextView.setText(data.author.getName())", "data.author.getName()"], "Fixed commit": "bd77c9aee245fbeace4da844f31967ee632c3089", "Url": "https://api.github.com/repos/DefiantCatgirl/Oneesama", "Date": "2016-08-09T08:43:51Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.paolorotolo.appintro.PagerAdapter.getItem(int)", "com.github.paolorotolo.appintro.PagerAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentSlide.isAdded()) && (nextSlide.isAdded())) { int newColor = ((int) (argbEvaluator.evaluate(positionOffset, currentSlideCasted.getDefaultBackgroundColor(), nextSlideCasted.getDefaultBackgroundColor()))); currentSlideCasted.setBackgroundColor(newColor); nextSlideCasted.setBackgroundColor(newColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V52/205/buggy-version/library.src.main.java.com.github.paolorotolo.appintro.AppIntroBase.java", "BodyUseAPI": [], "Fixed commit": "d98b71b24d049ceada5bdc47213d4fc6555b7561", "Url": "https://api.github.com/repos/apl-devs/AppIntro", "Date": "2016-04-15T17:30:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (l.isEmpty()) { builder.add(0.0); }else { builder.add(net.sourceforge.cilib.math.Stats.mean(l)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3026/buggy-version/library.src.main.java.net.sourceforge.cilib.measurement.multiple.HPSOVelocity.java", "BodyUseAPI": ["net.sourceforge.cilib.math.Stats.mean(java.util.List<java.lang.Double>)", "Vector.Builder.add(net.sourceforge.cilib.math.Stats.mean(l))"], "Fixed commit": "6120d9ee4cc26f59c046e60f6ff10636aa1b2bd4", "Url": "https://api.github.com/repos/filinep/cilib", "Date": "2014-11-11T08:30:53Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (parser.getName().equals(\"ComplimentaryRecipes\")) { break; }else if (parser.getName().equals(\"RecipeID\")) { description.put(\"RecipeID\", parser.nextText()); }else if (parser.getName().equals(\"RecipeName\")) { description.put(\"RecipeName\", parser.nextText()); }else if (parser.getName().equals(\"TotalTime\")) { description.put(\"TotalTime\", parser.nextText()); }else if (parser.getName().equals(\"NumberOfServings\")) { description.put(\"NumberOfServings\", parser.nextText()); }else if (parser.getName().equals(\"AvgRating\")) { description.put(\"AvgRating\", parser.nextText()); }else if (parser.getName().equals(\"PhotoURL\")) { description.put(\"PhotoURL\", parser.nextText()); android.util.Log.d(\"KraftAPI_URLFounded\", description.get(\"PhotoURL\")); }else if (tagName.equals(\"IngredientDetails\")) { while (!(((parser.next()) == (org.xmlpull.v1.XmlPullParser.END_TAG)) && (parser.getName().equals(\"IngredientDetails\")))) { if ((parser.getEventType()) != (org.xmlpull.v1.XmlPullParser.START_TAG)) { continue; }else if (parser.getName().equals(\"RecipeIngredientID\")) { ing_id = parser.nextText(); ingredientID.add(ing_id); android.util.Log.d(\"Ok\", parser.getName()); }else if (parser.getName().equals(\"IngredientName\")) { ing_name = parser.nextText(); ingredientName.add(ing_name); android.util.Log.d(\"Ok\", parser.getName()); }else if (parser.getName().equals(\"QuantityText\")) { ing_qty = parser.nextText(); android.util.Log.d(\"Ok\", parser.getName()); }else if (parser.getName().equals(\"QuantityUnit\")) { if (ing_qty.equals(\"\")) { ingredients.put(ing_id, ing_name); }else { ingredients.put(ing_id, ((((ing_qty + \" \") + (parser.nextText())) + \" of \") + ing_name)); } android.util.Log.d(\"Ok\", parser.getName()); } } }else if (tagName.equals(\"PreparationDetails\")) { while (!(((parser.next()) == (org.xmlpull.v1.XmlPullParser.END_TAG)) && (parser.getName().equals(\"PreparationDetails\")))) { if ((parser.getEventType()) != (org.xmlpull.v1.XmlPullParser.START_TAG)) { continue; }else if (parser.getName().equals(\"Description\")) { etapes.add(parser.nextText()); android.util.Log.d(\"Ok\", \"Etapes\"); } } }else if (tagName.equals(\"NutritionItemDetails\")) { while (!(((parser.next()) == (org.xmlpull.v1.XmlPullParser.END_TAG)) && (parser.getName().equals(\"NutritionItemDetails\")))) { if ((parser.getEventType()) != (org.xmlpull.v1.XmlPullParser.START_TAG)) { continue; }else if (parser.getName().equals(\"NutritionItemName\")) { nutri = parser.nextText(); android.util.Log.d(\"Ok\", parser.getName()); }else if (parser.getName().equals(\"Quantity\")) { nutri += \": \" + (parser.nextText()); android.util.Log.d(\"Ok\", parser.getName()); }else if (parser.getName().equals(\"Unit\")) { nutri += parser.nextText(); nutritionDetail.add(nutri); android.util.Log.d(\"Ok\", parser.getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2341/buggy-version/src.com.ift2905.recipehelper.KraftAPI.java", "BodyUseAPI": [], "Fixed commit": "c3ef05e50dcf76adf78076ece8d8e5996c4e7b7b", "Url": "https://api.github.com/repos/IFT2905RecipeHelper/ift2905RecipeHelperProject", "Date": "2014-05-04T17:58:41Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Version.V2.isSupported(cache.getVersion())) { sortCreationOrderBasedOnDepth(creationOrder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4142/buggy-version/src.main.java.com.github.kuros.random.jpa.resolver.CreationOrderResolverImpl.java", "BodyUseAPI": [], "Fixed commit": "592a17c56bc944befed8fc2009bcb75ac6826c24", "Url": "https://api.github.com/repos/kuros/random-jpa", "Date": "2016-03-16T12:09:25Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (upload.hasValue()) { java.io.File file = (upload.hasFileValue()) ? upload.getFileValue() : new java.io.File(upload.getValue()); request.set(upload.getName(), file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1728/buggy-version/src.main.java.com.gistlabs.mechanize.MechanizeAgent.java", "BodyUseAPI": ["com.gistlabs.mechanize.MechanizeAgent.RequestBuilder.set(upload.getName(),java.io.File)", "com.gistlabs.mechanize.form.Upload.getValue()", "com.gistlabs.mechanize.form.Upload.getFileValue()", "com.gistlabs.mechanize.form.Upload.getName()", "com.gistlabs.mechanize.form.Upload.hasFileValue()"], "Fixed commit": "1b01e7211e2722ca19bf1fbfe665894db90bb095", "Url": "https://api.github.com/repos/GistLabs/mechanize", "Date": "2012-10-02T20:23:10Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"defaultKieSession\".equals(ksessionName)) { model.setKSessionName(null); }else { model.setKSessionName(ksessionName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5563/buggy-version/optaplanner-wb-screens.optaplanner-wb-solver-editor.optaplanner-wb-solver-editor-client.src.main.java.org.optaplanner.workbench.screens.solver.client.editor.ScoreDirectorFactoryForm.java", "BodyUseAPI": ["org.optaplanner.workbench.screens.solver.model.ScoreDirectorFactoryConfigModel.setKSessionName(java.lang.String)"], "Fixed commit": "9e2e83eed630cac273b5929273c1f28d5eeba4b2", "Url": "https://api.github.com/repos/kiegroup/optaplanner-wb", "Date": "2016-03-11T15:21:32Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s < 0) nname = nodename; else nname = nodename.substring(0, s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1045/buggy-version/bnkit.src.bn.BNet.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "556b28b4ab3a8ce92400ff351f6e980ab8640f90", "Url": "https://api.github.com/repos/bodenlab/bnkit", "Date": "2017-01-05T02:20:25Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((marker.getTag()) != null) { com.gcu.zoltantompa.geocoral.EarthQ eq = ((com.gcu.zoltantompa.geocoral.EarthQ) (marker.getTag())); android.widget.Toast.makeText(this, (\"Info window clicked\" + (eq.getPlace())), Toast.LENGTH_SHORT).show(); details_Screen.putExtra(\"selEQ\", eq); details_Screen.putExtra(\"callerIntent\", com.gcu.zoltantompa.geocoral.MapView.class.getSimpleName()); startActivity(details_Screen); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9076/buggy-version/GeoCoral.app.src.main.java.com.gcu.zoltantompa.geocoral.MapView.java", "BodyUseAPI": ["com.google.android.gms.maps.model.Marker.getTag()"], "Fixed commit": "2af4e6226cb0d883fe07554990b4f539b298f691", "Url": "https://api.github.com/repos/TomZoy/Project_Coral-GCU-Y5-MUC", "Date": "2016-12-04T23:48:57Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((document.getLineManager()) != null) { document.getLineManager().removeLineListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8687/buggy-version/syntaxpane.src.main.java.kkckkc.syntaxpane.MiniMapPanel.java", "BodyUseAPI": ["kkckkc.syntaxpane.model.SourceDocument.getLineManager()", "document.getLineManager().removeLineListener(kkckkc.syntaxpane.MiniMapPanel)"], "Fixed commit": "80c9e707b31c09206cb0450e508de853fc184898", "Url": "https://api.github.com/repos/kkckkc/jsourcepad", "Date": "2011-10-21T20:03:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchange.getContext().createProducerTemplate().send(java.lang.String,org.apache.camel.Exchange)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((newExchange.getOut()) == null) || ((newExchange.getOut().getBody()) == null)) { java.lang.String msg = (\"Impossible d'obtenir des donn\u00e9es PPR pour l'op\u00e9ration \" + operationId) + \".\"; if (newExchange.isFailed()) { msg += \"\\\\nErreur : \" + (newExchange.getException()); } throw new com.g2p.mediation.processor.SipoProcessingException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9149/buggy-version/Mediation-Camel.src.main.java.com.g2p.mediation.processor.GetSipoDataFromPPRProcessor.java", "BodyUseAPI": ["org.apache.camel.Exchange.isFailed()", "org.apache.camel.Exchange.getException()"], "Fixed commit": "7e33eb2c7c5a0e0cd34860b715a56b5e391093b3", "Url": "https://api.github.com/repos/zapho/MediationESB", "Date": "2012-08-17T13:04:30Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(UrlUtils.SLASH)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fragments.length) == 2) { java.lang.String id = fragments[1]; if (org.apache.commons.lang3.StringUtils.isNumeric(id)) { if (hasRequestMethod(request, io.restzilla.handler.GET)) { method = toMethodIfEnabled(io.restzilla.handler.SimpleResourceHandlerMappingFactory.DefaultHandlerMapping.FIND_ONE_NAME, getInformation().findOne()); }else if ((hasRequestMethod(request, io.restzilla.handler.PUT)) || ((hasRequestMethod(request, io.restzilla.handler.PATCH)) && (getInformation().isPatch()))) { method = toMethodIfEnabled(io.restzilla.handler.SimpleResourceHandlerMappingFactory.DefaultHandlerMapping.UPDATE_NAME, getInformation().update()); }else if (hasRequestMethod(request, io.restzilla.handler.DELETE)) { method = toMethodIfEnabled(io.restzilla.handler.SimpleResourceHandlerMappingFactory.DefaultHandlerMapping.DELETE_NAME, getInformation().delete()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7789/buggy-version/src.main.java.io.restzilla.handler.SimpleResourceHandlerMappingFactory.java", "BodyUseAPI": [], "Fixed commit": "8ec907b03c5a35f598f821a8a2c0c098e2c2e2b2", "Url": "https://api.github.com/repos/42BV/restzilla", "Date": "2017-03-28T09:01:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<se.umu.cs.flp.aj.wta.Symbol, java.util.ArrayList<se.umu.cs.flp.aj.wta.Rule>>.get(se.umu.cs.flp.aj.wta.Symbol)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rules == null) { return new java.util.ArrayList<se.umu.cs.flp.aj.wta.Rule>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4538/buggy-version/src.se.umu.cs.flp.aj.wta.TransitionFunction.java", "BodyUseAPI": [], "Fixed commit": "dca9cf2378dcb53fa95f92d28a3f47afb423438c", "Url": "https://api.github.com/repos/tm11ajn/besttrees", "Date": "2015-10-25T11:33:18Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((replaceWith == null) || (toReplace == null)) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2114/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Utils.java", "BodyUseAPI": [], "Fixed commit": "df90fdddfccb1912ba37238eac6f4064344acaf8", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-17T00:00:28Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (feat.equalsIgnoreCase(\"\")) { arti = artist3; }else { arti = artist3.substring(0, artist3.indexOf(feat)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7171/buggy-version/src.mp3tag.Tag.java", "BodyUseAPI": [], "Fixed commit": "7862c3af9a908397ba0193cdfaee557483cba3da", "Url": "https://api.github.com/repos/alexpouget/PamPlayer", "Date": "2015-07-06T17:24:02Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listView) != null) { listView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4521/buggy-version/meteroid.src.main.java.de.chaosdorf.meteroid.BuyMate.java", "BodyUseAPI": [], "Fixed commit": "c4a86d8dccad4af31c1a6e5ca726f23b364f7b7c", "Url": "https://api.github.com/repos/chaosdorf/meteroid", "Date": "2013-06-07T15:45:06Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task == (de.chaosdorf.meteroid.longrunningio.LongRunningIOTask.GET_USER)) || (task == (de.chaosdorf.meteroid.longrunningio.LongRunningIOTask.UPDATE_USER))) { de.chaosdorf.meteroid.util.Utility.displayToastMessage(activity, (((getResources().getString(R.string.error_user_not_found)) + \" \") + message)); }else { de.chaosdorf.meteroid.util.Utility.displayToastMessage(activity, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4521/buggy-version/meteroid.src.main.java.de.chaosdorf.meteroid.BuyMate.java", "BodyUseAPI": [], "Fixed commit": "c4a86d8dccad4af31c1a6e5ca726f23b364f7b7c", "Url": "https://api.github.com/repos/chaosdorf/meteroid", "Date": "2013-06-07T15:45:06Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!showProgress) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7064/buggy-version/app.src.main.java.com.biglynx.fulfiller.ui.SettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "57c8a7286f2bcdef9ab8d2eea9313dd3e970a759", "Url": "https://api.github.com/repos/JgdshSeerm/Fulfiller", "Date": "2017-04-24T12:50:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5543/buggy-version/src.main.java.com.adobe.epubcheck.util.WriterReportImpl.java", "BodyUseAPI": [], "Fixed commit": "45831385f4aa694d478347a0f5f1db0e54fdeef3", "Url": "https://api.github.com/repos/IDPF/epubcheck", "Date": "2013-08-08T20:47:58Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mappedTeam.getGame().equals(\"\")) mappedTeam.setImage(\"http://us.battle.net/heroes/static/images/game/game-modes/Icon_team-league.png\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/678/buggy-version/GGOREST.src.data.TeamDAOImpl.java", "BodyUseAPI": ["entities.Team.setImage(java.lang.String)"], "Fixed commit": "5cbbb1f524553516b4837c80acdd3ec155aff750", "Url": "https://api.github.com/repos/StefanFuller147/GGOnline", "Date": "2017-05-09T15:05:42Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((commits.size()) == 0) java.lang.System.out.println(\"No updated files, Sync Finished\"); else java.lang.System.out.println((\"Successfully sync to version\" + (commits.get(((commits.size()) - 1)).commitId)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8227/buggy-version/src.LchClient.java", "BodyUseAPI": ["java.util.List<Commit>.get(((commits.size()) - 1))", "java.io.PrintStream.println((\"Successfully sync to version\" + (commits.get(((commits.size()) - 1)).commitId)))", "java.util.List<Commit>.size()"], "Fixed commit": "af6245dc1b2994738325904a7c967e02c505af85", "Url": "https://api.github.com/repos/kirakira/lch", "Date": "2014-12-09T21:45:54Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (separator) text += \", \"; else separator = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6070/buggy-version/main.src.com.juliasoft.dexstudio.cell.DexAnnotationCell.java", "BodyUseAPI": [], "Fixed commit": "96d66be45aff35fe3d6111584e725ae5902ca806", "Url": "https://api.github.com/repos/JuliaSoft/DexStudio", "Date": "2013-12-17T08:35:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.droidupnp.model.cling.didl.ClingDIDLContainer.getChildCount()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (i == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/105/buggy-version/src.org.droidupnp.model.cling.didl.ClingDIDLContainer.java", "BodyUseAPI": [], "Fixed commit": "59c06a04d678464a14894dad15422672ab56f4b8", "Url": "https://api.github.com/repos/trishika/DroidUPnP", "Date": "2013-04-28T11:36:39Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<org.develnext.jphp.core.tokenizer.token.Token>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tk instanceof org.develnext.jphp.core.tokenizer.token.CommentToken) return nextToken(iterator);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4617/buggy-version/jphp-core.src.org.develnext.jphp.core.syntax.generators.Generator.java", "BodyUseAPI": [], "Fixed commit": "9df0e470ed9673df2908c0b6de5dc162647450cd", "Url": "https://api.github.com/repos/dim-s/jphp", "Date": "2014-04-15T11:16:10Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mobilesorcery.sdk.core.MoSyncProject.getPermissions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((shouldUseDebugRuntimes()) && (!(permissions.isPermissionRequested(ICommonPermissions.FILE_STORAGE_WRITE)))) { addPermission(result, true, \"android.permission.WRITE_EXTERNAL_STORAGE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7577/buggy-version/com.mobilesorcery.sdk.builder.android.src.com.mobilesorcery.sdk.builder.android.AndroidPackager.java", "BodyUseAPI": [], "Fixed commit": "53397b9a6dc71d797bffac3190c10e5e5580618f", "Url": "https://api.github.com/repos/MoSync/Eclipse", "Date": "2011-01-26T13:32:54Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameters.length) == 1) { b.append(\"Unrecognized option: %1%\"); }else if ((parameters.length) == 2) { b.append(\"Unrecognized option in file %2%: %1%\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2178/buggy-version/tlatools.src.tlc2.output.MP.java", "BodyUseAPI": [], "Fixed commit": "8dda60e231c6a5ce8643d0c94a74042c48c55d55", "Url": "https://api.github.com/repos/tlaplus/tlaplus", "Date": "2017-04-21T05:22:22Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marketIds.size()) == 0) { observ = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8556/buggy-version/aping.src.main.java.my.pack.algo.StatCollector.java", "BodyUseAPI": [], "Fixed commit": "df711e38e3dac2af76a674ad2e4f72c6f6bea563", "Url": "https://api.github.com/repos/vakoroteev/fckng", "Date": "2014-03-13T21:58:14Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.portlet.PortletPreferences.getValue(SliderParamUtil.SETTINGS_RANDOM_SLIDE,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNotNull(randomSlideValue)) && (com.liferay.portal.kernel.util.Validator.isNumber(randomSlideValue))) settings.append((\", randomStart:\" + randomSlideValue));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4432/buggy-version/slider-portlet.src.main.java.com.rcs.portlet.slider.util.SliderUtil.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "be42177f9b82333adb388af3adc42df9cb8bb42d", "Url": "https://api.github.com/repos/rotterdam-cs/liferayImageSlider", "Date": "2012-05-04T08:36:15Z"},
{"Line": "=>7055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (force) { ((org.pentaho.di.base.AbstractMeta) (tabObject)).setChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8636/buggy-version/ui.src.org.pentaho.di.ui.spoon.Spoon.java", "BodyUseAPI": [], "Fixed commit": "a38e979d522e6db9864a8e129e9c82f0e4f3d38c", "Url": "https://api.github.com/repos/flbrino/pentaho-kettle", "Date": "2017-01-18T19:45:41Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentLocation > (binaryData.capacity())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6388/buggy-version/VirtualMachine.src.codeSupport.ManualDisassembler.java", "BodyUseAPI": [], "Fixed commit": "7c2b8d68fe4eb20967f0bf6a92a8f052a53c62dd", "Url": "https://api.github.com/repos/NotThe1/Virtualmachine", "Date": "2016-05-15T22:22:31Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeout != 0) { endTime = timeout - (org.ggp.base.player.gamer.statemachine.sample.MinimaxGamer.TIME_BUFFER); }else { endTime = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6836/buggy-version/src.main.java.org.ggp.base.player.gamer.statemachine.sample.MinimaxGamer.java", "BodyUseAPI": [], "Fixed commit": "f8797cd3520b79d37146fb3f25d8f255316bf494", "Url": "https://api.github.com/repos/lumiii/thedefeated", "Date": "2016-04-10T10:35:24Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (temple.isEditState()) { int cost = floorSelect.tryToBuyFloor(mouseX, mouseY, money); if (cost > 0) { temple.addFloor(); money -= cost; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3834/buggy-version/src.buttons.UIControl.java", "BodyUseAPI": ["grid.SandTemple.addFloor()"], "Fixed commit": "965997c3d14146b91e37b3672f57d4652c6170f4", "Url": "https://api.github.com/repos/ajparker256/TempleGame", "Date": "2016-09-03T17:39:21Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (privateToPublic.values().contains(address.getHost())) { return address; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8663/buggy-version/hazelcast-client.src.main.java.com.hazelcast.client.spi.impl.AwsAddressTranslator.java", "BodyUseAPI": [], "Fixed commit": "b0230b5e68a6983e946eea4006adabdaacf03345", "Url": "https://api.github.com/repos/bilalyasar/hazelcast", "Date": "2016-09-27T15:15:29Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(DataProvider.RESTAURANT_INDEX_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((name.length()) > (com.example.pmm.android.udacity.lunchwheel.ui.WheelView.MAX_NAME_LENGTH)) { name = (name.substring(0, com.example.pmm.android.udacity.lunchwheel.ui.WheelView.MAX_NAME_LENGTH)) + \"...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3547/buggy-version/app.src.main.java.com.example.pmm.android.udacity.lunchwheel.ui.WheelView.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "6d594425a4d64918e3f3063f1e8c3bb79d104b6e", "Url": "https://api.github.com/repos/pmonkelban/Capstone-Project", "Date": "2015-10-18T22:27:55Z"},
{"Line": "=>891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oLine.getProductID().contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isBoxItem) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1763/buggy-version/src.main.java.com.openbravo.pos.ticket.TicketInfo.java", "BodyUseAPI": [], "Fixed commit": "79af948dec344330bb2a08e8b7f2d2e58e7c6e22", "Url": "https://api.github.com/repos/loma/checkbill", "Date": "2017-07-16T06:43:22Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pkg.getId().contains(\"nuxeo-content-browser\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4904/buggy-version/nuxeo-startup-wizard.src.main.java.org.nuxeo.wizard.download.PackageDownloader.java", "BodyUseAPI": [], "Fixed commit": "ca61a3f7533a6fae8c7eeae4831824de4124bc5a", "Url": "https://api.github.com/repos/nuxeo/nuxeo-distribution", "Date": "2012-06-05T10:12:08Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.isNull(attValue)) { if (attName.equals(\"isAbstract\")) { from.setProperty(attName, false); } }else { from.setProperty(attName, attValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6837/buggy-version/fr.inria.atlanmod.mogwai.datastore.blueprints.src.fr.inria.atlanmod.mogwai.datastore.blueprints.NeoEMFGraphDatastore.java", "BodyUseAPI": ["com.tinkerpop.blueprints.Vertex.setProperty(java.lang.String,java.lang.Object)"], "Fixed commit": "4a6305dd89665f04a35bc9b1e25f8d65eee384a2", "Url": "https://api.github.com/repos/atlanmod/Mogwai", "Date": "2017-04-24T17:54:49Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.Vertex.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Objects.isNull(property)) { if (attName.equals(\"visibility\")) { property = \"none\"; } if (attName.equals(\"inheritance\")) { property = \"none\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6837/buggy-version/fr.inria.atlanmod.mogwai.datastore.blueprints.src.fr.inria.atlanmod.mogwai.datastore.blueprints.NeoEMFGraphDatastore.java", "BodyUseAPI": [], "Fixed commit": "4a6305dd89665f04a35bc9b1e25f8d65eee384a2", "Url": "https://api.github.com/repos/atlanmod/Mogwai", "Date": "2017-04-24T17:54:49Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.inria.atlanmod.mogwai.datastore.blueprints.NeoEMFGraphDatastore.getMetaclassVertex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.util.Objects.nonNull(metaClassVertex)) { return metaClassVertex.getVertices(Direction.IN, fr.inria.atlanmod.mogwai.datastore.blueprints.NeoEMFGraphDatastore.KEY_INSTANCE_OF); }else { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6837/buggy-version/fr.inria.atlanmod.mogwai.datastore.blueprints.src.fr.inria.atlanmod.mogwai.datastore.blueprints.NeoEMFGraphDatastore.java", "BodyUseAPI": ["com.tinkerpop.blueprints.Vertex.getVertices(Direction.IN,java.lang.String)"], "Fixed commit": "4a6305dd89665f04a35bc9b1e25f8d65eee384a2", "Url": "https://api.github.com/repos/atlanmod/Mogwai", "Date": "2017-04-24T17:54:49Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rpc.RpcClient.TEST1) java.lang.System.out.println(\"SessionWrite called\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/340/buggy-version/src.rpc.RpcClient.java", "BodyUseAPI": [], "Fixed commit": "eab43724713edeb66f92ae025f85d70968f9e3e5", "Url": "https://api.github.com/repos/SunYuzhuo/CS5300P1b", "Date": "2016-04-10T05:35:07Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (destClass == (-1)) destClass = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5354/buggy-version/src.main.java.pl.poznan.put.TimeSeries.DataImporters.DataImporterEamonn.java", "BodyUseAPI": [], "Fixed commit": "69fcfab7c1ee33a1ec2ae4bfe4a35760f2e6e704", "Url": "https://api.github.com/repos/wmioduszewski/TimeSeries", "Date": "2015-10-14T21:23:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.op.kclock.SettingsActivity.findPreference(getString(R.string.pref_bgsource_key))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (bgSource != null) { bgSource.setOnPreferenceChangeListener(this); bgSourceChanged(((android.preference.ListPreference) (bgSource)).getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5925/buggy-version/src.com.op.kclock.SettingsActivity.java", "BodyUseAPI": ["android.preference.Preference.setOnPreferenceChangeListener(com.op.kclock.SettingsActivity)"], "Fixed commit": "70f0a0ead167bbcfed3fdeba5bf352282ffc0f06", "Url": "https://api.github.com/repos/picaro/Kitchen-Clock-free", "Date": "2012-09-23T18:47:52Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operational.getText().equals(\"No\")) isOperationalChecked = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8017/buggy-version/src.main.java.com.thoughtworks.sulabh.activity.AddLooActivity.java", "BodyUseAPI": [], "Fixed commit": "2c64ecf0fc6d99bdbdac3bddfa9e582987bd728f", "Url": "https://api.github.com/repos/ankitrokdeonsns/sulabh-android-app", "Date": "2014-05-12T06:01:56Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hygienic.getText().equals(\"No\")) isHygienicChecked = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8017/buggy-version/src.main.java.com.thoughtworks.sulabh.activity.AddLooActivity.java", "BodyUseAPI": [], "Fixed commit": "2c64ecf0fc6d99bdbdac3bddfa9e582987bd728f", "Url": "https://api.github.com/repos/ankitrokdeonsns/sulabh-android-app", "Date": "2014-05-12T06:01:56Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (free.getText().equals(\"No\")) isFreeChecked = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8017/buggy-version/src.main.java.com.thoughtworks.sulabh.activity.AddLooActivity.java", "BodyUseAPI": [], "Fixed commit": "2c64ecf0fc6d99bdbdac3bddfa9e582987bd728f", "Url": "https://api.github.com/repos/ankitrokdeonsns/sulabh-android-app", "Date": "2014-05-12T06:01:56Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hygienic.getText().equals(\"No\")) isHygienicChecked = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8017/buggy-version/src.main.java.com.thoughtworks.sulabh.activity.UpdateLooActivity.java", "BodyUseAPI": [], "Fixed commit": "2c64ecf0fc6d99bdbdac3bddfa9e582987bd728f", "Url": "https://api.github.com/repos/ankitrokdeonsns/sulabh-android-app", "Date": "2014-05-12T06:01:56Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operational.getText().equals(\"No\")) isOperationalChecked = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8017/buggy-version/src.main.java.com.thoughtworks.sulabh.activity.UpdateLooActivity.java", "BodyUseAPI": [], "Fixed commit": "2c64ecf0fc6d99bdbdac3bddfa9e582987bd728f", "Url": "https://api.github.com/repos/ankitrokdeonsns/sulabh-android-app", "Date": "2014-05-12T06:01:56Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (free.getText().equals(\"No\")) isFreeChecked = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8017/buggy-version/src.main.java.com.thoughtworks.sulabh.activity.UpdateLooActivity.java", "BodyUseAPI": [], "Fixed commit": "2c64ecf0fc6d99bdbdac3bddfa9e582987bd728f", "Url": "https://api.github.com/repos/ankitrokdeonsns/sulabh-android-app", "Date": "2014-05-12T06:01:56Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<hr.fer.ppj.lab1.model.TransitionKey, java.util.List<java.lang.Integer>>.get(hr.fer.ppj.lab1.model.TransitionKey)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (states != null) { states.forEach(( y) -> { if (!(currentStates.contains(y))) { currentStates.add(y); stack.push(y); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5936/buggy-version/src.hr.fer.ppj.lab1.helper.EpsilonNFA.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.forEach(java.util.function.Consumer<? super java.lang.Integer>)"], "Fixed commit": "402eeb16c77dce2ed90f10d3e6001ac5555b48e5", "Url": "https://api.github.com/repos/plt-laboratory/plt", "Date": "2017-10-18T16:43:45Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<hr.fer.ppj.lab1.model.TransitionKey, java.util.List<java.lang.Integer>>.get(hr.fer.ppj.lab1.model.TransitionKey)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (states == null) { states = new java.util.LinkedList<>(); states.add(state); transitionStateHashMap.put(key, states); }else if (!(states.contains(state))) { states.add(state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5936/buggy-version/src.hr.fer.ppj.lab1.helper.EpsilonNFA.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.contains(java.lang.Integer)", "java.util.List<java.lang.Integer>.add(java.lang.Integer)"], "Fixed commit": "402eeb16c77dce2ed90f10d3e6001ac5555b48e5", "Url": "https://api.github.com/repos/plt-laboratory/plt", "Date": "2017-10-18T16:43:45Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((plugin.getConfig()) != null) && ((plugin.getConfig().getNode(\"channels\")) != null)) && ((plugin.getConfig().getNode(\"channels\").getChildren()) != null)) for (java.util.Map.Entry<java.lang.String, org.spout.api.util.config.ConfigurationNode> ch : plugin.getConfig().getNode(\"channels\").getChildren().entrySet()) { channels.add(new com.thedevteam.thechatmod.Channels.Channel(ch.getKey(), ch.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1382/buggy-version/src.main.java.com.thedevteam.thechatmod.Channels.ChannelManager.java", "BodyUseAPI": ["plugin.getConfig().getNode(\"channels\").getChildren().entrySet()", "plugin.getConfig().getNode(java.lang.String)", "plugin.getConfig().getNode(\"channels\").getChildren()", "com.thedevteam.thechatmod.TheChatMod.getConfig()"], "Fixed commit": "ec320d5637e0b2b3cc657820cf2c63c73716d15b", "Url": "https://api.github.com/repos/THEDevTeam/THEChatMod", "Date": "2012-04-06T10:09:27Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == 1) { java.lang.System.out.println(text); if ((values[0]) == 69) { java.lang.System.out.println(((\"Subtracting $\" + (p.getTaxes())) + \" from your account. Sucks.\")); p.addMoney(((p.getTaxes()) * (-1))); }else if ((values[0]) == (-69)) { java.lang.System.out.println(((\"Subtracting $\" + (p.getCruiseAmount())) + \" from your account.\")); p.addMoney(((p.getCruiseAmount()) * (-1))); }else { if ((values[0]) != 0) { java.lang.System.out.println(((\"Adding $\" + (values[0])) + \" into account\")); p.addMoney(values[0]); } } if ((values[1]) == 1) { runHouse(p); } if ((values[2]) == 1) { chooseCareer(p); } }else if (type == 2) { java.lang.System.out.print(\"You landed on LIFE tile. \"); java.lang.System.out.println(text); p.addSecret(values[0]); p.addLife(1); if ((values[1]) == 1) { runKids(p, 1); }else if ((values[1]) == 2) { runKids(p, 2); } }else if (type == 3) { java.lang.System.out.println((\"You landed on \" + text)); }else if (type == 4) { java.lang.System.out.println(text); if ((values[0]) != 0) { p.raise(values[0]); java.lang.System.out.println((\"Your salary is raised by $\" + (values[0]))); } if ((values[1]) == 690) { java.lang.System.out.println(((\"Congrats. You just got $\" + (p.getRetireAmount())) + \" from your kids.\")); p.addMoney(p.getRetireAmount()); }else { if ((values[1]) != 0) { java.lang.System.out.println(((\"Adding \" + (values[1])) + \" into account\")); p.addMoney(values[1]); } } if ((values[2]) == 1) { p.raise(values[0]); java.lang.System.out.println((\"Your salary is raised by $\" + (values[0]))); } if ((values[1]) != 0) { java.lang.System.out.println(((\"Adding \" + (values[1])) + \" into account\")); p.addMoney(values[1]); } if ((values[3]) == 1) { runHouse(p); } if ((values[3]) == 1) { chooseCareer(p); } }else if (type == 5) { java.lang.System.out.println(((\"You landed on Blue. You get to sue someone $\" + (values[0])) + \".\")); runSueMethod(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4802/buggy-version/Board.java", "BodyUseAPI": [], "Fixed commit": "1906ae51d71659178d2f17e72ec563977791566e", "Url": "https://api.github.com/repos/narenkarur/gameoflife", "Date": "2017-04-19T20:50:46Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((option.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE)) != null) && (!(option.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText().isEmpty()))) { optionJson.put(\"title\", option.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText()); }else if (!(option.getResources().isEmpty())) { optionJson.put(\"title\", option.getResources().get(0).getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText()); }else { optionJson.put(\"title\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4656/buggy-version/SurveyManager.src.ilu.surveymanager.handler.SurveysHandler.java", "BodyUseAPI": ["option.getResources().get(0).getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE)", "option.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText()", "ilu.surveytool.databasemanager.DataObject.Option.getResources()", "option.getResources().get(0).getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText()", "ilu.surveytool.databasemanager.DataObject.Option.getContents()", "option.getResources().get(0).getContents()", "option.getResources().get(int)", "option.getResources().isEmpty()", "org.codehaus.jettison.json.JSONObject.put(java.lang.String,option.getResources().get(0).getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText())", "option.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE)", "org.codehaus.jettison.json.JSONObject.put(java.lang.String,option.getContents().get(DBConstants.s_VALUE_CONTENTTYPE_NAME_TITLE).getText())", "ilu.surveytool.databasemanager.DataObject.Option.getResources()"], "Fixed commit": "3ec81ee15c70582d22e6c440c5d8d6338d97d891", "Url": "https://api.github.com/repos/iluaepidi/surveytool", "Date": "2016-10-19T12:02:14Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dk.frv.eavdam.menus.IssuesMenuItem.issues) != null) { for (dk.frv.eavdam.data.AISDatalinkCheckIssue issue : dk.frv.eavdam.menus.IssuesMenuItem.issues) { if (issue.isAcknowledged()) { numberOfOldIssues++; }else { numberOfNewIssues++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2806/buggy-version/src.main.java.dk.frv.eavdam.buttons.InitiateHealthCheckButton.java", "BodyUseAPI": [], "Fixed commit": "715a84554781ab657a121d65f95ad17ee6bec5a7", "Url": "https://api.github.com/repos/dma-graveyard/EAVDAM", "Date": "2011-12-02T07:21:29Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.Profile.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.example.evelina.befit.model.DbManager.getInstance(this).validateLogin(username, password)) { android.content.Intent intent = new android.content.Intent(this, com.example.evelina.befit.TabbedActivity.class); intent.putExtra(\"username\", (((profile.getFirstName()) + \" \") + (profile.getLastName()))); startActivity(intent); }else { android.widget.Toast.makeText(this, \"Please register\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2509/buggy-version/app.src.main.java.com.example.evelina.befit.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "1cdda623830b33029c09702fb37365888b3624c1", "Url": "https://api.github.com/repos/ivetmetodieva/Be-fit", "Date": "2016-09-29T10:28:32Z"},
{"Line": "=>1497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.evolveum.midpoint.xml.ns._public.common.common_3.UserType.class.isAssignableFrom(delta.getObjectTypeClass())) { delta.applyTo(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3546/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.page.admin.users.PageUser.java", "BodyUseAPI": ["com.evolveum.midpoint.prism.delta.ObjectDelta.applyTo(com.evolveum.midpoint.prism.PrismObject<com.evolveum.midpoint.xml.ns._public.common.common_3.UserType>)"], "Fixed commit": "c5f31d99afe0b8902b5804679e2c8fbc760ecd76", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-03-18T15:52:35Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["propertyWrapper.getItem().getDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (propertyDef.isSingleValue()) { pDelta.setValueToReplace(newValCloned); }else { pDelta.addValueToAdd(newValCloned); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3546/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.component.prism.ObjectWrapper.java", "BodyUseAPI": [], "Fixed commit": "c5f31d99afe0b8902b5804679e2c8fbc760ecd76", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2015-03-18T15:52:35Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (initializationRequired) { if (dataset != null) try { it.geosolutions.imageio.gdalframework.GDALUtilities.closeDataSet(dataset); } catch (java.lang.Throwable e) { if (it.geosolutions.imageio.gdalframework.GDALCommonIIOImageMetadata.LOGGER.isLoggable(java.util.logging.Level.FINEST)) it.geosolutions.imageio.gdalframework.GDALCommonIIOImageMetadata.LOGGER.log(java.util.logging.Level.FINEST, e.getLocalizedMessage(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/684/buggy-version/library.gdalframework.src.main.java.it.geosolutions.imageio.gdalframework.GDALCommonIIOImageMetadata.java", "BodyUseAPI": [], "Fixed commit": "2903870ec43755ed6897ee83f3db27bb016bbcec", "Url": "https://api.github.com/repos/geosolutions-it/imageio-ext", "Date": "2013-03-14T11:18:52Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(genericInterface instanceof java.lang.reflect.ParameterizedType)) { org.easybatch.core.mapper.ObjectMapper.LOGGER.log(java.util.logging.Level.WARNING, \"The type converter {0} should be a parametrized type\", typeConverterClass.getName()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2184/buggy-version/easybatch-core.src.main.java.org.easybatch.core.mapper.ObjectMapper.java", "BodyUseAPI": [], "Fixed commit": "f1f9706fbba204d72cb557d9737baeff77be3a53", "Url": "https://api.github.com/repos/j-easy/easy-batch", "Date": "2015-05-02T14:14:41Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.getFullyQualifiedName().equals(java.util.Date.class.getName())) { s = org.jboss.errai.codegen.util.Stmt.nestedCall(new org.jboss.errai.codegen.TernaryStatement(org.jboss.errai.codegen.util.Bool.isNull(statement), org.jboss.errai.codegen.util.Stmt.load(\"\"), org.jboss.errai.codegen.util.Stmt.nestedCall(statement).invoke(\"toGMTString\"))); }else { s = org.jboss.errai.codegen.util.Stmt.nestedCall(new org.jboss.errai.codegen.TernaryStatement(org.jboss.errai.codegen.util.Bool.isNull(statement), org.jboss.errai.codegen.util.Stmt.load(\"\"), org.jboss.errai.codegen.util.Stmt.nestedCall(statement))); if (!(type.equals(org.jboss.errai.codegen.meta.MetaClassFactory.get(java.lang.String.class)))) { s = s.invoke(\"toString\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1205/buggy-version/errai-jaxrs.errai-jaxrs-client.src.main.java.org.jboss.errai.enterprise.rebind.TypeMarshaller.java", "BodyUseAPI": ["org.jboss.errai.codegen.meta.MetaClass.equals(org.jboss.errai.codegen.meta.MetaClassFactory.get(java.lang.String.class))"], "Fixed commit": "24cd02dc61f3676e8ad036eaeec19885c8b56843", "Url": "https://api.github.com/repos/mbarkley/errai", "Date": "2016-07-08T21:19:58Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((headerView) != null) { selectedPos = position - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7725/buggy-version/PocketMarketing.src.net.jsiq.marketing.fragment.ContentFragment.java", "BodyUseAPI": [], "Fixed commit": "f8b46e744933d20adc72026bd01061c3f980569f", "Url": "https://api.github.com/repos/onecoders/ViewPageIndicator", "Date": "2013-11-15T08:30:04Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reloadable != (this)) if (reloadable.hasAccessPermission(sender)) reloadable.reload(sender);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3903/buggy-version/CrazyCore.src.de.st_ddt.crazyplugin.commands.CrazyCommandReload.java", "BodyUseAPI": ["de.st_ddt.crazyplugin.commands.CrazyCommandReload.Reloadable.hasAccessPermission(org.bukkit.command.CommandSender)", "de.st_ddt.crazyplugin.commands.CrazyCommandReload.Reloadable.reload(org.bukkit.command.CommandSender)"], "Fixed commit": "f97664120677cf9c43f82fa6cd4d9abf329b2f3b", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2013-07-15T06:07:05Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Exception>.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(errMessage.startsWith(\"java.lang.\"))) { errMessage += \":\" + (e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3115/buggy-version/plugins.org.jkiss.dbeaver.core.src.org.jkiss.dbeaver.ui.controls.resultset.ResultSetDataReceiver.java", "BodyUseAPI": [], "Fixed commit": "ab2a4216882d3fbecbd66f17c873b3ce8d1778e2", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2016-05-19T14:50:54Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == null) { state = state.NL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/333/buggy-version/JAVANAISE2.src.jvn.JvnObjectImpl.java", "BodyUseAPI": [], "Fixed commit": "d82fa68d6e4dd5b7069015ee55c4e9c9120617de", "Url": "https://api.github.com/repos/wazaminator/javanaise", "Date": "2016-10-17T06:13:02Z"},
{"Line": "=>943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mMenu) == null) || ((mMasterImage) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6323/buggy-version/src.com.android.gallery3d.filtershow.FilterShowActivity.java", "BodyUseAPI": [], "Fixed commit": "eb6a9b9cdd2ec4bd9139c32ace454c329f1f3147", "Url": "https://api.github.com/repos/AOSiP/platform_packages_apps_Gallery2", "Date": "2013-09-12T21:21:55Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) { throw new java.lang.IllegalStateException(\"Jenkins instance is unavailable.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6403/buggy-version/src.main.java.jp.ikedam.jenkins.plugins.extensible_choice_parameter.SystemGroovyChoiceListProvider.java", "BodyUseAPI": [], "Fixed commit": "80ec99668eb2134c4167a48257f7d8519eefd4fd", "Url": "https://api.github.com/repos/jenkinsci/extensible-choice-parameter-plugin", "Date": "2017-08-04T04:45:33Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) { throw new java.lang.IllegalStateException(\"Jenkins instance is unavailable.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6403/buggy-version/src.main.java.jp.ikedam.jenkins.plugins.extensible_choice_parameter.FilenameChoiceListProvider.java", "BodyUseAPI": [], "Fixed commit": "80ec99668eb2134c4167a48257f7d8519eefd4fd", "Url": "https://api.github.com/repos/jenkinsci/extensible-choice-parameter-plugin", "Date": "2017-08-04T04:45:33Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) { throw new java.lang.IllegalStateException(\"Jenkins instance is unavailable.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6403/buggy-version/src.main.java.jp.ikedam.jenkins.plugins.extensible_choice_parameter.ExtensibleChoiceParameterDefinition.java", "BodyUseAPI": [], "Fixed commit": "80ec99668eb2134c4167a48257f7d8519eefd4fd", "Url": "https://api.github.com/repos/jenkinsci/extensible-choice-parameter-plugin", "Date": "2017-08-04T04:45:33Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4176/buggy-version/src.main.java.com.nyancraft.reportrts.command.sub.ReopenTicket.java", "BodyUseAPI": [], "Fixed commit": "c0b2151231f64885b057db911bc01b8d829a682e", "Url": "https://api.github.com/repos/James137137/ReportRTS", "Date": "2016-10-18T06:52:30Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((baseFrame) == (-1)) currentDelay = ((currentDelay) + 1) % (delay); else currentDelay = ((currentDelay) + 1) % ((currentFrame) == (baseFrame) ? baseDelay : delay);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5280/buggy-version/src.bobby.scene.Sprite.java", "BodyUseAPI": [], "Fixed commit": "6cd71d690616d3d33c119a091444060c842d730f", "Url": "https://api.github.com/repos/kiarash96/bobby", "Date": "2015-06-23T12:32:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sourceFile.renameTo(targetFile)) { java.lang.System.out.println(\"rename file successfully!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7253/buggy-version/src.cn.edu.tongji.util.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "75f09428877296ceaabfa5b3ba68ec0c84725550", "Url": "https://api.github.com/repos/mikema90/EAS", "Date": "2014-02-23T15:46:57Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdmin || hasPermission) { try { ntut.csie.ezScrum.web.helper.AccountHelper accountHelper = new ntut.csie.ezScrum.web.helper.AccountHelper(session); ntut.csie.ezScrum.web.dataObject.AccountObject account = accountHelper.addAssignedRole(id, projectId, scrumRole); writer.write(accountHelper.getAccountXML(account)); } catch (java.lang.IllegalArgumentException e) { response.setContentType(\"application/json; charset=utf-8\"); writer.write(\"{\\\"msg\\\": \\\"The role not exist\\\"}\"); } finally { writer.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5733/buggy-version/java.ntut.csie.ezScrum.web.action.rbac.AddUserAction.java", "BodyUseAPI": [], "Fixed commit": "d8e65ba767474f8a486ce988b6ccf8837c38262f", "Url": "https://api.github.com/repos/ezScrum/ezScrum", "Date": "2015-07-21T06:01:20Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scrumRole == null) { scrumRole = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5733/buggy-version/java.ntut.csie.ezScrum.web.action.rbac.AddUserAction.java", "BodyUseAPI": [], "Fixed commit": "d8e65ba767474f8a486ce988b6ccf8837c38262f", "Url": "https://api.github.com/repos/ezScrum/ezScrum", "Date": "2015-07-21T06:01:20Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.stream.events.XMLEvent.asCharacters()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(characters.isWhiteSpace())) { main.java.com.bodastage.boda_bulkcmparser.BodaBulkCMParser.tagData = characters.getData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4312/buggy-version/src.main.java.com.bodastage.boda_bulkcmparser.BodaBulkCMParser.java", "BodyUseAPI": ["javax.xml.stream.events.Characters.getData()"], "Fixed commit": "6d5df8ccf7168ce4114c187ddd84c3fae59679a6", "Url": "https://api.github.com/repos/bodastage/boda-bulkcmparser", "Date": "2016-11-09T20:13:28Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.portlet.PortletBag.getWebDAVStorageInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (webDAVStorage == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9198/buggy-version/hooks.so-compat-hook.docroot.WEB-INF.src.com.liferay.so.compat.servlet.SOCompatServletContextListener.java", "BodyUseAPI": [], "Fixed commit": "c4e85572c6e9e2667df2928772f74101887e329c", "Url": "https://api.github.com/repos/aarondelani/liferay-plugins", "Date": "2012-10-02T22:52:51Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 0) index = damage1 - damage2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5058/buggy-version/src.com.mraof.minestuck.util.CombinationRegistry.java", "BodyUseAPI": [], "Fixed commit": "44c4ab32ddb5271c108e9b7c77a83459ff476f6a", "Url": "https://api.github.com/repos/mraof/Minestuck", "Date": "2015-01-20T08:01:07Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 0) index = damage1 - damage2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5058/buggy-version/src.com.mraof.minestuck.util.CombinationRegistry.java", "BodyUseAPI": [], "Fixed commit": "44c4ab32ddb5271c108e9b7c77a83459ff476f6a", "Url": "https://api.github.com/repos/mraof/Minestuck", "Date": "2015-01-20T08:01:07Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input1 instanceof net.minecraft.block.Block) input1 = net.minecraft.item.Item.getItemFromBlock(((net.minecraft.block.Block) (input1))); else if (input1 instanceof net.minecraft.item.ItemStack) input1 = ((net.minecraft.item.ItemStack) (input1)).getItem();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5058/buggy-version/src.com.mraof.minestuck.util.CombinationRegistry.java", "BodyUseAPI": [], "Fixed commit": "44c4ab32ddb5271c108e9b7c77a83459ff476f6a", "Url": "https://api.github.com/repos/mraof/Minestuck", "Date": "2015-01-20T08:01:07Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((systemExclusive) == null) { systemExclusive = new java.io.ByteArrayOutputStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/652/buggy-version/MIDIDriver.src.jp.kshoji.driver.midi.handler.MidiMessageCallback.java", "BodyUseAPI": [], "Fixed commit": "eb5b6b6fd40373d119bea87558ae6d8f3a8af16a", "Url": "https://api.github.com/repos/kshoji/USB-MIDI-Driver", "Date": "2013-01-20T23:21:36Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockedByOperator) contract.setBlockedByOperator(blockContract);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1096/buggy-version/src.main.java.com.deltacom.app.services.implementation.ContractServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "91044e651d14a337c6187794e4ba0459b84aa096", "Url": "https://api.github.com/repos/Pankratov-Daniil/DeltaCom", "Date": "2017-10-09T13:11:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.bouncing)) { player.speedx = -(player.speedx); player.speedy = -(player.speedy); player.bounce(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2851/buggy-version/screenStuff.GamePanel.java", "BodyUseAPI": ["Sprite.Player.bounce()"], "Fixed commit": "773bd5cac5cd7be94d9deb04d252677e27550750", "Url": "https://api.github.com/repos/JacobGrace1020/Bubbles", "Date": "2017-02-10T04:00:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (servicesConnected()) { listView.performItemClick(null, 0, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5973/buggy-version/src.no.tagstory.TagStoryActivity.java", "BodyUseAPI": [], "Fixed commit": "6e0f6bf185e689ee98180dfd6502df36a21260f9", "Url": "https://api.github.com/repos/Kyrremann/TagStory", "Date": "2014-05-22T18:54:54Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((part.getChoiceImage()) != null) && (!(part.getChoiceImage().equals(\"\")))) { android.widget.ImageView imageView = ((android.widget.ImageView) (findViewById(R.id.story_tag_image))); imageView.setVisibility(View.VISIBLE); if (part.getChoiceImage().equals(\"ledere\")) { imageView.setImageDrawable(getResources().getDrawable(R.drawable.ledere)); }else if (part.getChoiceImage().equals(\"mjaowl.jpg\")) { imageView.setImageDrawable(getResources().getDrawable(R.drawable.majowl)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5973/buggy-version/src.no.tagstory.story.activity.StoryActivity.java", "BodyUseAPI": ["no.tagstory.story.StoryPart.getChoiceImage()", "part.getChoiceImage().equals(java.lang.String)", "part.getChoiceImage().equals(java.lang.String)", "no.tagstory.story.StoryPart.getChoiceImage()"], "Fixed commit": "6e0f6bf185e689ee98180dfd6502df36a21260f9", "Url": "https://api.github.com/repos/Kyrremann/TagStory", "Date": "2014-05-22T18:54:54Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((confirmEmailService.findSingleConfirmEmailDataByUser(currentUser)) == null) { return true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2137/buggy-version/src.main.java.edu.harvard.iq.dataverse.authorization.providers.builtin.BuiltinUserPage.java", "BodyUseAPI": [], "Fixed commit": "73a290e04c663435ead3baa118e156c0c1ad30ea", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2016-08-08T18:05:08Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (copyToWorkspace(workspace)) { delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6476/buggy-version/modules.VisualizationImpl.src.main.java.org.gephi.visualization.apiimpl.contextmenuitems.CopyOrMoveToWorkspaceSubItem.java", "BodyUseAPI": [], "Fixed commit": "cbb025d6d058e417bfa505c527d1048c2ff1479f", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-12-17T21:09:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFactory().Core().clone(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (meth.getSimpleName().equals(\"notifyAll\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5441/buggy-version/src.main.java.bcu.transformer.processors.GhostClassCreator.java", "BodyUseAPI": [], "Fixed commit": "b24f18c31816c00d992826809ecf7bb175a9596c", "Url": "https://api.github.com/repos/Spirals-Team/casper", "Date": "2016-12-08T21:29:31Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFactory().Core().clone(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (meth.getSimpleName().equals(\"getClass\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5441/buggy-version/src.main.java.bcu.transformer.processors.GhostClassCreator.java", "BodyUseAPI": [], "Fixed commit": "b24f18c31816c00d992826809ecf7bb175a9596c", "Url": "https://api.github.com/repos/Spirals-Team/casper", "Date": "2016-12-08T21:29:31Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFactory().Core().clone(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (meth.getSimpleName().equals(\"notify\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5441/buggy-version/src.main.java.bcu.transformer.processors.GhostClassCreator.java", "BodyUseAPI": [], "Fixed commit": "b24f18c31816c00d992826809ecf7bb175a9596c", "Url": "https://api.github.com/repos/Spirals-Team/casper", "Date": "2016-12-08T21:29:31Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFactory().Core().clone(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (meth.getSimpleName().equals(\"wait\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5441/buggy-version/src.main.java.bcu.transformer.processors.GhostClassCreator.java", "BodyUseAPI": [], "Fixed commit": "b24f18c31816c00d992826809ecf7bb175a9596c", "Url": "https://api.github.com/repos/Spirals-Team/casper", "Date": "2016-12-08T21:29:31Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.graph.sql.OCommandExecutorSQLDeleteVertex.parseOptionalWord(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (word.equals(com.orientechnologies.orient.graph.sql.KEYWORD_LIMIT)) { word = parseOptionalWord(true); try { limit = java.lang.Integer.parseInt(word); } catch (java.lang.Exception e) { throw new com.orientechnologies.orient.core.sql.OCommandSQLParsingException((\"Invalid LIMIT: \" + word)); } }else if ((word.length()) > 0) { clazz = ((com.orientechnologies.orient.core.metadata.OMetadataInternal) (database.getMetadata())).getImmutableSchemaSnapshot().getClass(word); if (clazz == null) throw new com.orientechnologies.orient.core.sql.OCommandSQLParsingException(((\"Class '\" + word) + \"' was not found\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1206/buggy-version/graphdb.src.main.java.com.orientechnologies.orient.graph.sql.OCommandExecutorSQLDeleteVertex.java", "BodyUseAPI": ["((com.orientechnologies.orient.core.metadata.OMetadataInternal) (database.getMetadata())).getImmutableSchemaSnapshot().getClass(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "6f20055e7b394ac7f86e0856619b231210026408", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-21T15:25:39Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRegisteredToBus) { bus.unregister(this); isRegisteredToBus = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7302/buggy-version/app.src.main.java.org.badhan.blooddonor.core.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "d2e2608e131bb8d2eeaf8f7d21b77fe25d0dff03", "Url": "https://api.github.com/repos/ohanspace/blooddonor", "Date": "2017-11-08T14:24:27Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRegisteredToBus)) { bus.register(this); isRegisteredToBus = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7302/buggy-version/app.src.main.java.org.badhan.blooddonor.core.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "d2e2608e131bb8d2eeaf8f7d21b77fe25d0dff03", "Url": "https://api.github.com/repos/ohanspace/blooddonor", "Date": "2017-11-08T14:24:27Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hasMethod(node, getterName))) { getterName = \"has\" + (com.github.javaparser.utils.Utils.capitalize(camelCaseName())); if (!(hasMethod(node, getterName))) { if (camelCaseName().startsWith(\"is\")) { getterName = camelCaseName(); }else { getterName = \"is\" + (com.github.javaparser.utils.Utils.capitalize(camelCaseName())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2587/buggy-version/javaparser-core.src.main.java.com.github.javaparser.ast.observer.ObservableProperty.java", "BodyUseAPI": ["com.github.javaparser.ast.observer.ObservableProperty.hasMethod(com.github.javaparser.ast.Node,java.lang.String)"], "Fixed commit": "effcc026e46703030dae22478ca866a0cabca8cc", "Url": "https://api.github.com/repos/ftomassetti/javaparser", "Date": "2017-02-04T20:46:03Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.Component.get(railo.runtime.PageContext,railo.runtime.type.Collection.Key,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (o == null) o = component.get(pc, KeyConstants._onmissingmethod, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2639/buggy-version/railo-java.railo-core.src.railo.runtime.ComponentPage.java", "BodyUseAPI": [], "Fixed commit": "1edcbeb0bfa60ad86c15d944b466243aa46f3f0a", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2014-03-13T12:35:22Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getTarget().getType().getKind()) == (javax.lang.model.type.TypeKind.ARRAY)) { org.checkerframework.dataflow.analysis.TransferResult<org.checkerframework.framework.flow.CFValue, org.checkerframework.framework.flow.CFStore> newResult = new org.checkerframework.dataflow.analysis.RegularTransferResult<org.checkerframework.framework.flow.CFValue, org.checkerframework.framework.flow.CFStore>(result.getResultValue(), new org.checkerframework.framework.flow.CFStore(analysis, true)); result = newResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6434/buggy-version/checker.src.org.checkerframework.checker.upperbound.UpperBoundTransfer.java", "BodyUseAPI": [], "Fixed commit": "555e9d27a2adf4d96a3b416f1e268ee57bf9a471", "Url": "https://api.github.com/repos/kelloggm/checker-framework", "Date": "2016-12-02T17:51:47Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nearTransitBonus && (edgesNearTransit.contains(e))) { distance /= 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2777/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.impl.StreetVertexIndexServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e820de45c39f0b35552ee62904a886f065e3a7ec", "Url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner", "Date": "2011-08-07T15:49:44Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endDate) == null) { return !(startDate.after(endDateCriteria)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4695/buggy-version/src.DatePair.java", "BodyUseAPI": [], "Fixed commit": "29c5bbaabad325e30d77acf6c935f0bb94853eb9", "Url": "https://api.github.com/repos/cs2103aug2014-w11-4j/main", "Date": "2014-10-03T10:13:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (buchers.isEmpty()) { tree.setDeath(true); treeDestroy = true; ia.toggleMode(); human.toggleMode(); }else if ((buchers.getFirst().isAttacking()) && (!(treeDestroy))) { tree.setDeath(true); treeDestroy = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7838/buggy-version/src.com.buchbuchteam.buchbuch.view.GameScreen.java", "BodyUseAPI": ["buchers.getFirst().isAttacking()", "com.buchbuchteam.buchbuch.model.Team.getFirst()"], "Fixed commit": "d379d5d6bba6e916d4c3d7cd5d1e34f7313b4c74", "Url": "https://api.github.com/repos/Warrows/GGJ2014-BuchBuchTeam", "Date": "2014-01-25T18:38:23Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Tools.FixData.hideRank(taxon_tnrs_final).equals(taxon_taxstand_final))) throw new java.lang.Exception((((\"Traffic light Orange. Taxonstand and TNRS are different. Taxondstand: \" + taxon_taxstand_final) + \" TNRS: \") + (Tools.FixData.hideRank(taxon_tnrs_final)))); else throw new java.lang.Exception((((((\"Traffic light Red. All differents. Taxon: \" + taxon_final) + \" TNRS: \") + taxon_tnrs_final) + \" Taxstand: \") + taxon_taxstand_final));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5875/buggy-version/OccurrencesValidation.src.Controllers.Occurrences.CTempOccurrences.java", "BodyUseAPI": ["Tools.FixData.hideRank(java.lang.String)"], "Fixed commit": "c1f92a114cf9e4792e18d2e2d64ed433332d8bb5", "Url": "https://api.github.com/repos/CIAT-DAPA/cwr_occurrencesvalidation", "Date": "2015-04-06T16:12:54Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gourmet.operations) == null) { return gourmetBuilder.getGourmetCacheData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6071/buggy-version/gourmet.src.main.java.com.jugarte.gourmet.datamanagers.DataManager.java", "BodyUseAPI": [], "Fixed commit": "26742bf6f0cfc67cdc9079875f40624708f0041b", "Url": "https://api.github.com/repos/GourmetApp/GourmetApp-android", "Date": "2015-10-19T15:11:49Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.knime.knip.base.data.img.ImgPlusCell<T>.getMinimum()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(java.util.Arrays.equals(minimum, localMin))) { for (int d = 0; d < (minimum.length); d++) { if ((minimum[d]) != 0) { tmp = net.imglib2.img.ImgView.wrap(net.imglib2.view.Views.translate(tmp, minimum), m_img.factory()); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6980/buggy-version/org.knime.knip.base.src.org.knime.knip.base.data.img.ImgPlusCell.java", "BodyUseAPI": ["net.imglib2.view.Views.translate(net.imglib2.img.Img<T>,long[])", "net.imglib2.img.ImgView.wrap(net.imglib2.view.Views.translate(tmp, minimum),m_img.factory())"], "Fixed commit": "b58d5c3ad11e99d390e0b245263f2c168595e3b2", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2015-07-29T13:20:53Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisible()) { scheduleSelf(this, ((android.os.SystemClock.uptimeMillis()) + (mFrameDuration))); }else { mRunning = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6163/buggy-version/library.src.com.handlerexploit.prime.drawable.ProgressDrawable.java", "BodyUseAPI": [], "Fixed commit": "2c904dcab367a8d95553b1de223a78661b7efa9d", "Url": "https://api.github.com/repos/DHuckaby/Prime", "Date": "2012-09-14T23:35:21Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { invalidateOptionsMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3417/buggy-version/src.activity.pack.ComputeActivity.java", "BodyUseAPI": [], "Fixed commit": "9696b755d47a0292fc390c54dbcb7ea58ae2ded0", "Url": "https://api.github.com/repos/kristjancode/OpenNode_Android", "Date": "2011-10-15T14:31:48Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { invalidateOptionsMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3417/buggy-version/src.activity.pack.Activity_StreamActivity.java", "BodyUseAPI": [], "Fixed commit": "9696b755d47a0292fc390c54dbcb7ea58ae2ded0", "Url": "https://api.github.com/repos/kristjancode/OpenNode_Android", "Date": "2011-10-15T14:31:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { invalidateOptionsMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3417/buggy-version/src.activity.pack.StorageActivity.java", "BodyUseAPI": [], "Fixed commit": "9696b755d47a0292fc390c54dbcb7ea58ae2ded0", "Url": "https://api.github.com/repos/kristjancode/OpenNode_Android", "Date": "2011-10-15T14:31:48Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { invalidateOptionsMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3417/buggy-version/src.activity.pack.NetworkActivity.java", "BodyUseAPI": [], "Fixed commit": "9696b755d47a0292fc390c54dbcb7ea58ae2ded0", "Url": "https://api.github.com/repos/kristjancode/OpenNode_Android", "Date": "2011-10-15T14:31:48Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { invalidateOptionsMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3417/buggy-version/src.activity.pack.TemplateActivity.java", "BodyUseAPI": [], "Fixed commit": "9696b755d47a0292fc390c54dbcb7ea58ae2ded0", "Url": "https://api.github.com/repos/kristjancode/OpenNode_Android", "Date": "2011-10-15T14:31:48Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!onPause) finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8544/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskEditActivity.java", "BodyUseAPI": [], "Fixed commit": "1950a6db3c7dca43c9f66a31c3bec2aba6b184b0", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2011-08-29T19:38:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lock.isHeldByCurrentThread()) lock.unlock();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8216/buggy-version/src.net.xy.codebase.collection.ParkingArrayQueue.java", "BodyUseAPI": ["java.util.concurrent.locks.ReentrantLock.unlock()"], "Fixed commit": "e460bc2ef9d0e59551b83155212e65fc859f2cdd", "Url": "https://api.github.com/repos/Nyanna/XY.CodebaseL", "Date": "2016-02-06T21:34:51Z"},
{"Line": "=>1120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.matrix.androidsdk.data.store.IMXStore.getLatestEvent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == lastEvent) { org.matrix.androidsdk.util.Log.e(org.matrix.androidsdk.data.Room.LOG_TAG, \"## sendReadReceipt(): no last event\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8248/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.data.Room.java", "BodyUseAPI": [], "Fixed commit": "fe09378e635f8530c2c845d0d5b62ad59f90b907", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2017-03-31T06:25:06Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedStyle) == (blankBlockStyle)) { image.cellValue = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5722/buggy-version/UltraGravity-core.src.Screens.LevelEditorScreen.java", "BodyUseAPI": [], "Fixed commit": "78b919efcdca18b5d0c0daf79331ab16569bcf6f", "Url": "https://api.github.com/repos/UltraGravity/CoreRepo", "Date": "2014-10-26T22:12:34Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(errors.isEmpty())) { java.lang.StringBuilder errorMessages = new java.lang.StringBuilder(); for (com.qcadoo.model.api.validators.ErrorMessage errorMessage : errors) { java.lang.String translatedErrorMessage = translationService.translate(errorMessage.getMessage(), java.util.Locale.getDefault(), errorMessage.getVars()); errorMessages.append(translatedErrorMessage); errorMessages.append(\", \"); } stateChangeContext.addValidationError(\"orders.order.orderStates.error\", errorMessages.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/654/buggy-version/mes-plugins.mes-plugins-production-counting.src.main.java.com.qcadoo.mes.productionCounting.states.listener.ProductionRecordBasicListenerService.java", "BodyUseAPI": [], "Fixed commit": "b93eb62eb02ba4fa47882bbb9b5369f60651b4db", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2013-08-19T10:08:30Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mileage > 0) { if ((cursor.getInt(cursor.getColumnIndex(TripColumns.TripType))) == (Utility.WORK)) workMileage += mileage - previousMileage; else privateMileage += mileage - previousMileage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8087/buggy-version/app.src.main.java.se.johanmagnusson.android.adomile.SummaryFragment.java", "BodyUseAPI": [], "Fixed commit": "6f347bfd49a23515548de930df413ecc33d83768", "Url": "https://api.github.com/repos/thejohanmagnusson/Adomile", "Date": "2016-05-23T20:44:52Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.BlockingQueue<ilarkesto.core.logging.LogRecord>.poll(int,java.util.concurrent.TimeUnit)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (record != null) java.lang.System.err.println(record.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4080/buggy-version/src.main.java.ilarkesto.logging.DefaultLogDataHandler.java", "BodyUseAPI": ["ilarkesto.core.logging.LogRecord.toString()", "java.io.PrintStream.println(record.toString())"], "Fixed commit": "b93e4f7d802d3509464530c6b46c90cc9b2ac3b6", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2011-11-10T23:50:21Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type2) == null) { return output; }else { int preferableSize = (output.size()) / 2; while ((output.size()) > preferableSize) { output.remove(((output.size()) - 1)); } return output; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6553/buggy-version/src.dk.fam_nicolas.pokedex.Type.java", "BodyUseAPI": [], "Fixed commit": "3c055d7e5464189ad921f29eb8197b5066f6319d", "Url": "https://api.github.com/repos/banpower1/Pokedex", "Date": "2014-05-26T14:43:01Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_state) == (com.caucho.quercus.lib.xml.XMLWriter.WriterState.ELEMENT_HEADER)) { _s.append(\">\"); _state = com.caucho.quercus.lib.xml.XMLWriter.WriterState.ELEMENT_BODY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2763/buggy-version/modules.quercus.src.com.caucho.quercus.lib.xml.XMLWriter.java", "BodyUseAPI": [], "Fixed commit": "397adf925dc355851ff1b9a051bdbb023e91e70e", "Url": "https://api.github.com/repos/am-immanuel/quercus", "Date": "2015-12-14T13:06:41Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflow.protocol.OFFlowMod.getMatch()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((match.getDataLayerVirtualLan()) != (-1)) json.put(\"vlan_id\", match.getDataLayerVirtualLan());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6127/buggy-version/fl-odl.src.main.java.net.floodlightcontroller.interceptor.MessageSerializer.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,match.getDataLayerVirtualLan())", "org.openflow.protocol.OFMatch.getDataLayerVirtualLan()"], "Fixed commit": "29d8ebd15c0427971959d03ddfb7d35e878aa709", "Url": "https://api.github.com/repos/fp7-netide/Engine", "Date": "2015-01-27T17:08:44Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((possibleDirections.size()) > 0) { int index = getRandomIndex(possibleDirections); return getDirection(possibleDirections, index); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6249/buggy-version/src.main.java.monsterwars.gamemechanics.strategy.RandomMovementStrategy.java", "BodyUseAPI": ["monsterwars.gamemechanics.strategy.RandomMovementStrategy.getDirection(java.util.Map<monsterwars.worldmap.data.Directions, monsterwars.worldmap.data.Town>,int)", "monsterwars.gamemechanics.strategy.RandomMovementStrategy.getRandomIndex(java.util.Map<monsterwars.worldmap.data.Directions, monsterwars.worldmap.data.Town>)"], "Fixed commit": "9cf985fb6024989066f5db7f0180caf5850d6f38", "Url": "https://api.github.com/repos/ffekete/MonsterWars", "Date": "2017-11-28T10:39:36Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["monsterwars.gamemechanics.calculator.MovementCalculator.getRandomDirectionToMove(java.util.Map<monsterwars.worldmap.data.Directions, monsterwars.worldmap.data.Town>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (directionToMove != null) { monsterLocations.addMonsterToTown(getDestinationTown(possibleDirections, directionToMove), monster); monsterLocations.removeMonsterFromTown(actualTown, monster); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6249/buggy-version/src.main.java.monsterwars.gamemechanics.calculator.MovementCalculator.java", "BodyUseAPI": ["monsterwars.gamemechanics.calculator.MovementCalculator.getDestinationTown(java.util.Map<monsterwars.worldmap.data.Directions, monsterwars.worldmap.data.Town>,monsterwars.worldmap.data.Directions)", "monsterwars.monster.MonsterLocations.addMonsterToTown(monsterwars.worldmap.data.Town,monsterwars.monster.Monster)"], "Fixed commit": "9cf985fb6024989066f5db7f0180caf5850d6f38", "Url": "https://api.github.com/repos/ffekete/MonsterWars", "Date": "2017-11-28T10:39:36Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getColumn(c.getFieldName())) != null) { com.odoo.core.orm.fields.OColumn column = model.getColumn(c.getFieldName()); if (column != null) { c.setColumn(column); if (column.hasOnChange()) { setOnChangeForControl(column, c); } if (column.hasDomainFilterColumn()) { setOnDomainFilterCallBack(column, c); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8604/buggy-version/app.src.main.java.odoo.controls.OForm.java", "BodyUseAPI": ["odoo.controls.OField.getFieldName()", "odoo.controls.OForm.setOnChangeForControl(com.odoo.core.orm.fields.OColumn,odoo.controls.OField)", "com.odoo.core.orm.OModel.getColumn(c.getFieldName())", "odoo.controls.OField.setColumn(com.odoo.core.orm.fields.OColumn)", "odoo.controls.OForm.setOnDomainFilterCallBack(com.odoo.core.orm.fields.OColumn,odoo.controls.OField)"], "Fixed commit": "9d15bc6793dbf9b502f2e29a1e3d2cb5eee8de83", "Url": "https://api.github.com/repos/Odoo-mobile/crm", "Date": "2017-01-03T12:28:33Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message.isDiscussion()) && (message.isRoot())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4024/buggy-version/portal-impl.src.com.liferay.portlet.messageboards.util.MBMessageIndexer.java", "BodyUseAPI": [], "Fixed commit": "faa633194a3bc261107e89b3563fb61024e8bc23", "Url": "https://api.github.com/repos/juliocamarero/liferay-portal", "Date": "2013-01-18T09:24:40Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((par1ItemStack.stackTagCompound) == null) par1ItemStack.setTagCompound(new net.minecraft.nbt.NBTTagCompound());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3472/buggy-version/common.mod.industrialscience.modules.research.ResearchBook.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.setTagCompound(net.minecraft.nbt.NBTTagCompound)"], "Fixed commit": "418f791cf3b553f58dee658565101bb717c2975a", "Url": "https://api.github.com/repos/IndustrialScienceTeam/Industrialscience", "Date": "2013-03-28T16:35:11Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.bitpix) == 32) { this.fsbits = 5; this.fsmax = 25; }else if ((this.bitpix) == 64) { this.fsbits = 6; this.fsmax = 58; }else { throw new java.lang.IllegalArgumentException(\"Invalid bitpix for Rice compression\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/387/buggy-version/src.main.java.nom.tam.image.comp.Rice.java", "BodyUseAPI": [], "Fixed commit": "514513c3c6f1046ddd12cdea3f3e76096c5f770f", "Url": "https://api.github.com/repos/nom-tam-fits/nom-tam-fits", "Date": "2015-05-23T05:41:26Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.muikku.plugins.schooldatapyramus.PyramusIdentifierMapper.getPyramusEducationalTimeUnitId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (educationalTimeUnitId != null) { return pyramusSchoolDataEntityFactory.getCourseLengthUnit(pyramusClient.get((\"/common/educationalTimeUnits/\" + educationalTimeUnitId), fi.pyramus.rest.model.EducationalTimeUnit.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/530/buggy-version/muikku-pyramus-plugin.src.main.java.fi.muikku.plugins.schooldatapyramus.PyramusCourseMetaSchoolDataBridge.java", "BodyUseAPI": ["fi.muikku.plugins.schooldatapyramus.entities.PyramusSchoolDataEntityFactory.getCourseLengthUnit(pyramusClient.get((\"/common/educationalTimeUnits/\" + educationalTimeUnitId), fi.pyramus.rest.model.EducationalTimeUnit.class))", "fi.muikku.plugins.schooldatapyramus.rest.PyramusClient.get(java.lang.String,java.lang.Class)"], "Fixed commit": "13fb5e4b9ea2e51a664891dff4c375eca2a6b3ca", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2015-05-19T09:29:18Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == 0) { return 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4198/buggy-version/MMN12.Point.java", "BodyUseAPI": [], "Fixed commit": "e4c9f29ba0343e611d33fddeb72c7f537be8794f", "Url": "https://api.github.com/repos/eyalcohen4/intro-to-cs", "Date": "2017-04-12T14:58:02Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((accountingSituation.getPartner()) != null) { if (isInBankDetails) { authorizedBankDetails = com.axelor.inject.Beans.get(com.axelor.apps.account.service.payment.PaymentModeService.class).getCompatibleBankDetailsList(accountingSituation.getPartner().getInPaymentMode(), accountingSituation.getCompany()); }else { authorizedBankDetails = com.axelor.inject.Beans.get(com.axelor.apps.account.service.payment.PaymentModeService.class).getCompatibleBankDetailsList(accountingSituation.getPartner().getOutPaymentMode(), accountingSituation.getCompany()); } java.lang.String idList = com.axelor.inject.Beans.get(com.axelor.apps.base.service.BankDetailsService.class).getIdStringListFromCollection(authorizedBankDetails); if (idList.equals(\"\")) { return domain; } domain = (\"self.id IN (\" + idList) + \") AND self.active = true\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1602/buggy-version/axelor-account.src.main.java.com.axelor.apps.account.service.AccountingSituationServiceImpl.java", "BodyUseAPI": ["com.axelor.apps.account.db.AccountingSituation.getPartner()", "com.axelor.inject.Beans.get(com.axelor.apps.account.service.payment.PaymentModeService.class).getCompatibleBankDetailsList(accountingSituation.getPartner().getOutPaymentMode(),accountingSituation.getCompany())", "com.axelor.inject.Beans.get(com.axelor.apps.account.service.payment.PaymentModeService.class).getCompatibleBankDetailsList(accountingSituation.getPartner().getInPaymentMode(),accountingSituation.getCompany())", "com.axelor.apps.account.db.AccountingSituation.getPartner()", "accountingSituation.getPartner().getInPaymentMode()", "com.axelor.apps.account.db.AccountingSituation.getCompany()", "com.axelor.apps.account.db.AccountingSituation.getCompany()", "accountingSituation.getPartner().getOutPaymentMode()"], "Fixed commit": "cd00dfde600186f22d0ea8dd6570f54792dc4468", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2017-05-24T05:41:31Z"},
{"Line": "=>1684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codehint.exprgen.ExpressionGenerator.getDowncastType(e.getType())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (downcastType == null) downcastType = e.getValue().getJavaType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/895/buggy-version/codehint-plugin.src.codehint.exprgen.ExpressionGenerator.java", "BodyUseAPI": [], "Fixed commit": "521ecb3a1e3dd33daa75cb1393c18cc4943f1cb7", "Url": "https://api.github.com/repos/jgalenson/codehint", "Date": "2013-04-07T15:56:53Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id.equals(\"len\")) return this.getFunction(id, formalParameters.toArray(new boa.compiler.BoaType[formalParameters.size()]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6580/buggy-version/src.java.boa.compiler.SymbolTable.java", "BodyUseAPI": ["boa.compiler.SymbolTable.getFunction(java.lang.String,formalParameters.toArray(new boa.compiler.BoaType[formalParameters.size()]))"], "Fixed commit": "24f11c6d323fdecbf88389adf49ff75203d24514", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2017-12-27T04:52:58Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bound <= origin) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Bound %d must be greater than origin %d\", bound, origin)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8307/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.BaseRandom.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,long,long)"], "Fixed commit": "848b7710f524a041dfa81d07dfe5e7becdf24cc9", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-11-29T00:15:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (x == null) backend.Question.initMinID(0); else backend.Question.initMinID(java.lang.Integer.parseInt(rs.getString(1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/740/buggy-version/BrainXone.src.backend.QuizListener.java", "BodyUseAPI": [], "Fixed commit": "f21c0e44e2e3dc8514f36b459fb95ad666a53e30", "Url": "https://api.github.com/repos/kylearchie/BrainXone", "Date": "2014-03-12T00:23:36Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((prevViewId) != (currViewId)) { loadDefault(); (currViewId)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3782/buggy-version/src.main.java.com.apd.skilldb.controller.HomeController.java", "BodyUseAPI": [], "Fixed commit": "e51900f09d07ec09686426112bcdf6d7bc257f46", "Url": "https://api.github.com/repos/thirdy/skilldb", "Date": "2017-06-23T04:35:03Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialized.compareAndSet(false, true)) { this.initDiscovery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9235/buggy-version/tephra-core.src.main.java.co.cask.tephra.distributed.AbstractClientProvider.java", "BodyUseAPI": [], "Fixed commit": "eb07fe064d5cd683a06aab7ee9f0a8fa3a6b8612", "Url": "https://api.github.com/repos/StackVista/tephra", "Date": "2015-07-29T11:35:56Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connDef instanceof org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) { setAttribute(model, org.jboss.as.connector.subsystems.resourceadapters.Constants.CONNECTABLE, ((org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) (connDef)).isConnectable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7774/buggy-version/connector.src.main.java.org.jboss.as.connector.subsystems.resourceadapters.IronJacamarResourceCreator.java", "BodyUseAPI": [], "Fixed commit": "c12ae7816353f5e09502e5000a3c43fd55b77d25", "Url": "https://api.github.com/repos/kabir/wildfly", "Date": "2014-03-20T13:52:55Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params.get(\"URL_CREATED\")) != null) { org.da4.urlminimizer.plugins.StatsRequestVO vo = new org.da4.urlminimizer.plugins.StatsRequestVO(((java.lang.String) (input)), ((java.lang.String) (clientMetadata.get(\"USER_AGENT\"))), ((java.lang.String) (clientMetadata.get(\"REFERER\"))), ((java.lang.String) (clientMetadata.get(\"IP\"))), false); statQueue.add(vo); }else { org.da4.urlminimizer.plugins.NonBlockingStatsPlugin.logger.debug((\"Url not found, ignoring\" + ((java.lang.String) (input)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3503/buggy-version/UrlMinifierLibrary.src.main.java.org.da4.urlminimizer.plugins.NonBlockingStatsPlugin.java", "BodyUseAPI": [], "Fixed commit": "097122a3933c122f48902cd5c34508a6687b49fa", "Url": "https://api.github.com/repos/dblaber/urlminimizer", "Date": "2016-10-29T02:07:24Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) ((com.cntt.freemusicdownloadnow.MyApplication) (getActivity().getApplicationContext())).getMusicService().setSongs(songs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/492/buggy-version/app.src.main.java.com.cntt.freemusicdownloadnow.ui.fragment.SongListFragment.java", "BodyUseAPI": [], "Fixed commit": "e690d5ea771773786ac0b7543478a22cfb10843a", "Url": "https://api.github.com/repos/trungptdhcn/mp3onlinepro", "Date": "2016-09-26T14:45:33Z"},
{"Line": "=>2670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retry) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3624/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.java", "BodyUseAPI": [], "Fixed commit": "ef5c9b7faec2b63370875846374e37b8730421af", "Url": "https://api.github.com/repos/AfsanehR/mssql-jdbc", "Date": "2017-08-15T19:47:33Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nachricht.contains(\";\")) { inv = nachricht.split(\";\")[0]; sug = nachricht.split(\";\")[1]; s = sug.split(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1230/buggy-version/controller.recv.Controller.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "9107bb08e8c0f0783a136e80253e24dd772af245", "Url": "https://api.github.com/repos/jtwele/controller", "Date": "2015-06-29T16:41:02Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((styleManager.getDecimalPattern()) != null) { decimalPattern = styleManager.getDecimalPattern(); }else { if (((java.lang.Math.abs(value)) > 1000.0) || ((java.lang.Math.abs(value)) < 0.001)) { decimalPattern = \"0E0\"; }else { decimalPattern = \"0.###\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3228/buggy-version/xchart.src.main.java.com.xeiam.xchart.internal.chartpart.NumberFormatter.java", "BodyUseAPI": ["com.xeiam.xchart.StyleManager.getDecimalPattern()"], "Fixed commit": "4ed0bd8e58db2a63c91958b975913a3cb1df4cc6", "Url": "https://api.github.com/repos/niklaspolke/XChart", "Date": "2015-04-12T14:25:45Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intersection.isEmpty()) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4946/buggy-version/gs-cv.src.main.java.org.genericsystem.cv.utils.CosineSimilarity.java", "BodyUseAPI": [], "Fixed commit": "84b88eacf12464fb23a7a549b1877ee57e2f917e", "Url": "https://api.github.com/repos/genericsystem/genericsystem2015", "Date": "2017-10-20T10:27:50Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offer.isOfferCreated()) { throw new java.lang.IllegalStateException((\"Offer is already created: \" + offer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/294/buggy-version/realm.realm-library.src.objectServer.java.io.realm.PermissionManager.java", "BodyUseAPI": [], "Fixed commit": "9d5da283b132f795775c61c51e2bb3be9a9dbbbb", "Url": "https://api.github.com/repos/realm/realm-java", "Date": "2017-06-28T09:30:54Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((edge.graphStore) != null) && (edge.hasDynamicWeight())) { serialize(out, edge.getWeight()); }else { serialize(out, GraphStoreConfiguration.DEFAULT_EDGE_WEIGHT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7615/buggy-version/store.src.main.java.org.gephi.graph.impl.Serialization.java", "BodyUseAPI": ["org.gephi.graph.impl.Serialization.serialize(java.io.DataOutput,edge.getWeight())", "org.gephi.graph.impl.EdgeImpl.getWeight()"], "Fixed commit": "25f328a3e800ed64f698ee0fd25083d2bcd34d37", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-12-19T14:33:28Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((configurationContext) != null) { clusterId = configurationContext.getClusterId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2818/buggy-version/engine.src.main.java.com.stratio.decision.service.StreamOperationServiceWithoutMetrics.java", "BodyUseAPI": [], "Fixed commit": "0c3b584dbe9459ee9ce2ff7b4f17b554cc42c1d7", "Url": "https://api.github.com/repos/Stratio/Decision", "Date": "2016-01-19T13:20:18Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hsyndicate.fs.SyndicateFSPath.getAncestors()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ancestors != null) { for (hsyndicate.fs.SyndicateFSPath ancestor : ancestors) { if (!(exists(ancestor))) { mkdir(ancestor); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3604/buggy-version/src.hsyndicate.fs.AHSyndicateFileSystemBase.java", "BodyUseAPI": [], "Fixed commit": "0324f1c4cf9b861560993cdcce9e178a5109049e", "Url": "https://api.github.com/repos/syndicate-storage/H-Syndicate", "Date": "2016-08-25T10:28:32Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (webappMetadata.getWebappFile().equals(name)) { return webappMetadata; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9089/buggy-version/src.main.java.com.tsystems.cargo.container.wso2.deployer.internal.impl.WSO2Carbon4xWarAdminService.java", "BodyUseAPI": [], "Fixed commit": "881e52899f48fd8ce3d3da51fbbdc39bb7e7f186", "Url": "https://api.github.com/repos/hschott/cargo-wso2-container", "Date": "2015-11-19T20:26:19Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (decimals == 0) { return \"\" + ((int) (ret)); }else { return \"\" + ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1976/buggy-version/src.pneumaticCraft.common.util.PneumaticCraftUtils.java", "BodyUseAPI": [], "Fixed commit": "7a8339860575e17a69a153a5fca6c05aa38400cb", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-07-29T14:02:11Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pinServerProcess != null) { if (pinServerProcess.isAlive()) { break; } pinServerProcess.destroyForcibly(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6355/buggy-version/MemoryAnalyzer.src.crossplatform.Help.java", "BodyUseAPI": ["java.lang.Process.isAlive()", "java.lang.Process.destroyForcibly()"], "Fixed commit": "f226445c70f2f438eee57b1a341bbb396eacb88d", "Url": "https://api.github.com/repos/dimagerasimov/MemoryAnalyzer", "Date": "2017-09-11T18:50:15Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (stringValue.contains(\"\\\\\\'\")) { stringValue = stringValue.replace(\"\\\\\\'\", \"'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2305/buggy-version/stack.corepersistence.queryindex.src.main.java.org.apache.usergrid.persistence.index.impl.EsQueryVistor.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "89178326debbd82660f9f2691b3b8cf06d847d4a", "Url": "https://api.github.com/repos/apache/usergrid", "Date": "2017-03-24T06:10:34Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isVisible())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3517/buggy-version/wear.src.main.java.com.shaibarack.rickrollwatchface.WatchFaceService.java", "BodyUseAPI": [], "Fixed commit": "5f57ea267356e23055984c6eff61442c681fb085", "Url": "https://api.github.com/repos/shaybarak/RickrollWatchFace", "Date": "2015-01-20T02:55:52Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sem8.ds.services.NodeService.searchFileServiceWithHopCount(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((fileList != null) && (!(fileList.isEmpty()))) receiveSearchResponse(fileList, hop);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3612/buggy-version/src.main.java.org.sem8.ds.services.NodeService.java", "BodyUseAPI": ["org.sem8.ds.services.NodeService.receiveSearchResponse(java.util.Map<java.lang.String, java.util.List<org.sem8.ds.services.NodeResource>>,int)"], "Fixed commit": "90a0e2b6d80c0dec011b166c3ed30452f889885c", "Url": "https://api.github.com/repos/Amila1991/DS_Project", "Date": "2017-02-02T20:36:36Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rotator.getAcrs().getPreviousResult(action.getBuild(),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (crba != null) { listArg1 = crba.getConfiguration().getList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4959/buggy-version/src.main.java.net.praqma.jenkins.configrotator.scm.clearcaseucm.ClearCaseUCMConfiguration.java", "BodyUseAPI": ["net.praqma.jenkins.configrotator.scm.clearcaseucm.ConfigurationRotatorBuildAction.getConfiguration()", "crba.getConfiguration().getList()"], "Fixed commit": "a20a2e0f2d4aab7ed268678f132f8290bb3bb98d", "Url": "https://api.github.com/repos/jenkinsci/config-rotator-plugin", "Date": "2015-08-27T09:27:25Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (principal == null) { java.lang.System.out.println(\"No value passed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3223/buggy-version/src.main.java.com.catalyst.springboot.webservices.SecurityWebService.java", "BodyUseAPI": [], "Fixed commit": "a7c0e9cd9b11f3d94bf188656abd79225fcb486f", "Url": "https://api.github.com/repos/rhanberrycatalyst/expensesecurityapp", "Date": "2016-02-16T22:47:55Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (message.contains(\"Permissions error\")) { throw new org.springframework.social.InsufficientPermissionException(); }else if (message.contains(\"The user hasn't authorized the application to perform this action\")) { throw new org.springframework.social.InsufficientPermissionException(); }else { throw new org.springframework.social.OperationNotPermittedException(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/494/buggy-version/spring-social-facebook.src.main.java.org.springframework.social.facebook.api.impl.FacebookErrorHandler.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "ff3b11046534e4774680264f4a24b3898ffa14a1", "Url": "https://api.github.com/repos/theigl/spring-social-facebook", "Date": "2012-05-08T16:14:51Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.openerp.support.OEUser.current(mContext)) == null) { android.widget.Toast.makeText(mContext, \"No Account Found\", Toast.LENGTH_LONG).show(); finish(); }else { initDBs(); initActionbar(); handleIntent(); initControls(); checkForContact(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8164/buggy-version/src.com.openerp.addons.message.MessageComposeActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(mContext, \"No Account Found\", Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_LONG)"], "Fixed commit": "426f3e5592b8a7fef425da7b3510f8368dc31437", "Url": "https://api.github.com/repos/Devang-Targetint/version_2", "Date": "2014-04-07T09:41:45Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contains(uuid)) com.minegusta.mgracesredone.races.skilltree.abilities.perks.enderborn.EnderShield.shields.remove(uuid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9170/buggy-version/src.main.java.com.minegusta.mgracesredone.races.skilltree.abilities.perks.enderborn.EnderShield.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Integer>.remove(java.lang.String)"], "Fixed commit": "b5879bef37e179ea084d307fad6c937c8ba7f961", "Url": "https://api.github.com/repos/janie177/MGRacesRedone", "Date": "2015-06-05T01:46:05Z"},
{"Line": "=>1147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) type = DatType.PART;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6390/buggy-version/src.org.nschmidt.ldparteditor.data.LibraryManager.java", "BodyUseAPI": [], "Fixed commit": "778b6d81827e4cb6482e5aef6e170ce6633112b2", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-11-26T17:48:23Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) type = DatType.PART;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6390/buggy-version/src.org.nschmidt.ldparteditor.data.LibraryManager.java", "BodyUseAPI": [], "Fixed commit": "778b6d81827e4cb6482e5aef6e170ce6633112b2", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-11-26T17:48:23Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((googleMap) != null) { googleMap.getUiSettings().setZoomControlsEnabled(set.contains(java.lang.String.valueOf(MapControls.ZOOM))); googleMap.getUiSettings().setCompassEnabled(set.contains(java.lang.String.valueOf(MapControls.COMPASS))); googleMap.getUiSettings().setIndoorLevelPickerEnabled(set.contains(java.lang.String.valueOf(MapControls.LEVEL))); googleMap.getUiSettings().setMapToolbarEnabled(set.contains(java.lang.String.valueOf(MapControls.TOOLBAR))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7526/buggy-version/app.src.main.java.nl.rsdt.japp.jotial.maps.MapManager.java", "BodyUseAPI": [], "Fixed commit": "ab7e1e4fac2792eb91f7bfda9eec1974ce81d425", "Url": "https://api.github.com/repos/RSDT/Japp16", "Date": "2016-10-10T19:15:35Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success != (-1)) { return obj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2026/buggy-version/src.DBManager.DBEventsQManager.java", "BodyUseAPI": [], "Fixed commit": "512d9e4911c68e66c84933a63c7dded56513d26c", "Url": "https://api.github.com/repos/CICS525-project/NSync-client", "Date": "2014-08-06T20:24:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (patient == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8858/buggy-version/similarity-genotype-view.src.main.java.org.phenotips.data.similarity.genotype.DefaultPatientGenotypeManager.java", "BodyUseAPI": [], "Fixed commit": "26fb412ab63f9a42ca181f5143e18f86064d9f2a", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.genotype) != null) { json.put(\"genesStatus\", this.genotype.getGenesStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8858/buggy-version/matching-notification-api.src.main.java.org.phenotips.matchingnotification.match.internal.DefaultPatientInMatch.java", "BodyUseAPI": [], "Fixed commit": "26fb412ab63f9a42ca181f5143e18f86064d9f2a", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useSpeedForColor) { colorIndex = fd.getSpeedTypeIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1239/buggy-version/src.ucar.unidata.idv.control.FlowPlanViewControl.java", "BodyUseAPI": [], "Fixed commit": "cfe5793a7c6fa70c72221cdfcd8b1cb98bbf025a", "Url": "https://api.github.com/repos/mhiley/IDV", "Date": "2015-02-09T23:47:14Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_resultsExhibited) == 3) checkResults();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1217/buggy-version/SlotMachineSim.src.slotmachinesim.SlotMachine.java", "BodyUseAPI": [], "Fixed commit": "3253b3dd5066add69bdd06e2dbc8d55b48cb94f2", "Url": "https://api.github.com/repos/DarkStarDevs/SlotMachineSim", "Date": "2014-01-11T19:59:45Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((experimentFilter) != null) { getContentResolver().delete(ExperimentsProvider.CONTENT_URI, experimentFilter, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7128/buggy-version/app.src.main.java.com.scuddertechnologies.pheoc.Experiment.java", "BodyUseAPI": [], "Fixed commit": "487110513a8f2b93a7e01159b262f6aee47bae67", "Url": "https://api.github.com/repos/TheScudMissile/PHEOC", "Date": "2016-07-22T00:47:04Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.ow2.choreos.TravelAgencyService.endpoint) == null) { logger.error(org.ow2.choreos.TravelAgencyService.AIRLINE_NOT_SET_ERROR_MESSAGE); return org.ow2.choreos.TravelAgencyService.AIRLINE_NOT_SET_ERROR_MESSAGE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2647/buggy-version/samples.EnactmentEngineServices.src.main.java.org.ow2.choreos.TravelAgencyService.java", "BodyUseAPI": [], "Fixed commit": "302b090e3c83f1586c3266fb05361bd1a8426bc1", "Url": "https://api.github.com/repos/choreos/choreos_middleware", "Date": "2013-01-16T10:29:30Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field.getName().equals(\"$change\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/934/buggy-version/onsite.src.main.java.com.toolset.dataManager.db.DBHelper.java", "BodyUseAPI": [], "Fixed commit": "a5060e284d8af0e0e505e14433d14d921b0c62e2", "Url": "https://api.github.com/repos/tmacorigin/hanwrob", "Date": "2016-10-31T02:56:19Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stringBuilder.length()) > 0) { stringBuilder.deleteCharAt(((stringBuilder.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4114/buggy-version/plugins.com.aptana.editor.php.src.com.aptana.editor.php.internal.parser.nodes.NodeBuildingVisitor.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "67dc6ac518ca4f93fd7bf3978c8b59ae88f63406", "Url": "https://api.github.com/repos/aptana/studio3-php", "Date": "2011-07-28T22:35:41Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org2.eclipse.php.internal.core.ast.nodes.NamespaceDeclaration.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (name == null) { segments = java.util.Collections.emptyList(); }else { segments = name.segments(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4114/buggy-version/plugins.com.aptana.editor.php.src.com.aptana.editor.php.internal.parser.nodes.NodeBuildingVisitor.java", "BodyUseAPI": ["org2.eclipse.php.internal.core.ast.nodes.NamespaceName.segments()"], "Fixed commit": "67dc6ac518ca4f93fd7bf3978c8b59ae88f63406", "Url": "https://api.github.com/repos/aptana/studio3-php", "Date": "2011-07-28T22:35:41Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.freeshr.events.EncounterEvent>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 1) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1954/buggy-version/shr.src.main.java.org.freeshr.interfaces.encounter.ws.CatchmentEncounterController.java", "BodyUseAPI": [], "Fixed commit": "028bbc41676fa289ae84c6422aa9629cbcd55198", "Url": "https://api.github.com/repos/SharedHealth/FreeSHR", "Date": "2015-12-08T20:52:26Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.minecraftdimensions.bungeesuitespawn.managers.SpawnManager.HAS_SPAWNS)) { org.bukkit.Bukkit.getScheduler().runTaskLaterAsynchronously(BungeeSuiteSpawn.INSTANCE, new java.lang.Runnable() { @java.lang.Override public void run() { if (!(com.minecraftdimensions.bungeesuitespawn.managers.SpawnManager.HAS_SPAWNS)) { com.minecraftdimensions.bungeesuitespawn.managers.SpawnManager.getSpawns(); com.minecraftdimensions.bungeesuitespawn.managers.SpawnManager.HAS_SPAWNS = true; } } }, 10L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8753/buggy-version/src.main.java.com.minecraftdimensions.bungeesuitespawn.listeners.SpawnListener.java", "BodyUseAPI": ["org.bukkit.Bukkit.getScheduler().runTaskLaterAsynchronously(BungeeSuiteSpawn.INSTANCE,java.lang.Runnable,long)"], "Fixed commit": "11b01127b32171af411b527aec72280d25e3a2da", "Url": "https://api.github.com/repos/Bloodsplat/BungeeSuiteSpawn", "Date": "2013-12-05T22:53:35Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rule.getMultilineLabelSeq()) != null) { command.add(\" -L \", rule.getMultilineLabelSeq()); }else { command.add(\" -L \", \"none\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4944/buggy-version/core.src.com.cloud.agent.resource.virtualnetwork.VirtualRoutingResource.java", "BodyUseAPI": ["com.cloud.agent.api.to.StaticNatRuleTO.getMultilineLabelSeq()", "com.cloud.utils.script.Script.add(java.lang.String,rule.getMultilineLabelSeq())"], "Fixed commit": "75fee3d82957c2f8956626113479878b55d7a366", "Url": "https://api.github.com/repos/vispractice/cloudstack", "Date": "2015-09-11T10:38:05Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.nio.file.Files.exists(real.estate.io.HouseFile.jsonFileLocation, java.nio.file.LinkOption.NOFOLLOW_LINKS)) { try (java.io.BufferedReader br = java.nio.file.Files.newBufferedReader(real.estate.io.HouseFile.jsonFileLocation, real.estate.io.HouseFile.charSet)) { propertyList = real.estate.io.HouseFile.gson.fromJson(br, real.estate.dao.impl.SortedList.class); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5932/buggy-version/src.real.estate.io.HouseFile.java", "BodyUseAPI": ["java.nio.file.Files.newBufferedReader(java.nio.file.Path,java.nio.charset.Charset)"], "Fixed commit": "df8f8bd00cf95b04a482c6950ce7cbd06d01ab27", "Url": "https://api.github.com/repos/wombat-ucd/Real-Estate", "Date": "2015-04-02T19:53:48Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFromPersonnalProfile) { android.view.View view = inflater.inflate(R.layout.fragment_myrecipes_header, container, false); view.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { com.m6.gocook.biz.recipe.recipe.RecipeEditFragment.startInActivity(getActivity(), RecipeEditFragment.Mode.RECIPE_NEW, \"\"); } }); return view; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1803/buggy-version/GoCook.src.com.m6.gocook.biz.recipe.my.MyRecipesFragment.java", "BodyUseAPI": [], "Fixed commit": "60079847ff6ad170824b29e57dbacd1494266646", "Url": "https://api.github.com/repos/yang-chao/GoCook_Android", "Date": "2013-07-20T11:39:02Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(mErrorDescription)) { this.mErrorDescription = obj.optString(\"msg\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/461/buggy-version/support.src.main.java.com.hyena.framework.datacache.BaseObject.java", "BodyUseAPI": [], "Fixed commit": "73c0cd9724dd7e00e03ad7ffdd712f1dd4c1c231", "Url": "https://api.github.com/repos/zhaozhu365/AndroidSupport", "Date": "2016-09-30T04:02:11Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (card.getCardType().equalsIgnoreCase(\"Discover\")) { throw new java.lang.Exception(\"Invalid card, we don't take Discover yet!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3468/buggy-version/PayPalAuthService.versions.step4.com.appdynamics.sample.service.PaypalServices.java", "BodyUseAPI": [], "Fixed commit": "f452e1480ad0a7ae6c4f11a530871026cfbab6e5", "Url": "https://api.github.com/repos/sturtesm/appdynamics-paypal-integration-auth-service", "Date": "2015-08-04T16:46:03Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (card.getCardType().equalsIgnoreCase(\"Discover\")) { throw new java.lang.Exception(\"Invalid card, we don't take Discover yet!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3468/buggy-version/PayPalAuthService.src.main.java.com.appdynamics.sample.service.PaypalServices.java", "BodyUseAPI": [], "Fixed commit": "f452e1480ad0a7ae6c4f11a530871026cfbab6e5", "Url": "https://api.github.com/repos/sturtesm/appdynamics-paypal-integration-auth-service", "Date": "2015-08-04T16:46:03Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((auth == null) || ((auth.length()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/117/buggy-version/src.main.java.org.vadel.common.yandexdisk.YandexDiskApi.java", "BodyUseAPI": [], "Fixed commit": "368ae7d96265dac567968594464561425f2f4e0f", "Url": "https://api.github.com/repos/vadia/yandexdisk", "Date": "2015-08-16T07:05:45Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MODE) == 1) { finish(); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8320/buggy-version/Journee.app.src.main.java.com.journee.activities.InviteFriendsActivity.java", "BodyUseAPI": [], "Fixed commit": "4c93cea1c031f5b242c72e96d81259e1eba16962", "Url": "https://api.github.com/repos/alon-itzhaki/tau_workshop_repo", "Date": "2016-05-23T19:59:47Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MODE) == 2) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8320/buggy-version/Journee.app.src.main.java.com.journee.activities.InviteFriendsActivity.java", "BodyUseAPI": [], "Fixed commit": "4c93cea1c031f5b242c72e96d81259e1eba16962", "Url": "https://api.github.com/repos/alon-itzhaki/tau_workshop_repo", "Date": "2016-05-23T19:59:47Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (compound.hasKey(\"lastHadCustomer\")) { this.lastHadCustomer = compound.getBoolean(\"lastHadCustomer\"); }else { this.lastHadCustomer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4368/buggy-version/src.main.java.flaxbeard.steamcraft.entity.ExtendedPropertiesVillager.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getBoolean(java.lang.String)"], "Fixed commit": "f6bf20d8497eb8dff641fe61aaeef27dbafc61b0", "Url": "https://api.github.com/repos/Esteemed-Innovation/Esteemed-Innovation", "Date": "2015-12-28T00:45:14Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lastHadCustomer) != null) { compound.setBoolean(\"lastHadCustomer\", this.lastHadCustomer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4368/buggy-version/src.main.java.flaxbeard.steamcraft.entity.ExtendedPropertiesVillager.java", "BodyUseAPI": [], "Fixed commit": "f6bf20d8497eb8dff641fe61aaeef27dbafc61b0", "Url": "https://api.github.com/repos/Esteemed-Innovation/Esteemed-Innovation", "Date": "2015-12-28T00:45:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2712/buggy-version/code.src.main.java.model.BoatNode.java", "BodyUseAPI": [], "Fixed commit": "26f415c63f1a3ca093329f52340bb39f4c9d14f5", "Url": "https://api.github.com/repos/1DV607/workshop-2", "Date": "2017-10-02T12:44:58Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2712/buggy-version/code.src.main.java.model.MemberNode.java", "BodyUseAPI": [], "Fixed commit": "26f415c63f1a3ca093329f52340bb39f4c9d14f5", "Url": "https://api.github.com/repos/1DV607/workshop-2", "Date": "2017-10-02T12:44:58Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newSample == true) thePOC.setPrimaryStatus(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1978/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.sample.SampleBO.java", "BodyUseAPI": [], "Fixed commit": "f2901bc6e12907ebb3b720868dd112f77899f770", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-08-25T16:27:21Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (streetName2 != null) { streetName2 = streetName2.replaceAll(\" \", \"+\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6327/buggy-version/app.services.TrafikLabService.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "71a21786469b7b94bf9d1db8371ef440cf5fc9f3", "Url": "https://api.github.com/repos/simpa2k/PVT-REST-API", "Date": "2017-05-30T11:57:44Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (streetName1 != null) { streetName1 = streetName1.replaceAll(\" \", \"+\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6327/buggy-version/app.services.TrafikLabService.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "71a21786469b7b94bf9d1db8371ef440cf5fc9f3", "Url": "https://api.github.com/repos/simpa2k/PVT-REST-API", "Date": "2017-05-30T11:57:44Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (appenderClass == null) { throw new java.io.IOException((\"Undefined appender handler for \" + (meta.getDataFormat()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/531/buggy-version/tajo-storage.tajo-storage-common.src.main.java.org.apache.tajo.storage.Tablespace.java", "BodyUseAPI": [], "Fixed commit": "3fbb4da3881ac507c4093dcf7c184b963fe7482d", "Url": "https://api.github.com/repos/jihoonson/tajo", "Date": "2016-06-01T06:12:47Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ctx.aliasSet.contains(col.getName()))) { org.apache.tajo.plan.rewrite.BaseSchemaBuildPhase.Processor.NameRefInSelectListNormalizer.normalize(ctx.planContext, col); org.apache.tajo.util.TUtil.putToNestedList(ctx.projectColumns, col.getQualifier(), col); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/531/buggy-version/tajo-plan.src.main.java.org.apache.tajo.plan.rewrite.SelfDescSchemaBuildPhase.java", "BodyUseAPI": ["org.apache.tajo.plan.rewrite.BaseSchemaBuildPhase.Processor.NameRefInSelectListNormalizer.normalize(org.apache.tajo.plan.LogicalPlanner.PlanContext,org.apache.tajo.plan.rewrite.ColumnReferenceExpr)", "org.apache.tajo.util.TUtil.putToNestedList(java.util.Map<java.lang.String, java.util.List<org.apache.tajo.plan.rewrite.ColumnReferenceExpr>>,col.getQualifier(),org.apache.tajo.plan.rewrite.ColumnReferenceExpr)", "org.apache.tajo.plan.rewrite.ColumnReferenceExpr.getQualifier()"], "Fixed commit": "3fbb4da3881ac507c4093dcf7c184b963fe7482d", "Url": "https://api.github.com/repos/jihoonson/tajo", "Date": "2016-06-01T06:12:47Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((clusterSelection) == null) clusterSelection = owner.getClusterSelectionFactory().newInstanceOfDefaultClass();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2741/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "220c13d86370161fd4eaccee652c797dc3eb6dd8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-14T20:44:37Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (db != null) { final java.lang.String dbClusterSelection = db.getStorage().getConfiguration().getClusterSelection(); if (dbClusterSelection != null) clusterSelection = owner.getClusterSelectionFactory().newInstance(dbClusterSelection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2741/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "220c13d86370161fd4eaccee652c797dc3eb6dd8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-14T20:44:37Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btAdapter) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2716/buggy-version/src.com.tware.anexter.bluetooth.java", "BodyUseAPI": [], "Fixed commit": "6167cb092179b7f03dc0f7cbc5f8e8cf5e67da0c", "Url": "https://api.github.com/repos/Tody-Guo/aNexter", "Date": "2012-10-31T23:55:05Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btAdapter) != null) { btAdapter.startDiscovery(); foundBTNum = 0; android.widget.Toast.makeText(getApplicationContext(), \"\u5f00\u59cb\u91cd\u65b0\u641c\u7d22\u84dd\u7259\u8bbe\u5907\u2026\u2026\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(getApplicationContext(), \"\u672c\u673a\u6ca1\u6709\u84dd\u7259\u6a21\u7ec4\u5b58\u5728\u2026\u2026\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2716/buggy-version/src.com.tware.anexter.bluetooth.java", "BodyUseAPI": [], "Fixed commit": "6167cb092179b7f03dc0f7cbc5f8e8cf5e67da0c", "Url": "https://api.github.com/repos/Tody-Guo/aNexter", "Date": "2012-10-31T23:55:05Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btAdapter) != null) { btAdapter.startDiscovery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2716/buggy-version/src.com.tware.anexter.bluetooth.java", "BodyUseAPI": [], "Fixed commit": "6167cb092179b7f03dc0f7cbc5f8e8cf5e67da0c", "Url": "https://api.github.com/repos/Tody-Guo/aNexter", "Date": "2012-10-31T23:55:05Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((projectionValue instanceof com.orientechnologies.orient.core.record.impl.ODocument) && (!(((com.orientechnologies.orient.core.record.impl.ODocument) (projectionValue)).getIdentity().isPersistent()))) { iValue.field(projection.getKey(), projectionValue, OType.EMBEDDED); }else iValue.field(projection.getKey(), projectionValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6548/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.ORuntimeResult.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,java.lang.Object)", "com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,java.lang.Object,OType.EMBEDDED)"], "Fixed commit": "0db24bd1abe6f5405ed3efb347ccf25fb46274e9", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-12-22T14:47:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.rulesengine.engine.RulesEngine.getRuleObject(orderSetDrugRow.getRule())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rule == null) { org.openmrs.module.rulesengine.rule.CSVBasedDosageRule.log.error((\"Rule implementation not found for \" + (orderSetDrugRow.getRule()))); throw new java.lang.Exception((\"Rule implementation not found for \" + (orderSetDrugRow.getRule()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6644/buggy-version/api.src.main.java.org.openmrs.module.rulesengine.rule.CSVBasedDosageRule.java", "BodyUseAPI": [], "Fixed commit": "e6dbb531219b4b09981c7d635babc6a4b28e216d", "Url": "https://api.github.com/repos/Bahmni/openmrs-module-rulesengine", "Date": "2016-09-02T11:53:09Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ttManager.isEnabled()) { ttManager.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5941/buggy-version/GetThere.src.EndUserGUI.java", "BodyUseAPI": ["javax.swing.ToolTipManager.setEnabled(boolean)"], "Fixed commit": "c0355b7d4c152c33fca17a9d6e246c72213fda21", "Url": "https://api.github.com/repos/jatouma/IterationRepostory", "Date": "2015-12-08T03:54:44Z"},
{"Line": "=>817", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((historicalNodes) != null) { if ((historicalNodes.size()) > 0) { for (int i = 0; i < (historicalNodes.size()); i++) { if (((x - (historicalNodes.get(i).getX())) < 6) && ((y - (historicalNodes.get(i).getY())) < 6)) { if ((((historicalNodes.get(i).getX()) - x) < 6) && (((historicalNodes.get(i).getY()) - y) < 6)) { return historicalNodes.get(i); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5941/buggy-version/GetThere.src.EndUserGUI.java", "BodyUseAPI": [], "Fixed commit": "c0355b7d4c152c33fca17a9d6e246c72213fda21", "Url": "https://api.github.com/repos/jatouma/IterationRepostory", "Date": "2015-12-08T03:54:44Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ttManager) == null) { ttManager = javax.swing.ToolTipManager.sharedInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5941/buggy-version/GetThere.src.EndUserGUI.java", "BodyUseAPI": [], "Fixed commit": "c0355b7d4c152c33fca17a9d6e246c72213fda21", "Url": "https://api.github.com/repos/jatouma/IterationRepostory", "Date": "2015-12-08T03:54:44Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) { index = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9167/buggy-version/src.main.java.uk.ac.ebi.pride.spectracluster.cdf.CumulativeDistributionFunction.java", "BodyUseAPI": [], "Fixed commit": "50cdcc9c08fa034ce2d10ef762e7381ffdff66fb", "Url": "https://api.github.com/repos/spectra-cluster/spectra-cluster", "Date": "2016-03-02T06:47:01Z"},
{"Line": "=>1450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expr.isFunction()) { return processFunction(expr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5524/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelProcessor.java", "BodyUseAPI": ["com.ge.research.sadl.jena.JenaBasedSadlModelProcessor.processFunction(com.ge.research.sadl.sADL.Name)"], "Fixed commit": "3bc39320fd0553d9d3e4179aaec85018e7ab9ece", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-05-24T11:32:18Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((devDM.getRowCount()) > 0) { devDM.removeRow(((devDM.getRowCount()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4540/buggy-version/src.View.TaskView.java", "BodyUseAPI": ["javax.swing.table.DefaultTableModel.getRowCount()", "javax.swing.table.DefaultTableModel.removeRow(int)"], "Fixed commit": "b2bfb886dce78b734c9fdde4a850078eb28fd651", "Url": "https://api.github.com/repos/TER-2013-2014-estimation-prj/TER", "Date": "2014-06-01T21:22:24Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduleData.getType()) == (SubstitutionSchedule.Type.TEACHER)) { throw new me.vertretungsplan.exception.CredentialInvalidException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8784/buggy-version/parser.src.main.java.me.vertretungsplan.parser.SchoolJoomlaParser.java", "BodyUseAPI": [], "Fixed commit": "46ab06555a8357b9d544f6354f7532f15b79629b", "Url": "https://api.github.com/repos/vertretungsplanme/substitution-schedule-parser", "Date": "2017-09-01T18:45:02Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.vertretungsplan.parser.SchoolJoomlaParser.httpGet(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(json.startsWith(\"{\"))) && (json.contains(\"{\"))) { json = json.substring(json.indexOf(\"{\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8784/buggy-version/parser.src.main.java.me.vertretungsplan.parser.SchoolJoomlaParser.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "46ab06555a8357b9d544f6354f7532f15b79629b", "Url": "https://api.github.com/repos/vertretungsplanme/substitution-schedule-parser", "Date": "2017-09-01T18:45:02Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { com.example.alex.pluggedin.fragments.ShowReviewFragment fragment = com.example.alex.pluggedin.fragments.ShowReviewFragment.newInstance(idReview); getFragmentManager().beginTransaction().add(R.id.showReviewFragmentContainer, fragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6486/buggy-version/app.src.main.java.com.example.alex.pluggedin.ShowReviewActivity.java", "BodyUseAPI": [], "Fixed commit": "8b7ab1e887fb9fa0b8b1cf9eb62a52637c0b55f7", "Url": "https://api.github.com/repos/Algresh/PluggedinAndroid", "Date": "2016-07-07T16:41:17Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { com.example.alex.pluggedin.fragments.ShowArticleFragment fragment = com.example.alex.pluggedin.fragments.ShowArticleFragment.newInstance(idArticle); getFragmentManager().beginTransaction().add(R.id.showArticleFragmentContainer, fragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6486/buggy-version/app.src.main.java.com.example.alex.pluggedin.ShowArticleActivity.java", "BodyUseAPI": [], "Fixed commit": "8b7ab1e887fb9fa0b8b1cf9eb62a52637c0b55f7", "Url": "https://api.github.com/repos/Algresh/PluggedinAndroid", "Date": "2016-07-07T16:41:17Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.sangupta.jerry.util.AssertUtils.isEmpty(e.downloadUrl)) { apiUrls.add((base + (e.path))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5999/buggy-version/src.main.java.com.sangupta.neo.helper.GithubRipper.java", "BodyUseAPI": ["java.util.Queue<java.lang.String>.add(java.lang.String)"], "Fixed commit": "8f913be64b8808e5c8706dc71d136a26edcad3cd", "Url": "https://api.github.com/repos/sangupta/neo", "Date": "2016-05-23T06:43:39Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((request.getParameter((\"monthrange\" + extrachar))) != null) { java.lang.String mRange = request.getParameter((\"monthrange\" + extrachar)); java.lang.String strn = request.getParameter((\"strength\" + extrachar)); java.lang.String dsText = request.getParameter((\"text\" + extrachar)); if (!(mRange.trim().equals(\"\"))) { ds.add(new oscar.oscarEncounter.oscarMeasurements.util.Recommendation((\"\" + (h.get(\"measurement_type\"))), mRange, strn, dsText)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2286/buggy-version/src.main.java.org.oscarehr.common.web.FlowSheetCustomAction.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "f3b11222ac5250cbf4e19abe45a3183609e389c0", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2013-09-10T18:45:14Z"},
{"Line": "=>1038", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != value) { this.progressable = ((org.apache.hadoop.util.Progressable) (value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6336/buggy-version/warp10.src.main.java.io.warp10.script.MemoryWarpScriptStack.java", "BodyUseAPI": [], "Fixed commit": "5a5ead25d131503507ce6fb1d25084e5cc032fb1", "Url": "https://api.github.com/repos/morind/warp10-platform-dmn", "Date": "2016-06-09T10:55:19Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getString(((\"groups.\" + key) + \".default-gamemode\"))) != null) { gameMode = org.bukkit.GameMode.valueOf(config.getString(((\"groups.\" + key) + \".default-gamemode\")).toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8389/buggy-version/src.main.java.me.gnat008.perworldinventory.groups.GroupManager.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.getString(java.lang.String)", "config.getString(((\"groups.\" + key) + \".default-gamemode\")).toUpperCase()", "org.bukkit.GameMode.valueOf(config.getString(((\"groups.\" + key) + \".default-gamemode\")).toUpperCase())"], "Fixed commit": "4a04f8ddf1957a8c75632f6b9c70db0532d42da7", "Url": "https://api.github.com/repos/ljacqu/PerWorldInventory", "Date": "2016-06-26T04:13:14Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (teamAreas.containsKey(teamId)) return new java.util.ArrayList(teamAreas.get(teamId)); else return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5208/buggy-version/jdeeco-simulation-demo.src.cz.cuni.mff.d3s.jdeeco.simulation.demo.AreaNetworkRegistry.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<cz.cuni.mff.d3s.jdeeco.simulation.demo.Area>>.get(java.lang.String)"], "Fixed commit": "a31c33a18936706f4bc130036ab13c128014edec", "Url": "https://api.github.com/repos/d3scomp/JDEECo", "Date": "2014-04-06T13:24:10Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((fileLock) == null) { fc.close(); raf.close(); throw org.zoodb.jdo.internal.util.DBLogger.newUser((\"This file is in use by another process: \" + dbPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1726/buggy-version/src.org.zoodb.jdo.internal.server.StorageRootFile.java", "BodyUseAPI": [], "Fixed commit": "834566d701cafeb9bf58ae413b92abd3af0e6a8c", "Url": "https://api.github.com/repos/tzaeschke/zoodb", "Date": "2014-01-23T14:39:03Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof java.lang.reflect.InvocationTargetException) { java.lang.Throwable t2 = e.getCause(); if (t2 instanceof javax.jdo.JDOUserException) { throw ((javax.jdo.JDOUserException) (t2)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1726/buggy-version/src.org.zoodb.jdo.internal.server.DiskAccessOneFile.java", "BodyUseAPI": ["java.lang.Exception.getCause()"], "Fixed commit": "834566d701cafeb9bf58ae413b92abd3af0e6a8c", "Url": "https://api.github.com/repos/tzaeschke/zoodb", "Date": "2014-01-23T14:39:03Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.uzh.ifi.feedback.library.rest.Service.ServiceBase<T>.CheckId(object.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!res) throw new javassist.NotFoundException(((\"Object with ID '\" + (object.getId())) + \"' not found\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/220/buggy-version/server_library.src.ch.uzh.ifi.feedback.library.rest.validation.ValidatorBase.java", "BodyUseAPI": [], "Fixed commit": "66d85205dbea4900e11629654792fb48ef664138", "Url": "https://api.github.com/repos/supersede-project/monitor_feedback", "Date": "2016-09-01T15:34:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((object.getId()) == null) throw new java.lang.UnsupportedOperationException(\"ID on object must be set for update\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/220/buggy-version/server_library.src.ch.uzh.ifi.feedback.library.rest.validation.ValidatorBase.java", "BodyUseAPI": [], "Fixed commit": "66d85205dbea4900e11629654792fb48ef664138", "Url": "https://api.github.com/repos/supersede-project/monitor_feedback", "Date": "2016-09-01T15:34:02Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeCategory) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7062/buggy-version/app.src.main.java.dat255.refugeemap.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1ea50893e7cfc903ee0bfa5807d84ab0f92fa068", "Url": "https://api.github.com/repos/drualsk/RefugeeMap", "Date": "2016-10-20T17:31:24Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((elements.size()) == 1) { writeParser.convert(currentSheet.get(), currentRowNum.getAndAdd(1), elements.get(0)); }else { writeParser.convert(currentSheet.get(), currentRowNum.getAndAdd(elements.size()), elements, mergedRangeIndexes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7254/buggy-version/src.main.java.com.github.fnwib.write.ExcelWriterImpl.java", "BodyUseAPI": ["com.github.fnwib.write.WriteParser<T>.convert(currentSheet.get(),int,T)", "java.util.List<T>.size()", "java.util.List<T>.get(int)", "com.github.fnwib.write.WriteParser<T>.convert(currentSheet.get(),int,java.util.List<T>,java.util.List<java.lang.Integer>)", "java.util.concurrent.atomic.AtomicInteger.getAndAdd(int)"], "Fixed commit": "ee0e7177c13143c76b96eab4a5264b6731f11a6d", "Url": "https://api.github.com/repos/fnwib/fn-xlsx", "Date": "2017-12-07T07:44:50Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elements.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7254/buggy-version/src.main.java.com.github.fnwib.write.ExcelWriterImpl.java", "BodyUseAPI": [], "Fixed commit": "ee0e7177c13143c76b96eab4a5264b6731f11a6d", "Url": "https://api.github.com/repos/fnwib/fn-xlsx", "Date": "2017-12-07T07:44:50Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (restMode) { SingleTon.restPos = SingleTon.destPos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8524/buggy-version/app.src.main.java.gruppe3.convoy.functionality.PathJSONParser.java", "BodyUseAPI": [], "Fixed commit": "9c0b3934e8ae1e14ebef158d17fa85fefa0f3505", "Url": "https://api.github.com/repos/SoftTech2018/Convoy", "Date": "2016-01-20T12:58:29Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Dot>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (d.country.get(0).equals(\"Colombia\")) java.lang.System.out.println((\"COL.... medal= \" + (d.medal)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5940/buggy-version/src.Olympia.java", "BodyUseAPI": ["java.io.PrintStream.println((\"COL.... medal= \" + (d.medal)))"], "Fixed commit": "7f6ea8c42e8a15e5585c5ffba2d6b961fe856042", "Url": "https://api.github.com/repos/kristapatel/InfoVis", "Date": "2013-12-06T18:52:44Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tx.getParent()) != null) tx = dao.findTopLevelTransaction(tx.getTxuid());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1237/buggy-version/txvis-webapp.src.main.java.org.jboss.narayana.txvis.webapp.models.GraphPlotterBean.java", "BodyUseAPI": ["org.jboss.narayana.txvis.persistence.DataAccessObject.findTopLevelTransaction(tx.getTxuid())", "org.jboss.narayana.txvis.persistence.entities.Transaction.getTxuid()"], "Fixed commit": "2eee1b75dda113b4352a194324a86bf514d4c72f", "Url": "https://api.github.com/repos/alexcreasy/txvis", "Date": "2013-08-02T16:26:58Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userMapper.getUserIdByName(user.getUsername())) != null) return sendJSONError(((\"\u7528\u6237\u540d[\" + (user.getUsername())) + \"]\u5df2\u7ecf\u5b58\u5728\u3002\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8930/buggy-version/mmt-web.src.main.java.lemon.web.system.action.UserAction.java", "BodyUseAPI": ["lemon.web.system.action.UserAction.sendJSONError(((\"\u7528\u6237\u540d[\" + (user.getUsername())) + \"]\u5df2\u7ecf\u5b58\u5728\u3002\"))", "lemon.web.system.bean.User.getUsername()"], "Fixed commit": "c040a3c570d9f9cd2ec3dd78403dc21b84ef9d50", "Url": "https://api.github.com/repos/cjm0000000/mmt", "Date": "2013-10-24T07:27:05Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((user_id = userMapper.getUserIdByName(user.getUsername())) != null) && ((user_id.intValue()) != (user.getUser_id()))) return sendJSONError(((\"\u7528\u6237\u540d[\" + (user.getUsername())) + \"]\u5df2\u7ecf\u5b58\u5728\u3002\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8930/buggy-version/mmt-web.src.main.java.lemon.web.system.action.UserAction.java", "BodyUseAPI": ["lemon.web.system.bean.User.getUsername()", "lemon.web.system.action.UserAction.sendJSONError(((\"\u7528\u6237\u540d[\" + (user.getUsername())) + \"]\u5df2\u7ecf\u5b58\u5728\u3002\"))"], "Fixed commit": "c040a3c570d9f9cd2ec3dd78403dc21b84ef9d50", "Url": "https://api.github.com/repos/cjm0000000/mmt", "Date": "2013-10-24T07:27:05Z"},
{"Line": "=>1346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fromNode.kind) == (wyil.lang.Type.K_INT)) && ((toNode.kind) == (wyil.lang.Type.K_CHAR))) { return true; }else if (((fromNode.kind) == (wyil.lang.Type.K_RATIONAL)) && (((toNode.kind) == (wyil.lang.Type.K_INT)) || ((toNode.kind) == (wyil.lang.Type.K_CHAR)))) { return true; }else if (((fromNode.kind) == (wyil.lang.Type.K_SET)) && ((toNode.kind) == (wyil.lang.Type.K_LIST))) { return assumptions.isSubtype(((java.lang.Integer) (fromNode.data)), ((java.lang.Integer) (toNode.data))); }else if (((fromNode.kind) == (wyil.lang.Type.K_DICTIONARY)) && ((toNode.kind) == (wyil.lang.Type.K_LIST))) { wyil.util.Pair<java.lang.Integer, java.lang.Integer> p1 = ((wyil.util.Pair<java.lang.Integer, java.lang.Integer>) (fromNode.data)); return ((fromGraph[p1.first()].kind) == (wyil.lang.Type.K_INT)) && (assumptions.isSubtype(p1.second(), ((java.lang.Integer) (toNode.data)))); }else if (((fromNode.kind) == (wyil.lang.Type.K_LIST)) && ((toNode.kind) == (wyil.lang.Type.K_STRING))) { java.lang.Integer p1 = ((java.lang.Integer) (fromNode.data)); return (((fromGraph[p1].kind) == (wyil.lang.Type.K_ANY)) || ((fromGraph[p1].kind) == (wyil.lang.Type.K_INT))) || ((fromGraph[p1].kind) == (wyil.lang.Type.K_RATIONAL)); }else { return super.isSubType(from, to); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8616/buggy-version/src.wyil.lang.Type.java", "BodyUseAPI": ["wyil.lang.Type.SubtypeRelation.isSubtype(p1.second(),java.lang.Object)", "wyil.lang.Type.SubtypeRelation.isSubtype(java.lang.Object,java.lang.Object)"], "Fixed commit": "d63c0ad0dcc5e3c02f1e27131d0ca3f8243f2543", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-29T05:22:17Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["treeViewer.getTree().getColumn(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((item != null) && ((item.getWidth()) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5523/buggy-version/com.baloise.egitblit.plugin.src.com.baloise.egitblit.view.RepoExplorerView.java", "BodyUseAPI": [], "Fixed commit": "8bfd774ddc03d20d6473854e9d5af761b68a6b8a", "Url": "https://api.github.com/repos/baloise/egitblit", "Date": "2014-01-06T13:07:52Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj1.perfilChooser(perfil).equals(\"Administrador\")) { if (((((((reqURI.indexOf(\"/user/consejo/\")) >= 1) || ((reqURI.indexOf(\"/user/coordinador/\")) >= 1)) || ((reqURI.indexOf(\"/user/estudiantes/\")) >= 1)) || ((reqURI.indexOf(\"/user/gestores/\")) >= 1)) || ((reqURI.indexOf(\"/user/secretaria/\")) >= 1)) || ((reqURI.indexOf(\"/user/tutor/\")) >= 1)) { resp.sendRedirect(((reqt.getContextPath()) + \"/faces/user/administrador/administrator.xhtml\")); } if ((((reqURI.indexOf(\"/user/administrador\")) >= 0) || ((reqURI.indexOf(\"/public/\")) >= 0)) || (reqURI.contains(\"javax.faces.resource\"))) { if ((reqURI.indexOf(\"/public/login.xhtml\")) >= 0) { resp.sendRedirect(((reqt.getContextPath()) + \"/faces/user/administrador/administrator.xhtml\")); }else { chain.doFilter(request, response); } } }else { if (obj1.perfilChooser(perfil).equals(\"0\")) { chain.doFilter(request, response); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9100/buggy-version/src.java.com.sppp.utils.LoginFilter.java", "BodyUseAPI": ["obj1.perfilChooser(perfil).equals(java.lang.String)", "com.sppp.classes.Cls_PerfilNotation.perfilChooser(int)"], "Fixed commit": "52e526a5c5dda01d15a7008ee83b68baaf53824b", "Url": "https://api.github.com/repos/JCastillo92/SPPP_App", "Date": "2017-11-24T18:07:22Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((((reqURI.indexOf(\"/user/administrador/\")) >= 1) || ((reqURI.indexOf(\"/user/consejo/\")) >= 1)) || ((reqURI.indexOf(\"/user/coordinador/\")) >= 1)) || ((reqURI.indexOf(\"/user/estudiantes/\")) >= 1)) || ((reqURI.indexOf(\"/user/gestores/\")) >= 1)) || ((reqURI.indexOf(\"/user/secretaria/\")) >= 1)) { resp.sendRedirect(((reqt.getContextPath()) + \"/faces/user/tutor/tutor.xhtml\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9100/buggy-version/src.java.com.sppp.utils.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "52e526a5c5dda01d15a7008ee83b68baaf53824b", "Url": "https://api.github.com/repos/JCastillo92/SPPP_App", "Date": "2017-11-24T18:07:22Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj1.perfilChooser(perfil).equals(\"Gestor\")) { if (((((((reqURI.indexOf(\"/user/administrador/\")) >= 1) || ((reqURI.indexOf(\"/user/consejo/\")) >= 1)) || ((reqURI.indexOf(\"/user/coordinador/\")) >= 1)) || ((reqURI.indexOf(\"/user/estudiantes/\")) >= 1)) || ((reqURI.indexOf(\"/user/secretaria/\")) >= 1)) || ((reqURI.indexOf(\"/user/tutor/\")) >= 1)) { resp.sendRedirect(((reqt.getContextPath()) + \"/faces/user/gestores/attendant.xhtml\")); } if ((((reqURI.indexOf(\"/user/gestores\")) >= 0) || ((reqURI.indexOf(\"/public/\")) >= 0)) || (reqURI.contains(\"javax.faces.resource\"))) { if ((reqURI.indexOf(\"/public/login.xhtml\")) >= 0) { resp.sendRedirect(((reqt.getContextPath()) + \"/faces/user/gestores/attendant.xhtml\")); }else { chain.doFilter(request, response); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9100/buggy-version/src.java.com.sppp.utils.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "52e526a5c5dda01d15a7008ee83b68baaf53824b", "Url": "https://api.github.com/repos/JCastillo92/SPPP_App", "Date": "2017-11-24T18:07:22Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj1.perfilChooser(perfil).equals(\"Coordinador\")) { if (((((((reqURI.indexOf(\"/user/administrador/\")) >= 1) || ((reqURI.indexOf(\"/user/consejo/\")) >= 1)) || ((reqURI.indexOf(\"/user/estudiantes/\")) >= 1)) || ((reqURI.indexOf(\"/user/gestores/\")) >= 1)) || ((reqURI.indexOf(\"/user/secretaria/\")) >= 1)) || ((reqURI.indexOf(\"/user/tutor/\")) >= 1)) { resp.sendRedirect(((reqt.getContextPath()) + \"/faces/user/coordinador/coordinator.xhtml\")); } if ((((reqURI.indexOf(\"/user/coordinador\")) >= 0) || ((reqURI.indexOf(\"/public/\")) >= 0)) || (reqURI.contains(\"javax.faces.resource\"))) { if ((reqURI.indexOf(\"/public/login.xhtml\")) >= 0) { resp.sendRedirect(((reqt.getContextPath()) + \"/faces/user/coordinador/coordinator.xhtml\")); }else { chain.doFilter(request, response); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9100/buggy-version/src.java.com.sppp.utils.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "52e526a5c5dda01d15a7008ee83b68baaf53824b", "Url": "https://api.github.com/repos/JCastillo92/SPPP_App", "Date": "2017-11-24T18:07:22Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj1.perfilChooser(perfil).equals(\"Secretaria\")) { if (((((((reqURI.indexOf(\"/user/administrador/\")) >= 1) || ((reqURI.indexOf(\"/user/consejo/\")) >= 1)) || ((reqURI.indexOf(\"/user/coordinador/\")) >= 1)) || ((reqURI.indexOf(\"/user/estudiantes/\")) >= 1)) || ((reqURI.indexOf(\"/user/gestores/\")) >= 1)) || ((reqURI.indexOf(\"/user/tutor/\")) >= 1)) { resp.sendRedirect(((reqt.getContextPath()) + \"/faces/user/secretaria/secretary.xhtml\")); } if ((((reqURI.indexOf(\"/user/secretaria\")) >= 0) || ((reqURI.indexOf(\"/public/\")) >= 0)) || (reqURI.contains(\"javax.faces.resource\"))) { if ((reqURI.indexOf(\"/public/login.xhtml\")) >= 0) { resp.sendRedirect(((reqt.getContextPath()) + \"/faces/user/secretaria/secretary.xhtml\")); }else { chain.doFilter(request, response); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9100/buggy-version/src.java.com.sppp.utils.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "52e526a5c5dda01d15a7008ee83b68baaf53824b", "Url": "https://api.github.com/repos/JCastillo92/SPPP_App", "Date": "2017-11-24T18:07:22Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj1.perfilChooser(perfil).equals(\"Estudiante\")) { if (((((((reqURI.indexOf(\"/user/administrador/\")) >= 1) || ((reqURI.indexOf(\"/user/consejo/\")) >= 1)) || ((reqURI.indexOf(\"/user/coordinador/\")) >= 1)) || ((reqURI.indexOf(\"/user/gestores/\")) >= 1)) || ((reqURI.indexOf(\"/user/secretaria/\")) >= 1)) || ((reqURI.indexOf(\"/user/tutor/\")) >= 1)) { resp.sendRedirect(((reqt.getContextPath()) + \"/faces/user/estudiantes/student.xhtml\")); } if ((((reqURI.indexOf(\"/user/estudiantes\")) >= 0) || ((reqURI.indexOf(\"/public/\")) >= 0)) || (reqURI.contains(\"javax.faces.resource\"))) { if ((reqURI.indexOf(\"/public/login.xhtml\")) >= 0) { resp.sendRedirect(((reqt.getContextPath()) + \"/faces/user/estudiantes/student.xhtml\")); }else { chain.doFilter(request, response); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9100/buggy-version/src.java.com.sppp.utils.LoginFilter.java", "BodyUseAPI": [], "Fixed commit": "52e526a5c5dda01d15a7008ee83b68baaf53824b", "Url": "https://api.github.com/repos/JCastillo92/SPPP_App", "Date": "2017-11-24T18:07:22Z"},
{"Line": "=>1139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (platformCapability.supports(serviceRequirement)) { supported = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4719/buggy-version/rio-services.monitor.monitor-service.src.main.java.org.rioproject.monitor.service.InstantiatorResource.java", "BodyUseAPI": [], "Fixed commit": "1055d25bae4878709cb7716c35bb0bfae75f349b", "Url": "https://api.github.com/repos/dreedyman/Rio", "Date": "2015-03-12T18:03:05Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 1) failureReasonBuilder.append(\"\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4719/buggy-version/rio-services.monitor.monitor-service.src.main.java.org.rioproject.monitor.service.util.FailureReasonFormatter.java", "BodyUseAPI": [], "Fixed commit": "1055d25bae4878709cb7716c35bb0bfae75f349b", "Url": "https://api.github.com/repos/dreedyman/Rio", "Date": "2015-03-12T18:03:05Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fragment.isFingerprintWorking()) { fragment.cancelFingerprint(); }else { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4650/buggy-version/app.src.main.java.com.createchance.doorgod.ui.DoorGodActivity.java", "BodyUseAPI": ["com.createchance.doorgod.lockfragments.BaseFragment.cancelFingerprint()"], "Fixed commit": "00d16c1350215097a4f639bbce190df699145367", "Url": "https://api.github.com/repos/CreateChance/DoorGod", "Date": "2017-03-03T11:27:13Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3349/buggy-version/BloodPro_4_0.src.com.wm.bloodpro_4_0.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c95c7e60dcaf4d2b1e1d3ed288549f3f72d7eb0d", "Url": "https://api.github.com/repos/lk5103613/blood_pro", "Date": "2015-02-11T12:19:10Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previous != null) { if ((current == '{') && (previous == '$')) { throw new java.lang.RuntimeException(\"Error: Attempted to open new expression within expression\"); }else if ((current == '%') && (previous == '<')) { throw new java.lang.RuntimeException(\"Attempted to open new statement within statement\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3688/buggy-version/src.main.java.bb.tokenizer.ETokenizer.java", "BodyUseAPI": [], "Fixed commit": "78f96a1178cdafa12177516bc57f29d83c2afc91", "Url": "https://api.github.com/repos/carsongross/barbarossa-templates", "Date": "2017-06-14T21:53:57Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return tokens; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3688/buggy-version/src.main.java.bb.tokenizer.ETokenizer.java", "BodyUseAPI": [], "Fixed commit": "78f96a1178cdafa12177516bc57f29d83c2afc91", "Url": "https://api.github.com/repos/carsongross/barbarossa-templates", "Date": "2017-06-14T21:53:57Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end) == null) { begin = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3931/buggy-version/datastructures.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "a94048983465910ad7d962d777b2052b63801cb5", "Url": "https://api.github.com/repos/Jelleas/Datastructures_Heuristieken", "Date": "2016-03-22T02:53:24Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((begin) == null) { end = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3931/buggy-version/datastructures.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "a94048983465910ad7d962d777b2052b63801cb5", "Url": "https://api.github.com/repos/Jelleas/Datastructures_Heuristieken", "Date": "2016-03-22T02:53:24Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tablero) != null) { int id = tablero.obtIdSudoku(); bd.Update(((((\"INSERT INTO Ranking (NombreUsuario, IdSudoku, Puntuaci\ufffdn) VALUES ('\" + (nombreUsuario)) + \"',\") + id) + \",0)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7353/buggy-version/AdminEvoSudoku.src.packModelo.Sesion.java", "BodyUseAPI": [], "Fixed commit": "7d6b1edbaf9136a269dbcda03553846fd1d13a82", "Url": "https://api.github.com/repos/alberduris/adminevosudoku", "Date": "2016-01-15T13:00:39Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((rec[c]) > 0.5) || ((rec[c]) < 0)) { gear.util.Logger.printUserError(((((\"incorrect recombination fraction : '\" + (rec[c])) + \"' in line \") + c) + \".\\n Gear quitted.\")); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7355/buggy-version/GEAR.src.gear.subcommands.labpop.LabPopCommandArguments.java", "BodyUseAPI": ["gear.util.Logger.printUserError(java.lang.String)"], "Fixed commit": "d8c4c37c9a4b4a72dd76c2b37337ff8c1df17a2f", "Url": "https://api.github.com/repos/gc5k/GEAR", "Date": "2016-05-09T14:54:27Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeStream(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rawPicture.getWidth()) > 100) { _picture = android.graphics.Bitmap.createScaledBitmap(_picture, 100, 100, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/582/buggy-version/android.src.com.freshplanet.nativeExtensions.CreateNotificationTask.java", "BodyUseAPI": [], "Fixed commit": "ec88f229c91f6230fcb25e09304e929c9886c765", "Url": "https://api.github.com/repos/freshplanet/ANE-Push-Notification", "Date": "2014-10-08T21:35:25Z"},
{"Line": "=>1328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(deviceSupportMultiPane())) { layout.closeDrawer(drawer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7447/buggy-version/library.src.main.java.it.neokree.materialnavigationdrawer.MaterialNavigationDrawer.java", "BodyUseAPI": [], "Fixed commit": "a21445a5e152d1942b5b340a4d1642386f8afd71", "Url": "https://api.github.com/repos/koesie10/MaterialNavigationDrawer", "Date": "2015-05-14T10:25:36Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(previousFoundPokemon.isEmpty())) && (!(previousFoundPokemon.equals(currentFoundSet)))) { vibratorManager.vibrate(com.omkarmoghe.pokemap.controllers.service.PokemonNotificationService.VIBRATE_PATTERN, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8805/buggy-version/app.src.main.java.com.omkarmoghe.pokemap.controllers.service.PokemonNotificationService.java", "BodyUseAPI": [], "Fixed commit": "25d0160529f8a20ba1fe0e83060c47c307a7af12", "Url": "https://api.github.com/repos/xyber3364/Pokemap", "Date": "2016-07-26T15:58:31Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (SPARQL_Update_Query != null) { queryPairs.add(new eu.unifiedviews.plugins.transformer.sparql.SPARQLQueryPair(SPARQL_Update_Query, isConstructType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5331/buggy-version/t-sparql.src.main.java.eu.unifiedviews.plugins.transformer.sparql.SPARQLConfig_V1.java", "BodyUseAPI": ["java.util.List<eu.unifiedviews.plugins.transformer.sparql.SPARQLQueryPair>.add(eu.unifiedviews.plugins.transformer.sparql.SPARQLQueryPair)"], "Fixed commit": "301288889b2a420b618ba03ca9702f737e2b3522", "Url": "https://api.github.com/repos/UnifiedViews/Plugins", "Date": "2014-08-21T14:12:51Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (search.isEmpty()) search();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1224/buggy-version/src.main.java.com.deliveryninja.ConsoleCommander.java", "BodyUseAPI": [], "Fixed commit": "8667a600899221865885b016b21661a1f64fe6d7", "Url": "https://api.github.com/repos/ron-noble/irc-books", "Date": "2017-07-20T00:04:56Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inVertex instanceof com.tinkerpop.blueprints.util.wrappers.partition.PartitionVertex) inVertex = ((com.tinkerpop.blueprints.util.wrappers.partition.PartitionVertex) (inVertex)).getBaseVertex();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5772/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.java", "BodyUseAPI": [], "Fixed commit": "07599d095087d1569508c7f8ad099d580adbfa83", "Url": "https://api.github.com/repos/Blackspark/orientdb", "Date": "2014-04-10T15:57:01Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) { return data.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9217/buggy-version/src.gui.components.component.table.CustomTableModel.java", "BodyUseAPI": [], "Fixed commit": "b7b4c7050eb7197ebe485202540a0fa1ec3522e1", "Url": "https://api.github.com/repos/FerMod/WSRuralHouse-2017", "Date": "2017-05-18T17:04:25Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cellComponent != null) && (imageList != null)) { initData(imageList, cellComponent); }else if (cellComponent != null) { initData(cellComponent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9217/buggy-version/src.gui.components.component.table.CustomTableModel.java", "BodyUseAPI": [], "Fixed commit": "b7b4c7050eb7197ebe485202540a0fa1ec3522e1", "Url": "https://api.github.com/repos/FerMod/WSRuralHouse-2017", "Date": "2017-05-18T17:04:25Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((columnNames) != null) { return columnNames.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9217/buggy-version/src.gui.components.component.table.CustomTableModel.java", "BodyUseAPI": [], "Fixed commit": "b7b4c7050eb7197ebe485202540a0fa1ec3522e1", "Url": "https://api.github.com/repos/FerMod/WSRuralHouse-2017", "Date": "2017-05-18T17:04:25Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current == (Piece.EMPTY)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2055/buggy-version/src.eu.veldsoft.ithaka.board.game.Board.java", "BodyUseAPI": [], "Fixed commit": "82714f1a6e400f1d3fcf11c03f5c36e10ca9f24e", "Url": "https://api.github.com/repos/VelbazhdSoftwareLLC/IthakaBoardGame", "Date": "2016-04-05T12:50:24Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current == (Piece.EMPTY)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2055/buggy-version/src.eu.veldsoft.ithaka.board.game.Board.java", "BodyUseAPI": [], "Fixed commit": "82714f1a6e400f1d3fcf11c03f5c36e10ca9f24e", "Url": "https://api.github.com/repos/VelbazhdSoftwareLLC/IthakaBoardGame", "Date": "2016-04-05T12:50:24Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current == (Piece.EMPTY)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2055/buggy-version/src.eu.veldsoft.ithaka.board.game.Board.java", "BodyUseAPI": [], "Fixed commit": "82714f1a6e400f1d3fcf11c03f5c36e10ca9f24e", "Url": "https://api.github.com/repos/VelbazhdSoftwareLLC/IthakaBoardGame", "Date": "2016-04-05T12:50:24Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current == (Piece.EMPTY)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2055/buggy-version/src.eu.veldsoft.ithaka.board.game.Board.java", "BodyUseAPI": [], "Fixed commit": "82714f1a6e400f1d3fcf11c03f5c36e10ca9f24e", "Url": "https://api.github.com/repos/VelbazhdSoftwareLLC/IthakaBoardGame", "Date": "2016-04-05T12:50:24Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.happiness) > 0) { this.happiness -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6979/buggy-version/src.model.Pet.java", "BodyUseAPI": [], "Fixed commit": "0ef92b95958084c8174ca3bddbf5f5c624799797", "Url": "https://api.github.com/repos/wilq1994/Projekt-Java", "Date": "2016-01-22T13:07:35Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.Music.popNewBoubleData(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (momentSymbol != null) { addBouble(momentSymbol.getMoment(), momentSymbol.getSymbol()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6979/buggy-version/src.model.Model.java", "BodyUseAPI": ["model.TupleMomentSymbol.getSymbol()", "model.Model.addBouble(momentSymbol.getMoment(),momentSymbol.getSymbol())", "model.TupleMomentSymbol.getMoment()"], "Fixed commit": "0ef92b95958084c8174ca3bddbf5f5c624799797", "Url": "https://api.github.com/repos/wilq1994/Projekt-Java", "Date": "2016-01-22T13:07:35Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isIgnoreObjects())) { addStmt((\"drop sequence \" + (lSequenceDiff.sequence_nameOld))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8760/buggy-version/orcas_core.build_source.orcas_diff.src.de.opitzconsulting.orcas.diff.OrcasDiff.java", "BodyUseAPI": [], "Fixed commit": "45ec9fcdd1dd62c3ec8d004615bf85f0caf88d7a", "Url": "https://api.github.com/repos/tjaeschke/orcas", "Date": "2017-02-27T10:30:50Z"},
{"Line": "=>1696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isIgnoreObjects())) { addStmt((\"drop materialized view \" + (lMviewDiff.mview_nameOld))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8760/buggy-version/orcas_core.build_source.orcas_diff.src.de.opitzconsulting.orcas.diff.OrcasDiff.java", "BodyUseAPI": [], "Fixed commit": "45ec9fcdd1dd62c3ec8d004615bf85f0caf88d7a", "Url": "https://api.github.com/repos/tjaeschke/orcas", "Date": "2017-02-27T10:30:50Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.isEnabled()) { com.comze_instancelabs.minigamesapi.util.BungeeUtil.sendSignUpdateRequest(plugin, plugin.getName(), arena); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4275/buggy-version/API.src.main.java.com.comze_instancelabs.minigamesapi.util.Util.java", "BodyUseAPI": ["org.bukkit.plugin.java.JavaPlugin.getName()", "com.comze_instancelabs.minigamesapi.util.BungeeUtil.sendSignUpdateRequest(org.bukkit.plugin.java.JavaPlugin,plugin.getName(),com.comze_instancelabs.minigamesapi.Arena)"], "Fixed commit": "f80562af8339ea2f6edf1c4e9fd3a7665afcefc9", "Url": "https://api.github.com/repos/instance01/MinigamesAPI", "Date": "2014-09-28T14:01:28Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (timeConstraint.hasAggregation()) de.zib.gndms.taskflows.staging.client.tools.TimeConstraintPropertyWriter.writeAggregationToProperties(getProperties(), timeConstraint.getAggregation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5467/buggy-version/taskflows.staging.client.src.de.zib.gndms.taskflows.staging.client.tools.DataConstraintsPropertyWriter.java", "BodyUseAPI": ["de.zib.gndms.taskflows.staging.client.model.TimeConstraint.getAggregation()", "de.zib.gndms.taskflows.staging.client.tools.TimeConstraintPropertyWriter.writeAggregationToProperties(getProperties(),timeConstraint.getAggregation())"], "Fixed commit": "67fc06068c5cf45fbbccaa92b725bac0e73a6837", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-09-19T08:38:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!calledAlready) { com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(true); calledAlready = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8603/buggy-version/app.src.main.java.fr.wcs.viaferrata.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "f8a6020381c80c508ae63f3b7e540559adc447a6", "Url": "https://api.github.com/repos/YvesToiser/ViaFerrata", "Date": "2017-10-26T13:11:42Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isBotVariable(splitParts[i])) { parts.add(new nl.davidlieffijn.battleofbots.interpreter.BotVariable(splitParts[i])); }else { parts.add(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5685/buggy-version/interpreter.Parser.java", "BodyUseAPI": ["java.util.ArrayList<nl.davidlieffijn.battleofbots.interpreter.Expression>.add(nl.davidlieffijn.battleofbots.interpreter.BotVariable)"], "Fixed commit": "91075dba30fda87e3b378b0984860e136f733854", "Url": "https://api.github.com/repos/virtualvikings/battleofbots", "Date": "2015-01-26T11:22:24Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inspectChar(1)) == '/') { accept(); while ((currentChar) != '\\n') { accept(); } accept(); }else if ((inspectChar(1)) == '*') { accept(); EndOfComment = false; while ((EndOfComment) == false) { accept(); if ((currentChar) == '*') { accept(); if ((currentChar) == '/') { accept(); EndOfComment = true; } } if ((currentChar) == (SourceFile.eof)) { EndOfComment = true; } } }else { Skipping = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1744/buggy-version/src.VC.Scanner.Scanner.java", "BodyUseAPI": [], "Fixed commit": "52594b75600c3b42bcde54ac2f5f8f0d3e13a315", "Url": "https://api.github.com/repos/NielsAlston/VC", "Date": "2017-03-08T04:10:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((tile != null) && (tile instanceof mods.eln.node.transparent.TransparentNodeEntity)) return ((mods.eln.node.transparent.TransparentNodeEntity) (world.getTileEntity(x, y, z))).getDamageValue(world, x, y, z);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4931/buggy-version/src.main.java.mods.eln.node.transparent.TransparentNodeBlock.java", "BodyUseAPI": [], "Fixed commit": "d6f57a6e0ccd7250a216e626412370febea012db", "Url": "https://api.github.com/repos/DrummerMC/ElectricalAge", "Date": "2015-02-01T16:39:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4931/buggy-version/src.main.java.mods.eln.node.transparent.TransparentNodeBlock.java", "BodyUseAPI": [], "Fixed commit": "d6f57a6e0ccd7250a216e626412370febea012db", "Url": "https://api.github.com/repos/DrummerMC/ElectricalAge", "Date": "2015-02-01T16:39:53Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4931/buggy-version/src.main.java.mods.eln.node.six.SixNodeBlock.java", "BodyUseAPI": [], "Fixed commit": "d6f57a6e0ccd7250a216e626412370febea012db", "Url": "https://api.github.com/repos/DrummerMC/ElectricalAge", "Date": "2015-02-01T16:39:53Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/284/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.MRadioButton.java", "BodyUseAPI": [], "Fixed commit": "db6723cf3dbfa7b2e4ea7ed253374dbd1d45a4ce", "Url": "https://api.github.com/repos/flasheater/mgwt", "Date": "2012-11-16T22:05:48Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/284/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.MRadioButton.java", "BodyUseAPI": [], "Fixed commit": "db6723cf3dbfa7b2e4ea7ed253374dbd1d45a4ce", "Url": "https://api.github.com/repos/flasheater/mgwt", "Date": "2012-11-16T22:05:48Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnabled())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/284/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.MRadioButton.java", "BodyUseAPI": [], "Fixed commit": "db6723cf3dbfa7b2e4ea7ed253374dbd1d45a4ce", "Url": "https://api.github.com/repos/flasheater/mgwt", "Date": "2012-11-16T22:05:48Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.app.getEventItems().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getImageUrl()) != null) { new tskaws.app.MainActivity.DownloadImage(((android.widget.ImageView) (row.findViewById(R.id.logo)))).execute(item.getImageUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3250/buggy-version/app.src.main.java.tskaws.app.MainActivity.java", "BodyUseAPI": ["tskaws.app.MainActivity.DownloadImage.execute(item.getImageUrl())", "tskaws.app.EventItem.getImageUrl()"], "Fixed commit": "b3dcb9f3aa0e92abe12dcf24999ee8b8627570e2", "Url": "https://api.github.com/repos/Tskaws/app", "Date": "2017-06-16T21:31:46Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCancelled())) { return org.qii.weiciyuan.support.imagetool.ImageTool.getAvatarBitmap(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3274/buggy-version/src.org.qii.weiciyuan.ui.main.AvatarBitmapWorkerTask.java", "BodyUseAPI": [], "Fixed commit": "13242d62f41533af8bd2b234df4116014847be9b", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-08T16:37:26Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCancelled())) { return org.qii.weiciyuan.support.imagetool.ImageTool.getPictureThumbnailBitmap(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3274/buggy-version/src.org.qii.weiciyuan.ui.main.PictureBitmapWorkerTask.java", "BodyUseAPI": [], "Fixed commit": "13242d62f41533af8bd2b234df4116014847be9b", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-08T16:37:26Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCancelled())) { return org.qii.weiciyuan.support.imagetool.ImageTool.getAvatarBitmap(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3274/buggy-version/src.org.qii.weiciyuan.ui.browser.SimpleBitmapWorkerTask.java", "BodyUseAPI": [], "Fixed commit": "13242d62f41533af8bd2b234df4116014847be9b", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-08T16:37:26Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(amDemod)) output.setSize(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3885/buggy-version/app.src.main.java.de.tu.darmstadt.seemoo.ansian.model.demodulation.Morse.java", "BodyUseAPI": [], "Fixed commit": "8228d3d6570b0eb38df3e8df353d982c281dc0cb", "Url": "https://api.github.com/repos/demantz/AnSiAn", "Date": "2016-08-24T22:59:19Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needVal) java.lang.System.out.println(\"Function cant return comma statement.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8356/buggy-version/src.tacGenerator.java", "BodyUseAPI": [], "Fixed commit": "3f61f889e04953c90c1d21b913a0264bde3101b5", "Url": "https://api.github.com/repos/Helliaca/Custom-UnCool-Compiler", "Date": "2017-02-12T21:45:55Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trackRepTracks.size()) == 1) if ((trackRepTracks.get(0).getTitle().trim().length()) == 0) return \"EMPTY_TITLE\"; else return trackRepTracks.get(0).getTitle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6906/buggy-version/src.main.java.uk.co.brotherlogic.mdb.record.Record.java", "BodyUseAPI": ["trackRepTracks.get(0).getTitle()", "trackRepTracks.get(0).getTitle().trim()", "java.util.List<uk.co.brotherlogic.mdb.record.Track>.get(int)", "trackRepTracks.get(0).getTitle()", "trackRepTracks.get(0).getTitle().trim().length()", "java.util.List<uk.co.brotherlogic.mdb.record.Track>.get(int)"], "Fixed commit": "5e827c8c5380b2cd02406d6177f828eb90206fd0", "Url": "https://api.github.com/repos/brotherlogic/mdbcore", "Date": "2011-03-21T19:57:47Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grps.size()) == 0) return \"EMPTY\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6906/buggy-version/src.main.java.uk.co.brotherlogic.mdb.record.Record.java", "BodyUseAPI": [], "Fixed commit": "5e827c8c5380b2cd02406d6177f828eb90206fd0", "Url": "https://api.github.com/repos/brotherlogic/mdbcore", "Date": "2011-03-21T19:57:47Z"},
{"Line": "=>705", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a == 255) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/9220/buggy-version/library.src.main.java.jp.co.recruit_lifestyle.android.widget.WaveSwipeRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "f359aaaf8646b5fa197ac73bd5f22e8846e0693b", "Url": "https://api.github.com/repos/recruit-lifestyle/WaveSwipeRefreshLayout", "Date": "2016-02-06T17:43:27Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resourceName == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/828/buggy-version/src.bn.blaszczyk.roseapp.view.factories.IconFactory.java", "BodyUseAPI": [], "Fixed commit": "b2a02a1975c006e0c8a3008974f06be9c268f1b4", "Url": "https://api.github.com/repos/blaszczyk/rose-app", "Date": "2017-03-08T20:34:55Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/828/buggy-version/src.bn.blaszczyk.roseapp.view.factories.IconFactory.java", "BodyUseAPI": [], "Fixed commit": "b2a02a1975c006e0c8a3008974f06be9c268f1b4", "Url": "https://api.github.com/repos/blaszczyk/rose-app", "Date": "2017-03-08T20:34:55Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((normalDamageTypes.size()) == 0) normalDamageTypes = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3212/buggy-version/src.com.nisovin.magicspells.spells.buff.ResistSpell.java", "BodyUseAPI": [], "Fixed commit": "547a771dee97b7c8eada9c7860e8a8515d2462ee", "Url": "https://api.github.com/repos/nisovin/MagicSpells", "Date": "2014-06-13T00:31:32Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((code == 9010) || (code == 9016)) { cn.alien95.util.Utils.SnackbarShort(register, \"\u7f51\u7edc\u9519\u8bef\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u7f51\u7edc\"); }else cn.alien95.util.Utils.SnackbarShort(register, \"\u7528\u6237\u540d\u91cd\u590d\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6055/buggy-version/app.src.main.java.cn.zhu.cainiao.module.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "ca3da0d505622a68644fd47e0883e5ad73d5c37a", "Url": "https://api.github.com/repos/xinzhazha/Task-Graduation-EnglishGame", "Date": "2016-05-11T04:39:55Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.accounts.AccountManager.get(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((accountManager.getAccountsByType(getString(R.string.account_type)).length) == 0) { final android.content.Intent intent = new android.content.Intent(context, me.edgeconsult.keys.AuthenticatorActivity.class); intent.putExtra(AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE, accountAuthenticatorResponse); intent.putExtra(AccountManager.KEY_ACCOUNT_TYPE, s); final android.os.Bundle b = new android.os.Bundle(); b.putParcelable(AccountManager.KEY_INTENT, intent); return b; }else { final android.os.Bundle b = new android.os.Bundle(); b.putInt(AccountManager.KEY_ERROR_CODE, 1); b.putString(AccountManager.KEY_ERROR_MESSAGE, \"Only one account allowed\"); return b; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5806/buggy-version/app.src.main.java.me.edgeconsult.keys.AuthenticatorService.java", "BodyUseAPI": [], "Fixed commit": "670cfbf563daffc447ab53a79212e9524b04d0e8", "Url": "https://api.github.com/repos/iunanton/Keys", "Date": "2017-10-13T15:57:23Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.catrobat.catroid.content.Sprite>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (spriteSize > 0) { sprites.get(0).look.setLookData(createWhiteBackgroundLookData()); sprites.get(0).pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8089/buggy-version/catroid.src.org.catrobat.catroid.stage.StageListener.java", "BodyUseAPI": [], "Fixed commit": "d5782899d76fded7bd6ca591efb1ccdd241929f1", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-05-13T08:44:43Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.catrobat.catroid.content.Sprite>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (spriteSize > 0) { sprites.get(0).look.setLookData(createWhiteBackgroundLookData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8089/buggy-version/catroid.src.org.catrobat.catroid.stage.StageListener.java", "BodyUseAPI": [], "Fixed commit": "d5782899d76fded7bd6ca591efb1ccdd241929f1", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-05-13T08:44:43Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sprites.size()) > 0) { sprites.get(0).look.setLookData(createWhiteBackgroundLookData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8089/buggy-version/catroid.src.org.catrobat.catroid.stage.StageListener.java", "BodyUseAPI": ["java.util.List<org.catrobat.catroid.content.Sprite>.get(int)", "sprites.get(0).look.setLookData(org.catrobat.catroid.common.LookData)"], "Fixed commit": "d5782899d76fded7bd6ca591efb1ccdd241929f1", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-05-13T08:44:43Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getOWLWorkspace().getOWLSelectionModel().getSelectedObject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (owlObject == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/851/buggy-version/src.main.java.edu.uams.dbmi.protege.plugin.mireot.view.ClassView.java", "BodyUseAPI": [], "Fixed commit": "5760a5c0ba56d3f859daf1ebc402db42e3a53099", "Url": "https://api.github.com/repos/UAMS-DBMI/MIREOT-plugin", "Date": "2017-07-12T14:19:45Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.get(mySearchDataKey)) instanceof java.lang.String) { refQuery.put(refSearchKey, new com.pms.service.dbhelper.DBQuery(com.pms.service.dbhelper.DBQueryOpertion.LIKE, params.get(mySearchDataKey))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4422/buggy-version/service.src.main.java.com.pms.service.service.AbstractService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,com.pms.service.dbhelper.DBQuery)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "ba0beb27c31b38e85ae5d59d086a7e63366098f5", "Url": "https://api.github.com/repos/antme/pms", "Date": "2014-03-17T08:26:59Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursor.getCount()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2415/buggy-version/app.src.main.java.kitchen.dev.icfbooks.esther.model.media.MediaFactory.java", "BodyUseAPI": [], "Fixed commit": "af1993c67304c5c165d40f6607c6c4a14601d7e1", "Url": "https://api.github.com/repos/dev-kitchen/icf-esther-book-droid", "Date": "2016-08-12T22:54:39Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getY()) == 1013) { java.lang.System.out.println(\"error\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6675/buggy-version/open-jill-object-background.src.main.java.org.jill.game.entities.obj.KniveManager.java", "BodyUseAPI": [], "Fixed commit": "b103adc2f0aa116f3c077a322036307b05c7ab0a", "Url": "https://api.github.com/repos/bubulemaster/openjill", "Date": "2017-08-09T10:09:09Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (relation != null) { for (com.impetus.kundera.db.RelationHolder r : relation) { if (relation != null) { p.add(org.apache.hadoop.hbase.util.Bytes.toBytes(r.getRelationName()), java.lang.System.currentTimeMillis(), org.apache.hadoop.hbase.util.Bytes.toBytes(r.getRelationValue())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1082/buggy-version/kundera-hbase.src.main.java.com.impetus.client.hbase.service.HBaseWriter.java", "BodyUseAPI": [], "Fixed commit": "0fd2f06273f636d3adc2f1531e6ae556af183a5a", "Url": "https://api.github.com/repos/Impetus/Kundera", "Date": "2011-12-07T08:39:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!add) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1965/buggy-version/app.src.main.java.org.digitalcampus.oppia.task.ScanMediaTask.java", "BodyUseAPI": [], "Fixed commit": "5c96c40eacfbe3f93509f4702ce75cc7ce5a8ab6", "Url": "https://api.github.com/repos/AlbertoMoreta/oppia-mobile-android", "Date": "2016-08-31T16:28:01Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (address == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7703/buggy-version/src.main.java.util.UserEngineExtensions.java", "BodyUseAPI": [], "Fixed commit": "5377a17d5df78ae89e9020b815b24652485d2f32", "Url": "https://api.github.com/repos/yogeshchaudhari16991/User_Management_System", "Date": "2016-07-11T06:55:05Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (company == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7703/buggy-version/src.main.java.util.UserEngineExtensions.java", "BodyUseAPI": [], "Fixed commit": "5377a17d5df78ae89e9020b815b24652485d2f32", "Url": "https://api.github.com/repos/yogeshchaudhari16991/User_Management_System", "Date": "2016-07-11T06:55:05Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tokens.length) >= 3) { card = com.mjsalerno.unobot.Rules.parse((((tokens[1]) + \" \") + (tokens[2]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1053/buggy-version/src.main.java.com.mjsalerno.unobot.UnoBot.java", "BodyUseAPI": ["com.mjsalerno.unobot.Rules.parse(java.lang.String)"], "Fixed commit": "03ad4a15cc81be5dcb85ee6aa2b2b62f74adc155", "Url": "https://api.github.com/repos/mjsalerno/UnoBot", "Date": "2016-06-23T15:53:28Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) < 2) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1053/buggy-version/src.main.java.com.mjsalerno.unobot.Rules.java", "BodyUseAPI": [], "Fixed commit": "03ad4a15cc81be5dcb85ee6aa2b2b62f74adc155", "Url": "https://api.github.com/repos/mjsalerno/UnoBot", "Date": "2016-06-23T15:53:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.matches()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((matchFound == false) && (operation == \"save\")) { overwrite = true; }else { overwrite = Warning.overwriteWarning(gui, file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6770/buggy-version/src.Utils.java", "BodyUseAPI": [], "Fixed commit": "0dd425e910c4d7df82cd08a78b92eeb250edc44f", "Url": "https://api.github.com/repos/RobertCMonahan/Terminal-Text", "Date": "2016-11-21T13:25:29Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.matches()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((operation == \"saveas\") || (operation == \"new\")) || ((matchFound == true) && (operation == \"save\"))) { file = Utils.askForFilePath(gui); }else { file = new java.io.File(Utils.currentOpenFileString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6770/buggy-version/src.Utils.java", "BodyUseAPI": [], "Fixed commit": "0dd425e910c4d7df82cd08a78b92eeb250edc44f", "Url": "https://api.github.com/repos/RobertCMonahan/Terminal-Text", "Date": "2016-11-21T13:25:29Z"},
{"Line": "=>783", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((var.endsWith(\"]\")) && ((res.size()) == 0)) res = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4352/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": [], "Fixed commit": "dca9133958ff74e02d9b6ac711e29adf4213224a", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-18T09:58:59Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(edu.toronto.cs.se.mmint.mid.utils.FileUtils.isFile(filePath, isWorkspaceRelative))) { throw new edu.toronto.cs.se.mmint.MMINTException(((\"The file \" + filePath) + \" does not exist\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/529/buggy-version/plugins.Core.edu.toronto.cs.se.mmint.src.edu.toronto.cs.se.mmint.mid.utils.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "1d655f5c0de9c25372f126f96e46e28ecad5cb69", "Url": "https://api.github.com/repos/adisandro/MMINT", "Date": "2016-12-26T20:04:41Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextAct instanceof jsprit.core.problem.solution.route.activity.End) { if (!(iFacts.getNewVehicle().isReturnToDepot())) { return ConstraintsStatus.FULFILLED; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3575/buggy-version/jsprit-core.src.main.java.jsprit.core.problem.constraint.TimeWindowConstraint.java", "BodyUseAPI": [], "Fixed commit": "1c9437898d10e53d51f186f064eb39b3bc22b497", "Url": "https://api.github.com/repos/jsprit/jsprit", "Date": "2014-06-11T09:32:24Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(suche.getText().equals(\"Suchen\"))) filter();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8368/buggy-version/src.GUI.java", "BodyUseAPI": [], "Fixed commit": "1ca4151ce1b00586091cb25f06e2f33ac72050e3", "Url": "https://api.github.com/repos/Fynloh/Adressbuch", "Date": "2016-12-20T18:20:37Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(suche.getText().equals(\"Suchen\"))) filter();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8368/buggy-version/src.GUI.java", "BodyUseAPI": [], "Fixed commit": "1ca4151ce1b00586091cb25f06e2f33ac72050e3", "Url": "https://api.github.com/repos/Fynloh/Adressbuch", "Date": "2016-12-20T18:20:37Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(suche.getText().equals(\"Suchen\"))) filter();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8368/buggy-version/src.GUI.java", "BodyUseAPI": [], "Fixed commit": "1ca4151ce1b00586091cb25f06e2f33ac72050e3", "Url": "https://api.github.com/repos/Fynloh/Adressbuch", "Date": "2016-12-20T18:20:37Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stack.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3740/buggy-version/jena-arq.src.main.java.com.hp.hpl.jena.sparql.expr.ExprTransformer.java", "BodyUseAPI": [], "Fixed commit": "66efb4f658e5c227c29cba0f3f8d1b186a28bd10", "Url": "https://api.github.com/repos/apache/jena", "Date": "2014-12-28T19:04:29Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((po.getName()) == null) { addNewGrid(); }else { save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7833/buggy-version/src.br.com.mvbos.ame.Window.java", "BodyUseAPI": [], "Fixed commit": "69404eb4757fe6651507c7046db19a77f4345eb6", "Url": "https://api.github.com/repos/marcusbecker/AME-Array-Map-Editor", "Date": "2016-01-31T14:34:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mFlashCard.answer_id) == intAnswerID) listViewAdapter.setCorrectAnswer(intAnswerID); else listViewAdapter.setWrongAnswer(intAnswerID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4805/buggy-version/app.src.main.java.memorizer.freecoders.com.flashcards.fragments.FlashCardFragment.java", "BodyUseAPI": ["memorizer.freecoders.com.flashcards.classes.ListViewAdapter.setCorrectAnswer(int)", "memorizer.freecoders.com.flashcards.classes.ListViewAdapter.setWrongAnswer(int)"], "Fixed commit": "1bc9eed86b22a5f482ad37bcd4d71b4b4e3c40b5", "Url": "https://api.github.com/repos/aboev/multicards", "Date": "2016-03-01T18:48:28Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.hunmr.acejump.AceJumpAction._instance) == null) { org.hunmr.acejump.AceJumpAction._instance = new org.hunmr.acejump.AceJumpAction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7215/buggy-version/src.org.hunmr.acejump.AceJumpAction.java", "BodyUseAPI": [], "Fixed commit": "7f3f9c70990d075bcbafff7edb66af08c6d323ed", "Url": "https://api.github.com/repos/whunmr/emacsIDEAs", "Date": "2014-05-30T17:19:44Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMapboxMap) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2010/buggy-version/Android.WayTO-Navigation.app.src.main.java.ifgi.wayto_navigation.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6f0bdef173c7a84b27bda6648ed61d465d9756c7", "Url": "https://api.github.com/repos/Schumi09/WayTo-Navigation", "Date": "2016-05-06T14:37:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gmail.henryzhefeng.Utils.StringUtil.isAnalyseEnd(line)) && (id >= 0)) { result[id] = cnt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2243/buggy-version/src.gmail.henryzhefeng.Utils.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "f1685498c437c1cb569ba403a49f14e37b181e98", "Url": "https://api.github.com/repos/feng-zhe/SJTU_graduate_work", "Date": "2015-05-06T08:54:02Z"},
{"Line": "=>706", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((foundMoveBlocks.get(i)) != null) { numfound = foundMoveBlocks.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5107/buggy-version/src.main.java.net.countercraft.movecraft.async.AsyncManager.java", "BodyUseAPI": ["java.util.HashMap<java.util.ArrayList<java.lang.Integer>, java.lang.Integer>.get(java.util.ArrayList<java.lang.Integer>)"], "Fixed commit": "58634f98745b73dbc593664ff26f9286891b820d", "Url": "https://api.github.com/repos/msummers123/Movecraft-3", "Date": "2016-08-17T00:24:22Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pcraft.getType().getMoveBlocks()) != null) { for (java.util.ArrayList<java.lang.Integer> i : pcraft.getType().getMoveBlocks().keySet()) { int numfound = 0; if ((foundMoveBlocks.get(i)) != null) { numfound = foundMoveBlocks.get(i); } double percent = (((double) (numfound)) / ((double) (totalNonAirBlocks))) * 100.0; double movePercent = pcraft.getType().getMoveBlocks().get(i).get(0); double disablePercent = (movePercent * (pcraft.getType().getSinkPercent())) / 100.0; if (((percent < disablePercent) && ((pcraft.getDisabled()) == false)) && (pcraft.isNotProcessing())) { pcraft.setDisabled(true); if ((pcraft.getNotificationPlayer()) != null) { org.bukkit.Location loc = pcraft.getNotificationPlayer().getLocation(); pcraft.getW().playSound(loc, Sound.ENTITY_IRONGOLEM_DEATH, 5.0F, 5.0F); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5107/buggy-version/src.main.java.net.countercraft.movecraft.async.AsyncManager.java", "BodyUseAPI": ["pcraft.getType().getMoveBlocks()", "net.countercraft.movecraft.craft.Craft.getW()", "pcraft.getType().getMoveBlocks().get(java.util.ArrayList<java.lang.Integer>)", "pcraft.getNotificationPlayer().getLocation()", "pcraft.getType().getSinkPercent()", "pcraft.getType().getMoveBlocks().keySet()", "net.countercraft.movecraft.craft.Craft.getType()", "net.countercraft.movecraft.craft.Craft.isNotProcessing()", "net.countercraft.movecraft.craft.Craft.getNotificationPlayer()", "net.countercraft.movecraft.craft.Craft.getNotificationPlayer()", "net.countercraft.movecraft.craft.Craft.getDisabled()", "net.countercraft.movecraft.craft.Craft.getType()", "net.countercraft.movecraft.craft.Craft.getType()", "pcraft.getType().getMoveBlocks()", "net.countercraft.movecraft.craft.Craft.setDisabled(boolean)", "pcraft.getW().playSound(org.bukkit.Location,Sound.ENTITY_IRONGOLEM_DEATH,float,float)", "pcraft.getType().getMoveBlocks().get(i).get(int)"], "Fixed commit": "58634f98745b73dbc593664ff26f9286891b820d", "Url": "https://api.github.com/repos/msummers123/Movecraft-3", "Date": "2016-08-17T00:24:22Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (screenSipper != null) { smearScreenBatterySipper(sippers, screenSipper); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4246/buggy-version/core.java.com.android.internal.os.BatteryStatsHelper.java", "BodyUseAPI": ["com.android.internal.os.BatteryStatsHelper.smearScreenBatterySipper(java.util.List<com.android.internal.os.BatterySipper>,com.android.internal.os.BatterySipper)"], "Fixed commit": "79a9fbc74a1ecf8ab2bf4c21d72132f00b8fa9bb", "Url": "https://api.github.com/repos/BlissRoms/platform_frameworks_base", "Date": "2017-12-25T17:44:23Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["thut.api.maths.Vector3.getNewVectorFromPool()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((v1.y) != 0) collidedY = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4120/buggy-version/ThutTech.src.main.java.thut.tech.common.entity.EntityLift.java", "BodyUseAPI": [], "Fixed commit": "6fea9ad7707213708c4296d3d7103ba7195590ec", "Url": "https://api.github.com/repos/Thutmose/Thut", "Date": "2016-02-02T03:17:18Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.baebae.reactnativecamera.cameralib.helpers.CameraInstanceManager.getCameraId(android.hardware.Camera)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cameraId > (-1)) { cameraInstanceList[getCameraId(camera)] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1330/buggy-version/android.src.main.java.com.baebae.reactnativecamera.cameralib.helpers.CameraInstanceManager.java", "BodyUseAPI": [], "Fixed commit": "d3eeeb5468986eba101d28c2eb737f6b6191ed46", "Url": "https://api.github.com/repos/Tredsite/react-native-camera", "Date": "2016-01-06T21:29:29Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.xml.Element.attributeValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (className.equals(com.liferay.portal.model.Repository.class.getName())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/777/buggy-version/portal-impl.src.com.liferay.portlet.documentlibrary.lar.FileEntryStagedModelDataHandler.java", "BodyUseAPI": [], "Fixed commit": "353d650dda95534fc86352bdea71495f596608db", "Url": "https://api.github.com/repos/matethurzo/liferay-portal", "Date": "2013-04-30T08:42:58Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ll == null) { ll = getAvailableLangsLocales().get(Constants.DEFAULT_LANGUAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1061/buggy-version/src.bias.i18n.I18nService.java", "BodyUseAPI": [], "Fixed commit": "472a739a3ca7210691933e4ace45fc4c42dda815", "Url": "https://api.github.com/repos/kion/Bias", "Date": "2012-12-28T17:44:37Z"},
{"Line": "=>2587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<org.apache.hadoop.hive.metastore.DiskManager.DMRequest>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(spec_node.contains(r.file.getLocations().get(i).getNode_name()))) { spec_dev.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6568/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.DiskManager.java", "BodyUseAPI": [], "Fixed commit": "ee4ba513019054a4b3cd60275a7642f6700d2c28", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2014-01-14T01:28:56Z"},
{"Line": "=>2284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((di.free) < (1024 * 1024)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6568/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.DiskManager.java", "BodyUseAPI": [], "Fixed commit": "ee4ba513019054a4b3cd60275a7642f6700d2c28", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2014-01-14T01:28:56Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((viewer.getTextWidget().getCharCount()) != (content.length())) { viewer.getTextWidget().setText(content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4892/buggy-version/src.cosy.sbg.softwarepraktikum.plugin.cdtfolding.CDTFolderHighlighter.java", "BodyUseAPI": ["org.eclipse.jface.text.source.projection.ProjectionViewer.getTextWidget()", "viewer.getTextWidget().setText(java.lang.String)"], "Fixed commit": "cfd087873f99ec9481e08774e685d6365424b55d", "Url": "https://api.github.com/repos/mfm92/RegexHider", "Date": "2016-01-25T19:41:38Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((password.length()) >= 5) { java.lang.System.out.println(prob2.PasswordChecker.isLevel1(password)); java.lang.System.out.println(prob2.PasswordChecker.isLevel2(password)); java.lang.System.out.println(prob2.PasswordChecker.passwordLevel(password)); }else java.lang.System.out.println(\"must be more than 6 characters!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2332/buggy-version/hw_1MNiehus.src.prob2.PasswordChecker.java", "BodyUseAPI": ["java.io.PrintStream.println(boolean)", "java.io.PrintStream.println(int)", "prob2.PasswordChecker.isLevel2(java.lang.String)", "prob2.PasswordChecker.isLevel1(java.lang.String)", "java.io.PrintStream.println(boolean)", "prob2.PasswordChecker.passwordLevel(java.lang.String)"], "Fixed commit": "18488206ce1ac8437f950a777840a2b935dd0b9d", "Url": "https://api.github.com/repos/MorganNiehus/SecSim", "Date": "2016-01-24T19:39:07Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.homeki.android.settings.Settings.getAlarmStartTime(context)) == (-1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8871/buggy-version/src.com.homeki.android.reporter.ReporterAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "76552a68178034c645dc7bb8f3ba77778408d60d", "Url": "https://api.github.com/repos/homeki/homekiandroid", "Date": "2013-12-02T18:36:54Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tryIntermediate.getBlockRange().getStart().getPosition()) == (min.getPosition())) { if ((tryIntermediate.getBlockRange().getEnd().getPosition()) < (max.getPosition())) { matches.add(tryIntermediate); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2121/buggy-version/src.main.java.org.candle.decompiler.intermediate.graph.enhancer.RetractDuplicateFinally.java", "BodyUseAPI": ["org.candle.decompiler.intermediate.code.TryIntermediate.getBlockRange()", "tryIntermediate.getBlockRange().getEnd().getPosition()", "tryIntermediate.getBlockRange().getEnd()", "java.util.LinkedList<org.candle.decompiler.intermediate.code.TryIntermediate>.add(org.candle.decompiler.intermediate.code.TryIntermediate)"], "Fixed commit": "2534be33ea6ead05bcda75d5ea7f6157316a3d64", "Url": "https://api.github.com/repos/bradsdavis/candle-decompiler", "Date": "2013-03-03T18:21:54Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hour) < 10) s += (\"0\" + (hour)) + \":00\"; else s += (hour) + \":00\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8734/buggy-version/src.calendar.DayField.java", "BodyUseAPI": [], "Fixed commit": "ec38564d78c43d55d0751be1f3bedb8e7d973eb5", "Url": "https://api.github.com/repos/sasaber/GUICalendar", "Date": "2017-08-02T04:28:03Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version) != null) { org.opendaylight.openflowplugin.openflow.md.core.HandshakeManagerImpl.LOG.debug(\"Hello recieved after handshake already settled ... ignoring.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8082/buggy-version/openflowplugin.src.main.java.org.opendaylight.openflowplugin.openflow.md.core.HandshakeManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "b7fc0b9c1b66a1976db3b5f748c7d378d7c7c2d8", "Url": "https://api.github.com/repos/opendaylight/openflowplugin", "Date": "2014-07-15T22:52:24Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.carbon.dataservices.sql.driver.TDriverUtil.isRegistryPath(filePath)) { try { org.wso2.carbon.registry.core.service.RegistryService registryService = org.wso2.carbon.dataservices.sql.driver.internal.SQLDriverDSComponent.getRegistryService(); if (registryService == null) { throw new java.sql.SQLException(\"DBUtils.getInputStreamFromPath(): Registry service is not available\"); } org.wso2.carbon.registry.core.Registry registry; if (filePath.startsWith(org.wso2.carbon.dataservices.sql.driver.TDriverUtil.CONF_REGISTRY_PATH_PREFIX)) { if ((filePath.length()) > (org.wso2.carbon.dataservices.sql.driver.TDriverUtil.CONF_REGISTRY_PATH_PREFIX.length())) { filePath = filePath.substring(org.wso2.carbon.dataservices.sql.driver.TDriverUtil.CONF_REGISTRY_PATH_PREFIX.length()); registry = registryService.getConfigSystemRegistry(org.wso2.carbon.dataservices.sql.driver.TDriverUtil.getCurrentTenantId()); }else { throw new java.sql.SQLException(\"Empty configuration registry path given\"); } }else { if ((filePath.length()) > (org.wso2.carbon.dataservices.sql.driver.TDriverUtil.GOV_REGISTRY_PATH_PREFIX.length())) { filePath = filePath.substring(org.wso2.carbon.dataservices.sql.driver.TDriverUtil.GOV_REGISTRY_PATH_PREFIX.length()); registry = registryService.getGovernanceSystemRegistry(org.wso2.carbon.dataservices.sql.driver.TDriverUtil.getCurrentTenantId()); }else { throw new java.sql.SQLException(\"Empty governance registry path given\"); } } if (registry.resourceExists(filePath)) { pin = new java.io.PipedInputStream(); out = new java.io.PipedOutputStream(pin); new org.wso2.carbon.dataservices.sql.driver.util.WorkBookOutputWriter(workbook, out).start(); org.wso2.carbon.registry.core.Resource serviceResource = registry.get(filePath); serviceResource.setContentStream(pin); registry.put(filePath, serviceResource); }else { throw new java.sql.SQLException(((\"The given XSLT resource path at '\" + filePath) + \"' does not exist\")); } } catch (org.wso2.carbon.registry.core.exceptions.RegistryException e) { throw new java.sql.SQLException(e); } }else { java.io.File file = new java.io.File(filePath); if ((filePath.startsWith((\".\" + (java.io.File.separator)))) || (filePath.startsWith((\"..\" + (java.io.File.separator))))) { filePath = file.getAbsolutePath(); } out = new java.io.FileOutputStream(filePath); workbook.write(out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2817/buggy-version/components.data-services.org.wso2.carbon.dataservices.sql.driver.src.main.java.org.wso2.carbon.dataservices.sql.driver.TDriverUtil.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.length()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "4893fdc983747a163be16fe0feb28b64d3a7baaf", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon-data", "Date": "2015-09-22T07:56:12Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.preferences.IEclipsePreferences.get(StringPool.PREF_SKIP_DIRECTORY_KEY,StringPool.PREF_SKIP_DIRECTORY_VALUE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((value == null) || (value.equals(\"\"))) value = br.com.facilit.eclipse.ext.rclass.service.util.StringPool.PREF_SKIP_DIRECTORY_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1688/buggy-version/src-impl.br.com.facilit.eclipse.ext.rclass.ui.RClassPreferencePage.java", "BodyUseAPI": [], "Fixed commit": "b9db1f3fd5a3d51037c72306b138bcc491591597", "Url": "https://api.github.com/repos/paulorec/RClass4j", "Date": "2015-06-04T12:24:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.preferences.IEclipsePreferences.get(StringPool.PREF_LANGUAGE_PATTERN_KEY,StringPool.PREF_LANGUAGE_PATTERN_VALUE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((value == null) || (value.equals(\"\"))) value = br.com.facilit.eclipse.ext.rclass.service.util.StringPool.PREF_LANGUAGE_PATTERN_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1688/buggy-version/src-impl.br.com.facilit.eclipse.ext.rclass.ui.RClassPreferencePage.java", "BodyUseAPI": [], "Fixed commit": "b9db1f3fd5a3d51037c72306b138bcc491591597", "Url": "https://api.github.com/repos/paulorec/RClass4j", "Date": "2015-06-04T12:24:38Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (canvas != null) { animateStartCell(threadWorkTime); synchronized(gameView.getHolder()) { gameView.drawGame(canvas); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8624/buggy-version/app.src.main.java.com.games.oleg.snake.back.threads.GameLoopThread.java", "BodyUseAPI": ["com.games.oleg.snake.NewGameView.drawGame(android.graphics.Canvas)"], "Fixed commit": "8daead2c7cdfc49cc1683502688509fa54bf6676", "Url": "https://api.github.com/repos/oshm/Snake", "Date": "2015-05-04T12:08:59Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!gameOver) && row) && reverse) { highlight = new int[connection][2]; for (int rt = r, ct = c, count = 0; count < (connection); count++ , rt++ , ct--) { if ((board[rt][ct]) == i) { highlight[count][0] = rt; highlight[count][1] = ct; }else { highlight = null; break; } } if ((highlight) != null) gameOver = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1888/buggy-version/WW-Games-2.src.main.java.com.wackywozniaks.games.connect.Connect.java", "BodyUseAPI": [], "Fixed commit": "63605b52e3699f12635c62fae1ee86cf6313c8f9", "Url": "https://api.github.com/repos/Wacky-Wozniaks/WW-Games", "Date": "2017-04-08T12:31:13Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((instanceConfigs.length) == 0) { notifyStop(destination); }else { com.alibaba.otter.canal.deployer.monitor.SpringInstanceConfigMonitor.InstanceConfigFiles lastFile = lastFiles.get(destination); boolean hasChanged = judgeFileChanged(instanceConfigs, lastFile.getInstanceFiles()); if (hasChanged) { notifyReload(destination); } if (hasChanged || (org.springframework.util.CollectionUtils.isEmpty(lastFile.getInstanceFiles()))) { java.util.List<com.alibaba.otter.canal.deployer.monitor.SpringInstanceConfigMonitor.FileInfo> newFileInfo = new java.util.ArrayList<com.alibaba.otter.canal.deployer.monitor.SpringInstanceConfigMonitor.FileInfo>(); for (java.io.File instanceConfig : instanceConfigs) { newFileInfo.add(new com.alibaba.otter.canal.deployer.monitor.SpringInstanceConfigMonitor.FileInfo(instanceConfig.getName(), instanceConfig.lastModified())); } lastFile.setInstanceFiles(newFileInfo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7604/buggy-version/deployer.src.main.java.com.alibaba.otter.canal.deployer.monitor.SpringInstanceConfigMonitor.java", "BodyUseAPI": ["com.alibaba.otter.canal.deployer.monitor.SpringInstanceConfigMonitor.judgeFileChanged(java.io.File[],java.util.List<com.alibaba.otter.canal.deployer.monitor.SpringInstanceConfigMonitor.FileInfo>)"], "Fixed commit": "018083fb3ad63a7931953446f86a8cb82f9272f7", "Url": "https://api.github.com/repos/alibaba/canal", "Date": "2013-10-08T13:46:14Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bRotated) { canvas.restore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3945/buggy-version/app.src.main.java.com.ds.avare.views.PlatesView.java", "BodyUseAPI": [], "Fixed commit": "7ca7b37bf7158a7638eb6918d3f69818d3ff5bb3", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2016-03-02T14:35:19Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (boundedLinesPerProgressUpdate <= (uk.ac.ed.inf.mandelbrotmaps.compute.strategies.renderscript.RenderscriptFractalComputeStrategy.MIN_LINES_PER_PROGRESS_UPDATE)) { boundedLinesPerProgressUpdate = uk.ac.ed.inf.mandelbrotmaps.compute.strategies.renderscript.RenderscriptFractalComputeStrategy.MIN_LINES_PER_PROGRESS_UPDATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6257/buggy-version/MandelbrotMapsAndroid.app.src.main.java.uk.ac.ed.inf.mandelbrotmaps.compute.strategies.renderscript.RenderscriptFractalComputeStrategy.java", "BodyUseAPI": [], "Fixed commit": "c5a1c1d001d44ab6f62b2d532bb5fe1db8cedbe5", "Url": "https://api.github.com/repos/CarrotCodes/FractalMaps", "Date": "2015-03-24T13:13:03Z"},
{"Line": "=>1482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((record.getReadUnmappedFlag()) || (record.getCigarString().equals(SAMRecord.NO_ALIGNMENT_CIGAR))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/847/buggy-version/src.main.java.com.astrazeneca.vardict.VarDict.java", "BodyUseAPI": [], "Fixed commit": "ca0acbb6308ff35cf31b9b14c98b65f49d4ac7b2", "Url": "https://api.github.com/repos/AstraZeneca-NGS/VarDictJava", "Date": "2016-12-05T18:08:18Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["insa.db.UserAccount.getUserCategory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userCategory.compareTo(\"Student\")) == 0) { request.setAttribute(\"student\", \"true\"); }else { request.setAttribute(\"student\", \"false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2703/buggy-version/src.java.insa.client.Candidatures.java", "BodyUseAPI": [], "Fixed commit": "1a3b065e303ef8a16bb315af82e9c8a238ad9c82", "Url": "https://api.github.com/repos/PeaceMaker503/iManage", "Date": "2016-12-29T10:41:29Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saveMap) server.world.savePlayerMap(this, getMapSave());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6329/buggy-version/src.engine.network.server.ServerClient.java", "BodyUseAPI": [], "Fixed commit": "2ff8dbed7059124a18b1196b4362bd34ca14b4dc", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-04-14T12:11:48Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<ch.qos.logback.classic.spi.ILoggingEvent>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (event.getLevel().isGreaterOrEqual(level)) appender.doAppend(event);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1353/buggy-version/lib4j.logging.src.main.java.org.lib4j.logging.DeferredLogger.java", "BodyUseAPI": ["ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent>.doAppend(ch.qos.logback.classic.spi.ILoggingEvent)"], "Fixed commit": "8c714811166c1e6436b8f62cec8468232a52f863", "Url": "https://api.github.com/repos/SevaSafris/java", "Date": "2017-12-07T00:59:33Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (checker != null) { this.inner.checkAlwaysConsumed(checker, startNonTerminal, stack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2669/buggy-version/src.nez.expr.And.java", "BodyUseAPI": ["this.inner.checkAlwaysConsumed(nez.expr.GrammarChecker,java.lang.String,nez.util.UList<java.lang.String>)"], "Fixed commit": "bc642ac23dc65999cf5bc2340f14fb73f8b7fe02", "Url": "https://api.github.com/repos/peg4d/nez", "Date": "2015-03-07T03:53:08Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (checker != null) { this.inner.checkAlwaysConsumed(checker, startNonTerminal, stack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2669/buggy-version/src.nez.expr.Not.java", "BodyUseAPI": ["this.inner.checkAlwaysConsumed(nez.expr.GrammarChecker,java.lang.String,nez.util.UList<java.lang.String>)"], "Fixed commit": "bc642ac23dc65999cf5bc2340f14fb73f8b7fe02", "Url": "https://api.github.com/repos/peg4d/nez", "Date": "2015-03-07T03:53:08Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<java.lang.Object>.isPresent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowContainsData) { addExtraFields(outputRow, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6561/buggy-version/plugins.kettle-json-plugin.src.org.pentaho.di.trans.steps.jsoninput.JsonInput.java", "BodyUseAPI": [], "Fixed commit": "e156b08d1c2bf66bc7e0b0677b13709e7f28a8b2", "Url": "https://api.github.com/repos/ccaspanello/pentaho-kettle", "Date": "2016-10-14T17:41:14Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ipinpar.app.manager.UserManager.getInstance().isLogin()) { if (com.ipinpar.app.manager.AgreeManager.getInstance().isAgreed(currActivity.getAcid(), \"acid\")) { iv_interested.setImageResource(R.drawable.experience_diary_like_click); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2003/buggy-version/Pinpar.src.com.ipinpar.app.activity.OngoingAcDetail.java", "BodyUseAPI": [], "Fixed commit": "895c90716e04882b98790be7f808061f3b89e65f", "Url": "https://api.github.com/repos/chenzefeng09/pinpar", "Date": "2015-07-20T16:28:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((passOne) != (passTwo)) { android.widget.Toast.makeText(this, \"IDs do not match, please try again\", Toast.LENGTH_LONG).show(); firstID.setText(\"\"); secondID.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7988/buggy-version/app.src.main.java.com.example.jen.bar_locator.Register.java", "BodyUseAPI": [], "Fixed commit": "fbd9e91ae37c1d3b5824fe640e9cfa72ea77b04f", "Url": "https://api.github.com/repos/SeventhLogic/Bar_Locator", "Date": "2015-06-18T22:46:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userOne) != (userTwo)) { android.widget.Toast.makeText(this, \"Passwords do not match, please try again\", Toast.LENGTH_LONG).show(); firstPassword.setText(\"\"); secondPassword.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7988/buggy-version/app.src.main.java.com.example.jen.bar_locator.Register.java", "BodyUseAPI": [], "Fixed commit": "fbd9e91ae37c1d3b5824fe640e9cfa72ea77b04f", "Url": "https://api.github.com/repos/SeventhLogic/Bar_Locator", "Date": "2015-06-18T22:46:18Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((this.fileName) == null) || (this.fileName.isEmpty())) { throw new java.lang.IllegalArgumentException(java.lang.String.format((\"No FileName was provided or resolved. \" + \"Input file item was %s and input file name was %s.\"), file.toString(), fileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8668/buggy-version/src.main.java.org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl.java", "BodyUseAPI": [], "Fixed commit": "73e81a7581393939f1fcbd17e89b4d4ec4d22962", "Url": "https://api.github.com/repos/jenkinsci/plain-credentials-plugin", "Date": "2015-10-13T16:52:27Z"},
{"Line": "=>1309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expression.isFunction()) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7624/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "b28e54d0d161bc745e70da8f1d9763b401f366bf", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-10-11T13:50:52Z"},
{"Line": "=>1445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conceptType.equals(OntConceptType.RDF_PROPERTY)) { cn.setType(ConceptType.RDFPROPERTY); }else if (conceptType.equals(OntConceptType.VARIABLE)) { cn.setType(ConceptType.VARIABLE); }else if (conceptType.equals(OntConceptType.FUNCTION_DEFN)) { cn.setType(ConceptType.FUNCTION_DEFN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7624/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": ["com.ge.research.sadl.model.OntConceptType.equals(OntConceptType.VARIABLE)", "com.ge.research.sadl.model.OntConceptType.equals(OntConceptType.FUNCTION_DEFN)"], "Fixed commit": "b28e54d0d161bc745e70da8f1d9763b401f366bf", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-10-11T13:50:52Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isPlayingProperty().get()) { player.playPreviousSong(); }else { player.setPreviousSong(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7494/buggy-version/src.mytunes.BLL.BLLManager.java", "BodyUseAPI": ["mytunes.BLL.Player.setPreviousSong()", "mytunes.BLL.Player.playPreviousSong()"], "Fixed commit": "5786b298a2f83d6987b100a56125451a716581b5", "Url": "https://api.github.com/repos/MapeSVK/myTunes", "Date": "2017-12-07T12:56:24Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.BiMap<java.lang.String, java.util.List<net.yawk.client.gui.maps.ChunkData>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (chunks == null) { chunks = new java.util.ArrayList<net.yawk.client.gui.maps.ChunkData>(); chunks.add(chunk); factionChunkMap.put(faction, chunks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5148/buggy-version/net.yawk.client.gui.maps.LargeMap.java", "BodyUseAPI": [], "Fixed commit": "c739cab020c859b6ab73a4689aa7aac15356cfa2", "Url": "https://api.github.com/repos/10askinsw/Yawk-Client", "Date": "2015-08-06T18:12:01Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.northernwall.hadrian.service.VipGetDetailsHandler.getVip(org.eclipse.jetty.server.Request,com.northernwall.hadrian.domain.Service)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (host.getNetwork().equals(vip.getNetwork())) { boolean found = false; for (com.northernwall.hadrian.service.dao.GetVipDetailRowData row : details.rows) { if (host.getHostName().equalsIgnoreCase(row.hostName)) { found = true; } } if (!found) { com.northernwall.hadrian.service.dao.GetVipDetailRowData temp = new com.northernwall.hadrian.service.dao.GetVipDetailRowData(); temp.hostName = host.getHostName(); temp.warning = \"Host not found in VIP\"; details.rows.add(temp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4441/buggy-version/src.main.java.com.northernwall.hadrian.service.VipGetDetailsHandler.java", "BodyUseAPI": ["host.getHostName().equalsIgnoreCase(row.hostName)", "com.northernwall.hadrian.domain.Host.getHostName()", "com.northernwall.hadrian.domain.Host.getHostName()"], "Fixed commit": "fa5b1a24d70f5f9fd33b775d5bfc0a59c05ff555", "Url": "https://api.github.com/repos/Jukkorsis/Hadrian", "Date": "2016-06-23T04:29:50Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["world.tiles.Tile.occupant()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (party != null) { if (orientation == (renderer.Camera.NORTH)) party.setAnimationName(\"north\"); else if (orientation == (renderer.Camera.EAST)) party.setAnimationName(\"east\"); else if (orientation == (renderer.Camera.SOUTH)) party.setAnimationName(\"south\"); else if (orientation == (renderer.Camera.WEST)) party.setAnimationName(\"west\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1969/buggy-version/src.controllers.WorldController.java", "BodyUseAPI": ["world.icons.Party.setAnimationName(java.lang.String)", "world.icons.Party.setAnimationName(java.lang.String)", "world.icons.Party.setAnimationName(java.lang.String)", "world.icons.Party.setAnimationName(java.lang.String)"], "Fixed commit": "e3ab302f182dd04ec8eab3f1916a5f45fc178ed2", "Url": "https://api.github.com/repos/craigthelinguist/knightcapital", "Date": "2014-12-02T09:13:01Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xuemiao.service.SignInInfoService.wrapCourseIntoSignInCourseInfoJson(com.xuemiao.service.CourseEntity,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (signInInfoTimeSegment != null) { signInInfoTimeSegments.add(signInInfoTimeSegment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2106/buggy-version/src.main.java.com.xuemiao.service.SignInInfoService.java", "BodyUseAPI": ["java.util.List<com.xuemiao.api.Json.SignInInfoTimeSegment>.add(com.xuemiao.api.Json.SignInInfoTimeSegment)"], "Fixed commit": "e84820252cb18696a3a644782f17ae66d4104324", "Url": "https://api.github.com/repos/zijundeng/signing-in-system", "Date": "2016-10-24T05:06:31Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((options.has(\"header\")) && (options.getJSONObject(\"header\").has(\"Content-Type\"))) { android.util.Log.d(\"\", options.getJSONObject(\"data\").toString()); requestBody = okhttp3.RequestBody.create(okhttp3.MediaType.parse(options.getJSONObject(\"header\").getString(\"Content-Type\")), options.getJSONObject(\"data\").toString()); }else { requestBody = bodyBuilder.build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3963/buggy-version/app.src.main.java.com.jasonette.seed.Action.JasonNetworkAction.java", "BodyUseAPI": ["options.getJSONObject(\"data\").toString()", "org.json.JSONObject.getJSONObject(java.lang.String)", "options.getJSONObject(\"data\").toString()", "android.util.Log.d(java.lang.String,options.getJSONObject(\"data\").toString())", "org.json.JSONObject.getJSONObject(java.lang.String)", "okhttp3.RequestBody.create(okhttp3.MediaType.parse(options.getJSONObject(\"header\").getString(\"Content-Type\")),options.getJSONObject(\"data\").toString())", "org.json.JSONObject.getJSONObject(java.lang.String)", "okhttp3.MediaType.parse(options.getJSONObject(\"header\").getString(\"Content-Type\"))", "options.getJSONObject(\"header\").getString(java.lang.String)"], "Fixed commit": "4084bd94371cbdd1020126fed500313ba6d2fe3e", "Url": "https://api.github.com/repos/burstbeta/JASONETTE-Android", "Date": "2017-09-08T08:16:09Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alvazan.orm.parser.antlr.ViewInfoImpl.getPartition()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (partitionMeta != null) partColMeta = partitionMeta.getPartitionColumn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6828/buggy-version/src.main.java.com.alvazan.orm.layer5.query.SpiIndexQueryImpl.java", "BodyUseAPI": ["com.alvazan.orm.parser.antlr.PartitionMeta.getPartitionColumn()"], "Fixed commit": "22d50a12667d03fd2c4683abeb59a4822420a4ce", "Url": "https://api.github.com/repos/deanhiller/playorm", "Date": "2013-04-12T15:02:18Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMember) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6039/buggy-version/app.src.main.java.com.yaoyumeng.v2ex.ui.fragment.UserFragment.java", "BodyUseAPI": [], "Fixed commit": "8f107071f8e3ecfae5925111457ca9eb1a8cf907", "Url": "https://api.github.com/repos/greatyao/v2ex-android", "Date": "2015-07-01T13:43:32Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.containsKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!contains) { if (org.apache.camel.catalog.JSonSchemaHelper.isPropertyRequired(rows, key)) { java.lang.String value = org.apache.camel.catalog.JSonSchemaHelper.getPropertyDefaultValue(rows, key); if (value != null) { properties.put(key, value); key2 = value; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2800/buggy-version/platforms.catalog.src.main.java.org.apache.camel.catalog.DefaultCamelCatalog.java", "BodyUseAPI": [], "Fixed commit": "5e1c523c7ba68d208dcb9eb829f4a8fb16790ee9", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-11-16T17:27:40Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputStartTime) > 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7539/buggy-version/src.main.java.collabstream.streaming.Master.java", "BodyUseAPI": [], "Fixed commit": "15a6dbf5dbd7c51418cc3f9e4507ae6c791ae774", "Url": "https://api.github.com/repos/MrChrisJohnson/CollabStream", "Date": "2011-12-06T19:31:54Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((w.length) > 1) { scanStepSize = (w[1]) - (w[0]); }else { scanWindowSize = w[0]; scanStepSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/423/buggy-version/rega-genotype.src.main.java.rega.genotype.ui.util.Genome.java", "BodyUseAPI": [], "Fixed commit": "f2f202bb574f3f1b8d1a23aa5bbc2e1587fb0909", "Url": "https://api.github.com/repos/murilofreire/rega-genotype", "Date": "2015-06-03T09:38:36Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b.getFlowTypeAtBorder(Boundary.LOWER)) == (MassBoundary.REFLECTIVE)) f[i][ny1] = -(f[i][ny2]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1929/buggy-version/energy2d.src.org.concord.energy2d.model.FluidSolver2D.java", "BodyUseAPI": [], "Fixed commit": "c2bd8198d8661327d914f873ade034f36225b952", "Url": "https://api.github.com/repos/charxie/energy2d", "Date": "2014-07-12T20:37:20Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b.getFlowTypeAtBorder(Boundary.UPPER)) == (MassBoundary.REFLECTIVE)) f[i][0] = -(f[i][1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1929/buggy-version/energy2d.src.org.concord.energy2d.model.FluidSolver2D.java", "BodyUseAPI": [], "Fixed commit": "c2bd8198d8661327d914f873ade034f36225b952", "Url": "https://api.github.com/repos/charxie/energy2d", "Date": "2014-07-12T20:37:20Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 9) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6020/buggy-version/src.oe.lib.Debug.java", "BodyUseAPI": [], "Fixed commit": "765e6197b59c721a1ba9e467b857327341b4bea7", "Url": "https://api.github.com/repos/ictrobot/Open-Exchange", "Date": "2013-11-17T17:09:30Z"},
{"Line": "=>615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.infoglue.deliver.util.CacheController.defeatCaches.get().getDefeatCache()) org.infoglue.deliver.util.CacheController.defeatCaches.get().setDefeatedKey((((\"\" + cacheName) + \"_\") + (key.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/720/buggy-version/src.java.org.infoglue.deliver.util.CacheController.java", "BodyUseAPI": ["org.infoglue.deliver.util.DefeatCacheParameters.setDefeatedKey(java.lang.String)", "org.infoglue.deliver.util.CacheController.ThreadLocalDefeatCacheMode.get()"], "Fixed commit": "b2b3d32b807009c1d8005e8fabec2ad5a5b188ae", "Url": "https://api.github.com/repos/stenbacka/infoglue2", "Date": "2013-08-23T14:57:14Z"},
{"Line": "=>908", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.infoglue.deliver.util.CacheController.defeatCaches.get().getDefeatCache()) org.infoglue.deliver.util.CacheController.defeatCaches.get().setDefeatedKey((((\"\" + cacheName) + \"_\") + (key.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/720/buggy-version/src.java.org.infoglue.deliver.util.CacheController.java", "BodyUseAPI": ["org.infoglue.deliver.util.DefeatCacheParameters.setDefeatedKey(java.lang.String)", "org.infoglue.deliver.util.CacheController.ThreadLocalDefeatCacheMode.get()"], "Fixed commit": "b2b3d32b807009c1d8005e8fabec2ad5a5b188ae", "Url": "https://api.github.com/repos/stenbacka/infoglue2", "Date": "2013-08-23T14:57:14Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.getType().getSimpleName().equals(\"Class\")) { return ((java.util.List) (response.getClass().getMethod(\"getClazz\").invoke(response))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1479/buggy-version/windows.src.main.java.org.mule.modules.quickbooks.windows.api.DefaultQuickBooksWindowsClient.java", "BodyUseAPI": [], "Fixed commit": "6e7e1a084f26fb61bba4fdaf035540605267cfe8", "Url": "https://api.github.com/repos/mulesoft/quickbooks-connector", "Date": "2012-07-13T21:42:36Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<org.nschmidt.ldparteditor.data.GData, org.nschmidt.ldparteditor.data.GData>.get(org.nschmidt.ldparteditor.data.GData)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (s2 == null) { s2 = getSubfile(g2); cache.put(g2, s2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4843/buggy-version/src.org.nschmidt.ldparteditor.data.VM00Base.java", "BodyUseAPI": [], "Fixed commit": "77d54ff1ea5738bc4cff54966fa96279cc8435e9", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-10-06T20:43:37Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<org.nschmidt.ldparteditor.data.GData, org.nschmidt.ldparteditor.data.GData>.get(org.nschmidt.ldparteditor.data.GData)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (s1 == null) { s1 = getSubfile(g1); cache.put(g1, s1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4843/buggy-version/src.org.nschmidt.ldparteditor.data.VM00Base.java", "BodyUseAPI": [], "Fixed commit": "77d54ff1ea5738bc4cff54966fa96279cc8435e9", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-10-06T20:43:37Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nv) != null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5211/buggy-version/src.haven.CacheMap.java", "BodyUseAPI": [], "Fixed commit": "fd506a1c6fd0573e0f26fc011b103cbfa3d940be", "Url": "https://api.github.com/repos/EnderWiggin/Custom-Salem", "Date": "2012-08-15T04:58:35Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.scasefp7.eclipse.core.ontology.DynamicOntologyAPI.getActionOfActivity(java.lang.String)", "eu.scasefp7.eclipse.core.ontology.DynamicOntologyAPI.getActionOfActivity(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((taction != null) && (saction != null)) linkedOntology.addNextActivityToActivity(sactivity, tactivity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5110/buggy-version/eu.scasefp7.eclipse.core.src.eu.scasefp7.eclipse.core.handlers.LinkOntologiesHandler.java", "BodyUseAPI": [], "Fixed commit": "9e21cacf7604528e3a185ad2ac3d872fc388fa49", "Url": "https://api.github.com/repos/s-case/s-case-core", "Date": "2015-09-03T09:36:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((movements.get(i).measures.size()) > 0) { if ((Measure.MEASURE_POSITION_COMPARATOR.compare(movements.get(i).measures.get(0), measure)) < 0) { measure.movement = movements.get(i); movements.get(i).measures.add(measure); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1336/buggy-version/src.main.java.zemfi.de.vertaktoid.Facsimile.java", "BodyUseAPI": ["java.util.ArrayList<zemfi.de.vertaktoid.Movement>.get(int)", "java.util.ArrayList<zemfi.de.vertaktoid.Movement>.get(int)", "java.util.ArrayList<zemfi.de.vertaktoid.Movement>.get(int)", "movements.get(i).measures.get(int)", "movements.get(i).measures.add(zemfi.de.vertaktoid.Measure)", "Measure.MEASURE_POSITION_COMPARATOR.compare(movements.get(i).measures.get(0),zemfi.de.vertaktoid.Measure)"], "Fixed commit": "8880f537fb68d65ede364a23f7cede91c912331e", "Url": "https://api.github.com/repos/cemfi/vertaktoid", "Date": "2017-03-06T23:06:46Z"},
{"Line": "=>860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (abort) { throw new org.joval.scap.oval.engine.Engine.AbortException(org.joval.util.JOVALMsg.getMessage(JOVALMsg.ERROR_ENGINE_ABORT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6183/buggy-version/src.org.joval.scap.oval.engine.Engine.java", "BodyUseAPI": [], "Fixed commit": "b563871d7d9826a5adc3fb882459ef7dcffc71dc", "Url": "https://api.github.com/repos/joval/jOVAL", "Date": "2014-01-22T07:06:59Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trump.equals(suit)) return \"false\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/303/buggy-version/src.java.euchre.Game.java", "BodyUseAPI": [], "Fixed commit": "7b80961d62ef2793287a1eeba34334760773c9b3", "Url": "https://api.github.com/repos/zachjwheeler/gccweb", "Date": "2013-12-09T23:06:08Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.body) == null) return this.body = new byte[0]; else return this.body;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/664/buggy-version/src.com.aeroheart.owlery.Response.java", "BodyUseAPI": [], "Fixed commit": "70917d7d72dce38a591b97f3bd9d0f979d3a802c", "Url": "https://api.github.com/repos/aeroheart-c6/owlery-android", "Date": "2013-08-29T06:58:15Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parser instanceof com.aeroheart.owlery.parser.LazyAssIdleParser) responseBody = null; else responseBody = this.getBody();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/664/buggy-version/src.com.aeroheart.owlery.Response.java", "BodyUseAPI": [], "Fixed commit": "70917d7d72dce38a591b97f3bd9d0f979d3a802c", "Url": "https://api.github.com/repos/aeroheart-c6/owlery-android", "Date": "2013-08-29T06:58:15Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(ru.tehkode.permissions.bukkit.PermissionsEx.getUser(damager).inGroup(\"Default\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2388/buggy-version/src.main.java.xyz.jaoafa.mymaid.EventHandler.DefaultCheck.java", "BodyUseAPI": [], "Fixed commit": "0fc975a5c4428b2875e6966e9d083e8dd0677522", "Url": "https://api.github.com/repos/book000/MyMaid", "Date": "2016-10-08T17:13:50Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fplayer == (fme)) { fplayer.msg(Lang.COMMAND_DISBAND_BROADCAST_YOURSYOU); }else { fplayer.msg(Lang.COMMAND_DISBAND_BROADCAST_YOURS, who); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/6677/buggy-version/src.main.java.net.redstoneore.legacyfactions.cmd.CmdFactionsDisband.java", "BodyUseAPI": ["net.redstoneore.legacyfactions.entity.FPlayer.msg(Lang.COMMAND_DISBAND_BROADCAST_YOURSYOU)", "net.redstoneore.legacyfactions.entity.FPlayer.msg(Lang.COMMAND_DISBAND_BROADCAST_YOURS,java.lang.String)"], "Fixed commit": "18794bc8069f1832c74f5209477f6e6de7d2dc99", "Url": "https://api.github.com/repos/redstone/LegacyFactions", "Date": "2017-04-28T05:56:18Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first) first = false; else sql.append(\",\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7749/buggy-version/src.org.ohdsi.databases.ConnectionWrapper.java", "BodyUseAPI": [], "Fixed commit": "585c3c6c7cfb4baa2ac69bf89443293512024330", "Url": "https://api.github.com/repos/OHDSI/MedlineXmlToDatabase", "Date": "2017-07-15T13:03:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((highscore) == null) { readFromInternalFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4358/buggy-version/app.src.main.java.de.jotre.go4itv2015.highscore.HighscoreHandlerJson.java", "BodyUseAPI": [], "Fixed commit": "b44063792ab2588b8ec33752eefb509d8683ad75", "Url": "https://api.github.com/repos/HannesT117/Go4it.v2015", "Date": "2015-08-21T09:01:02Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) { if ((((((steps.size()) > 1) && (!(result instanceof org.exist.dom.persistent.VirtualNodeSet))) && (!(expr instanceof org.exist.xquery.EnclosedExpr))) && (!(result.isEmpty()))) && (!(org.exist.xquery.value.Type.subTypeOf(result.getItemType(), Type.NODE)))) { gotAtomicResult = true; } if (((steps.size()) > 1) && ((getLastExpression()) instanceof org.exist.xquery.Step)) { result.removeDuplicates(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2062/buggy-version/src.org.exist.xquery.PathExpr.java", "BodyUseAPI": ["org.exist.xquery.value.Sequence.removeDuplicates()", "org.exist.xquery.value.Type.subTypeOf(result.getItemType(),Type.NODE)", "org.exist.xquery.value.Sequence.isEmpty()", "org.exist.xquery.value.Sequence.getItemType()"], "Fixed commit": "f183530aec5d3e04f7aa3e0a432487482b647767", "Url": "https://api.github.com/repos/ljo/exist", "Date": "2017-01-14T16:37:16Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getTempItem()) != null) { roomManager.getCurrentRoom().setEntityWithXY(player.getX(), player.getY(), player.getTempItem()); player.setTempItem(null); }else { roomManager.getCurrentRoom().setEntityWithXY(player.getX(), player.getY(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1300/buggy-version/Semesterprojekt.src.business.Door.java", "BodyUseAPI": ["business.Player.getY()", "business.Player.getX()", "business.Player.getY()", "business.Player.getX()", "business.Player.getTempItem()", "roomManager.getCurrentRoom().setEntityWithXY(player.getX(),player.getY(),player.getTempItem())", "roomManager.getCurrentRoom().setEntityWithXY(player.getX(),player.getY(),<nulltype>)", "business.Player.setTempItem(<nulltype>)"], "Fixed commit": "aa55275c2907769215a1f238ecfdc910e960dc29", "Url": "https://api.github.com/repos/SE-ST-1-Grp-7/Zuul", "Date": "2017-12-06T22:43:13Z"},
{"Line": "=>761", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (renderingResult == null) { inheritedPaintDefault(state, g); }else { postRenderingAction(renderingResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7507/buggy-version/jtrim-gui.src.main.java.org.jtrim.swing.component.TransformedImageDisplay.java", "BodyUseAPI": ["org.jtrim.swing.component.TransformedImageDisplay<ImageAddress>.postRenderingAction(org.jtrim.swing.component.TransformedImageDisplay.PaintResult)"], "Fixed commit": "237d4e57d9c78c8fdcb4d22edf3cf87db5ea131a", "Url": "https://api.github.com/repos/kelemen/JTrim", "Date": "2013-06-10T15:30:01Z"},
{"Line": "=>1001", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataLink) == null) { org.jtrim.swing.component.TransformedImageDisplay.clearImage(drawingSurface, basicArgs.getBackgroundColor()); return org.jtrim.swing.component.RenderingResult.significant(null); }else { return org.jtrim.swing.component.RenderingResult.noRendering(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7507/buggy-version/jtrim-gui.src.main.java.org.jtrim.swing.component.TransformedImageDisplay.java", "BodyUseAPI": [], "Fixed commit": "237d4e57d9c78c8fdcb4d22edf3cf87db5ea131a", "Url": "https://api.github.com/repos/kelemen/JTrim", "Date": "2013-06-10T15:30:01Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.delete(java.lang.String,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == 0) { android.util.Log.v(MainFormActivity.MTTAG, \"\u6ca1\u6709\u5220\u9664\u4efb\u4f55\u4e1c\u897f\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/656/buggy-version/app.src.main.java.com.example.yanghang.myapplication.ClipInfosDB.MyDBManager.java", "BodyUseAPI": [], "Fixed commit": "809da43d93c2e926aff4a9d0b765dca0da022d24", "Url": "https://api.github.com/repos/younghang/MyAndroidLearning_ClipDemo", "Date": "2016-12-02T04:58:12Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHostView()) != null) { getHostView().mountFlatGUI(widgets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7068/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.WXDiv.java", "BodyUseAPI": [], "Fixed commit": "60d88ee743ba96333c3a7efc83d88acae202302b", "Url": "https://api.github.com/repos/YorkShen/incubator-weex", "Date": "2017-09-01T06:47:51Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHostView()) != null) { getHostView().mountFlatGUI(widgets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7068/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.list.WXCell.java", "BodyUseAPI": [], "Fixed commit": "60d88ee743ba96333c3a7efc83d88acae202302b", "Url": "https://api.github.com/repos/YorkShen/incubator-weex", "Date": "2017-09-01T06:47:51Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mParent) instanceof com.taobao.weex.ui.flat.FlatComponent) && ((UIImp.getFlatComponentAncestor(mParent)) != null)) { childOffset.set(rawoffset.x, rawoffset.y); }else { childOffset.set(left, top); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/7068/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.WXComponent.java", "BodyUseAPI": [], "Fixed commit": "60d88ee743ba96333c3a7efc83d88acae202302b", "Url": "https://api.github.com/repos/YorkShen/incubator-weex", "Date": "2017-09-01T06:47:51Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.equals(\"antlr\")) { java.io.File f = new java.io.File(msg.fileName); if (f.exists()) { displayFileName = f.getName(); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3663/buggy-version/tool.src.org.antlr.v4.tool.ErrorManager.java", "BodyUseAPI": [], "Fixed commit": "8b4d74201e748d1e582c0f08dc08eaf3b3557ae9", "Url": "https://api.github.com/repos/ewanmellor/antlr4", "Date": "2017-10-29T19:21:00Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["namedMatcher.namedPattern().groupNames()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (namedgroups.contains(\"partnumber\")) number = namedMatcher.group(\"partnumber\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/280/buggy-version/SubLibrary.src.main.java.org.lodder.subtools.sublibrary.control.ReleaseParser.java", "BodyUseAPI": [], "Fixed commit": "b180516b92898e32ea58a85bbbf8e6eb1476267f", "Url": "https://api.github.com/repos/phdelodder/SubTools", "Date": "2015-02-23T08:41:23Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["namedMatcher.namedPattern().groupNames()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (namedgroups.contains(\"romanepisode\")) number = namedMatcher.group(\"romanepisode\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/280/buggy-version/SubLibrary.src.main.java.org.lodder.subtools.sublibrary.control.ReleaseParser.java", "BodyUseAPI": [], "Fixed commit": "b180516b92898e32ea58a85bbbf8e6eb1476267f", "Url": "https://api.github.com/repos/phdelodder/SubTools", "Date": "2015-02-23T08:41:23Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serverpaxos.ServerPaxos.day) { time = \"day\"; }else { time = \"night\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2466/buggy-version/ServerPaxos.src.serverpaxos.ServerPaxos.java", "BodyUseAPI": [], "Fixed commit": "b10e5abff003a1a09adfe8bdac32404e9c3c36d0", "Url": "https://api.github.com/repos/yogaadrian/ConsensusPaxosWerewolf", "Date": "2016-05-12T02:20:34Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intent) != null) intent = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/796/buggy-version/BarHopper.src.com.khaotixinc.barhopper.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1cf55ca1aca171275b3b3514ed26c1714b344cb4", "Url": "https://api.github.com/repos/jamesdavis86/BarHopper", "Date": "2013-05-30T18:09:57Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rulesViolated != null) { for (final com.blackducksoftware.integration.hub.model.view.PolicyRuleView ruleViolated : rulesViolated) { final java.lang.String ruleHref = getMetaService().getHref(ruleViolated); if (policyFilter.getRuleLinksToInclude().contains(ruleHref)) { filteredRules.add(ruleViolated); } } }else { return rulesViolated; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8172/buggy-version/src.main.java.com.blackducksoftware.integration.hub.dataservice.notification.transformer.AbstractPolicyTransformer.java", "BodyUseAPI": [], "Fixed commit": "3c5ca56ca6749adc68f370a15d327c521350ddfc", "Url": "https://api.github.com/repos/blackducksoftware/hub-common", "Date": "2017-04-26T02:30:46Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((d.length()) == 1) d = \"0\" + d;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4717/buggy-version/app.src.main.java.com.donboots.newyorktimes.activities.FilterFragment.java", "BodyUseAPI": [], "Fixed commit": "43d3efb98eca3079541c24ca9b0229853d6e2a64", "Url": "https://api.github.com/repos/dboots/newyorktimes", "Date": "2016-08-01T04:57:08Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getPrice()) != null) { android.widget.EditText textPrice = ((android.widget.EditText) (findViewById(R.id.editTextPrice))); textPrice.setText(item.getPrice().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4511/buggy-version/Code.ShoppingList.src.ch.unibe.ese.activities.CreateItemActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(item.getPrice().toString())", "item.getPrice().toString()", "ch.unibe.ese.core.Item.getPrice()"], "Fixed commit": "5eff8595c9e40e39909dc519091a0438a10234d5", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2013-team8", "Date": "2013-10-27T22:03:07Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["textPrice.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((itemPrice.trim().length()) != 0) { java.math.BigDecimal price = new java.math.BigDecimal(itemPrice); item.setPrice(price); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4511/buggy-version/Code.ShoppingList.src.ch.unibe.ese.activities.CreateItemActivity.java", "BodyUseAPI": [], "Fixed commit": "5eff8595c9e40e39909dc519091a0438a10234d5", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2013-team8", "Date": "2013-10-27T22:03:07Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (evaluateConstraints) { uiController.questionsView.lockComboboxAnswers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1724/buggy-version/app.src.org.commcare.activities.FormEntryActivity.java", "BodyUseAPI": [], "Fixed commit": "c60ea26c958bbf7eb32e1a5497beb87fe6c64c0b", "Url": "https://api.github.com/repos/dimagi/commcare-android", "Date": "2017-03-13T10:41:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, kieker.analysisteetime.HostnameRepository.Entry>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entry == null) { return null; }else { return entry.hostname; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/3803/buggy-version/kieker-analysis.src.kieker.analysisteetime.HostnameRepository.java", "BodyUseAPI": [], "Fixed commit": "16445b8bc801d6036302e15b6ed5f002cfe551be", "Url": "https://api.github.com/repos/kieker-monitoring/kieker", "Date": "2016-12-21T14:23:32Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isReceiving) { de.greenrobot.event.EventBus.getDefault().post(new de.tu.darmstadt.seemoo.ansian.control.events.RequestFrequencyEvent((i - 100000))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/1585/buggy-version/app.src.main.java.de.tu.darmstadt.seemoo.ansian.gui.views.WalkieTalkieView.java", "BodyUseAPI": [], "Fixed commit": "f2dac928074d4236196499400d645477379bf994", "Url": "https://api.github.com/repos/mkannwischer/AnSiAn", "Date": "2017-01-21T12:35:27Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPagingParams || hasSortParams) { return new org.springframework.data.rest.repository.PageableResources<org.springframework.hateoas.Resource<?>>(EMPTY_RESOURCE_LIST, repoRequest.getPagingAndSorting(), links); }else { return new org.springframework.hateoas.Resources<org.springframework.hateoas.Resource<?>>(EMPTY_RESOURCE_LIST, links); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/61/buggy-version/spring-data-rest-webmvc.src.main.java.org.springframework.data.rest.webmvc.RepositoryEntityController.java", "BodyUseAPI": [], "Fixed commit": "cf275cb304d24708d299f759c6b29ba37410b558", "Url": "https://api.github.com/repos/SpringSource/spring-data-rest", "Date": "2013-03-12T14:49:39Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPagingParams || hasSortParams) { org.springframework.data.domain.PageRequest pr = new org.springframework.data.domain.PageRequest(((repoRequest.getPagingAndSorting().getPageNumber()) + 1), repoRequest.getPagingAndSorting().getPageSize(), repoRequest.getPagingAndSorting().getSort()) { @java.lang.Override public int getOffset() { return (super.getOffset()) - (repoRequest.getPagingAndSorting().getPageSize()); } }; return new org.springframework.data.rest.repository.PageableResources<org.springframework.hateoas.Resource<?>>(resources, pr, links); }else { return new org.springframework.hateoas.Resources<org.springframework.hateoas.Resource<?>>(resources, links); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/61/buggy-version/spring-data-rest-webmvc.src.main.java.org.springframework.data.rest.webmvc.RepositoryEntityController.java", "BodyUseAPI": [], "Fixed commit": "cf275cb304d24708d299f759c6b29ba37410b558", "Url": "https://api.github.com/repos/SpringSource/spring-data-rest", "Date": "2013-03-12T14:49:39Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flowProps.getProps().containsKey(\"flow.limit.hosts\")) { return flowProps.getProps().getStringList(\"flow.limit.hosts\", java.util.Collections.EMPTY_LIST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8447/buggy-version/azkaban-common.src.main.java.azkaban.executor.ExecutableFlow.java", "BodyUseAPI": ["azkaban.flow.FlowProps.getProps()", "flowProps.getProps().getStringList(java.lang.String,java.util.List)"], "Fixed commit": "6d0e2f55fdb17d01c6f8163c7327fef4f3268430", "Url": "https://api.github.com/repos/lilonghua1987/azkaban", "Date": "2016-03-04T07:07:42Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getResult()) != (PlayerLoginEvent.Result.ALLOWED)) { this.plugin.networking.sendPlayerConnect(event.getPlayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8857/buggy-version/src.main.java.com.archivesmc.inter.listeners.ConnectListener.java", "BodyUseAPI": ["this.plugin.networking.sendPlayerConnect(event.getPlayer())", "org.bukkit.event.player.PlayerLoginEvent.getPlayer()"], "Fixed commit": "53961016be9d76fafc304090f325f273db8216bd", "Url": "https://api.github.com/repos/TheArchives/Inter-Bukkit", "Date": "2015-03-12T09:46:25Z"},
{"Line": "=>1856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["buildData.getErrorDatabase().getErrorData(contentSpec.getAuthorGroup().getTopic())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((errorData != null) && (errorData.hasFatalErrors())) { buildAuthorGroup(buildData); }else { addToZip(((buildData.getBookLocaleFolder()) + (org.jboss.pressgang.ccms.contentspec.builder.DocbookBuilder.AUTHOR_GROUP_FILE_NAME)), authorGroupXML, buildData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/4831/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.builder.DocbookBuilder.java", "BodyUseAPI": [], "Fixed commit": "7e394d595b7ffa1d9d8fbf8f7ba64a5b10be780f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSBuilder", "Date": "2013-10-18T01:01:32Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTarget) != null) { int offset = targetTop - (mTarget.getTop()); final int currentTop = mTarget.getTop(); if ((offset + currentTop) < 0) { offset = 0 - currentTop; } setTargetOffsetTopAndBottom(offset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8661/buggy-version/app.src.main.java.com.hybrid.app.views.OneDirectionSwipeRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "edb15d9f9ff811b85ce86a2d0cd4011302ef81e1", "Url": "https://api.github.com/repos/XinyueZ/Hybrid", "Date": "2014-07-14T09:45:22Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTarget) != null) { mTarget.offsetTopAndBottom(offset); mCurrentTargetOffsetTop = mTarget.getTop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/8661/buggy-version/app.src.main.java.com.hybrid.app.views.OneDirectionSwipeRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "edb15d9f9ff811b85ce86a2d0cd4011302ef81e1", "Url": "https://api.github.com/repos/XinyueZ/Hybrid", "Date": "2014-07-14T09:45:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.etiennelawlor.imagegallery.library.util.ImageGalleryUtils.getFormattedImageUrl(java.lang.String,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(formattedImageUrl))) { com.squareup.picasso.Picasso.with(holder.mImageView.getContext()).load(formattedImageUrl).into(holder.mImageView); }else { holder.mImageView.setImageDrawable(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5515/buggy-version/library.src.main.java.com.etiennelawlor.imagegallery.library.adapters.ImageGalleryAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(holder.mImageView.getContext()).load(java.lang.String)", "com.squareup.picasso.Picasso.with(holder.mImageView.getContext()).load(formattedImageUrl).into(android.widget.ImageView)"], "Fixed commit": "5af3484a831af2da2d3f1b141c6b305415e333e8", "Url": "https://api.github.com/repos/lawloretienne/ImageGallery", "Date": "2015-09-01T19:17:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(image))) { com.squareup.picasso.Picasso.with(imageView.getContext()).load(image).transform(com.etiennelawlor.imagegallery.library.view.PaletteTransformation.instance()).into(imageView, new com.etiennelawlor.imagegallery.library.view.PaletteTransformation.PaletteCallback(imageView) { @java.lang.Override public void onError() { } @java.lang.Override public void onSuccess(android.support.v7.graphics.Palette palette) { int bgColor = getBackgroundColor(palette); if (bgColor != (-1)) linearLayout.setBackgroundColor(bgColor); } }); }else { imageView.setImageDrawable(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/5515/buggy-version/library.src.main.java.com.etiennelawlor.imagegallery.library.adapters.FullScreenImageGalleryAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(imageView.getContext()).load(image).transform(com.etiennelawlor.imagegallery.library.view.PaletteTransformation.instance()).into(android.widget.ImageView,com.etiennelawlor.imagegallery.library.view.PaletteTransformation.PaletteCallback)", "com.squareup.picasso.Picasso.with(imageView.getContext()).load(image).transform(com.etiennelawlor.imagegallery.library.view.PaletteTransformation.instance())", "com.squareup.picasso.Picasso.with(imageView.getContext()).load(java.lang.String)"], "Fixed commit": "5af3484a831af2da2d3f1b141c6b305415e333e8", "Url": "https://api.github.com/repos/lawloretienne/ImageGallery", "Date": "2015-09-01T19:17:41Z"},
{"Line": "=>954", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (spaceNumber == 10) { if (player.isInJail()) { playerTokens.add(player.getToken()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2838/buggy-version/app.src.main.java.venture.cs414.android.monopoly2.backend.GameFacade.java", "BodyUseAPI": [], "Fixed commit": "37a271b762f21ec1eedde10fb3804b345acecce4", "Url": "https://api.github.com/repos/TeamVenture457/Monopoly2", "Date": "2016-11-20T02:21:35Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getVariableReference()) != null) { context.addChildren(entity, com.google.common.collect.Lists.newArrayList(entity.getVariableReference())); entity.getVariableReference().accept(this, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V53/2033/buggy-version/cc.kave.commons.src.main.java.cc.kave.commons.utils.SSTNodeHierarchy.java", "BodyUseAPI": ["entity.getVariableReference().accept(cc.kave.commons.utils.SSTNodeHierarchy.ParentChildrenVisitor,cc.kave.commons.utils.SSTNodeHierarchy)", "com.google.common.collect.Lists.newArrayList(entity.getVariableReference())", "cc.kave.commons.utils.SSTNodeHierarchy.addChildren(cc.kave.commons.model.ssts.expressions.assignable.ICompletionExpression,com.google.common.collect.Lists.newArrayList(entity.getVariableReference()))", "cc.kave.commons.model.ssts.expressions.assignable.ICompletionExpression.getVariableReference()", "cc.kave.commons.model.ssts.expressions.assignable.ICompletionExpression.getVariableReference()"], "Fixed commit": "90d52060151ed04538b65a5ac0a790c1d9d3ff43", "Url": "https://api.github.com/repos/stg-tud/kave-java", "Date": "2016-03-08T15:45:52Z"}]}
