{"UNKNOWN to If":[{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rawMessage.isTxMessage()) { org.mycontroller.standalone.message.McMessageUtils.sendToGateway(rawMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/303/buggy-version/modules.core.src.main.java.org.mycontroller.standalone.provider.rflink.RFLinkProviderBridge.java", "BodyUseAPI": ["org.mycontroller.standalone.message.McMessageUtils.sendToGateway(org.mycontroller.standalone.message.RawMessage)"], "Fixed commit": "705baa93a99da1ca00958277ed9b8f6b2a4504e1", "Url": "https://api.github.com/repos/mycontroller-org/mycontroller", "Date": "2017-01-13T10:25:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rawMessage.isTxMessage()) { executeMcMessage(mcMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/303/buggy-version/modules.core.src.main.java.org.mycontroller.standalone.provider.mysensors.MySensorsProviderBridge.java", "BodyUseAPI": [], "Fixed commit": "705baa93a99da1ca00958277ed9b8f6b2a4504e1", "Url": "https://api.github.com/repos/mycontroller-org/mycontroller", "Date": "2017-01-13T10:25:15Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rawMessage.isTxMessage()) { executeMcMessage(mcMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/303/buggy-version/modules.core.src.main.java.org.mycontroller.standalone.provider.phantio.PhantIOProviderBridge.java", "BodyUseAPI": [], "Fixed commit": "705baa93a99da1ca00958277ed9b8f6b2a4504e1", "Url": "https://api.github.com/repos/mycontroller-org/mycontroller", "Date": "2017-01-13T10:25:15Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((timestamp) instanceof org.apache.flink.streaming.api.windowing.helper.SystemTimestamp) && ((otherTSW.timestamp) instanceof org.apache.flink.streaming.api.windowing.helper.SystemTimestamp)) { return true; }else { return ((startTime) == (otherTSW.startTime)) && ((timestamp.getClass()) == (otherTSW.timestamp.getClass())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6889/buggy-version/flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.TimestampWrapper.java", "BodyUseAPI": ["org.apache.flink.streaming.api.windowing.helper.Timestamp<T>.getClass()"], "Fixed commit": "d72597a2baafea727d0fa25d7c8864d903079930", "Url": "https://api.github.com/repos/mbalassi/flink", "Date": "2015-04-26T11:02:59Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((doorMovements) == 4) c.send(((\"d \" + (id)) + \" -1\")); else if ((doorMovements) == 8) doorOpenedAndClosed.signal();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7753/buggy-version/src.remote.controller.RemoteController.java", "BodyUseAPI": [], "Fixed commit": "03934725c8e88812d1ff1c87b86430336c48a43b", "Url": "https://api.github.com/repos/Objuhr/ElevatorProject", "Date": "2016-03-16T13:36:41Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.fortsoft.pippo.core.PippoSettings.getString(PippoConstants.SETTING_TEMPLATE_PATH_PREFIX,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ro.fortsoft.pippo.core.util.StringUtils.isNullOrEmpty(pathPrefix)) { pathPrefix = ro.fortsoft.pippo.core.TemplateEngine.DEFAULT_PATH_PREFIX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7760/buggy-version/pippo-trimou.src.main.java.ro.fortsoft.pippo.trimou.TrimouTemplateEngine.java", "BodyUseAPI": [], "Fixed commit": "68c3f905da11362e26828f967ee04555b448e7f0", "Url": "https://api.github.com/repos/pippo-java/pippo", "Date": "2015-01-22T04:13:51Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.fortsoft.pippo.core.PippoSettings.getString(PippoConstants.SETTING_TEMPLATE_PATH_PREFIX,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ro.fortsoft.pippo.core.util.StringUtils.isNullOrEmpty(pathPrefix)) { pathPrefix = ro.fortsoft.pippo.core.TemplateEngine.DEFAULT_PATH_PREFIX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7760/buggy-version/pippo-groovy.src.main.java.ro.fortsoft.pippo.groovy.GroovyTemplateEngine.java", "BodyUseAPI": [], "Fixed commit": "68c3f905da11362e26828f967ee04555b448e7f0", "Url": "https://api.github.com/repos/pippo-java/pippo", "Date": "2015-01-22T04:13:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.fortsoft.pippo.core.PippoSettings.getString(PippoConstants.SETTING_TEMPLATE_PATH_PREFIX,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ro.fortsoft.pippo.core.util.StringUtils.isNullOrEmpty(pathPrefix)) { pathPrefix = ro.fortsoft.pippo.core.TemplateEngine.DEFAULT_PATH_PREFIX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7760/buggy-version/pippo-pebble.src.main.java.ro.fortsoft.pippo.pebble.PebbleTemplateEngine.java", "BodyUseAPI": [], "Fixed commit": "68c3f905da11362e26828f967ee04555b448e7f0", "Url": "https://api.github.com/repos/pippo-java/pippo", "Date": "2015-01-22T04:13:51Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.fortsoft.pippo.core.PippoSettings.getString(PippoConstants.SETTING_TEMPLATE_PATH_PREFIX,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ro.fortsoft.pippo.core.util.StringUtils.isNullOrEmpty(pathPrefix)) { pathPrefix = ro.fortsoft.pippo.core.TemplateEngine.DEFAULT_PATH_PREFIX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7760/buggy-version/pippo-jade.src.main.java.ro.fortsoft.pippo.jade.JadeTemplateEngine.java", "BodyUseAPI": [], "Fixed commit": "68c3f905da11362e26828f967ee04555b448e7f0", "Url": "https://api.github.com/repos/pippo-java/pippo", "Date": "2015-01-22T04:13:51Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.fortsoft.pippo.core.PippoSettings.getString(PippoConstants.SETTING_TEMPLATE_PATH_PREFIX,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ro.fortsoft.pippo.core.util.StringUtils.isNullOrEmpty(pathPrefix)) { pathPrefix = ro.fortsoft.pippo.core.TemplateEngine.DEFAULT_PATH_PREFIX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7760/buggy-version/pippo-freemarker.src.main.java.ro.fortsoft.pippo.freemarker.FreemarkerTemplateEngine.java", "BodyUseAPI": [], "Fixed commit": "68c3f905da11362e26828f967ee04555b448e7f0", "Url": "https://api.github.com/repos/pippo-java/pippo", "Date": "2015-01-22T04:13:51Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (damager instanceof org.bukkit.entity.PigZombie) { return be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"zombiepig\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3007/buggy-version/src.main.java.be.Balor.Listeners.Features.ACDeathListener.java", "BodyUseAPI": [], "Fixed commit": "5d26820b0a48390a0104d15fe65cb3ff1cbc603d", "Url": "https://api.github.com/repos/Lathanael/AdminCmd_Fork", "Date": "2012-08-20T12:17:48Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageEvent.getDamager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (damager instanceof org.bukkit.entity.Player) { return be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"player\"); }else if (damager instanceof org.bukkit.entity.Skeleton) { return be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"skeleton\"); }else if (damager instanceof org.bukkit.entity.TNTPrimed) { return be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"TNTPrimed\"); }else if (damager instanceof org.bukkit.entity.Zombie) { if (damager instanceof org.bukkit.entity.PigZombie) { return be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"zombiepig\"); } return be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"zombie\"); }else if (damager instanceof org.bukkit.entity.Projectile) { if (damager instanceof org.bukkit.entity.Arrow) { if ((((org.bukkit.entity.Arrow) (damager)).getShooter()) == null) { return be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"dispenser\"); }else if ((((org.bukkit.entity.Arrow) (damager)).getShooter()) instanceof org.bukkit.entity.Player) { return (be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"playerBow\")) + (be.Balor.Tools.Utils.getPlayerName(((org.bukkit.entity.Player) (((org.bukkit.entity.Arrow) (damager)).getShooter())))); }else if ((((org.bukkit.entity.Projectile) (damager)).getShooter()) instanceof org.bukkit.entity.Skeleton) { return be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"skeleton\"); } }else if (damager instanceof org.bukkit.entity.Fireball) { if ((((org.bukkit.entity.Fireball) (damager)).getShooter()) instanceof org.bukkit.entity.Blaze) { return be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"blaze\"); }else if ((((org.bukkit.entity.Fireball) (damager)).getShooter()) instanceof org.bukkit.entity.Ghast) { return be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"ghast\"); } }else if (damager instanceof org.bukkit.entity.ThrownPotion) { if ((((org.bukkit.entity.ThrownPotion) (damager)).getShooter()) instanceof org.bukkit.entity.Player) { return be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"potion\"); } } }else if (damager instanceof org.bukkit.entity.LivingEntity) { return (be.Balor.bukkit.AdminCmd.ACHelper.getInstance().getDeathMessage(\"mob\")) + (damager.getType().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3007/buggy-version/src.main.java.be.Balor.Listeners.Features.ACDeathListener.java", "BodyUseAPI": ["damager.getType().getName()", "org.bukkit.entity.Entity.getType()"], "Fixed commit": "5d26820b0a48390a0104d15fe65cb3ff1cbc603d", "Url": "https://api.github.com/repos/Lathanael/AdminCmd_Fork", "Date": "2012-08-20T12:17:48Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (from == 0) java.lang.System.out.println(\"create a reader reading from the begining\"); else java.lang.System.out.println(\"create a reader reading from the ending\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4164/buggy-version/core.src.main.java.cn.ac.ict.msbench.utils.SimpleMS.java", "BodyUseAPI": [], "Fixed commit": "8e086a51de4c378af4068247ac94fbfe175acca6", "Url": "https://api.github.com/repos/jiecxy/MSBench", "Date": "2017-04-03T13:26:27Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (clusterItem instanceof prada.lab.android.pingo.view.CurrentPositionMarker) { marker.setIcon(clusterItem.getBitmapDescriptor()); }else if (clusterItem instanceof prada.lab.android.pingo.view.PingoMarker) { bolts.Task.callInBackground(new java.util.concurrent.Callable<com.google.android.gms.maps.model.BitmapDescriptor>() { @java.lang.Override public com.google.android.gms.maps.model.BitmapDescriptor call() throws java.lang.Exception { return clusterItem.getBitmapDescriptor(); } }).onSuccess(new bolts.Continuation<com.google.android.gms.maps.model.BitmapDescriptor, java.lang.Void>() { @java.lang.Override public java.lang.Void then(bolts.Task<com.google.android.gms.maps.model.BitmapDescriptor> task) throws java.lang.Exception { marker.setIcon(task.getResult()); return null; } }, Task.UI_THREAD_EXECUTOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5016/buggy-version/app.src.main.java.prada.lab.android.pingo.view.PingoClusterRenderer.java", "BodyUseAPI": ["bolts.Task.callInBackground(java.util.concurrent.Callable<com.google.android.gms.maps.model.BitmapDescriptor>)", "prada.lab.android.pingo.view.BaseMarker.getBitmapDescriptor()", "com.google.android.gms.maps.model.Marker.setIcon(clusterItem.getBitmapDescriptor())", "bolts.Task.callInBackground(new java.util.concurrent.Callable<com.google.android.gms.maps.model.BitmapDescriptor>() {\n    @java.lang.Override\n    public com.google.android.gms.maps.model.BitmapDescriptor call() throws java.lang.Exception {\n        return clusterItem.getBitmapDescriptor();\n    }\n}).onSuccess(bolts.Continuation<com.google.android.gms.maps.model.BitmapDescriptor, java.lang.Void>,Task.UI_THREAD_EXECUTOR)", "prada.lab.android.pingo.view.BaseMarker.getBitmapDescriptor()"], "Fixed commit": "30390218a61c2b9e65e4be0b181cc70307317b13", "Url": "https://api.github.com/repos/bearprada/Pingo-Android", "Date": "2017-03-07T15:36:24Z"},
{"Line": "=>2140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.AnimeIndex.fansubList) != null) { java.lang.String[] oldList = main.AnimeIndex.fansubList; java.lang.String[] newList = new java.lang.String[(oldList.length) + 1]; for (int i = 0; i < (oldList.length); i++) { newList[i] = oldList[i]; } newList[oldList.length] = fansub; main.AnimeIndex.fansubList = newList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3693/buggy-version/src.main.AnimeIndex.java", "BodyUseAPI": [], "Fixed commit": "a2d11cd4cfb480479aedf6f13fb5a4d0a154779d", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-11-07T20:45:13Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curr == '.') { curr = '.'; }else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3808/buggy-version/railo-java.railo-core.src.railo.runtime.functions.string.Val.java", "BodyUseAPI": [], "Fixed commit": "a59d6c5ffef47211fe987d83acdfc39eebd66b53", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-04-10T08:39:54Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.isLoaded()) { com.hackernew.helper.EventBusUtils.getDefault().post(new com.hackernew.helper.event.ChooseStoryEvent(item)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6200/buggy-version/app.src.main.java.com.hackernew.adapter.TopStoryAdapter.java", "BodyUseAPI": ["com.hackernew.helper.EventBusUtils.getDefault().post(com.hackernew.helper.event.ChooseStoryEvent)"], "Fixed commit": "64626d320dbaf1dd8c8db48e105620ed1bbbc9fa", "Url": "https://api.github.com/repos/hien25661/HackerNews", "Date": "2017-05-30T15:23:05Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (inputValueToInt < 0) { java.lang.System.out.println((\"Minutes don't go that way! They only go plus, guiding us further and further to \" + \"death!\")); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3406/buggy-version/src.com.epam.hw2.TrafficLight.java", "BodyUseAPI": [], "Fixed commit": "8e663fcf529b852956d65ca1fcea0aa95ec84f32", "Url": "https://api.github.com/repos/malovitsinm/EJC07", "Date": "2017-10-12T16:31:47Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first) != null) return first.getCategory();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4495/buggy-version/src.lv.coref.data.MentionChain.java", "BodyUseAPI": [], "Fixed commit": "42c25293666886dc8983c482cfd7bd05b3e3bea2", "Url": "https://api.github.com/repos/aznotins/Coref", "Date": "2015-02-25T12:37:34Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(entry.getKey().equals(\"IMG1\"))) && (!(entry.getKey().equals(\"IMG2\")))) && (!(entry.getKey().equals(\"IMG3\")))) json.put(entry.getKey(), entry.getValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7969/buggy-version/app.src.main.java.com.umontpellier.theochambon.androimmo.Activities.ConsultFicheActivity.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "3d14b0e5ecec8bf1d4cdef668a9d7b370ca79835", "Url": "https://api.github.com/repos/Theo0/AndroImmo", "Date": "2015-12-15T16:13:19Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUser) == null) { currentUser = com.parse.ParseUser.getCurrentUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4197/buggy-version/app.src.main.java.com.playing.lokasee.helper.ParseHelper.java", "BodyUseAPI": [], "Fixed commit": "7cba19a9f77b3444892430a18674f1c29783785c", "Url": "https://api.github.com/repos/randiw/lokasee_android", "Date": "2015-08-20T09:31:30Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qName.equalsIgnoreCase(\"Paragraph\")) { paragraph = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4970/buggy-version/src.main.java.uk.ac.shef.dcs.jate.util.JATEUtil.java", "BodyUseAPI": [], "Fixed commit": "5fe87d13fed29accab84fbc33e81c691c913da03", "Url": "https://api.github.com/repos/ziqizhang/jate", "Date": "2016-02-09T17:46:13Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getAcademiaPanel().thresholdIsSelected()) { java.lang.String thresholdText = getAcademiaPanel().getThresholdTextFieldRef().getText(); if ((!(thresholdText.isEmpty())) && (java.util.regex.Pattern.matches(\"[0-9]+\", thresholdText))) { threshold = java.lang.Integer.parseInt(getAcademiaPanel().getThresholdTextFieldRef().getText()); }else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities.notifyUser(\"Max author threshold could not be applied to network. Illegal input.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2609/buggy-version/SocialNetwork.src.main.java.org.baderlab.csapps.socialnetwork.panels.UserPanel.java", "BodyUseAPI": [], "Fixed commit": "68b5830df401f98143f7c6522c19e3c6d0bd81c9", "Url": "https://api.github.com/repos/BaderLab/SocialNetworkApp", "Date": "2015-05-06T14:09:49Z"},
{"Line": "=>637", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getAcademiaPanel().thresholdIsSelected()) { java.lang.String thresholdText = getAcademiaPanel().getThresholdTextFieldRef().getText(); if ((!(thresholdText.isEmpty())) && (java.util.regex.Pattern.matches(\"[0-9]+\", thresholdText))) { threshold = java.lang.Integer.parseInt(getAcademiaPanel().getThresholdTextFieldRef().getText()); }else { org.baderlab.csapps.socialnetwork.CytoscapeUtilities.notifyUser(\"Max author threshold could not be applied to network. Illegal input.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2609/buggy-version/SocialNetwork.src.main.java.org.baderlab.csapps.socialnetwork.panels.UserPanel.java", "BodyUseAPI": [], "Fixed commit": "68b5830df401f98143f7c6522c19e3c6d0bd81c9", "Url": "https://api.github.com/repos/BaderLab/SocialNetworkApp", "Date": "2015-05-06T14:09:49Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextInt(restaurantList.size())", "java.util.Random.nextInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((changeIndex % 3) == 2) && ((restaurantList.get(newRestaurantIndex).type) == 2)) { genes[changeIndex] = restaurantList.get(newRestaurantIndex); }else if (((changeIndex % 3) != 2) && ((restaurantList.get(newRestaurantIndex).type) == 1)) { genes[changeIndex] = restaurantList.get(newRestaurantIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3084/buggy-version/app.src.main.java.com.yulius.belitungtrip.alogirthm.RestaurantIndividual.java", "BodyUseAPI": ["java.util.ArrayList<com.yulius.belitungtrip.entity.Restaurant>.get(int)", "java.util.ArrayList<com.yulius.belitungtrip.entity.Restaurant>.get(int)", "java.util.ArrayList<com.yulius.belitungtrip.entity.Restaurant>.get(int)"], "Fixed commit": "10597185947df3df83c9e39ae25f843f09274b19", "Url": "https://api.github.com/repos/stephen1706/BelitungTrip", "Date": "2015-04-07T12:10:40Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalNight <= 1) { android.widget.Toast.makeText(mContext, \"Minimal trip adalah 2 hari\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3084/buggy-version/app.src.main.java.com.yulius.belitungtrip.fragments.content.NewTripDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "10597185947df3df83c9e39ae25f843f09274b19", "Url": "https://api.github.com/repos/stephen1706/BelitungTrip", "Date": "2015-04-07T12:10:40Z"},
{"Line": "=>867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.utils.ObjectMap<com.majalis.character.Stance, com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.Texture>>.get(com.majalis.character.EnemyCharacter,com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.Texture>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (textureCandidates == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2081/buggy-version/core.src.com.majalis.character.EnemyCharacter.java", "BodyUseAPI": [], "Fixed commit": "9677d685c8dc09b53a36e90ef163a96aa147c35a", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2017-09-06T14:17:13Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sx.blah.discord.handle.obj.IMessage.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((identifier.length()) >= (msg.length())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4814/buggy-version/src.main.java.com.rezzedup.gob.CommandListener.java", "BodyUseAPI": [], "Fixed commit": "7c180fd4d9c90caa195cdeaab928e8fb54fc5db5", "Url": "https://api.github.com/repos/RezzedUp/Gob-Bot", "Date": "2016-09-21T03:53:41Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { lp.setMarginStart(leftMargin); lp.setMarginEnd(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7776/buggy-version/library.src.main.java.com.mikepenz.crossfader.Crossfader.java", "BodyUseAPI": [], "Fixed commit": "4aa7ec51404389b162efb0546758cb5ed3681131", "Url": "https://api.github.com/repos/mikepenz/Crossfader", "Date": "2015-08-26T17:26:03Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((menu) != null) { menu.setGroupVisible(R.id.signature_items, true); menu.removeItem(R.id.sign_document); menu.removeItem(R.id.reject_sign_request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1664/buggy-version/app.src.main.java.org.votingsystem.activity.SMIMESignerActivity.java", "BodyUseAPI": [], "Fixed commit": "a3c6653ae6ab62837e236207ea5dddc9fae33fd4", "Url": "https://api.github.com/repos/votingsystem/votingsystem-android-client", "Date": "2016-02-08T18:08:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Boolean.valueOf(config.getParams().getOrDefault(com.graphaware.server.foundation.context.GraphAwareWebContextCreator.GA_API_STATS_DISABLE_SETTING_LEGACY, \"false\"))) { context.getEnvironment().setActiveProfiles(\"stats-null\"); }else if (java.lang.Boolean.valueOf(config.getParams().getOrDefault(com.graphaware.server.foundation.context.GraphAwareWebContextCreator.GA_API_STATS_DISABLE_SETTING, \"false\"))) { context.getEnvironment().setActiveProfiles(\"stats-null\"); }else { context.getEnvironment().setActiveProfiles(\"stats-google\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5505/buggy-version/server.src.main.java.com.graphaware.server.foundation.context.GraphAwareWebContextCreator.java", "BodyUseAPI": ["org.neo4j.kernel.configuration.Config.getParams()", "config.getParams().getOrDefault(java.lang.String,java.lang.String)", "java.lang.Boolean.valueOf(config.getParams().getOrDefault(com.graphaware.server.foundation.context.GraphAwareWebContextCreator.GA_API_STATS_DISABLE_SETTING, \"false\"))"], "Fixed commit": "1fe6879f23ba5a407206f6eec1a71361f02d9c88", "Url": "https://api.github.com/repos/graphaware/neo4j-framework", "Date": "2016-12-10T18:26:37Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.get(com.graphaware.runtime.config.Neo4jConfigBasedRuntimeConfiguration.STATS_DISABLE_SETTING_LEGACY)) { return com.graphaware.common.ping.NullStatsCollector.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5505/buggy-version/runtime.src.main.java.com.graphaware.runtime.config.Neo4jConfigBasedRuntimeConfiguration.java", "BodyUseAPI": [], "Fixed commit": "1fe6879f23ba5a407206f6eec1a71361f02d9c88", "Url": "https://api.github.com/repos/graphaware/neo4j-framework", "Date": "2016-12-10T18:26:37Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["teamfour.tasc.commons.util.DateUtil.getInstance().getCurrentTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((deadlineForOccurrence.hasDeadline()) && (deadlineForOccurrence.isOverdue(currentTime))) { return CalendarAppointmentGroups.OVERDUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2235/buggy-version/src.main.java.teamfour.tasc.ui.calendar.CalendarReadOnlyRecurredAppointment.java", "BodyUseAPI": [], "Fixed commit": "1b08b4639b8e1357466b168fb76b95c4af0b9937", "Url": "https://api.github.com/repos/CS2103AUG2016-W11-C4/main", "Date": "2016-10-30T08:33:25Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string == null) { return com.clothit.domain.wardrobe.Material.SILK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4396/buggy-version/src.main.java.com.clothit.domain.wardrobe.Material.java", "BodyUseAPI": [], "Fixed commit": "7f976ecace05849c0621ce20fa0eb824d2a33eb9", "Url": "https://api.github.com/repos/yuluwz/clothit", "Date": "2016-09-18T08:38:11Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mComponentCells[i].getXPos()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mGameGridCells[((newYPos * (NUM_COLS)) + xPos)].getOccupied()) { highestLowRow--; i = -1; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2810/buggy-version/app.src.main.java.com.example.android.tetris.game_entities.Tetronimoes.Tetronimo.java", "BodyUseAPI": [], "Fixed commit": "0857d9ef89f966416f50721bde837f98aa895001", "Url": "https://api.github.com/repos/abias1122/Not-Tetris", "Date": "2017-09-17T00:16:20Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((files.length) == 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/958/buggy-version/src.com.ds.models.ImageModel.java", "BodyUseAPI": [], "Fixed commit": "1ef3dac0e2fea825857ea67df613ecd3131983ea", "Url": "https://api.github.com/repos/dmedov/webGal", "Date": "2013-04-04T12:24:00Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WorldView.mousePoint()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(this.world.isOccupied(mpt))) { Miner miney = new Miner(mpt, this.imageList.get(\"miner\"), 800, 100, 2, 0); Actions.scheduleMiner(this.world, miney, ((this.lastTime) - (this.offset)), this.imageList); this.world.addEntity(miney); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9271/buggy-version/WorldView.java", "BodyUseAPI": ["WorldModel.addEntity(Miner)", "Actions.scheduleMiner(WorldModel,Miner,int,java.util.Map<java.lang.String, java.util.List<PImage>>)"], "Fixed commit": "39a18fc746ad303815da430634680e8afede7a2a", "Url": "https://api.github.com/repos/cchu1008/CPE102ProjectJava", "Date": "2015-06-05T07:38:21Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasPath(org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL))) { throw new org.apache.drill.exec.exception.DrillbitStartupException(java.lang.String.format(\"BOOT option '%s' is missing in config.\", org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4234/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.user.security.UserAuthenticatorFactory.java", "BodyUseAPI": [], "Fixed commit": "ae14a1f9e01fa4fa1438645cb4bd4270f230f9e7", "Url": "https://api.github.com/repos/sohami/drill", "Date": "2017-02-28T07:28:14Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.atahmasebian.prefrences.Hi.isFingerPrintHardwareDetected()) { fingerPrintPreference.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1687/buggy-version/app.src.main.java.com.atahmasebian.prefrences.preference.SecuritySettingPreferenceFragment.java", "BodyUseAPI": [], "Fixed commit": "8288de9a797bc5b9d17fa8e1fcb2da0165b0c0f6", "Url": "https://api.github.com/repos/Arianroid/FingerPrintWithAccountManager", "Date": "2017-07-16T08:45:49Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((player != null) && ((player.length) == 1)) { teleportLoc = player[0].getLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8100/buggy-version/src.main.java.com.publicuhc.ultrahardcore.commands.TPCommand.java", "BodyUseAPI": ["player[0].getLocation()"], "Fixed commit": "15a1f36909edefa5ed6e3e8cbba07973a6d642fc", "Url": "https://api.github.com/repos/Eluinhost/ultrahardcore", "Date": "2014-09-05T11:17:03Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location != null) { teleportLoc = location; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8100/buggy-version/src.main.java.com.publicuhc.ultrahardcore.commands.TPCommand.java", "BodyUseAPI": [], "Fixed commit": "15a1f36909edefa5ed6e3e8cbba07973a6d642fc", "Url": "https://api.github.com/repos/Eluinhost/ultrahardcore", "Date": "2014-09-05T11:17:03Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (location != null) { com.firebase.client.Firebase tutorStore = db.child(\"tutors\").child(tutor.getFullName()); tutorStore.setValue(tutor); geoFire.setLocation(tutor.getFullName(), new com.firebase.geofire.GeoLocation(location.getLatitude(), location.getLongitude())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7770/buggy-version/app.src.main.java.nwhacks.tutorme.model.Tutor.java", "BodyUseAPI": ["com.firebase.geofire.GeoFire.setLocation(java.lang.String,com.firebase.geofire.GeoLocation)", "android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "91e60161fdfd1d84955d478d413967f5ebd30ff1", "Url": "https://api.github.com/repos/StephenVanSon/TutorMe", "Date": "2016-02-28T21:19:36Z"},
{"Line": "=>1075", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.systemui.statusbar.stack.StackScrollState.getViewStateForView(com.android.systemui.statusbar.ExpandableView)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (viewState != null) { return java.lang.Math.min(viewState.height, maxContentHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5839/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.stack.NotificationStackScrollLayout.java", "BodyUseAPI": ["java.lang.Math.min(viewState.height,int)"], "Fixed commit": "0bdfc7be66f67e71b24869f69b26b31ece5a7bb8", "Url": "https://api.github.com/repos/nvertigo/android_frameworks_base", "Date": "2016-10-13T00:37:27Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearPrefs) this.savePreferences(false, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6472/buggy-version/src.com.normalexception.forum.rx8club.utils.LoginFactory.java", "BodyUseAPI": [], "Fixed commit": "b41ad604312e87b9da38504a225cfd0dda1d9a7f", "Url": "https://api.github.com/repos/paimonsoror/RX8Club.com-Forum-Application", "Date": "2012-11-28T02:25:07Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchContextModel) != null) { searchContextModel.detach(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9293/buggy-version/vlo-web-app.src.main.java.eu.clarin.cmdi.vlo.wicket.panels.search.SearchResultItemLicensePanel.java", "BodyUseAPI": [], "Fixed commit": "d2fee3a53124e31a759a36f64b5a246f6a779b2c", "Url": "https://api.github.com/repos/clarin-eric/VLO", "Date": "2016-05-30T07:50:02Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ballSpawntimer) > (spawnPerSec)) { ballSpawntimer = 0; final com.mycompany.mavenproject1.Ball ball = new com.mycompany.mavenproject1.Ball(assetManager); ball.spawn(rootNode, getPhysicsSpace(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4036/buggy-version/src.main.java.com.funkydonkies.w4v3.App.java", "BodyUseAPI": [], "Fixed commit": "ca833a1a6b4adf0f06f1e1136b2a3d9cc0b48e70", "Url": "https://api.github.com/repos/Denpeer/ContextProject", "Date": "2015-05-20T20:42:29Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.utah.ece.async.sboldesigner.sbol.SBOLUtils.notInNamespace(tl)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3558/buggy-version/src.main.java.edu.utah.ece.async.sboldesigner.sbol.ProvenanceUtil.java", "BodyUseAPI": [], "Fixed commit": "4a7dbd5f8bfbef3c323eec71071b6a94ebf9fd26", "Url": "https://api.github.com/repos/SynBioDex/SBOLDesigner", "Date": "2017-12-07T22:32:10Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameObject instanceof game.creatures.Pacman) && (pacman.isHunter())) { jumpToStartPosition(); setDirection(Direction.UP.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6690/buggy-version/src.game.creatures.Enemy.java", "BodyUseAPI": [], "Fixed commit": "4a7060d13cf5e45f8a13a3b175bade8dfb3fee70", "Url": "https://api.github.com/repos/martijnwetering/Pacman", "Date": "2014-06-08T18:01:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (connectionPool == null) { java.lang.System.out.println((\"==1>\" + connectionPool)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4923/buggy-version/src.main.java.redis.clients.jedis.JedisSlotBasedConnectionHandler.java", "BodyUseAPI": ["java.io.PrintStream.println((\"==1>\" + connectionPool))"], "Fixed commit": "23d1fd2cbb8ad5c8627db093db30314672b6b584", "Url": "https://api.github.com/repos/carlvine500/jedis", "Date": "2015-08-25T10:56:04Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jangle.communicate.CommUtil.byteToInt(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sId == (mClient.getCurrentServerID())) mClient.addUser(new com.jangle.communicate.User(newChannel));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5423/buggy-version/java_jangle.src.com.jangle.communicate.Client_ParseData.java", "BodyUseAPI": ["com.jangle.communicate.Client.addUser(com.jangle.communicate.User)"], "Fixed commit": "d45c92b95a5824afd9b0cf964c3046a280babbea", "Url": "https://api.github.com/repos/demisardonic/Jangle", "Date": "2016-11-29T00:18:30Z"},
{"Line": "=>716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(name)) { person.addName(new org.openmrs.PersonName()); }else { person.addName(org.openmrs.api.context.Context.getPersonService().parsePersonName(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/792/buggy-version/omod.src.main.java.org.openmrs.module.xforms.web.XformDownloadServlet.java", "BodyUseAPI": ["org.openmrs.api.context.Context.getPersonService().parsePersonName(java.lang.String)", "P.addName(org.openmrs.api.context.Context.getPersonService().parsePersonName(name))"], "Fixed commit": "da2aca8812b1d76d0ade30a8b5fc69f6baf367ca", "Url": "https://api.github.com/repos/Citigo/openmrs-module-xforms", "Date": "2012-09-14T09:42:27Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 4) { bundle.putString((\"player_\" + (tags[i])), data.getList().get(position).get((\"player_\" + (tags[i]))).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2537/buggy-version/Dribbb.src.main.java.nl.lance.dribbb.shots.fragment.ShotsFragment.java", "BodyUseAPI": ["data.getList().get(position).get(java.lang.String)", "android.os.Bundle.putString(java.lang.String,data.getList().get(position).get((\"player_\" + (tags[i]))).toString())", "data.getList().get(position).get((\"player_\" + (tags[i]))).toString()"], "Fixed commit": "341b68a1d31e35a6b5de8514213fa88569b1bd95", "Url": "https://api.github.com/repos/NovelanceF/Dribbble_rebuild", "Date": "2014-02-03T17:31:20Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 3) { playerBundle.putString((\"player_\" + (tags[i])), bundle.getString((\"player_\" + (tags[i])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2537/buggy-version/Dribbb.src.main.java.nl.lance.dribbb.shots.fragment.ShotDetailFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.putString(java.lang.String,bundle.getString((\"player_\" + (tags[i]))))"], "Fixed commit": "341b68a1d31e35a6b5de8514213fa88569b1bd95", "Url": "https://api.github.com/repos/NovelanceF/Dribbble_rebuild", "Date": "2014-02-03T17:31:20Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selStart <= selEnd) { currentSelection = getText().toString().substring(selStart, selEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5082/buggy-version/app.src.main.java.org.connectbot.TerminalView.java", "BodyUseAPI": ["getText().toString().substring(int,int)"], "Fixed commit": "f4c64776ca351c94f8d2711b46b05ac0bb5ae05b", "Url": "https://api.github.com/repos/rhansby/connectbot", "Date": "2015-10-05T19:10:02Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ioOperations) == null) { throw new java.io.IOException(\"I/O operations don't exist!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7133/buggy-version/src.com.takisoft.mail.smtp.SmtpClient.java", "BodyUseAPI": [], "Fixed commit": "71ee66cf52a609c2979b9bb5cb7f0d6df4bb5b88", "Url": "https://api.github.com/repos/Gericop/TakiMail", "Date": "2015-01-05T02:40:28Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callback != null) { callback.progress(len, len); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7133/buggy-version/src.com.takisoft.mail.smtp.SmtpClient.java", "BodyUseAPI": ["com.takisoft.mail.ProgressCallback.progress(int,int)"], "Fixed commit": "71ee66cf52a609c2979b9bb5cb7f0d6df4bb5b88", "Url": "https://api.github.com/repos/Gericop/TakiMail", "Date": "2015-01-05T02:40:28Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (id <= 0) { slf4jLogger.info((\"Request with id : \" + id)); response.sendError(HttpServletResponse.SC_BAD_REQUEST); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3625/buggy-version/src.main.java.com.excilys.controller.EditComputer.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "87035eba4872aa4ec9e0727331ec033749d27a23", "Url": "https://api.github.com/repos/Mealya/ComputerDatabase", "Date": "2016-04-28T10:12:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.happy_query.util.JDBCUtils.executeQuery(javax.sql.DataSource,java.lang.String,java.util.List<java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((data.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3263/buggy-version/src.main.java.com.happy_query.parser.dao.DataDefinitionDao.java", "BodyUseAPI": [], "Fixed commit": "997fe161659d6ac14416c809dd8f2cb9f5872764", "Url": "https://api.github.com/repos/fantasycool/happy_query", "Date": "2016-06-29T10:43:52Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDefault) { studentModel.setNickname(me.dbecaj.friurnik.data.system.ResourceProvider.getString(R.string.me)); }else { studentModel.setNickname(nickname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7778/buggy-version/app.src.main.java.me.dbecaj.friurnik.data.interactors.student.StudentInteractorImp.java", "BodyUseAPI": [], "Fixed commit": "5fa6f99b6caad02b520110aa44d80357035146d6", "Url": "https://api.github.com/repos/dbecaj/FRIUrnik", "Date": "2017-11-06T14:33:42Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Game.player.currentLocation) == (superClasses.World.prisonHallway)) { java.lang.System.out.println(\"You step out of your cell in full view of the guard.\"); java.lang.System.out.println(\"You have been caught.\"); superClasses.Game.hasLost = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3085/buggy-version/workspace.CSCE361Project.src.assets.Guard.java", "BodyUseAPI": [], "Fixed commit": "135ad9fb4c65910bb91e09fafb68a1cfbff47310", "Url": "https://api.github.com/repos/ebeachly/CSCE361ProjectV2", "Date": "2014-03-18T20:09:18Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentRunningJob) != null) && ((currentRunningJob) instanceof net.osmand.plus.routing.RoutingHelper.RouteRecalculationThread)) { net.osmand.plus.routing.RoutingHelper.RouteRecalculationThread thread = ((net.osmand.plus.routing.RoutingHelper.RouteRecalculationThread) (currentRunningJob)); thread.stopCalculation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2245/buggy-version/OsmAnd.src.net.osmand.plus.routing.RoutingHelper.java", "BodyUseAPI": [], "Fixed commit": "be10b3dfbb893c152d09138a555f4bdee2f20b2d", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-06-26T16:18:34Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedVClassURI != null) && (selectedVClassURI.equals(vclass.getURI()))) { option.setSelected(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8491/buggy-version/webapp.src.edu.cornell.mannlib.vedit.util.FormUtils.java", "BodyUseAPI": [], "Fixed commit": "60a86d94b2c8b635669288ed20575c50c99a5906", "Url": "https://api.github.com/repos/vivo-project/Vitro", "Date": "2013-11-05T15:49:11Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(proxyEnabled.getValue())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6187/buggy-version/src.main.java.com.jaeksoft.searchlib.crawler.web.database.WebPropertyManager.java", "BodyUseAPI": [], "Fixed commit": "d4976b9589d339e1368f1fb7cab6df8f1451bb44", "Url": "https://api.github.com/repos/jaeksoft/opensearchserver", "Date": "2014-03-29T21:54:34Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.MAVLink.MAVLinkPacket.unpack()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (receivedMsg == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9153/buggy-version/ServiceApp.src.org.droidplanner.services.android.core.drone.DroneManager.java", "BodyUseAPI": [], "Fixed commit": "8122114f0769d8c923aeae3ed237e7969074eb8b", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2015-09-27T17:54:48Z"},
{"Line": "=>722", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getActivity()) == null) || ((isAdded()) == false)) { com.samknows.libcore.SKLogger.sAssert(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3767/buggy-version/libcore.src.com.samknows.ui2.activity.FragmentArchivedResults.java", "BodyUseAPI": [], "Fixed commit": "7e41794219e8a3cce90edd3cd6f6de984ef95aad", "Url": "https://api.github.com/repos/SamKnows/skandroid-core", "Date": "2015-05-18T14:33:11Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.cs246team01.bugtag.MainGame.gameState) == 3) reset = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2605/buggy-version/core.src.com.cs246team01.bugtag.MainGame.java", "BodyUseAPI": [], "Fixed commit": "a11a512bd0f4826c1b5a7b059928064d89c77216", "Url": "https://api.github.com/repos/landonrs/BugTag", "Date": "2017-03-18T00:17:12Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subUnit instanceof pt.ist.fenixedu.contracts.domain.organizationalStructure.ResearchUnit) { employees.addAll(((pt.ist.fenixedu.contracts.domain.organizationalStructure.ResearchUnit) (subUnit)).getAllWorkingEmployees()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4908/buggy-version/fenixedu-ist-giaf-contracts.src.main.java.pt.ist.fenixedu.contracts.domain.organizationalStructure.ResearchUnit.java", "BodyUseAPI": [], "Fixed commit": "acebf74fe60426bc45a8897f10e1b5e4565a1e21", "Url": "https://api.github.com/repos/davidmartinho/fenixedu-ist", "Date": "2017-02-01T14:36:24Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFavoritesFragment) != null) { mFavoritesFragment.setBikeStations(bikeStations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3187/buggy-version/ChicagoTracker.src.fr.cph.chicago.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ddc4e296503cc6428098a1f3b5dafab399a4227f", "Url": "https://api.github.com/repos/carlphilipp/Chicago-Tracker", "Date": "2014-08-24T03:01:36Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.glmtk.output.Output.isFormattingEnabled)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4584/buggy-version/src.main.java.de.glmtk.output.Output.java", "BodyUseAPI": [], "Fixed commit": "bbf2a1e5213b4ef3eff9b642ff1044dfab0fb151", "Url": "https://api.github.com/repos/renepickhardt/generalized-language-modeling-toolkit", "Date": "2015-05-29T08:40:51Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((studyUID == null) || (studyUID.equals(\"\"))) studyUID = \"*\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4690/buggy-version/src.main.java.edu.stanford.epad.common.plugins.PluginDicomUtil.java", "BodyUseAPI": [], "Fixed commit": "eb7451ea049c8d2ea7632fa44b9eef4439567297", "Url": "https://api.github.com/repos/RubinLab/epad-common", "Date": "2016-08-26T21:25:39Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sourcemap) { arguments.add(\"--sourcemap\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7365/buggy-version/src.main.java.ru.kgn.typescript.TypeScriptMojo.java", "BodyUseAPI": [], "Fixed commit": "29b5f524f4ee6d0a8b034600128c8ebc79eab392", "Url": "https://api.github.com/repos/gnkoshelev/typescript-maven-plugin", "Date": "2017-01-09T07:18:27Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { world.destroyBlock(pos, false); mcjty.immcraft.api.helpers.InventoryHelper.spawnItemStack(world, pos, new net.minecraft.item.ItemStack(net.minecraft.init.Items.FLINT_AND_STEEL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/639/buggy-version/src.main.java.mcjty.immcraft.blocks.foliage.RockBlock.java", "BodyUseAPI": ["net.minecraft.world.World.destroyBlock(net.minecraft.util.math.BlockPos,boolean)", "mcjty.immcraft.api.helpers.InventoryHelper.spawnItemStack(net.minecraft.world.World,net.minecraft.util.math.BlockPos,net.minecraft.item.ItemStack)"], "Fixed commit": "aa6214b535885121c25537255c9a63c83aa51f05", "Url": "https://api.github.com/repos/McJtyMods/ImmersiveCraft", "Date": "2017-02-03T04:37:25Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["genesis.block.tileentity.portal.MenhirData.getReceptacleTE()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((recepTE.getReceptacleItem()) != null) { spawnAsEntity(world, recepTE.getPos(), recepTE.getReceptacleItem()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/887/buggy-version/src.main.java.genesis.block.tileentity.portal.BlockMenhir.java", "BodyUseAPI": ["genesis.block.tileentity.portal.BlockMenhir.spawnAsEntity(net.minecraft.world.World,recepTE.getPos(),recepTE.getReceptacleItem())", "genesis.block.tileentity.portal.TileEntityMenhirReceptacle.getReceptacleItem()", "genesis.block.tileentity.portal.TileEntityMenhirReceptacle.getPos()"], "Fixed commit": "3355bf9235f596dc47909d58b6e37e4a484176e3", "Url": "https://api.github.com/repos/Boethie/OldGenesis", "Date": "2015-11-07T21:45:23Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fields.length) != 2) { org.nuxeo.ecm.platform.suggestbox.jsf.SuggestboxActions.log.error(((\"Invalid document location, should be repo name and\" + \" doc id separated by '::' marker, got: \") + suggestionValue)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9306/buggy-version/nuxeo-platform-suggestbox-jsf.src.main.seam.org.nuxeo.ecm.platform.suggestbox.jsf.SuggestboxActions.java", "BodyUseAPI": [], "Fixed commit": "af79a00893c994d3def284cb3210193871c2101a", "Url": "https://api.github.com/repos/nuxeo/nuxeo-platform-suggestbox", "Date": "2011-11-15T00:01:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((serializedSoftLock.oldValueSerialized) != null) { oldValue = valueSerializer.read(java.nio.ByteBuffer.wrap(serializedSoftLock.oldValueSerialized)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8709/buggy-version/transactions.src.main.java.org.ehcache.transactions.xa.SoftLock.java", "BodyUseAPI": ["org.ehcache.spi.serialization.Serializer<V>.read(java.nio.ByteBuffer)", "java.nio.ByteBuffer.wrap(byte[])"], "Fixed commit": "07b548cdb5daafb26dbd3260b47d769774786f80", "Url": "https://api.github.com/repos/ljacomet/ehcache3", "Date": "2016-02-19T10:12:29Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (serializedOldValue != null) { this.oldValueSerialized = new byte[serializedOldValue.remaining()]; serializedOldValue.get(oldValueSerialized); }else { oldValueSerialized = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8709/buggy-version/transactions.src.main.java.org.ehcache.transactions.xa.SoftLock.java", "BodyUseAPI": [], "Fixed commit": "07b548cdb5daafb26dbd3260b47d769774786f80", "Url": "https://api.github.com/repos/ljacomet/ehcache3", "Date": "2016-02-19T10:12:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldValue) != null) { serializedOldValue = valueSerializer.serialize(oldValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8709/buggy-version/transactions.src.main.java.org.ehcache.transactions.xa.SoftLock.java", "BodyUseAPI": [], "Fixed commit": "07b548cdb5daafb26dbd3260b47d769774786f80", "Url": "https://api.github.com/repos/ljacomet/ehcache3", "Date": "2016-02-19T10:12:29Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.m0pt0pmatt.menuservice.YAMLBuilder.loadMenuComponent(org.bukkit.configuration.file.YamlConfiguration,org.bukkit.plugin.Plugin)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (menu instanceof com.m0pt0pmatt.menuservice.api.Menu) { return ((com.m0pt0pmatt.menuservice.api.Menu) (menu)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8002/buggy-version/src.com.m0pt0pmatt.menuservice.YAMLBuilder.java", "BodyUseAPI": [], "Fixed commit": "893ab3b09be708e640f385b3dbd0090048b18597", "Url": "https://api.github.com/repos/m0pt0pmatt/MenuService", "Date": "2013-07-25T16:18:48Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callback) != null) { callback.handleOnData(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6910/buggy-version/src.main.java.yanbinwa.common.kafka.consumer.IKafkaConsumerWorker.java", "BodyUseAPI": [], "Fixed commit": "4b2bd72a69f81ff64c9369a31f04da2e3fa51f49", "Url": "https://api.github.com/repos/yanbinwa/serviceManagerCommon", "Date": "2017-06-08T02:45:51Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentTime.hour) == 12) { hour = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3283/buggy-version/wear.src.main.java.com.padsterprogramming.watches.faces.FibonacciFace.java", "BodyUseAPI": [], "Fixed commit": "fa78495b22399b5e5b4528a7624b81b292230a5f", "Url": "https://api.github.com/repos/padster/android-watches", "Date": "2015-05-10T14:12:46Z"},
{"Line": "=>1396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lines.isEmpty())) { final int index = (lines.size()) - 1; java.lang.String lastLine = lines.get(index); if (!(isNotBlank(lastLine))) { lines.remove(index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2657/buggy-version/src.org.nschmidt.ldparteditor.data.DatFile.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.remove(int)", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "e79aeaa6ff6f65c23ec3308a2ceb11ed45f03b91", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-11T14:27:42Z"},
{"Line": "=>1310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lines.isEmpty())) { final int index = (lines.size()) - 1; java.lang.String lastLine = lines.get(index); if (!(isNotBlank(lastLine))) { lines.remove(index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2657/buggy-version/src.org.nschmidt.ldparteditor.data.DatFile.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.remove(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "e79aeaa6ff6f65c23ec3308a2ceb11ed45f03b91", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-11T14:27:42Z"},
{"Line": "=>1355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lines.isEmpty())) { final int index = (lines.size()) - 1; java.lang.String lastLine = lines.get(index); if (!(isNotBlank(lastLine))) { lines.remove(index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2657/buggy-version/src.org.nschmidt.ldparteditor.data.DatFile.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.remove(int)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "e79aeaa6ff6f65c23ec3308a2ceb11ed45f03b91", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-11T14:27:42Z"},
{"Line": "=>951", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fullName == null) fullName = name;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3582/buggy-version/src.main.java.org.sparkbit.jsonrpc.SparkBitJSONRPCServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a80e651597a4f07ea7d8a5d23f9a5ffd8bfcd0fa", "Url": "https://api.github.com/repos/coinspark/sparkbit", "Date": "2014-11-26T19:04:41Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.data.gemfire.config.ParsingUtils.parseRefOrSingleNestedBeanDeclaration(org.springframework.beans.factory.xml.ParserContext,org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (asyncEventListener instanceof org.springframework.beans.factory.config.RuntimeBeanReference) { builder.addDependsOn(((org.springframework.beans.factory.config.RuntimeBeanReference) (asyncEventListener)).getBeanName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/226/buggy-version/src.main.java.org.springframework.data.gemfire.config.AsyncEventQueueParser.java", "BodyUseAPI": [], "Fixed commit": "2656a2505678f64e5c3c8e20926a9b5a84848d97", "Url": "https://api.github.com/repos/spring-projects/spring-data-gemfire", "Date": "2014-02-28T06:36:58Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((llColorContainer.findViewWithTag(selectedColor)) != null) { llColorContainer.findViewWithTag(selectedColor).setSelected(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7633/buggy-version/sample.src.main.java.com.even.sample.widget.ColorPaletteView.java", "BodyUseAPI": ["llColorContainer.findViewWithTag(selectedColor).setSelected(boolean)", "android.widget.LinearLayout.findViewWithTag(java.lang.String)"], "Fixed commit": "95072666dcb96a37c91bc8581496060ade3112d7", "Url": "https://api.github.com/repos/Even201314/MRichEditor", "Date": "2017-08-23T09:12:46Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mujava.op.weak.ForStatement.getInit()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isSameObject(init.get(i), mutExpression)) { super.visit(inst.init); for (java.lang.String str : inst.assertion) writeString(str); super.visit(inst.post); }else { writeTab(); init.get(i).accept(this); out.println(\";\"); (line_num)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3524/buggy-version/src.mujava.op.weak.InstrumentationCodeWriter.java", "BodyUseAPI": ["init.get(i).accept(mujava.op.weak.InstrumentationCodeWriter)", "mujava.op.weak.ExpressionList.get(int)"], "Fixed commit": "082e691e026e4f7c8e8959dc67a7e39900ce4c38", "Url": "https://api.github.com/repos/wuxishy/WeakmuJava", "Date": "2016-08-26T02:54:55Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getThreadGroup()", "java.lang.Thread.currentThread()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((\"SeedGenerator Thread\".equals(c.getName())) && (\"SeedGenerator ThreadGroup\".equals(cg.getName()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1142/buggy-version/robocode.host.src.main.java.net.sf.robocode.host.security.RobocodeSecurityManager.java", "BodyUseAPI": [], "Fixed commit": "7b324ea7cde222a14bd4a1684de756b6b6a79acd", "Url": "https://api.github.com/repos/robo-code/robocode", "Date": "2016-05-17T19:43:10Z"},
{"Line": "=>1424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expression instanceof com.sun.tools.javac.tree.JCTree.JCNewClass) { com.sun.tools.javac.tree.JCTree.JCNewClass newClass = ((com.sun.tools.javac.tree.JCTree.JCNewClass) (expression)); if ((!(newClass.type.tsym.getTypeParameters().isEmpty())) && (newClass.typeargs.isEmpty())) { getPrinter().print(\"<any>(\").print(expression).print(\")\"); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3390/buggy-version/src.main.java.org.jsweet.transpiler.typescript.Java2TypeScriptAdapter.java", "BodyUseAPI": ["getPrinter().print(\"<any>(\").print(expression).print(java.lang.String)", "getPrinter().print(\"<any>(\").print(com.sun.tools.javac.tree.JCTree.JCExpression)"], "Fixed commit": "f1fe409dc0d74183f49e5eb72b30e96bfe793317", "Url": "https://api.github.com/repos/cincheo/jsweet", "Date": "2016-10-24T07:06:16Z"},
{"Line": "=>1324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.tools.javac.code.Type.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(typeTree instanceof com.sun.tools.javac.tree.JCTree.JCArrayTypeTree)) && (typeFullName.startsWith(\"java.util.function.\"))) { return getPrinter().print(\"any\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3390/buggy-version/src.main.java.org.jsweet.transpiler.typescript.Java2TypeScriptAdapter.java", "BodyUseAPI": [], "Fixed commit": "f1fe409dc0d74183f49e5eb72b30e96bfe793317", "Url": "https://api.github.com/repos/cincheo/jsweet", "Date": "2016-10-24T07:06:16Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Main_Project.MainPageController.tempText.equals(\"Project\")) && isProject) { Main_Project.MasterController.getInstance().loadViewProjectScene(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5019/buggy-version/src.Main_Project.MainPageController.java", "BodyUseAPI": [], "Fixed commit": "6682640d3d8675956def715d7c3ae0b4d9c86d9a", "Url": "https://api.github.com/repos/ashika789/CS4400_Phase3", "Date": "2016-12-06T15:57:52Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eas.client.forms.components.rt.VTextArea.1.getText()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((text != null) && (!(\"\".equals(text)))) { nullValue = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2697/buggy-version/application.src.components.Forms.src.com.eas.client.forms.components.rt.VTextArea.java", "BodyUseAPI": [], "Fixed commit": "163d01f8bafb769475794c2f9d6a7136faffc905", "Url": "https://api.github.com/repos/altsoft/PlatypusJS", "Date": "2016-06-15T21:00:50Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((counter % 1000) == 0) java.lang.System.out.println(counter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/103/buggy-version/Main.src.DemoGraph.java", "BodyUseAPI": ["java.io.PrintStream.println(int)"], "Fixed commit": "f3721e03672d0e74a02eb158c8edef576cd8879c", "Url": "https://api.github.com/repos/wilsonha/IMDB-Graph", "Date": "2016-02-19T16:45:27Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.c_base.c_beam_viewer.settings.Settings.getUserName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(userName))) { options.setUserName(userName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1480/buggy-version/app.src.main.java.org.c_base.c_beam_viewer.mqtt.MqttManager.java", "BodyUseAPI": ["org.eclipse.paho.client.mqttv3.MqttConnectOptions.setUserName(java.lang.String)"], "Fixed commit": "4a1535365f28cb2201bd3cf1a8f92e3db1a74411", "Url": "https://api.github.com/repos/c-base/c-beam-viewer", "Date": "2014-08-22T17:38:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.c_base.c_beam_viewer.settings.Settings.getPassword()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(password))) { options.setPassword(password.toCharArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1480/buggy-version/app.src.main.java.org.c_base.c_beam_viewer.mqtt.MqttManager.java", "BodyUseAPI": ["org.eclipse.paho.client.mqttv3.MqttConnectOptions.setPassword(char[])", "java.lang.String.toCharArray()"], "Fixed commit": "4a1535365f28cb2201bd3cf1a8f92e3db1a74411", "Url": "https://api.github.com/repos/c-base/c-beam-viewer", "Date": "2014-08-22T17:38:33Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bulldog.beagleboneblack.sysfs.BBBSysFs.readSlots()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((slots.size()) <= slotIndex) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/341/buggy-version/bulldog.board.beagleboneblack.src.main.java.org.bulldog.beagleboneblack.sysfs.BBBSysFs.java", "BodyUseAPI": [], "Fixed commit": "f818ecf73a3cfd565d6dff9fcf676c4feec71682", "Url": "https://api.github.com/repos/SilverThings/bulldog", "Date": "2014-09-30T17:22:38Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slotIndex < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/341/buggy-version/bulldog.board.beagleboneblack.src.main.java.org.bulldog.beagleboneblack.sysfs.BBBSysFs.java", "BodyUseAPI": [], "Fixed commit": "f818ecf73a3cfd565d6dff9fcf676c4feec71682", "Url": "https://api.github.com/repos/SilverThings/bulldog", "Date": "2014-09-30T17:22:38Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((slot.length()) > 11) { return (slot.charAt(11)) == 'L'; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/341/buggy-version/bulldog.board.beagleboneblack.src.main.java.org.bulldog.beagleboneblack.sysfs.BBBSysFs.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "f818ecf73a3cfd565d6dff9fcf676c4feec71682", "Url": "https://api.github.com/repos/SilverThings/bulldog", "Date": "2014-09-30T17:22:38Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNavigationDrawer) != null) { mNavigationDrawer.lockDrawer(lock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2085/buggy-version/app.src.main.java.com.z299studio.pb.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9128ad408e9b49efc7c595a46d278d82f1a9403f", "Url": "https://api.github.com/repos/zhuqianqian/Passbook", "Date": "2015-02-28T08:39:12Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_assetEntry.isVisible())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1208/buggy-version/content-targeting-web.docroot.WEB-INF.src.com.liferay.content.targeting.portlet.util.AssetQueryRule.java", "BodyUseAPI": [], "Fixed commit": "9f5107bddffadf4ac368a710b9ce5db21d3f8a7c", "Url": "https://api.github.com/repos/liferay/liferay-apps-content-targeting", "Date": "2015-03-12T17:36:22Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rs.next()) { resrNo = (rs.getInt(1)) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8745/buggy-version/src.java.flight.flightSearch.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "dfe6377ed80e5afdf87b4cb58e1c193db13cc57f", "Url": "https://api.github.com/repos/ajr2493/MayflowerTravelSystem", "Date": "2014-05-06T18:41:58Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasDigits) { foundNum = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6711/buggy-version/workflow_plugins.europeana-uim-plugin-enrichment.src.main.java.eu.europeana.uim.enrichment.utils.EuropeanaDateUtils.java", "BodyUseAPI": [], "Fixed commit": "027cb14e20cefbe0008f60e0ae91336b6591aef8", "Url": "https://api.github.com/repos/europeana/uim-europeana", "Date": "2013-10-01T14:24:44Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.common.config.ConfigCategory.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (exclusionDirty != null) { exclusionNames = java.util.Arrays.asList(exclusionDirty.getStringList()); }else { exclusionNames = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8653/buggy-version/src.main.java.com.ollieread.tmgdo.TMGDO.java", "BodyUseAPI": ["net.minecraftforge.common.config.Property.getStringList()", "java.util.Arrays.asList(exclusionDirty.getStringList())"], "Fixed commit": "41e16b509b314c69a9bd0d5cb4f0528aa06af9b4", "Url": "https://api.github.com/repos/ollieread/TooManyGodDamnOres", "Date": "2014-06-26T15:56:00Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Objects.equals(hovered, this.hovered))) { this.hovered = hovered; this.display.highlight(event.getDatabaseObject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2098/buggy-version/src.main.java.org.reactome.web.pwp.client.viewport.diagram.DiagramPresenter.java", "BodyUseAPI": [], "Fixed commit": "aea0675cb234eba65c6fc64e750d62c0f28d10b7", "Url": "https://api.github.com/repos/reactome-pwp/browser", "Date": "2015-10-01T10:09:10Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity) != null) { entity.destroyCache(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5239/buggy-version/clustered.client.src.main.java.org.ehcache.clustered.client.internal.service.DefaultClusteringService.java", "BodyUseAPI": [], "Fixed commit": "2a31ee16dd3cc4ce79f8961a20ba0fed9a44b766", "Url": "https://api.github.com/repos/ljacomet/ehcache3", "Date": "2016-10-06T11:24:48Z"},
{"Line": "=>779", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getHttp2()) connectionFactories.add(new org.eclipse.jetty.http2.server.HTTP2ServerConnectionFactory(configuration));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1625/buggy-version/src.main.org.restlet.ext.jetty9.JettyServerHelper.java", "BodyUseAPI": [], "Fixed commit": "6d994c5dadada5f8c40a0b598e05a7f2d91223d5", "Url": "https://api.github.com/repos/tliron/restlet-jetty9", "Date": "2015-07-21T01:35:23Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listType.equals(\"log\")) listMenu.setAdapter(this.condAdapter); else listMenu.setAdapter(this.tagAdapter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5164/buggy-version/ConditionLog.src.cs.ualberta.conditionlog.view.ListSelectionView.java", "BodyUseAPI": [], "Fixed commit": "e758ae642404c2f1c93836d6d2a735e7d1d0e54d", "Url": "https://api.github.com/repos/tgriffit/cs301w07", "Date": "2012-04-02T19:29:28Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listType.equals(\"tag\")) currentLists = tagLists; else currentLists = condLists;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5164/buggy-version/ConditionLog.src.cs.ualberta.conditionlog.view.ListSelectionView.java", "BodyUseAPI": [], "Fixed commit": "e758ae642404c2f1c93836d6d2a735e7d1d0e54d", "Url": "https://api.github.com/repos/tgriffit/cs301w07", "Date": "2012-04-02T19:29:28Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((updateParams.organism) != null) { if (org.apache.commons.lang3.StringUtils.isNotEmpty(updateParams.organism.getAssembly())) { params.append(ProjectDBAdaptor.QueryParams.ORGANISM_ASSEMBLY.key(), updateParams.organism.getAssembly()); } if (org.apache.commons.lang3.StringUtils.isNotEmpty(updateParams.organism.getCommonName())) { params.append(ProjectDBAdaptor.QueryParams.ORGANISM_COMMON_NAME.key(), updateParams.organism.getCommonName()); } if (org.apache.commons.lang3.StringUtils.isNotEmpty(updateParams.organism.getScientificName())) { params.append(ProjectDBAdaptor.QueryParams.ORGANISM_SCIENTIFIC_NAME.key(), updateParams.organism.getScientificName()); } if ((updateParams.organism.getTaxonomyCode()) > 0) { params.append(ProjectDBAdaptor.QueryParams.ORGANISM_TAXONOMY_CODE.key(), updateParams.organism.getTaxonomyCode()); } params.remove(\"organism\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7637/buggy-version/opencga-server.src.main.java.org.opencb.opencga.server.rest.ProjectWSServer.java", "BodyUseAPI": ["org.opencb.commons.datastore.core.ObjectMap.append(ProjectDBAdaptor.QueryParams.ORGANISM_TAXONOMY_CODE.key(),updateParams.organism.getTaxonomyCode())", "Project.Organism.getScientificName()", "Project.Organism.getCommonName()", "Project.Organism.getScientificName()", "org.apache.commons.lang3.StringUtils.isNotEmpty(updateParams.organism.getScientificName())", "org.apache.commons.lang3.StringUtils.isNotEmpty(updateParams.organism.getAssembly())", "org.opencb.commons.datastore.core.ObjectMap.append(ProjectDBAdaptor.QueryParams.ORGANISM_SCIENTIFIC_NAME.key(),updateParams.organism.getScientificName())", "org.opencb.commons.datastore.core.ObjectMap.append(ProjectDBAdaptor.QueryParams.ORGANISM_ASSEMBLY.key(),updateParams.organism.getAssembly())", "org.opencb.commons.datastore.core.ObjectMap.append(ProjectDBAdaptor.QueryParams.ORGANISM_COMMON_NAME.key(),updateParams.organism.getCommonName())", "org.apache.commons.lang3.StringUtils.isNotEmpty(updateParams.organism.getCommonName())", "Project.Organism.getTaxonomyCode()", "Project.Organism.getCommonName()", "Project.Organism.getTaxonomyCode()", "Project.Organism.getAssembly()", "Project.Organism.getAssembly()"], "Fixed commit": "905de76dfba68b29376b11bc5d6e85ca4fc2605c", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2017-05-31T13:30:31Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sc.nextLine().isEmpty()) { this.lastName = \"\"; }else { this.lastName = sc.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2884/buggy-version/src.database.Customer.java", "BodyUseAPI": ["java.util.Scanner.next()"], "Fixed commit": "6edc14e5d534ad8de1b707df976436ecf7237048", "Url": "https://api.github.com/repos/charliefisher/ICS4U_Final_Project", "Date": "2017-05-27T19:45:15Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((method.equals(\"POST\")) || (method.equals(\"PUT\"))) con.setDoOutput(true); else con.setDoOutput(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1155/buggy-version/AikumaCloudStorage.src.org.lp20.aikuma.storage.Utils.java", "BodyUseAPI": [], "Fixed commit": "1f09e613440f070a1a2e1c5c2853a9a93e46a94c", "Url": "https://api.github.com/repos/lisaslyis/aikuma", "Date": "2014-09-17T12:27:08Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rivetlogic.skype.portlet.SkypePortlet.getRedirect(javax.portlet.ActionRequest,javax.portlet.ActionResponse)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNotNull(redirect)) { response.sendRedirect(redirect); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3961/buggy-version/portlets.skype-portlet.docroot.WEB-INF.src.com.rivetlogic.skype.portlet.SkypePortlet.java", "BodyUseAPI": ["javax.portlet.ActionResponse.sendRedirect(java.lang.String)"], "Fixed commit": "0c51d506953a80d40d79c1bbf1af9234599f9df4", "Url": "https://api.github.com/repos/asotog/liferay-skype", "Date": "2014-05-20T16:48:21Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(sender instanceof org.bukkit.entity.Player)) && ((args.length) == 0)) { sender.sendMessage((((\"\" + (org.bukkit.ChatColor.DARK_RED)) + (org.bukkit.ChatColor.BOLD)) + \"You must be a player!\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3599/buggy-version/src.main.java.io.github.AndrewSumsion.ppcf.PPCF.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage((((\"\" + (org.bukkit.ChatColor.DARK_RED)) + (org.bukkit.ChatColor.BOLD)) + \"You must be a player!\"))"], "Fixed commit": "b6b6bdbb721d0c56dcc4709471d4e76944e8efb2", "Url": "https://api.github.com/repos/AndrewSumsion/PerPlayerChatFilter", "Date": "2016-12-22T02:59:25Z"},
{"Line": "=>1336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgroups.protocols.UNICAST2.SenderEntry.getFirstMessage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (msg == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/890/buggy-version/src.org.jgroups.protocols.UNICAST2.java", "BodyUseAPI": [], "Fixed commit": "6a1ae57d3810d4971189e35d28d4b9c058154088", "Url": "https://api.github.com/repos/dimbleby/JGroups", "Date": "2013-01-22T16:49:16Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mail.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (email.matches(\"(.*)@(.*)\")) { java.lang.String[] forSplitEmail = email.split(\"@\"); for (int i = 0; i < (forSplitEmail.length); i++) { splittedEmail = forSplitEmail[1]; } if (universityEmail.equals(splittedEmail)) { com.example.cogo.mcstumeet.mail.ForgetPassword.RandomString rd = new com.example.cogo.mcstumeet.mail.ForgetPassword.RandomString(10); java.lang.String pwd = rd.nextString(); this.encryptedPwd = this.encryption.encrypt(pwd); db.setPassword(encryptedPwd); com.example.cogo.mcstumeet.mail.ForgetPassword.MongoLabUpdateContact tsk = new com.example.cogo.mcstumeet.mail.ForgetPassword.MongoLabUpdateContact(); tsk.execute(db); com.example.cogo.mcstumeet.mail.AsyncMail sd = new com.example.cogo.mcstumeet.mail.AsyncMail(email, pwd); sd.execute(); android.content.Intent intent = new android.content.Intent(this, com.example.cogo.mcstumeet.login.LogIn.class); startActivity(intent); overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left); }else { this.toast.makeText(this, \"Email is unvalid. Please use your university email address!\", Toast.LENGTH_SHORT).show(); } }else { this.toast.makeText(this, \"Unvalid email address!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3751/buggy-version/app.src.main.java.com.example.cogo.mcstumeet.mail.ForgetPassword.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "cc394e94d88d9dfe93a972d73def12dad7fe3cef", "Url": "https://api.github.com/repos/Paingouin/MCStuMeet", "Date": "2017-06-27T10:09:32Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mod > 0) { java.lang.String str = mForm.getDataModel().matrix[i][j]; if ((str.indexOf(\"%\")) >= 0) { mForm.getDataModel().matrix[i][j] = \"\"; } }else { mForm.getDataModel().matrix[i][j] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/722/buggy-version/src.main.java.mesh.ClearAction.java", "BodyUseAPI": [], "Fixed commit": "c296b1a6d3cb3bef70f2bb9a665d632dd4959bbc", "Url": "https://api.github.com/repos/scorta-d/mesh", "Date": "2011-06-24T21:34:31Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastScrollIndex) != (scrollIndex)) || ((lastInventorySize) != (filter.size()))) { for (int i = 0; i < (this.crafters.size()); ++i) { net.minecraft.inventory.ICrafting crafter = ((net.minecraft.inventory.ICrafting) (this.crafters.get(i))); crafter.sendProgressBarUpdate(this, ato.accesschest.ui.INFO_TYPE_SCROLL_INDEX, scrollIndex); crafter.sendProgressBarUpdate(this, ato.accesschest.ui.INFO_TYPE_INVENTORY_SIZE, filter.size()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7344/buggy-version/common.ato.accesschest.ui.ContainerAtoChestServer.java", "BodyUseAPI": ["net.minecraft.inventory.ICrafting.sendProgressBarUpdate(ato.accesschest.ui.ContainerAtoChestServer,ato.accesschest.ui.INFO_TYPE_INVENTORY_SIZE,int)", "java.util.ArrayList<java.lang.Integer>.size()"], "Fixed commit": "0629598a17d5d952dfdc1d11c2ab8ad3aeacdad2", "Url": "https://api.github.com/repos/AtoCrafter/AccessChest", "Date": "2013-04-03T12:14:45Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (randomIO.check()) { IOCycles += burst.genNumber(); current.doingIO(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3254/buggy-version/src.main.java.CPU.java", "BodyUseAPI": [], "Fixed commit": "8752e61a9f093c295c7a4f5f53cfdb6b7c8e8217", "Url": "https://api.github.com/repos/kshammer/312Project", "Date": "2017-12-01T03:01:13Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cores <= (data.size())) groupSize = (data.size()) / cores;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8892/buggy-version/src.main.java.main.MeanShift.java", "BodyUseAPI": ["java.util.List<coordinates.HoughPoint>.size()"], "Fixed commit": "d384b6d19e22593fb4424c31b38a309a9ff5cf87", "Url": "https://api.github.com/repos/IES-HelmholtzZentrumMunchen/imagej-extract-dna-fibers", "Date": "2016-11-11T07:30:47Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.model.services.search.query.logical.LogicalSearchQuery.getSchemaCondition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (schema.hasMetadataWithCode(new com.constellio.model.services.schemas.SchemaUtils().getLocalCodeFromMetadataCode(metadataVO.getCode()))) { metadata = schema.getMetadata(new com.constellio.model.services.schemas.SchemaUtils().getLocalCodeFromMetadataCode(metadataVO.getCode())); if (ascending[i]) { query = query.sortAsc(metadata); }else { query = query.sortDesc(metadata); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8620/buggy-version/app.src.com.constellio.app.ui.framework.data.RecordVODataProvider.java", "BodyUseAPI": ["com.constellio.model.entities.schemas.MetadataSchema.getMetadata(new com.constellio.model.services.schemas.SchemaUtils().getLocalCodeFromMetadataCode(metadataVO.getCode()))", "com.constellio.app.ui.entities.MetadataVO.getCode()", "com.constellio.model.services.schemas.SchemaUtils.getLocalCodeFromMetadataCode(metadataVO.getCode())"], "Fixed commit": "686455422ff986d41a7bf92c315d8610ed6a09b7", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-06-14T19:41:56Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gephi.preview.plugin.renderers.Item.getData(EdgeLabelItem.LABEL)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((label == null) || (label.trim().isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6537/buggy-version/modules.PreviewPlugin.src.main.java.org.gephi.preview.plugin.renderers.EdgeLabelRenderer.java", "BodyUseAPI": [], "Fixed commit": "df30168fa921b4eeb659d95ec9b152c621fcff54", "Url": "https://api.github.com/repos/Kornel/gephi", "Date": "2016-01-10T14:14:11Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gephi.preview.plugin.renderers.Item.getData(NodeLabelItem.LABEL)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((label == null) || (label.trim().isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6537/buggy-version/modules.PreviewPlugin.src.main.java.org.gephi.preview.plugin.renderers.NodeLabelRenderer.java", "BodyUseAPI": [], "Fixed commit": "df30168fa921b4eeb659d95ec9b152c621fcff54", "Url": "https://api.github.com/repos/Kornel/gephi", "Date": "2016-01-10T14:14:11Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (uSession == null) { java.lang.System.out.println(\"[ERROR] You are not logged in\"); }else { server.tweet(uSession.getUsername(), tweet); java.lang.System.out.println(\"[SUCCESS] Tweet posted\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5902/buggy-version/src.main.java.Client.java", "BodyUseAPI": ["User.getUsername()", "Server.tweet(uSession.getUsername(),java.lang.String)"], "Fixed commit": "14c8ad63efb79734450df6e11b2aa690049a2995", "Url": "https://api.github.com/repos/yafithekid/cassandra-tweets", "Date": "2015-11-12T08:59:49Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentWeek) <= 0) { currentWeek = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5980/buggy-version/app.src.main.java.cn.xuhongxu.PATHoya.Activity.TimetableActivity.java", "BodyUseAPI": [], "Fixed commit": "61185e7495ad6455f9e75d625f58d0846fc9ac75", "Url": "https://api.github.com/repos/xuhongxu96/BNU-Xiaoya", "Date": "2016-08-15T04:02:03Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.pro.hashi.ensino.desagil.morse.MorseTree.translate(java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (translated != null) { messageEdit.append(translated); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1970/buggy-version/app.src.main.java.br.pro.hashi.ensino.desagil.morse.SendActivity.java", "BodyUseAPI": ["android.widget.EditText.append(java.lang.String)"], "Fixed commit": "de05ee212ec6e9d64c76211f80b4084a64ff2a8a", "Url": "https://api.github.com/repos/filipefborba/desagil-morse", "Date": "2017-04-23T22:18:23Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index >= 0) { printersComboBox.removeItemAt(index); org.weasis.dicom.explorer.print.DicomPrinter.savePrintersSettings(printersComboBox); enableOrDisableColorPrint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3089/buggy-version/weasis-dicom.weasis-dicom-explorer.src.main.java.org.weasis.dicom.explorer.print.DicomPrintDialog.java", "BodyUseAPI": ["javax.swing.JComboBox.removeItemAt(int)"], "Fixed commit": "91e427bd9c8bf899b5ec4067c6f351788ce29f52", "Url": "https://api.github.com/repos/nroduit/Weasis", "Date": "2014-05-26T20:28:47Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.riedel_kruse.bioticgamessdk.MathUtil.computeVectorMagnitude(org.opencv.core.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (magnitude != 0) { vector.x /= magnitude; vector.y /= magnitude; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8147/buggy-version/android.sdk.app.src.main.java.edu.stanford.riedel_kruse.bioticgamessdk.MathUtil.java", "BodyUseAPI": [], "Fixed commit": "3c920cced6d1408632f2b57b5439bd095e55a7ce", "Url": "https://api.github.com/repos/riedel-kruse-lab/biotic_games_sdk", "Date": "2015-03-30T05:21:33Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getClass()) != (github.daneren2005.dsub.activity.SubsonicFragmentActivity.class)) { drawerToggle.setDrawerIndicatorEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7956/buggy-version/src.github.daneren2005.dsub.activity.SubsonicActivity.java", "BodyUseAPI": [], "Fixed commit": "2486cd6f72042052dfb45697d11e558e345c302a", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2013-10-22T02:46:21Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(fragmentType))) { intent.putExtra(Constants.INTENT_EXTRA_FRAGMENT_TYPE, fragmentType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7956/buggy-version/src.github.daneren2005.dsub.activity.SubsonicActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(Constants.INTENT_EXTRA_FRAGMENT_TYPE,java.lang.String)"], "Fixed commit": "2486cd6f72042052dfb45697d11e558e345c302a", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2013-10-22T02:46:21Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((instruction.target.fileId) != (-1)) writer.attribute(\"target_file\", instruction.target.fileId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7222/buggy-version/src.main.java.com.badlogic.gdx.spriter.io.SpriterWriter.java", "BodyUseAPI": ["com.badlogic.gdx.spriter.io.SpriterWriter.WriterBean.attribute(java.lang.String,instruction.target.fileId)"], "Fixed commit": "02e984cce83debbfa149787b9f49845e72b7f753", "Url": "https://api.github.com/repos/thorthur/gdx-spriter", "Date": "2016-02-15T14:40:05Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((instruction.target.folderId) != (-1)) writer.attribute(\"target_folder\", instruction.target.folderId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7222/buggy-version/src.main.java.com.badlogic.gdx.spriter.io.SpriterWriter.java", "BodyUseAPI": ["com.badlogic.gdx.spriter.io.SpriterWriter.WriterBean.attribute(java.lang.String,instruction.target.folderId)"], "Fixed commit": "02e984cce83debbfa149787b9f49845e72b7f753", "Url": "https://api.github.com/repos/thorthur/gdx-spriter", "Date": "2016-02-15T14:40:05Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.homesky.homecloud_lib.HomecloudWrapper.callFunctionCommand(com.homesky.homecloud_lib.HomecloudWrapper.FunctionCommand)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sr instanceof com.homesky.homecloud_lib.model.response.RuleResponse) return ((com.homesky.homecloud_lib.model.response.RuleResponse) (callFunctionCommand(command))); else return new com.homesky.homecloud_lib.model.response.RuleResponse(sr.getStatus(), sr.getErrorMessage(), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1195/buggy-version/homecloud-lib.src.main.java.com.homesky.homecloud_lib.HomecloudWrapper.java", "BodyUseAPI": ["com.homesky.homecloud_lib.model.response.SimpleResponse.getErrorMessage()", "com.homesky.homecloud_lib.model.response.SimpleResponse.getStatus()"], "Fixed commit": "3df767e7177bf7291ab07b32b42b3e92d16db642", "Url": "https://api.github.com/repos/HomeSkyLtd/homecloud-app", "Date": "2016-10-18T12:35:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.homesky.homecloud_lib.HomecloudWrapper.callFunctionCommand(com.homesky.homecloud_lib.HomecloudWrapper.FunctionCommand)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sr instanceof com.homesky.homecloud_lib.model.response.StateResponse) return ((com.homesky.homecloud_lib.model.response.StateResponse) (callFunctionCommand(command))); else return new com.homesky.homecloud_lib.model.response.StateResponse(sr.getStatus(), sr.getErrorMessage(), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1195/buggy-version/homecloud-lib.src.main.java.com.homesky.homecloud_lib.HomecloudWrapper.java", "BodyUseAPI": ["com.homesky.homecloud_lib.model.response.SimpleResponse.getStatus()", "com.homesky.homecloud_lib.model.response.SimpleResponse.getErrorMessage()"], "Fixed commit": "3df767e7177bf7291ab07b32b42b3e92d16db642", "Url": "https://api.github.com/repos/HomeSkyLtd/homecloud-app", "Date": "2016-10-18T12:35:38Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.homesky.homecloud_lib.HomecloudWrapper.callFunctionCommand(com.homesky.homecloud_lib.HomecloudWrapper.FunctionCommand)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sr instanceof com.homesky.homecloud_lib.model.response.ConflictingRuleResponse) return ((com.homesky.homecloud_lib.model.response.ConflictingRuleResponse) (callFunctionCommand(command))); else return new com.homesky.homecloud_lib.model.response.ConflictingRuleResponse(sr.getStatus(), sr.getErrorMessage(), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1195/buggy-version/homecloud-lib.src.main.java.com.homesky.homecloud_lib.HomecloudWrapper.java", "BodyUseAPI": ["com.homesky.homecloud_lib.model.response.SimpleResponse.getStatus()", "com.homesky.homecloud_lib.model.response.SimpleResponse.getErrorMessage()"], "Fixed commit": "3df767e7177bf7291ab07b32b42b3e92d16db642", "Url": "https://api.github.com/repos/HomeSkyLtd/homecloud-app", "Date": "2016-10-18T12:35:38Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg.equals(\"Auction Cancelled\")) { myLabel.setText((((\"Hi \" + (myUser.getName())) + \"! You have no upcoming auction.\") + \" What would you like to do?\")); myUpcomingAuctionLabel.setText(\"You have no upcoming auction yet!\"); myInitialActions.upcomingAuction.setEnabled(false); myInitialActions.auctionRequest.setEnabled(true); }else if (arg.equals(\"Item Added\")) { if (((myAuction) != null) && ((myAuction.getItems().size()) == 1)) { myItemListPanel = createAuctionItemPanel(); myItemListPanel.setVisible(true); myItemListPanel.setEnabled(true); add(myItemListPanel, java.awt.BorderLayout.CENTER); }else { updateAuctionItemPanel(); } }else if (arg.equals(\"Item Removed\")) { updateAuctionItemPanel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1137/buggy-version/src.gui.ContactPanel.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.String)", "java.lang.Object.equals(java.lang.String)"], "Fixed commit": "5c5b6a8a206f9b37b95caec93cdad49112b1650f", "Url": "https://api.github.com/repos/360jmss/auctioncentral", "Date": "2016-12-06T04:03:18Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((level.getBalls().size()) == 0) && (!((level) instanceof doob.model.level.SurvivalLevel))) { level.onEvent(Level.Event.ALL_BALLS_GONE); dLog.info(\"All balls gone\", DLog.Type.STATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6103/buggy-version/src.main.java.doob.model.level.CollisionResolver.java", "BodyUseAPI": ["doob.model.level.Level.onEvent(Level.Event.ALL_BALLS_GONE)"], "Fixed commit": "f7f3351f73529521451a3f8a87bf05414552075c", "Url": "https://api.github.com/repos/jorisoudejans/DooB", "Date": "2015-10-30T22:43:36Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.pendingLayer) != null) { this.pendingLayer.setForceRefresh(force); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/75/buggy-version/swing.gis.src.main.java.org.sola.clients.swing.gis.ui.controlsbundle.ControlsBundleForTransaction.java", "BodyUseAPI": [], "Fixed commit": "72e0a883d87f40d33f5841de5dc419d22b8771f4", "Url": "https://api.github.com/repos/SOLA-LESOTHO/clients", "Date": "2013-04-10T10:24:27Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event == (br.com.etyllica.core.event.GUIEvent.APPLICATION_CHANGED)) { changeApplication(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2507/buggy-version/src.br.com.etyllica.gui.Window.java", "BodyUseAPI": [], "Fixed commit": "9fea45ae7a1d39d5477e122467abe6c74373502d", "Url": "https://api.github.com/repos/yuripourre/etyllica", "Date": "2013-04-14T05:28:19Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (availableInvestment < (freelanceWorkers)) { totalInvestment += availableInvestment; maxInvestment -= availableInvestment; freelanceWorkers = (((maxInvestment) - (totalInvestment)) < 0) ? maxInvestment : (maxInvestment) - (totalInvestment); }else { totalInvestment += freelanceWorkers; maxInvestment -= freelanceWorkers; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4378/buggy-version/src.main.java.ss.apiImpl.ProjectImpl.java", "BodyUseAPI": [], "Fixed commit": "ce8ab33721cdaa28ffdee5144cb1803b509da519", "Url": "https://api.github.com/repos/mdesanti/simulacion", "Date": "2013-07-13T18:54:32Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((etEmail.getText().length()) < 1) || ((etPass.getText().length()) < 1)) { android.widget.Toast.makeText(this, \"Some Fields Are Empty\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5038/buggy-version/app.src.main.java.com.example.talyeh3.myapplication.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "ebe49f92204091076b3853dfbd75e2b6f358404f", "Url": "https://api.github.com/repos/EddieLavian/FinalProject-2B", "Date": "2017-12-24T22:16:01Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4309/buggy-version/sch-pek-web.src.main.java.hu.sch.web.kp.group.GroupHistory.java", "BodyUseAPI": [], "Fixed commit": "60e0dfa66e7c12722188108159c1c50402ee0e90", "Url": "https://api.github.com/repos/kir-dev/korok", "Date": "2014-01-18T11:15:57Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4309/buggy-version/sch-pek-web.src.main.java.hu.sch.web.kp.valuation.Valuations.java", "BodyUseAPI": [], "Fixed commit": "60e0dfa66e7c12722188108159c1c50402ee0e90", "Url": "https://api.github.com/repos/kir-dev/korok", "Date": "2014-01-18T11:15:57Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((active) != null) && ((active.source) == null)) active = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/624/buggy-version/org.caleydo.core.src.org.caleydo.core.view.opengl.layout2.internal.MouseLayer.java", "BodyUseAPI": [], "Fixed commit": "bb4573054fa54cf1f22eedfbb189d917ef217054", "Url": "https://api.github.com/repos/Caleydo/caleydo", "Date": "2013-12-04T15:57:02Z"},
{"Line": "=>1866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (visible) { aniWidget.gotoIndex(0); aniWidget.setRunning(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6929/buggy-version/src.ucar.unidata.idv.control.AerologicalSoundingControl.java", "BodyUseAPI": [], "Fixed commit": "f894ac4a2bb6217e688de92d35e9a0e0d5145370", "Url": "https://api.github.com/repos/Unidata/IDV", "Date": "2012-04-18T23:34:02Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.AUDIO_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (manager != null) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { if (mode) { manager.adjustStreamVolume(AudioManager.STREAM_SYSTEM, AudioManager.ADJUST_UNMUTE, 0); }else { manager.adjustStreamVolume(AudioManager.STREAM_SYSTEM, AudioManager.ADJUST_MUTE, 0); } }else { manager.setStreamMute(AudioManager.STREAM_SYSTEM, mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3346/buggy-version/hxaudio.src.main.java.com.huhx0015.hxaudio.utils.HXAudioPlayerUtils.java", "BodyUseAPI": ["android.media.AudioManager.adjustStreamVolume(AudioManager.STREAM_SYSTEM,AudioManager.ADJUST_UNMUTE,int)", "android.media.AudioManager.setStreamMute(AudioManager.STREAM_SYSTEM,boolean)", "android.media.AudioManager.adjustStreamVolume(AudioManager.STREAM_SYSTEM,AudioManager.ADJUST_MUTE,int)"], "Fixed commit": "c175c2af7129850ad253a3cd88e6da24dc68d737", "Url": "https://api.github.com/repos/huhx0015/HXAudioPlayer", "Date": "2017-05-26T02:54:46Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pinInput) == null) { pinInput = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2306/buggy-version/src.Manager.java", "BodyUseAPI": [], "Fixed commit": "a1e5d9dc30a6d9cb91f660e07b2d22ebfc39512d", "Url": "https://api.github.com/repos/AlexanderEkdahl/ETSA01", "Date": "2013-05-22T18:32:59Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.isHidden()) { }else { if (file.isDirectory()) { (folderNum)++; java.io.File[] files = file.listFiles(); for (java.io.File file2 : files) { getFileSize(file2); } }else { (fileNum)++; size += file.length(); } onProgressUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5654/buggy-version/src.com.zhaoyan.juyou.common.FileInfoManager.java", "BodyUseAPI": ["java.io.File.isDirectory()", "java.io.File.listFiles()", "java.io.File.length()"], "Fixed commit": "6835a6ce7a4e88dbd6ec942f8fbe8a699d7a8313", "Url": "https://api.github.com/repos/liangPATHofei1100/ZhaoYanJuYou", "Date": "2013-12-10T01:09:45Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mediaList.isItemChecked(i))) { mediaList.setItemChecked(i, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8476/buggy-version/app.src.main.java.org.digitalcampus.oppia.activity.DownloadMediaActivity.java", "BodyUseAPI": ["android.widget.ListView.setItemChecked(int,boolean)"], "Fixed commit": "702ad7e24801984391230b072839724c1fb7afd8", "Url": "https://api.github.com/repos/jjoseba/oppia-mobile-android", "Date": "2016-09-08T08:46:29Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mediaList.isItemChecked(i))) { mediaList.setItemChecked(i, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8476/buggy-version/app.src.main.java.org.digitalcampus.oppia.activity.DownloadMediaActivity.java", "BodyUseAPI": ["android.widget.ListView.setItemChecked(int,boolean)"], "Fixed commit": "702ad7e24801984391230b072839724c1fb7afd8", "Url": "https://api.github.com/repos/jjoseba/oppia-mobile-android", "Date": "2016-09-08T08:46:29Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getPhotoUrl()) != null) { com.bumptech.glide.Glide.with(this.getApplicationContext()).load(user.getPhotoUrl().toString()).error(R.drawable.com_facebook_profile_picture_blank_portrait).into(mProfilePic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8827/buggy-version/app.src.main.java.com.group4.cmpe131.broadclass.activity.MainActivity.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseUser.getPhotoUrl()", "com.bumptech.glide.Glide.with(this.getApplicationContext()).load(user.getPhotoUrl().toString()).error(R.drawable.com_facebook_profile_picture_blank_portrait).into(de.hdodenhof.circleimageview.CircleImageView)", "com.bumptech.glide.Glide.with(this.getApplicationContext()).load(user.getPhotoUrl().toString())", "user.getPhotoUrl().toString()", "com.bumptech.glide.Glide.with(this.getApplicationContext()).load(user.getPhotoUrl().toString()).error(R.drawable.com_facebook_profile_picture_blank_portrait)"], "Fixed commit": "184fcfaf78e89ee79751bec3a2ef69606bfa23a8", "Url": "https://api.github.com/repos/alexk229/BroadClass", "Date": "2016-12-11T04:46:17Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mobicents.protocols.sctp.multiclient.ManageableAssociation.AssociationInfo.getPeerInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (peerAddresses.contains(peer.getPeerSocketAddress().toString())) { return true; }else if ((peer.getSecondaryPeerSocketAddress()) != null) { if (peerAddresses.contains(peer.getSecondaryPeerSocketAddress().toString())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/227/buggy-version/sctp-impl.src.main.java.org.mobicents.protocols.sctp.multiclient.ManageableAssociation.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "org.mobicents.protocols.sctp.multiclient.ManageableAssociation.PeerAddressInfo.getSecondaryPeerSocketAddress()", "org.mobicents.protocols.sctp.multiclient.ManageableAssociation.PeerAddressInfo.getSecondaryPeerSocketAddress()", "java.net.SocketAddress.toString()"], "Fixed commit": "dbfa44435b2230a4d7c548b833307a6877cdd667", "Url": "https://api.github.com/repos/AlerantAppNGIN/sctp", "Date": "2016-08-11T14:49:50Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(mEventMap.containsKey(event.getEventID()))) { mEventMap.put(event.getEventID(), event); mEventSet.add(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6238/buggy-version/app.src.main.java.john.eventpromoter.MainActivity.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, john.eventpromoter.Event>.put(event.getEventID(),john.eventpromoter.Event)", "java.util.HashSet<john.eventpromoter.Event>.add(john.eventpromoter.Event)", "john.eventpromoter.Event.getEventID()"], "Fixed commit": "c61a5242aadaa57bd3a5382c95243661ed8729ae", "Url": "https://api.github.com/repos/johntyler3/EventPromoter", "Date": "2017-04-05T03:29:00Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cookie != null) total += cookie.getTotalCost();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4208/buggy-version/code.temp.sipproxy.gov.nist.sip.proxy.TotalCostCalculator.java", "BodyUseAPI": ["BillingProgram.Cookie.getTotalCost()"], "Fixed commit": "b4697d4e897c54224d5c22b3575099a6b0ada844", "Url": "https://api.github.com/repos/skatsaounis/softeng-project", "Date": "2016-04-03T19:55:27Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.entityPlayer.capabilities.isCreativeMode)) { --(item.stackSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2514/buggy-version/code.sidben.villagertweaks.PlayerEventHandler.java", "BodyUseAPI": [], "Fixed commit": "a208c8e1fcf546e689e391ef91bc3dfd743c3f61", "Url": "https://api.github.com/repos/sidben/VillagerTweaks", "Date": "2013-07-19T21:25:41Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shooter.main.Game.getPlayer().isDead()) { healthTen = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/367/buggy-version/src.shooter.main.hud.HealthHud.java", "BodyUseAPI": [], "Fixed commit": "d6bde2935403dd96cd48c53bf43d31739f09f595", "Url": "https://api.github.com/repos/Frankford/2D_Shooter", "Date": "2014-10-30T20:50:52Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasPath(org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL))) { throw new org.apache.drill.exec.exception.DrillbitStartupException(java.lang.String.format(\"BOOT option '%s' is missing in config.\", org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4743/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.user.security.UserAuthenticatorFactory.java", "BodyUseAPI": [], "Fixed commit": "631ee2dadd67a0ab459adfc272c83e56ef6eb7a3", "Url": "https://api.github.com/repos/sohami/drill", "Date": "2017-02-28T07:28:14Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentPlayer.newArmyAmount()) == (armiesAdded)) { info = viewController.Console.getInstance().getText().replaceAll(\"You have \\\\d+\", \"You have no more\"); }else { info = viewController.Console.getInstance().getText().replaceAll(\"\\\\d+\", java.lang.Integer.toString(((currentPlayer.newArmyAmount()) - (armiesAdded)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4310/buggy-version/1110649.src.viewController.Turn.java", "BodyUseAPI": ["java.lang.Integer.toString(((currentPlayer.newArmyAmount()) - (armiesAdded)))", "viewController.Console.getInstance().getText().replaceAll(java.lang.String,java.lang.String)", "model.Player.newArmyAmount()"], "Fixed commit": "7c65c6bb9f906ddc2789907ac3aaab426ce4d540", "Url": "https://api.github.com/repos/eaverdeja/INF1636_War", "Date": "2015-07-04T00:16:18Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (meth != null) { lookupMethod(meth.name(), filterFactory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/13/buggy-version/modules.library.main.src.main.java.org.geotools.styling.ContrastEnhancementImpl.java", "BodyUseAPI": [], "Fixed commit": "54481180894fd3e102a9d998689406628d04c89a", "Url": "https://api.github.com/repos/dromagnoli/geotools", "Date": "2015-08-03T09:04:32Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query.contains(\"chromosomeName\")) && (query.contains(\"chromosomePosition\"))) { addFilterQuery(solrSearchBuilder, \"resourcename\", \"association\"); }else { addFilterQuery(solrSearchBuilder, \"resourcename\", \"study\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1558/buggy-version/goci-interfaces.goci-ui.src.main.java.uk.ac.ebi.spot.goci.ui.controller.SolrSearchController.java", "BodyUseAPI": [], "Fixed commit": "182cbe1a7820f8c81434cc9c1f9e2efcf6af2c40", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2017-03-20T13:59:51Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.stanford.cs276.EmpiricalCostModel.occurence.containsKey(tuple.get(1))) { rty = edu.stanford.cs276.EmpiricalCostModel.occurence.get(tuple.get(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5989/buggy-version/src.edu.stanford.cs276.EmpiricalCostModel.java", "BodyUseAPI": ["java.util.Map<java.lang.Character, java.lang.Integer>.get(java.lang.Character)", "java.util.ArrayList<java.lang.Character>.get(int)"], "Fixed commit": "093cdf668e2dce8ebada873dee6dac329679e1a3", "Url": "https://api.github.com/repos/liufei11111/Spring2017PA2_1", "Date": "2017-05-06T21:57:12Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.stanford.cs276.EmpiricalCostModel.ins.containsKey(tuple)) { qwe = edu.stanford.cs276.EmpiricalCostModel.ins.get(tuple); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5989/buggy-version/src.edu.stanford.cs276.EmpiricalCostModel.java", "BodyUseAPI": ["java.util.Map<java.util.ArrayList<java.lang.Character>, java.lang.Integer>.get(java.util.ArrayList<java.lang.Character>)"], "Fixed commit": "093cdf668e2dce8ebada873dee6dac329679e1a3", "Url": "https://api.github.com/repos/liufei11111/Spring2017PA2_1", "Date": "2017-05-06T21:57:12Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.stanford.cs276.EmpiricalCostModel.occurence.containsKey(tuple.get(0))) { rty = edu.stanford.cs276.EmpiricalCostModel.occurence.get(tuple.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5989/buggy-version/src.edu.stanford.cs276.EmpiricalCostModel.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Character>.get(int)", "java.util.Map<java.lang.Character, java.lang.Integer>.get(java.lang.Character)"], "Fixed commit": "093cdf668e2dce8ebada873dee6dac329679e1a3", "Url": "https://api.github.com/repos/liufei11111/Spring2017PA2_1", "Date": "2017-05-06T21:57:12Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.stanford.cs276.EmpiricalCostModel.occurence2.containsKey(tuple)) { rty = edu.stanford.cs276.EmpiricalCostModel.occurence2.get(tuple); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5989/buggy-version/src.edu.stanford.cs276.EmpiricalCostModel.java", "BodyUseAPI": ["java.util.Map<java.util.ArrayList<java.lang.Character>, java.lang.Integer>.get(java.util.ArrayList<java.lang.Character>)"], "Fixed commit": "093cdf668e2dce8ebada873dee6dac329679e1a3", "Url": "https://api.github.com/repos/liufei11111/Spring2017PA2_1", "Date": "2017-05-06T21:57:12Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.stanford.cs276.EmpiricalCostModel.occurence2.containsKey(tuple)) { rty = edu.stanford.cs276.EmpiricalCostModel.occurence2.get(tuple); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5989/buggy-version/src.edu.stanford.cs276.EmpiricalCostModel.java", "BodyUseAPI": ["java.util.Map<java.util.ArrayList<java.lang.Character>, java.lang.Integer>.get(java.util.ArrayList<java.lang.Character>)"], "Fixed commit": "093cdf668e2dce8ebada873dee6dac329679e1a3", "Url": "https://api.github.com/repos/liufei11111/Spring2017PA2_1", "Date": "2017-05-06T21:57:12Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.stanford.cs276.EmpiricalCostModel.del.containsKey(tuple)) { qwe = edu.stanford.cs276.EmpiricalCostModel.del.get(tuple); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5989/buggy-version/src.edu.stanford.cs276.EmpiricalCostModel.java", "BodyUseAPI": ["java.util.Map<java.util.ArrayList<java.lang.Character>, java.lang.Integer>.get(java.util.ArrayList<java.lang.Character>)"], "Fixed commit": "093cdf668e2dce8ebada873dee6dac329679e1a3", "Url": "https://api.github.com/repos/liufei11111/Spring2017PA2_1", "Date": "2017-05-06T21:57:12Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.stanford.cs276.EmpiricalCostModel.sub.containsKey(tuple)) { qwe = edu.stanford.cs276.EmpiricalCostModel.sub.get(tuple); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5989/buggy-version/src.edu.stanford.cs276.EmpiricalCostModel.java", "BodyUseAPI": ["java.util.Map<java.util.ArrayList<java.lang.Character>, java.lang.Integer>.get(java.util.ArrayList<java.lang.Character>)"], "Fixed commit": "093cdf668e2dce8ebada873dee6dac329679e1a3", "Url": "https://api.github.com/repos/liufei11111/Spring2017PA2_1", "Date": "2017-05-06T21:57:12Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.stanford.cs276.EmpiricalCostModel.trans.containsKey(tuple)) { qwe = edu.stanford.cs276.EmpiricalCostModel.trans.get(tuple); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5989/buggy-version/src.edu.stanford.cs276.EmpiricalCostModel.java", "BodyUseAPI": ["java.util.Map<java.util.ArrayList<java.lang.Character>, java.lang.Integer>.get(java.util.ArrayList<java.lang.Character>)"], "Fixed commit": "093cdf668e2dce8ebada873dee6dac329679e1a3", "Url": "https://api.github.com/repos/liufei11111/Spring2017PA2_1", "Date": "2017-05-06T21:57:12Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (db.exists(\"timetable\")) return db.get(\"timetable\", pk.edu.pl.pk_wfmi_schedule_notificator.domain.Timetable.class); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/243/buggy-version/app.src.main.java.pk.edu.pl.pk_wfmi_schedule_notificator.storage.Storage.java", "BodyUseAPI": ["com.snappydb.DB.get(java.lang.String,java.lang.Class)"], "Fixed commit": "d8bdd4520939999772bb1eec6189d098bdd83f2f", "Url": "https://api.github.com/repos/kbednarz/pk-wfmi-schedule-notifier", "Date": "2017-11-25T14:24:42Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o instanceof java.lang.Class) { cls = getRealClass(((java.lang.Class<?>) (o))); }else { cls = getRealClass(o.getClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1669/buggy-version/src.de.caluga.morphium.AnnotationAndReflectionHelper.java", "BodyUseAPI": ["java.lang.Object.getClass()", "de.caluga.morphium.AnnotationAndReflectionHelper.getRealClass(java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "b43f5a91872095272ec9a9d0c7ee15b48051806a", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2014-08-04T13:03:26Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTickTime) == 20) return new java.lang.String[]{ (\"Item Capacity: %%%\" + (getMaxPipeCapacity())) + \"%%% Stacks/sec\", \"Routing Value: %%%\" + (mStepSize) }; else if (((mTickTime) % 20) == 0) return new java.lang.String[]{ (((\"Item Capacity: %%%\" + (getMaxPipeCapacity())) + \"%%% Stacks/%%%\") + ((mTickTime) / 20)) + \"%%% sec\", \"Routing Value: %%%\" + (mStepSize) }; else return new java.lang.String[]{ (((\"Item Capacity: %%%\" + (getMaxPipeCapacity())) + \"%%% Stacks/%%%\") + (mTickTime)) + \"%%% ticks\", \"Routing Value: %%%\" + (mStepSize) };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2516/buggy-version/src.main.java.gregtech.api.metatileentity.implementations.GT_MetaPipeEntity_Item.java", "BodyUseAPI": [], "Fixed commit": "9efc0e31d96fc6c869f70fa8e8ba7d2affef1370", "Url": "https://api.github.com/repos/Antifluxfield/GT5-Unofficial", "Date": "2017-10-21T23:25:07Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nameUpdate.equals(name)) && (nikeNameUpdate.equals(nickName))) { if (spUserInfo.getBoolean(\"ISMODIFIED\", false)) { finish(); }else { spUserInfo.edit().putBoolean(\"ISMODIFIED\", true).commit(); android.content.Intent intent = new android.content.Intent(this, com.microbox.airshow.MainActivity.class); startActivity(intent); finish(); } }else { com.microbox.model.UpdateProfileMolelThread upft = new com.microbox.model.UpdateProfileMolelThread(nameUpdate, nikeNameUpdate, id, token, handlerUpdate); upft.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1439/buggy-version/src.com.microbox.airshow.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "6dec1e60a017329579b39f3771ad0e276873ea43", "Url": "https://api.github.com/repos/yuzx99/AirShow", "Date": "2014-12-30T14:12:53Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isPullToTop) { requisitions.addAll(response.body()); }else { requisitions = response.body(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8088/buggy-version/Biofields.app.src.main.java.com.hics.biofields.Views.Fragments.RequisitionOpenFragment.java", "BodyUseAPI": [], "Fixed commit": "ef10a89d2eeefc7ce2de6cd9531fcad8cf6120ac", "Url": "https://api.github.com/repos/DavidChindo/Biofileds", "Date": "2017-10-09T18:21:00Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTelepatContext) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6695/buggy-version/src.main.java.io.telepat.sdk.models.Channel.java", "BodyUseAPI": [], "Fixed commit": "0fec161ed26f7f7004f751034dc1fc419d980e48", "Url": "https://api.github.com/repos/telepat-io/telepat-android-sdk", "Date": "2016-02-11T13:59:53Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!running) { throw new com.norconex.collector.http.HttpCollectorException(\"Job is NOT running.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6096/buggy-version/norconex-collector-http.src.main.java.com.norconex.collector.http.HttpCollector.java", "BodyUseAPI": [], "Fixed commit": "afac3aecccb2eb21fa110d6c786f4299f17c4c77", "Url": "https://api.github.com/repos/Norconex/collector-http", "Date": "2014-10-08T20:06:57Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.norconex.jef.suite.JobSuite.getJobIds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((jobIds.length) == 0) { throw new com.norconex.collector.http.HttpCollectorException(\"Job ID is undefined.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6096/buggy-version/norconex-collector-http.src.main.java.com.norconex.collector.http.HttpCollector.java", "BodyUseAPI": [], "Fixed commit": "afac3aecccb2eb21fa110d6c786f4299f17c4c77", "Url": "https://api.github.com/repos/Norconex/collector-http", "Date": "2014-10-08T20:06:57Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((acceptedOffers.size()) > 0) { block.updateOfferStatus(getOperations(recommendations)); }else { block.updateOfferStatus(java.util.Optional.empty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4795/buggy-version/src.main.java.org.apache.mesos.scheduler.plan.DefaultBlockScheduler.java", "BodyUseAPI": [], "Fixed commit": "a9ddf180fafdf104234fbfa21a90f22ab196128b", "Url": "https://api.github.com/repos/mesosphere/dcos-commons", "Date": "2016-08-28T23:27:51Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((credential != null) && ((credential.length) > 0)) { builder.collect(credential[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7105/buggy-version/core.cas-server-core-authentication.src.main.java.org.apereo.cas.authentication.DefaultAuthenticationSystemSupport.java", "BodyUseAPI": ["org.apereo.cas.authentication.DefaultAuthenticationResultBuilder.collect(credential[0])"], "Fixed commit": "65e6e772ce0b49d9b5d00ea1411325386022bc17", "Url": "https://api.github.com/repos/apereo/cas", "Date": "2016-10-13T17:17:35Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.molgenis.data.annotation.entity.impl.ClinvarAnnotator.CLINVAR_CLNSIG.equals(attr.getName())) { attrName = org.molgenis.data.annotation.entity.impl.ClinvarAnnotator.CLINVAR_CLNSIG_ResourceAttributeName; }else if (org.molgenis.data.annotation.entity.impl.ClinvarAnnotator.CLINVAR_CLNALLE.equals(attr.getName())) { attrName = org.molgenis.data.annotation.entity.impl.ClinvarAnnotator.CLINVAR_CLINALL_ResourceAttributeName; }else { attrName = attr.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/167/buggy-version/molgenis-data-annotators.src.main.java.org.molgenis.data.annotation.entity.impl.ClinvarAnnotator.java", "BodyUseAPI": ["org.molgenis.data.AttributeMetaData.getName()", "org.molgenis.data.AttributeMetaData.getName()", "java.lang.String.equals(attr.getName())"], "Fixed commit": "ef14eedbb9d6ddf5d9b67579404a9baca026c1fd", "Url": "https://api.github.com/repos/jjettenn/molgenis", "Date": "2015-07-17T09:15:47Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (defaultValue != null) { java.util.regex.Pattern regex = java.util.regex.Pattern.compile(\"\\\"seq_(.*?)\\\"\"); java.util.regex.Matcher m = regex.matcher(defaultValue); java.lang.String seqName = null; while (m.find()) { seqName = \"seq_\" + (m.group(1)); } return seqName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2651/buggy-version/src.main.java.org.geotools.data.monetdb.MonetDBDialect.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Fixed commit": "dd067a2678e75a381370fb091a8188be2cf77f0e", "Url": "https://api.github.com/repos/DennisPallett/gt-jdbc-monetdb", "Date": "2014-07-25T08:46:04Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.redeul.google.go.lang.psi.expressions.GoExpr.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((goTypes.length) > 0) && ((goTypes[0]) != null)) { ro.redeul.google.go.lang.psi.typing.GoType goType = goTypes[0]; if ((argument instanceof ro.redeul.google.go.lang.psi.expressions.GoUnaryExpression) && (firstChildExp.getText().equals(\"&\"))) { stringBuilder.append('*'); } if (goType instanceof ro.redeul.google.go.lang.psi.typing.GoTypePsiBacked) { java.lang.String type = ro.redeul.google.go.util.GoUtil.getNameLocalOrGlobal(((ro.redeul.google.go.lang.psi.typing.GoTypePsiBacked) (goType)).getPsiType(), packageName1); stringBuilder.append(type); }else if (firstChildExp instanceof ro.redeul.google.go.lang.psi.expressions.literals.GoLiteralFunction) { stringBuilder.append(ro.redeul.google.go.util.GoUtil.getFuncDecAsParam(((ro.redeul.google.go.lang.psi.toplevel.GoFunctionDeclaration) (firstChildExp)))); }else { final com.intellij.psi.PsiReference[] references = firstChildExp.getReferences(); if ((references.length) > 0) { ro.redeul.google.go.lang.psi.GoPsiElement resl_element = ((ro.redeul.google.go.lang.psi.GoPsiElement) (references[0].resolve().getParent().getLastChild())); ro.redeul.google.go.lang.psi.expressions.literals.GoLiteralFunction fn = ((ro.redeul.google.go.lang.psi.expressions.literals.GoLiteralFunction) (resl_element.getFirstChild())); stringBuilder.append(ro.redeul.google.go.util.GoUtil.getFuncDecAsParam(fn)); }else { stringBuilder.append(\"interface{}\"); } } }else if (firstChildExp instanceof ro.redeul.google.go.lang.psi.expressions.literals.GoLiteral) { stringBuilder.append(((ro.redeul.google.go.lang.psi.expressions.literals.GoLiteral) (firstChildExp)).getType().name().toLowerCase()); }else { com.intellij.psi.PsiElement firstChild = firstChildExp.getFirstChild(); if (firstChild instanceof ro.redeul.google.go.lang.psi.expressions.literals.GoLiteralFunction) { ro.redeul.google.go.lang.psi.types.GoPsiType[] returnType = ((ro.redeul.google.go.lang.psi.expressions.literals.GoLiteralFunction) (firstChild)).getReturnType(); if ((returnType.length) > 0) { stringBuilder.append(returnType[0].getName()); }else { stringBuilder.append(\"interface{}\"); } }else if (firstChild instanceof ro.redeul.google.go.lang.psi.expressions.literals.GoLiteral) { ro.redeul.google.go.lang.psi.expressions.literals.GoLiteral.Type type = ((ro.redeul.google.go.lang.psi.expressions.literals.GoLiteral) (firstChild)).getType(); if ((type == (GoLiteral.Type.Float)) || (type == (GoLiteral.Type.ImaginaryFloat))) { stringBuilder.append(\"float32\"); }else { stringBuilder.append(type.name().toLowerCase()); } }else { stringBuilder.append(\"interface{}\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3388/buggy-version/src.ro.redeul.google.go.util.GoUtil.java", "BodyUseAPI": [], "Fixed commit": "b842e2ce72ff04097909779491d260ea0f15d7b9", "Url": "https://api.github.com/repos/coocood/google-go-lang-idea-plugin", "Date": "2013-12-09T00:45:24Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this.language.get(key)) instanceof java.util.List)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5046/buggy-version/bukkit.src.main.java.com.dumptruckman.minecraft.pluginbase.locale.SimpleMessageProvider.java", "BodyUseAPI": [], "Fixed commit": "2ed5f525f4e0f87b80c49c703515f5681d8bf308", "Url": "https://api.github.com/repos/dumptruckman/PluginBase", "Date": "2012-04-18T16:33:23Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) != null) { builder.addPathSegment(type); if ((year) != null) { builder.addPathSegment(year); if ((number) != null) { builder.addPathSegment(number); } } }else { builder.addPathSegment(\"all\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2674/buggy-version/src.main.java.org.leibnizcenter.uk.legislation.FeedRequestBuilder.java", "BodyUseAPI": [], "Fixed commit": "78d663d9fdc9e955390fadba4e9737baf0f4c05a", "Url": "https://api.github.com/repos/digitalheir/java-legislation-gov-uk-library", "Date": "2015-10-17T16:36:06Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.accessibility.AccessibilityEvent.getParcelableData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((data == null) || (!(data instanceof android.app.Notification))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6989/buggy-version/app.src.main.java.com.codeboy.qianghongbao.job.WechatAccessbilityJob.java", "BodyUseAPI": [], "Fixed commit": "a436fb9c9875c3b35367c04fb279d4b083f4676a", "Url": "https://api.github.com/repos/lendylongli/qianghongbao", "Date": "2016-02-28T02:47:40Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nameView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(playerName.isEmpty())) { intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/862/buggy-version/app.src.main.java.uowtt.ttapplication.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "d2dc5111365d40f6cf18e474d551552917022986", "Url": "https://api.github.com/repos/Jozhogg/TTapp", "Date": "2016-03-20T11:43:03Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fang.weighttracker.model.WeightLab.getWeights()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((weights.size()) > 0) { android.content.Intent chart_intent = new android.content.Intent(this, fang.weighttracker.Chart.class); startActivity(chart_intent); }else { android.widget.Toast.makeText(getApplication(), \"You do not have any weight records now. Please add your first weight entry. Start now!\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2462/buggy-version/app.src.main.java.fang.weighttracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7ac6df33a20c6b945ed969eee08c9036e4e4e020", "Url": "https://api.github.com/repos/evafang2008/Weight_tracker", "Date": "2016-06-20T15:52:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weights.size()) < 7) { for (int i = (weights_value.size()) - 1, j = 0; i >= 0; i-- , j++) { com.github.mikephil.charting.data.Entry v1e1 = new com.github.mikephil.charting.data.Entry(weights_value.get(i), j); valueSet1.add(v1e1); } }else { for (int i = (weights_value.size()) - 1, j = 0; i >= ((weights_value.size()) - 7); i-- , j++) { com.github.mikephil.charting.data.Entry v1e1 = new com.github.mikephil.charting.data.Entry(weights_value.get(i), j); valueSet1.add(v1e1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2462/buggy-version/app.src.main.java.fang.weighttracker.Chart.java", "BodyUseAPI": [], "Fixed commit": "7ac6df33a20c6b945ed969eee08c9036e4e4e020", "Url": "https://api.github.com/repos/evafang2008/Weight_tracker", "Date": "2016-06-20T15:52:51Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attempts) == 0) ans = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3060/buggy-version/src.com.bankomate.implementation.BankomateSingletonProxy.java", "BodyUseAPI": [], "Fixed commit": "5fae1b28f1761701b806ba56b6fdb7ff95d48183", "Url": "https://api.github.com/repos/Mrrockka/Bank-o-mate", "Date": "2017-10-31T11:38:35Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskType == (org.apache.hadoop.mapreduce.TaskType.MAP)) { tasks = taskMapping.get(jobName).getMapTasks(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6282/buggy-version/src.mapred.org.apache.hadoop.mapred.workflow.schedulers.OptimalSchedulingPlan.java", "BodyUseAPI": [], "Fixed commit": "4666283f2d68f4493a132b8dd106f78d6423e9b5", "Url": "https://api.github.com/repos/adwylie/hadoop", "Date": "2015-07-23T00:12:54Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskType == (org.apache.hadoop.mapreduce.TaskType.REDUCE)) { tasks = taskMapping.get(jobName).getReduceTasks(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6282/buggy-version/src.mapred.org.apache.hadoop.mapred.workflow.schedulers.OptimalSchedulingPlan.java", "BodyUseAPI": [], "Fixed commit": "4666283f2d68f4493a132b8dd106f78d6423e9b5", "Url": "https://api.github.com/repos/adwylie/hadoop", "Date": "2015-07-23T00:12:54Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskType == (org.apache.hadoop.mapreduce.TaskType.MAP)) { tasks = taskMapping.get(jobName).getMapTasks(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6282/buggy-version/src.mapred.org.apache.hadoop.mapred.workflow.schedulers.GreedySchedulingPlan.java", "BodyUseAPI": [], "Fixed commit": "4666283f2d68f4493a132b8dd106f78d6423e9b5", "Url": "https://api.github.com/repos/adwylie/hadoop", "Date": "2015-07-23T00:12:54Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskType == (org.apache.hadoop.mapreduce.TaskType.REDUCE)) { tasks = taskMapping.get(jobName).getReduceTasks(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6282/buggy-version/src.mapred.org.apache.hadoop.mapred.workflow.schedulers.GreedySchedulingPlan.java", "BodyUseAPI": [], "Fixed commit": "4666283f2d68f4493a132b8dd106f78d6423e9b5", "Url": "https://api.github.com/repos/adwylie/hadoop", "Date": "2015-07-23T00:12:54Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (me == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1867/buggy-version/src.com.massivecraft.factions.zcore.util.PermUtil.java", "BodyUseAPI": [], "Fixed commit": "618c5fceedf893f5a10fa1377114c4e27bb7e950", "Url": "https://api.github.com/repos/MassiveCraft/Factions", "Date": "2011-10-13T20:49:41Z"},
{"Line": "=>2355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.activitymgr.core.model.impl.ModelMgrImpl.ETC_ATTRIBUTE.equals(fieldId)) { fieldId = \"todo\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5508/buggy-version/core.plugins.org.activitymgr.core.model.src.org.activitymgr.core.model.impl.ModelMgrImpl.java", "BodyUseAPI": [], "Fixed commit": "5bc6a843c982f88d770f15d004dcaff185f53e2a", "Url": "https://api.github.com/repos/jfbrazeau/Activity-Manager", "Date": "2017-02-14T18:31:01Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7980/buggy-version/src.com.claymus.commons.server.ClaymusHelper.java", "BodyUseAPI": [], "Fixed commit": "5d90a1dc95adfb536ade80c13193bf367d871efd", "Url": "https://api.github.com/repos/Claymus/claymus", "Date": "2014-11-26T18:23:41Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 2) { ply.sendMessage(((org.bukkit.ChatColor.RED) + \"ERROR: Invalid Syntax.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5756/buggy-version/src.main.java.ubertweakstor.lagfarmfinder.LagFarmFinder.java", "BodyUseAPI": [], "Fixed commit": "efc9b82f24ee207d2036400e8df5543d6f625708", "Url": "https://api.github.com/repos/boar401s2/LagFarmFinder", "Date": "2013-04-25T09:10:20Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cfvbaibai.cardfantasy.engine.BattleEngine.getActivePlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((player.getHP()) <= 0) { throw new cfvbaibai.cardfantasy.engine.HeroDieSignal(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6959/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.BattleEngine.java", "BodyUseAPI": [], "Fixed commit": "5cbd57970d93bf5c6faa8d9292d78ee152b3e0bf", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-11-18T14:52:49Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(conn.isOpen())) { this.disconnected(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4947/buggy-version/cardshifter-server.src.main.java.com.cardshifter.server.clients.ClientWebSocket.java", "BodyUseAPI": [], "Fixed commit": "cb62890a6b1c9c467aae683f700374e580483ceb", "Url": "https://api.github.com/repos/Cardshifter/Cardshifter", "Date": "2015-05-12T15:22:19Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.rule.Rules.findByKey(org.sonar.api.rule.RuleKey)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rule == null) { throw new org.sonar.server.exceptions.NotFoundException((\"No rule found for key \" + ruleKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3759/buggy-version/sonar-server.src.main.java.org.sonar.server.rule.ws.AbstractUpdateTagsWsHandler.java", "BodyUseAPI": [], "Fixed commit": "c06b7b1d24ce232ece2754397f70abeee15b7330", "Url": "https://api.github.com/repos/mrebasti/sonarqube", "Date": "2014-04-10T14:31:17Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bv.getType()) == (byte[].class)) { if (org.simpledao.Utils.log.isDebugEnabled()) { org.simpledao.Utils.log.debug(((\"bindVariables - var '\" + (bv.getName())) + \"' is a byte array - assume blob\")); } statement.setBlob(bv.getPosition(), new java.io.ByteArrayInputStream(((byte[]) (bv.getValue())))); }else if (\"char\".equals(bv.getType().getName())) { if (org.simpledao.Utils.log.isDebugEnabled()) { org.simpledao.Utils.log.debug(((\"bindVariables - var '\" + (bv.getName())) + \"' is char\")); } statement.setString(bv.getPosition(), bv.getValue().toString()); }else if ((bv.getValue()) instanceof java.util.Date) { if (org.simpledao.Utils.log.isDebugEnabled()) { org.simpledao.Utils.log.debug(((\"bindVariables - var '\" + (bv.getName())) + \"' is Date\")); } statement.setTimestamp(bv.getPosition(), new java.sql.Timestamp(((java.util.Date) (bv.getValue())).getTime())); }else { if (org.simpledao.Utils.log.isDebugEnabled()) { org.simpledao.Utils.log.debug(((\"bindStatementVariable - var '\" + (bv.getName())) + \"' is not mapped\")); } statement.setString(bv.getPosition(), bv.getValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6741/buggy-version/java.src.org.simpledao.Utils.java", "BodyUseAPI": ["org.simpledao.BoundVariable.getName()", "bv.getValue().toString()", "org.simpledao.BoundVariable.getName()", "((java.util.Date) (bv.getValue())).getTime()", "org.simpledao.BoundVariable.getName()", "org.simpledao.BoundVariable.getValue()", "org.simpledao.BoundVariable.getValue()", "bv.getValue().toString()", "org.slf4j.Logger.debug(((\"bindVariables - var '\" + (bv.getName())) + \"' is char\"))", "org.simpledao.BoundVariable.getValue()", "java.sql.PreparedStatement.setBlob(bv.getPosition(),java.io.ByteArrayInputStream)", "org.simpledao.BoundVariable.getPosition()", "java.sql.PreparedStatement.setTimestamp(bv.getPosition(),java.sql.Timestamp)", "org.slf4j.Logger.debug(((\"bindStatementVariable - var '\" + (bv.getName())) + \"' is not mapped\"))", "org.simpledao.BoundVariable.getPosition()", "org.simpledao.BoundVariable.getName()", "org.simpledao.BoundVariable.getValue()", "bv.getType().getName()", "org.simpledao.BoundVariable.getType()", "java.sql.PreparedStatement.setString(bv.getPosition(),bv.getValue().toString())", "org.slf4j.Logger.debug(((\"bindVariables - var '\" + (bv.getName())) + \"' is Date\"))", "org.simpledao.BoundVariable.getPosition()", "java.lang.String.equals(bv.getType().getName())", "org.slf4j.Logger.debug(((\"bindVariables - var '\" + (bv.getName())) + \"' is a byte array - assume blob\"))", "org.simpledao.BoundVariable.getPosition()", "java.sql.PreparedStatement.setString(bv.getPosition(),bv.getValue().toString())", "org.simpledao.BoundVariable.getValue()"], "Fixed commit": "77a2a93e6727b23abd9750f22afb78a643ed5608", "Url": "https://api.github.com/repos/justinjmiller/SimpleDAO", "Date": "2015-03-26T19:01:39Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (className == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3641/buggy-version/core.src.main.java.org.glowroot.weaving.WeavingClassFileTransformer.java", "BodyUseAPI": [], "Fixed commit": "df8f3186704dd7ee35a9005236fea8cc11bffbdc", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2014-01-08T04:31:49Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpen()) addVisibleItemCount((-(_treechildren.getVisibleItemCount())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1446/buggy-version/zul.src.org.zkoss.zul.Treeitem.java", "BodyUseAPI": [], "Fixed commit": "ccf5cf3e929b0c65b7f1ccb1fde41f25626116b2", "Url": "https://api.github.com/repos/huangnoah/zk", "Date": "2013-10-16T06:00:18Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (permission != null) { removeKoyaAuthority(space, permission, u); }else { logger.info(\"[Unshare] no permission given : try revoke any koya permission\"); removeAnyKoyaAuthority(space, u); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2987/buggy-version/koya-alfresco.src.main.java.fr.itldev.koya.alfservice.security.SpaceAclService.java", "BodyUseAPI": ["fr.itldev.koya.alfservice.security.SpaceAclService.removeKoyaAuthority(fr.itldev.koya.model.impl.Space,fr.itldev.koya.model.permissions.KoyaPermissionConsumer,fr.itldev.koya.model.impl.User)"], "Fixed commit": "e83bfe6c85614268b95e4aa0f1042f85d4fb93d6", "Url": "https://api.github.com/repos/Itldev/Koya", "Date": "2016-01-13T11:03:56Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((creditApply.getApplyState()) == (cn.wisdom.dao.constant.ApplyState.Approved)) || ((creditApply.getApplyState()) == (cn.wisdom.dao.constant.ApplyState.Overdue))) { float interest = creditCalculator.calculateInterest(((creditApply.getAmount()) - (creditApply.getReturnedBase())), creditApply.getEffectiveTime(), appProperty.creditRatePerDay); creditApply.setInterest(interest); }else if ((creditApply.getApplyState()) == (cn.wisdom.dao.constant.ApplyState.ReturnDone)) { java.util.List<cn.wisdom.dao.vo.CreditPayRecord> payRecords = this.getApplyPayRecords(cn.wisdom.common.utils.DataConvertUtils.toString(creditApply.getId())); float interests = 0; for (cn.wisdom.dao.vo.CreditPayRecord creditPayRecord : payRecords) { if ((creditPayRecord.getReturnState()) == (cn.wisdom.dao.constant.ApplyState.Approved)) { interests += creditPayRecord.getInterest(); } } creditApply.setInterest(interests); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4467/buggy-version/src.main.java.cn.wisdom.service.CreditServiceImpl.java", "BodyUseAPI": ["cn.wisdom.dao.vo.CreditApply.setInterest(float)", "cn.wisdom.service.CreditCalculator.calculateInterest(((creditApply.getAmount()) - (creditApply.getReturnedBase())),creditApply.getEffectiveTime(),appProperty.creditRatePerDay)", "cn.wisdom.dao.vo.CreditApply.getReturnedBase()", "cn.wisdom.dao.vo.CreditApply.getApplyState()", "cn.wisdom.dao.vo.CreditApply.getId()", "cn.wisdom.dao.vo.CreditApply.getAmount()", "cn.wisdom.service.CreditServiceImpl.getApplyPayRecords(cn.wisdom.common.utils.DataConvertUtils.toString(creditApply.getId()))", "cn.wisdom.dao.vo.CreditApply.getEffectiveTime()", "cn.wisdom.dao.vo.CreditApply.setInterest(float)", "cn.wisdom.common.utils.DataConvertUtils.toString(creditApply.getId())"], "Fixed commit": "860c6b411ca75a7e2e85fc51f68711db6417c152", "Url": "https://api.github.com/repos/ooclrickliu/credit", "Date": "2016-07-30T10:10:33Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getOfflinePlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(l.isFriend(possible.getUniqueId()))) { f.setId(plugin.getDatabase().getFirstFreeFriendID()); l.addFriend(f); l.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/833/buggy-version/src.main.java.com.jcdesimp.landlord.commands.FriendAll.java", "BodyUseAPI": ["com.jcdesimp.landlord.persistantData.OwnedLand.addFriend(com.jcdesimp.landlord.persistantData.Friend)", "com.jcdesimp.landlord.persistantData.OwnedLand.save()"], "Fixed commit": "9e3b0a729668e745ea25dab4c6d84cae54e32488", "Url": "https://api.github.com/repos/SpatiumPrinceps/LandLord", "Date": "2017-06-26T18:01:34Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user != null) { response.sendRedirect(\"home\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5100/buggy-version/src.java.sait.cprg352.LoginServlet.java", "BodyUseAPI": [], "Fixed commit": "755084059a42bb12e10ee82d9e0fedc3d9aa4c46", "Url": "https://api.github.com/repos/dan-romero-mancia/Week04Lab01", "Date": "2017-10-04T20:41:59Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((address == null) || (address.trim().isEmpty())) throw new java.lang.IllegalArgumentException(\"Invalid server address\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4955/buggy-version/TabletopTool.src.main.java.com.t3.networking.registry.RegisteredServer.java", "BodyUseAPI": [], "Fixed commit": "3991e56b9e489cc5e7a492107e70747555cd59ba", "Url": "https://api.github.com/repos/virenerus/tabletoptool", "Date": "2014-07-12T19:16:20Z"},
{"Line": "=>1035", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((host == null) || (host.trim().isEmpty())) throw new java.lang.IllegalArgumentException(\"host is null or empty string\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4955/buggy-version/TabletopTool.src.main.java.com.t3.client.TabletopTool.java", "BodyUseAPI": [], "Fixed commit": "3991e56b9e489cc5e7a492107e70747555cd59ba", "Url": "https://api.github.com/repos/virenerus/tabletoptool", "Date": "2014-07-12T19:16:20Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapla.storage.xml.RaplaMapReader.getString(org.rapla.components.util.xml.RaplaSAXAttributes,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (keyref != null) { childReader = null; if (raplaType == (org.rapla.entities.dynamictype.DynamicType.TYPE)) { org.rapla.entities.dynamictype.DynamicType type = getDynamicType(keyref); if (type != null) { java.lang.String id = ((org.rapla.entities.Entity) (type)).getId(); entityMap.putIdPrivate(key, id, DynamicType.TYPE); } } if (raplaType == (org.rapla.entities.Category.TYPE)) { try { org.rapla.entities.Category cat = getSuperCategory().getCategoryFromPath(keyref); java.lang.String id = ((org.rapla.entities.Entity) (cat)).getId(); entityMap.putIdPrivate(key, id, DynamicType.TYPE); } catch (org.rapla.entities.EntityNotFoundException e) { getLogger().warn(e.getMessage(), e); } } }else { childReader = getChildHandlerForType(raplaType); delegateElement(childReader, namespaceURI, localName, atts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9009/buggy-version/src.org.rapla.storage.xml.RaplaMapReader.java", "BodyUseAPI": ["org.rapla.storage.xml.RaplaMapReader.getDynamicType(java.lang.String)", "getSuperCategory().getCategoryFromPath(java.lang.String)"], "Fixed commit": "bdb871ed5a160ad1ef0895dd0fd649fe36058c6f", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2015-08-10T06:42:14Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thoughtworks.mindit.mindit.helper.JsonParserService.rawParse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonFields.has(Fields.LEFT)) { updateLeftTree(node, jsonFields); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5060/buggy-version/app.src.main.java.com.thoughtworks.mindit.mindit.Tracker.java", "BodyUseAPI": ["com.thoughtworks.mindit.mindit.Tracker.updateLeftTree(com.thoughtworks.mindit.mindit.model.Node,org.json.JSONObject)"], "Fixed commit": "b7bbef878cbb72b2805d5c2853512a32be1be47b", "Url": "https://api.github.com/repos/Allminds/mind-it-android", "Date": "2016-02-10T06:52:45Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thoughtworks.mindit.mindit.helper.JsonParserService.rawParse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonFields.has(Fields.CHILD_SUBTREE)) { updateChildSubTree(node, jsonFields); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5060/buggy-version/app.src.main.java.com.thoughtworks.mindit.mindit.Tracker.java", "BodyUseAPI": ["com.thoughtworks.mindit.mindit.Tracker.updateChildSubTree(com.thoughtworks.mindit.mindit.model.Node,org.json.JSONObject)"], "Fixed commit": "b7bbef878cbb72b2805d5c2853512a32be1be47b", "Url": "https://api.github.com/repos/Allminds/mind-it-android", "Date": "2016-02-10T06:52:45Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thoughtworks.mindit.mindit.helper.JsonParserService.rawParse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonFields.has(Fields.RIGHT)) { updateRightTree(node, jsonFields); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/5060/buggy-version/app.src.main.java.com.thoughtworks.mindit.mindit.Tracker.java", "BodyUseAPI": ["com.thoughtworks.mindit.mindit.Tracker.updateRightTree(com.thoughtworks.mindit.mindit.model.Node,org.json.JSONObject)"], "Fixed commit": "b7bbef878cbb72b2805d5c2853512a32be1be47b", "Url": "https://api.github.com/repos/Allminds/mind-it-android", "Date": "2016-02-10T06:52:45Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) != null) { org.kie.spring.KieSpringUtils.setReleaseIdForContext(releaseId, context); org.kie.spring.KieSpringUtils.setDefaultReleaseId(releaseId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/150/buggy-version/kie-spring.src.main.java.org.kie.spring.KModuleBeanFactoryPostProcessor.java", "BodyUseAPI": [], "Fixed commit": "1ab203d4f17b37329510d068ac35464180ae0e80", "Url": "https://api.github.com/repos/vinodkiran/droolsjbpm-integration", "Date": "2014-04-01T13:15:47Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getDefault()) != (this)) { this.reload(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3646/buggy-version/src.main.java.de.cubeisland.engine.configuration.Configuration.java", "BodyUseAPI": [], "Fixed commit": "7dc28f7b2c008d785c8735e0b2b1b3158d49e38f", "Url": "https://api.github.com/repos/CubeEngineDev/ConfigurationAPI", "Date": "2013-11-24T03:34:17Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(controllers.ButtonHandlers.sandbox)) { world = views.scenes.AdventureModeScene.getWorld(); }else { world = views.scenes.SandboxScene.getWorld(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/609/buggy-version/src.controllers.ButtonHandlers.java", "BodyUseAPI": [], "Fixed commit": "928edc10b7db3bc46b57bf1b1b8d7c1e64368ed3", "Url": "https://api.github.com/repos/kapadiamush/Eve-s-Adventure", "Date": "2014-12-11T02:34:36Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((facing) == null) { ImmersiveRailroading.logger.error(\"INVALID TILE SAVE\"); return super.writeToNBT(nbt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1051/buggy-version/src.main.java.cam72cam.immersiverailroading.tile.TileRail.java", "BodyUseAPI": [], "Fixed commit": "0a079e8f1d8964aa46e50625ffe36e1edb0d7835", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2017-09-10T16:19:07Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rekkura.logic.prover.StratifiedForward.generateAssignments(rekkura.model.Dob)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((generated.size()) > 0) this.pendingTruths.add(dob); else exhaustGround(dob);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2564/buggy-version/src.rekkura.logic.prover.StratifiedForward.java", "BodyUseAPI": [], "Fixed commit": "eccd2cfa35a3e4e728191093db08bca023479a37", "Url": "https://api.github.com/repos/silentmagesoul/rekkura", "Date": "2013-03-18T05:28:51Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (SkriptConfig.allowFunctionsBeforeDefs.value()) { ch.njol.skript.lang.function.Functions.addPostCheck(e); }else { if (!(e.validateFunction(true))) { log.printError(); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4692/buggy-version/src.main.java.ch.njol.skript.lang.SkriptParser.java", "BodyUseAPI": [], "Fixed commit": "5d890f6366580051e41891f729021e4ef109925e", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2016-04-18T13:58:14Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((obj = parent.getItemAtPosition(position)) instanceof com.isawabird.Species)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1138/buggy-version/ISawABird.src.com.isawabird.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "6de23673136b071e3a82900905d7f05e8c31cc72", "Url": "https://api.github.com/repos/jerrymannel/ISawABird", "Date": "2013-12-04T09:36:37Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(row.isDisposed())) { row.setText(colnr, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2160/buggy-version/ui.src.org.pentaho.di.ui.core.widget.TableView.java", "BodyUseAPI": ["org.eclipse.swt.widgets.TableItem.setText(int,java.lang.String)"], "Fixed commit": "5a77809d84f51ee3b179b18ab1e2baf230afdad9", "Url": "https://api.github.com/repos/pentaho/pentaho-kettle", "Date": "2015-05-18T14:42:31Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.eclipse.ocl.examples.eventmanager.framework.RegistrationManagerTableBased.isInDisjunctiveNormalForm(result))) { if (result instanceof org.eclipse.ocl.examples.eventmanager.filters.OrFilter) { java.util.Set<org.eclipse.ocl.examples.eventmanager.filters.EventFilter> oldO = result.getOperands(); org.eclipse.ocl.examples.eventmanager.framework.LogicalOperationFilterImpl orfilter = new org.eclipse.ocl.examples.eventmanager.filters.OrFilter(); for (org.eclipse.ocl.examples.eventmanager.filters.EventFilter f : oldO) { if (!(f instanceof org.eclipse.ocl.examples.eventmanager.filters.LogicalOperationFilter)) { orfilter.addOperand(EventManagerFactory.eINSTANCE.createAndFilterFor(f)); }else { orfilter.addOperand(f); } } result = orfilter; if (!(org.eclipse.ocl.examples.eventmanager.framework.RegistrationManagerTableBased.isInDisjunctiveNormalForm(result))) { throw new java.lang.IllegalStateException(\"Could not create disjunctiv normalform\"); } }else { throw new java.lang.IllegalStateException(\"Could not create disjunctiv normalform\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3986/buggy-version/examples.org.eclipse.ocl.examples.eventmanager.src.org.eclipse.ocl.examples.eventmanager.framework.RegistrationManagerTableBased.java", "BodyUseAPI": ["org.eclipse.ocl.examples.eventmanager.framework.LogicalOperationFilterImpl.getOperands()"], "Fixed commit": "3f03c4ef570f0a140f3133ba738f7e50b46e09a2", "Url": "https://api.github.com/repos/FURCAS-dev/FURCAS", "Date": "2011-03-25T14:36:06Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ramotion.cardslider.DefaultViewUpdater.getDecoratedLeft(android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs(transitionRight2Center)) < (java.lang.Math.abs((((transitionRight2Center) * (viewLeft - (transitionEnd))) / (transitionDistance))))) { x = -(transitionRight2Center); }else { x = ((-(transitionRight2Center)) * (viewLeft - (transitionEnd))) / (transitionDistance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6552/buggy-version/card-slider.src.main.java.com.ramotion.cardslider.DefaultViewUpdater.java", "BodyUseAPI": [], "Fixed commit": "72626b01272ad67f6e6ed8511a02892b3d5a64cf", "Url": "https://api.github.com/repos/GalyGiGi/cardslider-android", "Date": "2017-08-13T16:08:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(producerMessage.getMethod())) { producerMessage.setMethod(RocketMQServiceConstant.SYNCHRONOUS_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3956/buggy-version/src.main.java.cn.com.hellowood.rocketmq.service.ProducerService.java", "BodyUseAPI": ["cn.com.hellowood.rocketmq.model.ProducerMessage.setMethod(RocketMQServiceConstant.SYNCHRONOUS_MESSAGE)"], "Fixed commit": "116a1968e7d287d0e1c95a8655a763ac480ae68c", "Url": "https://api.github.com/repos/helloworlde/SpringBoot-RocketMQ", "Date": "2017-09-03T07:08:45Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(producerMessage.getType())) { producerMessage.setType(RocketMQServiceConstant.ORDER_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3956/buggy-version/src.main.java.cn.com.hellowood.rocketmq.service.ProducerService.java", "BodyUseAPI": ["cn.com.hellowood.rocketmq.model.ProducerMessage.setType(RocketMQServiceConstant.ORDER_MESSAGE)"], "Fixed commit": "116a1968e7d287d0e1c95a8655a763ac480ae68c", "Url": "https://api.github.com/repos/helloworlde/SpringBoot-RocketMQ", "Date": "2017-09-03T07:08:45Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iteration == 0) { oldvarsum = java.lang.Double.MAX_VALUE; }else { for (int i = 0; i < (varsum.length); i++) oldvarsum += varsum[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6631/buggy-version/elki.src.main.java.de.lmu.ifi.dbs.elki.algorithm.clustering.kmeans.KMeansLloydMM.java", "BodyUseAPI": [], "Fixed commit": "f743fd9a6181489b2abc1e3348359335e8acddea", "Url": "https://api.github.com/repos/elki-project/elki", "Date": "2015-11-26T11:03:48Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((danielhabib.sandbox.SnakeSettings.level) < 2) { (danielhabib.sandbox.SnakeSettings.level)++; com.badlogic.gdx.Preferences prefs = Gdx.app.getPreferences(\"snakeSettings\"); prefs.putInteger(\"level\", danielhabib.sandbox.SnakeSettings.level); prefs.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8761/buggy-version/core.src.danielhabib.sandbox.SnakeSettings.java", "BodyUseAPI": [], "Fixed commit": "53c55cd1bcbe65b582933ae5773b77859ef8e549", "Url": "https://api.github.com/repos/danielhvs/snake-libgdx-ashley", "Date": "2016-06-30T18:16:21Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instance) != null) instance.notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/287/buggy-version/AmazingPetDirectory.src.directory.adt.amazingpetdirectory.ClassifiedRowItem.java", "BodyUseAPI": [], "Fixed commit": "64b4a9455be723a6bad443846f9204817b329cda", "Url": "https://api.github.com/repos/rayrayj92/APD", "Date": "2015-01-27T05:01:29Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) adapter.notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/287/buggy-version/AmazingPetDirectory.src.directory.adt.amazingpetdirectory.PetProductRowItem.java", "BodyUseAPI": [], "Fixed commit": "64b4a9455be723a6bad443846f9204817b329cda", "Url": "https://api.github.com/repos/rayrayj92/APD", "Date": "2015-01-27T05:01:29Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.geosolutions.geoserver.rest.GeoServerRESTReader.getLayers()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (layers != null) for (it.geosolutions.geoserver.rest.decoder.utils.NameLinkElem layerLink : layers) { sortedLayerNames.add(layerLink.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7514/buggy-version/src.gui.core.plugin.userui.src.main.java.it.geosolutions.geofence.gui.server.service.impl.WorkspacesManagerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "10f6381ac0fe5a3376cd2a4a457c7329d2857685", "Url": "https://api.github.com/repos/NielsCharlier/geofence", "Date": "2013-09-04T10:34:56Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (component.getName().contains(\"</i>\")) { tooltip = \"Drag component here\"; }else { tooltip = \"Component: \" + (component.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3096/buggy-version/gui.src.edu.colorado.csdms.wmt.client.ui.ModelCell.java", "BodyUseAPI": [], "Fixed commit": "0e909eba9001adc75bf43bd41353589eeb740139", "Url": "https://api.github.com/repos/csdms/wmt", "Date": "2014-02-25T19:00:03Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3733/buggy-version/util.src.main.java.joist.util.AbstractFixedPrecision.java", "BodyUseAPI": [], "Fixed commit": "ef2ec7a0893a09c0de4a19b3cc79be4f91c3bffb", "Url": "https://api.github.com/repos/stephenh/joist", "Date": "2011-04-12T02:20:26Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sPrefs.saved_pref_connectivity_paired_value) != \"DEFAULT\") { com.jareddlc.turquoisebicuspid.BluetoothLeService.setDevice(sPrefs.saved_pref_connectivity_paired_value); mDeviceAddress = sPrefs.saved_pref_connectivity_paired_value; com.jareddlc.turquoisebicuspid.SettingsActivity.SettingsFragment.pref_connectivity_paired.setSummary(sPrefs.saved_pref_connectivity_paired_entry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2202/buggy-version/TurquoiseBicuspid.src.com.jareddlc.turquoisebicuspid.SettingsActivity.java", "BodyUseAPI": ["com.jareddlc.turquoisebicuspid.BluetoothLeService.setDevice(sPrefs.saved_pref_connectivity_paired_value)", "android.preference.ListPreference.setSummary(sPrefs.saved_pref_connectivity_paired_entry)"], "Fixed commit": "b5e78465a9d28fa333d6bf6b28769272a6fc8039", "Url": "https://api.github.com/repos/jareddlc/TurquoiseBicuspid", "Date": "2014-11-14T07:39:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(h.getSuono().getMuto())) { h.getSuono().getClipGioco().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3126/buggy-version/Gioco.src.stati.StatoGioco.java", "BodyUseAPI": ["h.getSuono().getClipGioco().close()", "stati.StatoGioco.getSuono()", "h.getSuono().getClipGioco()"], "Fixed commit": "67935084c6a026758ab3bb6c47c713b3ec09ed99", "Url": "https://api.github.com/repos/gabrieleSarago/lab", "Date": "2017-05-06T12:06:49Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.atricore.idbus.kernel.main.provisioning.spi.IdentityPartition.findUserByUserName(key.toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getUserPassword()) == null) return new org.atricore.idbus.kernel.main.store.Credential[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6894/buggy-version/kernel.main.src.main.java.org.atricore.idbus.kernel.main.store.DefaultStore.java", "BodyUseAPI": [], "Fixed commit": "61bb7db319cebf673d5f61489cb9d9fbb10881c9", "Url": "https://api.github.com/repos/atricore/atricore-idbus", "Date": "2015-11-05T21:06:54Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localObj instanceof com.psddev.dari.db.Recordable) { java.util.UUID localId = ((com.psddev.dari.db.Recordable) (localObj)).getState().getId(); remoteToLocalIdMap.put(com.psddev.dari.util.ObjectUtils.to(java.util.UUID.class, stateMap.get(\"_id\")), localId); if (objType.equals(type)) { stateMap.put(\"_id\", localId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6487/buggy-version/db.src.main.java.com.psddev.dari.db.BootstrapImportTask.java", "BodyUseAPI": [], "Fixed commit": "5794b4519675cac865f02b7e0db0f6a6a7100de4", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-12-09T20:22:32Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dateSetting.equalsIgnoreCase(\"empty\")) { selectedDateGet = 0; }else { selectedDateGet = java.lang.Integer.parseInt(dateSetting); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1741/buggy-version/src.net.sf.memoranda.ui.PreferencesDialog.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "4a857f9bfbf0ebf9d69b895377f55224b0d4cbf9", "Url": "https://api.github.com/repos/ser316asu/Reinickendorf_SER316", "Date": "2017-03-27T21:24:29Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\\\\\".equals(rep)) { rep = \"\\\\\\\\\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/8080/buggy-version/util.delegate_gen.src.info.tregmine.DelegateGenTask.java", "BodyUseAPI": [], "Fixed commit": "6c07dc916bf0d85fde9c91b9f9d9b8a19bcccdff", "Url": "https://api.github.com/repos/notaro1997/tregmine", "Date": "2013-08-07T10:58:36Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gsingh.learnkirtan.FileManager.saveShabad(shabadEditor.getShabad())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result != (gsingh.learnkirtan.FileManager.SaveResult.NOTSAVEDCANCELLED)) { if ((shabadEditor) instanceof gsingh.learnkirtan.ui.shabadeditor.SwingShabadEditor) { gsingh.learnkirtan.ui.shabadeditor.SwingShabadEditor editor = ((gsingh.learnkirtan.ui.shabadeditor.SwingShabadEditor) (shabadEditor)); editor.reset(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1322/buggy-version/src.gsingh.learnkirtan.ui.action.ActionFactory.java", "BodyUseAPI": [], "Fixed commit": "fc633584ac6afae3af7180cc99034f7989288700", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2013-02-18T07:38:04Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(items.isEmpty())) { entry.setItems(items); entries.add(entry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1995/buggy-version/backend.core.src.main.java.org.smartdeveloperhub.harvesters.it.backend.factories.jira.IssueFactory.java", "BodyUseAPI": ["org.smartdeveloperhub.harvesters.it.backend.ChangeLog.Entry.setItems(java.util.Set<org.smartdeveloperhub.harvesters.it.backend.ChangeLog.Entry.Item>)"], "Fixed commit": "be791aacd875c0b210da3006a2f54f356e9ecf45", "Url": "https://api.github.com/repos/SmartDeveloperHub/sdh-it-harvester", "Date": "2016-07-07T08:24:38Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.ObjectManager.findAny(java.lang.Class,NETWORK.ACCOUNT_ID,long,NETWORK.REMOVED,<nulltype>,NETWORK.KIND,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (hostNtwk == null) { return new java.util.ArrayList<io.cattle.platform.configitem.context.data.metadata.common.ContainerMetaData>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7047/buggy-version/code.iaas.config-item.server.src.main.java.io.cattle.platform.configitem.context.dao.impl.MetaDataInfoDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "48f254fc3f3fecb9f977b84f73f2faa3d8761c9e", "Url": "https://api.github.com/repos/rancher/cattle", "Date": "2016-11-10T19:03:25Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (failure) { com.idega.block.article.data.dao.impl.ArticleDaoTemplateImpl.getLogger().warning((((\"Unable to \" + (editing ? \"edit\" : \"create\")) + \" article: \") + article)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4525/buggy-version/src.java.com.idega.block.article.data.dao.impl.ArticleDaoTemplateImpl.java", "BodyUseAPI": [], "Fixed commit": "f9ed451cecd64d0cc302ec5227678cda502339e8", "Url": "https://api.github.com/repos/idega/com.idega.block.article", "Date": "2012-12-12T14:38:52Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.idega.util.ListUtil.isEmpty(articleCategories))) { categoryDao.addCategories(articleCategories); article.setCategories(categoryDao.getCategories(articleCategories)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4525/buggy-version/src.java.com.idega.block.article.importer.ArticlesImporter.java", "BodyUseAPI": ["com.idega.block.article.data.ArticleEntity.setCategories(categoryDao.getCategories(articleCategories))", "com.idega.block.article.data.dao.CategoryDao.addCategories(java.util.Collection<java.lang.String>)", "com.idega.block.article.data.dao.CategoryDao.getCategories(java.util.Collection<java.lang.String>)"], "Fixed commit": "f9ed451cecd64d0cc302ec5227678cda502339e8", "Url": "https://api.github.com/repos/idega/com.idega.block.article", "Date": "2012-12-12T14:38:52Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.idega.block.article.data.dao.ArticleDao.getByUri(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (article == null) { article = new com.idega.block.article.data.ArticleEntity(); article.setModificationDate(new java.util.Date(r.getCreationDate())); article.setUri(uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4525/buggy-version/src.java.com.idega.block.article.importer.ArticlesImporter.java", "BodyUseAPI": [], "Fixed commit": "f9ed451cecd64d0cc302ec5227678cda502339e8", "Url": "https://api.github.com/repos/idega/com.idega.block.article", "Date": "2012-12-12T14:38:52Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hea3ven.tools.commonutils.util.ConfigurationUtil.getSubCategory(net.minecraftforge.common.config.ConfigCategory,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (subCatConfig == null) subCatConfig = new net.minecraftforge.common.config.ConfigCategory(subCat.name, category);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7126/buggy-version/src.main.java.com.hea3ven.tools.commonutils.mod.config.FileConfigManagerBuilder.java", "BodyUseAPI": [], "Fixed commit": "c7968545faa9711d3c40b22c2347806b3667416e", "Url": "https://api.github.com/repos/hea3ven/CommonUtils", "Date": "2016-02-27T18:48:38Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (catName.contains(\".\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/7126/buggy-version/src.main.java.com.hea3ven.tools.commonutils.mod.config.FileConfigManager.java", "BodyUseAPI": [], "Fixed commit": "c7968545faa9711d3c40b22c2347806b3667416e", "Url": "https://api.github.com/repos/hea3ven/CommonUtils", "Date": "2016-02-27T18:48:38Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(occurrences.isEmpty())) { int expSize = (graph.size()) - ((occurrences.size()) * ((occurrences.get(0).size()) - 1)); while ((result.size()) < expSize) result.add(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/67/buggy-version/src.main.java.nl.peterbloem.motive.MotifModel.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.size()", "java.util.List<java.util.List<java.lang.Integer>>.size()", "java.util.List<java.util.List<java.lang.Integer>>.get(int)"], "Fixed commit": "f76453c27e2fff2a1c9a92251dd53c954ed8f7b0", "Url": "https://api.github.com/repos/pbloem/motive", "Date": "2016-08-17T13:03:56Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(occurrences.isEmpty())) { int expSize = (graph.size()) - ((occurrences.size()) * ((occurrences.get(0).size()) - 1)); while ((degrees.size()) < expSize) degrees.add(new nl.peterbloem.motive.D(0, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/67/buggy-version/src.main.java.nl.peterbloem.motive.MotifModel.java", "BodyUseAPI": ["java.util.List<java.util.List<java.lang.Integer>>.size()", "java.util.List<java.lang.Integer>.size()", "java.util.List<java.util.List<java.lang.Integer>>.get(int)"], "Fixed commit": "f76453c27e2fff2a1c9a92251dd53c954ed8f7b0", "Url": "https://api.github.com/repos/pbloem/motive", "Date": "2016-08-17T13:03:56Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.endReached) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6073/buggy-version/modules.org.restlet.src.org.restlet.engine.io.PipeStream.java", "BodyUseAPI": [], "Fixed commit": "48242a61296d21ab68db42d67fdcc46569b8178e", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-05-12T23:19:02Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.virgilsecurity.sdk.securechat.SecureChatSessionHelper.getSessionState(card.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sessionState == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3971/buggy-version/pfs.src.main.java.com.virgilsecurity.sdk.securechat.SecureChat.java", "BodyUseAPI": [], "Fixed commit": "e03e088837b890127ab738fcc8a0c38fb9a632b8", "Url": "https://api.github.com/repos/VirgilSecurity/virgil-sdk-java-android", "Date": "2017-08-11T13:54:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((interfaces) == null) { interfaces = new java.util.ArrayList<com.iwave.ext.netappc.SVMNetInfo>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/6924/buggy-version/vipr-portal.com.iwave.ext.netappc.src.java.com.iwave.ext.netappc.StorageVirtualMachineInfo.java", "BodyUseAPI": [], "Fixed commit": "8b5739b15291c5435338068a86a208ca4c5f0c20", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-10-05T11:01:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plugin.getServer().getOnlinePlayers().length) != 0) playerList = playerList.substring(0, ((playerList.length()) - 2)); else playerList = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/9168/buggy-version/src.main.java.com.vioviocity.nexus.commands.OnlineCommand.java", "BodyUseAPI": [], "Fixed commit": "2bce3f863d0f43635c7615178a9474bbcbf7346d", "Url": "https://api.github.com/repos/vioCode/Nexus", "Date": "2012-06-07T21:55:03Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imgPath) != null) { this.setGif(imgPath, gifName, showWidth, showHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/2682/buggy-version/src.com.palmwin.gifview.GifView.java", "BodyUseAPI": [], "Fixed commit": "50997c88326c1fa1e2f3872575c0ba4af24931b9", "Url": "https://api.github.com/repos/ChatGame/androidgif", "Date": "2015-01-12T15:14:39Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (orOperand instanceof name.martingeisse.mapag.grammar.canonicalization.SequenceExpression) { orOperand = orOperand.withName(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/1601/buggy-version/src.name.martingeisse.mapag.grammar.canonicalization.ProductionCanonicalizer.java", "BodyUseAPI": ["name.martingeisse.mapag.grammar.canonicalization.Expression.withName(<nulltype>)"], "Fixed commit": "dc5039acea81e9a716207ef97118efcb48e7c909", "Url": "https://api.github.com/repos/MartinGeisse/mapag", "Date": "2017-12-20T17:43:55Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (0 < (appartDetails.getImgsUrl().size())) { java.util.List<com.veinhorn.scrollgalleryview.MediaInfo> infos = new java.util.ArrayList(appartDetails.getImgsUrl().size()); for (java.lang.String url : appartDetails.getImgsUrl()) { infos.add(com.veinhorn.scrollgalleryview.MediaInfo.mediaLoader(new com.example.jdagnogo.alertlebonsoinappart.utils.GlideImageLoader(url))); } scrollGalleryView.setThumbnailSize(100).setZoom(true).setFragmentManager(getSupportFragmentManager()).addMedia(infos); }else { com.veinhorn.scrollgalleryview.MediaInfo info = com.veinhorn.scrollgalleryview.MediaInfo.mediaLoader(new com.example.jdagnogo.alertlebonsoinappart.utils.GlideImageLoader((\"http:\" + (appartDetails.getImage())))); scrollGalleryView.setThumbnailSize(100).setZoom(true).setFragmentManager(getSupportFragmentManager()).addMedia(info); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4384/buggy-version/app.src.main.java.com.example.jdagnogo.alertlebonsoinappart.activities.AppartDetailedActivity.java", "BodyUseAPI": ["com.example.jdagnogo.alertlebonsoinappart.models.AppartDetails.getImgsUrl()", "com.example.jdagnogo.alertlebonsoinappart.models.AppartDetails.getImgsUrl()", "com.veinhorn.scrollgalleryview.MediaInfo.mediaLoader(com.example.jdagnogo.alertlebonsoinappart.utils.GlideImageLoader)", "appartDetails.getImgsUrl().size()", "com.example.jdagnogo.alertlebonsoinappart.models.AppartDetails.getImage()"], "Fixed commit": "61dcba93d88d0f15ea90db5acbb6bf14f3e42ff6", "Url": "https://api.github.com/repos/jdagnogo/Alerte-leboncoin-appart", "Date": "2017-08-21T09:51:31Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["allInformation.get(5).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((0 < (surface.indexOf(\"<su\"))) && (0 < (surface.indexOf(\"\\\">\")))) { surface = surface.substring(((surface.indexOf(\"\\\">\")) + 2), surface.indexOf(\"<su\")); appartDetails.setSurface(java.lang.String.format(\"%s\u00b2\", surface)); }else { appartDetails.setSurface(\"???\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/4384/buggy-version/app.src.main.java.com.example.jdagnogo.alertlebonsoinappart.utils.Parser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "61dcba93d88d0f15ea90db5acbb6bf14f3e42ff6", "Url": "https://api.github.com/repos/jdagnogo/Alerte-leboncoin-appart", "Date": "2017-08-21T09:51:31Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(initialized)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/898/buggy-version/src.com.stacksync.desktop.config.profile.Profile.java", "BodyUseAPI": [], "Fixed commit": "7d6f9b1bdefc0ec1f98b5aa7fc560108a3f76e8d", "Url": "https://api.github.com/repos/stacksync/desktop", "Date": "2014-06-02T13:27:02Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ResourcesManagment.SceneManager.getInstance().getGameScene()) != null) { Players.PlayerOnline playerOnline = ResourcesManagment.SceneManager.getInstance().getGameScene().playerOnline; playerOnline.body.setLinearVelocity(vX, vY); if (vX > 0.0F) { playerOnline.setFlippedHorizontal(false); }else { playerOnline.setFlippedHorizontal(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3287/buggy-version/src.com.PFC.PlatformJumper.streetJumper.java", "BodyUseAPI": [], "Fixed commit": "4ae80fc721cace5f69a90d0c9a87501df79d071d", "Url": "https://api.github.com/repos/aitorneos/streetJumper", "Date": "2014-01-14T15:18:57Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ResourcesManagment.SceneManager.getInstance().getGameScene()) != null) && ((ResourcesManagment.SceneManager.getInstance().getGameScene().firstTouch) == true)) { final com.PFC.PlatformJumper.streetJumper.movePlayerServerMessage movePlayerServerMessage = ((com.PFC.PlatformJumper.streetJumper.movePlayerServerMessage) (this.mMessagePool.obtainMessage(com.PFC.PlatformJumper.streetJumper.FLAG_MESSAGE_SERVER_MOVE_PLAYER))); movePlayerServerMessage.set(ResourcesManagment.ResourcesManager.getInstance().activity.mPlayerIDCounter, ResourcesManagment.SceneManager.getInstance().getGameScene().player.body.getLinearVelocity().x, ResourcesManagment.SceneManager.getInstance().getGameScene().player.body.getLinearVelocity().y); this.mSocketServer.sendBroadcastServerMessage(movePlayerServerMessage); this.mMessagePool.recycleMessage(movePlayerServerMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V105/3287/buggy-version/src.com.PFC.PlatformJumper.streetJumper.java", "BodyUseAPI": [], "Fixed commit": "4ae80fc721cace5f69a90d0c9a87501df79d071d", "Url": "https://api.github.com/repos/aitorneos/streetJumper", "Date": "2014-01-14T15:18:57Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.napkinstudio.controller.UserOrder.getOrder()", "java.util.Iterator<java.lang.Object[]>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((object[0].equals(\"Waiting for approval\")) && ((object[1]) == null)) && ((theOrder.getSAPstatus().getId()) == 6)) { iterator.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2111/buggy-version/NapkinStudio.src.main.java.com.napkinstudio.controller.OrderPageController.java", "BodyUseAPI": [], "Fixed commit": "b54091a334011db28869f8c84590e303a81e9e4e", "Url": "https://api.github.com/repos/shadovv00/NapkinStudio", "Date": "2016-10-19T14:26:38Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getClickedBlock().getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((de.lordvader.Managers.SettingsManager.getPort(sign.getLine(1))) == 99999) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5859/buggy-version/src.de.lordvader.Listeners.SignInteractListeners.java", "BodyUseAPI": [], "Fixed commit": "c94db47b418d9c685494aa13a981a214359a71f0", "Url": "https://api.github.com/repos/lordvaderde/SignPlugin", "Date": "2016-03-14T10:23:47Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backFragment) != null) cardBackType = backFragment.getType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/723/buggy-version/Fresco.src.icreate.fresco.AddEditActivity.java", "BodyUseAPI": [], "Fixed commit": "4bba73a164ce5f18f89d64c77f4f114367c6525d", "Url": "https://api.github.com/repos/allwinpb/Fresco", "Date": "2014-06-21T06:56:05Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backFragment) != null) cardBackString = backFragment.getContent();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/723/buggy-version/Fresco.src.icreate.fresco.AddEditActivity.java", "BodyUseAPI": [], "Fixed commit": "4bba73a164ce5f18f89d64c77f4f114367c6525d", "Url": "https://api.github.com/repos/allwinpb/Fresco", "Date": "2014-06-21T06:56:05Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((frontFragment) != null) cardFrontString = frontFragment.getContent();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/723/buggy-version/Fresco.src.icreate.fresco.AddEditActivity.java", "BodyUseAPI": [], "Fixed commit": "4bba73a164ce5f18f89d64c77f4f114367c6525d", "Url": "https://api.github.com/repos/allwinpb/Fresco", "Date": "2014-06-21T06:56:05Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((frontFragment) != null) cardFrontType = frontFragment.getType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/723/buggy-version/Fresco.src.icreate.fresco.AddEditActivity.java", "BodyUseAPI": [], "Fixed commit": "4bba73a164ce5f18f89d64c77f4f114367c6525d", "Url": "https://api.github.com/repos/allwinpb/Fresco", "Date": "2014-06-21T06:56:05Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newsListener) != null) { newsListener.onNewsLoaded(loadedNews); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/980/buggy-version/app.src.main.java.io.pumpkinz.pumpkinreader.NewsDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "4f5d8288508e1934ab9b0ce54f96d5f4cd113fdc", "Url": "https://api.github.com/repos/pumpkinz/pumpkin-reader", "Date": "2015-11-17T13:26:24Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx instanceof io.pumpkinz.pumpkinreader.NewsDetailFragment.NewsListener) { newsListener = ((io.pumpkinz.pumpkinreader.NewsDetailFragment.NewsListener) (ctx)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/980/buggy-version/app.src.main.java.io.pumpkinz.pumpkinreader.NewsDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "4f5d8288508e1934ab9b0ce54f96d5f4cd113fdc", "Url": "https://api.github.com/repos/pumpkinz/pumpkin-reader", "Date": "2015-11-17T13:26:24Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((task) == null) || ((task.getStatus()) == (MyAsyncTask.Status.FINISHED))) { task = new org.qii.weiciyuan.ui.userinfo.UserInfoFragment.SimpleTask(); task.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2967/buggy-version/src.org.qii.weiciyuan.ui.userinfo.UserInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "e88a2b3096a543076c463bf62b9652b7b68f8501", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-03T08:37:24Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anysoftkeyboard.ui.settings.AddOnListPreference.AddOnArrayAdapter.getDialog()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (dialog != null) dialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7455/buggy-version/src.com.anysoftkeyboard.ui.settings.AddOnListPreference.java", "BodyUseAPI": ["android.app.Dialog.dismiss()"], "Fixed commit": "b867295d038db29690342b2874de3be3c0e4063a", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2012-12-21T15:17:00Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getAuthUserId()) != null) { pstmt.setInt(counter, item.getAuthUserId()); }else { pstmt.setNull(counter, java.sql.Types.INTEGER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6969/buggy-version/proxl_web_app.src.org.yeastrc.xlink.www.dao.URLShortenerDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.setInt(int,item.getAuthUserId())", "org.yeastrc.xlink.www.dto.URLShortenerDTO.getAuthUserId()"], "Fixed commit": "d3005cd532a6dffe87efa20d00df2018a0efae6d", "Url": "https://api.github.com/repos/yeastrc/proxl-web-app", "Date": "2016-11-19T00:56:04Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editable) { allergyViewHolder.itemView.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { listener.onEditItem(com.qre.ui.adapters.EmergencyDataAdapter.TYPE_ALLERGY, allergy); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4145/buggy-version/app.src.main.java.com.qre.ui.adapters.EmergencyDataAdapter.java", "BodyUseAPI": [], "Fixed commit": "798c4a8e1b2b13227dc65aef8ee4db112f4987eb", "Url": "https://api.github.com/repos/UTN-FRBA-Mobile/QREmegencias-Mobile", "Date": "2017-11-13T03:27:03Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.Component.getExtends()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(railo.commons.lang.StringUtil.isEmpty(strExt, true))) { ext = railo.runtime.op.Caster.cfTypeToClass(strExt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4142/buggy-version/railo-java.railo-core.src.railo.runtime.type.util.ComponentUtil.java", "BodyUseAPI": ["railo.runtime.op.Caster.cfTypeToClass(java.lang.String)"], "Fixed commit": "5f1c986f18e642ac536b577cac0ee237410895fa", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2014-03-03T15:22:52Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isAlarm) { if (parser.hasNext()) extendedInfo.set(\"state\", parser.next()); if (parser.hasNext()) extendedInfo.set(\"mileage\", parser.nextLong(16)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7276/buggy-version/src.org.traccar.protocol.Tk103ProtocolDecoder.java", "BodyUseAPI": [], "Fixed commit": "bc8b2e58586174e369f13ff4ca1d1c8cf88eb8fc", "Url": "https://api.github.com/repos/sparselabs/GpsDataServer", "Date": "2016-08-24T07:53:19Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jahia.services.content.JCRContentUtils.findAvailableNodeName(org.jahia.services.content.JCRNodeWrapper,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.equals(pageKey, availableNodeName))) { org.jahia.services.importexport.LegacyImportHandler.logger.warn(java.lang.String.format(\"Updated the page system name to avoid merging with another one. Page path: %s/%s\", parent.getPath(), availableNodeName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8938/buggy-version/core.src.main.java.org.jahia.services.importexport.LegacyImportHandler.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,parent.getPath(),java.lang.String)", "org.slf4j.Logger.warn(java.lang.String)"], "Fixed commit": "dad0b513d1b6bf10df7638fefd6423a7c429ed4c", "Url": "https://api.github.com/repos/dsaulnier/dxm", "Date": "2016-11-24T17:24:43Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bot.Utility.checkCoordinate(entity.job.Novice,utility.Pair)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res == 8) res = -2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3924/buggy-version/src.bot.Bot.java", "BodyUseAPI": [], "Fixed commit": "b88d6c2ea9293063f7ebce0ac804947c062d4785", "Url": "https://api.github.com/repos/Zymphony77/DefenseOfTheBullets", "Date": "2017-12-04T12:02:19Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocumentInternal.getImmutableSchemaClass(com.orientechnologies.orient.core.record.impl.ODocument)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (immutableSchema == null) { com.orientechnologies.orient.core.db.document.ODatabaseDocument db = value.getDatabaseIfDefined(); if (db == null) { return null; } db.getMetadata().reload(); immutableSchema = com.orientechnologies.orient.core.record.impl.ODocumentInternal.getImmutableSchemaClass(value); if (immutableSchema == null) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7630/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientEdgeIterator.java", "BodyUseAPI": [], "Fixed commit": "f9cdb06149d29961361f794e68b9c71c98f4c65e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-30T15:52:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["internship.issuetracker.service.IssueService.getIssueById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return \"home\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5157/buggy-version/src.main.java.internship.issuetracker.controller.IssueController.java", "BodyUseAPI": [], "Fixed commit": "9b9e0cddb451024b300733ca3c297b0cf313b964", "Url": "https://api.github.com/repos/danielplecan/issue-tracker", "Date": "2014-07-22T13:26:31Z"},
{"Line": "=>1070", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value % 2) != 0) { value++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4558/buggy-version/src.screenstudio.gui.ScreenStudio.java", "BodyUseAPI": [], "Fixed commit": "ccfecf1f6b2f2b217244f26124ea2cf31ed004fd", "Url": "https://api.github.com/repos/patrickballeux/screenstudio", "Date": "2016-10-05T15:22:24Z"},
{"Line": "=>1052", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value % 2) != 0) { value++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4558/buggy-version/src.screenstudio.gui.ScreenStudio.java", "BodyUseAPI": [], "Fixed commit": "ccfecf1f6b2f2b217244f26124ea2cf31ed004fd", "Url": "https://api.github.com/repos/patrickballeux/screenstudio", "Date": "2016-10-05T15:22:24Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ints.get(currentNum)) == 0) { product *= 1; }else { product *= ints.get(currentNum); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3226/buggy-version/homework.11-17_interview-problems.src.com.jaellysbales.productofothernums.ProductOfOtherNums.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "4ae8523646ec0fc630254bd3cfcec0272ceb4f74", "Url": "https://api.github.com/repos/jaellysbales/unit-5", "Date": "2015-11-17T17:25:15Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/614/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "b6b2908a4dd5608ecb975d13c7c8ff3cac221f12", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsOverlay.getSeries()) != null) { return jsOverlay.getSeries().length(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/614/buggy-version/addon.src.main.java.com.vaadin.addon.charts.client.ui.HighchartWidget.java", "BodyUseAPI": ["jsOverlay.getSeries().length()", "com.vaadin.addon.charts.client.ui.HighchartJsOverlay.getSeries()"], "Fixed commit": "b6b2908a4dd5608ecb975d13c7c8ff3cac221f12", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.antreem.birretta.service.dao.DaoFactory.getInstance().getUserDao().findUserByUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (u == null) { return createResultDTOEmptyResponse(ErrorCodes.USER_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5792/buggy-version/src.main.java.it.antreem.birretta.service.BirrettaService.java", "BodyUseAPI": [], "Fixed commit": "006bcfeceed931d574a4e4bad0d05c389755669a", "Url": "https://api.github.com/repos/keen80/BirrettaService", "Date": "2012-09-07T07:45:11Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (R.id.action_close_conversation)) { builder.show(); }else if (i == (R.id.contact_via_mail)) { if ((agentEmail) != null) { composeEmail(new java.lang.String[]{ agentEmail }, \"Need support\"); }else { com.github.rocketchat.utils.AppUtils.showToast(this, \"Agent not connected\", false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5828/buggy-version/rocketchatsdk.src.main.java.com.github.rocketchat.livechat.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "0e48f46539d2beab44cf31dc998c1c45be5e3edb", "Url": "https://api.github.com/repos/RocketChat/Rocket.Chat.Android.SDK", "Date": "2017-06-24T07:14:02Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.isResource()) { countedResources.putOrAdd(node.asResource().getURI(), 1, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/314/buggy-version/src.main.java.org.aksw.simba.challenge.approaches.Baseline.java", "BodyUseAPI": ["com.carrotsearch.hppc.ObjectIntOpenHashMap<java.lang.String>.putOrAdd(node.asResource().getURI(),int,int)", "com.hp.hpl.jena.rdf.model.RDFNode.asResource()", "node.asResource().getURI()"], "Fixed commit": "04d8974fa4911d825307c994bda396d7490aee79", "Url": "https://api.github.com/repos/RicardoUsbeck/aksw-offsite-challenge-2015", "Date": "2015-10-06T17:02:39Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sdrf.getRootNodes().isEmpty()) { return new uk.ac.ebi.fg.annotare2.magetab.table.Table(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6570/buggy-version/app.web.src.main.java.uk.ac.ebi.fg.annotare2.web.server.rpc.SubmissionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "3064e3c3ee3d8b060f464316b3a96d4987b2cf5f", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2013-06-06T10:00:06Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6685/buggy-version/src.com.pexat.habhub.chasecartracker.TrackerService.java", "BodyUseAPI": [], "Fixed commit": "d0286b09dd99c93bf0389b7eda5428bd68af06cf", "Url": "https://api.github.com/repos/PriyeshPatel/habhub-chase-car-tracker", "Date": "2012-04-02T19:51:52Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6685/buggy-version/src.com.pexat.habhub.chasecartracker.TrackerService.java", "BodyUseAPI": [], "Fixed commit": "d0286b09dd99c93bf0389b7eda5428bd68af06cf", "Url": "https://api.github.com/repos/PriyeshPatel/habhub-chase-car-tracker", "Date": "2012-04-02T19:51:52Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.smartintern.saveroute.SavedRouteVector.getInstance().savedRoute.isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"All saved routes were deleted!\", Toast.LENGTH_SHORT).show(); finish(); }else { android.widget.Toast.makeText(getApplicationContext(), \"Deleted!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2194/buggy-version/android.src.com.smartintern.saveroute.SavedRoute.java", "BodyUseAPI": [], "Fixed commit": "927b47e424213a21a6b1087c5259c1d6cf35ec40", "Url": "https://api.github.com/repos/Corly/EventPlanning", "Date": "2013-05-04T18:05:31Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.eventplanning.GlobalVector.getInstance().routeList.isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"All destinations were deleted!\", Toast.LENGTH_SHORT).show(); finish(); }else com.example.eventplanning.IntelGeolocation.MakeToast(\"Deleted!\", cnt);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2194/buggy-version/android.src.com.example.eventplanning.CurrentDestinations.java", "BodyUseAPI": [], "Fixed commit": "927b47e424213a21a6b1087c5259c1d6cf35ec40", "Url": "https://api.github.com/repos/Corly/EventPlanning", "Date": "2013-05-04T18:05:31Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intentCallback) != null) { intentCallback.onComplete(new com.ludei.googleplaygames.GPGService.Error(\"User signed out\", com.google.android.gms.games.GamesActivityResultCodes.RESULT_RECONNECT_REQUIRED)); intentCallback = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5783/buggy-version/src.cordova.src.android.GPGService.java", "BodyUseAPI": [], "Fixed commit": "8eb5353744403e4793568e7af4764c22177184be", "Url": "https://api.github.com/repos/ludei/atomic-plugins-googleplaygames", "Date": "2015-07-01T10:57:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.block.Block.getState()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (state != null) { org.bukkit.material.MaterialData md = state.getData(); if (md instanceof org.bukkit.material.SimpleAttachableMaterialData) { org.bukkit.block.Block blockBehind = getBlockBehindAttachable(block, ((org.bukkit.material.SimpleAttachableMaterialData) (md)).getFacing()); if (blockBehind != null) { if (((blockBehind.getType().equals(Material.GLASS)) || (blockBehind.getType().equals(Material.ICE))) || (blockBehind.getType().equals(Material.STAINED_GLASS))) { event.setCancelled(true); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5555/buggy-version/src.main.java.me.eccentric_nz.TARDIS.listeners.TARDISBlockPhysicsListener.java", "BodyUseAPI": ["org.bukkit.block.BlockState.getData()"], "Fixed commit": "278282d56f00e80dce706f6682a69a3e0fe97c10", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2014-01-31T07:18:08Z"},
{"Line": "=>1500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion < 64) { android.content.ContentValues initialValues = new android.content.ContentValues(); initialValues.put(\"code\", CurrencyEnum.BYN.name()); db.insert(\"currency\", null, initialValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8901/buggy-version/myExpenses.src.main.java.org.totschnig.myexpenses.provider.TransactionDatabase.java", "BodyUseAPI": [], "Fixed commit": "8b4a28a3735e8a70e1b537f681305ec79f9e0205", "Url": "https://api.github.com/repos/mtotschnig/MyExpenses", "Date": "2017-05-23T14:49:50Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inventory.getInventory().getHolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (holder instanceof org.bukkit.block.DoubleChest) { return new net.aufdemrand.denizen.objects.properties.inventory.dLocation(((org.bukkit.block.DoubleChest) (holder)).getLocation()); }else if (holder instanceof org.bukkit.block.BlockState) { return new net.aufdemrand.denizen.objects.properties.inventory.dLocation(((org.bukkit.block.BlockState) (holder)).getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2357/buggy-version/src.main.java.net.aufdemrand.denizen.objects.properties.inventory.InventoryHolder.java", "BodyUseAPI": [], "Fixed commit": "7e2199f27445a2911b6b1bdbbee0cb507bb94484", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2014-04-30T04:42:13Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mSecondPrepared) == false) && ((mNextMediaPlayer) != null)) { mNextMediaPlayer.prepareAsync(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8387/buggy-version/src.org.odyssey.playbackservice.GaplessPlayer.java", "BodyUseAPI": [], "Fixed commit": "a34325659b2e6b05cdc43fa71659c86c9c9ffe7f", "Url": "https://api.github.com/repos/djselbeck/odyssey", "Date": "2014-05-22T16:58:42Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.alexw.departments.MapsActivity.userFocus) == null) { mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(Constants.PATHOPHYSILOGY_COORDINATES, 17)); }else mMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(com.example.alexw.departments.MapsActivity.userFocus, 17));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5310/buggy-version/app.src.main.java.com.example.alexw.departments.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "7042e964f3627610c464e4baab24bcec92869fea", "Url": "https://api.github.com/repos/AlexWalker28/Departments", "Date": "2017-08-25T13:29:23Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attachJar) { final java.io.File jarFile = new java.io.File(project.getBuild().getDirectory(), ((+(project.getBuild().getFinalName())) + \".jar\")); projectHelper.attachArtifact(project, \"jar\", project.getArtifact().getClassifier(), jarFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4513/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase09package.ApklibMojo.java", "BodyUseAPI": [], "Fixed commit": "c0db38d9da601cfbad9ce561565ae67334369bbf", "Url": "https://api.github.com/repos/greek1979/maven-android-plugin", "Date": "2014-02-16T01:07:43Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.exists()) { config.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5285/buggy-version/ContactManagerImpl.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "616544fb5a25ffff73f53888a4c5daf9cbf81217", "Url": "https://api.github.com/repos/BBK-PiJ-2014-23/cw4", "Date": "2015-03-12T12:25:33Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.getLoading().getValue()) { session.setLoading(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6070/buggy-version/app.src.main.java.org.mozilla.focus.session.SessionCallbackProxy.java", "BodyUseAPI": ["org.mozilla.focus.session.Session.setLoading(boolean)"], "Fixed commit": "373332788d5c0e50755d17f7bef701972cbd9dba", "Url": "https://api.github.com/repos/layely/focus-android", "Date": "2017-10-21T05:29:14Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end == ((states.size()) - 1)) { end += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7284/buggy-version/opentripplanner-api-webapp.src.main.java.org.opentripplanner.api.ws.PlanGenerator.java", "BodyUseAPI": [], "Fixed commit": "c82d7d7bfc234dfe1303c39dba93ed7d36f2899b", "Url": "https://api.github.com/repos/openplans/OpenTripPlanner", "Date": "2012-10-10T15:24:04Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((token2.length) < 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7141/buggy-version/modules.HTMLparsing.WikiWrapper.java", "BodyUseAPI": [], "Fixed commit": "877c191114b778bfe98831d913dbde62d9f626b2", "Url": "https://api.github.com/repos/mdshah/modules", "Date": "2012-11-13T04:54:40Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.jdndeveloper.lifereminders.MainActivity.FragmentLocation) == (-1)) com.jdndeveloper.lifereminders.MainActivity.FragmentLocation = getProperFragmentLocation();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4260/buggy-version/LifeReminders.app.src.main.java.com.jdndeveloper.lifereminders.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1f240c238b6e68dc4e93f51b199f9d74544a75ff", "Url": "https://api.github.com/repos/JDNdeveloper/Off-By-One", "Date": "2015-03-10T19:36:04Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDocumentOpen()) { if ((showUnsavedChangeWarning()) && (showIncompleteTagsWarning())) { try { getDriver().destroy(); java.lang.System.exit(0); } catch (edu.brandeis.cs.nlp.mae.database.MaeDBException e) { showError(e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/93/buggy-version/src.main.java.edu.brandeis.cs.nlp.mae.controller.MaeMainController.java", "BodyUseAPI": [], "Fixed commit": "54428fa019ccd0361391e8f077bbde98384067e2", "Url": "https://api.github.com/repos/keighrim/mae-annotation", "Date": "2016-02-17T20:30:29Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.index.isBoosted(e)) { mouv.add(new org.geekygoblin.nedetlesmaki.game.utils.Mouvement(e).setAnimation(this.getValideAnimation(true, (-1), dirP)).saveMouvement()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7192/buggy-version/game.src.main.java.org.geekygoblin.nedetlesmaki.game.systems.GameSystem.java", "BodyUseAPI": ["org.geekygoblin.nedetlesmaki.game.utils.Mouvement.setAnimation(org.geekygoblin.nedetlesmaki.game.constants.AnimationType)", "new org.geekygoblin.nedetlesmaki.game.utils.Mouvement(e).setAnimation(this.getValideAnimation(true, (-1), dirP)).saveMouvement()", "java.util.ArrayList<org.geekygoblin.nedetlesmaki.game.utils.Mouvement>.add(new org.geekygoblin.nedetlesmaki.game.utils.Mouvement(e).setAnimation(this.getValideAnimation(true, (-1), dirP)).saveMouvement())"], "Fixed commit": "36d4539b8e2ea240cdbf71e93bb47796b4683489", "Url": "https://api.github.com/repos/devnewton/nedetlesmaki", "Date": "2014-02-05T10:02:29Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.System.getProperty(\"os.name\").toLowerCase().startsWith(\"windows\"))) java.nio.file.Files.deleteIfExists(target);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5619/buggy-version/src.de.ust.skill.common.jvm.streams.FileOutputStream.java", "BodyUseAPI": [], "Fixed commit": "37a636983af743b8d37c0ffce1b8574b0764681c", "Url": "https://api.github.com/repos/skill-lang/jvmCommon", "Date": "2015-09-11T15:28:55Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mRecyclerView.getAdapter()) == null) { mRecyclerView.setAdapter(mNotesAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2677/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.notifications.NotificationsListFragment.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.setAdapter(org.wordpress.android.ui.notifications.adapters.NotesAdapter)"], "Fixed commit": "e999c1e04a25ee16f0b4530e923ee8b5bf9030d1", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2015-09-18T05:48:49Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(com.offsidegame.offside.models.OffsideApplication.getMessageTypeProcessedQuestion())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((viewHolder.question.getQuestionType().equals(\"Debate\")) && isProcessedQuestion) { viewHolder.incomingTimeToAnswerRoot.setVisibility(View.GONE); viewHolder.incomingQuestionProcessedQuestionTimeExpiredMessageTextView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4567/buggy-version/app.src.main.java.com.offsidegame.offside.adapters.ChatMessageAdapter.java", "BodyUseAPI": ["android.widget.LinearLayout.setVisibility(View.GONE)", "android.widget.TextView.setVisibility(View.GONE)"], "Fixed commit": "aef7eabbf4faed3f70b826686e4552b9a0c4ab21", "Url": "https://api.github.com/repos/edkmstuff/Offside", "Date": "2017-04-07T13:05:26Z"},
{"Line": "=>681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (viewHolder.question.getQuestionType().equals(\"Debate\")) viewHolder.incomingBetPanelRoot.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4567/buggy-version/app.src.main.java.com.offsidegame.offside.adapters.ChatMessageAdapter.java", "BodyUseAPI": ["android.widget.LinearLayout.setVisibility(View.GONE)"], "Fixed commit": "aef7eabbf4faed3f70b826686e4552b9a0c4ab21", "Url": "https://api.github.com/repos/edkmstuff/Offside", "Date": "2017-04-07T13:05:26Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((no.runsafe.framework.minecraft.entity.RunsafeProjectile) (event.getDamageActor())).getShooter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(shooterSource instanceof no.runsafe.framework.minecraft.entity.RunsafeLivingEntity)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2550/buggy-version/src.no.runsafe.cheeves.achievements.Shieldwall.java", "BodyUseAPI": [], "Fixed commit": "4e6c32b18ab86922b8fed624f95bd1941256697f", "Url": "https://api.github.com/repos/Runsafe/Cheeves", "Date": "2017-03-08T01:45:54Z"},
{"Line": "=>802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(renameManifestPackage)) { commands.add(\"--rename-manifest-package\"); commands.add(renameManifestPackage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3802/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase09package.ApkMojo.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f4a0f96f0aea4ff85302a1423164e03ffd9d82e3", "Url": "https://api.github.com/repos/simpligility/android-maven-plugin", "Date": "2011-05-05T20:55:47Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((foundElements == null) || ((foundElements.getInteractors()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1255/buggy-version/src.main.java.org.reactome.web.diagram.client.InteractorsManager.java", "BodyUseAPI": [], "Fixed commit": "66b7d43bc4553cb1681c338d168f8828a132abdd", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-03-18T14:06:39Z"},
{"Line": "=>1152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compactionStrategy != null) { builder.append(\" AND \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/52/buggy-version/dbsvc.src.main.java.com.emc.storageos.db.server.impl.SchemaUtil.java", "BodyUseAPI": [], "Fixed commit": "7f1ef5ab4742d349a1199c1c2072074cd5b92ff5", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-10-17T02:14:39Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root == null) || ((root.get(\"validators\")) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2326/buggy-version/catalog.core.catalog-core-validator.src.main.java.ddf.catalog.validation.impl.ValidationParser.java", "BodyUseAPI": [], "Fixed commit": "ccb74e484f77b032f726ce94d43c976b42bed97d", "Url": "https://api.github.com/repos/jrnorth/ddf", "Date": "2016-03-24T17:21:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (currToken.equals(\"\")) { java.lang.System.out.println(\"fail\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2185/buggy-version/analyzer.src.java.ru.goodsReview.analyzer.util.sentence.ReviewTokens.java", "BodyUseAPI": [], "Fixed commit": "4c606decc0bac1fd4fa886daa68c0c197f57e6e2", "Url": "https://api.github.com/repos/AChugr/GoodsReview", "Date": "2012-03-25T17:42:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rootCause instanceof java.util.concurrent.TimeoutException) { throw ((java.util.concurrent.TimeoutException) (rootCause)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1382/buggy-version/src.main.java.io.dropwizard.revolver.core.RevolverCommand.java", "BodyUseAPI": [], "Fixed commit": "0728fbfd14a5d3d846d49a70b5cd3916460395a9", "Url": "https://api.github.com/repos/phaneesh/revolver", "Date": "2016-05-16T13:06:04Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 21) { klp.chebada.com.animationdemo.SemicircleActivity.startActivity(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/885/buggy-version/app.src.main.java.klp.chebada.com.animationdemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c64d6946f0bb35afb28601056206c61249561616", "Url": "https://api.github.com/repos/monkeyklp/AnimationDemo", "Date": "2017-07-25T10:39:30Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDrawing) { mPreviousPath.add(mCrntPath); refreshCache(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5233/buggy-version/src.ch.shibastudio.kanjinotepad.drawing.KanjiView.java", "BodyUseAPI": [], "Fixed commit": "fec54b674fd87e7e05f518c001a4d112133807c6", "Url": "https://api.github.com/repos/shibakaneki/AndroidKanji", "Date": "2012-09-02T21:38:11Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.examples.gg.TwitchPlayer.getPhoneAndroidSDK()) >= 16) { chatSettings.setAllowUniversalAccessFromFileURLs(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8183/buggy-version/gg.src.com.examples.gg.TwitchPlayer.java", "BodyUseAPI": [], "Fixed commit": "5002c8177f424d72df90347eccdbddf87f1faffc", "Url": "https://api.github.com/repos/wwyz/DotaSpark", "Date": "2013-08-12T05:48:02Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((flexoResource.getContainer()) != null) { flexoResource.getContainer().removeFromContents(flexoResource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/672/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.resource.ResourceRepository.java", "BodyUseAPI": ["flexoResource.getContainer().removeFromContents(R)", "R.getContainer()"], "Fixed commit": "311c3cdb54a7247d4c8d19976e38bd576bf305ea", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2017-07-22T15:40:47Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.foundation.resource.ResourceRepository<R, I>.getParentFolder(R)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (parentFolder != null) { parentFolder.removeFromResources(flexoResource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/672/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.resource.ResourceRepository.java", "BodyUseAPI": ["org.openflexo.foundation.resource.RepositoryFolder<R, I>.removeFromResources(R)"], "Fixed commit": "311c3cdb54a7247d4c8d19976e38bd576bf305ea", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2017-07-22T15:40:47Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { throw new lib.APIException(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2448/buggy-version/app.lib.ApiClientImpl.java", "BodyUseAPI": [], "Fixed commit": "7aa8b4488117c22e513079c9c3822e56db8edc53", "Url": "https://api.github.com/repos/AsherBond/graylog2-web-interface", "Date": "2014-01-08T16:58:46Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["requestBuilder.execute().get(int,java.util.concurrent.TimeUnit)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (response.getResponseBody().isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2448/buggy-version/app.lib.ApiClientImpl.java", "BodyUseAPI": [], "Fixed commit": "7aa8b4488117c22e513079c9c3822e56db8edc53", "Url": "https://api.github.com/repos/AsherBond/graylog2-web-interface", "Date": "2014-01-08T16:58:46Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (title.equalsIgnoreCase(\"RHUM\")) { titles.add(\"rhumd\"); }else if (title.equals(\"\")) { titles.add((\"null\" + i)); }else { titles.add(title.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7775/buggy-version/src.main.java.org.agmip.translators.dssat.DssatWeatherInput.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.util.ArrayList.add(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "ec3f070005b6cce29fb96b66d8b63e3e1e0da23e", "Url": "https://api.github.com/repos/agmip/translator-dssat", "Date": "2013-02-22T21:29:55Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name != null) result.add(item);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3955/buggy-version/CLOZ.src.com.jorgebs.cloz.ContactListActivity.java", "BodyUseAPI": [], "Fixed commit": "49ad17db545974307597ca5e6f9e2fcb9cc1af81", "Url": "https://api.github.com/repos/cycrix13/CLOZ", "Date": "2014-08-25T15:55:49Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (tradestrategy.getStrategyData())) { tradestrategy.setStrategyData(org.trade.strategy.data.StrategyData.create(tradestrategy)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2962/buggy-version/trade.src.org.trade.broker.BrokerDataRequestMonitor.java", "BodyUseAPI": ["org.trade.strategy.data.StrategyData.create(org.trade.persistent.dao.Tradestrategy)", "org.trade.persistent.dao.Tradestrategy.setStrategyData(org.trade.strategy.data.StrategyData.create(tradestrategy))"], "Fixed commit": "4423a39981cb6f8f98a07bbd7ac24ae0096c51e3", "Url": "https://api.github.com/repos/trade-manager/trade-manager", "Date": "2015-04-21T02:53:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statement.indexOf(\" \", nameIndex)) >= 0) { nameIndexEnd = statement.indexOf(\" \", nameIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5287/buggy-version/activity2.Magpie2.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String,int)"], "Fixed commit": "db05d2ca910bc9c0b6ddec36d29e5ec64acba010", "Url": "https://api.github.com/repos/mpfeifer1/CS-Magpie", "Date": "2015-01-27T16:43:22Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (containsWord(statement, \"dakota\")) { response = \"You're right. Dakota is an idiot!\"; }else if (containsWord(statement, \"Mr.\")) { int nameIndex = (statement.lastIndexOf(\"Mr.\")) + 5; int nameIndexEnd = statement.length(); if ((statement.indexOf(\" \", nameIndex)) >= 0) { nameIndexEnd = statement.indexOf(\" \", nameIndex); } java.lang.String firstName = statement.substring((nameIndex - 1), nameIndexEnd); firstName = firstName.replace(\".\", \"\"); firstName = firstName.replace(\",\", \"\"); if ((firstName.toLowerCase().equals(\"maine\")) || (firstName.toLowerCase().equals(\"simonson\"))) { response = (\"Mr. \" + firstName) + \" sounds seriously lame\"; }else { response = (\"Mr. \" + firstName) + \" sounds awesome\"; } }else { response = getRandomResponse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5287/buggy-version/activity2.Magpie2.java", "BodyUseAPI": ["activity2.Magpie2.containsWord(java.lang.String,java.lang.String)", "java.lang.String.length()", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "db05d2ca910bc9c0b6ddec36d29e5ec64acba010", "Url": "https://api.github.com/repos/mpfeifer1/CS-Magpie", "Date": "2015-01-27T16:43:22Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((handler == null) && (jdbcType != null)) && (JdbcType.OTHER.equals(jdbcType))) { handler = JSON_TYPE_HANDLER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7906/buggy-version/src.main.java.org.apache.ibatis.type.TypeHandlerRegistry.java", "BodyUseAPI": [], "Fixed commit": "e18e00ef7ecfd43af28a667cde37a1167168848a", "Url": "https://api.github.com/repos/tianhao/mybatis-3", "Date": "2017-05-16T03:50:31Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTracking) { org.opencv.core.Core.rectangle(matCam1, new org.opencv.core.Point(((coordCam1.x) - ((tplsize) / 2)), ((coordCam1.y) - ((tplsize) / 2))), new org.opencv.core.Point(((coordCam1.x) + ((tplsize) / 2)), ((coordCam1.y) + ((tplsize) / 2))), greenColor, 1); org.opencv.core.Core.rectangle(matCam1, new org.opencv.core.Point(((coordCam1.x) - ((windowSearchSize) / 2)), ((coordCam1.y) - ((windowSearchSize) / 2))), new org.opencv.core.Point(((coordCam1.x) + ((windowSearchSize) / 2)), ((coordCam1.y) + ((windowSearchSize) / 2))), blueColor, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6534/buggy-version/plugins-dev.tracking.pt.lsts.neptus.plugins.tracking.Tracking.java", "BodyUseAPI": [], "Fixed commit": "9f3d182bd171afe3011283e903c2f020a931783f", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2016-05-06T18:34:37Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTracking) { org.opencv.core.Core.rectangle(matCam2, new org.opencv.core.Point(((coordCam2.x) - ((tplsize) / 2)), ((coordCam2.y) - ((tplsize) / 2))), new org.opencv.core.Point(((coordCam2.x) + ((tplsize) / 2)), ((coordCam2.y) + ((tplsize) / 2))), greenColor, 1); org.opencv.core.Core.rectangle(matCam2, new org.opencv.core.Point(((coordCam2.x) - ((windowSearchSize) / 2)), ((coordCam2.y) - ((windowSearchSize) / 2))), new org.opencv.core.Point(((coordCam2.x) + ((windowSearchSize) / 2)), ((coordCam2.y) + ((windowSearchSize) / 2))), blueColor, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6534/buggy-version/plugins-dev.tracking.pt.lsts.neptus.plugins.tracking.Tracking.java", "BodyUseAPI": [], "Fixed commit": "9f3d182bd171afe3011283e903c2f020a931783f", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2016-05-06T18:34:37Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getImageResourceID()) == 0) { i.pic.setImageResource(R.drawable.default_image); }else { i.pic.setImageResource(c.getImageResourceID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3110/buggy-version/app.src.main.java.com.example.jokel.hw2_contacts.DisplayContactsActivity.java", "BodyUseAPI": ["com.example.jokel.hw2_contacts.Contact.getImageResourceID()", "i.pic.setImageResource(c.getImageResourceID())"], "Fixed commit": "c58677e8d173855df8a5052d37754b6d47847878", "Url": "https://api.github.com/repos/josiahls/HW2_Contacts", "Date": "2017-09-20T00:01:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.melonderr.hostme.DatabaseHelper.getAllData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((res.getString(4).equals(CurrentUser)) && (!(res.getString(5).equals(oldPass.getText().toString())))) { oldPass.setError(\"Enter current password\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3196/buggy-version/app.src.main.java.com.example.melonderr.hostme.changePassword.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)"], "Fixed commit": "3cc16bdfe2ba05c662a0bc276cc5cf9c904078e7", "Url": "https://api.github.com/repos/mpho001/HostMe", "Date": "2017-11-20T05:07:16Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSprite) != null) { mSprite.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7712/buggy-version/library.src.main.java.com.github.ybq.android.spinkit.SpinKitView.java", "BodyUseAPI": [], "Fixed commit": "5f037b05258db126fc503549c8b9415986ee37f3", "Url": "https://api.github.com/repos/BeehiveInnovations/Android-SpinKit", "Date": "2017-04-28T14:56:27Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dailystudio.app.utils.ThumbAsyncDecoder.AbsDecodeThumbAsyncTask.getThumbKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.dailystudio.app.utils.ThumbAsyncDecoder.sThumbDecodeRequests.contains(thumbKey)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8567/buggy-version/src.main.java.com.dailystudio.app.utils.ThumbAsyncDecoder.java", "BodyUseAPI": [], "Fixed commit": "cb566658672b2bda9494514b5b263be532f42771", "Url": "https://api.github.com/repos/dailystudio/devbricks", "Date": "2017-11-07T15:26:27Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.ardor3d.extension.animation.skeletal.clip.AnimationClip, com.ardor3d.extension.animation.skeletal.clip.AnimationClipInstance>.values()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clipInstances.isEmpty()) { return (_currentAnimationState) == (com.ardor3d.extension.animation.skeletal.AnimationManager.AnimationUpdateState.play) ? true : false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/669/buggy-version/trunk.ardor3d-animation.src.main.java.com.ardor3d.extension.animation.skeletal.AnimationManager.java", "BodyUseAPI": [], "Fixed commit": "565f3f5061d4f3b80258efacfbc63e326012f313", "Url": "https://api.github.com/repos/gouessej/Ardor3D", "Date": "2012-11-15T23:11:02Z"},
{"Line": "=>5494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.forceCaseInsensitiveComparisons) { whereClause = \" AND \" + \" LOWER(SUB.USER_ID) = LOWER(?)\"; }else { whereClause = \" AND \" + \" SUB.USER_ID = ?\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7966/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.dao.ApiMgtDAO.java", "BodyUseAPI": [], "Fixed commit": "971eacc2c1f960ca39bc144982b2d8882243a825", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-06-09T09:53:58Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.Ben12345rocks.VotingPlugin.Config.Config.getInstance().getDisableAutoCreateVoteSites())) { com.Ben12345rocks.VotingPlugin.Events.VotiferEvent.plugin.getLogger().warning(((\"VoteSite \" + voteSiteName) + \" doe not exist, generaterating one...\")); com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getInstance().generateVoteSite(voteSiteName); com.Ben12345rocks.VotingPlugin.Config.ConfigVoteSites.getInstance().setServiceSite(voteSiteName, voteSiteURL); return; }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6435/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Events.VotiferEvent.java", "BodyUseAPI": [], "Fixed commit": "08a8b7244590ad21b14c6d82010dd31a5e5dc4f8", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-05-31T19:42:53Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event != (Snackbar.Callback.DISMISS_EVENT_CONSECUTIVE)) { updateWholeList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3433/buggy-version/app.src.main.java.com.example.andrew.prokhor.eyecare.ui.adapters.ExpandableCursorRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "615327ef467e95b2bc58af2cd97a89a18cf1bd62", "Url": "https://api.github.com/repos/prokhor-andrew/EyeCareVer2", "Date": "2016-02-12T11:52:47Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newPosition != (this.endBonePosition)) { this.endBonePosition = newPosition; for (cgresearch.studentprojects.posegen.datastructure.Bone bone : childbonesAtEnd) { bone.moveBoneStartToPosition(newPosition); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8742/buggy-version/apps.src.main.java.cgresearch.studentprojects.posegen.datastructure.Bone.java", "BodyUseAPI": ["cgresearch.studentprojects.posegen.datastructure.Bone.moveBoneStartToPosition(cgresearch.core.math.Vector)"], "Fixed commit": "154f0679022bedda8b44a7ca11626107f7d833fc", "Url": "https://api.github.com/repos/cschirin/computergraphics", "Date": "2016-06-17T17:38:27Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gradientHistory.getSecondHiddenLayer()) != null) { update(gradients.getSecondHiddenLayer(), gradientHistory.getSecondHiddenLayer(), ((gradientHistoryVariance) == null ? null : gradientHistoryVariance.getSecondHiddenLayer()), EmbeddingTypes.SECONDHIDDENLAYER); update(gradients.getSecondHiddenLayerBias(), gradientHistory.getSecondHiddenLayerBias(), ((gradientHistoryVariance) == null ? null : gradientHistoryVariance.getSecondHiddenLayerBias()), EmbeddingTypes.SECONDHIDDENLAYERBIAS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5747/buggy-version/src.edu.columbia.cs.nlp.YaraParser.Learning.Updater.Updater.java", "BodyUseAPI": ["edu.columbia.cs.nlp.YaraParser.Learning.Updater.Updater.update(gradients.getSecondHiddenLayerBias(),gradientHistory.getSecondHiddenLayerBias(),((gradientHistoryVariance) == null ? null : gradientHistoryVariance.getSecondHiddenLayerBias()),EmbeddingTypes.SECONDHIDDENLAYERBIAS)", "edu.columbia.cs.nlp.YaraParser.Learning.Updater.Updater.update(gradients.getSecondHiddenLayer(),gradientHistory.getSecondHiddenLayer(),((gradientHistoryVariance) == null ? null : gradientHistoryVariance.getSecondHiddenLayer()),EmbeddingTypes.SECONDHIDDENLAYER)", "edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.NetworkMatrices.getSecondHiddenLayer()", "edu.columbia.cs.nlp.YaraParser.Learning.NeuralNetwork.NetworkMatrices.getSecondHiddenLayerBias()"], "Fixed commit": "0c302b78c009931554eea87731f97be9271fda02", "Url": "https://api.github.com/repos/rasoolims/Cura-Parser", "Date": "2016-08-18T00:55:24Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (className.equals(DOUBLE)) { return this.f.createLiteral(java.lang.Double.parseDouble(value)); }else if (className.equals(DATE)) { return this.f.createLiteral(com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl.parse(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3459/buggy-version/src.wwwc.nees.joint.module.kao.UpdateOperations.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "06aa3c460a82d558a41d1dc3297f3066fbb16698", "Url": "https://api.github.com/repos/nees-ufal/JOINT", "Date": "2015-08-31T21:28:19Z"},
{"Line": "=>2313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subNodeList.getLength()) > 0) { node = subNodeList.item(0); if ((node) != null) { secondSubNodeList = node.getChildNodes(); for (int t = 0; (secondSubNodeList.getLength()) > 0; t++) { at.rhomberg.fileformats.AntonymSynonymPair pair = new at.rhomberg.fileformats.AntonymSynonymPair(); java.lang.Byte translationCount = 0; if ((secondSubNodeList.item(t).getNodeName()) == \"pair\") { if ((secondSubNodeList.getLength()) > 0) { secondNode = secondSubNodeList.item(0); if ((secondNode) != null) { for (int f = 0; (secondSubNodeList.getLength()) > 0; f++) { if ((secondSubNodeList.item(f).getNodeName()) == \"entry\") { if ((secondSubNodeList.getLength()) > 0) { secondNode = secondSubNodeList.item(0); if ((secondNode) != null) { if ((secondNode.getNodeType()) == (org.w3c.dom.Node.ELEMENT_NODE)) { subElement = ((org.w3c.dom.Element) (secondNode)); if (translationCount == 0) { pair.first.entryId = java.lang.Integer.parseInt(secondNode.getTextContent()); }else { pair.second.entryId = java.lang.Integer.parseInt(secondNode.getTextContent()); } secondSubNodeList = subElement.getElementsByTagName(\"translation\"); if ((secondSubNodeList.getLength()) > 0) { secondNode = secondSubNodeList.item(0); if ((secondNode) != null) { try { if (translationCount == 0) { pair.first.translationId = java.lang.Integer.parseInt(secondNode.getTextContent()); translationCount++; }else { pair.second.translationId = java.lang.Integer.parseInt(secondNode.getTextContent()); translation.synonymPair.add(pair); continue; } } catch (java.lang.Exception e) { (error)++; } } } } } }else { (error)++; } } } } }else { (error)++; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6875/buggy-version/src.at.rhomberg.parser.KVTML2Parser.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)"], "Fixed commit": "97bb10f6904faf08cc817a9170a9c6b1e42a2634", "Url": "https://api.github.com/repos/hrsFire/ParleyDrone", "Date": "2013-08-22T19:40:46Z"},
{"Line": "=>2260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secondNode) != null) { if ((secondNode.getNodeType()) == (org.w3c.dom.Node.ELEMENT_NODE)) { subElement = ((org.w3c.dom.Element) (secondNode)); if (translationCount == 0) { pair.first.entryId = java.lang.Integer.parseInt(secondNode.getTextContent()); }else { pair.second.entryId = java.lang.Integer.parseInt(secondNode.getTextContent()); } secondSubNodeList = subElement.getElementsByTagName(\"translation\"); if ((secondSubNodeList.getLength()) > 0) { secondNode = secondSubNodeList.item(0); if ((secondNode) != null) { try { if (translationCount == 0) { pair.first.translationId = java.lang.Integer.parseInt(secondNode.getTextContent()); translationCount++; }else { pair.second.translationId = java.lang.Integer.parseInt(secondNode.getTextContent()); translation.antonymPair.add(pair); continue; } } catch (java.lang.Exception e) { (error)++; } } } } }else { (error)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6875/buggy-version/src.at.rhomberg.parser.KVTML2Parser.java", "BodyUseAPI": [], "Fixed commit": "97bb10f6904faf08cc817a9170a9c6b1e42a2634", "Url": "https://api.github.com/repos/hrsFire/ParleyDrone", "Date": "2013-08-22T19:40:46Z"},
{"Line": "=>2463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((secondSubNodeList.item(i).getNodeName()) == \"deactivated\") { if ((secondSubNodeList.getLength()) > 0) { node = secondSubNodeList.item(0); if ((node) != null) { result = node.getTextContent(); if (((result) == \"true\") || ((result) == \"1\")) entry.deactivated = true; } } }else if ((secondSubNodeList.item(i).getNodeName()) == \"sizehint\") { if ((secondSubNodeList.getLength()) > 0) { node = secondSubNodeList.item(0); if ((node) != null) { try { entry.sizeHint = java.lang.Integer.parseInt(node.getTextContent()); } catch (java.lang.Exception e) { (error)++; } } } }else { (error)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6875/buggy-version/src.at.rhomberg.parser.KVTML2Parser.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)", "org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getNodeName()", "org.w3c.dom.NodeList.getLength()", "org.w3c.dom.NodeList.getLength()", "org.w3c.dom.NodeList.item(int)"], "Fixed commit": "97bb10f6904faf08cc817a9170a9c6b1e42a2634", "Url": "https://api.github.com/repos/hrsFire/ParleyDrone", "Date": "2013-08-22T19:40:46Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.core.issue.db.IssueDto.getLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (previousLine == null) { logger.debug(\"Cannot relocate issue at resource level\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5771/buggy-version/plugins.sonar-core-plugin.src.main.java.org.sonar.plugins.core.issue.IssueTrackingDecorator.java", "BodyUseAPI": [], "Fixed commit": "380cc85fb48da2fc81b5aca00475969d616770cf", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-09-20T07:37:53Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((text) == null) && ((exception) == null)) throw new railo.runtime.exp.ApplicationException(\"Wrong Context, you must define one of the following attributes [text, exception]\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6208/buggy-version/railo-java.railo-core.src.railo.runtime.tag.Log.java", "BodyUseAPI": [], "Fixed commit": "84a5248194ec11809f04263e04a17567a37f93d8", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-12-23T13:17:40Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.orm.hibernate.CommonUtil.createRefBoolean()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isArray.toBooleanValue()) { if (obj instanceof java.lang.Object[]) query.setParameterList(name, ((java.lang.Object[]) (obj)), type); else if (obj instanceof java.util.List) query.setParameterList(name, ((java.util.List) (obj)), type); else query.setParameterList(name, railo.runtime.op.Caster.toList(obj), type); }else query.setParameter(name, obj, type);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6208/buggy-version/railo-java.railo-core.src.railo.runtime.orm.hibernate.HibernateORMSession.java", "BodyUseAPI": [], "Fixed commit": "84a5248194ec11809f04263e04a17567a37f93d8", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-12-23T13:17:40Z"},
{"Line": "=>1127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.isSubClass()) { insertRegion.add(\"\\t\\t\\tsuper(beanToCopy);\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5441/buggy-version/src.main.java.org.joda.beans.gen.BeanGen.java", "BodyUseAPI": [], "Fixed commit": "3f68466224a442760d3bc3f0baff7ed128cca748", "Url": "https://api.github.com/repos/worldticket/joda-beans", "Date": "2017-03-10T09:29:31Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkinsServerName == null) { jenkinsServerName = rc.getJenkinsServerName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8975/buggy-version/src.main.java.com.palantir.stash.stashbot.servlet.RepoConfigurationServlet.java", "BodyUseAPI": [], "Fixed commit": "3dc153349bf3a9da280b1e43886526417100b804", "Url": "https://api.github.com/repos/terabyte/stashbot", "Date": "2015-11-18T22:02:56Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getBody()) != null) { java.lang.String[] sMessage = message.getBody().split(\" \"); if ((sMessage[0].equals(\"HELLO\")) && (sMessage[1].equals(this.nickname))) { this.clientID = sMessage[2]; this.connectionStatus = net.hermeto.android.main.ConnectionController.Status.CONNECTED; android.util.Log.d(\"XMPP\", \"Connected\"); } }else { android.util.Log.d(\"XMPP\", \"Null Body\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6751/buggy-version/AndroidClientApp.main.src.net.hermeto.android.main.ConnectionController.java", "BodyUseAPI": ["org.jivesoftware.smack.packet.Message.getBody()", "message.getBody().split(java.lang.String)"], "Fixed commit": "075030fe4e5c4091e202830b898ecb1ea42bf024", "Url": "https://api.github.com/repos/thiagoalz/Hermeto", "Date": "2011-08-22T03:12:22Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(((e1.getY()) - (e2.getY())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((velocityY > (this.swipe_Min_Velocity)) && (yDistance > (this.swipe_Min_Distance))) { if ((getCurrentFragment()) instanceof ca.mixitmedia.ghostcatcher.app.LocationMap) { if (((e1.getY()) < gestureAreaTop) || ((e1.getY()) > gestureAreaBottom)) { if ((e1.getY()) > (e2.getY())) { if ((toolHolderShown) && (!(ca.mixitmedia.ghostcatcher.app.MainActivity.transitionInProgress))) toggleToolMenu(); }else { if ((!(toolHolderShown)) && (!(ca.mixitmedia.ghostcatcher.app.MainActivity.transitionInProgress))) toggleToolMenu(); } } }else if ((e1.getY()) > (e2.getY())) { if ((toolHolderShown) && (!(ca.mixitmedia.ghostcatcher.app.MainActivity.transitionInProgress))) toggleToolMenu(); }else { if ((!(toolHolderShown)) && (!(ca.mixitmedia.ghostcatcher.app.MainActivity.transitionInProgress))) toggleToolMenu(); } result = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8562/buggy-version/app.src.main.java.ca.mixitmedia.ghostcatcher.app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "31419d6cff1be7946638321f4a55b5f99dc02236", "Url": "https://api.github.com/repos/MHDante/ghostCatcherAndroid", "Date": "2014-06-21T19:06:34Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (itemMeta.hasDisplayName()) { if (itemMeta.getDisplayName().contains(\"<codename>\")) { java.lang.String codeName = bensku.plugin.ItemAPI.util.TagTool.getTag(\"codename\", itemMeta.getDisplayName()); java.lang.String className = bensku.plugin.ItemAPI.main.GetItemInfo.getClassName(bensku.plugin.ItemAPI.util.HideTool.unhideString(codeName)); if (((event.getAction()) == (org.bukkit.event.block.Action.LEFT_CLICK_AIR)) || ((event.getAction()) == (org.bukkit.event.block.Action.LEFT_CLICK_BLOCK))) { bensku.plugin.ItemAPI.event.PlayerEvents.onRightClick(className, event); } if (((event.getAction()) == (org.bukkit.event.block.Action.RIGHT_CLICK_AIR)) || ((event.getAction()) == (org.bukkit.event.block.Action.LEFT_CLICK_BLOCK))) { bensku.plugin.ItemAPI.event.PlayerEvents.onLeftClick(className, event); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/655/buggy-version/src.bensku.plugin.ItemAPI.listener.PlayerListener.java", "BodyUseAPI": ["bensku.plugin.ItemAPI.util.TagTool.getTag(java.lang.String,itemMeta.getDisplayName())", "itemMeta.getDisplayName().contains(java.lang.String)", "org.bukkit.inventory.meta.ItemMeta.getDisplayName()", "org.bukkit.inventory.meta.ItemMeta.getDisplayName()"], "Fixed commit": "ab76e7534bf2a5d61aae2966ca8d683f7db93370", "Url": "https://api.github.com/repos/bensku/ItemAPI", "Date": "2013-10-02T13:16:07Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(objectHistory.contains(objectInstance))) { objectHistory.add(objectInstance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3498/buggy-version/src.ist.meic.pa.Inspector.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Object>.add(java.lang.Object)"], "Fixed commit": "70b845a2bbd0310d148fe35ee3bd1fb7d56854cc", "Url": "https://api.github.com/repos/PMiraLopes/ProgramacaoAvancada", "Date": "2014-03-26T02:05:50Z"},
{"Line": "=>1252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (typeFact().isOptionalType(type)) { type = type.minus(typeFact().getNothingDeclaration()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7235/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.typechecker.model.ProducedType.minus(typeFact().getNothingDeclaration())"], "Fixed commit": "23f81d681b03e8ba7b0a69c77fe5b09a7b8a46a4", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2012-04-18T10:55:45Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cache.hasFile(fileID, collectionID)) { verifyFileToCacheConsistencyIfRequired(fileID, collectionID); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/178/buggy-version/bitrepository-reference-pillar.src.main.java.org.bitrepository.pillar.store.StorageModel.java", "BodyUseAPI": ["org.bitrepository.pillar.store.StorageModel.verifyFileToCacheConsistencyIfRequired(java.lang.String,java.lang.String)"], "Fixed commit": "a8cf17830ddbc4aa4622e900f708d97614574031", "Url": "https://api.github.com/repos/bitrepository/reference", "Date": "2014-11-21T12:15:29Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((ardData) != null) com.lge.warehouse.manager.ArduinoConnector.logger.debug((\"data :\" + (ardData)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3012/buggy-version/src.com.lge.warehouse.manager.ArduinoConnector.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "bb7d1772174b93e47b3433b83eddec6b0c71ac81", "Url": "https://api.github.com/repos/entheme/cmu2014-warehouse", "Date": "2014-06-25T17:22:32Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeSet<java.lang.Long>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(iter.hasNext())) { result.add(com.google.common.collect.Range.closed(rangeStart, rangeEnd)); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4871/buggy-version/seep-system.src.main.java.uk.ac.imperial.lsds.seep.runtimeengine.OutOfOrderBufferedBarrier.java", "BodyUseAPI": [], "Fixed commit": "723f37f3ac6c76b02b13fcdd57370f5ca6a201c4", "Url": "https://api.github.com/repos/lsds/SEEP", "Date": "2015-08-05T10:24:15Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["text.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(newTitle.matches(\"[a-zA-Z0-9 ]+\"))) { text.setError(getString(R.string.invalid_title)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6037/buggy-version/Mobile.src.main.java.com.ericfabreu.wearflashcards.activities.EditSetTitleActivity.java", "BodyUseAPI": [], "Fixed commit": "72b99f35acc9abf801258ee5c7f131fab1ef4b03", "Url": "https://api.github.com/repos/ericfabreu/WearFlashcards", "Date": "2016-06-22T21:24:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (canSerialize) { serializeAnnotations(result.getAnnotations()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4914/buggy-version/src.main.java.hudson.plugins.brakeman.BrakemanResult.java", "BodyUseAPI": [], "Fixed commit": "6f35e475b9bb2c1747b242ae4fa60ae861c629d4", "Url": "https://api.github.com/repos/ConstantineXVI/brakeman-plugin", "Date": "2016-07-01T15:43:16Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.baiiu.tsnackbar.LUtils.instance) != null) { com.baiiu.tsnackbar.LUtils.instance.mActivity = null; com.baiiu.tsnackbar.LUtils.instance = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4902/buggy-version/tsnackbar.src.main.java.com.baiiu.tsnackbar.LUtils.java", "BodyUseAPI": [], "Fixed commit": "ebc6688dc8a4e23148e9d0c8dc236e64f0a220ab", "Url": "https://api.github.com/repos/baiiu/TSnackbar", "Date": "2016-04-13T03:01:51Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.rootNode) == null) { util.Log.error(\"You tried to prune on an empty body!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1587/buggy-version/boogieamp.src.boogie.controlflow.CfgProcedure.java", "BodyUseAPI": [], "Fixed commit": "2591bae601c81f21a1c4a7dc4f1fffd105a0f86f", "Url": "https://api.github.com/repos/martinschaef/boogieamp", "Date": "2014-06-04T02:42:25Z"},
{"Line": "=>1013", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (activeComputeNodeNum != null) { param.put(JobConstants.ACTIVE_COMPUTE_NODE_NUMBER_JOB_PARAM, new org.springframework.batch.core.JobParameter(java.lang.Long.valueOf(activeComputeNodeNum))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2780/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.ClusterManager.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.Integer)", "java.util.Map<java.lang.String, org.springframework.batch.core.JobParameter>.put(JobConstants.ACTIVE_COMPUTE_NODE_NUMBER_JOB_PARAM,org.springframework.batch.core.JobParameter)"], "Fixed commit": "a6f2300430f56936b2502cc8d2334ff2706921f7", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-11-19T02:05:44Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["freedays.domain.Request.findAllPendingSuperApprovalsByUsername(this.userContextService.getCurrentUser())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (findAllPendingSuperApprovalsByUsername != null) { requests = processRequest(findAllPendingSuperApprovalsByUsername); }else { requests = java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4608/buggy-version/Sts.freeday.src.main.java.freedays.controller.RequestController.java", "BodyUseAPI": ["freedays.controller.RequestController.processRequest(java.util.List<freedays.domain.Request>)"], "Fixed commit": "da53fd47a8588134d121a5757dab8158148133ec", "Url": "https://api.github.com/repos/fmacicasan/FreeDaysIntern", "Date": "2013-01-04T15:14:47Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.axiom.om.OMElement.getAttributeValue(javax.xml.namespace.QName)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (client.isExistingSequence(fileName, MultitenantConstants.SUPER_TENANT_DOMAIN_NAME)) { client.deleteSequence(fileName, MultitenantConstants.SUPER_TENANT_DOMAIN_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8516/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIGatewayManager.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.impl.utils.APIGatewayAdminClient.deleteSequence(java.lang.String,MultitenantConstants.SUPER_TENANT_DOMAIN_NAME)"], "Fixed commit": "73c76719588b36c5ce46399df1c4e6eaecdb483b", "Url": "https://api.github.com/repos/dewmini/carbon-apimgt", "Date": "2016-12-08T10:18:11Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.axiom.om.OMElement.getAttributeValue(javax.xml.namespace.QName)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (client.isExistingSequence(fileName, MultitenantConstants.SUPER_TENANT_DOMAIN_NAME)) { client.deleteSequence(fileName, MultitenantConstants.SUPER_TENANT_DOMAIN_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8516/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIGatewayManager.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.impl.utils.APIGatewayAdminClient.deleteSequence(java.lang.String,MultitenantConstants.SUPER_TENANT_DOMAIN_NAME)"], "Fixed commit": "73c76719588b36c5ce46399df1c4e6eaecdb483b", "Url": "https://api.github.com/repos/dewmini/carbon-apimgt", "Date": "2016-12-08T10:18:11Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((village.getVillager().get(name)) == null) { continue; }else { return village.getVillager().get(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5120/buggy-version/src.ue7.World.java", "BodyUseAPI": ["ue7.Village.getVillager()", "village.getVillager().get(java.lang.String)"], "Fixed commit": "7aa2f953d55117576ee04b86d4039820e502ecd2", "Url": "https://api.github.com/repos/pjmk/pg2kernkraft", "Date": "2016-05-24T15:29:00Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (response.indicatesSuccess()) { this.error = null; }else { com.thetransactioncompany.jsonrpc2.JSONRPC2Error error = response.getError(); this.error = new fi.vtt.nubomedia.jsonrpcwsandroid.JsonRpcResponseError(error.getCode(), error.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3731/buggy-version/jsonrpc-ws-android.src.main.java.fi.vtt.nubomedia.jsonrpcwsandroid.JsonRpcResponse.java", "BodyUseAPI": [], "Fixed commit": "b9c7f1ef88180878cdc345b5d087cfd6115f7d8c", "Url": "https://api.github.com/repos/nubomedia-vtt/jsonrpc-ws-android", "Date": "2016-01-05T13:45:38Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (splitPos == (-1)) { java.lang.System.err.println(\"ID_POS ATTRIBUTE WAS NOT FOUND! PLEASE GIVE ME SUCH!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5889/buggy-version/src.proteinprediction.io.FastaWriter.java", "BodyUseAPI": [], "Fixed commit": "b5dde292d46586ec31aed5e278fe852d2a6abaf4", "Url": "https://api.github.com/repos/quant42/ProteinPrediction", "Date": "2013-06-03T19:24:30Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mg.getShouldSwitchState()) { renderedScore = java.lang.Integer.toString(mg.getScore()); }else { renderedScore = java.lang.Integer.toString(((mg.getScore()) + (score))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4718/buggy-version/src.main.java.gui.GameState.java", "BodyUseAPI": ["java.lang.Integer.toString(mg.getScore())", "java.lang.Integer.toString(((mg.getScore()) + (score)))", "gui.MainGame.getScore()", "gui.MainGame.getScore()"], "Fixed commit": "151c7a074bc33a255dfa80084d9dd54be13b1734", "Url": "https://api.github.com/repos/geenen124/Team1BubbleTrouble", "Date": "2015-09-16T20:57:06Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(ssid)) ssid = getString(R.string.title_all);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8604/buggy-version/app.src.main.java.eu.faircode.netguard.ActivitySettings.java", "BodyUseAPI": [], "Fixed commit": "92b60f9a08e55db10052b754c7d77ab0491dd44d", "Url": "https://api.github.com/repos/M66B/NetGuard", "Date": "2015-12-09T07:11:20Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(ssid)) ssid = getString(R.string.title_all);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8604/buggy-version/app.src.main.java.eu.faircode.netguard.ActivitySettings.java", "BodyUseAPI": [], "Fixed commit": "92b60f9a08e55db10052b754c7d77ab0491dd44d", "Url": "https://api.github.com/repos/M66B/NetGuard", "Date": "2015-12-09T07:11:20Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cycleIndex) > 30) nextLevel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2346/buggy-version/core.src.com.liunoble.pacman.Gameplay.GameplayScreen.java", "BodyUseAPI": [], "Fixed commit": "bb07c9a8775f8c9c6241d95ab7b3f673f57d4c13", "Url": "https://api.github.com/repos/MangoTux/PacmanCprE388", "Date": "2015-12-11T03:52:12Z"},
{"Line": "=>702", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (siren.isPlaying()) siren.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2346/buggy-version/core.src.com.liunoble.pacman.Gameplay.GameplayScreen.java", "BodyUseAPI": ["com.badlogic.gdx.audio.Music.stop()"], "Fixed commit": "bb07c9a8775f8c9c6241d95ab7b3f673f57d4c13", "Url": "https://api.github.com/repos/MangoTux/PacmanCprE388", "Date": "2015-12-11T03:52:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(io.github.oxguy3.craftboot.LolnetLauncherboot.dataDir.exists())) || (!(launcherDir.exists()))) { io.github.oxguy3.craftboot.LolnetLauncherboot.dataDir.mkdirs(); launcherDir.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8956/buggy-version/src.io.github.oxguy3.craftboot.LolnetLauncherboot.java", "BodyUseAPI": ["java.io.File.mkdir()", "java.io.File.mkdirs()"], "Fixed commit": "221a153ec0929c2185e013d11667d62213c7f8ba", "Url": "https://api.github.com/repos/James137137/LolnetLauncherBoot", "Date": "2015-02-14T02:51:40Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication().isAuthenticated()) { return new org.springframework.web.servlet.ModelAndView(\"redirect:/wall\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5525/buggy-version/src.main.java.com.scncm.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "ab18bc24a2241c49a0803dd4eab00f619d465086", "Url": "https://api.github.com/repos/rusubogdan/scienceMe", "Date": "2015-04-05T19:10:27Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a.equals(b)) { return a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1459/buggy-version/slib-sml.src.main.java.slib.sml.sm.core.metrics.ic.utils.IcUtils.java", "BodyUseAPI": [], "Fixed commit": "75582a8663fa51a572d83366513051a201b6d8f6", "Url": "https://api.github.com/repos/sharispe/slib", "Date": "2013-02-01T18:28:35Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener != null) { set.addListener(listener); android.util.Log.d(\"NoteView\", \"There's listener\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4084/buggy-version/app.src.main.java.com.wishcan.www.vocabulazy.widget.NoteView.java", "BodyUseAPI": ["android.animation.AnimatorSet.addListener(Animator.AnimatorListener)"], "Fixed commit": "e233f82ebde56904b32a34f59ce8e96812a23efb", "Url": "https://api.github.com/repos/allencheng07/VocabuLazy-Android", "Date": "2016-03-13T14:01:27Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((textLatitude) != \"\") && ((textLongitude) != \"\")) { pizzeriaLocation = new com.google.android.gms.maps.model.LatLng(java.lang.Double.parseDouble(textLatitude), java.lang.Double.parseDouble(textLongitude)); addPizzeriaOnMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1657/buggy-version/app.src.main.java.com.example.gek.pizza.activities.AboutActivity.java", "BodyUseAPI": [], "Fixed commit": "1c5a00faae72b3591aa37f0e259dc2d899430c81", "Url": "https://api.github.com/repos/zhdanov-ek/pizza", "Date": "2017-01-30T16:08:56Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (lastIndex > 0) { url = url.substring(0, lastIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4702/buggy-version/webcallerlib.src.main.java.com.virorg.webcallerlib.HttpWebCall.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "cbf42f5c37294b09984feba27f27b17e4e4a7627", "Url": "https://api.github.com/repos/VirOrg/webcaller", "Date": "2017-01-10T12:44:50Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (lastIndex > 0) { url = url.substring(0, lastIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4702/buggy-version/webcallerlib.src.main.java.com.virorg.webcallerlib.HttpWebCall.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "cbf42f5c37294b09984feba27f27b17e4e4a7627", "Url": "https://api.github.com/repos/VirOrg/webcaller", "Date": "2017-01-10T12:44:50Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (containsMultipleCodePoints) { set.addAll(escapeParseResult.intervalSet); }else { prevCodePoint = codePoint; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3880/buggy-version/tool.src.org.antlr.v4.automata.LexerATNFactory.java", "BodyUseAPI": [], "Fixed commit": "d492a4123b1249db9b71a78ff8815999f64163e8", "Url": "https://api.github.com/repos/bhamiltoncx/antlr4", "Date": "2017-02-25T00:45:20Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (querqyQuery instanceof querqy.rewrite.commonrules.model.Query) { return ((querqy.rewrite.commonrules.model.QuerqyQuery<?>) (visit(((querqy.rewrite.commonrules.model.Query) (query))))); }else { return ((querqy.rewrite.commonrules.model.QuerqyQuery) (querqyQuery.accept(this))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/87/buggy-version/querqy-core.src.main.java.querqy.rewrite.commonrules.model.BoostInstruction.java", "BodyUseAPI": ["querqy.rewrite.commonrules.model.QuerqyQuery<?>.accept(querqy.rewrite.commonrules.model.BoostInstruction.CloneAndReplacePlaceHolderRewriter)"], "Fixed commit": "0782e3d74da28dd1dbefd2767f2703fd128de369", "Url": "https://api.github.com/repos/renekrie/querqy", "Date": "2016-12-15T12:22:42Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(tag.getFirstArg())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (matcher.find()) { final java.lang.String typeParamName = matcher.group(1).trim(); if (!(typeParamNames.contains(typeParamName))) { log(tag.getLineNo(), tag.getColumnNo(), com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.UNUSED_TAG, JavadocTagInfo.PARAM.getText(), (((com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.OPEN_ANGLE_BRACKET) + typeParamName) + (com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.CLOSE_ANGLE_BRACKET))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5350/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.regex.Matcher.group(int)"], "Fixed commit": "319b04ff74aaf0c08b9c417274872be47b93b346", "Url": "https://api.github.com/repos/Vladlis/checkstyle", "Date": "2015-09-12T15:20:20Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((newsList) != null) && ((newsList.size()) > 0)) { saveNewsList(newsList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1775/buggy-version/app.src.main.java.io.github.izzyleung.zhihudailypurify.task.SaveNewsListTask.java", "BodyUseAPI": ["io.github.izzyleung.zhihudailypurify.task.SaveNewsListTask.saveNewsList(java.util.List<io.github.izzyleung.zhihudailypurify.bean.DailyNews>)"], "Fixed commit": "75490c17e497fd69f495c09ee855a00025d99db3", "Url": "https://api.github.com/repos/izzyleung/ZhihuDailyPurify", "Date": "2016-04-28T05:25:01Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isDataUnchanged) { dataSource.insertOrUpdateNewsList(date, new com.google.gson.GsonBuilder().create().toJson(newsList)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1775/buggy-version/app.src.main.java.io.github.izzyleung.zhihudailypurify.task.SaveNewsListTask.java", "BodyUseAPI": [], "Fixed commit": "75490c17e497fd69f495c09ee855a00025d99db3", "Url": "https://api.github.com/repos/izzyleung/ZhihuDailyPurify", "Date": "2016-04-28T05:25:01Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mashape.unirest.http.utils.ClientFactory.getAsyncHttpClient()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(asyncHttpClient.isRunning())) { synchronized(com.mashape.unirest.http.HttpClientHelper.class) { if (!(asyncHttpClient.isRunning())) { asyncHttpClient.start(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9200/buggy-version/src.main.java.com.mashape.unirest.http.HttpClientHelper.java", "BodyUseAPI": ["org.apache.http.impl.nio.client.CloseableHttpAsyncClient.start()", "org.apache.http.impl.nio.client.CloseableHttpAsyncClient.isRunning()"], "Fixed commit": "7c7ad925ef4aeaa8f2276fce0968cc4c3012b82b", "Url": "https://api.github.com/repos/mopsene/unirest-java", "Date": "2017-05-25T06:42:52Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (a.equals(\"-nodebug\")) { noDebugMessages = true; }else { throw new java.lang.Error((\"Unknown option: \" + a)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7485/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.RunArgs.java", "BodyUseAPI": [], "Fixed commit": "7f3f6a0e4af71c338fc94a29463ac0c3924805cd", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-10-13T13:15:45Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (runArgs.isNoDebugMessages()) { de.peeeq.wurstscript.translation.imtranslation.DebugMessageRemover.removeDebugMessages(imProg); }else { if (runArgs.isIncludeStacktraces()) { new de.peeeq.wurstscript.translation.imtranslation.StackTraceInjector(imProg).transform(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7485/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstio.WurstCompilerJassImpl.java", "BodyUseAPI": ["de.peeeq.wurstscript.RunArgs.isIncludeStacktraces()"], "Fixed commit": "7f3f6a0e4af71c338fc94a29463ac0c3924805cd", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2013-10-13T13:15:45Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(command.equals(\"null\"))) { command = command.replaceAll(\"@p\", player.getName()); java.lang.System.out.println(command); CommandPortals.game.getCommandManager().process(CommandPortals.game.getServer().getConsole(), command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5071/buggy-version/src.main.java.io.github.hsyyid.commandportals.listeners.PlayerMoveListener.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,player.getName())"], "Fixed commit": "583c589e42edfcc339e8c94128453a9276d7df6c", "Url": "https://api.github.com/repos/hsyyid/CommandPortals", "Date": "2015-12-07T00:54:28Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!firstTime) { buf += \"\\r\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4173/buggy-version/src.ar.edu.it.itba.pdc.Implementations.proxy.utils.HTTPPacket.java", "BodyUseAPI": [], "Fixed commit": "8869fab8dec87d2551ebb891e3709cc994eddc02", "Url": "https://api.github.com/repos/mdesanti/TPE-Protos", "Date": "2012-05-14T23:47:44Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs701b.middshare.ServiceExchangeDetails.2.getCurrentFocus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (thisView != null) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(view.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5188/buggy-version/app.src.main.java.cs701b.middshare.ServiceExchangeDetails.java", "BodyUseAPI": [], "Fixed commit": "23c3b42f43b7fc23729c45b8244e8e3d3e3cbe07", "Url": "https://api.github.com/repos/TonyJin001/MiddShare", "Date": "2016-12-08T04:37:43Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(alluxio.Configuration.getBoolean(Constants.KEY_VALUE_ENABLED))) { java.lang.System.out.println(((\"Alluxio key value service is disabled. To run this test, please set \" + (alluxio.Constants.KEY_VALUE_ENABLED)) + \" to be true, restart the cluster\")); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2660/buggy-version/examples.src.main.java.alluxio.examples.keyvalue.KeyValueStoreOperations.java", "BodyUseAPI": [], "Fixed commit": "2a1aed9cecd264b6578a69459825f760caa31b25", "Url": "https://api.github.com/repos/xgong/alluxio", "Date": "2016-07-18T18:10:57Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nimbusds.oauth2.sdk.ParseException.getClientID()", "com.nimbusds.oauth2.sdk.ParseException.getRedirectionURI()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((clientID != null) && (redirectionURI != null)) { com.nimbusds.openid.connect.sdk.rp.OIDCClientInformation client = resolveClient(clientID); validateRedirectionURI(redirectionURI, client); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7149/buggy-version/oidc-op.src.main.java.io.github.vpavic.op.endpoint.AuthorizationEndpoint.java", "BodyUseAPI": ["io.github.vpavic.op.endpoint.AuthorizationEndpoint.validateRedirectionURI(java.net.URI,com.nimbusds.openid.connect.sdk.rp.OIDCClientInformation)", "io.github.vpavic.op.endpoint.AuthorizationEndpoint.resolveClient(com.nimbusds.oauth2.sdk.id.ClientID)"], "Fixed commit": "b82bc970a042189b3d246d2a922fd60ebf403e4d", "Url": "https://api.github.com/repos/vpavic/simple-openid-provider", "Date": "2017-08-28T12:24:56Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end < 0) { java.lang.System.out.println(\"Cursor needs to be shown behind invisible characters\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7104/buggy-version/OrcMathGUI.src.guiTeacher.components.TextBox.java", "BodyUseAPI": [], "Fixed commit": "fee1e9aff5b8b091f32f6a71721481bde8fe9a0e", "Url": "https://api.github.com/repos/blueChameleos/orcmath", "Date": "2017-06-07T19:57:35Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(restarted)) && (!(stoped))) { mHandler.removeCallbacks(startTimer); unregisterReceiver(recivere); stopService(new android.content.Intent(getBaseContext(), vz.seminar.bernard.stojanovic.walkmeter.gps_service.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5145/buggy-version/WalkMeter.src.vz.seminar.bernard.stojanovic.walkmeter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1cdaed8e0e11532b43992c98d7e276c1fe335797", "Url": "https://api.github.com/repos/WeedDominator/app_education", "Date": "2014-06-21T08:13:37Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["et.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (email.equals(at.sw_xp_02.whisper.Common.getPreferredEmail())) { android.widget.Toast.makeText(this.getActivity(), \"You cannot add yourself.\", Toast.LENGTH_LONG).show(); alertDialog.dismiss(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7043/buggy-version/InstaChatX.src.at.sw_xp_02.whisper.AddContactDialog.java", "BodyUseAPI": [], "Fixed commit": "617d97273f151517771391988f74766ac6a65d82", "Url": "https://api.github.com/repos/DusanTrkulja/sw14_xp_02", "Date": "2014-05-14T14:23:47Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((index_begin) <= (index_end)) && ((index_end) < (models.size()))) && ((index_begin) >= 0)) return ((index_end) - (index_begin)) + 1; else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7386/buggy-version/src.com.joggingnote.util.FirebaseListAdapter.java", "BodyUseAPI": [], "Fixed commit": "35968135b4d66e071a84d3a69adf5c0a2d9cf30d", "Url": "https://api.github.com/repos/waterwoodsthu/Jogging-Notebook", "Date": "2014-11-03T17:02:04Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((index_begin) <= (index_end)) && ((index_end) < (models.size()))) && ((index_begin) >= 0)) return models.get(((index_end) - i)); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7386/buggy-version/src.com.joggingnote.util.FirebaseListAdapter.java", "BodyUseAPI": ["java.util.List<T>.get(int)"], "Fixed commit": "35968135b4d66e071a84d3a69adf5c0a2d9cf30d", "Url": "https://api.github.com/repos/waterwoodsthu/Jogging-Notebook", "Date": "2014-11-03T17:02:04Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((index_begin) <= (index_end)) && ((index_end) < (models.size()))) && ((index_begin) >= 0)) return models.get(((index_end) - i)); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7386/buggy-version/src.com.joggingnote.util.JoggingRecordListAdapter.java", "BodyUseAPI": ["com.joggingnote.util.JoggingRecordListAdapter.get(((index_end) - i))"], "Fixed commit": "35968135b4d66e071a84d3a69adf5c0a2d9cf30d", "Url": "https://api.github.com/repos/waterwoodsthu/Jogging-Notebook", "Date": "2014-11-03T17:02:04Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tmpParam == null) { throw new java.lang.RuntimeException((\"Parameters are not Defined Correctly, missing parameter ordinal - \" + i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7971/buggy-version/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.description.query.ExpressionQuery.java", "BodyUseAPI": [], "Fixed commit": "b8ffd87b602d406fdc6fbf7cc1ec467205ec4a61", "Url": "https://api.github.com/repos/wso2/carbon-data", "Date": "2015-08-28T12:23:21Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["one.kii.summer.beans.utils.FieldValueTools.get(java.lang.reflect.Field,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (value == null) { map.set(field.getName(), null); }else { map.set(field.getName(), java.lang.String.valueOf(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4725/buggy-version/summer-beans.src.main.java.one.kii.summer.beans.utils.UniqueFinder.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)", "org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>.set(java.lang.String,java.lang.String)"], "Fixed commit": "6e4937ea1276d40a0ee65b4d0b27fdeb438b3e6a", "Url": "https://api.github.com/repos/SINeWang/summer", "Date": "2017-06-14T06:34:07Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position.dst(ppos)) > ((this.actor.maxMove) * 2)) { return skipTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4798/buggy-version/src.cpsc599.ai.BasicWarrior.java", "BodyUseAPI": [], "Fixed commit": "70d53c35e1eaa1cde2fc28a1a0409b0e44dfc8fc", "Url": "https://api.github.com/repos/Senney/CPSC599-RPG", "Date": "2014-04-08T23:36:09Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paperworkLeft) < 0) { paperworkLeft = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6002/buggy-version/GGJ16.src.ggj16.states.PlayState.java", "BodyUseAPI": [], "Fixed commit": "9ae19e87455e9e98a56143bef38c292f61b8be69", "Url": "https://api.github.com/repos/Bro-Pals/GGJ2016", "Date": "2016-01-31T19:28:52Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getHeaderField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (header == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8164/buggy-version/acme4j-client.src.main.java.org.shredzone.acme4j.connector.DefaultConnection.java", "BodyUseAPI": [], "Fixed commit": "31c4d6d1339f4397b2e097744f3a2df931738b34", "Url": "https://api.github.com/repos/shred/acme4j", "Date": "2016-07-27T20:52:36Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.gmail.charleszq.picorner.BuildConfig.DEBUG) android.util.Log.e(com.gmail.charleszq.picorner.offline.FlickrPhotoSetOfflineProcessor.TAG, (\"error to download and save photo: \" + (e.getMessage())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8334/buggy-version/UniversalPhotoStudio.src.com.gmail.charleszq.picorner.offline.FlickrPhotoSetOfflineProcessor.java", "BodyUseAPI": [], "Fixed commit": "c4feb1e01fa24602ba6a4d01c3b9ca933b377ff8", "Url": "https://api.github.com/repos/yuyang226/UniversalPhotoStudio", "Date": "2013-02-01T15:23:48Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (order.getProductOrderLineItemList().isEmpty()) { java.lang.System.out.println(\"List empty__________________\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/993/buggy-version/MerlionPortal.MerlionPortal-war.src.merlionportal.managedbean.oes.OrderDetailMangedBean.java", "BodyUseAPI": [], "Fixed commit": "41b63dc83325b23809b7c34bdfbb10d5901f30b9", "Url": "https://api.github.com/repos/PATHolongba0/merlionPortal", "Date": "2014-09-28T17:53:45Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(GameAudio.audioSupported)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7796/buggy-version/Source.Imports.Audio.java", "BodyUseAPI": [], "Fixed commit": "9c1f3b291d00e3badc60c212d9474357a5fcc168", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2017-01-16T01:34:47Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (searchText.getText().equals(br.ufpe.cin.reviewer.ui.rcp.search.SearchView.SEARCH_TEXT_DEFAULT_VALUE)) { searchText.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7747/buggy-version/code.br.ufpe.cin.reviewer.ui.rcp.src.br.ufpe.cin.reviewer.ui.rcp.search.SearchView.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Text.setText(java.lang.String)"], "Fixed commit": "6fb4fbdbb784eba7f4da5c69f3ebc2a6e9014def", "Url": "https://api.github.com/repos/bfsc/reviewer", "Date": "2013-05-04T17:09:07Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(quarumServerName().equals(name))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2647/buggy-version/src.main.java.org.agilewiki.jaconfig.quorum.QuorumServer.java", "BodyUseAPI": [], "Fixed commit": "8caca11b858fceeb0a60737ecf001ca2d7443247", "Url": "https://api.github.com/repos/laforge49/JAConfig", "Date": "2012-12-29T17:10:12Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) file.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5283/buggy-version/src.io.Loader.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "c2eebac8d1172dd4a0cf6951f53227804cd5fd52", "Url": "https://api.github.com/repos/Qwe1rty/Event-Planner", "Date": "2016-04-20T15:42:19Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((qLessString.replace((\"\\\\q\" + qNumber), \"\").replace(\"\\\\s\", \"\").trim().length()) < 3) { qLessString = qLessString.replace((\"\\\\q\" + qNumber), \"\"); }else { qLessString = (qLessString.replace((\"\\\\q\" + qNumber), ((\"<span class=\\\"q\" + qNumber) + \"\\\">\"))) + \"</span>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5819/buggy-version/app.app.src.main.java.model.parsers.USFMParser.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "c96f34c3992ee9fb6f32a5b4280e4c450184b9ad", "Url": "https://api.github.com/repos/unfoldingWord-dev/uw-android", "Date": "2015-10-28T05:06:55Z"},
{"Line": "=>1985", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getEquippedShield()) != null) { setACShield(); setFlatfootShield(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6452/buggy-version/src.DD.Character.CharacterSheet.CharacterSheet.java", "BodyUseAPI": [], "Fixed commit": "097c7e12793bbfcbb503de31863db2648d25d4ce", "Url": "https://api.github.com/repos/cavasquez/DD", "Date": "2013-04-08T01:52:13Z"},
{"Line": "=>1990", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getEquippedArmor()) != null) { setFlatfootArmor(); setACArmor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6452/buggy-version/src.DD.Character.CharacterSheet.CharacterSheet.java", "BodyUseAPI": [], "Fixed commit": "097c7e12793bbfcbb503de31863db2648d25d4ce", "Url": "https://api.github.com/repos/cavasquez/DD", "Date": "2013-04-08T01:52:13Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileList == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7309/buggy-version/api.src.main.java.org.openmrs.util.OpenmrsUtil.java", "BodyUseAPI": [], "Fixed commit": "386903502ad19f1cc9b70a499cdae4ffdab8b197", "Url": "https://api.github.com/repos/Breta01/openmrs-core", "Date": "2015-12-11T21:20:21Z"},
{"Line": "=>928", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fielList) != null) { for (java.io.File f : fileList) { if (f.isDirectory()) { org.openmrs.util.OpenmrsUtil.deleteDirectory(f); } boolean success = f.delete(); if (org.openmrs.util.OpenmrsUtil.log.isDebugEnabled()) { org.openmrs.util.OpenmrsUtil.log.debug((((\" deleting \" + (f.getName())) + \" : \") + (success ? \"ok\" : \"failed\"))); } if (!success) { f.deleteOnExit(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7309/buggy-version/api.src.main.java.org.openmrs.util.OpenmrsUtil.java", "BodyUseAPI": [], "Fixed commit": "386903502ad19f1cc9b70a499cdae4ffdab8b197", "Url": "https://api.github.com/repos/Breta01/openmrs-core", "Date": "2015-12-11T21:20:21Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.ICE_CREAM_SANDWICH)) { mRemoteControlClient = new android.media.RemoteControlClient(piIntent); int flags = (((android.media.RemoteControlClient.FLAG_KEY_MEDIA_PAUSE) | (android.media.RemoteControlClient.FLAG_KEY_MEDIA_PLAY)) | (android.media.RemoteControlClient.FLAG_KEY_MEDIA_NEXT)) | (android.media.RemoteControlClient.FLAG_KEY_MEDIA_PREVIOUS); mRemoteControlClient.setTransportControlFlags(flags); audioManager.registerRemoteControlClient(mRemoteControlClient); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2961/buggy-version/src.com.akshay.protocol10.asplayer.service.MediaServiceContoller.java", "BodyUseAPI": [], "Fixed commit": "c2c0cb1cfc17fa31da69a8c79dfb514d456a897d", "Url": "https://api.github.com/repos/protocol10/ASplayer", "Date": "2015-01-12T15:29:42Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.konstructs.forest.Position.withY(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((start.getY()) < (end.getY())) boxQuery(new org.konstructs.forest.Box(start, end));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1278/buggy-version/src.main.java.org.konstructs.forest.ForestPlugin.java", "BodyUseAPI": ["org.konstructs.forest.ForestPlugin.boxQuery(org.konstructs.forest.Box)"], "Fixed commit": "d52c4e7c26be435bbfe7977bf8664460bc1a57f5", "Url": "https://api.github.com/repos/konstructs/server-plugin-forest", "Date": "2016-03-21T10:39:16Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kalix.admin.core.api.biz.IUserBeanService.getUserBeanByLoginName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (userBean != null) topic = java.lang.String.format(Const.POLLING_MESSAGE_TOPIC_FORMAT, java.lang.String.valueOf(userBean.getId()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3736/buggy-version/message-parent.common-message-biz.src.main.java.com.kalix.common.message.biz.MessageBeanServiceImpl.java", "BodyUseAPI": ["com.kalix.admin.core.entities.UserBean.getId()", "java.lang.String.valueOf(userBean.getId())", "java.lang.String.format(Const.POLLING_MESSAGE_TOPIC_FORMAT,java.lang.String)"], "Fixed commit": "bcd30de286b515cd3ec7241a8ce032bdc0007a81", "Url": "https://api.github.com/repos/chenyanxu/common-parent", "Date": "2016-08-30T06:23:18Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (planarRegionsListsDeque.isEmpty()) { clearYoVariables(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7899/buggy-version/IHMCGraphics3DDescription.src.us.ihmc.graphics3DDescription.yoGraphics.YoGraphicPlanarRegionsList.java", "BodyUseAPI": [], "Fixed commit": "50cd5364f6784601e92295fc39434b37fdd2156d", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-11-29T17:55:44Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.isMember(projectId, userId))) { statement = conn.prepareStatement(\"INSERT INTO Member VALUES (?, ?)\"); statement.setString(1, projectId); statement.setString(2, userId); statement.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4170/buggy-version/src.controller.Database.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setString(int,java.lang.String)"], "Fixed commit": "bb125194472992f138e890a5837487f9120bdf7a", "Url": "https://api.github.com/repos/evnurm/project_manager_app", "Date": "2017-09-05T17:24:09Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.jdi.event.Event.location()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentLocation.lineNumber()) == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3827/buggy-version/microbat.src.main.microbat.codeanalysis.runtime.ProgramExecutor.java", "BodyUseAPI": [], "Fixed commit": "aba31a3d6ecaaf7445540a1948447804c64923a9", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2017-08-20T02:49:52Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.jdi.Location.lineNumber()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lineNumber == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3827/buggy-version/microbat.src.main.microbat.codeanalysis.runtime.ExecutionStatementCollector.java", "BodyUseAPI": [], "Fixed commit": "aba31a3d6ecaaf7445540a1948447804c64923a9", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2017-08-20T02:49:52Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((motion.getType()) == (org.ivan.simple.game.motion.MotionType.STAY)) && (prevMt == (org.ivan.simple.game.motion.MotionType.STAY))) motion = new org.ivan.simple.game.motion.Motion(org.ivan.simple.game.motion.MotionType.FALL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4523/buggy-version/SimpleAndroidApp.src.org.ivan.simple.game.level.LevelModel.java", "BodyUseAPI": [], "Fixed commit": "096f3def9ac3d32e9c0b1894d7c81d0cbfadc978", "Url": "https://api.github.com/repos/TanyaGaleyev/Panda-project", "Date": "2014-06-25T18:34:13Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.astamuse.asta4d.Configuration.getConfiguration().isCacheEnable()) { com.astamuse.asta4d.web.form.flow.base.AbstractFormFlowSnippet.RenderingTargetFieldsMap.put(form.getClass().getName(), list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1629/buggy-version/asta4d-web.src.main.java.com.astamuse.asta4d.web.form.flow.base.AbstractFormFlowSnippet.java", "BodyUseAPI": [], "Fixed commit": "71a7eeff6ad07581363467db5b6cc921f4023511", "Url": "https://api.github.com/repos/astamuse/asta4d", "Date": "2015-03-04T07:43:04Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { org.onelibrary.data.DbAdapter mDbAdapter = org.onelibrary.data.DbAdapter.getInstance(getActivity()); if ((result != null) && ((result.size()) > 0)) { size = result.size(); for (org.onelibrary.data.MessageItem item : result) { if (mDbAdapter.messageIsExist(item)) { size--; }else { long id = messageDataManager.addMessage(item); item.setId(id); adapter.insert(item, 0); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5479/buggy-version/OneLibrary.app.src.main.java.org.onelibrary.SwipeRefreshListFragmentFragment.java", "BodyUseAPI": [], "Fixed commit": "af8bcdf85dfcf44bd6c5e86199d21771c2b43655", "Url": "https://api.github.com/repos/zhangqiqian/android-onelibrary", "Date": "2016-04-13T16:17:25Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.SwingUtilities.getWindowAncestor(getDefaultCDockable().getContentPane())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (w != null) { w.setVisible(true); w.toFront(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/827/buggy-version/src.main.java.com.inqwell.any.client.dock.AnyCDockable.java", "BodyUseAPI": ["java.awt.Window.setVisible(boolean)", "java.awt.Window.toFront()"], "Fixed commit": "77aa8d44a6497554f27f7270f908dbde91ff2680", "Url": "https://api.github.com/repos/inqwell/inq", "Date": "2017-02-13T19:48:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((projectDao.getProject(id).getUsersRelatedProject()) != null) models.put(\"user\", projectDao.getProject(id).getUsersRelatedProject());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/854/buggy-version/src.main.java.spiderhub.web.controller.ProjectController.java", "BodyUseAPI": ["spiderhub.model.dao.ProjectDao.getProject(java.lang.Integer)", "org.springframework.ui.ModelMap.put(java.lang.String,projectDao.getProject(id).getUsersRelatedProject())", "projectDao.getProject(id).getUsersRelatedProject()"], "Fixed commit": "9e79b1077209de7ac8c848b9ea0c6a52ed351252", "Url": "https://api.github.com/repos/jsoni2/SpiderHub", "Date": "2016-11-18T23:56:16Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((planeDims.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/766/buggy-version/core.legacy.src.main.java.imagej.legacy.translate.MergedRgbVirtualStack.java", "BodyUseAPI": [], "Fixed commit": "b53f212c21f330bdfcd048a014937232bece4f23", "Url": "https://api.github.com/repos/imagej/imagej", "Date": "2013-05-21T15:11:35Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((audioEngine) != null) { this.stopAudioEngine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2929/buggy-version/app.src.main.java.com.example.ellioc.hearhere.SynthFragment.java", "BodyUseAPI": [], "Fixed commit": "0200b0af411b4b1a653b67bdbf34fa9468912aa7", "Url": "https://api.github.com/repos/EllingtonKirby/HearHere", "Date": "2016-09-24T01:43:23Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (line.substring(0, 3).equals(\"err\")) { error(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7877/buggy-version/app.src.main.java.fry.oldschool.utils.MySQL.java", "BodyUseAPI": ["fry.oldschool.utils.MySQL.error(java.lang.String)"], "Fixed commit": "106c1989889efcb47e08d78c9c6b7ce7327abcef", "Url": "https://api.github.com/repos/pichlerAT/androidapp", "Date": "2016-05-19T17:23:31Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["EntityManager.PurchaseOrder.getSupplierLink()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (oldSupplier != null) { java.util.List<EntityManager.PurchaseOrder> oldSupplierPOs = oldSupplier.getPurchaseOrders(); oldSupplierPOs.remove(po); em.merge(oldSupplier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3595/buggy-version/Phuture-ejb.src.java.OrderManagement.PurchaseOrderManagementBean.java", "BodyUseAPI": ["javax.persistence.EntityManager.merge(EntityManager.Supplier)", "EntityManager.Supplier.getPurchaseOrders()"], "Fixed commit": "008ceac0bd1dce7073ddbba45ec60972c1f1f980", "Url": "https://api.github.com/repos/phuture-cloud/secret-octo-ninja", "Date": "2015-09-22T13:32:58Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nodomain.volkerk.SimpleTIFFlib.ImageFileDirectory.imgWidth()", "org.nodomain.volkerk.SimpleTIFFlib.ImageFileDirectory.imgLen()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((dot[0]) < 0) || ((dot[0]) >= w)) || ((dot[1]) < 0)) || ((dot[1]) >= h)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4211/buggy-version/src.org.nodomain.volkerk.PinkDotRemover.PinkDotRemover.java", "BodyUseAPI": [], "Fixed commit": "769e125245843d9ad38196926bb4b6ea49091653", "Url": "https://api.github.com/repos/mixer2/PinkDotRemover", "Date": "2013-07-14T23:52:07Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pal_class.isAssignableFrom(ca.uqac.lif.cep.Palette.class)) { interp.load(((java.lang.Class<? extends ca.uqac.lif.cep.Palette>) (pal_class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2301/buggy-version/Core.src.ca.uqac.lif.cep.interpreter.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "bbad7a73af1f25f6360a749c930eefa7891e8140", "Url": "https://api.github.com/repos/liflab/beepbeep-3", "Date": "2016-10-31T18:00:03Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s1.equalsIgnoreCase(RuleType.Loadshared.getType())) { ruleType = org.mobicents.protocols.ss7.sccp.RuleType.Loadshared; }else if (s1.equals(\"broadcast\")) { ruleType = org.mobicents.protocols.ss7.sccp.RuleType.Broadcast; }else { return SccpOAMMessage.INVALID_COMMAND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8410/buggy-version/sccp.sccp-impl.src.main.java.org.mobicents.protocols.ss7.sccp.impl.oam.SccpExecutor.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "99e4f0afad0e431f4a0cf1210fc0e1a72527bb1e", "Url": "https://api.github.com/repos/Mobicents/jss7", "Date": "2013-05-06T10:09:47Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s1.equals(\"loadshared\")) { ruleType = org.mobicents.protocols.ss7.sccp.RuleType.Loadshared; }else if (s1.equals(\"broadcast\")) { ruleType = org.mobicents.protocols.ss7.sccp.RuleType.Broadcast; }else { return SccpOAMMessage.INVALID_COMMAND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8410/buggy-version/sccp.sccp-impl.src.main.java.org.mobicents.protocols.ss7.sccp.impl.oam.SccpExecutor.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "99e4f0afad0e431f4a0cf1210fc0e1a72527bb1e", "Url": "https://api.github.com/repos/Mobicents/jss7", "Date": "2013-05-06T10:09:47Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((totalLines) == 0) && ((totalChars) == 0)) { java.lang.System.out.println(((\"\\t\" + module) + \" is empty.\")); }else { java.lang.System.out.println(((((((((((\"\\tTotal for \" + module) + \":\") + (LineCount.repeat(' ', (19 - (module.length()))))) + \"\\t\") + (totalLines)) + \" lines\\t\") + (totalChars)) + \" chars\\t\") + (((10 * (totalChars)) / (totalLines)) / 10.0)) + \" density.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7442/buggy-version/Tools.src.LineCount.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "c061ba045a37340751d5b64bab47feea833703a6", "Url": "https://api.github.com/repos/ComputationalAlchemist/dotdie", "Date": "2014-07-30T04:50:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBundle) { return name; }else { return swfs.get(0).getFileTitle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2773/buggy-version/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.treeitems.SWFList.java", "BodyUseAPI": [], "Fixed commit": "18e7b1ecf67f97b8a407f04aca8fd68608aaaf99", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2015-01-11T14:52:22Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (color != null) { path.setAttribute(\"stroke\", color.toHexRGB()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2773/buggy-version/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.exporters.shape.SVGShapeExporter.java", "BodyUseAPI": ["org.w3c.dom.Element.setAttribute(java.lang.String,color.toHexRGB())", "com.jpexs.decompiler.flash.types.RGB.toHexRGB()"], "Fixed commit": "18e7b1ecf67f97b8a407f04aca8fd68608aaaf99", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2015-01-11T14:52:22Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((masterNode) != null) { sendSignalingMessage(masterNode.getUid(), masterNode.getDeviceId(), new im.actor.core.api.ApiRejectCall()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1633/buggy-version/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.modules.calls.CallSlaveActor.java", "BodyUseAPI": [], "Fixed commit": "3796db69e8ed0012329c759e7d04889c9d3f997f", "Url": "https://api.github.com/repos/actorapp/actor-platform", "Date": "2016-02-18T09:33:24Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callVM) != null) { callVM.getState().change(CallState.ENDED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1633/buggy-version/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.modules.calls.CallSlaveActor.java", "BodyUseAPI": [], "Fixed commit": "3796db69e8ed0012329c759e7d04889c9d3f997f", "Url": "https://api.github.com/repos/actorapp/actor-platform", "Date": "2016-02-18T09:33:24Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callVM) != null) { callVM.getState().change(CallState.ENDED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1633/buggy-version/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.modules.calls.CallSlaveActor.java", "BodyUseAPI": [], "Fixed commit": "3796db69e8ed0012329c759e7d04889c9d3f997f", "Url": "https://api.github.com/repos/actorapp/actor-platform", "Date": "2016-02-18T09:33:24Z"},
{"Line": "=>880", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((path == null) || (path.isEmpty())) || (path.equals(\"/\"))) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8325/buggy-version/src.main.java.org.occiware.mart.server.servlet.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "a67337389343f0c16cf4214e8cd30071e369d511", "Url": "https://api.github.com/repos/cgourdin/MartServer", "Date": "2017-01-03T14:32:35Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!strict) { ret.append(delimBytes, 0, delimBytes.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7534/buggy-version/src.main.java.edu.upenn.library.solrplugins.CaseInsensitiveSortingTextField.java", "BodyUseAPI": [], "Fixed commit": "0fea7e0f3362b2a5484492d77e0804dd6a26f8e3", "Url": "https://api.github.com/repos/codeforkjeff/solrplugins", "Date": "2016-09-20T15:22:03Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((timestamp) instanceof org.apache.flink.streaming.api.windowing.helper.SystemTimestamp) && ((otherTSW.timestamp) instanceof org.apache.flink.streaming.api.windowing.helper.SystemTimestamp)) { return true; }else { return ((startTime) == (otherTSW.startTime)) && ((timestamp.getClass()) == (otherTSW.timestamp.getClass())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6702/buggy-version/flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.TimestampWrapper.java", "BodyUseAPI": ["org.apache.flink.streaming.api.windowing.helper.Timestamp<T>.getClass()"], "Fixed commit": "6d4220eb8f95cacd1d7c339c5b31a8a843c6b886", "Url": "https://api.github.com/repos/mbalassi/flink", "Date": "2015-04-26T11:02:59Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (config != null) { if (cacheLevelConfig.isAssignableFrom(config.getClass())) { throw new java.lang.IllegalArgumentException(((cacheLevelConfig.getSimpleName()) + \" must not be provided at CacheManager level\")); } if (factoryConfig.isAssignableFrom(config.getClass())) { org.ehcache.internal.classes.ClassInstanceProviderFactoryConfiguration<T> instanceProviderFactoryConfig = factoryConfig.cast(config); preconfiguredLoaders.putAll(instanceProviderFactoryConfig.getDefaults()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7653/buggy-version/impl.src.main.java.org.ehcache.internal.classes.ClassInstanceProvider.java", "BodyUseAPI": ["org.ehcache.spi.service.ServiceConfiguration<?>.getClass()", "java.lang.Class<? extends org.ehcache.internal.classes.ClassInstanceProviderConfiguration<T>>.isAssignableFrom(config.getClass())", "org.ehcache.spi.service.ServiceConfiguration<?>.getClass()", "java.lang.Class<? extends org.ehcache.internal.classes.ClassInstanceProviderFactoryConfiguration<T>>.cast(org.ehcache.spi.service.ServiceConfiguration<?>)", "java.lang.Class<? extends org.ehcache.internal.classes.ClassInstanceProviderFactoryConfiguration<T>>.isAssignableFrom(config.getClass())"], "Fixed commit": "54db38e088c8e41dffee6f88962cfa4990d58500", "Url": "https://api.github.com/repos/cljohnso/ehcache3", "Date": "2015-06-02T09:34:34Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config != null) { throw new java.lang.IllegalArgumentException(\"WriteBehind configuration must not be provided at CacheManager level\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7653/buggy-version/impl.src.main.java.org.ehcache.loaderwriter.writebehind.WriteBehindDecoratorLoaderWriterProviderFactory.java", "BodyUseAPI": [], "Fixed commit": "54db38e088c8e41dffee6f88962cfa4990d58500", "Url": "https://api.github.com/repos/cljohnso/ehcache3", "Date": "2015-06-02T09:34:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != schemaId) { builder = new uk.gov.gchq.gaffer.store.schema.Schema.Builder().id(schemaId).json(uk.gov.gchq.gaffer.commonutil.StreamUtil.openStreams(uk.gov.gchq.gaffer.operation.export.resultcache.handler.util.GafferResultCacheUtil.class, \"gafferResultCache/schema\")); }else { builder = new uk.gov.gchq.gaffer.store.schema.Schema.Builder().json(uk.gov.gchq.gaffer.commonutil.StreamUtil.openStreams(uk.gov.gchq.gaffer.operation.export.resultcache.handler.util.GafferResultCacheUtil.class, \"gafferResultCache/schema\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1346/buggy-version/core.graph.src.main.java.uk.gov.gchq.gaffer.operation.export.resultcache.handler.util.GafferResultCacheUtil.java", "BodyUseAPI": ["uk.gov.gchq.gaffer.store.schema.Schema.Builder.id(java.lang.String)", "new uk.gov.gchq.gaffer.store.schema.Schema.Builder().id(schemaId).json(uk.gov.gchq.gaffer.commonutil.StreamUtil.openStreams(uk.gov.gchq.gaffer.operation.export.resultcache.handler.util.GafferResultCacheUtil.class, \"gafferResultCache/schema\"))"], "Fixed commit": "cf17db679e56e69b948a39658929a1e4d07565df", "Url": "https://api.github.com/repos/gchq/Gaffer", "Date": "2017-10-27T08:42:00Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.hasItemMeta()) && (item.getItemMeta().hasDisplayName())) name = item.getItemMeta().getDisplayName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/503/buggy-version/src.main.java.com.skyisland.questmanager.quest.requirements.DeliverRequirement.java", "BodyUseAPI": ["item.getItemMeta().getDisplayName()", "org.bukkit.inventory.ItemStack.getItemMeta()"], "Fixed commit": "a6d7dfe6b6e63b494a78e7f9f4d930c6cc5a7e9a", "Url": "https://api.github.com/repos/Dove-Bren/QuestManager", "Date": "2016-07-17T02:20:20Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inHand.getType()) == (org.bukkit.Material.AIR)) inHand = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/503/buggy-version/src.main.java.com.skyisland.questmanager.player.skill.defaults.TrappingSkill.java", "BodyUseAPI": [], "Fixed commit": "a6d7dfe6b6e63b494a78e7f9f4d930c6cc5a7e9a", "Url": "https://api.github.com/repos/Dove-Bren/QuestManager", "Date": "2016-07-17T02:20:20Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offHand.getType()) == (org.bukkit.Material.AIR)) offHand = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/503/buggy-version/src.main.java.com.skyisland.questmanager.player.skill.defaults.TrappingSkill.java", "BodyUseAPI": [], "Fixed commit": "a6d7dfe6b6e63b494a78e7f9f4d930c6cc5a7e9a", "Url": "https://api.github.com/repos/Dove-Bren/QuestManager", "Date": "2016-07-17T02:20:20Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.IOUtils.lineIterator(java.io.InputStream,enc.getEncoding())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(iter.hasNext())) { line += org.apache.commons.io.IOUtils.LINE_SEPARATOR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4009/buggy-version/net.sf.logsaw.dialect.pattern.src.net.sf.logsaw.dialect.pattern.APatternDialect.java", "BodyUseAPI": [], "Fixed commit": "9b8ee3e6bc859a76592579487f0645318cf99cbb", "Url": "https://api.github.com/repos/logsaw/logsaw-app", "Date": "2012-12-08T01:37:50Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getInstance().getConfigHandler().getLobbyList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lobbyList != null) { for (java.util.Map.Entry<java.lang.String, java.util.List<java.lang.Integer>> lobby : lobbyList.getActiveLobbies().entrySet()) { getInstance().getLobbyHandler().createLobby(lobby.getKey(), lobby.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/600/buggy-version/src.main.java.me.stuntguy3000.java.telegames.hook.TelegramHook.java", "BodyUseAPI": ["lobbyList.getActiveLobbies().entrySet()", "me.stuntguy3000.java.telegames.object.config.LobbyList.getActiveLobbies()"], "Fixed commit": "5f3fcf62f204e03c750099dbee4e5af701495578", "Url": "https://api.github.com/repos/stuntguy3000/Telegames", "Date": "2015-12-07T00:08:42Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.get(i).getExpression()) instanceof org.openflexo.connie.expr.Constant.ObjectConstant) { java.lang.Object value = ((org.openflexo.connie.expr.Constant.ObjectConstant) (args.get(i).getExpression())).getValue(); if (value instanceof org.openflexo.foundation.fml.rt.View) { paramsTypes[i] = ((org.openflexo.foundation.fml.rt.View) (value)).getViewPoint().getInstanceType(); }else if (value instanceof org.openflexo.foundation.fml.rt.VirtualModelInstance) { paramsTypes[i] = ((org.openflexo.foundation.fml.rt.VirtualModelInstance) (value)).getVirtualModel().getInstanceType(); }else if (value instanceof org.openflexo.foundation.fml.rt.FlexoConceptInstance) { paramsTypes[i] = ((org.openflexo.foundation.fml.rt.FlexoConceptInstance) (value)).getFlexoConcept().getInstanceType(); }else { paramsTypes[i] = value.getClass(); } }else { paramsTypes[i] = args.get(i).getAnalyzedType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8930/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.fml.binding.FlexoConceptBindingFactory.java", "BodyUseAPI": ["java.util.List<org.openflexo.connie.DataBinding<?>>.get(int)", "java.util.List<org.openflexo.connie.DataBinding<?>>.get(int)", "args.get(i).getAnalyzedType()", "((org.openflexo.connie.expr.Constant.ObjectConstant) (args.get(i).getExpression())).getValue()", "args.get(i).getExpression()"], "Fixed commit": "d741a087a16ca6736468d26053f8d7c322c5691c", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2016-12-07T12:24:40Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seaCreaturesMap.containsValue(seaCreature)) seaCreature.lifeStep(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1927/buggy-version/src.kszorin.model.PlayingWorld.java", "BodyUseAPI": ["kszorin.model.SeaCreature.lifeStep(kszorin.model.PlayingWorld)"], "Fixed commit": "bed2331205ae5c4c5c0fe27a93b93b151bb3860e", "Url": "https://api.github.com/repos/kszorin/SeaWorldEngine", "Date": "2017-02-24T08:39:40Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastLineInFile) == null) lastLineInFile = new java.lang.ThreadLocal<org.sper.logtracker.logreader.FileSnippet>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2189/buggy-version/logtracker.src.main.java.org.sper.logtracker.erroranalysis.ErrorLogParser.java", "BodyUseAPI": [], "Fixed commit": "79289d35693abd1323f8391da5d57fbdebf4f56e", "Url": "https://api.github.com/repos/silvanperego/LogTracker", "Date": "2015-05-15T09:14:07Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(propertyWeight.getText().isEmpty())) { weight.setValue(propertyWeight.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8362/buggy-version/GraphEditor.src.main.java.edu.unibi.agbi.gnius.business.controller.tab.editor.EditorDetailsController.java", "BodyUseAPI": ["javafx.scene.control.TextField.getText()", "edu.unibi.agbi.petrinet.model.Weight.setValue(propertyWeight.getText())"], "Fixed commit": "4e3103a341ed3ebff881c86b971a764baa1434ac", "Url": "https://api.github.com/repos/preipke/OMPetri", "Date": "2016-12-19T00:17:59Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(propertyWeight.getText().isEmpty())) { function.setFunction(propertyFunction.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8362/buggy-version/GraphEditor.src.main.java.edu.unibi.agbi.gnius.business.controller.tab.editor.EditorDetailsController.java", "BodyUseAPI": [], "Fixed commit": "4e3103a341ed3ebff881c86b971a764baa1434ac", "Url": "https://api.github.com/repos/preipke/OMPetri", "Date": "2016-12-19T00:17:59Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elementVar instanceof ui.elem.Dialog) { if (elementVar instanceof ui.elem.Stat) elementVar.setComponent(stats); else if (elementVar instanceof ui.elem.OpponentStat) elementVar.setComponent(stats2); else elementVar.setComponent(dialog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1024/buggy-version/ui.Display.java", "BodyUseAPI": ["ui.Element.setComponent(javax.swing.JLabel)", "ui.Element.setComponent(javax.swing.JLabel)", "ui.Element.setComponent(javax.swing.JLabel)"], "Fixed commit": "9a65d403b985f173910826088d59ee50813496dd", "Url": "https://api.github.com/repos/Enthri/aprctsrpg", "Date": "2015-02-20T20:30:13Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.tailers.remove(tail)) { final int endingMessageId = this.messageQueue.size(); this.endingMessageIds.put(tail, endingMessageId); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1259/buggy-version/splitlog-core.src.main.java.com.github.triceo.splitlog.DefaultLogWatch.java", "BodyUseAPI": ["java.util.Map<com.github.triceo.splitlog.LogTailer, java.lang.Integer>.put(com.github.triceo.splitlog.LogTailer,int)"], "Fixed commit": "c610b4e82945780911c15095516c53697b1aa07e", "Url": "https://api.github.com/repos/triceo/splitlog", "Date": "2014-02-27T14:45:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (velocity == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9100/buggy-version/FuzzFit.src.others.CalorieHandler.java", "BodyUseAPI": [], "Fixed commit": "f0f004ec28a65ceb411f27e8db20faf7a72fc88d", "Url": "https://api.github.com/repos/JulsRicketti/FuzzFit", "Date": "2014-05-23T17:22:28Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"CancelSelection\".equals(e.getActionCommand()))) { file = fileChooser.getSelectedFile(); engine.createPolyLineFromFile(file); try { link(); } catch (EmptySequenceException ex) { } canvas.repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2147/buggy-version/src.UIMain.java", "BodyUseAPI": [], "Fixed commit": "1c0d7677e7b96341129f83be68c459dbdae8dcc1", "Url": "https://api.github.com/repos/coen22/Project-2", "Date": "2015-03-18T21:02:48Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.bukkit.entity.Projectile) (event.getDamager())).getShooter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (source instanceof org.bukkit.entity.LivingEntity) { attacker = ((org.bukkit.entity.LivingEntity) (source)); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5670/buggy-version/src.main.java.com.sk89q.worldguard.bukkit.WorldGuardEntityListener.java", "BodyUseAPI": [], "Fixed commit": "4422d536b7b0cfe1fc4a90a87c95b778828205aa", "Url": "https://api.github.com/repos/wizjany/worldguard", "Date": "2014-03-01T02:21:00Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.fabric8.maven.ApplyMojo.getKubernetes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((kubernetes.getMasterUrl()) == null) { throw new org.apache.maven.plugin.MojoFailureException(\"Can't find Kubernetes master URL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9181/buggy-version/fabric8-maven-plugin.src.main.java.io.fabric8.maven.ApplyMojo.java", "BodyUseAPI": [], "Fixed commit": "ad04236b966f62699680a9eba0173e77c035c6ab", "Url": "https://api.github.com/repos/fabric8io/fabric8", "Date": "2015-08-09T09:37:05Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (para.startsWith(\"\\ufeff\")) { para = para.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4124/buggy-version/src.main.java.org.obeliks.Tokenizer.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2f1bc8f8f417c9fd7ef3b9ed741f0d5adc1be8b0", "Url": "https://api.github.com/repos/mgrcar/Obeliks4J", "Date": "2016-10-02T11:05:48Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.isOKStatus())) { org.openhab.binding.jablotron.internal.JablotronBinding.logger.error(response.getErrorStatus()); return 800; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3349/buggy-version/src.main.java.org.openhab.binding.jablotron.internal.JablotronBinding.java", "BodyUseAPI": ["org.openhab.binding.jablotron.internal.JablotronResponse.getErrorStatus()", "org.slf4j.Logger.error(response.getErrorStatus())"], "Fixed commit": "319b76f48c55a2c835196f0f66e11fa243158a29", "Url": "https://api.github.com/repos/octa22/org.openhab.binding.jablotron", "Date": "2017-04-05T19:33:39Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (settings.containsKey(\"heartbeatRate\")) { heartbeat.setSecondsDelay(java.lang.Double.parseDouble(((java.lang.String) (settings.get(\"heartbeatRate\"))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8126/buggy-version/pancancer-arch-3.src.main.java.info.pancancer.arch3.worker.WorkerRunnable.java", "BodyUseAPI": ["info.pancancer.arch3.worker.WorkerHeartbeat.setSecondsDelay(double)", "org.json.simple.JSONObject.get(java.lang.String)", "java.lang.Double.parseDouble(((java.lang.String) (settings.get(\"heartbeatRate\"))))"], "Fixed commit": "754a26d153ef3f71e5fbf6b4739748ab9cb9b188", "Url": "https://api.github.com/repos/Consonance/consonance", "Date": "2015-05-21T20:25:33Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (negative_value) { result_obj = result_obj * (-1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3193/buggy-version/app.src.main.java.luizventurote.minhagrana.helper.Helper.java", "BodyUseAPI": [], "Fixed commit": "ea5479e3b84585607468cba241f0678e0d736223", "Url": "https://api.github.com/repos/phamorim/minhagrana", "Date": "2015-12-06T14:59:33Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value < 0) { value = value * (-1); return \"-R$ \" + (n.format(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3193/buggy-version/app.src.main.java.luizventurote.minhagrana.helper.Helper.java", "BodyUseAPI": [], "Fixed commit": "ea5479e3b84585607468cba241f0678e0d736223", "Url": "https://api.github.com/repos/phamorim/minhagrana", "Date": "2015-12-06T14:59:33Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (objective.contains(\"-\")) { negative_value = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3193/buggy-version/app.src.main.java.luizventurote.minhagrana.helper.Helper.java", "BodyUseAPI": [], "Fixed commit": "ea5479e3b84585607468cba241f0678e0d736223", "Url": "https://api.github.com/repos/phamorim/minhagrana", "Date": "2015-12-06T14:59:33Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmp < 0) { tmp = -tmp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/582/buggy-version/giraph-examples.src.main.java.org.apache.giraph.examples.jabeja.NodePartitioningComputation.java", "BodyUseAPI": [], "Fixed commit": "55d872ee8c84f4a6b29a0bf5c02ad562c963aca3", "Url": "https://api.github.com/repos/pushparajxa/giraph", "Date": "2013-12-23T16:53:53Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmp < 0) { tmp = -tmp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/582/buggy-version/giraph-examples.src.main.java.org.apache.giraph.examples.jabeja.NodePartitioningComputation.java", "BodyUseAPI": [], "Fixed commit": "55d872ee8c84f4a6b29a0bf5c02ad562c963aca3", "Url": "https://api.github.com/repos/pushparajxa/giraph", "Date": "2013-12-23T16:53:53Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != end) { end = end.toString().trim().replace(\"*\", \"\"); end = end.replace(\"\\\\^\", \"\"); end = org.apache.commons.lang3.StringEscapeUtils.escapeJson(end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8444/buggy-version/sdk-ses-base.src.main.java.com.ai.paas.ipaas.search.impl.SearchHelper.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.trim()", "java.lang.String.toString()"], "Fixed commit": "b66e2f21720696c897970ff3e0e30371429b76e5", "Url": "https://api.github.com/repos/AIPaaS/service-sdk-ses", "Date": "2017-08-03T11:03:35Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != begin) { begin = begin.toString().trim().replace(\"*\", \"\"); begin = begin.replace(\"\\\\^\", \"\"); begin = org.apache.commons.lang3.StringEscapeUtils.escapeJson(begin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8444/buggy-version/sdk-ses-base.src.main.java.com.ai.paas.ipaas.search.impl.SearchHelper.java", "BodyUseAPI": ["java.lang.String.toString()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "b66e2f21720696c897970ff3e0e30371429b76e5", "Url": "https://api.github.com/repos/AIPaaS/service-sdk-ses", "Date": "2017-08-03T11:03:35Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bukkit.Bukkit.getOnlinePlayers()) != null) for (org.bukkit.entity.Player player : org.bukkit.Bukkit.getOnlinePlayers()) { releasePlayer(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2165/buggy-version/src.main.java.com.turt2live.antishare.inventory.InventoryManager.java", "BodyUseAPI": [], "Fixed commit": "1b6f3d80fb29540378129e723702d7e9a44aebcc", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2012-11-24T02:37:31Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(queryString))) { queryString = queryString.replaceAll(\"[^A-Za-z0-9\u00e4\u00f6\u00fc\u00c4\u00d6\u00dc\u00df\u00e9\u00e8\u00e1\u00e0\u00fa\u00f9\u00f3\u00f2=']\", \" \"); }else { queryString = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6684/buggy-version/src.main.java.com.geminicode.hssc.utils.SearchUtil.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "0d88a4def00ffacae17d7e92f508c30c67aae3bf", "Url": "https://api.github.com/repos/Angelima/Hearthstone-search", "Date": "2015-06-18T14:49:38Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkForFailure()) { explainErrors(); abortDeploy(dnodes, version); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1432/buggy-version/splout-server.src.main.java.com.splout.db.qnode.Deployer.java", "BodyUseAPI": [], "Fixed commit": "ce0a29dada125e6c9472aeed148f013182692fa4", "Url": "https://api.github.com/repos/datasalt/splout-db", "Date": "2013-10-01T16:11:40Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.parse.ParseUser.getCurrentUser()) != null) { android.content.Intent intent = new android.content.Intent(this, com.example.sca.ihavebeen.UserProfileActivity.class); intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5376/buggy-version/app.src.main.java.com.example.sca.ihavebeen.LIActivity.java", "BodyUseAPI": [], "Fixed commit": "fb13aff9ff6910bc2d09f00f01dbce3738f17ea3", "Url": "https://api.github.com/repos/TomSchinler/I_Have_Been", "Date": "2015-09-27T15:24:42Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) dir.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6111/buggy-version/src.fr.inria.soctrace.lib.utils.src.fr.inria.soctrace.lib.utils.Configuration.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "371cc02cb548578800aa9fc03579a1cbb3992f5b", "Url": "https://api.github.com/repos/soctrace-inria/framesoc", "Date": "2015-06-03T07:10:58Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.freeplane.plugin.workspace.model.project.AWorkspaceProject.create(java.lang.String,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.freeplane.plugin.workspace.WorkspaceController.getCurrentModel().getProject(project.getProjectID())) == null) { getModel().addItem(new org.docear.plugin.core.ui.ImportProjectPagePanel.VersionItem(project, item, new java.util.Date(settings.lastModified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/608/buggy-version/docear_plugin_core.src.org.docear.plugin.core.ui.ImportProjectPagePanel.java", "BodyUseAPI": ["org.docear.plugin.core.ui.ImportProjectPagePanel.ProjectVersionsModel.addItem(org.docear.plugin.core.ui.ImportProjectPagePanel.VersionItem)"], "Fixed commit": "478d14987f3afae6f193ee5332201a2910dc5592", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-08-09T10:10:03Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elevenquest.dl.pipeline.FileUtil.getLearningBasePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.elevenquest.dl.pipeline.FileUtil.FILE_SEPARATOR.equals(basePath.charAt(((basePath.length()) - 1)))) { return ((((com.elevenquest.dl.pipeline.FileUtil.getLearningBasePath()) + stockId) + \"_\") + startDate) + \".csv\"; }else { return (((((com.elevenquest.dl.pipeline.FileUtil.getLearningBasePath()) + (java.io.File.separator)) + stockId) + \"_\") + startDate) + \".csv\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7223/buggy-version/StockPredictor.src.com.elevenquest.dl.pipeline.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "405fd03853646badbb1c209407b1baccf8f089ea", "Url": "https://api.github.com/repos/kpyopark/dl_stck", "Date": "2017-12-27T15:32:59Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (org.gradle.internal.concurrent.ServiceLifecycle.State.RUNNING)) { state = org.gradle.internal.concurrent.ServiceLifecycle.State.STOPPING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2785/buggy-version/subprojects.base-services.src.main.java.org.gradle.internal.concurrent.ServiceLifecycle.java", "BodyUseAPI": [], "Fixed commit": "60562f73a68be63843ee5149e189b67f55a0b10d", "Url": "https://api.github.com/repos/gradle/gradle", "Date": "2013-09-17T02:06:35Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.springframework.security.core.context.SecurityContextHolder.getContext()) == null) || ((org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7356/buggy-version/orcid-core.src.main.java.org.orcid.core.manager.impl.OrcidSecurityManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "de95998341b4180db54cd883b19fb7d23655f106", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2016-04-08T12:11:41Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((k < (str.length())) && ((str.charAt(k)) == ' ')) k++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2198/buggy-version/src.Essay.java", "BodyUseAPI": [], "Fixed commit": "ae3dd7bbaa087544629eecf9520cc02b8edb9d2c", "Url": "https://api.github.com/repos/spwing/Blue-Sheet-Finder", "Date": "2016-05-24T12:56:17Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setProgressDrawable(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableSeekBar.PROGESS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3416/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableSeekBar.java", "BodyUseAPI": [], "Fixed commit": "ccc936bc50016dcb6857cb04f6e6eedd94b85edd", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setBackground(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableFrameLayout.BACKGROUND)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3416/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "ccc936bc50016dcb6857cb04f6e6eedd94b85edd", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3416/buggy-version/android.apollo.src.com.andrew.apollo.widgets.RepeatingImageButton.java", "BodyUseAPI": [], "Fixed commit": "ccc936bc50016dcb6857cb04f6e6eedd94b85edd", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7808/buggy-version/src.main.java.com.nu.art.rtsp.RTSPServer.java", "BodyUseAPI": [], "Fixed commit": "08521bd2b34e660499afe13a283607b88fb81730", "Url": "https://api.github.com/repos/nu-art/libstreaming", "Date": "2017-10-18T21:40:52Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oldOwnerIndex >= 0) { getPlayerByIndex(oldOwnerIndex).loseLongestRoad(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3087/buggy-version/java.src.shared.model.player.PlayerManager.java", "BodyUseAPI": ["shared.model.player.Player.loseLongestRoad()", "shared.model.player.PlayerManager.getPlayerByIndex(int)"], "Fixed commit": "156c39ba092d8c7957a35833a5aebbfa43730613", "Url": "https://api.github.com/repos/CaptBoscho/Settlers-of-Catan", "Date": "2016-03-22T10:53:53Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((builder.energyAvailable()) < (buildcraft.api.blueprints.SchematicRegistry.BREAK_ENERGY)) { iterator.reset(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1466/buggy-version/common.buildcraft.core.blueprints.BptBuilderBlueprint.java", "BodyUseAPI": [], "Fixed commit": "62e21a45b8f4ad712f163b23c34fea7762224075", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2014-05-05T13:33:47Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(field.isAccessible())) { field.setAccessible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6906/buggy-version/utils.src.main.java.se.wfh.libs.common.utils.Config.java", "BodyUseAPI": ["java.lang.reflect.Field.setAccessible(boolean)"], "Fixed commit": "c040c0110a131d8cae906672ed380dbce3e6a28e", "Url": "https://api.github.com/repos/bratkartoffel/wfhcommon", "Date": "2014-12-03T10:32:58Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.isActive()) != null) { destination.setActive(source.isActive()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6236/buggy-version/osgp-adapter-ws-core.src.main.java.com.alliander.osgp.adapter.ws.core.application.mapping.DeviceConverterHelper.java", "BodyUseAPI": ["com.alliander.osgp.adapter.ws.schema.core.devicemanagement.Device.isActive()", "T.setActive(source.isActive())"], "Fixed commit": "bc4d34544576adc4489da9861c777f18c4da03a3", "Url": "https://api.github.com/repos/OSGP/Platform", "Date": "2016-08-24T10:05:11Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.isActive()) != null) { destination.setActive(source.isActive()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6236/buggy-version/osgp-adapter-ws-core.src.main.java.com.alliander.osgp.adapter.ws.core.application.mapping.SsldConverter.java", "BodyUseAPI": ["com.alliander.osgp.domain.core.entities.Ssld.setActive(source.isActive())", "com.alliander.osgp.adapter.ws.schema.core.devicemanagement.Device.isActive()"], "Fixed commit": "bc4d34544576adc4489da9861c777f18c4da03a3", "Url": "https://api.github.com/repos/OSGP/Platform", "Date": "2016-08-24T10:05:11Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (element instanceof org.apache.axiom.soap.SOAPHeaderBlock) { synCtx.getEnvelope().getHeader().addChild(((org.apache.axiom.soap.SOAPHeaderBlock) (element))); }else if (element instanceof org.apache.axiom.om.OMElement) { synCtx.getEnvelope().getHeader().addChild(org.apache.axiom.om.util.ElementHelper.toSOAPHeaderBlock(((org.apache.axiom.om.OMElement) (element)), fac).cloneOMElement()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4925/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.builtin.CalloutMediator.java", "BodyUseAPI": [], "Fixed commit": "7d014bda6057d783b17d6f8d34401beaefe79052", "Url": "https://api.github.com/repos/Buddhima/wso2-synapse", "Date": "2016-05-10T09:01:47Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((b.length()) >= 2) && (old_table_name != null)) { this.view_tab_columns.put(old_table_name, b.toString().substring(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4707/buggy-version/src.spinat.oraclescripter.SourceCodeGetter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.StringBuilder.toString()", "java.lang.String.substring(int)"], "Fixed commit": "2b7615e3e41b5d688a143566178df0bc24bea7e9", "Url": "https://api.github.com/repos/raverkamp/oraclescripter", "Date": "2017-01-27T14:50:20Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((masterHap) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4733/buggy-version/src.main.java.com.didapinche.commons.redis.MasterSlaveRedisPool.java", "BodyUseAPI": [], "Fixed commit": "2b062c2a3e0682c4f9a0b96bdf9cab62fb9a4876", "Url": "https://api.github.com/repos/lldaaron/redis_client", "Date": "2015-07-30T17:29:41Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i <= 20) return com.tommytony.math.MathExt.cubesBuffer[i]; else return (i * i) * i;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/828/buggy-version/src.com.tommytony.math.MathExt.java", "BodyUseAPI": [], "Fixed commit": "81724f36156c44ba930f749d35fcad74d2d114ec", "Url": "https://api.github.com/repos/cmastudios/UtilityLibrary", "Date": "2012-09-10T01:37:07Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.wst.common.project.facet.core.ProjectFacetsManager.create(((org.jboss.tools.ws.ui.wizards.JBossRSGenerateWizard) (this.getWizard())).getProject())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (facetProject == null) { setErrorMessage(JBossWSUIMessages.Error_JBossWS_GenerateWizard_NotDynamicWebProject2); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9230/buggy-version/plugins.org.jboss.tools.ws.ui.src.org.jboss.tools.ws.ui.wizards.JBossRSGenerateWizardPage.java", "BodyUseAPI": [], "Fixed commit": "b3237b58e42267bf8ec3372c9daac70bda463f8d", "Url": "https://api.github.com/repos/jbosstools/jbosstools-webservices", "Date": "2013-07-03T14:00:48Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((reqVideo.getFilename().length()) == 0) && ((reqVideo.getSecureFilename().length()) == 0)) { reqVideo.setSecureFilename(((de.uhh.l2g.plugins.util.Security.createSecureFileName()) + \".xx\")); de.uhh.l2g.plugins.service.VideoLocalServiceUtil.updateVideo(reqVideo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5537/buggy-version/portlets.lecture2go-portlet.docroot.WEB-INF.src.de.uhh.l2g.plugins.admin.AdminVideoManagement.java", "BodyUseAPI": ["de.uhh.l2g.plugins.model.Video.setSecureFilename(((de.uhh.l2g.plugins.util.Security.createSecureFileName()) + \".xx\"))", "de.uhh.l2g.plugins.service.VideoLocalServiceUtil.updateVideo(de.uhh.l2g.plugins.model.Video)"], "Fixed commit": "a69b7db075c68b8e6daa56f13a7c61d5eb3afa9d", "Url": "https://api.github.com/repos/isturm/plugins-sdk-6.2", "Date": "2016-10-13T11:15:43Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(constructor.isAccessible())) { constructor.setAccessible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1079/buggy-version/src.main.java.com.deadmandungeons.connect.commons.messenger.Messenger.java", "BodyUseAPI": ["java.lang.reflect.Constructor<?>.setAccessible(boolean)"], "Fixed commit": "8470003febf51eb312d0e4e4073733e600d3df6d", "Url": "https://api.github.com/repos/DeadmanDungeons/ConnectCommons", "Date": "2017-08-19T20:04:46Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.kosmologist.andromeda.controller.StoryController.getStory(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(story.isArchived())) { story.setShift(io.github.kosmologist.andromeda.controller.ShiftController.getShift(date)); story.setTasks(io.github.kosmologist.andromeda.controller.TaskController.getAllTasksForDate(story.getDate())); stories.add(story); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/304/buggy-version/app.src.main.java.io.github.kosmologist.andromeda.controller.StoryController.java", "BodyUseAPI": ["io.github.kosmologist.andromeda.entities.Story.setTasks(io.github.kosmologist.andromeda.controller.TaskController.getAllTasksForDate(story.getDate()))", "io.github.kosmologist.andromeda.entities.Story.getDate()", "java.util.ArrayList<io.github.kosmologist.andromeda.entities.Story>.add(io.github.kosmologist.andromeda.entities.Story)", "io.github.kosmologist.andromeda.entities.Story.setShift(io.github.kosmologist.andromeda.controller.ShiftController.getShift(date))", "io.github.kosmologist.andromeda.controller.TaskController.getAllTasksForDate(story.getDate())"], "Fixed commit": "90283eb2cc2974f186b93db66f798bdee3c372ef", "Url": "https://api.github.com/repos/kosmologist/andromeda-android", "Date": "2017-01-10T13:07:05Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((training) == null) { de.hpi_web.cloudSim.profiling.CloudProfiler.start(observer, delay, \"\", running.getAbsolutePath(), cpuThreshold, memThreshold, bwThreshold, hdThreshold, dcBuilder, vmBuilder, models, vmsAtStart, minPerTurn, costPerMin); }else { de.hpi_web.cloudSim.profiling.CloudProfiler.start(observer, delay, training.getAbsolutePath(), running.getAbsolutePath(), cpuThreshold, memThreshold, bwThreshold, hdThreshold, dcBuilder, vmBuilder, models, vmsAtStart, minPerTurn, costPerMin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7745/buggy-version/CloudProfilingMonitor.src.de.hpi_web.cloudSim.monitor.Simulation.java", "BodyUseAPI": [], "Fixed commit": "6c00131933c5ca680809fdbdebff576616a4d53b", "Url": "https://api.github.com/repos/JannikStreek/Cloud-Multiple-Tiers-Simulation", "Date": "2012-08-02T11:22:42Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { if (((file.isFile()) && (isAudioFile(file))) && (!(userFiles.containsKey(file.getName())))) { userFiles.put(getFileName(file), file.getAbsolutePath()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2811/buggy-version/app.src.main.java.com.omikronsoft.customsoundboard.utils.SoundDataStorageControl.java", "BodyUseAPI": [], "Fixed commit": "0ddd5329d1f33b444a00c605d86931bdd1a2c8be", "Url": "https://api.github.com/repos/DariuszLelek/CustomSoundBoard", "Date": "2017-06-21T10:32:31Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.container.ContainerRequestContext.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (requestBody == null) { requestBody = org.apache.commons.io.IOUtils.toString(request.getEntityStream()); request.setProperty(\"requestBody\", requestBody); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4580/buggy-version/containers.jersey2-routing.src.main.java.com.yahoo.gondola.container.client.ApacheHttpComponentProxyClient.java", "BodyUseAPI": [], "Fixed commit": "aeb1d34f5834fe135b1169405694069d58eff0f2", "Url": "https://api.github.com/repos/patc888/gondola", "Date": "2015-12-11T08:28:28Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((views.Canvas.getTopFigure()) != null) { frame.getScaleSpinner().setValue(views.Canvas.getTopFigure().getScale()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9031/buggy-version/program3.src.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "4fbf32fc46ccf7ff3f6f018d8a8d41d81615ab72", "Url": "https://api.github.com/repos/zachypoo22/Programs", "Date": "2017-11-30T20:23:31Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((views.Canvas.getTopFigure()) != null) { frame.getScaleSpinner().setValue(views.Canvas.getTopFigure().getScale()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9031/buggy-version/program3.src.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "4fbf32fc46ccf7ff3f6f018d8a8d41d81615ab72", "Url": "https://api.github.com/repos/zachypoo22/Programs", "Date": "2017-11-30T20:23:31Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.what) == (pl.kacperzuk.bttyper.MainActivity.MESSAGE_CONNECTION_ERROR)) { addState(\"Connection failed\"); }else if ((msg.what) == (pl.kacperzuk.bttyper.MainActivity.MESSAGE_DISCONNECTED)) { addState(\"DISCONNECTED\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6481/buggy-version/app.src.main.java.pl.kacperzuk.bttyper.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1452a0e480bf0e7d789de3985e07fc96ee5bff1b", "Url": "https://api.github.com/repos/kacperzuk/seconn-android-example", "Date": "2016-11-12T14:03:18Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { es.alvaroweb.catme.helpers.NetworkHelper.loadCategories(this); es.alvaroweb.catme.helpers.NetworkHelper.loadImagesVoteData(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2767/buggy-version/app.src.main.java.es.alvaroweb.catme.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "21d58d67bbf36aa7b520e585a057721feebece7e", "Url": "https://api.github.com/repos/alvaro893/Capstone-project", "Date": "2016-10-05T12:30:32Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target) == null) { ((com.bladecoder.engine.model.SpriteActor) (actor)).startPosAnimation(repeat, count, s, ((pos.x) * scale), ((pos.y) * scale), interpolation, (wait ? cb : null)); }else { com.bladecoder.engine.model.BaseActor target = com.bladecoder.engine.model.World.getInstance().getCurrentScene().getActor(this.target, false); actor.setPosition(target.getX(), target.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4830/buggy-version/blade-engine.src.com.bladecoder.engine.actions.PositionAnimAction.java", "BodyUseAPI": [], "Fixed commit": "7712194064da4d73de1387520c439467dbf217ab", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2015-10-14T13:58:26Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target) == null) { actor.setPosition(((pos.x) * scale), ((pos.y) * scale)); }else { com.bladecoder.engine.model.BaseActor target = com.bladecoder.engine.model.World.getInstance().getCurrentScene().getActor(this.target, false); actor.setPosition(target.getX(), target.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4830/buggy-version/blade-engine.src.com.bladecoder.engine.actions.PositionAnimAction.java", "BodyUseAPI": [], "Fixed commit": "7712194064da4d73de1387520c439467dbf217ab", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2015-10-14T13:58:26Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.tudarmstadt.lt.jst.ExtractTermFeatureScores.HadoopMap.VERBOSE) log.error((\"Can't process line: \" + (value.toString())), e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/783/buggy-version/src.main.java.de.tudarmstadt.lt.jst.ExtractTermFeatureScores.HadoopMap.java", "BodyUseAPI": [], "Fixed commit": "01d33169a149a08c090a36cdb49a672b64d0634b", "Url": "https://api.github.com/repos/uhh-lt/lefex", "Date": "2016-11-18T11:04:41Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 21) { finishAndRemoveTask(); }else { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3949/buggy-version/app.src.main.java.com.sirmvit.vtufest2k17.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "34f7ef946f871eeadc26fbd4c6ff1d417f56eecd", "Url": "https://api.github.com/repos/mayankmetha/VTUFEST2K17", "Date": "2017-03-11T01:17:14Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { try { value = java.lang.Double.valueOf(stringValue); } catch (java.lang.NumberFormatException nfe) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7841/buggy-version/src.com.esotericsoftware.yamlbeans.YamlReader.java", "BodyUseAPI": [], "Fixed commit": "17cfa849bb67f4e7d95ddab4cae599de751cc148", "Url": "https://api.github.com/repos/rawbertp/yamlbeans", "Date": "2017-11-08T11:35:43Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) value = stringValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7841/buggy-version/src.com.esotericsoftware.yamlbeans.YamlReader.java", "BodyUseAPI": [], "Fixed commit": "17cfa849bb67f4e7d95ddab4cae599de751cc148", "Url": "https://api.github.com/repos/rawbertp/yamlbeans", "Date": "2017-11-08T11:35:43Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.endeavourhealth.common.config.ConfigManager.getConfiguration(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (appConfigJson != null) appConfig = org.endeavourhealth.common.cache.ObjectMapperPool.getInstance().readValue(appConfigJson, org.endeavourhealth.coreui.framework.config.models.AppConfig.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1474/buggy-version/src.main.java.org.endeavourhealth.coreui.framework.config.ConfigService.java", "BodyUseAPI": ["org.endeavourhealth.common.cache.ObjectMapperPool.getInstance().readValue(java.lang.String,java.lang.Class)"], "Fixed commit": "fded1978bac269df5272a727173f8efc753318ac", "Url": "https://api.github.com/repos/endeavourhealth/Api", "Date": "2017-08-22T14:26:59Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, io.github.data4all.model.data.ClassifiedValue>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (classi != null) { keyList = io.github.data4all.util.Tagging.getUnclassifiedTags(classi, res, keyList, element); endList = io.github.data4all.util.Tagging.addUnclassifiedValue(element, endList, keyList, res); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8675/buggy-version/src.main.java.io.github.data4all.activity.ResultViewActivity.java", "BodyUseAPI": ["io.github.data4all.util.Tagging.getUnclassifiedTags(io.github.data4all.model.data.ClassifiedValue,android.content.res.Resources,java.util.List<java.lang.String>,io.github.data4all.model.data.AbstractDataElement)"], "Fixed commit": "9adef58c006e3235c117a0694abf1ff8d8966019", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-04-14T13:03:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shrink < 1) { shrink = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6744/buggy-version/app.src.main.java.com.uni.ard.fitnesstracker.CreateTreat.java", "BodyUseAPI": [], "Fixed commit": "c0fe4d0a9aeb3f7d9a2b3da1c2b524c062afc25c", "Url": "https://api.github.com/repos/MadAd360/FitnessTracker", "Date": "2015-04-19T01:47:11Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shrink < 1) { shrink = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6744/buggy-version/app.src.main.java.com.uni.ard.fitnesstracker.CreateTreat.java", "BodyUseAPI": [], "Fixed commit": "c0fe4d0a9aeb3f7d9a2b3da1c2b524c062afc25c", "Url": "https://api.github.com/repos/MadAd360/FitnessTracker", "Date": "2015-04-19T01:47:11Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultImageID) == 0) mainImageView.setImageResource(R.drawable.image_error);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9158/buggy-version/app.src.main.java.com.pga.project1.Viewes.ImageLoaderView.java", "BodyUseAPI": [], "Fixed commit": "fab2569dc22bd5f80fb71f2a363dda4bdeeebada", "Url": "https://api.github.com/repos/aliparsa/Project1", "Date": "2014-11-09T06:08:17Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.defaultImageID) != 0) { fakeImageView.setImageResource(this.defaultImageID); progressBar.setVisibility(com.pga.project1.Viewes.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9158/buggy-version/app.src.main.java.com.pga.project1.Viewes.ImageLoaderView.java", "BodyUseAPI": [], "Fixed commit": "fab2569dc22bd5f80fb71f2a363dda4bdeeebada", "Url": "https://api.github.com/repos/aliparsa/Project1", "Date": "2014-11-09T06:08:17Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSubscriptions2Detach) != null) { mSubscriptions2Detach.add(subscription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1276/buggy-version/app.src.main.java.com.youshibi.app.base.BaseRxPresenter.java", "BodyUseAPI": [], "Fixed commit": "a29574d357fbff73992fcfe69443d40f834cf57d", "Url": "https://api.github.com/repos/z-chu/FriendBook", "Date": "2017-07-06T01:56:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSubscriptions2Detach) != null) { mSubscriptions2Destroy.add(subscription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1276/buggy-version/app.src.main.java.com.youshibi.app.base.BaseRxPresenter.java", "BodyUseAPI": [], "Fixed commit": "a29574d357fbff73992fcfe69443d40f834cf57d", "Url": "https://api.github.com/repos/z-chu/FriendBook", "Date": "2017-07-06T01:56:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File((oldVocabularyName + \".dat\")).renameTo(new java.io.File((newVocabularyName + \".dat\"))))) java.lang.System.out.println(\"\u041d\u0435 \u0432\u0434\u0430\u043b\u043e\u0441\u044f \u043f\u0435\u0440\u0435\u0439\u043c\u0435\u043d\u0443\u0432\u0430\u0442\u0438 \u0444\u0430\u0439\u043b.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7525/buggy-version/src.com.dubyniak.bohdan.mycutevocabulary.interfaces.impls.FileStorage.java", "BodyUseAPI": [], "Fixed commit": "49a88a6e2d208cabadb846e233912ed8ce5d3682", "Url": "https://api.github.com/repos/b0hdan/MyVocabulary", "Date": "2017-07-16T19:48:22Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.isDirectory()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4246/buggy-version/src.main.java.meerkat.modules.serialization.singleFile.SingleFileDeserializationImplementation.java", "BodyUseAPI": [], "Fixed commit": "b6356c46ba914b2e8dcdb68042e5140ad04f3f46", "Url": "https://api.github.com/repos/io-project/meerkat", "Date": "2013-11-20T10:32:55Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSaleInProgress()) { sale.addProduct(product); java.lang.System.out.println(\">> OK!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5635/buggy-version/src.main.java.edu.upc.talent.tddkata.PointOfSale.java", "BodyUseAPI": [], "Fixed commit": "630f6c3dc9451f31caa3be1132f507c8d7513988", "Url": "https://api.github.com/repos/ferran-candela/sqa-scrum", "Date": "2017-03-09T19:08:47Z"},
{"Line": "=>1642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(resolver_vis_tab.isFile())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2475/buggy-version/annis-service.src.main.java.annis.administration.DefaultAdministrationDao.java", "BodyUseAPI": [], "Fixed commit": "563e704bcca4372f4a12af2f1bcd21cefa594e7c", "Url": "https://api.github.com/repos/pixeldrama/ANNIS", "Date": "2013-11-18T19:30:44Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hu.elte.txtuml.utils.jdt.ElementTypeTeller.isCollection(elem)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4984/buggy-version/dev.plugins.hu.elte.txtuml.validation.src.hu.elte.txtuml.validation.visitors.ModelVisitor.java", "BodyUseAPI": [], "Fixed commit": "705a2d78ad5a61922a7291191291d29ddf214353", "Url": "https://api.github.com/repos/ELTE-Soft/txtUML", "Date": "2017-10-30T20:13:18Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directory.isPresent()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8559/buggy-version/SingularityService.src.main.java.com.hubspot.singularity.mesos.SingularityLogSupport.java", "BodyUseAPI": [], "Fixed commit": "0f45b3f4119c6ea1151e8e7b4bdc14523976ace1", "Url": "https://api.github.com/repos/HubSpot/Singularity", "Date": "2014-04-03T11:11:46Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (session != null) manager.setLogger(session);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7461/buggy-version/app.src.main.java.no.nordicsemi.android.nrftoolbox.profile.multiconnect.BleMulticonnectProfileService.java", "BodyUseAPI": ["no.nordicsemi.android.nrftoolbox.profile.BleManager<no.nordicsemi.android.nrftoolbox.profile.BleManagerCallbacks>.setLogger(no.nordicsemi.android.log.ILogSession)"], "Fixed commit": "3cd8180f134023d2f3a654e6fa64f0a3daec2d2a", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-nRF-Toolbox", "Date": "2016-10-18T14:43:13Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["work.wanghao.autoupdate.utils.PackageUtils.getPackageInfo(work.wanghao.autoupdate.service.BaseUpdateService)", "work.wanghao.autoupdate.utils.CommonUtils.parseJsonToObj(org.json.JSONObject)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((current.versionCode) < (java.lang.Integer.parseInt(info.versionCode))) { showNewVersion(info); }else if (((current.versionCode) == (java.lang.Integer.parseInt(info.versionCode))) && (!(current.packageName.equals(info.versionName)))) { showNewVersion(info); }else { stopSelf(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8272/buggy-version/autoupdate.src.main.java.work.wanghao.autoupdate.service.BaseUpdateService.java", "BodyUseAPI": ["current.packageName.equals(info.versionName)", "java.lang.Integer.parseInt(info.versionCode)", "work.wanghao.autoupdate.service.BaseUpdateService.showNewVersion(work.wanghao.autoupdate.bean.FirVersionInfo)", "work.wanghao.autoupdate.service.BaseUpdateService.showNewVersion(work.wanghao.autoupdate.bean.FirVersionInfo)"], "Fixed commit": "2d98e06d05ee7f3fb59363fdf2806a728b8c1514", "Url": "https://api.github.com/repos/Doublemine/AutoUpdate", "Date": "2016-08-05T09:29:47Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) instanceof com.orientechnologies.orient.core.db.record.OIdentifiable) { if ((!(((com.orientechnologies.orient.core.db.record.OIdentifiable) (entry.getValue())).getIdentity().isPersistent())) && (((com.orientechnologies.orient.core.db.record.OIdentifiable) (entry.getValue())).getIdentity().isValid())) { throw new com.orientechnologies.orient.core.exception.ODatabaseException(\"Impossible use as query parameter a not persistent record\"); } newParams.put(entry.getKey(), ((com.orientechnologies.orient.core.db.record.OIdentifiable) (entry.getValue())).getIdentity()); }else newParams.put(entry.getKey(), entry.getValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1556/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.query.OSQLQuery.java", "BodyUseAPI": ["java.lang.Object.getIdentity()", "java.util.Map.Entry<java.lang.Object, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.Object, java.lang.Object>.getValue()", "java.util.Map<java.lang.Object, java.lang.Object>.put(java.lang.Object,java.lang.Object)", "((com.orientechnologies.orient.core.db.record.OIdentifiable) (entry.getValue())).getIdentity().isValid()", "java.util.Map.Entry<java.lang.Object, java.lang.Object>.getValue()", "java.lang.Object.getIdentity()", "java.util.Map.Entry<java.lang.Object, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.Object, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.Object, java.lang.Object>.getKey()", "((com.orientechnologies.orient.core.db.record.OIdentifiable) (entry.getValue())).getIdentity().isPersistent()", "java.lang.Object.getIdentity()", "java.util.Map<java.lang.Object, java.lang.Object>.put(java.lang.Object,((com.orientechnologies.orient.core.db.record.OIdentifiable) (entry.getValue())).getIdentity())"], "Fixed commit": "f79aad873b732d916b25e976fe3e3f6f46b67b00", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-10T17:36:06Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.appinventor.common.version.AppInventorFeatures.allowMultiScreenApplications()) { if (((getCurrentProject()) == null) || ((getCurrentProject().currentScreen) == \"Screen1\")) { setButtonEnabled(com.google.appinventor.client.DesignToolbar.WIDGET_NAME_REMOVEFORM, false); }else { setButtonEnabled(com.google.appinventor.client.DesignToolbar.WIDGET_NAME_REMOVEFORM, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1550/buggy-version/appinventor.appengine.src.com.google.appinventor.client.DesignToolbar.java", "BodyUseAPI": [], "Fixed commit": "c97dffeed4770c852908fcf6c75fb2ca80686122", "Url": "https://api.github.com/repos/lizlooney/appinventor-sources", "Date": "2015-09-24T23:54:42Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tryDestroy()) { setDead(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2975/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.EntityFireball.java", "BodyUseAPI": [], "Fixed commit": "a612638edf921d342361080237d10ce2febedbc4", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2017-07-14T18:55:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choice) == (COMMAND_FAKE)) { project660.Graph g = new project660.Graph(4, 0, Generator.DIRECTED); g.insert_vertex(4); g.insert_edge(1, 2, Generator.DIRECTED); g.insert_edge(2, 1, Generator.DIRECTED); g.insert_edge(2, 3, Generator.DIRECTED); g.insert_edge(3, 2, Generator.DIRECTED); g.insert_edge(3, 4, Generator.DIRECTED); g.insert_edge(4, 3, Generator.DIRECTED); g.insert_edge(4, 1, Generator.DIRECTED); g.insert_edge(1, 4, Generator.DIRECTED); java.io.FileOutputStream fout = new java.io.FileOutputStream(\"test\"); java.io.ObjectOutputStream oos = new java.io.ObjectOutputStream(fout); oos.writeObject(g); oos.close(); g.print_graph(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6033/buggy-version/src.project660.Prj660.java", "BodyUseAPI": [], "Fixed commit": "c1a4137ff13a26cf58f7d070aea3691433085872", "Url": "https://api.github.com/repos/himor/project660", "Date": "2014-06-22T06:25:53Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choice) == (COMMAND_ANALYZE)) { boolean another_graph = true; while (another_graph) { java.lang.System.out.println(); java.lang.String _line = project660.Interactor.getString(\"\\nLoad graph [filename]:\"); if ((_line.length()) < 1) { java.lang.System.out.println(\"Done\"); java.lang.System.exit(0); } java.io.ObjectInputStream ois = null; project660.Graph g = null; java.io.FileInputStream fin; try { fin = new java.io.FileInputStream(_line); ois = new java.io.ObjectInputStream(fin); g = ((project660.Graph) (ois.readObject())); } catch (java.io.FileNotFoundException e) { java.lang.System.out.println(\"\\nCannot find file. Will exit now\"); java.lang.System.exit(0); } finally { ois.close(); } g.print_graph(); int indegree_zero = 0; int outdegree_zero = 0; for (int i = 1; i <= (g.nvertices); i++) { if ((g.indegree[i]) == 0) indegree_zero++; if ((g.outdegree[i]) == 0) outdegree_zero++; } java.lang.System.out.println(((((\"Number of nodes with in-degree=0: \" + ((int) (indegree_zero))) + \" (\") + ((((double) (indegree_zero)) / (g.nvertices)) * 100)) + \"%)\")); java.lang.System.out.println(((((\"Number of nodes with out-degree=0: \" + ((int) (outdegree_zero))) + \" (\") + ((((double) (outdegree_zero)) / (g.nvertices)) * 100)) + \"%)\")); project660.Wcc wcc = new project660.Wcc(g); wcc.weak_components(); wcc.results(); project660.Scc scc = new project660.Scc(g); scc.strong_components(); scc.results(); project660.Cyclotron lhc = new project660.Cyclotron(g); for (int i = 2; i <= MAX_CYCLE; i++) lhc.execute(i); _line = project660.Interactor.getString(\"\\nWould you like to analyze another graph? [y/N]:\"); if (((_line.length()) > 0) && (((_line.charAt(0)) == 'Y') || ((_line.charAt(0)) == 'y'))) another_graph = true; else another_graph = false; } java.lang.System.out.println(\"Done\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6033/buggy-version/src.project660.Prj660.java", "BodyUseAPI": [], "Fixed commit": "c1a4137ff13a26cf58f7d070aea3691433085872", "Url": "https://api.github.com/repos/himor/project660", "Date": "2014-06-22T06:25:53Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choice) == (COMMAND_GENERATE)) { project660.Generator.generate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6033/buggy-version/src.project660.Prj660.java", "BodyUseAPI": [], "Fixed commit": "c1a4137ff13a26cf58f7d070aea3691433085872", "Url": "https://api.github.com/repos/himor/project660", "Date": "2014-06-22T06:25:53Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.gameinstance.submarine.GameManager.gameplay.getCurrentLevel()) != null) { com.gameinstance.submarine.GameManager.gameplay.getCurrentLevel().onClose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1891/buggy-version/app.src.main.java.com.gameinstance.submarine.GameManager.java", "BodyUseAPI": ["com.gameinstance.submarine.GameManager.gameplay.getCurrentLevel().onClose()", "com.gameinstance.submarine.gameplay.Gameplay.getCurrentLevel()"], "Fixed commit": "9438419bdf80216754d63e1a24fb6f0cf52554de", "Url": "https://api.github.com/repos/gringosol/Submarine", "Date": "2017-01-14T08:35:41Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.gameinstance.submarine.GameManager.getGameplay()) != null) com.gameinstance.submarine.GameManager.getGameplay().reinitGame();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1891/buggy-version/app.src.main.java.com.gameinstance.submarine.LevelLoader.java", "BodyUseAPI": [], "Fixed commit": "9438419bdf80216754d63e1a24fb6f0cf52554de", "Url": "https://api.github.com/repos/gringosol/Submarine", "Date": "2017-01-14T08:35:41Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((s.getLine(3).length()) == 0) { toggle.expand(com.sk89q.worldedit.bukkit.BukkitUtil.toVector(com.sk89q.craftbook.util.SignUtil.getLeft(trigger)), com.sk89q.worldedit.bukkit.BukkitUtil.toVector(com.sk89q.craftbook.util.SignUtil.getRight(trigger))); }else { for (int i = 0; i < (java.lang.Integer.parseInt(s.getLine(3))); i++) toggle.expand(com.sk89q.worldedit.bukkit.BukkitUtil.toVector(com.sk89q.craftbook.util.SignUtil.getLeft(trigger)), com.sk89q.worldedit.bukkit.BukkitUtil.toVector(com.sk89q.craftbook.util.SignUtil.getRight(trigger))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/389/buggy-version/mechanisms.src.main.java.com.sk89q.craftbook.mech.Bridge.java", "BodyUseAPI": [], "Fixed commit": "3eae0a2484ad84d87781f98c25cea840584ba9ba", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-07-15T00:33:20Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameMenuView) != null) { this.gameMenuView.refreshView(currentUserProfile.getHighestStoryLevelUnlocked(), currentUserProfile.getHighestUserLevelUnlocked()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5501/buggy-version/src.main.java.SixesWild.com.mimas.sixeswild.boundaries.GameApplication.java", "BodyUseAPI": [], "Fixed commit": "a261c04df33cec7634f363de87c19d1bacb4472c", "Url": "https://api.github.com/repos/SIZMW/sixes-wild", "Date": "2015-04-27T13:08:09Z"},
{"Line": "=>639", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.shared.util.ResourceImageUtil.getYoutubeVideoId(profileLibraryItem.getUrl())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((youTubeIbStr1 != null) && ((youTubeIbStr1.length()) == 11)) { java.lang.String thumbnailUrl = org.ednovo.gooru.shared.util.ResourceImageUtil.youtubeImageLink(youTubeIbStr1, Window.Location.getProtocol()); resourceImage.setUrl(thumbnailUrl); }else { if ((((profileLibraryItem.getThumbnails()) != null) && ((profileLibraryItem.getThumbnails().getUrl()) != null)) && (!(profileLibraryItem.getThumbnails().getUrl().isEmpty()))) { resourceImage.setUrl(profileLibraryItem.getThumbnails().getUrl()); }else { resourceImage.setUrl((((org.ednovo.gooru.client.mvp.profilepage.data.item.ProfileTopicListView.DEFULT_IMAGE_PREFIX) + (getDetaultResourceImage(category.toLowerCase()))) + (org.ednovo.gooru.client.mvp.profilepage.data.item.ProfileTopicListView.PNG))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1343/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.profilepage.data.item.ProfileTopicListView.java", "BodyUseAPI": ["org.ednovo.gooru.shared.util.ResourceImageUtil.youtubeImageLink(java.lang.String,Window.Location.getProtocol())"], "Fixed commit": "9b5e651e2b102dbd5b20080d146e4648d23f6d33", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-03-31T01:26:55Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((row) == 0) || ((col) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6319/buggy-version/MovingBox.src.Board.java", "BodyUseAPI": [], "Fixed commit": "8103f34112f986fc76bc076e36407a56c6cb7e18", "Url": "https://api.github.com/repos/itai-m/Games-in-Java", "Date": "2015-09-22T19:44:54Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (java.awt.GraphicsEnvironment.isHeadless()) { jp.mydns.turenar.twclient.init.SplashScreenCtrl.splashScreen = null; }else { jp.mydns.turenar.twclient.init.SplashScreenCtrl.splashScreen = java.awt.SplashScreen.getSplashScreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4458/buggy-version/elnetw-core.src.main.java.jp.mydns.turenar.twclient.init.SplashScreenCtrl.java", "BodyUseAPI": [], "Fixed commit": "04e2049b5e20520a0ee69ce9f83d7661f812cdd0", "Url": "https://api.github.com/repos/turenar/elnetw", "Date": "2014-09-27T18:09:46Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((row[j]) == null) { prest.setObject((j + 1), \"\"); }else { prest.setObject((j + 1), row[j]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8931/buggy-version/src.com.chenxin.autobuildmodel.JDBCTool.java", "BodyUseAPI": ["java.sql.PreparedStatement.setObject(int,java.lang.Object)", "java.sql.PreparedStatement.setObject(int,java.lang.String)"], "Fixed commit": "b6e99d3ef66b65fdf207c41fecebfc3becf0e90d", "Url": "https://api.github.com/repos/iosdeve/AutoBuildModel", "Date": "2016-09-20T07:20:32Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cdt == null) cdt = new com.aic.paas.web.dep.bean.CPcAppDepHistory();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9067/buggy-version/src.main.java.com.aic.paas.web.dep.peer.impl.PcAppMonitorPeerImpl.java", "BodyUseAPI": [], "Fixed commit": "073216f44536a9a4c28d1d4658045a661800d1a6", "Url": "https://api.github.com/repos/AIPaaS/platform-portal-core-web", "Date": "2016-03-23T07:22:26Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null == password) { myPassword = \"\"; }else { myPassword = password; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/537/buggy-version/server.src.jetbrains.teamcilty.github.api.impl.GitHubApiImpl.java", "BodyUseAPI": [], "Fixed commit": "4c8cd78c306b33b4055f819bb4e7ff3daed0f79f", "Url": "https://api.github.com/repos/jonnyzzz/TeamCity.GitHub", "Date": "2014-04-05T23:48:56Z"},
{"Line": "=>1044", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (container.wasLaunched) { container.metrics.endRunningContainer(); }else { org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerImpl.LOG.warn((\"Container exited with success despite being killed and not\" + \"actually running\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6299/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.containermanager.container.ContainerImpl.java", "BodyUseAPI": ["org.apache.hadoop.yarn.server.nodemanager.metrics.NodeManagerMetrics.endRunningContainer()"], "Fixed commit": "62e9348bc10bb97a5fcb4281f7996a09d8e69c60", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2015-12-03T14:36:37Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((column.getType()) == (java.util.List.class)) && ((column.getListElementType()) == (java.lang.String.class))) { nameColumnDropdown.addItem(column.getName()); }else if (((column.getType()) == (java.lang.Integer.class)) || (((column.getType()) == (java.util.List.class)) && ((column.getListElementType()) == (java.lang.Integer.class)))) { clusterColumnDropdown.addItem(column.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/711/buggy-version/EnrichmentMapPlugin.src.main.java.org.baderlab.csplugins.enrichmentmap.autoannotate.view.AutoAnnotationPanel.java", "BodyUseAPI": ["org.cytoscape.model.CyColumn.getName()", "org.cytoscape.model.CyColumn.getListElementType()", "org.cytoscape.model.CyColumn.getType()", "javax.swing.JComboBox<java.lang.String>.addItem(column.getName())", "javax.swing.JComboBox<java.lang.String>.addItem(column.getName())", "org.cytoscape.model.CyColumn.getName()", "org.cytoscape.model.CyColumn.getType()"], "Fixed commit": "356cc79ec1c9b466962f669d8c5447728fa69db8", "Url": "https://api.github.com/repos/BaderLab/EnrichmentMapApp", "Date": "2015-05-12T14:30:23Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldLen != (fields.length)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7988/buggy-version/src.Populate.java", "BodyUseAPI": [], "Fixed commit": "c52aaf56807c6562f6e26e7970bd2e97ced4980f", "Url": "https://api.github.com/repos/Jiffkuo/IMDB_System", "Date": "2017-03-04T10:19:34Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.llamacorp.equate.unit.UnitType.getCurrUnitButtonPos()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currButtonPos >= (mConvButton.size())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8668/buggy-version/app.src.main.java.com.llamacorp.equate.view.ConvKeysFragment.java", "BodyUseAPI": [], "Fixed commit": "efcda80d9198b2c16c048ebe79eebdcd39dedc85", "Url": "https://api.github.com/repos/EvanRespaut/Equate", "Date": "2017-03-21T03:40:51Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (last == false) { output.put(input, index, len); bitIndex[0] = (index + len) * 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1028/buggy-version/src.main.java.com.neovisionaries.ws.client.DeflateDecompressor.java", "BodyUseAPI": [], "Fixed commit": "6da1928a8ba1889f72fbb979fe5b192eba96e48b", "Url": "https://api.github.com/repos/TakahikoKawasaki/nv-websocket-client", "Date": "2015-12-26T12:04:23Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMonitorStarted())) { startConnectCheckTask(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7494/buggy-version/activemq-client.src.main.java.org.apache.activemq.transport.InactivityMonitor.java", "BodyUseAPI": [], "Fixed commit": "e5a94bfee2bc850f1999c58c2916655e8caba2d3", "Url": "https://api.github.com/repos/clebertsuconic/activemq", "Date": "2015-08-12T15:07:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node.hasChild(path)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4441/buggy-version/sdk.historian.src.main.java.org.dsa.iot.historian.database.WatchGroup.java", "BodyUseAPI": [], "Fixed commit": "d13cbcc36f06390f5d1bda58a2b0ee9c3101ef78", "Url": "https://api.github.com/repos/IOT-DSA/sdk-dslink-java", "Date": "2016-11-03T21:44:58Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) dir.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6574/buggy-version/src.nitezh.ministock.UserData.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "554e8fcc0749f071e8985ab79ea813999d85e01c", "Url": "https://api.github.com/repos/Skrittles/SPMinistocks", "Date": "2016-07-02T06:55:39Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) dir.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6574/buggy-version/src.nitezh.ministock.UserData.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "554e8fcc0749f071e8985ab79ea813999d85e01c", "Url": "https://api.github.com/repos/Skrittles/SPMinistocks", "Date": "2016-07-02T06:55:39Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(location.clone().add(getVelocity()).add(0, 1, 0).getBlock().getType().isSolid())) { location.add(getVelocity()); if (location.getBlock().isLiquid()) { velocity.multiply(net.glowstone.entity.GlowEntity.LIQUID_DRAG); }else { velocity.multiply(net.glowstone.entity.GlowEntity.AIR_DRAG); } velocity.add(net.glowstone.entity.GlowEntity.GRAVITY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/388/buggy-version/src.main.java.net.glowstone.entity.GlowEntity.java", "BodyUseAPI": ["location.getBlock().isLiquid()", "net.glowstone.entity.Location.add(org.bukkit.util.Vector)", "net.glowstone.entity.Location.getBlock()"], "Fixed commit": "dafb40c48fd1506f18e8cb6b6f4bccfe8f65b4e4", "Url": "https://api.github.com/repos/PretzelCA/Stone", "Date": "2016-01-20T21:44:01Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (location.getBlock().getType().isSolid()) { setRawLocation(location.clone().add(0, 0.2, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/388/buggy-version/src.main.java.net.glowstone.entity.GlowEntity.java", "BodyUseAPI": ["location.clone().add(int,double,int)", "net.glowstone.entity.GlowEntity.setRawLocation(location.clone().add(0, 0.2, 0))", "net.glowstone.entity.Location.clone()"], "Fixed commit": "dafb40c48fd1506f18e8cb6b6f4bccfe8f65b4e4", "Url": "https://api.github.com/repos/PretzelCA/Stone", "Date": "2016-01-20T21:44:01Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mGcmRegistrationManager)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/157/buggy-version/vector.src.main.java.im.vector.services.EventStreamService.java", "BodyUseAPI": [], "Fixed commit": "8d376ba26691f9c886825586bf390a482b19838a", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-12-12T07:56:42Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (inputFromApplet != null) { inputFromApplet.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6039/buggy-version/Simulation.servlet.Servlet.java", "BodyUseAPI": ["java.io.ObjectInputStream.close()"], "Fixed commit": "f46d0b08894891ff1142f5868f0875584af505d0", "Url": "https://api.github.com/repos/Amndeep7/Senior-Research-Project", "Date": "2013-05-26T18:40:24Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (outputToApplet != null) { outputToApplet.flush(); outputToApplet.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6039/buggy-version/Simulation.servlet.Servlet.java", "BodyUseAPI": ["java.io.ObjectOutputStream.close()", "java.io.ObjectOutputStream.flush()"], "Fixed commit": "f46d0b08894891ff1142f5868f0875584af505d0", "Url": "https://api.github.com/repos/Amndeep7/Senior-Research-Project", "Date": "2013-05-26T18:40:24Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmi.nordborglab.browser.server.repository.AclSidRepository.findBySid(SecurityUtil.sid2String.apply(sid))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (aclSid == null) return 0L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2592/buggy-version/genophenbrowser-server.src.main.java.com.gmi.nordborglab.browser.server.security.EsAclManager.java", "BodyUseAPI": [], "Fixed commit": "750dd5bb3b5a94416ccf20cf7860d67c6ed5aea8", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2015-02-10T10:34:41Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (options == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2017/buggy-version/src.main.java.hudson.plugins.sauce_ondemand.SauceOnDemandBuildWrapper.java", "BodyUseAPI": [], "Fixed commit": "8a73f11cca88a6c49af01a20a40bfb9a845e0fb0", "Url": "https://api.github.com/repos/jenkinsci/sauce-ondemand-plugin", "Date": "2015-03-03T10:18:02Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(breadcrumbItems.isEmpty())) { breadcrumbItems.remove(((breadcrumbItems.size()) - 1)); breadcrumbItems.add(org.roda.wui.client.main.BreadcrumbUtils.getBreadcrumbItem(representation)); breadcrumb.updatePath(breadcrumbItems); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8304/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.browse.BrowseRepresentation.java", "BodyUseAPI": ["java.util.List<org.roda.wui.client.main.BreadcrumbItem>.size()", "java.util.List<org.roda.wui.client.main.BreadcrumbItem>.remove(((breadcrumbItems.size()) - 1))", "java.util.List<org.roda.wui.client.main.BreadcrumbItem>.add(org.roda.wui.client.main.BreadcrumbUtils.getBreadcrumbItem(representation))", "org.roda.wui.client.main.BreadcrumbPanel.updatePath(java.util.List<org.roda.wui.client.main.BreadcrumbItem>)"], "Fixed commit": "43c954ba11e7073b7ab379a986ebc2bea2f9347c", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2017-11-16T14:47:06Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getStatus()) == (edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.models.RequirementStatus.COMPLETE)) { model.setStatus(RequirementStatus.OPEN); edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.db.DB.updateRequirements(model, new edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.db.SingleRequirementCallback() { @java.lang.Override public void callback(edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.models.RequirementModel req) { tab.getRequirementPanel().updateModel(req); } }); }else { java.lang.String title = \"Close This Requirement\"; java.lang.String message = \"This requirement has at least one open sub-requirement.\\n\" + \"Do you want to close this requirement and all of its sub-requirements?\"; int input = javax.swing.JOptionPane.showConfirmDialog(tab, message, title, javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE); java.lang.System.out.println((\"Input to close: \" + input)); closeSub = input == (javax.swing.JOptionPane.YES_OPTION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3505/buggy-version/RequirementsManagement.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.toolbar.RequirementToolbarView.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.db.DB.updateRequirements(edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.models.RequirementModel,edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.db.SingleRequirementCallback)", "edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.models.RequirementModel.setStatus(RequirementStatus.OPEN)"], "Fixed commit": "3d08e773231db265516fe5f79c2a3a000dee25c3", "Url": "https://api.github.com/repos/alexhenning/wpi-suite-tng", "Date": "2013-04-28T20:42:31Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { tabController.closeCurrentTab(); tabController.addListRequirementsTab(); }else { tab.getRequirementPanel().refreshModel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3505/buggy-version/RequirementsManagement.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.toolbar.RequirementToolbarView.java", "BodyUseAPI": [], "Fixed commit": "3d08e773231db265516fe5f79c2a3a000dee25c3", "Url": "https://api.github.com/repos/alexhenning/wpi-suite-tng", "Date": "2013-04-28T20:42:31Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["User.find.byId(session(\"email\"))", "java.lang.Module.findByAcronym(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((session(\"email\")) != null) && (controllers.SecuredProfessor.isProfessor(session(\"email\")))) && (controllers.SecuredProfessor.isOwner(user, module))) { user.professorProfile.refresh(); java.util.List<models.curriculum.Category> categories = models.curriculum.Category.getAllCategories(); for (models.test.question.Question q : lesson.questions) { if ((q.user) != null) { q.user.refresh(); } } return ok(views.html.professor.lesson.render(user, categories, lesson, module, form(ProfessorLessonController.NewAlert_Form.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4484/buggy-version/etoile-play.app.controllers.ProfessorController.java", "BodyUseAPI": ["user.professorProfile.refresh()", "views.html.professor.lesson.render(models.User,java.util.List<models.curriculum.Category>,models.module.Lesson,java.lang.Module,form(ProfessorLessonController.NewAlert_Form.class))", "controllers.ProfessorController.ok(views.html.professor.lesson.render(user, categories, lesson, module, form(ProfessorLessonController.NewAlert_Form.class)))"], "Fixed commit": "a6172189f6016aa467f331c4208bc292a78ef7a0", "Url": "https://api.github.com/repos/lopesdasilva/etoile", "Date": "2013-02-25T12:23:33Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5216/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "ae478d49ad5d1ece2b87acff57fc70babad34280", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-18T19:38:56Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fd.getFilter()) != null) { for (int i = 0; i < (fd.getFilter().size()); i++) { if (i != ((fd.getFilter().size()) - 1)) { filter_spot = (filter_spot + (fd.getFilter().get(i))) + \", \"; }else { filter_spot = filter_spot + (fd.getFilter().get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6211/buggy-version/ParkHere310.app.src.main.java.com.csci310.ParkHere.RentActivity.java", "BodyUseAPI": ["com.csci310.ParkHere.FeedItem.getFilter()", "fd.getFilter().size()", "fd.getFilter().get(int)", "com.csci310.ParkHere.FeedItem.getFilter()", "fd.getFilter().size()", "com.csci310.ParkHere.FeedItem.getFilter()", "com.csci310.ParkHere.FeedItem.getFilter()", "fd.getFilter().get(int)"], "Fixed commit": "57a86ae09f27167acd3ef6e709aa46856ab7dffb", "Url": "https://api.github.com/repos/curtiszhi/CSCI-310-TeamProject", "Date": "2016-11-01T05:50:39Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spotPhoto.size()) > 0) { byte[] decodedString = android.util.Base64.decode(spotPhoto.get(0), Base64.DEFAULT); android.graphics.Bitmap b = android.graphics.BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length); image_view.setImageBitmap(b); image_label.setText(((\"1 of \" + (spotPhoto.size())) + \" images\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6211/buggy-version/ParkHere310.app.src.main.java.com.csci310.ParkHere.RentActivity.java", "BodyUseAPI": ["java.util.Vector<java.lang.String>.get(int)", "android.util.Base64.decode(java.lang.String,Base64.DEFAULT)", "java.util.Vector<java.lang.String>.size()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "57a86ae09f27167acd3ef6e709aa46856ab7dffb", "Url": "https://api.github.com/repos/curtiszhi/CSCI-310-TeamProject", "Date": "2016-11-01T05:50:39Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((statusCode / 100) != 2) { edu.umich.ctools.sectionsUtilityTool.Utils.M_log.error(java.lang.String.format(\"The API call %s failed with status code %s due to %s \", clientRequest.getURI().toString(), statusCode, apiResponse)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7218/buggy-version/src.main.java.edu.umich.ctools.sectionsUtilityTool.Utils.java", "BodyUseAPI": ["org.apache.commons.logging.Log.error(java.lang.String)", "java.lang.String.format(java.lang.String,clientRequest.getURI().toString(),int,java.lang.String)"], "Fixed commit": "744418f601ae7d6ed744a861cf99633a4d55bf72", "Url": "https://api.github.com/repos/pushyamig/canvas_course_manager", "Date": "2017-05-31T19:09:12Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.info.isDurable()) && (this.getOpenwireDestination().isTopic())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7809/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConsumer.java", "BodyUseAPI": [], "Fixed commit": "c4339d809bc199cd7d90eaa7589ea3c76f304929", "Url": "https://api.github.com/repos/TomRoss/activemq-artemis", "Date": "2016-12-05T14:06:25Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((card.getValue()) != 1) { for (int i = 0; i < 4; i++) { if ((stacks[i].isEmpty()) || (i == (card.getStack().getID()))) continue; de.tobiasbielefeld.solitaire.classes.Card cardOnStack = stacks[i].getTopCard(); if (((cardOnStack.getColor()) == (card.getColor())) && (((cardOnStack.getValue()) > (card.getValue())) || ((cardOnStack.getValue()) == 1))) success = true; } if (success) return getDiscardStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5876/buggy-version/app.src.main.java.de.tobiasbielefeld.solitaire.games.AcesUp.java", "BodyUseAPI": ["card.getStack().getID()", "de.tobiasbielefeld.solitaire.classes.Card.getValue()", "de.tobiasbielefeld.solitaire.classes.Card.getStack()", "de.tobiasbielefeld.solitaire.classes.Card.getColor()"], "Fixed commit": "883b13b64b37a026ce4d496575ec3024e5296ba8", "Url": "https://api.github.com/repos/dankan1890/Simple-Solitaire", "Date": "2017-02-11T13:46:36Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.eclipse.core.resources.IFile, org.eclipse.text.edits.TextEdit>.get(org.eclipse.core.resources.IFile)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (textEdit == null) { textEdit = new org.eclipse.text.edits.MultiTextEdit(); results.put(fixedFile, textEdit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6363/buggy-version/eclipse.plugins.net.sf.orcc.ui.src.net.sf.orcc.ui.refactoring.ChangesFactory.java", "BodyUseAPI": [], "Fixed commit": "e8056fe6d8dea7d05d2dfe61695840a84d12d693", "Url": "https://api.github.com/repos/orcc/orcc", "Date": "2014-09-23T13:56:50Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toFixAtChangeStep.contains(file)) { fixedFile = destinationFolder.getFile(file.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6363/buggy-version/eclipse.plugins.net.sf.orcc.ui.src.net.sf.orcc.ui.refactoring.ChangesFactory.java", "BodyUseAPI": ["org.eclipse.core.resources.IFolder.getFile(file.getName())", "org.eclipse.core.resources.IFile.getName()"], "Fixed commit": "e8056fe6d8dea7d05d2dfe61695840a84d12d693", "Url": "https://api.github.com/repos/orcc/orcc", "Date": "2014-09-23T13:56:50Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.channel().remoteAddress().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.startsWith(clientAddress, \"/\")) { clientAddress = org.apache.commons.lang3.StringUtils.substring(clientAddress, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/431/buggy-version/puma.src.main.java.com.dianping.puma.pumaserver.handler.binlog.BinlogSubscriptionHandler.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)"], "Fixed commit": "0a20675321027c30ada2dbec0511529ed5ef93b6", "Url": "https://api.github.com/repos/dianping/puma", "Date": "2016-03-03T07:08:25Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.ashley.core.ComponentMapper<com.saltosion.gladiator.components.CRenderedObject>.get(entities.get(i))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (renderedObject == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5558/buggy-version/core.src.com.saltosion.gladiator.systems.RenderingSystem.java", "BodyUseAPI": [], "Fixed commit": "96f2c2ac7a7dbc38bc463954b5b4000ace35bc42", "Url": "https://api.github.com/repos/Saltosion/GladiatorBrawler", "Date": "2015-05-16T23:41:54Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (forOperator.equals(\"isnull\")) { forOperator = \" is null\"; }else if (forOperator.equals(\"isnotnull\")) { forOperator = \" is null\"; forKey = \"not \" + forKey; }else if (forOperator.equals(\"raw\")) { java.lang.String rawOperator = ((java.lang.String) (((java.util.Vector) (this.xmlDataAccess.getElementsByName(\"for,raw\", ((org.w3c.dom.NodeList) (forVector.get(f_i)))))).get(0))); forOperator = (\" \" + rawOperator) + \" \"; java.util.Vector searchCaseSen = ((java.util.Vector) (this.xmlDataAccess.getElementsByName(\"for,case\", methodNode))); if ((searchCaseSen.size()) > 0) { java.lang.String strCaseSensitivity = ((java.lang.String) (searchCaseSen.get(0))); if (strCaseSensitivity.equals(\"upper\")) { origForValue = origForValue.toUpperCase(); }else if (strCaseSensitivity.equals(\"lower\")) { origForValue = origForValue.toLowerCase(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8034/buggy-version/src.EIDPCore.com.eidp.core.DB.modules.DataBaseMapping.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "eb3da1342ce5543dec8b69184dc41214e0fba440", "Url": "https://api.github.com/repos/UCL/EIDP", "Date": "2014-07-03T15:51:03Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphObject instanceof org.cytoscape.model.CyNode) && (!(network.containsNode(((org.cytoscape.model.CyNode) (graphObject)))))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/214/buggy-version/filter-impl.src.main.java.org.cytoscape.filter.internal.quickfind.util.QuickFindImpl.java", "BodyUseAPI": [], "Fixed commit": "b0e1d1673086507b75cd27a718f6145fd9a690c8", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-02-22T15:31:29Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphObject instanceof org.cytoscape.model.CyEdge) && (!(network.containsEdge(((org.cytoscape.model.CyEdge) (graphObject)))))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/214/buggy-version/filter-impl.src.main.java.org.cytoscape.filter.internal.quickfind.util.QuickFindImpl.java", "BodyUseAPI": [], "Fixed commit": "b0e1d1673086507b75cd27a718f6145fd9a690c8", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-02-22T15:31:29Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.threadly.load.ScriptBuilderUtils.countScriptSteps(builder.getStepAsExecutionItem().getChildItems())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (builderCount == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8391/buggy-version/src.main.java.org.threadly.load.ScriptBuilderUtils.java", "BodyUseAPI": [], "Fixed commit": "a548d87951ccd452c2b7e0b03534a36e9d907b12", "Url": "https://api.github.com/repos/jentfoo/ambush", "Date": "2015-12-21T17:45:41Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(flowControlledBuilders.isEmpty())) { org.threadly.load.ScriptBuilderUtils.RunSignalAcceptor[] signalAcceptors = new org.threadly.load.ScriptBuilderUtils.RunSignalAcceptor[flowControlledBuilders.size()]; for (int i = 0; i < (flowControlledBuilders.size()); i++) { org.threadly.util.Pair<org.threadly.load.AbstractScriptBuilder, java.lang.Integer> fcBuilder = flowControlledBuilders.get(i); signalAcceptors[i] = new org.threadly.load.ScriptBuilderUtils.RunSignalAcceptor((largestBuilderCount / (fcBuilder.getRight()))); fcBuilder.getLeft().setStartHandlerOnAllSteps(signalAcceptors[i]); } largestBuilder.setStartHandlerOnAllSteps(new org.threadly.load.ScriptBuilderUtils.RunSignalSender(signalAcceptors)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8391/buggy-version/src.main.java.org.threadly.load.ScriptBuilderUtils.java", "BodyUseAPI": ["java.util.List<org.threadly.util.Pair<org.threadly.load.AbstractScriptBuilder, java.lang.Integer>>.size()", "java.util.List<org.threadly.util.Pair<org.threadly.load.AbstractScriptBuilder, java.lang.Integer>>.get(int)", "java.util.List<org.threadly.util.Pair<org.threadly.load.AbstractScriptBuilder, java.lang.Integer>>.size()"], "Fixed commit": "a548d87951ccd452c2b7e0b03534a36e9d907b12", "Url": "https://api.github.com/repos/jentfoo/ambush", "Date": "2015-12-21T17:45:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends com.sinapsi.engine.system.ComponentSystemAdapter>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((initAnnot != null) && ((initAnnot.value()) != null)) csa.init(getPlatformDependantObjects(initAnnot.value()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/25/buggy-version/com.sinapsi.engine.system.SystemFacadeGenerator.java", "BodyUseAPI": ["com.sinapsi.engine.annotations.InitializationNeededObjects.value()", "com.sinapsi.engine.system.SystemFacadeGenerator.getPlatformDependantObjects(initAnnot.value())", "com.sinapsi.engine.system.ComponentSystemAdapter.init(java.lang.Object[])"], "Fixed commit": "bcd827ea0f3e4957b5725d5f8c8ce53c26ac4be0", "Url": "https://api.github.com/repos/SinapsiProject/Sinapsi-Core", "Date": "2015-08-10T10:16:32Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.ObjectB) instanceof com.shadegame.gameobject.projectiles.Projectile) { com.shadegame.gameobject.projectiles.Projectile proj = ((com.shadegame.gameobject.projectiles.Projectile) (result.ObjectB)); proj.SetIsDestroyed(true); }else { com.shadegame.engine.Engine.ResolveCollision(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1300/buggy-version/src.com.shadegame.engine.Engine.java", "BodyUseAPI": ["com.shadegame.engine.Engine.ResolveCollision(com.shadegame.engine.collision.CollisionResult)"], "Fixed commit": "a19587841294220d619306a2fde961a89e943dd2", "Url": "https://api.github.com/repos/Immortalsun/TheShadeGame", "Date": "2016-04-15T01:47:38Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.maksoft.maksoftfakturi.MainActivity.findViewById(R.id.me_email)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (email != null) { email.setText(settings.getString(\"email\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6862/buggy-version/app.src.main.java.net.maksoft.maksoftfakturi.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(settings.getString(\"email\", \"\"))"], "Fixed commit": "96118019719361205d2354c4fd2eaa999a443de7", "Url": "https://api.github.com/repos/jokuf/MaksoftFakturi", "Date": "2017-11-01T17:49:28Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.maksoft.maksoftfakturi.MainActivity.findViewById(R.id.me_name)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (name != null) { name.setText(settings.getString(\"fullName\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6862/buggy-version/app.src.main.java.net.maksoft.maksoftfakturi.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(settings.getString(\"fullName\", \"\"))"], "Fixed commit": "96118019719361205d2354c4fd2eaa999a443de7", "Url": "https://api.github.com/repos/jokuf/MaksoftFakturi", "Date": "2017-11-01T17:49:28Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(n.subdomain(mZoneName))) { return com.verisignlabs.dnssec.security.ZoneVerifier.NodeType.GLUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3808/buggy-version/src.com.verisignlabs.dnssec.security.ZoneVerifier.java", "BodyUseAPI": [], "Fixed commit": "15cb5e2ab7ebc41b9d2c23e57300fca16eafcd00", "Url": "https://api.github.com/repos/dblacka/jdnssec-tools", "Date": "2014-04-22T20:39:00Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.resourcesCategory.getAttribute().contains(resource))) { com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.resourcesCategory.getAttribute().add(resource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3525/buggy-version/src.main.java.com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.java", "BodyUseAPI": ["oasis.names.tc.xacml._3_0.core.schema.wd_17.AttributesType.getAttribute()", "com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.resourcesCategory.getAttribute().add(com.thalesgroup.authzforce.sdk.core.schema.Resource)"], "Fixed commit": "b0401a047d00c4494e6258b8709e0deed2a79738", "Url": "https://api.github.com/repos/authzforce/java-xacml-sdk", "Date": "2013-07-05T09:18:18Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.environmentCategory.getAttribute().contains(environment))) { com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.environmentCategory.getAttribute().add(environment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3525/buggy-version/src.main.java.com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.java", "BodyUseAPI": ["com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.environmentCategory.getAttribute().add(com.thalesgroup.authzforce.sdk.core.schema.Environment)", "oasis.names.tc.xacml._3_0.core.schema.wd_17.AttributesType.getAttribute()"], "Fixed commit": "b0401a047d00c4494e6258b8709e0deed2a79738", "Url": "https://api.github.com/repos/authzforce/java-xacml-sdk", "Date": "2013-07-05T09:18:18Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.subjectCategory.getAttribute().contains(subject))) { com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.subjectCategory.getAttribute().add(subject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3525/buggy-version/src.main.java.com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.java", "BodyUseAPI": ["com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.subjectCategory.getAttribute().add(com.thalesgroup.authzforce.sdk.core.schema.Subject)", "oasis.names.tc.xacml._3_0.core.schema.wd_17.AttributesType.getAttribute()"], "Fixed commit": "b0401a047d00c4494e6258b8709e0deed2a79738", "Url": "https://api.github.com/repos/authzforce/java-xacml-sdk", "Date": "2013-07-05T09:18:18Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.actionCategory.getAttribute().contains(action))) { com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.actionCategory.getAttribute().add(action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3525/buggy-version/src.main.java.com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.java", "BodyUseAPI": ["com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.actionCategory.getAttribute().add(com.thalesgroup.authzforce.sdk.core.schema.Action)", "oasis.names.tc.xacml._3_0.core.schema.wd_17.AttributesType.getAttribute()"], "Fixed commit": "b0401a047d00c4494e6258b8709e0deed2a79738", "Url": "https://api.github.com/repos/authzforce/java-xacml-sdk", "Date": "2013-07-05T09:18:18Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((words.size()) > 0) { java.lang.String sub = words.get(0).getPartOfSpeech(); if (((((sub.equals(\"CC\")) || (sub.equals(\"IN\"))) || (sub.equals(\"WRB\"))) || (sub.equals(\"RB\"))) || (words.get(0).toString().toLowerCase().equals(\"read\"))) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3138/buggy-version/src.Sentence.java", "BodyUseAPI": ["words.get(0).getPartOfSpeech()", "words.get(0).toString().toLowerCase()", "java.util.List<bestsummarydevelopment.Word>.get(int)", "words.get(0).toString().toLowerCase().equals(java.lang.String)", "words.get(0).toString()", "java.util.List<bestsummarydevelopment.Word>.get(int)"], "Fixed commit": "e9f30593b54ca40ffa9419457ce1fd70ce3e688c", "Url": "https://api.github.com/repos/alexsyeo/BestSummary", "Date": "2016-08-06T03:58:37Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.PathMeasure.getLength()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs(((java.lang.Math.abs((newEnd - newStart))) - length))) < 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5084/buggy-version/lottie.src.main.java.com.airbnb.lottie.Utils.java", "BodyUseAPI": [], "Fixed commit": "780a3f600f43671af1991d2ef2798288873570d8", "Url": "https://api.github.com/repos/airbnb/lottie-android", "Date": "2017-04-08T19:59:10Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 16) { inflater = getMenuInflater(); }else inflater = new android.view.MenuInflater(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4970/buggy-version/src.de.lehrbaum.keycounter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "45ab9fb1cc9ce874a845711d8718a121b38b8b71", "Url": "https://api.github.com/repos/findusl/ingress-key-counter", "Date": "2014-07-01T18:23:30Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exchange.getIn().getBody(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (body == null) { request.setEntity(null); }else { request.setEntity(body, mediaType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4672/buggy-version/components.camel-restlet.src.main.java.org.apache.camel.component.restlet.DefaultRestletBinding.java", "BodyUseAPI": ["org.restlet.Request.setEntity(java.lang.String,org.restlet.data.MediaType)"], "Fixed commit": "92a87937fa6d1aa79fa0687c96c0b1081397b321", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-10-08T14:16:39Z"},
{"Line": "=>876", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.luizgrp.sectionedrecyclerviewadapter.Section.getContentItemsTotal()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (contentItemsTotal == 0) { notifyItemRemovedFromSection(section, 0); }else { notifyItemChangedInSection(section, 0); if (contentItemsTotal > 1) { notifyItemRangeInsertedInSection(section, 1, (contentItemsTotal - 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7469/buggy-version/library.src.main.java.io.github.luizgrp.sectionedrecyclerviewadapter.SectionedRecyclerViewAdapter.java", "BodyUseAPI": ["io.github.luizgrp.sectionedrecyclerviewadapter.SectionedRecyclerViewAdapter.notifyItemRangeInsertedInSection(io.github.luizgrp.sectionedrecyclerviewadapter.Section,int,int)"], "Fixed commit": "4a4a8a88f100491e5954cfcb252fc5981c63e958", "Url": "https://api.github.com/repos/luizgrp/SectionedRecyclerViewAdapter", "Date": "2017-07-20T10:08:44Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (previousContentItemsCount == 0) { notifyItemInsertedInSection(section, 0); }else { if (previousContentItemsCount > 1) { notifyItemRangeRemovedFromSection(section, 1, (previousContentItemsCount - 1)); } notifyItemChangedInSection(section, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7469/buggy-version/library.src.main.java.io.github.luizgrp.sectionedrecyclerviewadapter.SectionedRecyclerViewAdapter.java", "BodyUseAPI": ["io.github.luizgrp.sectionedrecyclerviewadapter.SectionedRecyclerViewAdapter.notifyItemRangeRemovedFromSection(io.github.luizgrp.sectionedrecyclerviewadapter.Section,int,int)"], "Fixed commit": "4a4a8a88f100491e5954cfcb252fc5981c63e958", "Url": "https://api.github.com/repos/luizgrp/SectionedRecyclerViewAdapter", "Date": "2017-07-20T10:08:44Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skip) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6962/buggy-version/c3po-core.src.main.java.com.petpet.c3po.analysis.SelectiveFeatureDistributionSampling.java", "BodyUseAPI": [], "Fixed commit": "e6c559f794a8be02c143ef4fa4f777eb25dab630", "Url": "https://api.github.com/repos/datascience/c3po", "Date": "2017-02-01T16:23:33Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dockfx.DockNode.localToScreen(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (floatScreen == null) { stagePosition = new javafx.geometry.Point2D(0, 0); }else { stagePosition = floatScreen; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/331/buggy-version/src.main.java.org.dockfx.DockNode.java", "BodyUseAPI": [], "Fixed commit": "14d5292f1f864038b5c506ca1286404228de8c98", "Url": "https://api.github.com/repos/Kladimir/DockFX", "Date": "2015-10-12T12:22:55Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.split(\",\").length) > 1) { msg = ((response.split(\",\")[0]) + \"\\n\\n\") + (response.split(\",\")[1]); }else { msg = response; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9117/buggy-version/IBlockedU.app.src.main.java.com.salesforce.iblockedu.IBlockUGoingHomeFragment.java", "BodyUseAPI": ["response.split(java.lang.String)", "response.split(java.lang.String)"], "Fixed commit": "a81c428244882e04c3ca0d791067c4a3b8434752", "Url": "https://api.github.com/repos/kobyperets/i-blocked-u-fe", "Date": "2017-11-30T12:14:53Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CarbonizeFurnaceRecipes.instance.getProcessResult(this.getStackInSlot(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((itemStack.stackSize) > (CarbonizeFurnaceRecipes.instance.getRequiredProcessAmount(itemStack)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4430/buggy-version/src.main.java.com.mcgoodtime.gti.common.tiles.TileCarbonizeFurnace.java", "BodyUseAPI": [], "Fixed commit": "0f6d2522d74c5f37b60b79ca6bbb11e8aa369f31", "Url": "https://api.github.com/repos/GoodTimeStudio/Production-Line", "Date": "2015-11-25T05:34:08Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["HeatDryerRecipes.instance.getProcessResult(this.getStackInSlot(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((itemStack.stackSize) >= (HeatDryerRecipes.instance.getRequiredProcessAmount(itemStack)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4430/buggy-version/src.main.java.com.mcgoodtime.gti.common.tiles.TileHeatDryer.java", "BodyUseAPI": [], "Fixed commit": "0f6d2522d74c5f37b60b79ca6bbb11e8aa369f31", "Url": "https://api.github.com/repos/GoodTimeStudio/Production-Line", "Date": "2015-11-25T05:34:08Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (offset < 0) offset = java.lang.Math.abs(offset);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1564/buggy-version/elastic-job-core.src.main.java.com.dangdang.ddframe.job.plugin.sharding.strategy.RotateServerByNameJobShardingStrategy.java", "BodyUseAPI": ["java.lang.Math.abs(int)"], "Fixed commit": "d1b92b21f01501bd8b310a46a8fdbcffb79a55dc", "Url": "https://api.github.com/repos/txm119161336/elastic-job", "Date": "2015-12-10T09:20:05Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (friendList.isEmpty()) { notifyDataSetChanged(); }else { this.friendList = friendList; notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1192/buggy-version/app.src.main.java.com.example.s3529589.mad_a1.Adapter.CustomFriendDetailsArrayAdapter.java", "BodyUseAPI": [], "Fixed commit": "fe2156f235228bda1045e8a4a6bd49de88d261fc", "Url": "https://api.github.com/repos/JacksonFraser/mad_a1", "Date": "2017-09-23T01:45:34Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fillPaint) instanceof java.awt.MultipleGradientPaint) { java.awt.geom.AffineTransform oldAf = graphics.getTransform(); if ((fillPathPaint) != null) { graphics.setPaint(fillPathPaint); } graphics.fill(path); graphics.setClip(path); com.jpexs.decompiler.flash.exporters.commonshape.Matrix inverse = null; try { inverse = new com.jpexs.decompiler.flash.exporters.commonshape.Matrix(new java.awt.geom.AffineTransform(fillTransform).createInverse()); } catch (java.awt.geom.NoninvertibleTransformException ex) { } fillTransform.preConcatenate(oldAf); graphics.setTransform(fillTransform); graphics.setPaint(fillPaint); if (inverse != null) { com.jpexs.decompiler.flash.exporters.commonshape.ExportRectangle rect = inverse.transform(new com.jpexs.decompiler.flash.exporters.commonshape.ExportRectangle(path.getBounds2D())); double minX = rect.xMin; double minY = rect.yMin; graphics.fill(new java.awt.Rectangle(((int) (minX)), ((int) (minY)), ((int) ((rect.xMax) - minX)), ((int) ((rect.yMax) - minY)))); } graphics.setTransform(oldAf); graphics.setClip(null); }else if ((fillPaint) instanceof java.awt.TexturePaint) { java.awt.geom.AffineTransform oldAf = graphics.getTransform(); graphics.setClip(path); com.jpexs.decompiler.flash.exporters.commonshape.Matrix inverse = null; try { inverse = new com.jpexs.decompiler.flash.exporters.commonshape.Matrix(new java.awt.geom.AffineTransform(fillTransform).createInverse()); } catch (java.awt.geom.NoninvertibleTransformException ex) { } fillTransform.preConcatenate(oldAf); graphics.setTransform(fillTransform); graphics.setPaint(fillPaint); if (inverse != null) { com.jpexs.decompiler.flash.exporters.commonshape.ExportRectangle rect = inverse.transform(new com.jpexs.decompiler.flash.exporters.commonshape.ExportRectangle(path.getBounds2D())); double minX = rect.xMin; double minY = rect.yMin; graphics.fill(new java.awt.Rectangle(((int) (minX)), ((int) (minY)), ((int) ((rect.xMax) - minX)), ((int) ((rect.yMax) - minY)))); } graphics.setTransform(oldAf); graphics.setClip(null); }else { graphics.setPaint(fillPaint); graphics.fill(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8093/buggy-version/src.com.jpexs.decompiler.flash.exporters.shape.BitmapExporter.java", "BodyUseAPI": [], "Fixed commit": "0fcb762112642b2404ec372142eede8e8042ddbe", "Url": "https://api.github.com/repos/jindrapetrik/jpexs-decompiler", "Date": "2014-07-14T12:06:26Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (database.getTransaction().isActive()) { this.newObjectCounter = ((com.orientechnologies.orient.core.tx.OTransactionRealAbstract) (database.getTransaction())).getNewObjectCounter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6869/buggy-version/server.src.main.java.com.orientechnologies.orient.server.tx.OTransactionOptimisticServer.java", "BodyUseAPI": [], "Fixed commit": "6bc0d04c2395478f9c405ea1d15e5a7f30ef2d5d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-07-19T16:57:58Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(oldDataFilePath.equals(newDataFilePath))) { java.nio.file.Files.copy(oldDataFilePath, newDataFilePath, java.nio.file.StandardCopyOption.REPLACE_EXISTING); java.nio.file.Files.deleteIfExists(oldDataFilePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/468/buggy-version/Tasker.src.application.storage.FileManager.java", "BodyUseAPI": ["java.nio.file.Files.deleteIfExists(java.nio.file.Path)", "java.nio.file.Files.copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.StandardCopyOption)"], "Fixed commit": "7dcebe1b3aa2fcc22109b13954543b02a56442a4", "Url": "https://api.github.com/repos/cs2103jan2016-t16-4j/main", "Date": "2016-04-11T06:33:01Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(oldClosedFilePath.equals(newClosedFilePath))) { java.nio.file.Files.copy(oldClosedFilePath, newClosedFilePath, java.nio.file.StandardCopyOption.REPLACE_EXISTING); java.nio.file.Files.deleteIfExists(oldClosedFilePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/468/buggy-version/Tasker.src.application.storage.FileManager.java", "BodyUseAPI": ["java.nio.file.Files.deleteIfExists(java.nio.file.Path)", "java.nio.file.Files.copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.StandardCopyOption)"], "Fixed commit": "7dcebe1b3aa2fcc22109b13954543b02a56442a4", "Url": "https://api.github.com/repos/cs2103jan2016-t16-4j/main", "Date": "2016-04-11T06:33:01Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(resSet.next())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6517/buggy-version/JDBCProject.src.cs4347.jdbcProject.ecomm.dao.impl.AddressDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "cefddbfeb7bffb13e202586bd962d8be47426d71", "Url": "https://api.github.com/repos/kyleparrott/JDBC_Project", "Date": "2016-04-04T00:25:32Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsettlers.graphics.map.draw.ImageProvider.getInstance().startPreloading()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (imagePreloader != null) imagePreloader.join();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2759/buggy-version/jsettlers.logic.src.jsettlers.main.JSettlersGame.java", "BodyUseAPI": ["java.lang.Thread.join()"], "Fixed commit": "fdba432e2099fec6d36d64d465fd1c44b268b05a", "Url": "https://api.github.com/repos/jsettlers/settlers-remake", "Date": "2015-04-10T14:34:21Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lookupPaths.isEmpty())) { java.lang.Thread thread = new java.lang.Thread(new jsettlers.graphics.map.draw.ImagePreloadTask(), \"image preloader\"); thread.start(); return thread; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2759/buggy-version/jsettlers.graphics.src.jsettlers.graphics.map.draw.ImageProvider.java", "BodyUseAPI": [], "Fixed commit": "fdba432e2099fec6d36d64d465fd1c44b268b05a", "Url": "https://api.github.com/repos/jsettlers/settlers-remake", "Date": "2015-04-10T14:34:21Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hibernate.HibernateUtil.getDAOFact().getPersonDAO().findById(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (p != null) org.hibernate.Hibernate.initialize(p); else { if (isAdmin()) responseCode = Status.NOT_FOUND; else responseCode = Status.UNAUTHORIZED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4923/buggy-version/src.main.java.transactions.PersonTransactions.java", "BodyUseAPI": ["org.hibernate.Hibernate.initialize(model.Person)"], "Fixed commit": "849cf4a5c0aa615877e0b361d55cf0233218b47c", "Url": "https://api.github.com/repos/cpe305/fall2016-project-johnnicholson", "Date": "2016-10-09T08:24:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayer) == null) { mediaPlayer = android.media.MediaPlayer.create(context, id); mediaPlayer.setScreenOnWhilePlaying(true); mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8691/buggy-version/AudioPlayer.src.com.assigment2.audioplayer.AudioPlayerSingleton.java", "BodyUseAPI": [], "Fixed commit": "05326c3626680d95ed50d603151808b568d37591", "Url": "https://api.github.com/repos/AlvaroCortez/Assigment2", "Date": "2014-06-07T20:25:54Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (audioPlayer.isPlaying()) { mediaButton.setText(\"Pause\"); mediaText.setText(\"Status:Played\"); }else { mediaButton.setText(\"Play\"); mediaText.setText(\"Status:Paused\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8691/buggy-version/AudioPlayer.src.com.assigment2.audioplayer.MediaPlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "05326c3626680d95ed50d603151808b568d37591", "Url": "https://api.github.com/repos/AlvaroCortez/Assigment2", "Date": "2014-06-07T20:25:54Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((d.getKind()) == (javax.tools.Diagnostic.Kind.ERROR)) || ((d.getKind()) == (javax.tools.Diagnostic.Kind.MANDATORY_WARNING))) { errors.add(d.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6430/buggy-version/src.main.java.fr.inria.astor.core.manipulation.bytecode.compiler.tools.JavaXToolsCompiler.java", "BodyUseAPI": ["javax.tools.Diagnostic.toString()", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "1ccc8c1fd4113d6c9510055e7cefdd4664cdf8a0", "Url": "https://api.github.com/repos/SpoonLabs/astor", "Date": "2015-08-13T14:17:12Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getAppId()) == null) && (!((hasAttribute(Capsule.ATTR_APP_ARTIFACT)) && (!(Capsule.isDependency(getAttribute(Capsule.ATTR_APP_ARTIFACT))))))) throw new java.lang.IllegalArgumentException(((((\"Could not determine app ID. Capsule jar \" + (getJarFile())) + \" should have the \") + (Capsule.ATTR_APP_NAME)) + \" manifest attribute.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6914/buggy-version/capsule.src.main.java.Capsule.java", "BodyUseAPI": [], "Fixed commit": "a25d95a90caf4c7dd861f7f6e7b60e41ccdee04e", "Url": "https://api.github.com/repos/puniverse/capsule", "Date": "2015-02-03T15:18:57Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tagRepository.findByName(name)) != null) { tags.add(tagRepository.findByName(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1347/buggy-version/src.main.java.ohtu.service.TagService.java", "BodyUseAPI": ["java.util.HashSet<ohtu.model.Tag>.add(tagRepository.findByName(name))", "ohtu.database.repository.TagRepository.findByName(java.lang.String)"], "Fixed commit": "827026ce8d080b0acdb1efef2cdb7422474bdf35", "Url": "https://api.github.com/repos/betallica/lukuvinkkikirjasto", "Date": "2017-12-04T19:25:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((param1 != null) && (param2 != null)) { return getSingleResult(\"group.findByGroupTypeAndName\", com.idega.user.data.bean.Group.class, param1, param2); }else { java.util.List<com.idega.core.persistence.Param> params = new java.util.ArrayList<com.idega.core.persistence.Param>(); java.lang.String query = (\"select g from \" + (com.idega.user.data.bean.Group.class.getName())) + \" g where \"; if (param1 != null) { query += \" g.groupType = :groupType\"; params.add(param1); } if (param2 != null) { query += \"g.name = :name\"; params.add(param2); } java.util.List<com.idega.user.data.bean.Group> groups = getResultListByInlineQuery(query, com.idega.user.data.bean.Group.class, com.idega.util.ArrayUtil.convertListToArray(params)); return com.idega.util.ListUtil.isEmpty(groups) ? null : groups.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/597/buggy-version/src.java.com.idega.user.dao.impl.GroupDAOImpl.java", "BodyUseAPI": ["java.util.List<com.idega.core.persistence.Param>.add(com.idega.core.persistence.Param)", "com.idega.user.dao.impl.GroupDAOImpl.getSingleResult(java.lang.String,java.lang.Class,com.idega.core.persistence.Param,com.idega.core.persistence.Param)", "java.util.List<com.idega.core.persistence.Param>.add(com.idega.core.persistence.Param)"], "Fixed commit": "b19b968dd4b4fbc6c8873d413263b43548072793", "Url": "https://api.github.com/repos/idega/com.idega.core", "Date": "2014-06-04T16:24:52Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((param1 == null) && (param2 == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/597/buggy-version/src.java.com.idega.user.dao.impl.GroupDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "b19b968dd4b4fbc6c8873d413263b43548072793", "Url": "https://api.github.com/repos/idega/com.idega.core", "Date": "2014-06-04T16:24:52Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((seconds) == 0) && ((currentRound) == 1)) { periodProgressBar.setProgress(0); }else { periodProgressBar.setProgress((60 - (seconds))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4893/buggy-version/app.src.main.java.com.danielpape.EMOM.WorkoutActivity.java", "BodyUseAPI": ["android.widget.ProgressBar.setProgress(int)"], "Fixed commit": "dce908d20fa6169c63cc7dd7b481d761e5238ffd", "Url": "https://api.github.com/repos/danielpape/EMOM", "Date": "2017-04-08T11:09:42Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (resultQuery != null) { datas = orderedRows2ListT(resultQuery.get().getList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4240/buggy-version/src.cassandra.java.com.joyveb.support.cassandra.CassandraDaoSupport.java", "BodyUseAPI": ["resultQuery.get().getList()", "com.joyveb.support.cassandra.CassandraDaoSupport<K, T>.orderedRows2ListT(resultQuery.get().getList())", "me.prettyprint.hector.api.query.QueryResult<me.prettyprint.hector.api.beans.OrderedRows<K, java.lang.String, java.nio.ByteBuffer>>.get()"], "Fixed commit": "40b70998c9d467c6533f788803e99d3d4e119d55", "Url": "https://api.github.com/repos/nivance/CassDaoSupport", "Date": "2013-07-01T03:39:51Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ifLiked(rating.getUserId(), rating.getQuestionId()))) { ratingRepository.save(rating); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4411/buggy-version/src.main.java.ua.f13group.KnowHub.service.jpaService.JpaRatingService.java", "BodyUseAPI": ["ua.f13group.KnowHub.repository.RatingRepository.save(ua.f13group.KnowHub.domain.Rating)"], "Fixed commit": "f383299a81107483a991a844ca02ba9a8b667c2d", "Url": "https://api.github.com/repos/F13Group/KnowHub", "Date": "2015-10-28T14:29:47Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sourceBitmap != null) { canvas.drawBitmap(sourceBitmap, new android.graphics.Rect(0, 0, sourceBitmap.getWidth(), sourceBitmap.getHeight()), new android.graphics.Rect(0, 0, targetWidth, targetHeight), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4102/buggy-version/app.src.main.java.com.kavi.droid.exchange.services.imageLoader.ImageLoadingManager.java", "BodyUseAPI": ["android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getWidth()", "android.graphics.Canvas.drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,<nulltype>)"], "Fixed commit": "3429c52e9b078677a75b6b0f90c3b3498b4ad3b4", "Url": "https://api.github.com/repos/kavi707/Exchange-T", "Date": "2017-12-03T14:26:37Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((xmlNet.getBusVLimit()) != null) net.setDefaultVoltageLimit(new org.interpss.numeric.datatype.LimitType(xmlNet.getBusVLimit().getMax(), xmlNet.getBusVLimit().getMin()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2425/buggy-version/ipss.plugin.core.src.org.interpss.mapper.odm.impl.aclf.AbstractODMAclfNetMapper.java", "BodyUseAPI": ["org.ieee.odm.schema.LoadflowNetXmlType.getBusVLimit()", "com.interpss.core.aclf.BaseAclfNetwork<?, ?>.setDefaultVoltageLimit(org.interpss.numeric.datatype.LimitType)", "xmlNet.getBusVLimit().getMax()", "xmlNet.getBusVLimit().getMin()", "org.ieee.odm.schema.LoadflowNetXmlType.getBusVLimit()"], "Fixed commit": "159cf7cfca3645ec333e9b5d5f03473be8902aa8", "Url": "https://api.github.com/repos/InterPSS-Project/ipss-plugin", "Date": "2014-01-17T21:01:36Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "com.google.common.collect.ImmutableList.copyOf(com.imaginarycode.minecraft.advancedbungeeannouncer.AdvancedBungeeAnnouncer.getAnnouncements().values())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx >= (announcements.size())) { idx = 0; index.put(server, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3135/buggy-version/src.main.java.com.imaginarycode.minecraft.advancedbungeeannouncer.AnnouncingTask.java", "BodyUseAPI": [], "Fixed commit": "2117080063ccf47989b01841c5a1f7d7d10b3dae", "Url": "https://api.github.com/repos/thechunknetwork/AdvancedBungeeAnnouncer", "Date": "2014-11-05T13:29:57Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["forestry.core.utils.GeneticsUtil.getPollen(net.minecraft.world.World,net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (treeLeave != null) { if (treeLeave.setLeaves(worldIn, playerIn.getGameProfile(), pos)) { nursery = ((forestry.api.lepidopterology.IButterflyNursery) (worldIn.getTileEntity(pos))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6718/buggy-version/src.main.java.forestry.lepidopterology.items.ItemButterflyGE.java", "BodyUseAPI": ["forestry.api.arboriculture.ITree.setLeaves(net.minecraft.world.World,playerIn.getGameProfile(),net.minecraft.util.math.BlockPos)"], "Fixed commit": "36cd4663d9d5527f3f35fd7d999b726a757f786a", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2016-08-12T11:59:05Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/930/buggy-version/services.common.src.main.java.com.epam.dlab.dto.exploratory.ExploratoryGitCreds.java", "BodyUseAPI": [], "Fixed commit": "81e7a559ef7066920a94abf34882db04041ec923", "Url": "https://api.github.com/repos/epam/DLab", "Date": "2017-10-18T15:31:51Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof com.epam.dlab.dto.exploratory.ExploratoryGitCreds)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/930/buggy-version/services.common.src.main.java.com.epam.dlab.dto.exploratory.ExploratoryGitCreds.java", "BodyUseAPI": [], "Fixed commit": "81e7a559ef7066920a94abf34882db04041ec923", "Url": "https://api.github.com/repos/epam/DLab", "Date": "2017-10-18T15:31:51Z"},
{"Line": "=>2113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enable200OkDelay) { call.tell(message, self()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4334/buggy-version/restcomm.restcomm.interpreter.src.main.java.org.restcomm.connect.interpreter.VoiceInterpreter.java", "BodyUseAPI": [], "Fixed commit": "440bc2d4f599fd0f80f27d454bae2eccf95cb5d7", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2017-01-17T13:27:24Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((fansubName != null) && (fansubName.isEmpty())) { java.lang.String link = AnimeIndex.fansubMap.get(fansubName); if ((link != null) && (!(link.isEmpty()))) { fansubButton.setEnabled(true); }else fansubButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6034/buggy-version/src.util.window.AnimeInformation.java", "BodyUseAPI": ["AnimeIndex.fansubMap.get(java.lang.String)"], "Fixed commit": "c04acd08c9e3e3b78634cae3d0ea229e34287b58", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-07-26T14:42:07Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mapFragment != null) { mapFragment.setvisitLocationChallenge(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4413/buggy-version/app.src.main.java.hu.bme.museum.model.game.VisitLocation.java", "BodyUseAPI": ["hu.bme.museum.fragments.map.MapFragment.setvisitLocationChallenge(hu.bme.museum.model.game.VisitLocation)"], "Fixed commit": "5d8bbc4e1bfe58ab83e21ac09c987d3d3e1f2b1d", "Url": "https://api.github.com/repos/UjhelyiB/Museum", "Date": "2016-11-27T13:36:38Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(battery[1].replaceAll(\"[^0-9]\", \"\").equals(\"\"))) pcstatus.dataPackage.SingletonDynamicGeneralStats.getInstance().setBatteryPerc(battery[1].replaceAll(\"[^0-9]\", \"\")); else pcstatus.dataPackage.SingletonDynamicGeneralStats.getInstance().setBatteryPerc(\"-1\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2319/buggy-version/complete.src.main.java.pcstatus.dataPackage.BatteryStats.java", "BodyUseAPI": ["pcstatus.dataPackage.SingletonDynamicGeneralStats.getInstance().setBatteryPerc(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "0494005bfa9a41eb1f8c8946a91cc04928f26ed9", "Url": "https://api.github.com/repos/andrea9293/pcstatus", "Date": "2017-11-28T18:17:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(string.equals(\"\"))) pcstatus.dataPackage.SingletonDynamicGeneralStats.getInstance().setBatteryPerc(string);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2319/buggy-version/complete.src.main.java.pcstatus.dataPackage.jsonParser.java", "BodyUseAPI": [], "Fixed commit": "0494005bfa9a41eb1f8c8946a91cc04928f26ed9", "Url": "https://api.github.com/repos/andrea9293/pcstatus", "Date": "2017-11-28T18:17:22Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LIR.SymbolTable.findScopeLevel(varLoc.name)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (scopeLevel > 2) localVarName = (varLoc.name) + scopeLevel; else if ((symTab.findEntryGlobal((\"__p_\" + (varLoc.name)))) != null) localVarName = varLoc.name; else if (scopeLevel == 2) { LIR.ClassSymbol cs = ((LIR.ClassSymbol) (symTab.findEntryGlobal(currentThisClass))); LIR.FieldSymbol fs = null; try { fs = cs.getFieldSymbolRec(varLoc.name); } catch (LIR.SemanticError se) { } int fieldOffset = fs.getOffset(); str += (\"Move this, R\" + (curReg)) + \"\\n\"; return new LIR.LIRUpType(str, LIRAstNodeType.EXTERNALVARLOC, (((\"R\" + (curReg)) + \".\") + fieldOffset)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/501/buggy-version/SLP.src.LIR.LIRTranslator.java", "BodyUseAPI": [], "Fixed commit": "bd9427021b711f15c8f77577fe43e0202b8a659f", "Url": "https://api.github.com/repos/dorshalom/Copmilation_Ex3", "Date": "2015-12-26T17:25:57Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["marubinotto.piggydb.impl.H2FragmentRepository.getHome(boolean,marubinotto.piggydb.model.auth.User)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (home == null) return new java.util.ArrayList<marubinotto.piggydb.model.Fragment>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7301/buggy-version/src.main.java.marubinotto.piggydb.impl.H2FragmentRepository.java", "BodyUseAPI": [], "Fixed commit": "df7f581c4293a9bae7cce50d4aa75f25a1e4198c", "Url": "https://api.github.com/repos/marubinotto/Piggydb", "Date": "2013-01-14T08:38:56Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.in.SDTReader.getSizeX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((paddedWidth > sizeX) && ((planeSize * (getSizeC())) > blockSize)) && ((((planeSize / paddedWidth) * sizeX) * (getSizeC())) <= blockSize)) { paddedWidth = sizeX; planeSize = ((sizeX * sizeY) * times) * bpp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7288/buggy-version/components.formats-gpl.src.loci.formats.in.SDTReader.java", "BodyUseAPI": [], "Fixed commit": "a101699392b52182ad0d4cdbc7f79b84c0221119", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-02-22T17:51:56Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jooq.Record1<java.sql.Timestamp>.getValue(WORLDS.CREATED_AT)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (worldCreationTimestamp != null) { worldCreationTime = worldCreationTimestamp.getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7385/buggy-version/src.main.java.com.skelril.skree.service.internal.world.WorldServiceImpl.java", "BodyUseAPI": ["java.sql.Timestamp.getTime()"], "Fixed commit": "6077277400696ad59e36e1cf9307280294a30f38", "Url": "https://api.github.com/repos/Skelril/Skree", "Date": "2016-04-02T02:11:07Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (padding <= 0) { padding = (com.hyena.coretext.utils.Const.DP_1) * 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3500/buggy-version/library.src.main.java.com.hyena.coretext.blocks.CYEditFace.java", "BodyUseAPI": [], "Fixed commit": "8df09e40420194096b506e1161121f0656e61ca8", "Url": "https://api.github.com/repos/yangzc/AndroidCoreText", "Date": "2017-08-05T07:58:10Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (elements != null) { this.elements = new java.util.LinkedList(elements); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7272/buggy-version/Core.src.main.java.de.uka.ipd.sdq.beagle.core.facade.BeagleConfiguration.java", "BodyUseAPI": [], "Fixed commit": "d8ad75062f490d9f1d0b8bf2e9954e421d6bd0ba", "Url": "https://api.github.com/repos/Beagle-PSE/Beagle", "Date": "2016-02-14T00:05:38Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bytes > 0) && (bytes < (_webSocketHeaderSize))) { _webSocketHeaderSize -= bytes; }else { _underlyingOutput.pop(bytes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6389/buggy-version/proton-j.src.main.java.org.apache.qpid.proton.engine.impl.WebSocketImpl.java", "BodyUseAPI": ["org.apache.qpid.proton.engine.impl.TransportOutput.pop(int)"], "Fixed commit": "755fef4e9a74700ecdab8e3f6c4c1e9798c5914b", "Url": "https://api.github.com/repos/zolvarga/qpid-proton-j-websocket-support", "Date": "2016-04-14T21:59:24Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vitrivr.cineast.core.config.Config.sharedConfig().getRetriever().getMaxResultsPerModule()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((scores.size()) > limit) { return scores.subList(0, limit); }else { return scores; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/940/buggy-version/src.org.vitrivr.cineast.core.features.AverageColorRaster.java", "BodyUseAPI": ["java.util.ArrayList<org.vitrivr.cineast.core.data.score.ScoreElement>.subList(int,int)"], "Fixed commit": "5d1e05317907aa793db8d4e713df20728ea503de", "Url": "https://api.github.com/repos/vitrivr/cineast", "Date": "2017-04-24T12:28:46Z"},
{"Line": "=>2522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getProperty(CDKConstants.SINGLE_ELECTRON_COUNT)) != null) { int count = countSingleElectrons(container, atom); if (count != (type.getProperty(CDKConstants.SINGLE_ELECTRON_COUNT, java.lang.Integer.class).intValue())) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6201/buggy-version/base.core.src.main.java.org.openscience.cdk.atomtype.CDKAtomTypeMatcher.java", "BodyUseAPI": ["type.getProperty(CDKConstants.SINGLE_ELECTRON_COUNT, java.lang.Integer.class).intValue()", "org.openscience.cdk.interfaces.IAtomType.getProperty(CDKConstants.SINGLE_ELECTRON_COUNT,java.lang.Class)"], "Fixed commit": "1f8cd4559a95a3500f300cbb256f0752202fffdf", "Url": "https://api.github.com/repos/egonw/cdk", "Date": "2016-08-10T17:30:20Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["deviceIssueInfo.getUserActivity().iterator()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((iterator != null) && (!(iterator.hasNext()))) { userActityJsonArray = new org.json.simple.JSONArray(); userActivityJson = new org.json.simple.JSONObject(); userActivityJson.put(\"userName\", deviceIssueInfo.getUserInfo().getUserName()); userActivityJson.put(\"inTime\", com.ee.enigma.common.CommonUtils.displayTimeStringNA(com.ee.enigma.common.CommonUtils.getTimeStampFormatedString(deviceIssueInfo.getIssueTime()))); userActivityJson.put(\"outTime\", com.ee.enigma.common.CommonUtils.displayTimeStringNA(com.ee.enigma.common.CommonUtils.getTimeStampFormatedString(deviceIssueInfo.getSubmitTime()))); userActivityJson.put(\"duration\", com.ee.enigma.common.CommonUtils.displayTimeString(com.ee.enigma.common.CommonUtils.getTimeDiffernce(deviceIssueInfo.getIssueTime(), deviceIssueInfo.getSubmitTime()))); userActivityJson.put(\"useStatus\", \"Idle\"); userActityJsonArray.add(userActivityJson); issueIdJson.put(\"userActivities\", userActityJsonArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1359/buggy-version/Enigma.src.main.java.com.ee.enigma.dao.DeviceIssueHelper.java", "BodyUseAPI": [], "Fixed commit": "c77d50e91bbf5461ef10ad51855e735c7b94b8a6", "Url": "https://api.github.com/repos/EETeamM1/BackendRepository", "Date": "2016-07-31T09:05:27Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edge == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5320/buggy-version/src.main.java.de.uniko.sebschlicht.graphity.titan.Walker.java", "BodyUseAPI": [], "Fixed commit": "a43f8c53d0d4cf6c62dd8b888a391e04493052c0", "Url": "https://api.github.com/repos/sebschlicht/graphity-titan", "Date": "2015-04-03T16:43:35Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) != null) { nameLabel.setText(data.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4245/buggy-version/app.src.main.java.com.pxlweavr.drivr.InstrumentFragment.java", "BodyUseAPI": [], "Fixed commit": "e751a77d18dcb5f873912dd83ada253094013ab9", "Url": "https://api.github.com/repos/iandouglas96/drivR", "Date": "2016-08-17T00:17:47Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.seafile.seadroid2.data.DataManager.getCachedRepoByID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((repo != null) && (repo.canLocalDecrypt())) { mTxService.addTaskToUploadQue(account, repoID, repoName, targetDir, path, update, false, repo.encVersion); }else { mTxService.addUploadTask(account, repoID, repoName, targetDir, path, update, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8075/buggy-version/app.src.main.java.com.seafile.seadroid2.ui.activity.ShareToSeafileActivity.java", "BodyUseAPI": ["com.seafile.seadroid2.transfer.TransferService.addTaskToUploadQue(com.seafile.seadroid2.account.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,repo.encVersion)"], "Fixed commit": "c08280e5ffed7f1af0af8bc52d1a0ea40d0d22a3", "Url": "https://api.github.com/repos/Logan676/seadroid", "Date": "2016-07-17T05:31:10Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (readonly) { fieldTemplate.setDisplayerName(\"simpletext\"); }else { fieldTemplate.setDisplayerName(\"textarea\"); fieldTemplate.setMandatory(true); fieldTemplate.setReadOnly(readonly); fieldTemplate.addParameter(TextField.PARAM_MAXLENGTH, \"500\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8076/buggy-version/process-manager.process-manager-ejb.src.main.java.com.silverpeas.processManager.record.QuestionTemplate.java", "BodyUseAPI": ["com.silverpeas.form.record.GenericFieldTemplate.setReadOnly(boolean)"], "Fixed commit": "cdf7c94806067824d0da809ac78e76795339473f", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2013-11-04T14:57:42Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.value) != null) { this.value = this.value.applyState(state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1083/buggy-version/src.main.java.dyvil.tools.compiler.ast.field.Field.java", "BodyUseAPI": [], "Fixed commit": "6c5c1eefd5639bfcc2be3f70a42a3219a832dc69", "Url": "https://api.github.com/repos/Clashsoft/Dyvil", "Date": "2014-09-17T22:14:01Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rule.getPriority()) > (rulePriorityThreshold)) { logger.info(((((\"Rules priority threshold \" + (rulePriorityThreshold)) + \" exceeded at \") + (rule.getName())) + \", next applicable rules will be skipped.\")); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6495/buggy-version/easyrules-core.src.main.java.net.benas.easyrules.core.DefaultRulesEngine.java", "BodyUseAPI": ["java.util.logging.Logger.info(((((\"Rules priority threshold \" + (rulePriorityThreshold)) + \" exceeded at \") + (rule.getName())) + \", next applicable rules will be skipped.\"))", "net.benas.easyrules.core.Rule.getName()"], "Fixed commit": "d2133c26b99b23d3de68fb89126b4e9e62ae3657", "Url": "https://api.github.com/repos/benas/easy-rules", "Date": "2013-03-22T20:45:04Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (editTextFilename.equals(\"\")) { editTextFilename = mEditText.getHint().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5637/buggy-version/Paintroid.src.org.catrobat.paintroid.dialog.DialogSaveFile.java", "BodyUseAPI": [], "Fixed commit": "a5314335cc8389d9d95d4757f6f8d62423d2993d", "Url": "https://api.github.com/repos/Catrobat/Paintroid", "Date": "2013-08-28T09:02:40Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (model != null) { if (model.isStatus()) { if (model instanceof com.versatilemobitech.fmc.models.ForgotPasswordModel) { mForgotPasswordModel = ((com.versatilemobitech.fmc.models.ForgotPasswordModel) (model)); com.versatilemobitech.fmc.utility.Utility.showToastMessage(getActivity(), mForgotPasswordModel.getMessage()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5022/buggy-version/app.src.main.java.com.versatilemobitech.fmc.fragments.ChangePasswordFragment.java", "BodyUseAPI": ["com.versatilemobitech.fmc.models.Model.isStatus()"], "Fixed commit": "5f3821e5f69a7499d48b7799a7e370e31e2eb6af", "Url": "https://api.github.com/repos/sixscorpions/FMC", "Date": "2017-01-26T14:53:31Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.versatilemobitech.fmc.utility.Utility.isValueNullOrEmpty(etNewPasswordl.getText().toString().trim())) { com.versatilemobitech.fmc.utility.Utility.setSnackBarEnglish(mParent, etNewPasswordl, \"Please enter new password\"); etNewPasswordl.requestFocus(); }else if ((etNewPasswordl.getText().toString().trim().length()) < 6) { com.versatilemobitech.fmc.utility.Utility.setSnackBarEnglish(mParent, etNewPasswordl, \"New password should be minimum 6 characters\"); etNewPasswordl.requestFocus(); }else { isValidated = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5022/buggy-version/app.src.main.java.com.versatilemobitech.fmc.fragments.ChangePasswordFragment.java", "BodyUseAPI": ["etNewPasswordl.getText().toString()", "etNewPasswordl.getText().toString().trim().length()", "android.widget.EditText.requestFocus()", "com.versatilemobitech.fmc.utility.Utility.setSnackBarEnglish(com.versatilemobitech.fmc.activities.HomeActivity,android.widget.EditText,java.lang.String)", "etNewPasswordl.getText().toString().trim()", "android.widget.EditText.requestFocus()", "android.widget.EditText.getText()", "com.versatilemobitech.fmc.utility.Utility.setSnackBarEnglish(com.versatilemobitech.fmc.activities.HomeActivity,android.widget.EditText,java.lang.String)"], "Fixed commit": "5f3821e5f69a7499d48b7799a7e370e31e2eb6af", "Url": "https://api.github.com/repos/sixscorpions/FMC", "Date": "2017-01-26T14:53:31Z"},
{"Line": "=>1131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { android.widget.SimpleAdapter adapter = new android.widget.SimpleAdapter(getContext(), result, R.layout.dropdown, from, to); atvPlaces.setAdapter(adapter); googlePlacesresult.addAll(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/298/buggy-version/app.src.main.java.com.biglynx.fulfiller.ui.BroadCastFragment.java", "BodyUseAPI": ["java.util.List<java.util.HashMap<java.lang.String, java.lang.String>>.addAll(java.util.List<java.util.HashMap<java.lang.String, java.lang.String>>)"], "Fixed commit": "f837281dd679d9347f40581f9f15f9a170495ae4", "Url": "https://api.github.com/repos/JgdshSeerm/Fulfiller", "Date": "2017-03-06T13:56:15Z"},
{"Line": "=>1125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((googlePlacesresult) != null) && ((googlePlacesresult.size()) > 0)) googlePlacesresult.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/298/buggy-version/app.src.main.java.com.biglynx.fulfiller.ui.BroadCastFragment.java", "BodyUseAPI": ["java.util.List<java.util.HashMap<java.lang.String, java.lang.String>>.clear()"], "Fixed commit": "f837281dd679d9347f40581f9f15f9a170495ae4", "Url": "https://api.github.com/repos/JgdshSeerm/Fulfiller", "Date": "2017-03-06T13:56:15Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first_letter.equals(\"only\")) { return new org.elasticsearch.index.analysis.TokenStreamComponents(new org.elasticsearch.index.analysis.PinyinAbbreviationsTokenizer(reader)); }else { return new org.elasticsearch.index.analysis.TokenStreamComponents(new org.elasticsearch.index.analysis.PinyinTokenizer(reader, padding_char, first_letter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2207/buggy-version/src.main.java.org.elasticsearch.index.analysis.PinyinAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "ed11bb3502cf61dffad6e61e53ad256760ea0f0b", "Url": "https://api.github.com/repos/medcl/elasticsearch-analysis-pinyin", "Date": "2013-06-08T14:23:22Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getItemId()) == (R.id.action_change_fontsize)) { if ((changeFontsizeView.getVisibility()) != (android.view.View.VISIBLE)) { showFontsliderView(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6872/buggy-version/app.src.main.java.com.dawhey.mlij_blogapp.Fragments.ChapterFragment.java", "BodyUseAPI": [], "Fixed commit": "2383e54f6a729a8ecee992a711929c824e490855", "Url": "https://api.github.com/repos/dawhey/mlij-blog-reader", "Date": "2017-04-04T17:57:31Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((favorites.size()) == 0) { showNoFavsView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6872/buggy-version/app.src.main.java.com.dawhey.mlij_blogapp.Fragments.FavoritesFragment.java", "BodyUseAPI": [], "Fixed commit": "2383e54f6a729a8ecee992a711929c824e490855", "Url": "https://api.github.com/repos/dawhey/mlij-blog-reader", "Date": "2017-04-04T17:57:31Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uk.ac.openlab.radio.activities.ShowOverviewActivity.callersArrayList) != null) { uk.ac.openlab.radio.activities.ShowOverviewActivity.callersArrayList.clear(); uk.ac.openlab.radio.activities.ShowOverviewActivity.callersArrayList.addAll(callers.getCallers()); uk.ac.openlab.radio.activities.ShowOverviewActivity.callerListRecyclerView.post(new java.lang.Runnable() { @java.lang.Override public void run() { uk.ac.openlab.radio.activities.ShowOverviewActivity.callerListAdapter.notifyDataSetChanged(); uk.ac.openlab.radio.activities.ShowOverviewActivity.tvTotalCallers.setText((\"Total callers \" + ((callers.getListeners()) - 1))); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7303/buggy-version/app.src.main.java.uk.ac.openlab.radio.activities.ShowOverviewActivity.java", "BodyUseAPI": [], "Fixed commit": "e4cb34192849ff58f02bcb37b033372b89f20e11", "Url": "https://api.github.com/repos/deepak15013/Sangoshthi", "Date": "2016-06-21T16:50:45Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sos.joc.classes.orders.OrderVolatile.getOrder(dbTransferItem.getJobChain(),dbTransferItem.getOrderId(),boolean,com.sos.joc.classes.JOCResourceImpl)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (order == null) { throw new com.sos.joc.exceptions.YADERequestException(java.lang.String.format(\"The original transfer order %1$s,%2$s was not found on node %3$s!\", dbTransferItem.getJobChain(), dbTransferItem.getOrderId(), dbTransferItem.getJobChainNode())); }else { if (!(order.getState().equals(dbTransferItem.getJobChainNode()))) { throw new com.sos.joc.exceptions.YADERequestException(java.lang.String.format(\"The original transfer order %1$s,%2$s is on the job chain node %3$s but the node %4$s is expected.\", dbTransferItem.getJobChain(), dbTransferItem.getOrderId(), order.getState(), dbTransferItem.getJobChainNode())); } if ((order.getProcessingState().get_text()) != (com.sos.joc.model.order.OrderStateText.SUSPENDED)) { throw new com.sos.joc.exceptions.YADERequestException(java.lang.String.format(\"The original transfer order %1$s,%2$s has to be suspended\", dbTransferItem.getJobChain(), dbTransferItem.getOrderId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8359/buggy-version/webservice.src.main.java.com.sos.joc.classes.yade.TransferFileUtils.java", "BodyUseAPI": ["com.sos.joc.model.order.OrderV.getProcessingState()", "order.getProcessingState().get_text()", "com.sos.joc.model.order.OrderV.getState()", "order.getState().equals(dbTransferItem.getJobChainNode())", "java.lang.String.format(java.lang.String,dbTransferItem.getJobChain(),dbTransferItem.getOrderId(),order.getState(),dbTransferItem.getJobChainNode())", "com.sos.joc.model.order.OrderV.getState()"], "Fixed commit": "060b4ef3d983276cf4903476071e275bac629f55", "Url": "https://api.github.com/repos/sos-berlin/joc", "Date": "2017-12-18T07:40:17Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.equals(PredefinedType.NOT_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.NOT; }else if (name.equals(PredefinedType.AS_SET_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.AS_SET; }else if (name.equals(PredefinedType.AS_SEQUENCE_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.AS_SEQUENCE; }else if (name.equals(PredefinedType.AS_ORDERED_SET_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.AS_ORDERED_SET; }else if (name.equals(PredefinedType.AS_BAG_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.AS_BAG; }else if (name.equals(PredefinedType.FLATTEN_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.FLATTEN; }else if (name.equals(PredefinedType.CONCAT_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.CONCAT; }else if (name.equals(PredefinedType.MINUS_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.MINUS; }else if (name.equals(PredefinedType.FIRST_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.FIRST; }else if (name.equals(PredefinedType.LAST_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.LAST; }else if (name.equals(PredefinedType.AT_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.AT; }else if (name.equals(PredefinedType.INCLUDING_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.INCLUDING; }else if (name.equals(PredefinedType.OCL_IS_INVALID_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.OCL_IS_INVALID; }else if (name.equals(PredefinedType.OCL_IS_UNDEFINED_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.OCL_IS_UNDEFINED; }else if (name.equals(PredefinedType.IS_EMPTY_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.IS_EMPTY; }else if (name.equals(PredefinedType.UNION_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.UNION; }else if (name.equals(PredefinedType.SIZE_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.SIZE; }else if (name.equals(PredefinedType.INDEX_OF_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.INDEX_OF; }else if (name.equals(PredefinedType.INCLUDES_NAME)) { return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.INCLUDES; }else { org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.logger.warning(java.lang.String.format(\"Not yet implemented, '%s'\", name)); return org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/939/buggy-version/framework.java-generation-ocl.src.main.java.org.umlg.javageneration.ocl.visitor.OclOperationExpEnum.java", "BodyUseAPI": ["java.lang.String.equals(PredefinedType.AS_ORDERED_SET_NAME)", "java.lang.String.equals(PredefinedType.AS_BAG_NAME)", "java.lang.String.equals(PredefinedType.UNION_NAME)", "java.lang.String.equals(PredefinedType.IS_EMPTY_NAME)", "java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.String.equals(PredefinedType.FLATTEN_NAME)", "java.lang.String.equals(PredefinedType.AT_NAME)", "java.lang.String.equals(PredefinedType.CONCAT_NAME)", "java.lang.String.equals(PredefinedType.AS_SET_NAME)", "java.lang.String.equals(PredefinedType.AS_SEQUENCE_NAME)", "java.lang.String.equals(PredefinedType.LAST_NAME)", "java.lang.String.equals(PredefinedType.INCLUDING_NAME)", "java.util.logging.Logger.warning(java.lang.String)", "java.lang.String.equals(PredefinedType.OCL_IS_INVALID_NAME)", "java.lang.String.equals(PredefinedType.INCLUDES_NAME)", "java.lang.String.equals(PredefinedType.INDEX_OF_NAME)", "java.lang.String.equals(PredefinedType.FIRST_NAME)", "java.lang.String.equals(PredefinedType.OCL_IS_UNDEFINED_NAME)", "java.lang.String.equals(PredefinedType.SIZE_NAME)", "java.lang.String.equals(PredefinedType.MINUS_NAME)"], "Fixed commit": "c06e358300d1fb7f554f0c57cbeed60515394bc9", "Url": "https://api.github.com/repos/pietermartin/umlg", "Date": "2014-03-18T19:54:40Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["framework.scuba.domain.LocalVarLocFactory.f().findLocalVarLoc(joeq.Compiler.Quad.RegisterFactory.Register)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (local == null) { return new java.util.HashSet<framework.scuba.domain.AllocLoc>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1731/buggy-version/src.framework.scuba.analyses.alias.P2SetQuerier.java", "BodyUseAPI": [], "Fixed commit": "075f4cf1d4b977e6f58575f35be1c2ec10fc2960", "Url": "https://api.github.com/repos/xwangsd/Scuba", "Date": "2014-08-22T18:26:11Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(owner.inUse())) && (!(record.inUse()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4776/buggy-version/enterprise.consistency-check.src.main.java.org.neo4j.consistency.checking.OwnerChain.java", "BodyUseAPI": [], "Fixed commit": "c8aedc2948a94e403f7e2f2bd498736179b23a7d", "Url": "https://api.github.com/repos/digitalstain/neo4j", "Date": "2014-08-21T17:35:31Z"},
{"Line": "=>4021", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/31/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "668067ce4ecc82cf7e853a4273719a33ca89b1aa", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-08-31T04:27:39Z"},
{"Line": "=>829", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addedCount >= 0) { ankiDB.getDatabase().setTransactionSuccessful(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7338/buggy-version/src.com.ichi2.async.DeckTask.java", "BodyUseAPI": [], "Fixed commit": "b5890c071edc4266e49d7babfa2173384442e123", "Url": "https://api.github.com/repos/ankidroid/Anki-Android", "Date": "2014-11-05T02:11:29Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isDeposit) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4156/buggy-version/Deliverable_2.src.rental.g3.Car.java", "BodyUseAPI": [], "Fixed commit": "23733874792bc366a44ebfc83032536120755590", "Url": "https://api.github.com/repos/harshilgandhi/PPS-Group-3-One-Way-Rental", "Date": "2012-09-17T17:00:31Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { setIndeterminateDrawable(new me.zhanghai.android.materialprogressbar.IndeterminateHorizontalProgressDrawable(context)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4279/buggy-version/library.src.main.java.me.zhanghai.android.materialprogressbar.MaterialProgressBar.java", "BodyUseAPI": [], "Fixed commit": "f81de62baa9f92d3524088e35c8046c45de96d76", "Url": "https://api.github.com/repos/DreaminginCodeZH/MaterialProgressBar", "Date": "2016-07-05T02:51:04Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInEditMode())) { setIndeterminateDrawable(new me.zhanghai.android.materialprogressbar.IndeterminateProgressDrawable(context)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4279/buggy-version/library.src.main.java.me.zhanghai.android.materialprogressbar.MaterialProgressBar.java", "BodyUseAPI": [], "Fixed commit": "f81de62baa9f92d3524088e35c8046c45de96d76", "Url": "https://api.github.com/repos/DreaminginCodeZH/MaterialProgressBar", "Date": "2016-07-05T02:51:04Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.basex.query.func.FNPat.checkStr(expr[2],org.basex.query.func.QueryContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((rep[i]) == '$') && ((i == 0) || ((rep[(i - 1)]) != '\\\\'))) && (((i + 1) == (rep.length)) || (!(digit(rep[(i + 1)]))))) org.basex.query.func.FUNREPDOL.thrw(info);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3089/buggy-version/src.main.java.org.basex.query.func.FNPat.java", "BodyUseAPI": [], "Fixed commit": "d1e5d3ecc66180a08084ddcdef0eebdc8785f168", "Url": "https://api.github.com/repos/dirkk/basex", "Date": "2012-08-23T04:12:11Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.info.getTargets().size()) != 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7208/buggy-version/src.main.java.org.spongepowered.asm.mixin.injection.callback.CallbackInjector.java", "BodyUseAPI": [], "Fixed commit": "ccf3ae38b06d8dd7ed79e5bbd2f3a636e4aa065f", "Url": "https://api.github.com/repos/simon816/Mixin", "Date": "2015-03-29T21:29:03Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((serviceManager.getConfig().getProperty((serviceName + \".serviceType\"))) == null) { }else if ((serviceManager.getConfig().getProperty((serviceName + \".serviceType\")).toString().equals(\"SUBSCRIBER\")) || (serviceManager.getConfig().getProperty((serviceName + \".serviceType\")).toString().equals(\"PUBLISHER\"))) { }else { serviceConfig = elsu.network.factory.ServiceConfig.LoadConfig(serviceManager.getConfig(), serviceName); if (serviceName.equals(\"controlService\")) { if ((serviceConfig.getStartupType()) != (ServiceStartupType.DISABLED)) { serviceManager.logInfo(((\".. service loaded (\" + serviceName) + \")\")); service = new elsu.network.factory.ControlService(serviceManager, serviceConfig); ((elsu.network.factory.IEventPublisher) (service)).addEventListener(serviceManager); serviceManager.addEventListener(((elsu.network.factory.IEventSubscriber) (service))); serviceManager.addService(service); } }else if ((serviceConfig.getStartupType()) != (ServiceStartupType.DISABLED)) { serviceManager.logInfo(((\".. service loaded (\" + serviceName) + \")\")); java.lang.Class<?> serviceClass = java.lang.Class.forName(serviceConfig.getServiceClass()); java.lang.Class<?>[] argTypes = new java.lang.Class<?>[]{ java.lang.String.class, elsu.network.factory.ServiceManager.class, elsu.network.factory.ServiceConfig.class }; java.lang.reflect.Constructor<?> cons = serviceClass.getDeclaredConstructor(argTypes); java.lang.Object[] arguments = new java.lang.Object[]{ serviceConfig.getServiceClass(), serviceManager, serviceConfig }; service = ((elsu.network.factory.IService) (cons.newInstance(arguments))); ((elsu.network.factory.IEventPublisher) (service)).addEventListener(serviceManager); serviceManager.addEventListener(((elsu.network.factory.IEventSubscriber) (service))); serviceManager.addService(service); } java.lang.Thread.yield(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5178/buggy-version/ElsuNetworkServices.src.elsu.network.factory.ServiceFactory.java", "BodyUseAPI": ["serviceManager.getConfig().getProperty((serviceName + \".serviceType\")).toString().equals(java.lang.String)", "elsu.network.factory.ServiceManager.getConfig()", "elsu.network.factory.ServiceManager.getConfig()", "elsu.network.factory.ServiceManager.addService(elsu.network.factory.IService)", "elsu.network.factory.ServiceManager.addService(elsu.network.factory.IService)", "elsu.network.factory.ServiceManager.addEventListener(elsu.network.factory.IService)", "elsu.network.factory.ServiceManager.getConfig()", "elsu.network.factory.ServiceConfig.LoadConfig(serviceManager.getConfig(),java.lang.String)", "elsu.network.factory.IService.addEventListener(elsu.network.factory.ServiceManager)", "serviceManager.getConfig().getProperty((serviceName + \".serviceType\")).toString().equals(java.lang.String)", "elsu.network.factory.IService.addEventListener(elsu.network.factory.ServiceManager)", "java.lang.String.equals(java.lang.String)", "serviceManager.getConfig().getProperty((serviceName + \".serviceType\")).toString()", "serviceManager.getConfig().getProperty(java.lang.String)", "elsu.network.factory.ServiceManager.logInfo(java.lang.String)", "elsu.network.factory.ServiceManager.addEventListener(elsu.network.factory.IService)", "serviceManager.getConfig().getProperty(java.lang.String)", "serviceManager.getConfig().getProperty((serviceName + \".serviceType\")).toString()", "elsu.network.factory.ServiceManager.logInfo(java.lang.String)"], "Fixed commit": "70046a05c783a7482e9b79cce6c5b96fd40706f2", "Url": "https://api.github.com/repos/ssdhaliwal/ElsuNetworkServices", "Date": "2015-12-27T19:27:40Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(json.isJsonObject())) { return storage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/467/buggy-version/core.src.main.java.com.stateshifterlabs.achievementbooks.SA.SaveDataDeserializer.java", "BodyUseAPI": [], "Fixed commit": "043152a009bc1d5885f05fb18d16e951a2cd4696", "Url": "https://api.github.com/repos/meza/achievementbooks", "Date": "2017-03-30T12:32:13Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.io.FileReader,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return new com.stateshifterlabs.achievementbooks.data.AchievementStorage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/467/buggy-version/1.7.10.src.main.java.com.stateshifterlabs.achievementbooks.data.compatibility.SA.SA.java", "BodyUseAPI": [], "Fixed commit": "043152a009bc1d5885f05fb18d16e951a2cd4696", "Url": "https://api.github.com/repos/meza/achievementbooks", "Date": "2017-03-30T12:32:13Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.io.FileReader,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return new com.stateshifterlabs.achievementbooks.data.AchievementStorage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/467/buggy-version/1.10.2.src.main.java.com.stateshifterlabs.achievementbooks.data.compatibility.SA.SA.java", "BodyUseAPI": [], "Fixed commit": "043152a009bc1d5885f05fb18d16e951a2cd4696", "Url": "https://api.github.com/repos/meza/achievementbooks", "Date": "2017-03-30T12:32:13Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nkanaev.comics.activity.MainActivity.getSupportFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((fragmentManager.getBackStackEntryCount()) >= 1) { fragmentManager.popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3297/buggy-version/app.src.main.java.com.nkanaev.comics.activity.MainActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentManager.popBackStack(<nulltype>,FragmentManager.POP_BACK_STACK_INCLUSIVE)"], "Fixed commit": "a178a9def688952aa68a5d5e85a15a0c044c9ccb", "Url": "https://api.github.com/repos/nkanaev/bubble", "Date": "2015-08-17T10:10:44Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commitId == null) { pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.logger.warn(\"Mapping tx {} to NULL commitId!\", txVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6444/buggy-version/backend.jvstm-lf.runtime.src.main.java.pt.ist.fenixframework.backend.jvstm.repository.LockFreeRepository.java", "BodyUseAPI": [], "Fixed commit": "17de223fb7846dc5385d953d215459109db66bc1", "Url": "https://api.github.com/repos/smmf/fenix-framework", "Date": "2013-10-21T22:49:21Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((double) (companyNameLength)) / keywordCompanyNameLength) > 0.35) { minDistance = 4; keyword_company_name = entry.getKey(); keyword_company_symbol = entry.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3097/buggy-version/agents.web-api.src.main.java.edu.jhuapl.dorset.agents.StockAgent.java", "BodyUseAPI": [], "Fixed commit": "eee764b3f3457bdde2ee658edb7bf0eb599ffabf", "Url": "https://api.github.com/repos/cabishop/dorset-framework", "Date": "2016-04-06T13:39:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children) == null) return java.util.Collections.unmodifiableCollection(new java.util.ArrayList<org.zachtaylor.jnodalxml.XMLNode>());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8463/buggy-version/src.org.zachtaylor.jnodalxml.XMLNode.java", "BodyUseAPI": [], "Fixed commit": "e4f6dd0707fd779eab979901236151d7e4d90684", "Url": "https://api.github.com/repos/zachtaylor/JNodalXML", "Date": "2013-04-28T22:50:32Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listRouteSummary) == null) { listRouteSummary = br.edu.ufcg.analytics.meliorbusao.db.DBUtils.getSumarioTodasAsRotas(getContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3654/buggy-version/mobile.src.main.java.br.edu.ufcg.analytics.meliorbusao.fragments.TopBusFragment.java", "BodyUseAPI": [], "Fixed commit": "4e20fe53c36ad7cf2a863cff30b922eecaf698b7", "Url": "https://api.github.com/repos/analytics-ufcg/melhorbusao-app", "Date": "2017-05-23T12:30:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((anExpectedResult.getValue()) instanceof de.gebit.integrity.dsl.NullValue) { tempIsNull = true; }else { de.gebit.integrity.dsl.VariableOrConstantEntity tempEntity = de.gebit.integrity.utils.IntegrityDSLUtil.extractVariableOrConstantEntity(anExpectedResult.getValue()); if (tempEntity != null) { java.lang.Object tempResult = parameterResolver.resolveParameterValue(anExpectedResult, UnresolvableVariableHandling.RESOLVE_TO_NULL_VALUE); tempIsNull = (tempResult == null) || (tempResult instanceof de.gebit.integrity.dsl.NullValue); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6180/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.comparator.DefaultResultComparator.java", "BodyUseAPI": ["de.gebit.integrity.parameter.resolving.ParameterResolver.resolveParameterValue(de.gebit.integrity.dsl.ValueOrEnumValueOrOperationCollection,UnresolvableVariableHandling.RESOLVE_TO_NULL_VALUE)", "de.gebit.integrity.dsl.ValueOrEnumValueOrOperationCollection.getValue()", "de.gebit.integrity.utils.IntegrityDSLUtil.extractVariableOrConstantEntity(anExpectedResult.getValue())"], "Fixed commit": "b18bb617bb9432a56602ab77c8d35a8771185892", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2016-06-20T11:51:40Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["comp.Compiler.statementList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (stmts != null) { for (int i = 0; i < (stmts.size()); ++i) { if (\"ReturnStatement\".equals(stmts.get(i).getClass().getSimpleName())) { haveReturn = true; comp.ReturnStatement returnStmt = ((comp.ReturnStatement) (stmts.get(i))); if (((returnStmt.getExpr()) == null) || (((returnStmt.getExpr()) != null) && (!(returnStmt.getExpr().getType().getName().equals(type.getName()))))) signalError.showError(((\"Illegal 'return' statement. Method returns '\" + (type.getName())) + \"'\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6798/buggy-version/src.comp.Compiler.java", "BodyUseAPI": ["stmts.get(i).getClass()", "java.util.ArrayList<comp.Statement>.size()", "java.util.ArrayList<comp.Statement>.get(int)", "java.lang.String.equals(stmts.get(i).getClass().getSimpleName())", "java.util.ArrayList<comp.Statement>.get(int)", "stmts.get(i).getClass().getSimpleName()"], "Fixed commit": "80cb3a07568c8e4391336cb696282b28b96ce45a", "Url": "https://api.github.com/repos/ReisPires/LabCompila", "Date": "2017-09-18T19:53:06Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ac.soton.eventb.statemachinesJ.generator.utils.Utils.getStartingState(ac.soton.eventb.statemachines.Statemachine)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (target == null) return ret;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4899/buggy-version/ac.soton.eventb.statemachinesJ.generator.src.ac.soton.eventb.statemachinesJ.generator.enumRules.Transition2InitActionsActiveRule.java", "BodyUseAPI": [], "Fixed commit": "d4fe9e29b373961ec21b761d892fd0efa8e41f96", "Url": "https://api.github.com/repos/mgt1g13/Statemachine-Java-Generator", "Date": "2014-06-27T13:06:30Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((init.getTarget()) instanceof ac.soton.eventb.statemachines.State) target = ((ac.soton.eventb.statemachines.State) (init.getTarget())); else if ((init.getTarget()) instanceof ac.soton.eventb.statemachines.Fork) { for (ac.soton.eventb.statemachines.Transition t : ((ac.soton.eventb.statemachines.Fork) (init.getTarget())).getOutgoing()) ret.addAll(generateActive(t, event)); return ret; }else return ret;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4899/buggy-version/ac.soton.eventb.statemachinesJ.generator.src.ac.soton.eventb.statemachinesJ.generator.rules.Initial2InitActionsRule.java", "BodyUseAPI": ["ac.soton.eventb.statemachines.Transition.getTarget()", "ac.soton.eventb.statemachines.Transition.getTarget()", "((ac.soton.eventb.statemachines.Fork) (init.getTarget())).getOutgoing()", "ac.soton.eventb.statemachines.Transition.getTarget()"], "Fixed commit": "d4fe9e29b373961ec21b761d892fd0efa8e41f96", "Url": "https://api.github.com/repos/mgt1g13/Statemachine-Java-Generator", "Date": "2014-06-27T13:06:30Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (myParam == null) { if (myParamType.isPrimitive()) return false; }else { if (!(toWrapperType(myParamType).isInstance(myParam))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5782/buggy-version/src.main.java.org.ximplementation.support.DefaultImplementeeMethodInvocationInfoEvaluator.java", "BodyUseAPI": ["java.lang.Class<?>.isInstance(java.lang.Object)"], "Fixed commit": "9bc6f157a609fba02a4a1dbbeca2fecd9a8fd5e7", "Url": "https://api.github.com/repos/ximplementation/ximplementation", "Date": "2016-09-01T07:48:58Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scanResult.getCount()) == 0) { item.setLocation(\"Item is not in database\"); }else { item.setLocation(scanResult.getItems().get(0).get(\"ItemLocation\").toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3982/buggy-version/ShoptimizeApp.app.src.main.java.com.cs320.shoptimize.shoptimizeapp.DBItemList.java", "BodyUseAPI": ["scanResult.getItems().get(0).get(\"ItemLocation\").toString()", "scanResult.getItems().get(int)", "com.amazonaws.services.dynamodbv2.model.ScanResult.getItems()", "com.cs320.shoptimize.shoptimizeapp.Item.setLocation(scanResult.getItems().get(0).get(\"ItemLocation\").toString())", "scanResult.getItems().get(0).get(java.lang.String)"], "Fixed commit": "368bb3aa93e2ae8d84f85baa2ce3287f666c37e3", "Url": "https://api.github.com/repos/gmarkv10/Shoptimize", "Date": "2015-03-18T22:36:35Z"},
{"Line": "=>1307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBlank(text)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8812/buggy-version/oscm-serviceprovisioning.javasrc.org.oscm.serviceprovisioningservice.bean.TechnicalProductImportParser.java", "BodyUseAPI": [], "Fixed commit": "298186032cabf89ec5c075380cf9846072f03962", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-04-08T09:48:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getRawSlot()) > (container.getChest().getInventory().getSize())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8439/buggy-version/com.tenny1028.vanillatrade.events.PlayerInventoryInteractEventHandler.java", "BodyUseAPI": [], "Fixed commit": "339fcc00c98ad50b281180211b5d1a9d40b74cf1", "Url": "https://api.github.com/repos/DrOverbuild/VanillaTrade", "Date": "2016-06-10T23:35:39Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.seafile.seadroid2.util.Utils.isNetworkOn())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4562/buggy-version/src.com.seafile.seadroid2.ui.fragment.ReposFragment.java", "BodyUseAPI": [], "Fixed commit": "da7405deabb6d645b6cdf4809ccc95b0871caee6", "Url": "https://api.github.com/repos/amuttsch/seadroid", "Date": "2014-11-30T18:30:09Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.seafile.seadroid2.util.Utils.isNetworkOn())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4562/buggy-version/src.com.seafile.seadroid2.ui.fragment.ReposFragment.java", "BodyUseAPI": [], "Fixed commit": "da7405deabb6d645b6cdf4809ccc95b0871caee6", "Url": "https://api.github.com/repos/amuttsch/seadroid", "Date": "2014-11-30T18:30:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Integer.toString(idpostevent)) != null) { intent.putExtra(\"idFromPostEvent\", java.lang.String.valueOf(idpostevent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2507/buggy-version/app.src.main.java.fr.android.app.androidproject.PostEvents.SeeFullPicture.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "400c264ca7f56ceb5046d2b441dac1bac3409136", "Url": "https://api.github.com/repos/MarieBiau/AndroidProject", "Date": "2017-11-23T21:29:12Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((javaMajorVersion()) >= 6) { table.setAutoCreateRowSorter(false); table.setRowSorter(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2804/buggy-version/gui.src.java.com.robonobo.gui.components.TrackList.java", "BodyUseAPI": [], "Fixed commit": "2612362604b071767f4255ea8eb8ad8bc2644ce5", "Url": "https://api.github.com/repos/macavity23/robonobo", "Date": "2011-06-21T19:37:12Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent.counter) < 20000) { doubleLength = (itemsSWT.length) * 2; }else { doubleLength = (itemsSWT.length) + 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3499/buggy-version/src.org.nschmidt.ldparteditor.widgets.TreeItem.java", "BodyUseAPI": [], "Fixed commit": "d86afe525d8ea31cc5c9d51d6bd6165286fcf05d", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-28T19:11:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmd.equals(\"M112\")) { com.reprap.bluetooth.ReceiveActivity._lastCmd = null; com.reprap.bluetooth.ReceiveActivity._lastNCmd = null; com.reprap.bluetooth.ReceiveActivity._cmdLineNum = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5484/buggy-version/src.com.reprap.bluetooth.ReceiveActivity.java", "BodyUseAPI": [], "Fixed commit": "91e05683832330993be5a9e989caf96ff584d13d", "Url": "https://api.github.com/repos/JohnCrash/bluetoothReprap", "Date": "2015-03-03T11:15:09Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.numberOfFiles) == \"\") || ((this.numberOfFiles) == null)) { this.numberOfFiles = \"1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7806/buggy-version/src.main.java.com.jamesloyd.foldergenutility.SimpleFolder.java", "BodyUseAPI": [], "Fixed commit": "ae29b4e7aec5337c78025142a6abf902d08a3c03", "Url": "https://api.github.com/repos/carharttjimmy/FolderGenUtility", "Date": "2014-05-17T00:57:29Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMachineNode()) != null) { for (int i = 0; i < (com.teotigraphix.caustk.node.effect.EffectsChannel.NUM_SLOTS); i++) { com.teotigraphix.caustk.node.effect.EffectType type = com.teotigraphix.caustk.node.effect.EffectType.fromInt(((int) (EffectsRackMessage.TYPE.send(getRack(), getMachineIndex(), i)))); if (type != null) { com.teotigraphix.caustk.node.effect.EffectNode effect; try { effect = createEffect(i, type); effect.restore(); } catch (com.teotigraphix.caustk.core.CausticException e) { getLogger().err(\"EffectsChannelNode\", e.getMessage()); } } } }else if ((masterNode) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8634/buggy-version/Caustk.src-core.com.teotigraphix.caustk.node.effect.EffectsChannel.java", "BodyUseAPI": [], "Fixed commit": "e199b54aa503e5e4532ddd51a1db9575df1418dc", "Url": "https://api.github.com/repos/teotigraphix/CausticSDK", "Date": "2014-10-01T11:29:01Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsNightMode) { mToolbar.setBackgroundColor(android.support.v4.content.ContextCompat.getColor(this, R.color.black)); title.setTextColor(android.support.v4.content.ContextCompat.getColor(this, R.color.white)); audioContainer.setBackgroundColor(android.support.v4.content.ContextCompat.getColor(this, R.color.night)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4813/buggy-version/folioreader.src.main.java.com.folioreader.ui.folio.activity.FolioActivity.java", "BodyUseAPI": [], "Fixed commit": "6bf647c3ddd9fb700f3a2d8267cfb5c0ecb13600", "Url": "https://api.github.com/repos/codetoart/FolioReader-Android", "Date": "2017-07-26T00:05:42Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(type.equals(BuildingsType.SHOPS))) { switch (type) { case ALL : { return \"(node[wheelchair];way[wheelchair];relation[wheelchair];);out geom;\"; } default : return java.lang.String.format(\"(node[wheelchair][\\\"amenity\\\"=\\\"%1$s\\\"];way[wheelchair][\\\"amenity\\\"=\\\"%1$s\\\"];relation[wheelchair][\\\"amenity\\\"=\\\"%1$s\\\"];); out geom;\", type.getUrlQueryType()); } }else { return java.lang.String.format(\"(node[wheelchair][\\\"%1$s\\\"];way[wheelchair][\\\"%1$s\\\"];relation[wheelchair][\\\"%1$s\\\"];); out geom;\", type.getUrlQueryType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4325/buggy-version/app.src.main.java.com.igorko.accesibleif.manager.URLManager.java", "BodyUseAPI": ["com.igorko.accesibleif.manager.BuildingsType.getUrlQueryType()", "com.igorko.accesibleif.manager.BuildingsType.getUrlQueryType()", "java.lang.String.format(java.lang.String,type.getUrlQueryType())", "java.lang.String.format(java.lang.String,type.getUrlQueryType())"], "Fixed commit": "8aae8c0ce75148242fa0f0c2bf5b3316747ad588", "Url": "https://api.github.com/repos/SoftJourn/friendlyIf_android", "Date": "2017-02-24T08:44:58Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(defaultText))) editText.setText(defaultText);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8134/buggy-version/autofilledittext.src.main.java.com.tincher.autofilledittext.AutoFillEditText.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "fba8400eb410b999c45a5e2b831667b976a8440e", "Url": "https://api.github.com/repos/Dkaishu/AutoFillEditText", "Date": "2017-08-26T03:29:45Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"0\".equals(latestRunId)) { fi.thl.pivot.datasource.AmorDao.LOG.warn(java.lang.String.format(\"Could not find run id for %s\", com.google.common.collect.Lists.newArrayList(params).toString())); throw new fi.thl.pivot.exception.CubeNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5847/buggy-version/src.main.java.fi.thl.pivot.datasource.AmorDao.java", "BodyUseAPI": [], "Fixed commit": "b96a283de980042630c2a06bfa1093465afdec48", "Url": "https://api.github.com/repos/THLfi/tiku", "Date": "2017-11-18T09:53:25Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.giswater.dao.MainDao.checkSchema(org.giswater.dao.MainDao.getSchema()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3358/buggy-version/src.org.giswater.controller.ProjectPreferencesController.java", "BodyUseAPI": [], "Fixed commit": "6bace424b329fb4c3e62d0615e438ab4dfed0895", "Url": "https://api.github.com/repos/Giswater/giswater", "Date": "2017-10-25T10:02:25Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ex.isAdaptive())) { java.lang.String color = getColor(ex); map.put(ex.getName(), color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2890/buggy-version/tmc-plugin.src.fi.helsinki.cs.tmc.timeline.TimelineJson.java", "BodyUseAPI": ["fi.helsinki.cs.tmc.core.domain.Exercise.getName()", "fi.helsinki.cs.tmc.timeline.TimelineJson.getColor(fi.helsinki.cs.tmc.core.domain.Exercise)", "java.util.TreeMap<java.lang.String, java.lang.String>.put(ex.getName(),java.lang.String)"], "Fixed commit": "5bfe3311e668d4400b13a696be328b51df79efc3", "Url": "https://api.github.com/repos/testmycode/tmc-netbeans", "Date": "2017-06-16T10:32:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.String) { builder.append(\"\\\"\").append(value).append(\"\\\"\"); }else { builder.append(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6531/buggy-version/src.main.java.de.arraying.kotys.JSONFormatter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.Object)"], "Fixed commit": "8d66b3957337ac3ea7aace21de07792434056221", "Url": "https://api.github.com/repos/Arraying/Kotys", "Date": "2017-11-29T20:05:38Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getSource().getId()) != null) { com.ckai.grocery.product.Product po = repository.findOne(event.getSource().getId()); if (po != null) { event.getSource().setCreatedAt(po.getCreatedAt()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3741/buggy-version/grocery-product-service.src.main.java.com.ckai.grocery.product.ProductConvertListener.java", "BodyUseAPI": ["org.springframework.data.mongodb.core.mapping.event.BeforeConvertEvent<com.ckai.grocery.product.Product>.getSource()", "event.getSource().getId()", "com.ckai.grocery.product.ProductRepository.findOne(event.getSource().getId())", "event.getSource().setCreatedAt(po.getCreatedAt())", "org.springframework.data.mongodb.core.mapping.event.BeforeConvertEvent<com.ckai.grocery.product.Product>.getSource()"], "Fixed commit": "8d570553f51a7955985647151d17b07e3da86844", "Url": "https://api.github.com/repos/xmkevinchen/grocery", "Date": "2016-12-27T22:25:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((greenParking.mRateHalfHour) != null) { final java.lang.String priceString = java.lang.String.format(Parking.PRICE, greenParking.mRateHalfHour); remoteViews.setTextViewText(R.id.list_item_green_parking_price, priceString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/367/buggy-version/src.org.cityspot.CitySpotService.java", "BodyUseAPI": ["java.lang.String.format(Parking.PRICE,greenParking.mRateHalfHour)"], "Fixed commit": "fccae7f257d15d34022c6f6e24dbf8ebef95b5be", "Url": "https://api.github.com/repos/EmirWeb/CitySpot", "Date": "2014-08-23T18:00:08Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldIn.isRemote)) { net.minecraft.world.WorldServer worldServer = ((net.minecraft.world.WorldServer) (worldIn)); worldServer.spawnParticle(EnumParticleTypes.FALLING_DUST, ((entityIn.posX) + (((random.nextDouble()) * 1) - 0.5)), (((entityIn.posY) + 1) + (((random.nextDouble()) * 2) - 1)), ((entityIn.posZ) + (((random.nextDouble()) * 1) - 0.5)), 1, 0, 0, 0, 0, new int[]{ 88 }); particleDelay = 1 + (random.nextInt(4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5189/buggy-version/src.main.java.com.epolixa.bityard.block.BlockSoulGlass.java", "BodyUseAPI": [], "Fixed commit": "83e5b6976423669ec49dfb41da705c2ff85f5435", "Url": "https://api.github.com/repos/epolixa/Bityard", "Date": "2017-06-18T23:31:53Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tile == to) { currentNode = to; }else if (((com.brimstonetower.game.helpers.PathFinder.fScores.get(tile)) < smallestFScore) && ((tile.getObject()) == null)) { smallestFScore = com.brimstonetower.game.helpers.PathFinder.fScores.get(tile); currentNode = tile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2492/buggy-version/core.src.com.brimstonetower.game.helpers.PathFinder.java", "BodyUseAPI": ["java.util.HashMap<com.brimstonetower.game.map.Tile, java.lang.Float>.get(com.brimstonetower.game.map.Tile)", "com.brimstonetower.game.map.Tile.getObject()", "java.util.HashMap<com.brimstonetower.game.map.Tile, java.lang.Float>.get(com.brimstonetower.game.map.Tile)"], "Fixed commit": "2df888cd4e2c3107b52469e64d910a175bb3b0d1", "Url": "https://api.github.com/repos/kralle333/TheBrimstoneTower", "Date": "2016-09-13T08:05:27Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type != (orion_spur.common.service.LayerActor.LayerType.LAYER_PLAYER)) { moveLayer(offset, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6873/buggy-version/src.orion_spur.common.service.LayerActor.java", "BodyUseAPI": ["orion_spur.common.service.LayerActor.moveLayer(com.badlogic.gdx.math.Vector2,orion_spur.common.service.LayerActor.LayerType)"], "Fixed commit": "61c0fc1ecfa574eb9d7085caf0f6b85049ebeaea", "Url": "https://api.github.com/repos/hauke96/orion_spur_prototype", "Date": "2017-07-23T21:53:07Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.parseTaskID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (IDs != null) { commandObj.setTaskID(IDs[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1535/buggy-version/src.Parser.java", "BodyUseAPI": ["Command.setTaskID(java.lang.String)"], "Fixed commit": "9b2d52e6ed47a16dcad9e13441be3dd73dd7dac5", "Url": "https://api.github.com/repos/cs2103aug2014-w14-1j/main", "Date": "2014-11-05T06:19:54Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((enemy) != null) && ((state) == (jsettlers.logic.movable.strategies.soldiers.SoldierStrategy.ESoldierState.SEARCH_FOR_ENEMIES))) && (isEnemyAttackable(enemy, false))) { result = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/406/buggy-version/jsettlers.logic.src.jsettlers.logic.movable.strategies.soldiers.SoldierStrategy.java", "BodyUseAPI": [], "Fixed commit": "b7e6b3d1670c58e0c0d7e2f612bd3bab4f8db207", "Url": "https://api.github.com/repos/jsettlers/settlers-remake", "Date": "2015-06-22T13:03:12Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((doc.length()) == 0) anchor = cursor = 0; else { if (position == (doc.length())) anchor--; for (; (anchor > 0) && (!(isLineBreakChar(doc.charAt(anchor)))); anchor--); if ((anchor < position) && (isLineBreakChar(doc.charAt(anchor)))) anchor++; for (cursor = position; (cursor < (doc.length())) && (!(isLineBreakChar(doc.charAt(cursor)))); cursor++); while ((cursor < (doc.length())) && (isLineBreakChar(doc.charAt((cursor + 1))))) cursor++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/397/buggy-version/projects.MUIS.src.main.java.org.muis.core.model.TextSelectionBehavior.java", "BodyUseAPI": ["org.muis.core.model.SelectableDocumentModel.length()", "org.muis.core.model.TextSelectionBehavior.isLineBreakChar(doc.charAt(anchor))", "org.muis.core.model.TextSelectionBehavior.isLineBreakChar(doc.charAt(cursor))", "org.muis.core.model.SelectableDocumentModel.charAt(int)", "org.muis.core.model.SelectableDocumentModel.charAt(int)", "org.muis.core.model.TextSelectionBehavior.isLineBreakChar(doc.charAt((cursor + 1)))", "org.muis.core.model.SelectableDocumentModel.length()", "org.muis.core.model.TextSelectionBehavior.isLineBreakChar(doc.charAt(anchor))", "org.muis.core.model.SelectableDocumentModel.charAt(int)", "org.muis.core.model.SelectableDocumentModel.charAt(int)", "org.muis.core.model.SelectableDocumentModel.length()"], "Fixed commit": "0096b9004c21939bea4447f5a29c7568fb0a883e", "Url": "https://api.github.com/repos/Updownquark/MUIS", "Date": "2014-05-01T16:38:03Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.blackducksoftware.integration.hub.bdio.graph.builder.LazyExternalIdDependencyGraphBuilder.infoForId(com.blackducksoftware.integration.hub.bdio.model.dependencyid.DependencyId)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((info.externalId) == null) { throw new java.lang.IllegalStateException(\"A dependency in a relationship in the graph never had it's external id set.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4256/buggy-version/src.main.java.com.blackducksoftware.integration.hub.bdio.graph.builder.LazyExternalIdDependencyGraphBuilder.java", "BodyUseAPI": [], "Fixed commit": "3ecd86c34f964a02cdef3ca4d9a6b11ba4e351f1", "Url": "https://api.github.com/repos/blackducksoftware/integration-bdio", "Date": "2017-10-02T16:23:06Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.blackducksoftware.integration.hub.bdio.graph.builder.LazyExternalIdDependencyGraphBuilder.infoForId(com.blackducksoftware.integration.hub.bdio.model.dependencyid.DependencyId)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((childInfo.externalId) == null) { throw new java.lang.IllegalStateException(\"A dependency in a relationship in the graph never had it's external id set.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4256/buggy-version/src.main.java.com.blackducksoftware.integration.hub.bdio.graph.builder.LazyExternalIdDependencyGraphBuilder.java", "BodyUseAPI": [], "Fixed commit": "3ecd86c34f964a02cdef3ca4d9a6b11ba4e351f1", "Url": "https://api.github.com/repos/blackducksoftware/integration-bdio", "Date": "2017-10-02T16:23:06Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tag.hasContents()) { java.lang.String contents = ((org.rascalmpl.ast.TagString.Lexical) (tag.getContents())).getString(); if (((contents.length()) > 2) && (contents.startsWith(\"{\"))) { contents = contents.substring(1, ((contents.length()) - 1)); } return contents; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9039/buggy-version/src.org.rascalmpl.interpreter.utils.JavaBridge.java", "BodyUseAPI": ["((org.rascalmpl.ast.TagString.Lexical) (tag.getContents())).getString()", "org.rascalmpl.ast.Tag.getContents()"], "Fixed commit": "aef791a8658f33ff8a2781e4a08b0e69196a62f7", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-01-11T22:36:32Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result != null) { this.setListAdapter(new com.odeval.scoopit.ui.list.adapater.TopicListAdapter(this, result.getCuratedTopics())); }else { android.app.Dialog d = new android.app.Dialog(this); d.setTitle(\"An Error Occured\"); d.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2794/buggy-version/src.com.odeval.scoopit.ui.topic.CuratedTopicListActivity.java", "BodyUseAPI": ["com.odeval.scoopit.ui.topic.CuratedTopicListActivity.setListAdapter(com.odeval.scoopit.ui.list.adapater.TopicListAdapter)", "com.odeval.scoopit.model.User.getCuratedTopics()"], "Fixed commit": "ab6d2319a15a50fdd136658d3bcd5828b2087556", "Url": "https://api.github.com/repos/vdemay/Scoop.it-Android", "Date": "2011-12-21T16:59:51Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bytes == 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2015/buggy-version/core.src.main.java.org.dcache.nfs.vfs.Stat.java", "BodyUseAPI": [], "Fixed commit": "19e2d130eb123bb990646943d90bd23113310362", "Url": "https://api.github.com/repos/radai-rosenblatt/jpnfs", "Date": "2014-09-11T09:50:18Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (numToFillMin > 0) result.addAll(generateMinContainments(parentEObject, reference, numToFillMin));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6695/buggy-version/org.eclipse.emf.modelmutator.src.org.eclipse.emf.modelmutator.intern.AbstractModelMutator.java", "BodyUseAPI": ["org.eclipse.emf.modelmutator.intern.AbstractModelMutator.generateMinContainments(org.eclipse.emf.ecore.EObject,org.eclipse.emf.ecore.EReference,int)", "java.util.List<org.eclipse.emf.ecore.EObject>.addAll(java.util.List<org.eclipse.emf.ecore.EObject>)"], "Fixed commit": "4f2311dc0bbf421a2d25b01df68ca4758908b173", "Url": "https://api.github.com/repos/eneufeld/EMF-ModelGenerator", "Date": "2011-12-18T22:16:04Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskParent == null) { tasks.put(uniqueID, taskToAdd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3243/buggy-version/src.Entities.Project.java", "BodyUseAPI": [], "Fixed commit": "9b39bbe3eebe5ea33c675d1ea67fdeaa570ae443", "Url": "https://api.github.com/repos/GrayTeamCS251A/Silk", "Date": "2015-11-23T23:20:51Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.peersJSON) != null) && (this.peersJSON.containsKey(\"knownpeers\"))) { return ((org.json.simple.JSONArray) (this.peersJSON.get(\"knownpeers\"))); }else { return new org.json.simple.JSONArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7733/buggy-version/Qora.src.settings.Settings.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "e4229752d4208a631bd8bb4f6db1a13654c9a03e", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2016-02-16T01:49:39Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.libs.Json.fromJson(json.get(\"book\"),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (book == null) { return ok(play.libs.Json.toJson(sales)); }else { java.util.List<models.Sale> salesFilteredByBook = controllers.SaleController.filterSalesByBook(book, sales); return ok(play.libs.Json.toJson(salesFilteredByBook)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6978/buggy-version/app.controllers.SaleController.java", "BodyUseAPI": ["controllers.SaleController.filterSalesByBook(models.Book,java.util.List<models.Sale>)"], "Fixed commit": "835937ff6d22ab3712f43c434fe236fda4f8806c", "Url": "https://api.github.com/repos/arn3tt/demander", "Date": "2015-01-14T17:55:01Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (drug != null) { categoryDrugs.put(drugCode, drug); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8157/buggy-version/api.src.main.java.org.openmrs.module.kenyaemr.regimen.RegimenManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.openmrs.module.kenyaemr.regimen.DrugReference>.put(java.lang.String,org.openmrs.module.kenyaemr.regimen.DrugReference)"], "Fixed commit": "361a50952cba82ecc198275b2edea60230e10af6", "Url": "https://api.github.com/repos/moshonk/openmrs-module-kenyaemr", "Date": "2016-09-21T16:38:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.api.context.Context.getConceptService().getDrugByUuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (drug != null) { return new org.openmrs.module.kenyaemr.regimen.DrugReference(drug.getConcept().getUuid(), drug.getUuid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8157/buggy-version/api.src.main.java.org.openmrs.module.kenyaemr.regimen.DrugReference.java", "BodyUseAPI": ["drug.getConcept().getUuid()", "org.openmrs.Drug.getConcept()", "org.openmrs.Drug.getUuid()"], "Fixed commit": "361a50952cba82ecc198275b2edea60230e10af6", "Url": "https://api.github.com/repos/moshonk/openmrs-module-kenyaemr", "Date": "2016-09-21T16:38:20Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wp.worldObj.getTileEntity(net.minecraft.util.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (te instanceof micdoodle8.mods.galacticraft.core.tile.TileEntityTelemetry) { if (remove) { if ((((micdoodle8.mods.galacticraft.core.tile.TileEntityTelemetry) (te)).linkedEntity) == player) ((micdoodle8.mods.galacticraft.core.tile.TileEntityTelemetry) (te)).removeTrackedEntity(); }else { ((micdoodle8.mods.galacticraft.core.tile.TileEntityTelemetry) (te)).addTrackedEntity(player.getUniqueID()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/488/buggy-version/src.main.java.micdoodle8.mods.galacticraft.core.tile.TileEntityTelemetry.java", "BodyUseAPI": [], "Fixed commit": "77114d48c2135ebb39f4eb326f2c6e4d69bca7d2", "Url": "https://api.github.com/repos/SteveKunG/Galacticraft", "Date": "2017-10-02T22:30:18Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (redir.equals(\"\")) { redir = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5616/buggy-version/src.main.edu.iastate.music.marching.attendance.servlets.PublicServlet.java", "BodyUseAPI": [], "Fixed commit": "ec02c4f8eedc87846c06937b7c49273d43bdd843", "Url": "https://api.github.com/repos/danstiner/attendance", "Date": "2012-07-02T00:29:41Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (redir.contains(\"?\")) { append = \"&\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5616/buggy-version/src.main.edu.iastate.music.marching.attendance.servlets.PublicServlet.java", "BodyUseAPI": [], "Fixed commit": "ec02c4f8eedc87846c06937b7c49273d43bdd843", "Url": "https://api.github.com/repos/danstiner/attendance", "Date": "2012-07-02T00:29:41Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((params.aid.getAudioProperties().getNumberOfChannels()) >= 8) && ((params.aid) != null)) && ((params.aid.isAACLC()) || (params.aid.isHEAAC()))) { transcodeOptions.add(\"-strict\"); transcodeOptions.add(\"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2720/buggy-version/src.main.java.net.pms.encoders.FFMpegVideo.java", "BodyUseAPI": [], "Fixed commit": "e65b975636339d0ec8c5889099e752cb5c6cefeb", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-11-16T03:12:46Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotBlank(value)) { currentAudioTrack.getAudioProperties().setNumberOfChannels(net.pms.dlna.LibMediaInfoParser.MI.Get(audio, i, \"Channel(s)_Original\")); }else { currentAudioTrack.getAudioProperties().setNumberOfChannels(net.pms.dlna.LibMediaInfoParser.MI.Get(audio, i, \"Channel(s)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2720/buggy-version/src.main.java.net.pms.dlna.LibMediaInfoParser.java", "BodyUseAPI": [], "Fixed commit": "e65b975636339d0ec8c5889099e752cb5c6cefeb", "Url": "https://api.github.com/repos/Sami32/UniversalMediaServer", "Date": "2017-11-16T03:12:46Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(request.getArrivalDate().equals(\"\"))) { clone.setArrivalDate(com.wishlist.util.Util.addDate(request.getArrivalDate(), i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1119/buggy-version/src.main.java.com.wishlist.thread.FlexThreadManager.java", "BodyUseAPI": ["com.wishlist.model.Request.setArrivalDate(com.wishlist.util.Util.addDate(request.getArrivalDate(), i))", "com.wishlist.model.Request.getArrivalDate()", "com.wishlist.util.Util.addDate(request.getArrivalDate(),int)"], "Fixed commit": "3ebe1b586e01a873f2c008a9feb5ff779883249f", "Url": "https://api.github.com/repos/pranavsundriyal/wishlist", "Date": "2016-05-19T03:49:14Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(endPointDTO.getId()))) { endPointBuilder.id(endPointDTO.getId()); }else { endPointBuilder.id(java.util.UUID.randomUUID().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2092/buggy-version/components.apimgt.org.wso2.carbon.apimgt.rest.api.publisher.src.main.java.org.wso2.carbon.apimgt.rest.api.publisher.utils.MappingUtil.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.rest.api.publisher.dto.EndPointDTO.getId()", "Endpoint.Builder.id(endPointDTO.getId())"], "Fixed commit": "6edf0b0f8784d111281e9ce49f5c96ebdc070a6d", "Url": "https://api.github.com/repos/uvindra/carbon-apimgt", "Date": "2017-05-22T07:12:09Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changed) { com.welovecoding.netbeans.plugin.editorconfig.processor.EditorConfigProcessor.LOG.log(java.util.logging.Level.INFO, \"FinalNewLineOperation was executed on File {0}\", dataObject.getPrimaryFile().getPath()); }else { com.welovecoding.netbeans.plugin.editorconfig.processor.EditorConfigProcessor.LOG.log(java.util.logging.Level.INFO, \"FinalNewLineOperation was NOT executed on File {0}\", dataObject.getPrimaryFile().getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1507/buggy-version/src.main.java.com.welovecoding.netbeans.plugin.editorconfig.processor.EditorConfigProcessor.java", "BodyUseAPI": [], "Fixed commit": "3308adfb0dac9f52a7b68712bb0c7ffa4a86559b", "Url": "https://api.github.com/repos/welovecoding/editorconfig-netbeans", "Date": "2014-11-12T23:03:27Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((subjectNameElements.size()) > 0) { java.lang.String id = stripSubjectId(e.id()); org.warheim.eledger.parser.model.Subject subject = new org.warheim.eledger.parser.model.Subject(id, stripSubjectName(subjectNameElements.get(0).html())); subjects.put(id, subject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4550/buggy-version/eledger-parser.src.main.java.org.warheim.eledger.parser.GradeListParser.java", "BodyUseAPI": ["subjectNameElements.get(0).html()", "org.warheim.eledger.parser.GradeListParser.stripSubjectName(subjectNameElements.get(0).html())", "org.jsoup.select.Elements.get(int)"], "Fixed commit": "28c39f7be8eae149bb814ffa3062553324fbfc8d", "Url": "https://api.github.com/repos/andy1024/eledger-parser", "Date": "2016-03-09T18:31:29Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.ztory.lib.sleek.base.element.SleekCSSanim.isPropertyUpdated(goalCSS.getFontSize(), startCSS.getFontSize())) { int fontSize = com.ztory.lib.sleek.base.element.SleekCSSanim.getAnimatedInt(percent, com.ztory.lib.sleek.base.element.SleekCSSanim.getOrDefault(startCSS.getFontSize(), 0), goalCSS.getFontSize()); animStateCSS.put(Property.FONT_SIZE, com.ztory.lib.sleek.base.element.SleekCSSanim.getStringPXfromPixels(fontSize)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8935/buggy-version/sleek_module.src.main.java.com.ztory.lib.sleek.base.element.SleekCSSanim.java", "BodyUseAPI": ["com.ztory.lib.sleek.base.element.SleekCSSanim.getOrDefault(startCSS.getFontSize(),int)", "com.ztory.lib.sleek.base.element.css.CSSblock.getFontSize()", "com.ztory.lib.sleek.base.element.SleekCSSanim.getAnimatedInt(float,java.lang.Object,goalCSS.getFontSize())", "com.ztory.lib.sleek.base.element.css.CSSblock.getFontSize()"], "Fixed commit": "01ada39d9c838141110e0f97d193908eef2ed840", "Url": "https://api.github.com/repos/ztory/sleek", "Date": "2017-06-13T18:26:58Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.ztory.lib.sleek.base.element.SleekCSSanim.isPropertyUpdated(goalCSS.getLineHeight(), startCSS.getLineHeight())) { int lineHeight = com.ztory.lib.sleek.base.element.SleekCSSanim.getAnimatedInt(percent, com.ztory.lib.sleek.base.element.SleekCSSanim.getOrDefault(startCSS.getLineHeight(), 0), goalCSS.getLineHeight()); animStateCSS.put(Property.LINE_HEIGHT, com.ztory.lib.sleek.base.element.SleekCSSanim.getStringPXfromPixels(lineHeight)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8935/buggy-version/sleek_module.src.main.java.com.ztory.lib.sleek.base.element.SleekCSSanim.java", "BodyUseAPI": ["com.ztory.lib.sleek.base.element.css.CSSblock.getLineHeight()", "com.ztory.lib.sleek.base.element.SleekCSSanim.getOrDefault(startCSS.getLineHeight(),int)", "com.ztory.lib.sleek.base.element.css.CSSblock.getLineHeight()", "com.ztory.lib.sleek.base.element.SleekCSSanim.getAnimatedInt(float,java.lang.Object,goalCSS.getLineHeight())"], "Fixed commit": "01ada39d9c838141110e0f97d193908eef2ed840", "Url": "https://api.github.com/repos/ztory/sleek", "Date": "2017-06-13T18:26:58Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (iconFileName != null) { if ((iconFileName.contains(\"..\")) && ((getInventoryIconFile()) != null)) iconFileName = getInventoryIconFile().getAbsolutePath(); iconFileName = iconFileName.replace(\"\\\\\", \"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1407/buggy-version/src.silver.starbound.data.Item.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "5dd94531d883a3c005827db4bc409b0115cd001c", "Url": "https://api.github.com/repos/SilverFishCat/SBModMake-Core", "Date": "2015-05-29T18:59:42Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cat) != null) if (allItems.get(j).getCat().equals(cat)) iteminfo.add(allItems.get(j));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3727/buggy-version/app.src.main.java.com.adarsh.apps.campusstore.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4126f6648168108021b9cd047a9896cb0a8dcf7f", "Url": "https://api.github.com/repos/Girish-Raguvir/CampusStore", "Date": "2015-06-10T22:25:32Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (newTrack.IsPlaying) { mTracksRef.child(newTrack.URI).child(\"IsPlaying\").setValue(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3938/buggy-version/CrowdPlayMappe.CrowdPlay.app.src.main.java.cpmusic.com.crowdplay.activities.DJActivity.java", "BodyUseAPI": ["mTracksRef.child(newTrack.URI).child(\"IsPlaying\").setValue(boolean)", "mTracksRef.child(newTrack.URI).child(java.lang.String)", "com.google.firebase.database.DatabaseReference.child(newTrack.URI)"], "Fixed commit": "8d53d5b9189ea5b9fc3927954b041c7b0428ae36", "Url": "https://api.github.com/repos/JonasRasborg/Android", "Date": "2017-05-24T06:39:00Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shapeType) == type) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7954/buggy-version/dert.src.gov.nasa.arc.dert.scenegraph.FigureMarker.java", "BodyUseAPI": [], "Fixed commit": "64d2da55df822115b7e877af72aa7f7abeb46aa3", "Url": "https://api.github.com/repos/nasa/DERT", "Date": "2017-06-03T00:06:24Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["morlok8k.MinecraftLandGenerator.Server.runMinecraft()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!serverLaunch) { java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8280/buggy-version/src.morlok8k.MinecraftLandGenerator.Main.java", "BodyUseAPI": [], "Fixed commit": "d67cc82328e7159c5a5e7a4309c41250a586ecd6", "Url": "https://api.github.com/repos/Morlok8k/MinecraftLandGenerator", "Date": "2015-01-19T11:23:45Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.works.lineestimate.service.LineEstimateService.findByEstimateNumber(milestone.getWorkOrderEstimate().getWorkOrder().getEstimateNumber())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((led.getLineEstimate().getSubTypeOfWork().getCode()) != null) { jsonObject.addProperty(\"subTypeOfWork\", led.getLineEstimate().getSubTypeOfWork().getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3060/buggy-version/egov.egov-worksweb.src.main.java.org.egov.works.web.adaptor.SearchMilestoneJsonAdaptor.java", "BodyUseAPI": ["led.getLineEstimate().getSubTypeOfWork().getCode()", "org.egov.works.lineestimate.entity.LineEstimateDetails.getLineEstimate()", "com.google.gson.JsonObject.addProperty(java.lang.String,led.getLineEstimate().getSubTypeOfWork().getCode())", "led.getLineEstimate().getSubTypeOfWork()"], "Fixed commit": "6cc0c994e4e3aaefcde357d44ba8d8ccc9043844", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-05-19T06:26:43Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.works.lineestimate.service.LineEstimateService.findByEstimateNumber(milestone.getWorkOrderEstimate().getWorkOrder().getEstimateNumber())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((led.getLineEstimate().getTypeOfWork().getCode()) != null) { jsonObject.addProperty(\"typeOfWork\", led.getLineEstimate().getTypeOfWork().getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3060/buggy-version/egov.egov-worksweb.src.main.java.org.egov.works.web.adaptor.SearchMilestoneJsonAdaptor.java", "BodyUseAPI": ["led.getLineEstimate().getTypeOfWork()", "led.getLineEstimate().getTypeOfWork().getCode()", "org.egov.works.lineestimate.entity.LineEstimateDetails.getLineEstimate()", "com.google.gson.JsonObject.addProperty(java.lang.String,led.getLineEstimate().getTypeOfWork().getCode())"], "Fixed commit": "6cc0c994e4e3aaefcde357d44ba8d8ccc9043844", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-05-19T06:26:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.works.lineestimate.service.LineEstimateService.findByEstimateNumber(trackMilestone.getMilestone().getWorkOrderEstimate().getWorkOrder().getEstimateNumber())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((led.getLineEstimate().getTypeOfWork().getCode()) != null) { jsonObject.addProperty(\"typeOfWork\", led.getLineEstimate().getTypeOfWork().getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3060/buggy-version/egov.egov-worksweb.src.main.java.org.egov.works.web.adaptor.SearchTrackMilestoneJsonAdaptor.java", "BodyUseAPI": ["org.egov.works.lineestimate.entity.LineEstimateDetails.getLineEstimate()", "led.getLineEstimate().getTypeOfWork().getCode()", "com.google.gson.JsonObject.addProperty(java.lang.String,led.getLineEstimate().getTypeOfWork().getCode())", "led.getLineEstimate().getTypeOfWork()"], "Fixed commit": "6cc0c994e4e3aaefcde357d44ba8d8ccc9043844", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-05-19T06:26:43Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egov.works.lineestimate.service.LineEstimateService.findByEstimateNumber(trackMilestone.getMilestone().getWorkOrderEstimate().getWorkOrder().getEstimateNumber())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((led.getLineEstimate().getSubTypeOfWork().getCode()) != null) { jsonObject.addProperty(\"subTypeOfWork\", led.getLineEstimate().getSubTypeOfWork().getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3060/buggy-version/egov.egov-worksweb.src.main.java.org.egov.works.web.adaptor.SearchTrackMilestoneJsonAdaptor.java", "BodyUseAPI": ["led.getLineEstimate().getSubTypeOfWork().getCode()", "com.google.gson.JsonObject.addProperty(java.lang.String,led.getLineEstimate().getSubTypeOfWork().getCode())", "led.getLineEstimate().getSubTypeOfWork()", "org.egov.works.lineestimate.entity.LineEstimateDetails.getLineEstimate()"], "Fixed commit": "6cc0c994e4e3aaefcde357d44ba8d8ccc9043844", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-05-19T06:26:43Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.opengl.OpenGLRenderer.getC3D()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(c3d2.getParent().isDisposed())) ((org.nschmidt.ldparteditor.composites.ScalableComposite) (c3d2.getParent())).redrawScales();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3550/buggy-version/src.org.nschmidt.ldparteditor.helpers.composite3d.MouseActions.java", "BodyUseAPI": ["((org.nschmidt.ldparteditor.composites.ScalableComposite) (c3d2.getParent())).redrawScales()", "org.nschmidt.ldparteditor.composites.Composite3D.getParent()"], "Fixed commit": "bd364b064f04d1d7b31d5da7d1c5cce6e5702c1d", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-05-10T20:54:06Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.opengl.OpenGLRenderer.getC3D()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(c3d2.getParent().isDisposed())) ((org.nschmidt.ldparteditor.composites.ScalableComposite) (c3d2.getParent())).redrawScales();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3550/buggy-version/src.org.nschmidt.ldparteditor.helpers.composite3d.MouseActions.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.composites.Composite3D.getParent()", "((org.nschmidt.ldparteditor.composites.ScalableComposite) (c3d2.getParent())).redrawScales()"], "Fixed commit": "bd364b064f04d1d7b31d5da7d1c5cce6e5702c1d", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-05-10T20:54:06Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.voltdb.VoltDB.instance().getEELibraryVersionString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (versionString == null) { versionString = RealVoltDB.m_defaultVersionString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8791/buggy-version/src.frontend.org.voltdb.EELibraryLoader.java", "BodyUseAPI": [], "Fixed commit": "c1ffb2120ba06b365e4d4e2d1ae25c3dd9f539c7", "Url": "https://api.github.com/repos/AsherBond/voltdb", "Date": "2014-02-26T04:02:57Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof com.avi.tlvregions.MainActivity) { ((com.avi.tlvregions.MainActivity) (getActivity())).toggleProgress(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9013/buggy-version/TLVRegions.app.src.main.java.com.avi.tlvregions.fragments.CountriesFragment.java", "BodyUseAPI": [], "Fixed commit": "629b6b6fc061cc7b4e3917d8bdf1628a62c75929", "Url": "https://api.github.com/repos/avibarel4/tlv_regions", "Date": "2017-10-21T18:28:57Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (com.weichen2046.filesender2.ui.DesktopListActivity.REQUEST_CODE_FOR_FILE_TO_SEND)) { final android.content.Intent resultIntent = data; android.net.Uri uri = resultIntent.getData(); com.weichen2046.filesender2.service.SocketTaskService.startActionRequestSendFile(this, uri, mSelectedDesktop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7758/buggy-version/app.src.main.java.com.weichen2046.filesender2.ui.DesktopListActivity.java", "BodyUseAPI": [], "Fixed commit": "fb42e3b16a0fb54af1711ad378393dafb0724b26", "Url": "https://api.github.com/repos/weichen2046/FileSender2", "Date": "2017-03-27T14:56:28Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Util.RANDOM.nextInt(15)) < 2) { p.getWorld().spigot().playEffect(p.getLocation(), Effect.BOW_FIRE, 1, 0, 0, 0, 0, 0.1F, 10, 2); p.getWorld().playSound(p.getLocation(), Sound.ENTITY_SKELETON_SHOOT, 0.5F, 0.5F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3411/buggy-version/DevAthlon_3_1.src.de.nnl.devathlon_3.spellbook.ArrowSpell.java", "BodyUseAPI": [], "Fixed commit": "9a82bea5c8860f317e8fb1e0c288809942c65456", "Url": "https://api.github.com/repos/NoNameLabs-Team/devathlon_3", "Date": "2016-07-16T20:39:40Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAddNewDrug)) { org.openlmis.core.utils.ToastUtil.show(R.string.msg_save_before_exit); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5123/buggy-version/app.src.main.java.org.openlmis.core.view.activity.InitialInventoryActivity.java", "BodyUseAPI": [], "Fixed commit": "c6226ee640fc1dc64b16f552a472bcccf0db9d61", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-09-05T12:28:07Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pendingIntent) != null) alarm_manager.cancel(pendingIntent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2131/buggy-version/app.src.main.java.b00239148.alarmclock.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dbda35132100ac2fcbbd532a01364933f35e7aed", "Url": "https://api.github.com/repos/alantg91/AlarmclockUWS", "Date": "2017-11-17T14:49:50Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseUser.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (usr != null) { java.lang.String m_name = usr.get(\"name\").toString(); java.lang.String m_number = usr.get(\"number\").toString(); android.widget.TextView tv_name = ((android.widget.TextView) (findViewById(R.id.edituser_editText_name))); android.widget.TextView tv_number = ((android.widget.TextView) (findViewById(R.id.edituser_editText_number))); tv_name.setText(m_name); tv_number.setText(m_number); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7351/buggy-version/src.com.example.bruinswipeswap.EditUser.java", "BodyUseAPI": ["com.parse.ParseUser.get(java.lang.String)", "com.parse.ParseUser.get(java.lang.String)", "usr.get(\"name\").toString()", "usr.get(\"number\").toString()"], "Fixed commit": "8c89b58585b13b17c9abf5e0a9dd4768e8045da3", "Url": "https://api.github.com/repos/cchiou/BruinSwipeSwap", "Date": "2014-06-04T18:58:16Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTv()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2472/buggy-version/src.com.connectsdk.sampler.fragments.WebAppFragment.java", "BodyUseAPI": [], "Fixed commit": "29c4139871a59dca52f4e5ef4f1b68afe75a7a99", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-API-Sampler", "Date": "2014-06-20T21:02:56Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTv()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2472/buggy-version/src.com.connectsdk.sampler.fragments.WebAppFragment.java", "BodyUseAPI": [], "Fixed commit": "29c4139871a59dca52f4e5ef4f1b68afe75a7a99", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-API-Sampler", "Date": "2014-06-20T21:02:56Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTv()) != null) joinWebAppButton.setEnabled(getTv().hasCapability(WebAppLauncher.Join));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2472/buggy-version/src.com.connectsdk.sampler.fragments.WebAppFragment.java", "BodyUseAPI": [], "Fixed commit": "29c4139871a59dca52f4e5ef4f1b68afe75a7a99", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-API-Sampler", "Date": "2014-06-20T21:02:56Z"},
{"Line": "=>2568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numElements > 0) a[(aIdx + 1)] &= (-1) >>> (32 - (numBits % 32));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/359/buggy-version/src.main.java.java.math.BigInteger.java", "BodyUseAPI": [], "Fixed commit": "fed85d9fa541a68a01b403c5d4ea6900c2be552e", "Url": "https://api.github.com/repos/tbuktu/bigint", "Date": "2013-05-12T23:44:58Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { webview.getSettings().setAllowUniversalAccessFromFileURLs(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7625/buggy-version/jsbridge.src.main.java.com.jsbridge.android.JSBridge.java", "BodyUseAPI": [], "Fixed commit": "9c4b806a8388712061da30ac5fdb742cd35cb630", "Url": "https://api.github.com/repos/yamdraco/android-jsbridge", "Date": "2014-09-03T03:28:09Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lt.msi2015.user.UserRepository.findByEmail(info.email)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user != null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3045/buggy-version/src.main.java.lt.msi2015.user.UserService.java", "BodyUseAPI": [], "Fixed commit": "217c484a02ef1afae779ab1663347884fe01ac52", "Url": "https://api.github.com/repos/tieto-lt/MSI-2015-JAVA", "Date": "2015-08-13T09:24:30Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((headers.getHeader(\"Content-Type\")) != null) { array = headers.getHeader(\"Content-Type\").split(\";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2451/buggy-version/src.ar.edu.it.itba.pdc.v2.implementations.utils.DecoderImpl.java", "BodyUseAPI": ["ar.edu.it.itba.pdc.v2.interfaces.HTTPHeaders.getHeader(java.lang.String)", "headers.getHeader(\"Content-Type\").split(java.lang.String)"], "Fixed commit": "99d59d84081e40ff8e258e3aa0dbe6495135f16a", "Url": "https://api.github.com/repos/mdesanti/TPE-Protos", "Date": "2012-05-30T21:16:58Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getTaskDetails()) == null) { commandToUndo = new mytasks.logic.UpdateCommand(prevState.getDescription(), prevState.getFromDateTime(), prevState.getToDateTime(), prevState.getLabels(), super.getToUpdateTaskDesc()); }else { commandToUndo = new mytasks.logic.UpdateCommand(prevState.getDescription(), prevState.getFromDateTime(), prevState.getToDateTime(), prevState.getLabels(), super.getTaskDetails()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5930/buggy-version/src.mytasks.logic.UpdateCommand.java", "BodyUseAPI": [], "Fixed commit": "6323c7fd2486c4fe8d1f2bda375a4a4902b30871", "Url": "https://api.github.com/repos/cs2103aug2014-w09-1j/main", "Date": "2014-10-23T04:52:34Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((directions.getRoutes().size()) > 0) { this.route.addAll(directions.getRoutes().get(0).getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1598/buggy-version/app.src.main.java.com.linijumsolutions.gg_sports.controllers.RouteInformation.java", "BodyUseAPI": ["java.util.ArrayList<com.google.android.gms.maps.model.LatLng>.addAll(directions.getRoutes().get(0).getPath())", "directions.getRoutes().get(0).getPath()", "directions.getRoutes().get(int)", "com.linijumsolutions.gg_sports.controllers.Directions.getRoutes()"], "Fixed commit": "d46891f8b73af02234c4c80079b7e0065512b9e5", "Url": "https://api.github.com/repos/LinijumSolutions/GG-Sports", "Date": "2015-05-24T11:16:15Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataset) == null) { return null; }else { return dataset.getDataset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2047/buggy-version/app.src.main.java.org.stepic.droid.model.Attempt.java", "BodyUseAPI": [], "Fixed commit": "8663d9c05ecc1919067e0f0a84c683225503ee19", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2017-10-09T12:33:12Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index == (size())) { add(element); }else { boundsCheck(index); enlargeIfNeeded(1); java.lang.System.arraycopy(array, index, array, (index + 1), ((end) - index)); array[index] = element; (end)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3225/buggy-version/JSAT.src.jsat.utils.LongList.java", "BodyUseAPI": ["jsat.utils.LongList.boundsCheck(int)", "java.lang.System.arraycopy(long[],int,long[],int,int)"], "Fixed commit": "34d051ec3e0850e140fde9453a8f69a956d09146", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2016-03-10T04:02:28Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toHexString(picker.getColor())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((color.substring(2).length()) < 6) { java.lang.String match = color.substring(2); for (int i = 0, need = 6 - (color.substring(2).length()); i < need; match += \"0\" , i++); editor.putString(\"keeper_color\", (\"#\" + match)); }else editor.putString(\"keeper_color\", (\"#\" + (color.substring(2))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3789/buggy-version/Keeper.app.src.main.java.com.naver.dreamline91.keeper.color.ColorDialog.java", "BodyUseAPI": ["java.lang.String.substring(int)", "SharedPreferences.Editor.putString(java.lang.String,java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int)", "java.lang.String.substring(int)"], "Fixed commit": "7f2b7b5138f5906215dcf7b0ae8fe939554705de", "Url": "https://api.github.com/repos/jaejunha/MobileApplication", "Date": "2017-10-03T15:10:23Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tr.rp.core.rankediterators.MultiMergeIterator<T>.transform(T)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (it.next()) { iq.add(it); rq.add(prior); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7448/buggy-version/src.com.tr.rp.core.rankediterators.MultiMergeIterator.java", "BodyUseAPI": ["java.util.List<com.tr.rp.core.rankediterators.RankedIterator<T>>.add(com.tr.rp.core.rankediterators.RankedIterator<T>)"], "Fixed commit": "404a31e915e67ee6cfedd1a9a6a76dc03d7a3c0d", "Url": "https://api.github.com/repos/tjitze/RankPL", "Date": "2017-05-29T22:54:52Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (givenStr == null) { bldr.append(\"NO MATCH\"); if (_logger.isInfoEnabled()) { _logger.info(bldr.toString()); } success = false; }else { if (matchStr.matches(givenStr)) { bldr.append(\"MATCH\"); }else { bldr.append(\"NO MATCH\"); if (_logger.isInfoEnabled()) { _logger.info(bldr.toString()); } success = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7334/buggy-version/src.com.grb.impulse.plugins.TL1CmdMatcher.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)"], "Fixed commit": "94568b62a6160ac5a0daa61e7cc25d020d48bca9", "Url": "https://api.github.com/repos/gbromfield/Impulse", "Date": "2016-04-28T19:21:46Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.jmzml.model.mzml.BinaryDataArray.getBinaryDataAsNumberArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(mzRange.contains(mzValues[i].doubleValue()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2126/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.MzMLConverter.java", "BodyUseAPI": [], "Fixed commit": "789c18dd1fc5678d000c0a939040c06b445cc41b", "Url": "https://api.github.com/repos/SandraCastilloPriego/msdk", "Date": "2015-12-21T02:36:21Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.jmzml.model.mzml.BinaryDataArray.getBinaryDataAsNumberArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(intensityRange.contains(intensityValues[i].floatValue()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2126/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.MzMLConverter.java", "BodyUseAPI": [], "Fixed commit": "789c18dd1fc5678d000c0a939040c06b445cc41b", "Url": "https://api.github.com/repos/SandraCastilloPriego/msdk", "Date": "2015-12-21T02:36:21Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (folder.getType().equalsIgnoreCase(\"CLNT\")) { return folder; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3890/buggy-version/src.com.automic.objects.Folders.java", "BodyUseAPI": [], "Fixed commit": "c71bc64d9f83b2034d4029df9905698a05416b39", "Url": "https://api.github.com/repos/brendanSapience/UC4-Automic---Java-API-Framework-Simplified", "Date": "2016-02-02T17:08:07Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (FolderName.contains(\"No Folder\")) { return getNoFolderFolder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3890/buggy-version/src.com.automic.objects.Folders.java", "BodyUseAPI": [], "Fixed commit": "c71bc64d9f83b2034d4029df9905698a05416b39", "Url": "https://api.github.com/repos/brendanSapience/UC4-Automic---Java-API-Framework-Simplified", "Date": "2016-02-02T17:08:07Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxHistBar) != null) maxP = ((int) (java.lang.Math.ceil(java.lang.Math.log10(maxHistBar.getValue()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6273/buggy-version/src.histogram.SimpleHistogramPanel.java", "BodyUseAPI": [], "Fixed commit": "ee2ad2818fc1197b8fa43a5b3cf0a3457e1d7b3b", "Url": "https://api.github.com/repos/pdroalves/SimpleHistogramPanel", "Date": "2013-05-27T06:16:38Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["application.Task.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((taskStatus.equals(TaskStatus.COMPLETED)) && (application.DateParser.isBeforeNow(startDate))) { overdue.add(task); }else if ((!(taskStatus.equals(TaskStatus.OVERDUE))) && (application.DateParser.hasMatchedDateOnly(startDate, todayDate))) { if ((isRecurring && (!(taskStatus.equals(TaskStatus.DELETED)))) || (!isRecurring)) { today.add(task); } }else if ((taskStatus.equals(TaskStatus.OVERDUE)) || (application.DateParser.isBeforeNow(startDate))) { if (!(taskType.equalsIgnoreCase(TaskType.TIMED.toString()))) { if ((isRecurring && (!(taskStatus.equals(TaskStatus.DELETED)))) || (!isRecurring)) { overdue.add(task); } }else { overdue.add(task); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2986/buggy-version/ToDooo.src.controller.MainController.java", "BodyUseAPI": ["application.DateParser.hasMatchedDateOnly(java.util.Date,java.util.Date)", "application.TaskStatus.equals(TaskStatus.DELETED)", "application.TaskStatus.equals(TaskStatus.OVERDUE)", "application.DateParser.isBeforeNow(java.util.Date)", "application.TaskStatus.equals(TaskStatus.DELETED)", "application.TaskStatus.equals(TaskStatus.OVERDUE)"], "Fixed commit": "ecdd42ec4bf3ad83bdb40f9bad4dae82b9099e67", "Url": "https://api.github.com/repos/cs2103jan2015-f09-3j/main", "Date": "2015-04-13T01:52:26Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rootPathDirecotry.isDirectory())) { return allFiles; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7715/buggy-version/Server.src.main.java.net.hawkengine.services.FileManagementService.java", "BodyUseAPI": [], "Fixed commit": "0305352b315dba5e0466288e6fb4f25d4d5aa2c9", "Url": "https://api.github.com/repos/rndsolutions/hawkcd", "Date": "2016-11-01T08:20:09Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.plugin.getProxy().getReconnectHandler()) != null) { kickedFrom = this.plugin.getProxy().getReconnectHandler().getServer(ev.getPlayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5514/buggy-version/src.main.java.net.craftminecraft.bungee.movemenow.PlayerListener.java", "BodyUseAPI": ["this.plugin.getProxy().getReconnectHandler()", "net.craftminecraft.bungee.movemenow.MoveMeNow.getProxy()", "this.plugin.getProxy().getReconnectHandler().getServer(ev.getPlayer())"], "Fixed commit": "2ec2d39bdd611b86a4b7d8ac43fc51deef45218e", "Url": "https://api.github.com/repos/CraftMinecraft/MoveMeNow", "Date": "2013-08-25T17:41:45Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.isSelected()) { org.datavyu.Datavyu.getDataController().setFindTime(model.getOnset()); org.datavyu.Datavyu.getDataController().setFindOffsetField(model.getOffset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4393/buggy-version/src.main.java.org.datavyu.views.discrete.SpreadsheetCell.java", "BodyUseAPI": ["org.datavyu.Datavyu.getDataController().setFindOffsetField(model.getOffset())", "org.datavyu.Datavyu.getDataController().setFindTime(model.getOnset())", "org.datavyu.models.db.Cell.getOnset()", "org.datavyu.models.db.Cell.getOffset()"], "Fixed commit": "68d726d00567db47ec955e0fea2b222b0df35d98", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2013-06-18T02:47:04Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.isSelected()) { org.datavyu.Datavyu.getDataController().setFindTime(model.getOnset()); org.datavyu.Datavyu.getDataController().setFindOffsetField(model.getOffset()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4393/buggy-version/src.main.java.org.datavyu.views.discrete.SpreadsheetCell.java", "BodyUseAPI": ["org.datavyu.models.db.Cell.getOffset()", "org.datavyu.Datavyu.getDataController().setFindOffsetField(model.getOffset())", "org.datavyu.models.db.Cell.getOnset()", "org.datavyu.Datavyu.getDataController().setFindTime(model.getOnset())"], "Fixed commit": "68d726d00567db47ec955e0fea2b222b0df35d98", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2013-06-18T02:47:04Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchRecentsListView) != null) { mSearchRecentsListView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4993/buggy-version/box-browse-sdk.src.main.java.com.box.androidsdk.browse.fragments.BoxBrowseFragment.java", "BodyUseAPI": [], "Fixed commit": "251d69466d03cd7aef9485a56c2ba1bd0332a293", "Url": "https://api.github.com/repos/box/box-android-browse-sdk", "Date": "2016-08-23T20:48:23Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContext().get(IServiceConstants.SELECTION)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((selected instanceof java.util.List) && ((((java.util.List<?>) (selected)).get(0)) instanceof de.uni_koeln.ub.drc.data.Page))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5282/buggy-version/de.uni_koeln.ub.drc.ui.src.de.uni_koeln.ub.drc.ui.ExportHandler.java", "BodyUseAPI": [], "Fixed commit": "9a67e5addb2f0093c7a1c447bc1487eff1e2aa97", "Url": "https://api.github.com/repos/claesn/drc", "Date": "2010-05-28T14:01:50Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.osten.halp.impl.profiling.detector.Activity.getDetections()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(detections.isEmpty())) { com.osten.halp.model.profiling.Detection<java.lang.Long> detection = getDetections().get(((getDetections().size()) - 1)); if (!(detection.hasStop())) { detection.setStop(new java.lang.Long(filter.getResiduals().size())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5784/buggy-version/src.main.java.com.osten.halp.impl.profiling.detector.Activity.java", "BodyUseAPI": [], "Fixed commit": "815065ed4f32b45e6a22dafab7c347f6a9d35765", "Url": "https://api.github.com/repos/O5ten/halp", "Date": "2014-01-05T22:31:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.osten.halp.model.profiling.AdaptiveFilter<java.lang.Long>.getResiduals()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((i == ((residuals.size()) - 1)) && (!(detection.hasStop()))) { detection.setStop(new java.lang.Long(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5784/buggy-version/src.main.java.com.osten.halp.impl.profiling.detector.Passivity.java", "BodyUseAPI": ["com.osten.halp.model.profiling.Detection<java.lang.Long>.setStop(java.lang.Long)"], "Fixed commit": "815065ed4f32b45e6a22dafab7c347f6a9d35765", "Url": "https://api.github.com/repos/O5ten/halp", "Date": "2014-01-05T22:31:41Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mLockCount) != 0) && (isSharedLockOwner(locker))) { return OWNED_SHARED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2268/buggy-version/src.main.java.org.cojen.tupl.Lock.java", "BodyUseAPI": [], "Fixed commit": "645718f9d940d821dfa30491388d480996cb5a79", "Url": "https://api.github.com/repos/cojen/Tupl", "Date": "2017-03-09T15:45:40Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mLockCount) != 0) && (isSharedLockOwner(locker))) { return OWNED_SHARED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2268/buggy-version/src.main.java.org.cojen.tupl._Lock.java", "BodyUseAPI": [], "Fixed commit": "645718f9d940d821dfa30491388d480996cb5a79", "Url": "https://api.github.com/repos/cojen/Tupl", "Date": "2017-03-09T15:45:40Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getIntExtra(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (article_id == 0) { this.article = app.dbHandler.getArticleFromTitle(source_intent.getStringExtra(\"article_title\")); }else { this.article = app.dbHandler.getArticleFromId(article_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3032/buggy-version/src.fr.renzo.wikipoff.ArticleActivity.java", "BodyUseAPI": ["app.dbHandler.getArticleFromId(int)"], "Fixed commit": "18f7ba7bdd294080d84eb714b5b290da5b8d3b27", "Url": "https://api.github.com/repos/conchyliculture/wikipoff", "Date": "2014-01-22T21:11:08Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { buttonTaskList.add(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5504/buggy-version/src.JoystickContainer.java", "BodyUseAPI": [], "Fixed commit": "3f180353faa2c549acf53b8b6cb5c0dc3d389105", "Url": "https://api.github.com/repos/rajasjambekar/ROV-Controller", "Date": "2016-04-07T14:16:30Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((incomingQueuesString) == null) || (incomingQueuesString.equals(\"\"))) { return returnList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8727/buggy-version/src.main.java.ac.at.tuwien.infosys.visp.processingNode.Receiver.java", "BodyUseAPI": [], "Fixed commit": "6d6910983068da994321d530d3cf810edec63e60", "Url": "https://api.github.com/repos/visp-streaming/processingNodes", "Date": "2017-03-09T14:11:48Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.dataResults) == null) { this.dataResults = new java.util.HashMap<java.lang.Object, java.util.List<org.eclipse.persistence.internal.sessions.AbstractRecord>>(); this.dataResults.put(this, rows); }else { java.util.List<org.eclipse.persistence.internal.sessions.AbstractRecord> org = this.dataResults.get(this); if (org == null) this.dataResults.put(this, rows); else org.addAll(rows); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6907/buggy-version/foundation.org.eclipse.persistence.core.src.org.eclipse.persistence.queries.BatchFetchPolicy.java", "BodyUseAPI": [], "Fixed commit": "59f9b66de8c75baec6c0d3f5cfe3fd2c3e1b331c", "Url": "https://api.github.com/repos/pmneo/eclipselink.runtime", "Date": "2017-11-22T07:29:12Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mysqlIO.connection.getEnabledTLSProtocols()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((enabledTLSProtocols != null) && ((enabledTLSProtocols.length()) > 0)) { configuredProtocols = enabledTLSProtocols.split(\"\\\\s*,\\\\s*\"); }else { if ((mysqlIO.versionMeetsMinimum(5, 6, 0)) && (com.mysql.jdbc.Util.isEnterpriseEdition(mysqlIO.getServerVersion()))) { configuredProtocols = new java.lang.String[]{ \"TLSv1.2\", \"TLSv1.1\", \"TLSv1\" }; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4890/buggy-version/src.com.mysql.jdbc.ExportControlled.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "1d06c46879e7ad04067a6f5fad9855e3df0b6815", "Url": "https://api.github.com/repos/toddfarmer/mysql-connector-j", "Date": "2017-08-17T21:54:47Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (projectFlag != null) { projectFlag.setDescription(resUtil.getLockedInProjectName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8401/buggy-version/src.org.opencms.ui.components.CmsResourceTable.java", "BodyUseAPI": ["com.vaadin.ui.Image.setDescription(resUtil.getLockedInProjectName())"], "Fixed commit": "6c4732e29bb910d457f6f078050aedbd2d849b8b", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2016-12-14T11:33:52Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (baseElement instanceof org.activiti.bpmn.model.FlowElement) { org.activiti.editor.language.json.converter.BpmnJsonConverterUtil.convertListenersToJson(((org.activiti.bpmn.model.FlowElement) (baseElement)).getExecutionListeners(), true, propertiesNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/938/buggy-version/modules.flowable-json-converter.src.main.java.org.activiti.editor.language.json.converter.BaseBpmnJsonConverter.java", "BodyUseAPI": [], "Fixed commit": "136f55bacbde8bc1ea5acc8ecb7989b31e1c8588", "Url": "https://api.github.com/repos/marcus-nl/flowable-engine", "Date": "2016-11-24T11:21:22Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) { return \"path.page.index\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6172/buggy-version/NA-WebApp-DevelopersTeam.src.main.java.by.training.nc.dev5.web.command.GoCommand.java", "BodyUseAPI": [], "Fixed commit": "55a602d4b1b66ed9fda2ba880aa22acfab60f3aa", "Url": "https://api.github.com/repos/ATPod/nc-training", "Date": "2017-05-03T01:47:11Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((value.value.length()) > 99) { outputValue = (value.value.substring(0, 99)) + \" [truncated]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6137/buggy-version/ply-util.src.main.java.net.ocheyedan.ply.props.Props.java", "BodyUseAPI": ["value.value.substring(int,int)"], "Fixed commit": "0eb444e7244229b5c2bee2510212c5090b0edb89", "Url": "https://api.github.com/repos/blangel/ply", "Date": "2011-10-31T12:34:28Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hiddenContent.length()) > 0) { java.lang.String tmp = hiddenContent.toString(); java.lang.String content = tmp.substring(0, tmp.lastIndexOf(\",\")); com.luntech.launcher.ToolUtils.storeValueIntoSP(context, \"hidden_app\", content); android.util.Log.d(com.luntech.launcher.ToolUtils.TAG, (\"hidden app \" + content)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/3989/buggy-version/LuntechLauncher.src.com.luntech.launcher.ToolUtils.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()"], "Fixed commit": "d12dc1b2aee9e3e81bff11621cdcf64a1f7ba47f", "Url": "https://api.github.com/repos/tigerjiang/luntech", "Date": "2015-09-23T14:26:20Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unknownProps) != null) { props.putAll(unknownProps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7015/buggy-version/src.net.dhleong.acl.world.BaseArtemisObject.java", "BodyUseAPI": [], "Fixed commit": "ad63fa84693e8c2b2318dbc51cde28434a747787", "Url": "https://api.github.com/repos/rjwut/ArtClientLib", "Date": "2014-01-01T05:31:09Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null == (java.lang.System.getProperty(\"RP_LOG_DIR\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/2523/buggy-version/src.main.java.fr.cines.eudat.log.Log.java", "BodyUseAPI": [], "Fixed commit": "7300ca7b4ed7d1a2e862263bd7b0f69b2a3f81eb", "Url": "https://api.github.com/repos/ufal/lindat-B2SAFE-repository-package", "Date": "2015-07-16T20:41:43Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sortedDatapoints.isEmpty()) { return downsampleDatapoints; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1995/buggy-version/ArgusCore.src.main.java.com.salesforce.dva.argus.service.metric.transform.DownsampleTransform.java", "BodyUseAPI": [], "Fixed commit": "dab4fc8cba1c9ccb41c2315ce15afc44ec103fbb", "Url": "https://api.github.com/repos/aertoria/Argus", "Date": "2016-06-21T21:37:09Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(topLevelTransaction.isDeleted(domainObject))) { if (domainObject instanceof pt.ist.fenixframework.plugins.luceneIndexing.domain.interfaces.Searchable) { for (pt.ist.fenixframework.plugins.luceneIndexing.domain.interfaces.Indexable indexableObject : ((pt.ist.fenixframework.plugins.luceneIndexing.domain.interfaces.Searchable) (domainObject)).getObjectsToIndex()) { new pt.ist.fenixframework.plugins.luceneIndexing.domain.IndexingRequest(indexableObject); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/7481/buggy-version/lucene-indexing-plugin.src.pt.ist.fenixframework.plugins.luceneIndexing.IndexListener.java", "BodyUseAPI": [], "Fixed commit": "d41d12c5aef5afc045daaa002e6b6470f8a4f491", "Url": "https://api.github.com/repos/pedrosan7os/bennu", "Date": "2011-07-12T09:16:38Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.TableViewer.getInput()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((null == cmList) || ((cmList.size()) == 0)) { payCount = new java.math.BigDecimal(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5202/buggy-version/com.topsun.posclient.sales.ui.src.com.topsun.posclient.sales.dialog.ReturnedPayDialog.java", "BodyUseAPI": [], "Fixed commit": "2f55c40c7e7bfae6efde9de5e5ddeb43ed2a9b92", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2014-04-01T18:32:22Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scrum.server.GwtConversation.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (project.isCurrentSprintSet()) project.getCurrentSprint().getDaySnapshot(ilarkesto.base.time.Date.today()).updateWithCurrentSprint();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8433/buggy-version/src.main.java.scrum.server.ScrumServiceImpl.java", "BodyUseAPI": ["project.getCurrentSprint().getDaySnapshot(ilarkesto.base.time.Date.today()).updateWithCurrentSprint()", "project.getCurrentSprint().getDaySnapshot(ilarkesto.base.time.Date.today())", "scrum.server.project.Project.getCurrentSprint()"], "Fixed commit": "f3f2269e735bb4fc4c0b3e2b15350d1ccd01fef2", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2012-05-15T22:07:20Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) instanceof com.sathy.evlo.adapter.SectionedCircleCursorAdapter) { com.sathy.evlo.adapter.SectionedCircleCursorAdapter sectionedAdapter = ((com.sathy.evlo.adapter.SectionedCircleCursorAdapter) (adapter)); java.lang.Object sectionObject = sectionedAdapter.getItem(position); int cursorPosition = sectionedAdapter.getCursorPositionWithoutSections(position); if ((sectionedAdapter.isSection(position)) && (sectionObject != null)) { return; }else if (cursorPosition != (com.twotoasters.sectioncursoradapter.SectionCursorAdapter.NO_CURSOR_POSITION)) { long _id = adapter.getItemId(position); edit(_id); } }else edit(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5724/buggy-version/app.src.main.java.com.sathy.evlo.activity.CircleListActivity.java", "BodyUseAPI": [], "Fixed commit": "c1eaf03cff7a47ae3f11bc68b38e00831b46d488", "Url": "https://api.github.com/repos/legendjaks/evlo", "Date": "2015-07-21T13:49:59Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (canvas != null) { canvas.drawColor(Color.WHITE); player.draw(canvas); com.characters.rocks.Rock[] rockArray = rocks.toArray(new com.characters.rocks.Rock[0]); for (com.characters.rocks.Rock rock : rockArray) { rock.draw(canvas); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/58/buggy-version/src.com.background.rocks.Graphics.java", "BodyUseAPI": ["android.graphics.Canvas.drawColor(Color.WHITE)", "com.characters.rocks.Player.draw(android.graphics.Canvas)", "com.characters.rocks.Rock.draw(android.graphics.Canvas)"], "Fixed commit": "835e7574453de9bfba460102b3bdb0b8b91ff464", "Url": "https://api.github.com/repos/addrum/Rocks", "Date": "2013-11-14T22:37:07Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof java.lang.Class) { java.lang.reflect.Type genericSuperclass = ((java.lang.Class) (t)).getGenericSuperclass(); if (genericSuperclass != null) { java.lang.Class ret = datatypeClassHandled(genericSuperclass); if (ret != null) { return ret; } } for (java.lang.reflect.Type candidate : ((java.lang.Class) (t)).getGenericInterfaces()) { java.lang.Class ret = datatypeClassHandled(candidate); if (ret != null) { return ret; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/8261/buggy-version/api.src.main.java.org.openmrs.api.impl.DatatypeServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "95b3ab3de2d8ec488d0ca0fcbcb1e8969d491313", "Url": "https://api.github.com/repos/wluyima/openmrs-core", "Date": "2016-01-21T19:54:58Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lockedFluidName.length()) != 0) aNBT.setString(\"lockedFluidName\", lockedFluidName); else aNBT.removeTag(\"lockedFluidName\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/9205/buggy-version/src.main.java.gregtech.api.metatileentity.implementations.GT_MetaTileEntity_Hatch_Output.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.setString(java.lang.String,java.lang.String)"], "Fixed commit": "e2e0018ca3b8ffded956913b2fc04e3b6a7b1c1e", "Url": "https://api.github.com/repos/GTNewHorizons/GT5-Unofficial", "Date": "2017-08-18T12:32:17Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPrime) == 1) currentPrime = 2; else if ((currentPrime) == 2) currentPrime = 3; else do { currentPrime += 2; } while (!(isPrime(currentPrime)) );", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5055/buggy-version/generator.PrimeGenerator.java", "BodyUseAPI": [], "Fixed commit": "024fcd6c518a0dc0e3347ecd59b9e76b04fa55ed", "Url": "https://api.github.com/repos/holmer/test1", "Date": "2013-10-18T13:16:49Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opponentFormerTotalCallAmount) != 0) { odds = (opponentFormerTotalCallAmount) / ((potSize) - (opponentFormerTotalCallAmount)); }else { double amountToCall = (opponentTotalBetSize) - (botTotalBetSize); double amountToWin = ((potSize) + (opponentTotalBetSize)) + (botTotalBetSize); odds = amountToCall / amountToWin; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/315/buggy-version/src.main.java.com.lennart.model.rangebuilder.postflop.PostFlopRangeBuilder.java", "BodyUseAPI": [], "Fixed commit": "b9c0a482c9e2f8b92e58cbb82dd2d891ff84932f", "Url": "https://api.github.com/repos/coconutsRhealthy/headsuphelper", "Date": "2017-03-01T16:20:45Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newResGrp) { for (com.microsoft.azure.management.resources.ResourceGroup resGrp : azure.resourceGroups().list()) { if (resGrp.name().equals(selectedResGrpValue)) { throw new com.microsoft.azuretools.azurecommons.exceptions.InvalidFormDataException(((\"The resource group \" + selectedResGrpValue) + \" is not available\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/5684/buggy-version/Utils.azuretools-core.src.com.microsoft.azuretools.azurecommons.helpers.RedisCacheUtil.java", "BodyUseAPI": [], "Fixed commit": "dbfdd36881e448d14d1101d9fbc8ec0972bc5b63", "Url": "https://api.github.com/repos/jdneo/azure-tools-for-java", "Date": "2017-10-17T04:54:40Z"},
{"Line": "=>1027", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((gameMaster.getTimer()) != null) { gameMaster.stopTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/6668/buggy-version/src.no.uib.info233.v2017.rei008_jsi014.oblig4.GUI.GUI.java", "BodyUseAPI": [], "Fixed commit": "ce2ce111f7e6b4c403f1966ce5b2ed9189344877", "Url": "https://api.github.com/repos/eikenottt/Oblig4", "Date": "2017-05-31T16:07:39Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cpw.mods.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (cpw.mods.fml.relauncher.Side.SERVER)) if (oortcloud.estateagent.util.PlayerUtil.getInstance().hasPlayerPermission(player, 4)) { return java.lang.Integer.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/4361/buggy-version/src.main.java.oortcloud.estateagent.properties.ExtendedPropertyLand.java", "BodyUseAPI": [], "Fixed commit": "2e8111821f7cac94edda6878f02b038c05ba8a7b", "Url": "https://api.github.com/repos/a3626a/EstateAgent-1.7.10", "Date": "2015-10-03T17:34:43Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(v.stunde)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stunde >= 8) { if (tag[7].getName().equals(v.fach)) { st = tag[7]; }else if (tag[8].getName().equals(v.fach)) { st = tag[8]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1320/buggy-version/src.de.maxgb.vertretungsplan.fragments.stundenplan.ModifiedStundenplanFragment.java", "BodyUseAPI": [], "Fixed commit": "7ea7c3ff3dc4f9d10c20303b1599509c4a50f2ac", "Url": "https://api.github.com/repos/maxanier/Vertretungsplan", "Date": "2014-10-01T18:02:10Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (st == null) { st = tag[(stunde - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1320/buggy-version/src.de.maxgb.vertretungsplan.fragments.stundenplan.ModifiedStundenplanFragment.java", "BodyUseAPI": [], "Fixed commit": "7ea7c3ff3dc4f9d10c20303b1599509c4a50f2ac", "Url": "https://api.github.com/repos/maxanier/Vertretungsplan", "Date": "2014-10-01T18:02:10Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source instanceof com.gmail.zariust.otherdrops.subject.CreatureSubject) { org.bukkit.entity.Entity creature = ((com.gmail.zariust.otherdrops.subject.CreatureSubject) (source)).getAgent(); if (creature instanceof org.bukkit.entity.Enderman) { org.bukkit.inventory.ItemStack stack = ((org.bukkit.entity.Enderman) (creature)).getCarriedMaterial().toItemStack(1); dropResult.addWithoutOverride(com.gmail.zariust.otherdrops.drop.ContentsDrop.drop(where, stack, flags.naturally)); }else if (creature instanceof org.bukkit.entity.LivingEntity) { org.bukkit.inventory.ItemStack stack = ((org.bukkit.entity.LivingEntity) (creature)).getEquipment().getItemInHand(); dropResult.addWithoutOverride(com.gmail.zariust.otherdrops.drop.ContentsDrop.drop(where, stack, flags.naturally)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V106/1216/buggy-version/src.com.gmail.zariust.otherdrops.drop.ContentsDrop.java", "BodyUseAPI": [], "Fixed commit": "736dcbcb6264a0e36ebc7aa249b1f2498030eb51", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2014-12-21T21:38:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((builder.charAt(j)) == '>') { lastHolderStart = j; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2700/buggy-version/src.main.java.net.epicpla.placer.Main.java", "BodyUseAPI": [], "Fixed commit": "369d68c76655eedb6fff9e67670225867066e989", "Url": "https://api.github.com/repos/EpicPlanet/Placer", "Date": "2016-09-03T03:44:12Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (val == null) setString(null); else if (val instanceof java.lang.Float) setFloat(((java.lang.Float) (val)).floatValue()); else if (val instanceof java.lang.Double) setDouble(((java.lang.Double) (val)).doubleValue()); else if (val instanceof java.lang.Integer) setInt(((java.lang.Integer) (val)).intValue()); else if (val instanceof java.lang.Long) setLong(((java.lang.Long) (val)).longValue()); else if (val instanceof java.lang.Boolean) setBoolean(((java.lang.Boolean) (val)).booleanValue()); else if (val instanceof java.lang.String) setString(((java.lang.String) (val))); else if (val instanceof net.sourceforge.javajson.JsonObject) setJsonObject(((net.sourceforge.javajson.JsonObject) (val))); else if (val instanceof net.sourceforge.javajson.JsonArray) setJsonArray(((net.sourceforge.javajson.JsonArray) (val))); else throw new java.lang.ClassCastException(\"Unrecognized class\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5259/buggy-version/src.net.sourceforge.javajson.JsonValue.java", "BodyUseAPI": [], "Fixed commit": "e2e7b45704d6eedf6e545ecf6fd1209bee05078f", "Url": "https://api.github.com/repos/mdeanda/javajson", "Date": "2006-03-27T10:03:48Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i < (Grid.GRID_HEIGHT)) && (_grid[x][i].getType().equals(temp))) { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4012/buggy-version/src.Grid.java", "BodyUseAPI": [], "Fixed commit": "6b99d3c0086d7591beb6174667a18e4b77eedd82", "Url": "https://api.github.com/repos/VjiaoBlack/GemSwitch", "Date": "2013-08-18T17:30:02Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i < (Grid.GRID_WIDTH)) && (_grid[i][y].getType().equals(temp))) { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4012/buggy-version/src.Grid.java", "BodyUseAPI": [], "Fixed commit": "6b99d3c0086d7591beb6174667a18e4b77eedd82", "Url": "https://api.github.com/repos/VjiaoBlack/GemSwitch", "Date": "2013-08-18T17:30:02Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, org.enderstone.server.blocks.BlockDefinition>.get(type.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (definition != null) { return definition; }else { return new org.enderstone.server.blocks.BlockDefinition(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2282/buggy-version/src.org.enderstone.server.blocks.BlockDefinitions.java", "BodyUseAPI": [], "Fixed commit": "47a6d2651662ea93cdcd1f834afc1591334da8be", "Url": "https://api.github.com/repos/gyroninja/Enderstone", "Date": "2014-09-24T00:31:25Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (end < (d.getLength())) { newlineChar = d.get(end, 1); }else if (start > 0) { newlineChar = d.get((start - 1), 1); }else { newlineChar = java.lang.System.lineSeparator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1804/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.editor.CeylonAutoEditStrategy.java", "BodyUseAPI": ["org.eclipse.jface.text.IDocument.get(int,int)", "org.eclipse.jface.text.IDocument.get(int,int)"], "Fixed commit": "6781f2cd833ded61e85d9e9eb3be6fd4d4ffb9c8", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2012-09-06T16:24:27Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getArgumentCount()) == 0) { return org.exist.xquery.Dependency.CONTEXT_SET; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5311/buggy-version/src.org.exist.xquery.functions.fn.FunCount.java", "BodyUseAPI": [], "Fixed commit": "775d822be2c6526bb733e74e4774f52a9a9201b0", "Url": "https://api.github.com/repos/shabanovd/exist", "Date": "2014-04-08T21:10:01Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (actionBar != null) { actionBar.setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4135/buggy-version/lib-android.szu.bdi.hybrid.core.src.main.java.szu.bdi.hybrid.core.HybridUi.java", "BodyUseAPI": ["android.app.ActionBar.setDisplayHomeAsUpEnabled(boolean)"], "Fixed commit": "56f1185f1c876a0062b55c0e3b458aedf822a13c", "Url": "https://api.github.com/repos/SZU-BDI/app-hybrid-core", "Date": "2016-12-02T16:47:59Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client.level) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2359/buggy-version/src.engine.network.packet.Packet2EOEInventoryUpdate.java", "BodyUseAPI": [], "Fixed commit": "91ac83e1dd00bcd2b96bd91cbcce97df347902f9", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-11-23T16:26:04Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (meal.isNew()) { em.persist(meal); }else em.merge(meal);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6014/buggy-version/src.main.java.ru.javawebinar.topjava.repository.jpa.JpaMealRepositoryImpl.java", "BodyUseAPI": ["javax.persistence.EntityManager.merge(ru.javawebinar.topjava.model.Meal)", "javax.persistence.EntityManager.persist(ru.javawebinar.topjava.model.Meal)"], "Fixed commit": "cb2909007eaadb0b3675bfe652cd8121ecab8bdb", "Url": "https://api.github.com/repos/MikhailKlimenko/topjava", "Date": "2017-12-17T18:43:16Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(meal.isNew())) && ((get(meal.getId(), userId)) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6014/buggy-version/src.main.java.ru.javawebinar.topjava.repository.jpa.JpaMealRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "cb2909007eaadb0b3675bfe652cd8121ecab8bdb", "Url": "https://api.github.com/repos/MikhailKlimenko/topjava", "Date": "2017-12-17T18:43:16Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myNonprofit.isAuctionWithinYear()) == true) { javax.swing.JOptionPane.showMessageDialog(null, (\"I'm sorry, you cannot submit this auction as you \" + \"already have had an auction within the past year \")); }else if ((myData.auctionMoreThan2Day(newAuction)) == true) { javax.swing.JOptionPane.showMessageDialog(null, (\"I'm sorry, you cannot submit this auction as there \" + \"is already 2 auctions scheduled for the day you specified\")); }else if ((myData.auctionExceedsMax(newAuction)) == true) { javax.swing.JOptionPane.showMessageDialog(null, (\"I'm sorry, you cannot submit this auction at this time as there \" + \"is already the max number of auctions allowed in the system at this time\")); }else if ((myData.auctionPlannedWeekAhead(newAuction)) == true) { javax.swing.JOptionPane.showMessageDialog(null, (\"I'm sorry, you cannot submit this auction as you \" + \"must submit your auction at least one week into the future\")); }else { javax.swing.JOptionPane.showMessageDialog(null, (\"I'm sorry, you cannot submit this auction as you \" + \"must submit your auction at most no more than one month into the future\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1440/buggy-version/AuctionCentral.src.view.NonprofitPanel.java", "BodyUseAPI": [], "Fixed commit": "59419adb87830d385baf314f849bad19d39d77c2", "Url": "https://api.github.com/repos/mnickels/BeyondIndustries-AuctionCentral", "Date": "2016-12-06T07:32:45Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codedefenders.validation.CodeValidator.getCompilationUnit(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cu == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4775/buggy-version/src.main.java.org.codedefenders.validation.CodeValidator.java", "BodyUseAPI": [], "Fixed commit": "071b16b68f5b37bc29ba267d235a6eb0ddacd49b", "Url": "https://api.github.com/repos/CodeDefenders/CodeDefenders", "Date": "2016-07-29T14:54:47Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) != null) { float w = image.getRegionWidth(); float h = image.getRegionHeight(); float originY = ((float) (h * (turnPointY))); float originX = ((float) (w * (turnPointX))); spriteBatch.draw(image.getTexture(), x, y, originX, originY, w, h, ((float) (scaleX)), ((float) (scaleY)), org.gameflow.utils.MathTools.toDegrees(((angleTurns) * (MathTools.Tau))), image.getRegionX(), image.getRegionY(), image.getRegionWidth(), image.getRegionHeight(), isMirrorX(), isMirrorY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/726/buggy-version/main.src.org.gameflow.utils.ImageRef.java", "BodyUseAPI": [], "Fixed commit": "d9f357ba39d1256fbe599b30aa0ba801d6932e3d", "Url": "https://api.github.com/repos/zzorn/ludumdare24", "Date": "2012-08-26T10:10:52Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"hudson.plugins.promoted_builds.PromotionProcess\".equals(project.getClass().getName())) { project = project.getRootProject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3508/buggy-version/src.main.java.hudson.maven.RedeployPublisher.java", "BodyUseAPI": ["hudson.model.AbstractProject.getRootProject()"], "Fixed commit": "a2bcad0aab1f347aded7939f90a39e59b4314026", "Url": "https://api.github.com/repos/aheritier/maven-plugin", "Date": "2015-10-23T08:30:05Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.mzmine.gui.preferences.NumberFormatParameter.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (format == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8911/buggy-version/src.main.java.io.github.mzmine.gui.preferences.NumberFormatParameter.java", "BodyUseAPI": [], "Fixed commit": "63fce1ece2d1483fd61fe9723c198117eeda3b95", "Url": "https://api.github.com/repos/mzmine/mzmine3", "Date": "2015-09-17T13:12:47Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.mzmine.gui.preferences.NumberFormatParameter.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (format == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8911/buggy-version/src.main.java.io.github.mzmine.gui.preferences.NumberFormatParameter.java", "BodyUseAPI": [], "Fixed commit": "63fce1ece2d1483fd61fe9723c198117eeda3b95", "Url": "https://api.github.com/repos/mzmine/mzmine3", "Date": "2015-09-17T13:12:47Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modes.isEmpty()) { bestScores.addAll(models.Scores.keepBestScoresForEachPlayer(filterBy(difficulty))); }else { for (final models.Mode mode : modes) { bestScores.addAll(models.Scores.keepBestScoresForEachPlayer(filterBy(difficulty, mode))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2957/buggy-version/app.models.Game.java", "BodyUseAPI": [], "Fixed commit": "48c9241a06f89d9f97d3d7be3f81d52b40efc700", "Url": "https://api.github.com/repos/jsmadja/shmuphiscores", "Date": "2013-11-30T21:51:43Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getSemanticElement()) instanceof de.fzi.sensidl.design.sensidl.dataRepresentation.NonMeasurementData) { needToBeConverted = (((de.fzi.sensidl.design.sensidl.dataRepresentation.NonMeasurementData) (node.getSemanticElement())).getDataType().getValue()) != (de.fzi.sensidl.design.sensidl.dataRepresentation.DataType.STRING_VALUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9149/buggy-version/code.specification.de.fzi.sensidl.language.src.de.fzi.sensidl.language.converters.StringConverter.java", "BodyUseAPI": ["((de.fzi.sensidl.design.sensidl.dataRepresentation.NonMeasurementData) (node.getSemanticElement())).getDataType()", "((de.fzi.sensidl.design.sensidl.dataRepresentation.NonMeasurementData) (node.getSemanticElement())).getDataType().getValue()", "org.eclipse.xtext.nodemodel.INode.getSemanticElement()"], "Fixed commit": "e20aedfd440342772b42d29f9eb14a7cbb084a8e", "Url": "https://api.github.com/repos/SENSIDL-PROJECT/SensIDL", "Date": "2016-07-12T10:16:24Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.media.CamcorderProfile.hasProfile(CamcorderProfile.QUALITY_2160P)) { return camera.new android.util.Size(3840, 2160); }else if (android.media.CamcorderProfile.hasProfile(CamcorderProfile.QUALITY_1080P)) { return camera.new android.util.Size(1920, 1080); }else if (android.media.CamcorderProfile.hasProfile(CamcorderProfile.QUALITY_720P)) { return camera.new android.util.Size(1280, 720); }else { return camera.new android.util.Size(640, 480); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2644/buggy-version/encoder.src.main.java.com.pedro.encoder.input.video.Camera1ApiManager.java", "BodyUseAPI": [], "Fixed commit": "2d5901bda48447124cc42e789842d2b01e2976f1", "Url": "https://api.github.com/repos/pedroSG94/rtmp-rtsp-stream-client-java", "Date": "2017-08-11T09:18:18Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((canvasSize) != null) { canvas.setCanvasSize(canvasSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3913/buggy-version/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.tracingview.TracingViewSettings.java", "BodyUseAPI": [], "Fixed commit": "826815598ada1630840305ad75754d848a1e5053", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-03-16T13:33:55Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DataApi.GetFdForAssetResult.getInputStream()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (assetInputStream == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5755/buggy-version/teleportlib.src.main.java.com.mariux.teleport.lib.TeleportClient.java", "BodyUseAPI": [], "Fixed commit": "a6ccb29777443f27010bf6e55d8c22ec500eda7b", "Url": "https://api.github.com/repos/sealskej/Teleport", "Date": "2014-10-30T23:19:36Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((googleApiClient == null) || (!(googleApiClient.isConnected()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5755/buggy-version/teleportlib.src.main.java.com.mariux.teleport.lib.TeleportClient.java", "BodyUseAPI": [], "Fixed commit": "a6ccb29777443f27010bf6e55d8c22ec500eda7b", "Url": "https://api.github.com/repos/sealskej/Teleport", "Date": "2014-10-30T23:19:36Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (asset == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5755/buggy-version/teleportlib.src.main.java.com.mariux.teleport.lib.TeleportClient.java", "BodyUseAPI": [], "Fixed commit": "a6ccb29777443f27010bf6e55d8c22ec500eda7b", "Url": "https://api.github.com/repos/sealskej/Teleport", "Date": "2014-10-30T23:19:36Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Wearable.DataApi.getFdForAsset(googleApiClient, asset).await()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((pendingResult == null) || ((pendingResult.getFd()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5755/buggy-version/teleportlib.src.main.java.com.mariux.teleport.lib.TeleportClient.java", "BodyUseAPI": [], "Fixed commit": "a6ccb29777443f27010bf6e55d8c22ec500eda7b", "Url": "https://api.github.com/repos/sealskej/Teleport", "Date": "2014-10-30T23:19:36Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getFacesContext().getExternalContext().getRequestMap().get(RequestDispatcher.FORWARD_REQUEST_URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((forwardedUrl != null) && (forwardedUrl instanceof java.lang.String)) { sb = new java.lang.StringBuffer(((java.lang.String) (forwardedUrl))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3174/buggy-version/impl.src.main.java.org.jboss.seam.faces.security.LoginListener.java", "BodyUseAPI": [], "Fixed commit": "c0ee2125ebbb60d5cbaedf4f2404afc8440f9e6a", "Url": "https://api.github.com/repos/seam/faces", "Date": "2012-06-11T10:32:14Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.auth.ClientLogin.DEBUG) { java.lang.System.out.println(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8708/buggy-version/src.com.google.auth.ClientLogin.java", "BodyUseAPI": [], "Fixed commit": "e76b6e725fd680b1c402d8455238e8145f4a2b28", "Url": "https://api.github.com/repos/microg/JGAPI", "Date": "2012-12-04T23:11:06Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) > 1) attachScrollListener();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5769/buggy-version/app.src.main.java.com.viableindustries.waterreporter.AuthUserActivity.java", "BodyUseAPI": [], "Fixed commit": "41cb507867f4553b15bb5ca539353e3861e43440", "Url": "https://api.github.com/repos/WaterReporter/WaterReporter-Android", "Date": "2017-10-19T19:10:23Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((environment.getSource()) instanceof graphql.introspection.GraphQLArgument) { graphql.introspection.GraphQLArgument inputField = ((graphql.introspection.GraphQLArgument) (environment.getSource())); return (inputField.getDefaultValue()) != null ? inputField.getDefaultValue().toString() : null; }else if ((environment.getSource()) instanceof graphql.introspection.GraphQLInputObjectField) { graphql.introspection.GraphQLInputObjectField inputField = ((graphql.introspection.GraphQLInputObjectField) (environment.getSource())); return (inputField.getDefaultValue()) != null ? inputField.getDefaultValue().toString() : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1513/buggy-version/src.main.java.graphql.introspection.Introspection.java", "BodyUseAPI": ["graphql.introspection.DataFetchingEnvironment.getSource()", "graphql.introspection.DataFetchingEnvironment.getSource()", "graphql.introspection.DataFetchingEnvironment.getSource()"], "Fixed commit": "b74b5424ed440e42ce5f40dc6ba98c3c2cd1dc8e", "Url": "https://api.github.com/repos/graphql-java/graphql-java", "Date": "2015-08-18T16:46:39Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yuku.alkitab.base.model.Ari.toVerse(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lastVerse == 0) { if (startChapter != (lastChapter - 1)) { sb.append((\"-\" + (lastChapter - 1))); } }else { sb.append((((\"-\" + lastChapter) + \":\") + lastVerse)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7473/buggy-version/Alkitab.src.yuku.alkitab.base.ac.ReadingPlanActivity.java", "BodyUseAPI": ["android.text.SpannableStringBuilder.append(java.lang.String)"], "Fixed commit": "9724fc713e8165d487b867fe894ef470b54d3e8e", "Url": "https://api.github.com/repos/yukuku/androidbible", "Date": "2013-10-29T07:35:40Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Throwable.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cause == null) { return builder.build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7895/buggy-version/agent.core.src.main.java.org.glowroot.agent.model.ErrorMessage.java", "BodyUseAPI": [], "Fixed commit": "5c3fbf7453c0f992ae96d8ab3c2aac2932f73fc3", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2016-09-15T18:48:46Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mSelectedPosition) != (event.getSelectedPosition())) { mSelectedPosition = event.getSelectedPosition(); showRecipeStepFragment(mRecipeSteps.get(mSelectedPosition)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1691/buggy-version/app.src.main.java.io.arfirman1402.dev.myclassicbakingapp.view.activity.RecipeActivity.java", "BodyUseAPI": ["io.arfirman1402.dev.myclassicbakingapp.event.RecipeStepEvent.getSelectedPosition()"], "Fixed commit": "776e6fc632c770deb1801ff36f94a144298e0058", "Url": "https://api.github.com/repos/arfirman1402/My-Classic-Baking-App", "Date": "2017-08-19T08:39:15Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousBookSearch) != null) { previousBookSearch.setVisible(false); previousBookSearch.dispose(); previousBookSearch = null; previousBookSearch = bookSearch; }else { previousBookSearch = bookSearch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5817/buggy-version/LMS.src.view.DataUpload.java", "BodyUseAPI": [], "Fixed commit": "ef681c83ba15ab6b1ed221cfe2f2f5a77b199291", "Url": "https://api.github.com/repos/songulabuzar/CS535-LibraryManagementSystem", "Date": "2016-12-22T12:41:41Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thisReadSequence == null) { throw new java.lang.IllegalArgumentException(\"thisReadSequence can not be null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4602/buggy-version/genomix.genomix-data.src.main.java.edu.uci.ics.genomix.type.ReadHeadInfo.java", "BodyUseAPI": [], "Fixed commit": "42a5bb2c1ebd5089afa8210d1b9e76d9f4c99507", "Url": "https://api.github.com/repos/uci-cbcl/genomix", "Date": "2013-11-22T23:35:56Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((corrects.size()) > (answers.size())) { throw new java.lang.Exception((\"setCorrect: The correct arraylist is larger \\nthan the answer\" + \" arraylist. This does not make sense.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5569/buggy-version/app.src.main.java.com.example.jokel.group16_hw04.Question.java", "BodyUseAPI": [], "Fixed commit": "f21073d522e2e31aefc5a3b45e4308f787ee3799", "Url": "https://api.github.com/repos/josiahls/Group16_HW04", "Date": "2017-10-02T21:33:34Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(participantNames.contains(userName))) participantNames.add(userName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5585/buggy-version/app.src.main.java.com.example.saglik.redcarpet.Activities.PartyCheckinActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "548750b0162ffb9a19fdf5af15a531e86d6abfdf", "Url": "https://api.github.com/repos/tolgasaglik/RedCarpet", "Date": "2017-12-24T20:59:34Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length()) > 0) { while ((input.charAt(0)) == '(') input = input.substring(1); while ((input.charAt(((input.length()) - 1))) == ')') input = input.substring(((input.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1169/buggy-version/src.functionStructure.Expression.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.charAt(int)"], "Fixed commit": "f7204178737759c7d0e7d18322bfad2e281fba8e", "Url": "https://api.github.com/repos/Lucroth/op-calculator", "Date": "2016-11-10T17:01:02Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((expressions) == null) && (input.equals(\"\"))) return 0; else if ((expressions) == null) return java.lang.Double.parseDouble(input); else if ((expressions.size()) == 1) return expressions.get(0).getValue(); else return Calculate(operations);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1169/buggy-version/src.functionStructure.Expression.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "f7204178737759c7d0e7d18322bfad2e281fba8e", "Url": "https://api.github.com/repos/Lucroth/op-calculator", "Date": "2016-11-10T17:01:02Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.concordia.cssanalyser.refactoring.RefactorToSatisfyDependencies.SelectorEqualsMap.get(dependency.getSelector1())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selList != null) { for (ca.concordia.cssanalyser.cssmodel.selectors.Selector selector : selList) { for (ca.concordia.cssanalyser.cssmodel.declaration.Declaration declaration : selector.getDeclarations()) { if (declaration.declarationIsEquivalent(dependency.getDeclaration1())) { putCorrespondingRealSelectors(dependencyNodeToSelectorMap, dependency, declaration.getSelector(), 0); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/905/buggy-version/src.main.java.ca.concordia.cssanalyser.refactoring.RefactorToSatisfyDependencies.java", "BodyUseAPI": [], "Fixed commit": "6e98f4c63ca7eeb86881679a3f3f07e302ad8cf1", "Url": "https://api.github.com/repos/matthewhague/css-analyser", "Date": "2016-10-21T08:43:58Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (selList != null) { for (ca.concordia.cssanalyser.cssmodel.selectors.Selector selector : selList) { for (ca.concordia.cssanalyser.cssmodel.declaration.Declaration declaration : selector.getDeclarations()) { if (declaration.declarationIsEquivalent(dependency.getDeclaration2())) { putCorrespondingRealSelectors(dependencyNodeToSelectorMap, dependency, declaration.getSelector(), 1); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/905/buggy-version/src.main.java.ca.concordia.cssanalyser.refactoring.RefactorToSatisfyDependencies.java", "BodyUseAPI": [], "Fixed commit": "6e98f4c63ca7eeb86881679a3f3f07e302ad8cf1", "Url": "https://api.github.com/repos/matthewhague/css-analyser", "Date": "2016-10-21T08:43:58Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity.isTouching(Direction.DOWN)) { return anim.AnimationState.IDLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7800/buggy-version/src.anim.AnimationState.java", "BodyUseAPI": [], "Fixed commit": "3856f1c19b226df83bc729297c6268d350be5e29", "Url": "https://api.github.com/repos/TAMED/seasons", "Date": "2013-05-22T12:30:33Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((notificationInfo.getLargeImage()) != null) { customNotification.setBitmap(R.id.exomedia_notification_large_image, \"setImageBitmap\", notificationInfo.getLargeImage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7790/buggy-version/library.src.main.java.com.devbrackets.android.exomedia.EMNotification.java", "BodyUseAPI": ["android.widget.RemoteViews.setBitmap(R.id.exomedia_notification_large_image,java.lang.String,notificationInfo.getLargeImage())", "com.devbrackets.android.exomedia.NotificationInfo.getLargeImage()"], "Fixed commit": "7e67530abf898a2adb3bbe18f7d2709ad3efced9", "Url": "https://api.github.com/repos/brianwernick/ExoMedia", "Date": "2015-11-25T15:31:11Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (resultsNode == null) return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4766/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.MendeleyPublicationCollection.java", "BodyUseAPI": [], "Fixed commit": "8f8eb978c0d3d1fa73ad9fc8d23a78c00f514f61", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-02-23T15:47:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map) != null) { map.setMyLocationEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6333/buggy-version/src.be.ugent.oomo.groep12.studgent.activity.POIMapviewActivity.java", "BodyUseAPI": [], "Fixed commit": "7f242b01ed14e613fae92ac5e4a912f9bd819cec", "Url": "https://api.github.com/repos/studgent/android", "Date": "2014-05-12T12:58:47Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_inventory[indexRepresentedByChoice[ver0.PlayerActor.select]]) < 1) { java.lang.System.out.println(((\"You dont have a \" + (items[indexRepresentedByChoice[ver0.PlayerActor.select]])) + \" to equip!\")); }else { if ((this.getEquippedArmor().getId()) != 10) { (m_inventory[this.getEquippedArmor().getId()])++; } this.equipArmor(items[indexRepresentedByChoice[ver0.PlayerActor.select]]); (m_inventory[indexRepresentedByChoice[ver0.PlayerActor.select]])--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1788/buggy-version/GenericRPG.src.ver0.PlayerActor.java", "BodyUseAPI": ["ver0.PlayerActor.equipArmor(items[indexRepresentedByChoice[ver0.PlayerActor.select]])", "java.io.PrintStream.println(((\"You dont have a \" + (items[indexRepresentedByChoice[ver0.PlayerActor.select]])) + \" to equip!\"))"], "Fixed commit": "c8833bbc2a062003699cdcd7ba066a1933a89645", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-08T21:09:27Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_inventory[indexRepresentedByChoice[ver0.PlayerActor.select]]) < 1) { java.lang.System.out.println(((\"You dont have a \" + (items[indexRepresentedByChoice[ver0.PlayerActor.select]])) + \" to equip!\")); }else { if ((this.getEquippedGauntlets().getId()) != 12) { (m_inventory[this.getEquippedGauntlets().getId()])++; } this.equipGauntlets(items[indexRepresentedByChoice[ver0.PlayerActor.select]]); (m_inventory[indexRepresentedByChoice[ver0.PlayerActor.select]])--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1788/buggy-version/GenericRPG.src.ver0.PlayerActor.java", "BodyUseAPI": ["java.io.PrintStream.println(((\"You dont have a \" + (items[indexRepresentedByChoice[ver0.PlayerActor.select]])) + \" to equip!\"))", "ver0.PlayerActor.equipGauntlets(items[indexRepresentedByChoice[ver0.PlayerActor.select]])"], "Fixed commit": "c8833bbc2a062003699cdcd7ba066a1933a89645", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-08T21:09:27Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_inventory[indexRepresentedByChoice[ver0.PlayerActor.select]]) < 1) { java.lang.System.out.println(((\"You dont have a \" + (items[indexRepresentedByChoice[ver0.PlayerActor.select]])) + \" to equip!\")); }else { if ((this.getEquippedHelmet().getId()) != 11) { (m_inventory[this.getEquippedHelmet().getId()])++; } this.equipHelmet(items[indexRepresentedByChoice[ver0.PlayerActor.select]]); (m_inventory[indexRepresentedByChoice[ver0.PlayerActor.select]])--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1788/buggy-version/GenericRPG.src.ver0.PlayerActor.java", "BodyUseAPI": ["java.io.PrintStream.println(((\"You dont have a \" + (items[indexRepresentedByChoice[ver0.PlayerActor.select]])) + \" to equip!\"))", "ver0.PlayerActor.equipHelmet(items[indexRepresentedByChoice[ver0.PlayerActor.select]])"], "Fixed commit": "c8833bbc2a062003699cdcd7ba066a1933a89645", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-08T21:09:27Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_inventory[indexRepresentedByChoice[ver0.PlayerActor.select]]) < 1) { java.lang.System.out.println(((\"You dont have a \" + (items[indexRepresentedByChoice[ver0.PlayerActor.select]])) + \" to equip!\")); }else { if ((this.getEquippedShield().getId()) != 9) { (m_inventory[this.getEquippedShield().getId()])++; } this.equipShield(items[indexRepresentedByChoice[ver0.PlayerActor.select]]); (m_inventory[indexRepresentedByChoice[ver0.PlayerActor.select]])--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1788/buggy-version/GenericRPG.src.ver0.PlayerActor.java", "BodyUseAPI": ["ver0.PlayerActor.equipShield(items[indexRepresentedByChoice[ver0.PlayerActor.select]])", "java.io.PrintStream.println(((\"You dont have a \" + (items[indexRepresentedByChoice[ver0.PlayerActor.select]])) + \" to equip!\"))"], "Fixed commit": "c8833bbc2a062003699cdcd7ba066a1933a89645", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-04-08T21:09:27Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (importList == null) { return java.util.Optional.empty(); }else { importList = importList.replaceAll(\"\\\\r|\\\\n\", \"\"); java.util.List<java.lang.String> imports = new java.util.ArrayList<>(); java.util.Collections.addAll(imports, importList.split(\",\")); return java.util.Optional.of(imports); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8776/buggy-version/uuf-core.src.main.java.org.wso2.carbon.uuf.fileio.InMemoryBundleCreator.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "19e4d9f47a0562a959eb65967dfae82abe8c21d3", "Url": "https://api.github.com/repos/manuranga/carbon-uuf", "Date": "2016-03-31T10:59:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.dynamicVariables.containsKey(dynamicFilter.getVariableName()))) { this.dynamicVariables.put(dynamicFilter.getVariableName(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4314/buggy-version/metadata.src.main.java.org.apache.kylin.metadata.filter.CompareTupleFilter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(dynamicFilter.getVariableName(),<nulltype>)", "org.apache.kylin.metadata.filter.DynamicTupleFilter.getVariableName()"], "Fixed commit": "4a5c9ceb7cffcc461ef26b7a6b86caa9025fdbd3", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-03-20T07:21:49Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(solver.isSolvable())) edu.princeton.cs.algs4.StdOut.println(\"No solution possible\"); else { edu.princeton.cs.algs4.StdOut.println((\"Minimum number of moves = \" + (solver.moves()))); for (algs4_assignment.Board board : solver.solution()) edu.princeton.cs.algs4.StdOut.println(board); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7477/buggy-version/8-puzzle.src.algs4_assignment.Solver.java", "BodyUseAPI": ["algs4_assignment.Solver.solution()", "algs4_assignment.Solver.moves()", "edu.princeton.cs.algs4.StdOut.println(java.lang.String)"], "Fixed commit": "8bd301cf41e443839b9455e608f2bccc62859091", "Url": "https://api.github.com/repos/wafer-li/Algs4Assignment", "Date": "2016-03-16T16:17:16Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (done) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/81/buggy-version/src.main.java.net.pixelcop.sewer.sink.SequenceFileWithRabbitMQSink.java", "BodyUseAPI": [], "Fixed commit": "a7ba909676226199bda096422ea27bbb5d521580", "Url": "https://api.github.com/repos/evidon/sewer", "Date": "2014-10-03T14:41:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.flink.python.api.jython.PythonStreamBinder.isFirstArgAnOption(args)) { args = org.apache.flink.python.api.jython.PythonStreamBinder.prepend(args, script.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6617/buggy-version/flink-libraries.flink-python.src.main.java.org.apache.flink.python.api.jython.PythonStreamBinder.java", "BodyUseAPI": ["org.apache.flink.python.api.jython.PythonStreamBinder.prepend(java.lang.String[],java.lang.String)"], "Fixed commit": "1e80a20d84272117b504fd897a9a2ec2a7535573", "Url": "https://api.github.com/repos/zohar-mizrahi/flink", "Date": "2017-02-26T10:59:33Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (now < 0) { org.zstack.storage.primary.PrimaryStorageManagerImpl.logger.warn(java.lang.String.format((\"negative available capacity of the primary storage, detail: re-calculated available capacity of the primary storage\" + \"[uuid:%s, before:%s, now:%s] with over-provisioning ratio[%s]\"), psUuid, before, now, ratioMgr.getRatio(psUuid))); now = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6764/buggy-version/storage.src.main.java.org.zstack.storage.primary.PrimaryStorageManagerImpl.java", "BodyUseAPI": ["org.zstack.utils.logging.CLogger.warn(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,long,long,ratioMgr.getRatio(psUuid))"], "Fixed commit": "65f7c2b3757f8ade0eb269e3a48ba898f8ea2537", "Url": "https://api.github.com/repos/liningone/zstack", "Date": "2017-03-13T14:37:36Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playSound && doVibrate) && showLights) { notification.defaults = android.app.Notification.DEFAULT_ALL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1568/buggy-version/src.bencoding.alarmmanager.AlarmNotificationListener.java", "BodyUseAPI": [], "Fixed commit": "fa512b758703e54fc22adf4028de58c57725a4a7", "Url": "https://api.github.com/repos/daffodilistic/benCoding.AlarmManager", "Date": "2013-12-04T10:58:44Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rows == 6) && (firstOfMonth == 0)) panel.setDate(((i - firstOfMonth) - 6)); else panel.setDate(((i - firstOfMonth) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8204/buggy-version/src.js.incomplete.JSCalendar.java", "BodyUseAPI": ["js.incomplete.JSCalendar.DayPanel.setDate(int)", "js.incomplete.JSCalendar.DayPanel.setDate(int)"], "Fixed commit": "748b03b3e440fedf57b2618460737ac5b2178190", "Url": "https://api.github.com/repos/jobbogamer/JSLibrary", "Date": "2012-06-01T22:47:45Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((rows == 6) && (firstOfMonth == 0)) panel.setDate(((i - firstOfMonth) - 6)); else panel.setDate(((i - firstOfMonth) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8204/buggy-version/src.js.incomplete.JSCalendar.java", "BodyUseAPI": [], "Fixed commit": "748b03b3e440fedf57b2618460737ac5b2178190", "Url": "https://api.github.com/repos/jobbogamer/JSLibrary", "Date": "2012-06-01T22:47:45Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outcome == 1) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1098/buggy-version/Blackjack.java", "BodyUseAPI": [], "Fixed commit": "b5d5aa78c9ee24a04245567f0aecac9578f189df", "Url": "https://api.github.com/repos/rdding/College-An-Oregon-Trail-Short", "Date": "2016-03-12T21:52:58Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jmsMessage != null) { jmsMessage.setJMSDeliveryMode(Message.DEFAULT_DELIVERY_MODE); jmsMessage.setJMSPriority(Message.DEFAULT_PRIORITY); jmsMessage.setJMSExpiration(Message.DEFAULT_TIME_TO_LIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4982/buggy-version/jms.org.wso2.carbon.transport.jms.src.main.java.org.wso2.carbon.transport.jms.sender.JMSClientConnectorImpl.java", "BodyUseAPI": ["javax.jms.Message.setJMSExpiration(Message.DEFAULT_TIME_TO_LIVE)", "javax.jms.Message.setJMSPriority(Message.DEFAULT_PRIORITY)", "javax.jms.Message.setJMSDeliveryMode(Message.DEFAULT_DELIVERY_MODE)"], "Fixed commit": "b06d5c7fb6286622c9fe0111af66079e8cd21eaa", "Url": "https://api.github.com/repos/erandacr/carbon-transports", "Date": "2017-10-01T16:10:30Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((r1) != 0) query += (((((((\" AND (T\" + (a1)) + \".role = \") + ((r1) << 1)) + \" OR T\") + (a1)) + \".role = \") + (1 | ((r1) << 1))) + \")\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4420/buggy-version/src.no.uio.ifi.qure.relation.PartOf.java", "BodyUseAPI": [], "Fixed commit": "79eaaa4e392a02a6790734665a683d30bd4f58a1", "Url": "https://api.github.com/repos/leifhka/Qure", "Date": "2017-09-21T12:53:51Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((r1) != 0) query += (((((((\" AND (T\" + (a1)) + \".role = \") + ((r1) << 1)) + \" OR T\") + (a1)) + \".role = \") + (1 | ((r1) << 1))) + \")\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4420/buggy-version/src.no.uio.ifi.qure.relation.PartOf.java", "BodyUseAPI": [], "Fixed commit": "79eaaa4e392a02a6790734665a683d30bd4f58a1", "Url": "https://api.github.com/repos/leifhka/Qure", "Date": "2017-09-21T12:53:51Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["echowand.object.RemoteObject.RemoteObjectGetTransactionListener.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (data == null) { echowand.object.EchonetObjectException exception = new echowand.object.EchonetObjectException(\"no valid data\"); echowand.object.RemoteObject.logger.throwing(echowand.object.RemoteObject.className, \"getData\", exception); throw exception; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2022/buggy-version/src.echowand.object.RemoteObject.java", "BodyUseAPI": [], "Fixed commit": "7558b5ddaa7af68c3f33db8cc72e4ae87b203701", "Url": "https://api.github.com/repos/ymakino/echowand", "Date": "2013-06-16T03:01:46Z"},
{"Line": "=>2353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (buffer != null) { buf.write(buffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3872/buggy-version/src.main.java.jline.console.ConsoleReader.java", "BodyUseAPI": ["jline.console.CursorBuffer.write(java.lang.String)"], "Fixed commit": "92c6ce5b030d1c43ad7208e4ab378c43c7cfabea", "Url": "https://api.github.com/repos/jline/jline2", "Date": "2015-07-22T11:11:31Z"},
{"Line": "=>1464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mMode) == (me.dkzwm.smoothrefreshlayout.SmoothRefreshLayout.MODE_OVER_SCROLL)) || (isEnableOverScroll())) mOverScrollChecker.updateVelocityY(((-velocityY) / 5), (velocityY > 0 ? -1 : 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7289/buggy-version/library.src.main.java.me.dkzwm.smoothrefreshlayout.SmoothRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "4257a955742257608a53514f23f634ae217d2824", "Url": "https://api.github.com/repos/dkzwm/SmoothRefreshLayout", "Date": "2017-06-23T09:26:11Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.melonbrew.fe.database.Database.getCachedAccount(event.getPlayer().getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (account != null) { account.save(account.getMoney()); database.removeCachedAccount(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5269/buggy-version/src.org.melonbrew.fe.listeners.FePlayerListener.java", "BodyUseAPI": ["org.melonbrew.fe.database.Account.save(account.getMoney())", "org.melonbrew.fe.database.Account.getMoney()", "org.melonbrew.fe.database.Database.removeCachedAccount(org.melonbrew.fe.database.Account)"], "Fixed commit": "6582bb5d11376712501aa6ba9178c16c0e58564e", "Url": "https://api.github.com/repos/niccholaspage/Fe", "Date": "2014-05-02T19:49:45Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeStream(java.io.FileInputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (bitmap != null) { android.util.Log.v(C.TAG, (\"ImageCacheUtils: getCachedImage() 2 \" + (bitmap.isRecycled()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7692/buggy-version/src.co.uk.gauntface.android.libs.utils.ImageCacheUtils.java", "BodyUseAPI": ["android.graphics.Bitmap.isRecycled()", "android.util.Log.v(C.TAG,(\"ImageCacheUtils: getCachedImage() 2 \" + (bitmap.isRecycled())))"], "Fixed commit": "f87cf1ee88fc5cd39a1c14345b87ab344e367aca", "Url": "https://api.github.com/repos/gauntface/gauntface-android-libs", "Date": "2012-05-28T21:44:44Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ed >= 0) && (ed != (st + 1))) { key = key.substring((st + 1), ed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/669/buggy-version/redisson.src.main.java.org.redisson.cluster.ClusterConnectionManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "97612e36fcde1107ecabcaba68bb0c4e2b8498ef", "Url": "https://api.github.com/repos/leonchen83/redisson", "Date": "2017-07-19T01:57:17Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataForDraw) != null) { nextStartPoint = addArrayToArray(dataForDraw, data, nextStartPoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8950/buggy-version/ecgview.src.main.java.cc.liyongzhi.ecgview.ECGSubView.java", "BodyUseAPI": [], "Fixed commit": "3a8acf38c59a61094a12e7228f6d447e91da2369", "Url": "https://api.github.com/repos/yzlee/electrocardiogram", "Date": "2016-09-09T01:39:10Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Math.abs(myLocation.getLatitude())) < 0.01) && ((java.lang.Math.abs(myLocation.getLongitude())) < 0.01)) { return null; }else { return myLocation; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6557/buggy-version/app.src.main.java.com.platypii.basemap.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "42063539da6ab0999c58df474ede1cdc8bc7811a", "Url": "https://api.github.com/repos/platypii/BaseMap", "Date": "2014-12-25T10:01:38Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query) == null) { createQuery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7253/buggy-version/src.main.java.framework.com.giisoo.framework.web.Model.java", "BodyUseAPI": [], "Fixed commit": "5926570027220806863e74a932db66445feb2714", "Url": "https://api.github.com/repos/s20000/webgiisoo", "Date": "2015-12-03T08:45:32Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(has_key)) { for (java.awt.Point p : keys) { if (((r) == (p.x)) && ((c) == (p.y))) { has_key = true; found_path = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6041/buggy-version/src.Agent.java", "BodyUseAPI": [], "Fixed commit": "d0512454aa7eab13ec54bd574ffe23c03f93f2e3", "Url": "https://api.github.com/repos/bansoji/ai_proj3", "Date": "2016-05-22T09:33:10Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(has_axe)) { for (java.awt.Point p : axes) { if (((r) == (p.x)) && ((c) == (p.y))) { has_axe = true; found_path = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6041/buggy-version/src.Agent.java", "BodyUseAPI": [], "Fixed commit": "d0512454aa7eab13ec54bd574ffe23c03f93f2e3", "Url": "https://api.github.com/repos/bansoji/ai_proj3", "Date": "2016-05-22T09:33:10Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.seninp.gi.rulepruner.RulePrunerFactory.isCovered(range))) { for (int i = 0; i < (range.length); i++) { if ((false == (range[i])) && (null != (saxData.getByIndex(i)))) { res = (res + paaSize) + 2; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5205/buggy-version/src.main.java.net.seninp.gi.rulepruner.RulePrunerFactory.java", "BodyUseAPI": [], "Fixed commit": "0006792bba3f7d22e4ec667d7ac43bf8fcb895c3", "Url": "https://api.github.com/repos/jMotif/GI", "Date": "2015-09-07T12:20:53Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isPlaylist) && ((beforeItemHolder) != null)) { beforeItemHolder.title.setTextColor(Color.WHITE); beforeItemHolder.visualizer.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7439/buggy-version/app.src.main.java.com.naman14.timber.adapters.SongsListAdapter.java", "BodyUseAPI": [], "Fixed commit": "cba6f99203cc6ad3ae09d9e1464a896b88769a13", "Url": "https://api.github.com/repos/mstburak/Timber", "Date": "2017-10-29T13:29:04Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scrollView) != null) scrollView.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8801/buggy-version/opacclient.src.main.java.de.geeksfactory.opacclient.frontend.SearchResultDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "2ebf06e22f6a513220cbecc5fe7b9ae06a8b73cf", "Url": "https://api.github.com/repos/opacapp/opacclient", "Date": "2015-02-20T19:34:56Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vue.getPlan().getListeVueNoeudLivraisons().size()) > 0) vue.getTable().getT().removeRowSelectionInterval(0, ((vue.getPlan().getListeVueNoeudLivraisons().size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3076/buggy-version/Implementation.Optimod_Lyon.src.Controleur.Application.java", "BodyUseAPI": ["vue.getTable().getT()", "vue.getTable().getT().removeRowSelectionInterval(int,((vue.getPlan().getListeVueNoeudLivraisons().size()) - 1))", "vue.getPlan().getListeVueNoeudLivraisons()", "Vue.Fenetre.getPlan()", "vue.getPlan().getListeVueNoeudLivraisons().size()", "Vue.Fenetre.getTable()"], "Fixed commit": "bc1f32e27a079bd7b943b4774aeaf8ea5071911e", "Url": "https://api.github.com/repos/kar1m/DevOO", "Date": "2014-12-01T20:01:47Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c == ']') && ((arrayDepth[stringExpDepth]) != 0)) (arrayDepth[stringExpDepth])--; else if (((c == ']') && ((stringDepth) > 0)) && ((stringDepth) == (stringExpDepth))) (stringExpDepth)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1506/buggy-version/src.monster860.fastdmm.objtree.ObjectTreeParser.java", "BodyUseAPI": [], "Fixed commit": "2a340aca55182aa2db5ae59c9e0daa00f977e44a", "Url": "https://api.github.com/repos/monster860/FastDMM", "Date": "2016-08-08T13:11:33Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((c == '[') && ((stringDepth) == (stringExpDepth))) (arrayDepth[stringExpDepth])++; else if (((c == '[') && ((pC != '\\\\') || (ppC == '\\\\'))) && ((stringDepth) != (stringExpDepth))) (stringExpDepth)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1506/buggy-version/src.monster860.fastdmm.objtree.ObjectTreeParser.java", "BodyUseAPI": [], "Fixed commit": "2a340aca55182aa2db5ae59c9e0daa00f977e44a", "Url": "https://api.github.com/repos/monster860/FastDMM", "Date": "2016-08-08T13:11:33Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bytesRead > 0) { dst.put(buf, 0, bytesRead); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1293/buggy-version/src.main.java.com.xebialabs.overthere.nio.file.OverthereFileSystemProvider.java", "BodyUseAPI": ["java.nio.ByteBuffer.put(byte[],int,int)"], "Fixed commit": "93208464617366db8b6ff44f94d84dd20325decc", "Url": "https://api.github.com/repos/xebialabs/nio-overthere", "Date": "2014-04-24T15:42:09Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variableAssignment) { result = result + \";\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4331/buggy-version/org.eclipse.iee.translator.antlr.src.org.eclipse.iee.translator.antlr.translator.JavaTranslator.java", "BodyUseAPI": [], "Fixed commit": "0e501b2a41842c65c49264f883e626b597037b55", "Url": "https://api.github.com/repos/iee/iee", "Date": "2014-08-27T10:55:52Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (msg.toString().endsWith(\",\")) { restServiceResult.setMessage(msg.toString().substring(0, ((msg.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1735/buggy-version/mskl-facade.mskl-common.src.main.java.com.mskl.common.util.ValidatorUtil.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.toString()", "java.lang.String.substring(int,int)", "com.mskl.common.dto.RestServiceResult.setMessage(java.lang.String)"], "Fixed commit": "d3743fe084393091204edd0f538bbdd4e5253b1c", "Url": "https://api.github.com/repos/ivivisoft/mskl", "Date": "2016-03-28T22:15:05Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.getPassword().length()) < 8) && ((user.getPassword().length()) > 20)) { return new org.springframework.http.ResponseEntity(new th.in.nagi.fecs.message.Message(\"Password lenght should be between 8 -20\"), org.springframework.http.HttpStatus.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1777/buggy-version/src.main.java.th.in.nagi.fecs.controller.UsersController.java", "BodyUseAPI": [], "Fixed commit": "879bd857dad0509715ee03e2d698e3f3cfb64f87", "Url": "https://api.github.com/repos/SixthFloor/FECS-API", "Date": "2015-12-12T11:02:39Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.hippo.util.ApiHelper.SUPPORT_TRANSITION) { long gid = gi.gid; holder.thumb.setTransitionName(com.hippo.ehviewer.ui.scene.TransitionNameFactory.getThumbTransitionName(gid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3606/buggy-version/app.src.main.java.com.hippo.ehviewer.ui.scene.HistoryScene.java", "BodyUseAPI": [], "Fixed commit": "fe16ccd8b95a3c3c76d3c6559d9027810b191e4a", "Url": "https://api.github.com/repos/seven332/EhViewer", "Date": "2016-03-22T04:26:45Z"},
{"Line": "=>874", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalCollectedDabStations) != (radioTotalStoredPrograms)) { radio.waitForReady(); radioTotalStoredPrograms = radio.getTotalPrograms(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6000/buggy-version/app.src.main.java.com.freshollie.monkeyboard.keystoneradio.playback.RadioPlayerService.java", "BodyUseAPI": [], "Fixed commit": "58166cee2c06a7e5c340ab976991bec633fed656", "Url": "https://api.github.com/repos/freshollie/monkeyboard-radio-android", "Date": "2017-06-25T22:39:47Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showOptionDialog(<nulltype>,javax.swing.JPanel,java.lang.String,int,int,<nulltype>,java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectedOption == (-1)) java.lang.System.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6442/buggy-version/src.queue.Main.java", "BodyUseAPI": [], "Fixed commit": "8f53085785e1387f33a0eb47411797c3eb300839", "Url": "https://api.github.com/repos/scottgoldwater/Java-Queue-Implementation", "Date": "2013-10-31T21:23:15Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.goodcodeforfun.clevelevator.SharedPreferencesUtils.getInstance(context.getApplicationContext()).isShowingTask())) { switch (intent.getAction()) { case com.goodcodeforfun.clevelevator.MotionDetectionService.SHAKE_DETECTED_BROADCAST_ACTION : com.goodcodeforfun.clevelevator.NotificationService.startActionShowEquation(context.getApplicationContext(), com.goodcodeforfun.clevelevator.MotionDetectionService.SHAKE_DETECTED_BROADCAST_ACTION); break; case com.goodcodeforfun.clevelevator.MotionDetectionService.ELEVATION_DETECTED_BROADCAST_ACTION : com.goodcodeforfun.clevelevator.NotificationService.startActionShowEquation(context.getApplicationContext(), com.goodcodeforfun.clevelevator.MotionDetectionService.ELEVATION_DETECTED_BROADCAST_ACTION); break; default : break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3504/buggy-version/app.src.main.java.com.goodcodeforfun.clevelevator.MotionDetectedReceiver.java", "BodyUseAPI": ["android.content.Context.getApplicationContext()", "com.goodcodeforfun.clevelevator.NotificationService.startActionShowEquation(context.getApplicationContext(),com.goodcodeforfun.clevelevator.MotionDetectionService.SHAKE_DETECTED_BROADCAST_ACTION)", "com.goodcodeforfun.clevelevator.NotificationService.startActionShowEquation(context.getApplicationContext(),com.goodcodeforfun.clevelevator.MotionDetectionService.ELEVATION_DETECTED_BROADCAST_ACTION)", "android.content.Context.getApplicationContext()"], "Fixed commit": "d8b593bac26c1a5a9e326a7d3132636b2110b63a", "Url": "https://api.github.com/repos/snigavig/clevelevator", "Date": "2017-03-10T19:30:30Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user) { userPoints = list; }else { opponentPoints = list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1900/buggy-version/com.aidancbrady.vocabserver.game.Game.java", "BodyUseAPI": [], "Fixed commit": "56dba8a4a91b9e89a23fd5d4189aacf80d807d2c", "Url": "https://api.github.com/repos/aidancbrady/VocabServer", "Date": "2014-11-29T17:33:13Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ruleEffect.getDataElement()) != null) { java.lang.String dataElementUid = ruleEffect.getDataElement().getUId(); org.hisp.dhis.client.sdk.ui.models.FormEntityAction formEntityAction = new org.hisp.dhis.client.sdk.ui.models.FormEntityAction(dataElementUid, ruleEffect.getData(), org.hisp.dhis.client.sdk.ui.models.FormEntityAction.FormEntityActionType.ASSIGN); entityActions.add(formEntityAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8580/buggy-version/app.src.main.java.org.hisp.dhis.android.eventcapture.presenters.DataEntryPresenterImpl.java", "BodyUseAPI": ["ruleEffect.getDataElement().getUId()", "org.hisp.dhis.client.sdk.rules.RuleEffect.getDataElement()", "org.hisp.dhis.client.sdk.rules.RuleEffect.getData()"], "Fixed commit": "474ca0a4808e7bf01ab33b820764eaacc06e4cc9", "Url": "https://api.github.com/repos/dhis2/dhis2-android-eventcapture", "Date": "2016-05-24T07:57:03Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (manageAgentBean.getFacilityId())) { facilityIdArray = manageAgentBean.getFacilityId().split(\",\"); manageAgentBean.setFacilityIds(facilityIdArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7239/buggy-version/SkyPatrol.src.com.skypatrol.controller.ManageAgentController.java", "BodyUseAPI": ["com.skypatrol.viewBean.ManageAgentBean.getFacilityId()", "com.skypatrol.viewBean.ManageAgentBean.setFacilityIds(java.lang.String[])", "manageAgentBean.getFacilityId().split(java.lang.String)"], "Fixed commit": "5c0fc3818d3e8c4d88ace1658e5cc03dc6e290ec", "Url": "https://api.github.com/repos/dhanan85/SkyPatrol", "Date": "2017-07-26T08:01:26Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (targetChildren != null) { for (java.io.File f : org.jetbrains.idea.maven.importing.MavenFoldersImporter.getChildren(targetDir)) { if (!(f.isDirectory())) continue; java.lang.Boolean isGeneratedTestSources = generatedDirs.get(f); if (isGeneratedTestSources != null) { configGeneratedSourceFolder(f, isGeneratedTestSources); }else { if (myImportingSettings.isExcludeTargetFolder()) { if (myModel.hasRegisteredSourceSubfolder(f)) continue; if (myModel.isAlreadyExcluded(f)) continue; myModel.addExcludedFolder(f.getPath()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3074/buggy-version/plugins.maven.src.main.java.org.jetbrains.idea.maven.importing.MavenFoldersImporter.java", "BodyUseAPI": [], "Fixed commit": "af8d7db0f01ce8f309c1177cbe4c4782a6cf69ad", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-10-11T12:28:35Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shoppingList.contains(\"slug bait\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2777/buggy-version/src.chat.model.Chatbot.java", "BodyUseAPI": [], "Fixed commit": "fcc4a39fb2b9f69648831e2f0a513d47087055f8", "Url": "https://api.github.com/repos/SwedishMutantWerewolf/Chatbot", "Date": "2017-11-03T14:47:34Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEditText.getText().length()) == 0) { setHamburger(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7200/buggy-version/searchview.src.main.java.com.lapism.searchview.SearchView.java", "BodyUseAPI": [], "Fixed commit": "dcb0b1b8c8278bba3c88ac7e76b44845461e3564", "Url": "https://api.github.com/repos/grepx/SearchView", "Date": "2016-09-21T16:19:18Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((itemStack.getData()) != null) { stacks[i].setData(itemStack.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1273/buggy-version/src.com.edoxile.bukkit.bettermechanics.Utils.BlockbagUtil.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getData()", "stacks[i].setData(itemStack.getData())"], "Fixed commit": "ed5787bd6c78fcceb43f5716c1de417431ece3a8", "Url": "https://api.github.com/repos/GuntherDW/BetterMechanics", "Date": "2011-05-15T14:16:33Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempStack.getData()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1273/buggy-version/src.com.edoxile.bukkit.bettermechanics.Utils.BlockbagUtil.java", "BodyUseAPI": [], "Fixed commit": "ed5787bd6c78fcceb43f5716c1de417431ece3a8", "Url": "https://api.github.com/repos/GuntherDW/BetterMechanics", "Date": "2011-05-15T14:16:33Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (regexString.equals(seedu.commando.logic.parser.DateTimeParser.TimeHourRegexString)) { timeString = ((matcher.group(\"hours\")) + \":\") + (matcher.group(\"minutes\")); }else if (regexString.equals(seedu.commando.logic.parser.DateTimeParser.TimeNightRegexString)) { timeString = seedu.commando.logic.parser.DateTimeParser.NightLocalTime.toString(); }else { timeString = matcher.group().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3301/buggy-version/src.main.java.seedu.commando.logic.parser.DateTimeParser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "e657fe8fc1a3614c7e97ec26928aff4419325088", "Url": "https://api.github.com/repos/CS2103AUG2016-W13-C3/main", "Date": "2016-10-25T03:49:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.waves) != null) { uiObject.removeStyleName((\"waves-\" + (this.waves.getCssName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5343/buggy-version/src.main.java.gwt.material.design.client.custom.mixin.WavesMixin.java", "BodyUseAPI": [], "Fixed commit": "e9f9c9892e17fa02c1d74574d869c0b84f71ab09", "Url": "https://api.github.com/repos/GwtMaterialDesign/gwt-material", "Date": "2015-11-02T13:26:09Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nachos.userprog.UserProcess.readVirtualMemory(int,byte[])", "fileTable[a0].write(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (write_res != read_res) { java.lang.System.out.println(\"[write]error writing file\"); return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2771/buggy-version/userprog.UserProcess.java", "BodyUseAPI": [], "Fixed commit": "81a796035bd33ef90667331448c0f6957106b7df", "Url": "https://api.github.com/repos/PiffNP/OS-project", "Date": "2016-04-25T17:51:31Z"},
{"Line": "=>912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ThreadedKernel.fileSystem.remove(name))) ret = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2771/buggy-version/userprog.UserProcess.java", "BodyUseAPI": [], "Fixed commit": "81a796035bd33ef90667331448c0f6957106b7df", "Url": "https://api.github.com/repos/PiffNP/OS-project", "Date": "2016-04-25T17:51:31Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, peers.NeighborPeer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(toChoke.amConnected)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6714/buggy-version/src.peers.Peer.java", "BodyUseAPI": [], "Fixed commit": "fcaaa19eabd0b57de55803d000cd63b4d66ba012", "Url": "https://api.github.com/repos/chy/CNTorrent", "Date": "2014-04-17T21:15:26Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shastram.web8085.client.Exe.getAsertionAt(exe.getIp())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (line == null) { com.shastram.web8085.client.MicroCode.log.info(\"nothing to assert \"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5299/buggy-version/src.com.shastram.web8085.client.MicroCode.java", "BodyUseAPI": [], "Fixed commit": "4be2096d8d72bf2728d0a0c12d7e4688248d1d1e", "Url": "https://api.github.com/repos/karamana/web8085", "Date": "2012-05-01T06:24:34Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (widthSum != 0.0F) { angle = (angle * (props.getTop())) / widthSum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4237/buggy-version/flying-saucer-core.src.main.java.org.xhtmlrenderer.render.BorderPainter.java", "BodyUseAPI": [], "Fixed commit": "2002cd905d2d304409dcdbe6665d9d1cb5bb8aca", "Url": "https://api.github.com/repos/trbt/flyingsaucer", "Date": "2016-03-10T17:54:34Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (widthSum != 0.0F) { angle = (angle * (props.getTop())) / widthSum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4237/buggy-version/flying-saucer-core.src.main.java.org.xhtmlrenderer.render.BorderPainter.java", "BodyUseAPI": [], "Fixed commit": "2002cd905d2d304409dcdbe6665d9d1cb5bb8aca", "Url": "https://api.github.com/repos/trbt/flyingsaucer", "Date": "2016-03-10T17:54:34Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (widthSum != 0.0F) { angle = (angle * (props.getTop())) / widthSum; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4237/buggy-version/flying-saucer-core.src.main.java.org.xhtmlrenderer.render.BorderPainter.java", "BodyUseAPI": [], "Fixed commit": "2002cd905d2d304409dcdbe6665d9d1cb5bb8aca", "Url": "https://api.github.com/repos/trbt/flyingsaucer", "Date": "2016-03-10T17:54:34Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.tajo.rpc.CallFuture<QueryCoordinatorProtocol.NodeResourceResponseProto>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((responseProto.getResourceCount()) == 0) { synchronized(schedulingThread) { schedulingThread.wait(50); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/44/buggy-version/tajo-core.src.main.java.org.apache.tajo.querymaster.DefaultTaskScheduler.java", "BodyUseAPI": [], "Fixed commit": "8b814d08774159e9758a61eee173e6d374594dc3", "Url": "https://api.github.com/repos/jinossy/tajo", "Date": "2015-06-22T02:14:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count++) < (staedteAufWeg.size())) buf.append(\" > \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2273/buggy-version/src.main.java.com.enpasos.navi.Weg.java", "BodyUseAPI": [], "Fixed commit": "0d7fbf1df3c4ca54a9631bfdb0926f9ce76567c3", "Url": "https://api.github.com/repos/jclass/navi", "Date": "2011-10-30T17:56:02Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.ListPreference.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newSrcValues.contains(oldValue)) { srcPref.setValue(oldValue); }else { srcPref.setValueIndex(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3735/buggy-version/WeatherDoge.src.main.java.com.versobit.weatherdoge.OptionsActivity.java", "BodyUseAPI": ["android.preference.ListPreference.setValue(java.lang.String)"], "Fixed commit": "134049ca83700d838d0ca5772ffa3ea6f75964b8", "Url": "https://api.github.com/repos/VersoBit/WeatherDoge", "Date": "2017-03-05T01:30:19Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((songs) != null) { return songs.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2211/buggy-version/app.src.main.java.com.speakr.connorriley.speakr.SongListAdapter.java", "BodyUseAPI": [], "Fixed commit": "a421f0e533060559760b6a419b57e98381c7c8d6", "Url": "https://api.github.com/repos/speakr-uconn/speakr", "Date": "2016-04-29T00:48:59Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((filelist.length) > 0) player = new main.moonlightowl.java.sound.Music.Layer(filelist[rand.nextInt(filelist.length)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1884/buggy-version/src.main.moonlightowl.java.sound.Music.java", "BodyUseAPI": [], "Fixed commit": "e3c8d663171be3fb1cfc3d3235e8dc63e418e692", "Url": "https://api.github.com/repos/MoonlightOwl/LittleTanks", "Date": "2015-05-23T18:39:22Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((filelist.length) > 0) { player = new main.moonlightowl.java.sound.Music.Layer(filelist[rand.nextInt(filelist.length)]); player.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1884/buggy-version/src.main.moonlightowl.java.sound.Music.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "e3c8d663171be3fb1cfc3d3235e8dc63e418e692", "Url": "https://api.github.com/repos/MoonlightOwl/LittleTanks", "Date": "2015-05-23T18:39:22Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (b.toString().equals(\"\")) publisher.setText(\"Not Available\"); else publisher.setText(b.substring(0, ((b.length()) - 2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4253/buggy-version/app.src.main.java.ecez.vndbapp.controller.NovelDetails.java", "BodyUseAPI": ["java.lang.StringBuilder.substring(int,int)", "android.widget.TextView.setText(java.lang.String)", "java.lang.StringBuilder.length()"], "Fixed commit": "538fb9102d417ce2af164534143b031a9d176d90", "Url": "https://api.github.com/repos/John-Teng/vndbapp", "Date": "2017-05-10T04:17:47Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (a.toString().equals(\"\")) developer.setText(\"Not Available\"); else developer.setText(a.substring(0, ((a.length()) - 2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4253/buggy-version/app.src.main.java.ecez.vndbapp.controller.NovelDetails.java", "BodyUseAPI": ["java.lang.StringBuilder.substring(int,int)", "android.widget.TextView.setText(java.lang.String)", "java.lang.StringBuilder.length()"], "Fixed commit": "538fb9102d417ce2af164534143b031a9d176d90", "Url": "https://api.github.com/repos/John-Teng/vndbapp", "Date": "2017-05-10T04:17:47Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p4_x.BSTUtil.checkBST(bst, val, rightChildIdx, max, val[bst[curNode]])) == false) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4534/buggy-version/src.p4_x.BSTUtil.java", "BodyUseAPI": [], "Fixed commit": "33b3e22dd954c0ccd42038ca008efc61d4765062", "Url": "https://api.github.com/repos/ideptor/codinginterview", "Date": "2017-07-25T01:35:59Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p4_x.BSTUtil.checkBST(bst, val, leftChildIdx, val[bst[curNode]], min)) == false) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4534/buggy-version/src.p4_x.BSTUtil.java", "BodyUseAPI": [], "Fixed commit": "33b3e22dd954c0ccd42038ca008efc61d4765062", "Url": "https://api.github.com/repos/ideptor/codinginterview", "Date": "2017-07-25T01:35:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((max != null) && ((val[bst[curNode]]) > (max.intValue()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4534/buggy-version/src.p4_x.BSTUtil.java", "BodyUseAPI": [], "Fixed commit": "33b3e22dd954c0ccd42038ca008efc61d4765062", "Url": "https://api.github.com/repos/ideptor/codinginterview", "Date": "2017-07-25T01:35:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((min != null) && ((val[bst[curNode]]) < (min.intValue()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4534/buggy-version/src.p4_x.BSTUtil.java", "BodyUseAPI": [], "Fixed commit": "33b3e22dd954c0ccd42038ca008efc61d4765062", "Url": "https://api.github.com/repos/ideptor/codinginterview", "Date": "2017-07-25T01:35:59Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7006/buggy-version/src.ss.project.shared.game.Engine.java", "BodyUseAPI": [], "Fixed commit": "d119bcda31b0510cd97cb9b04033b1d4576fa019", "Url": "https://api.github.com/repos/AnyTimeTraveler/module-2", "Date": "2016-12-17T23:18:19Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ss.week4.DoublyLinkedList<E>.getNode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (toRemove.equals(head)) head = head.next;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7006/buggy-version/src.ss.week4.DoublyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "d119bcda31b0510cd97cb9b04033b1d4576fa019", "Url": "https://api.github.com/repos/AnyTimeTraveler/module-2", "Date": "2016-12-17T23:18:19Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (backing) return algorithms.labyrinth.labyrinth_enums.RelativeDir.getRelativeDir(nextDirection, currentDirection); else return algorithms.labyrinth.labyrinth_enums.RelativeDir.getRelativeDir(currentDirection, nextDirection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/362/buggy-version/Beagleboard.beagleboard.algorithms.labyrinth.LabyrinthInfo.java", "BodyUseAPI": [], "Fixed commit": "0f03155c4e0c9ef3354005e497b1c03cad9d84f5", "Url": "https://api.github.com/repos/Dowers/tsea29", "Date": "2014-12-13T16:57:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newRow >= 0) table.setColumnSelectionInterval(column, column);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8364/buggy-version/ObjectTableModel.java", "BodyUseAPI": [], "Fixed commit": "45126c33b9fa675c6a8040db683064f614c5ce64", "Url": "https://api.github.com/repos/1blustone/CustomObjectTableModel", "Date": "2016-03-18T14:14:37Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((typeMirror.getKind()) == (javax.lang.model.type.TypeKind.WILDCARD)) { typeMirror = ((javax.lang.model.type.WildcardType) (typeMirror)).getExtendsBound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6784/buggy-version/framework.src.org.checkerframework.framework.type.DefaultInferredTypesApplier.java", "BodyUseAPI": [], "Fixed commit": "2005fcd1b13698b6f211c7c6e3a58b06da0f3f38", "Url": "https://api.github.com/repos/smillst/checker-framework", "Date": "2017-10-03T22:51:12Z"},
{"Line": "=>1497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (protection == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4711/buggy-version/src.main.java.com.griefcraft.sql.PhysDB.java", "BodyUseAPI": [], "Fixed commit": "8a8ecbe4c4db51d176d7f4bbf1c97456a1cdd71c", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2011-09-16T11:06:14Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.getAction().equalsIgnoreCase(\"sayGoodEvening\")) { tts.speak(\"Guten Abend\", TextToSpeech.QUEUE_ADD, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2042/buggy-version/app.src.main.java.com.codeteddy.alex.ActionManager.java", "BodyUseAPI": [], "Fixed commit": "32b6160aaacd9175c40163055237a245d9217dc6", "Url": "https://api.github.com/repos/AlexanderKaschta/Alex", "Date": "2016-07-30T19:47:41Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(content)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5302/buggy-version/Virgo-knowledge.src.main.java.com.winterfarmer.virgo.knowledge.service.KnowledgeServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "aa1e3b5e84e9aae1ea8b16d068cc3d47716619cf", "Url": "https://api.github.com/repos/yangtianhang/Virgo", "Date": "2015-07-05T05:57:03Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dirFiles != null) { for (java.io.File file : dirFiles) { if ((filter == null) || (filter.accept(file))) { files.add(file); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2164/buggy-version/src.net.gerritk.vehiclebuilder.resources.ResourceLoader.java", "BodyUseAPI": [], "Fixed commit": "f37fc16eda3fd92041ba1c30735d2eebfb32f259", "Url": "https://api.github.com/repos/GerritK/VehicleBuilder", "Date": "2016-02-21T20:13:03Z"},
{"Line": "=>2071", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(environmentExists)) { return environmentExists; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6353/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.rest.api.ConfigurationService.java", "BodyUseAPI": [], "Fixed commit": "1a1eba2b5495cfefb04bddef1044600ce52dada9", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-02-07T14:49:07Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) == null) { user = com.project.mosis.buymeadrink.Application.SaveSharedPreference.GetUser(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5774/buggy-version/app.src.main.java.com.project.mosis.buymeadrink.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1d9985c6683bba2f14ce82dcf6799cd8c9954df6", "Url": "https://api.github.com/repos/nikolan92/BuyMeADrink", "Date": "2016-06-30T23:03:11Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sourcePage != null) { float scoreToAssign = (sourcePage.getScore()) / (pages.size()); for (ekip.ca.crawlingsimulator.WebPage page : pages) { page.setScore(((page.getScore()) + scoreToAssign)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1602/buggy-version/src.main.java.ekip.ca.crawlingsimulator.queue.GeneralCrawlingQueue.java", "BodyUseAPI": ["ekip.ca.crawlingsimulator.WebPage.getScore()"], "Fixed commit": "98fa233c50dde1e4ed2879af02de44ac5a893967", "Url": "https://api.github.com/repos/Querela/Praktikum-Computational-Advertising", "Date": "2014-12-17T16:44:44Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.indexOf(\"//\")) != (-1)) { if ((line.indexOf(\"//\")) == 0) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5857/buggy-version/src.Main.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "4276d607d87057bce6e9fd42123790c4a1c3c148", "Url": "https://api.github.com/repos/UWM-VEX/AutoFramework", "Date": "2016-12-07T02:22:50Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tgChannel.isPercussionChannel())) { actualTranspose = this.transpose; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4122/buggy-version/tuxguitar-src.TuxGuitar-lib.src.org.herac.tuxguitar.player.base.MidiSequenceParser.java", "BodyUseAPI": [], "Fixed commit": "3e92f64b0138d91c38adb5e1f5447bc9c8bf11d7", "Url": "https://api.github.com/repos/bluenote10/TuxguitarParser", "Date": "2016-03-01T11:18:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type < 0) { type += 256; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7052/buggy-version/src.main.java.com.sk89q.worldedit.blocks.BaseBlock.java", "BodyUseAPI": [], "Fixed commit": "0b9e0f5b5fef4c0d8078756ebf4eb86112cd805c", "Url": "https://api.github.com/repos/mushroomhostage/worldedit", "Date": "2012-04-14T02:28:54Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x.isPlotted()) { stroke(255, 0, 255); fill(255, 0, 255); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/895/buggy-version/src.GraphDraw.java", "BodyUseAPI": [], "Fixed commit": "9a827df175cf0aaa5220addaf4020e08ff8f8763", "Url": "https://api.github.com/repos/erictapen/weird-tree-plot", "Date": "2015-08-10T21:53:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context.isCancelled()) { output = output.replaceAll(\"\\\\{message\\\\}\", target); }else { output = output.replaceAll(\"\\\\{message\\\\}\", \"%2\\\\$s\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1553/buggy-version/src.me.cyberkitsune.prefixchat.KitsuneChatUtils.java", "BodyUseAPI": [], "Fixed commit": "95c061e854e62ccdce6998a9ad2b4d80a29b29d2", "Url": "https://api.github.com/repos/cyberkitsune/KitsuneChat", "Date": "2012-08-28T21:50:15Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((qty == null) || (!(services.OrderService.isInteger(qty.getText())))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2417/buggy-version/javafx.src.services.OrderService.java", "BodyUseAPI": [], "Fixed commit": "bbacca26fe7c31bd8f492a90b8d8e0dbecdd7d87", "Url": "https://api.github.com/repos/cdolson19/CSCI8700-MavDevs", "Date": "2017-11-01T03:24:11Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(CommonConstants.DROPOUT_RATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (dropoutObj != null) { this.dropOutRate = java.lang.Double.valueOf(dropoutObj.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5044/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.dt.DTWorker.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "58fffbd8cf246adb4eed10af979183ff4908beae", "Url": "https://api.github.com/repos/huzza/shifu", "Date": "2017-04-24T02:11:04Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((dir == null) || (dir.isEmpty())) || (dir.equals(\"/\"))) { currentBucket.setFilePath(\"\"); }else { if (!(dir.endsWith(\"/\"))) { dir = dir + \"/\"; } java.lang.String currentDir = currentBucket.getChildObjectUri(dir).getFilePath(); currentBucket.setFilePath(currentDir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1345/buggy-version/src.main.java.org.mvnsearch.ali.oss.spring.shell.commands.OssOperationCommands.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "d3683ece0075e2be3ce61d116577ed09be2abe09", "Url": "https://api.github.com/repos/linux-china/ali-oss-java-cli", "Date": "2012-08-26T06:55:46Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (priority == null) { this.priority = PriorityLevel.Medium; }else { this.priority = priority; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2766/buggy-version/src.main.java.seedu.savvytasker.model.task.Task.java", "BodyUseAPI": [], "Fixed commit": "c54fcbc03bfeb7a9cb4094acb0253f21af8ecd01", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C2/main", "Date": "2016-10-26T04:51:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (recurringType == null) { this.recurringType = RecurrenceType.None; }else { this.recurringType = recurringType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2766/buggy-version/src.main.java.seedu.savvytasker.model.task.Task.java", "BodyUseAPI": [], "Fixed commit": "c54fcbc03bfeb7a9cb4094acb0253f21af8ecd01", "Url": "https://api.github.com/repos/CS2103AUG2016-T14-C2/main", "Date": "2016-10-26T04:51:37Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((this.eye.x) == 0) && ((this.eye.z) == 0)) && ((this.eye.y) > 0)) this.up = new utilities.Vector3D(0, 0, (-1)); else if ((((this.eye.x) == 0) && ((this.eye.z) == 0)) && ((this.eye.y) < 0)) this.up = new utilities.Vector3D(0, 0, 1); else this.up = new utilities.Vector3D(upX, upY, upZ);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6277/buggy-version/src.cameras.Camera.java", "BodyUseAPI": [], "Fixed commit": "51029e2d444f52e536f45f3fb7569c8f343df924", "Url": "https://api.github.com/repos/yuanqili/Ray-Tracer-in-Java", "Date": "2016-10-16T23:06:48Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEditableRecipe()) { android.content.Intent galleryIntent = new android.content.Intent(getApplicationContext(), ca.ualberta.cs.team07recipefinder.ImageGalleryActivity.class); galleryIntent.putExtra(\"code\", sourceCode); galleryIntent.putExtra(\"recipeId\", java.lang.String.valueOf(currentRecipe.getRecipeId())); startActivity(galleryIntent); }else { showThatNotEditable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6061/buggy-version/Team07RecipeFinder.src.ca.ualberta.cs.team07recipefinder.ViewRecipeActivity.java", "BodyUseAPI": [], "Fixed commit": "03bf5f39465982dfd9d082ac892294ffef148de5", "Url": "https://api.github.com/repos/Torboto/cmput301W13T07", "Date": "2013-04-02T19:30:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.opendaylight.yangtools.yang.model.repo.api.SourceIdentifier, org.opendaylight.yangtools.yang.parser.impl.util.YangModelDependencyInfo>.get(org.opendaylight.yangtools.yang.model.repo.api.SourceIdentifier)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dep instanceof org.opendaylight.yangtools.yang.parser.impl.util.YangModelDependencyInfo.SubmoduleDependencyInfo) { final java.lang.String parent = ((org.opendaylight.yangtools.yang.parser.impl.util.YangModelDependencyInfo.SubmoduleDependencyInfo) (dep)).getParentModule(); dependencies = com.google.common.collect.Sets.newHashSet(dependencies); dependencies.add(new org.opendaylight.yangtools.yang.parser.repo.DependencyResolver.BelongsToDependency(parent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4353/buggy-version/yang.yang-parser-impl.src.main.java.org.opendaylight.yangtools.yang.parser.repo.DependencyResolver.java", "BodyUseAPI": [], "Fixed commit": "684a7bff3264a289a2d55efd62c9435a23936b8d", "Url": "https://api.github.com/repos/opendaylight/yangtools", "Date": "2014-09-02T14:45:50Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((savingInformation) == null) { throw new java.lang.IllegalStateException(\"Generated Ecore Metamodel is not saved. There is no saving information available.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7636/buggy-version/src.main.java.eme.generator.GeneratedEcoreMetamodel.java", "BodyUseAPI": [], "Fixed commit": "fc539d4ca51a7eb22b3de921e7a48d97fac2e50d", "Url": "https://api.github.com/repos/tsaglam/EcoreMetamodelExtraction", "Date": "2017-07-25T13:06:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Model.creditSupply.btl_ltv.getN()) > 0) { return Model.creditSupply.btl_ltv.getMean(); }else { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/33/buggy-version/src.main.java.collectors.CoreIndicators.java", "BodyUseAPI": [], "Fixed commit": "3c6d38ffe2feb0d0e108eb9e7340e86c0b2f0529", "Url": "https://api.github.com/repos/adrian-carro/spatial-housing-model", "Date": "2017-10-06T17:52:21Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Model.creditSupply.oo_ltv.getN()) > 0) { return Model.creditSupply.oo_ltv.apply(new utilities.MeanAboveMedian()); }else { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/33/buggy-version/src.main.java.collectors.CoreIndicators.java", "BodyUseAPI": [], "Fixed commit": "3c6d38ffe2feb0d0e108eb9e7340e86c0b2f0529", "Url": "https://api.github.com/repos/adrian-carro/spatial-housing-model", "Date": "2017-10-06T17:52:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Model.creditSupply.oo_lti.getN()) > 0) { return Model.creditSupply.oo_lti.apply(new utilities.MeanAboveMedian()); }else { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/33/buggy-version/src.main.java.collectors.CoreIndicators.java", "BodyUseAPI": [], "Fixed commit": "3c6d38ffe2feb0d0e108eb9e7340e86c0b2f0529", "Url": "https://api.github.com/repos/adrian-carro/spatial-housing-model", "Date": "2017-10-06T17:52:21Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((region.regionalHousingMarketStats.getAvSalePriceForQuality(h.getHome().getQuality())) > 0) { sumStockYield += ((h.getHousePayments().get(h.getHome()).monthlyPayment) * (config.constants.MONTHS_IN_YEAR)) / (region.regionalHousingMarketStats.getAvSalePriceForQuality(h.getHome().getQuality())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/33/buggy-version/src.main.java.collectors.RegionalHouseholdStats.java", "BodyUseAPI": ["h.getHousePayments().get(h.getHome())", "h.getHome().getQuality()", "region.regionalHousingMarketStats.getAvSalePriceForQuality(h.getHome().getQuality())", "housing.Household.getHome()", "housing.Household.getHome()", "housing.Household.getHousePayments()"], "Fixed commit": "3c6d38ffe2feb0d0e108eb9e7340e86c0b2f0529", "Url": "https://api.github.com/repos/adrian-carro/spatial-housing-model", "Date": "2017-10-06T17:52:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldTotalCredit > 0.0) { netCreditGrowth = (((totalOOCredit) + (totalBTLCredit)) - oldTotalCredit) / oldTotalCredit; }else { netCreditGrowth = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/33/buggy-version/src.main.java.collectors.CreditSupply.java", "BodyUseAPI": [], "Fixed commit": "3c6d38ffe2feb0d0e108eb9e7340e86c0b2f0529", "Url": "https://api.github.com/repos/adrian-carro/spatial-housing-model", "Date": "2017-10-06T17:52:21Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.exists())) { throw new java.io.FileNotFoundException(f.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7092/buggy-version/src.main.java.net.sf.jabref.journals.ManageJournalsPanel.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "c54494ed7c6f647d5a0921307fbcb8e1e5009c41", "Url": "https://api.github.com/repos/igorsteinmacher/jabref", "Date": "2014-07-26T10:38:01Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.saml.SAMLCredential.getAttributeAsStringArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (groups != null) { groupsFromToken.addAll(java.util.Arrays.asList(groups)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5871/buggy-version/sts.sts-saml.src.main.java.dk.magenta.dafosts.saml.users.DafoSAMLUserDetails.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)", "java.util.Arrays.asList(java.lang.String[])"], "Fixed commit": "81e829893b284281d135776421e6f251f3841a40", "Url": "https://api.github.com/repos/magenta-aps/datafordeler-sts", "Date": "2017-09-14T14:49:50Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(httpRequestBase instanceof org.apache.http.client.methods.HttpPost)) { java.lang.StringBuilder errorContext = new java.lang.StringBuilder(\"It is imperative that this request encloses an entity.\").append(\" Identify exactly one entity by annotating an argument with @\").append(com.lonepulse.zombielink.core.annotation.Entity.class.getSimpleName()); throw new com.lonepulse.zombielink.core.request.RequestProcessorException(errorContext.toString(), mee); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8716/buggy-version/src.main.java.com.lonepulse.zombielink.core.request.EntityProcessor.java", "BodyUseAPI": [], "Fixed commit": "1556cb688ee9d325d0cb44984372182f35ac5a0f", "Url": "https://api.github.com/repos/sahan/ZombieLink", "Date": "2013-08-23T19:41:58Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedEditor instanceof com.intellij.openapi.fileEditor.TextEditor) { com.intellij.openapi.editor.Editor editor = ((com.intellij.openapi.fileEditor.TextEditor) (selectedEditor)).getEditor(); editors.add(editor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5394/buggy-version/src.org.hunmr.common.EmacsIdeasAction.java", "BodyUseAPI": [], "Fixed commit": "f977fd399098510330bbf0a933368cc5879e17b1", "Url": "https://api.github.com/repos/whunmr/emacsIDEAs", "Date": "2016-12-04T15:37:08Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj == null) || (!(obj.getClass().equals(uk.co.jamesmcguigan.rockpaperscissors.models.Player.class)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/673/buggy-version/rock-paper-scissors.src.main.java.uk.co.jamesmcguigan.rockpaperscissors.models.Player.java", "BodyUseAPI": [], "Fixed commit": "69cdd6314b6fc88b6fca8b28fa81a056a1a9024a", "Url": "https://api.github.com/repos/modernmaster/katas", "Date": "2016-06-01T20:12:03Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPlayingMusic()) != null) { musics.get(getPlayingMusic()).setVolume(((musicVolume) * (volume < 0 ? 0 : volume > 1 ? 1 : volume))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7080/buggy-version/src.core.SoundStore.java", "BodyUseAPI": [], "Fixed commit": "f4161dd52b4ab9836a73965ae9a7aed5e67f5ba4", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-11-06T21:17:09Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Message.equals(\"Not Found\")) { recyclerView.setVisibility(View.GONE); findViewById(R.id.emptyView).setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4919/buggy-version/app.src.main.java.com.example.gitnb.module.user.UserListActivity.java", "BodyUseAPI": [], "Fixed commit": "28bd89fe381a52ceb50e8993267f30ef833f50dd", "Url": "https://api.github.com/repos/Jeffmen/Git.NB", "Date": "2016-02-29T14:59:43Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (op == 12) { new calculadora.gui().multiplicarR12(); }else if (op == 13) { new calculadora.gui().dividirR13(); }else if (op == 28) { new calculadora.gui().porcentagemR28(); }else if (op == 26) { new calculadora.gui().bhaskaraR26(); }else if (op == 31) { new calculadora.gui().somarDecimalR31(); }else if (op == 32) { new calculadora.gui().subtrairDecimalR32(); }else if (op == 1256) { new calculadora.gui().verificaTriangulo(); }else if (op == 33) { new calculadora.gui().fatorial(); }else if (op == 22) { new calculadora.gui().raizInteiro(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7873/buggy-version/src.Calculadora.src.calculadora.Calculadora.java", "BodyUseAPI": [], "Fixed commit": "2446cec776f829d99573b7ad1124793f08aef1da", "Url": "https://api.github.com/repos/alerario/gc1", "Date": "2017-10-05T23:59:12Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) onTaskError(com.arcao.geocaching4locus.ErrorActivity.createErrorIntent(getActivity(), 0, description, false, null));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5887/buggy-version/src.com.arcao.geocaching4locus.fragment.OAuthLoginDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "f1752422b9ec6b3c4a330c3a4f682aa7fda3df6e", "Url": "https://api.github.com/repos/arcao/Geocaching4Locus", "Date": "2013-04-24T21:51:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((myLoc.y) - 2) >= 0) { myLoc.y -= 2; update = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2653/buggy-version/src.mmt.MMTServerPlayer.java", "BodyUseAPI": [], "Fixed commit": "d61676ba24672843d98bac2906e148cc48da9a8a", "Url": "https://api.github.com/repos/hghowe/MMT", "Date": "2014-03-27T16:46:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((myLoc.x) + 12) < 800) { myLoc.x += 2; update = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2653/buggy-version/src.mmt.MMTServerPlayer.java", "BodyUseAPI": [], "Fixed commit": "d61676ba24672843d98bac2906e148cc48da9a8a", "Url": "https://api.github.com/repos/hghowe/MMT", "Date": "2014-03-27T16:46:50Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AStarAss1.CENTER_COORDINATES_ON_HOME) { x -= board.getHome().getX(); y = ((-1) * y) + (board.getHome().getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4402/buggy-version/Ass1.src.AStarAss1.java", "BodyUseAPI": [], "Fixed commit": "f6c59769938dc23406d0ed2b5d5a51e839d5eaf8", "Url": "https://api.github.com/repos/eveillardn/CSI4106", "Date": "2013-10-09T03:45:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exception.getMessage()) != null) errorBuilder.setMessage(exception.getMessage());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1321/buggy-version/obiba-jersey-protobuf.src.main.java.org.obiba.jersey.exceptionmapper.UnhandledExceptionMapper.java", "BodyUseAPI": ["ErrorDtos.ClientErrorDto.Builder.setMessage(java.lang.String)", "java.lang.Exception.getMessage()"], "Fixed commit": "7da7138f5283695f51333b4a710cad86e1376666", "Url": "https://api.github.com/repos/obiba/obiba-commons", "Date": "2017-02-03T14:35:20Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((((id == (R.id.btnGreen0)) || (id == (R.id.btnGreen1))) || (id == (R.id.btnGreen2))) || (id == (R.id.btnGreen3))) || (id == (R.id.btnGreen4))) || (id == (R.id.btnGreen5))) || (id == (R.id.btnGreen6))) { this.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/28/buggy-version/Weather.app.src.main.java.techkids.mad3.trungnt.weather.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "55bacfbed4df134bd047efa0a1ee9f214ba19e62", "Url": "https://api.github.com/repos/trantrungnt/trungnt-android3-assignment1", "Date": "2016-04-01T11:09:29Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((((id == (R.id.btnRed0)) || (id == (R.id.btnRed1))) || (id == (R.id.btnRed2))) || (id == (R.id.btnRed3))) || (id == (R.id.btnRed4))) || (id == (R.id.btnRed5))) || (id == (R.id.btnRed6))) { OpenRedActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/28/buggy-version/Weather.app.src.main.java.techkids.mad3.trungnt.weather.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "55bacfbed4df134bd047efa0a1ee9f214ba19e62", "Url": "https://api.github.com/repos/trantrungnt/trungnt-android3-assignment1", "Date": "2016-04-01T11:09:29Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gateFront.direction) == null) gateFront.direction = net.minecraftforge.common.util.ForgeDirection.UNKNOWN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1366/buggy-version/src.main.java.club.nsdn.nyasamarailway.TileEntities.TileEntityGateFront.java", "BodyUseAPI": [], "Fixed commit": "997c72168919cd86d9225fc509c2e040441b0b81", "Url": "https://api.github.com/repos/NSDN/NyaSamaRailway", "Date": "2017-10-29T10:03:28Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((direction) == null) direction = net.minecraftforge.common.util.ForgeDirection.UNKNOWN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1366/buggy-version/src.main.java.club.nsdn.nyasamarailway.TileEntities.TileEntityGateBase.java", "BodyUseAPI": [], "Fixed commit": "997c72168919cd86d9225fc509c2e040441b0b81", "Url": "https://api.github.com/repos/NSDN/NyaSamaRailway", "Date": "2017-10-29T10:03:28Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((direction) == null) direction = net.minecraftforge.common.util.ForgeDirection.UNKNOWN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1366/buggy-version/src.main.java.club.nsdn.nyasamarailway.TileEntities.TileEntityGateBase.java", "BodyUseAPI": [], "Fixed commit": "997c72168919cd86d9225fc509c2e040441b0b81", "Url": "https://api.github.com/repos/NSDN/NyaSamaRailway", "Date": "2017-10-29T10:03:28Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gateFrontN.direction) == null) gateFrontN.direction = net.minecraftforge.common.util.ForgeDirection.UNKNOWN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1366/buggy-version/src.main.java.club.nsdn.nyasamarailway.TileEntities.TileEntityGateFrontN.java", "BodyUseAPI": [], "Fixed commit": "997c72168919cd86d9225fc509c2e040441b0b81", "Url": "https://api.github.com/repos/NSDN/NyaSamaRailway", "Date": "2017-10-29T10:03:28Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((triSwitch.direction) == null) triSwitch.direction = net.minecraftforge.common.util.ForgeDirection.UNKNOWN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1366/buggy-version/src.main.java.club.nsdn.nyasamarailway.TileEntities.TileEntityRailTriSwitch.java", "BodyUseAPI": [], "Fixed commit": "997c72168919cd86d9225fc509c2e040441b0b81", "Url": "https://api.github.com/repos/NSDN/NyaSamaRailway", "Date": "2017-10-29T10:03:28Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((monoSwitch.direction) == null) monoSwitch.direction = net.minecraftforge.common.util.ForgeDirection.UNKNOWN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1366/buggy-version/src.main.java.club.nsdn.nyasamarailway.TileEntities.Rail.RailMonoSwitch.java", "BodyUseAPI": [], "Fixed commit": "997c72168919cd86d9225fc509c2e040441b0b81", "Url": "https://api.github.com/repos/NSDN/NyaSamaRailway", "Date": "2017-10-29T10:03:28Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.eson.validation.EFactoryJavaValidator.AttributeValidator.getFeature(org.eclipse.emf.eson.eFactory.Value)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((feature.getEFeature()) != null) && ((feature.getEFeature().getEType()) != null)) msg.append(feature.getEFeature().getEType().getName()); else msg.append(\"???\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3977/buggy-version/plugins.org.eclipse.emf.eson.src.org.eclipse.emf.eson.validation.EFactoryJavaValidator.java", "BodyUseAPI": ["feature.getEFeature().getEType().getName()", "org.eclipse.emf.eson.eFactory.Feature.getEFeature()", "java.lang.StringBuffer.append(feature.getEFeature().getEType().getName())", "feature.getEFeature().getEType()"], "Fixed commit": "7267d99b098cc185e4d04394bf79ab22deecd121", "Url": "https://api.github.com/repos/vorburger/ESON", "Date": "2015-08-31T14:57:38Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (filename.isEmpty()) filename = (java.lang.String.valueOf((m + 1))) + \".jpg\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7043/buggy-version/src.Util.java", "BodyUseAPI": [], "Fixed commit": "b06d246e4f0e86823c13ebc9def6765469e79805", "Url": "https://api.github.com/repos/isw4/tistory-downloader-lite", "Date": "2017-07-29T19:41:07Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNew) quickActionRegistry.addQuickAction(action); else quickActionRegistry.updateQuickAction(action);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1866/buggy-version/OsmAnd.src.net.osmand.plus.quickaction.CreateEditActionDialog.java", "BodyUseAPI": [], "Fixed commit": "285ee3d266cd291d94e8246ceb80e672e767642d", "Url": "https://api.github.com/repos/brainbeanapps/Osmand", "Date": "2016-12-28T10:26:59Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (land) { view.findViewById(R.id.dividerBot).setVisibility(net.osmand.plus.quickaction.GONE); view.findViewById(R.id.dividerRight).setVisibility(net.osmand.plus.quickaction.VISIBLE); }else { view.findViewById(R.id.dividerBot).setVisibility((i < ((net.osmand.plus.quickaction.QuickActionsWidget.ELEMENT_PER_PAGE) / 2) ? VISIBLE : GONE)); view.findViewById(R.id.dividerRight).setVisibility((((i + 1) % 3) == 0 ? GONE : VISIBLE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1866/buggy-version/OsmAnd.src.net.osmand.plus.quickaction.QuickActionsWidget.java", "BodyUseAPI": [], "Fixed commit": "285ee3d266cd291d94e8246ceb80e672e767642d", "Url": "https://api.github.com/repos/brainbeanapps/Osmand", "Date": "2016-12-28T10:26:59Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (permits <= 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/187/buggy-version/gobblin-restli.gobblin-throttling-service.gobblin-throttling-service-client.src.main.java.gobblin.util.limiter.BatchedPermitsRequester.java", "BodyUseAPI": [], "Fixed commit": "1d2a24b504c17b531075d31089362d8763ba3fc3", "Url": "https://api.github.com/repos/apache/incubator-gobblin", "Date": "2017-03-21T01:00:34Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x.isProbablePrime(util.FindPrimeFactor.PRIME_CERTAINTY)) { while (n.remainder(x).equals(zero)) { results.add(x); n = n.divide(x); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2228/buggy-version/ps5.util.FindPrimeFactor.java", "BodyUseAPI": ["java.util.List<java.math.BigInteger>.add(java.math.BigInteger)", "java.math.BigInteger.equals(java.math.BigInteger)", "java.math.BigInteger.remainder(java.math.BigInteger)", "java.math.BigInteger.divide(java.math.BigInteger)"], "Fixed commit": "f3f5e3ae58725ca933246abc3bf78fb452df3d42", "Url": "https://api.github.com/repos/q8888620002/MIT-6.005", "Date": "2016-03-26T07:24:19Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.meezo.eventtus.twittereventtus.ListOnLineFollowersActivity.waitingForRefresh)) com.meezo.eventtus.twittereventtus.ListOnLineFollowersActivity.onLineFollowersListKeeper.forceRefresh();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3696/buggy-version/app.src.main.java.com.meezo.eventtus.twittereventtus.ListOnLineFollowersActivity.java", "BodyUseAPI": [], "Fixed commit": "e3fe5d07bdf7a5c0096e757ff485fe6393d8cb3b", "Url": "https://api.github.com/repos/meezos/TwitterEventtus", "Date": "2016-10-26T14:39:01Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((queryForm.getMarkerId()) != null) { queryUrl += \"&markerId=\" + (queryForm.getMarkerId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3706/buggy-version/src.org.jax.mgi.fewi.summary.GxdLitAgeAssayTypePairTableCount.java", "BodyUseAPI": ["org.jax.mgi.fewi.forms.GxdLitQueryForm.getMarkerId()"], "Fixed commit": "5d9e013d9d293d072f24136165309a366a486cf3", "Url": "https://api.github.com/repos/mgijax/fewi", "Date": "2016-12-22T16:35:59Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultValues) != null) { java.util.List<java.lang.String> values = java.util.Arrays.asList(defaultValues); if (!(values.isEmpty())) return values.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7512/buggy-version/src.main.java.de.fau.cs.osr.utils.getopt.OptionState.java", "BodyUseAPI": [], "Fixed commit": "6ba251c0d27b381db1c79528c345fca228f6ef96", "Url": "https://api.github.com/repos/sweble/utils", "Date": "2013-02-19T22:35:37Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((joshuaConfiguration.n_best_file) != null) nbest_out = new java.io.FileWriter(joshuaConfiguration.n_best_file);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5896/buggy-version/src.joshua.decoder.Decoder.java", "BodyUseAPI": [], "Fixed commit": "98ad70a26e8e272ffb61f200a7e2848558c1131d", "Url": "https://api.github.com/repos/hsaputra/incubator-joshua", "Date": "2016-04-02T04:14:53Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((joshuaConfiguration.n_best_file) != null) nbest_out.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5896/buggy-version/src.joshua.decoder.Decoder.java", "BodyUseAPI": [], "Fixed commit": "98ad70a26e8e272ffb61f200a7e2848558c1131d", "Url": "https://api.github.com/repos/hsaputra/incubator-joshua", "Date": "2016-04-02T04:14:53Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.physical_web.collection.PwPair.getUrlDevice()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.physical_web.physicalweb.Utils.isResolvableDevice(urlDevice)) { setText(view, R.id.metadata_debug_pws_trip_time, ((getString(R.string.metadata_debug_pws_trip_time_prefix)) + (new java.text.DecimalFormat(\"##.##s\").format(((org.physical_web.physicalweb.Utils.getPwsTripTimeMillis(pwsResult)) / 1000.0))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6942/buggy-version/android.PhysicalWeb.app.src.main.java.org.physical_web.physicalweb.NearbyBeaconsFragment.java", "BodyUseAPI": [], "Fixed commit": "0ea3c9d0651f3392d5b38a29d963ec32aff9c939", "Url": "https://api.github.com/repos/hayesjordan/physical-web", "Date": "2016-08-26T00:32:26Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (runSetup) { setUp(this.reqModel.getRequirement(), mode, edu.wpi.cs.wpisuitetng.modules.RequirementsManager.rmpermissions.observers.CurrentUserPermissions.getCurrentUserPermission()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1968/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.RequirementsManager.requirements.RequirementView.java", "BodyUseAPI": [], "Fixed commit": "13b77432b67a4239cf6666b07a278e34fc10d91d", "Url": "https://api.github.com/repos/cmdunkers/wpi-suite-tng", "Date": "2013-04-27T01:33:57Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files != null) { numItems = files.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4995/buggy-version/app.src.main.java.net.nitroshare.android.explorer.DirectoryAdapter.java", "BodyUseAPI": [], "Fixed commit": "e2365ae4fc8383c3b965e9e54400d5e8fd9af705", "Url": "https://api.github.com/repos/nitroshare/nitroshare-android", "Date": "2017-04-04T06:16:32Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dv8tion.jda.core.events.message.MessageReceivedEvent.getGuild()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fun.rubicon.core.Main.getMySQL().getGuildValue(g, \"prefix\")) == (fun.rubicon.util.Info.BOT_DEFAULT_PREFIX)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1906/buggy-version/src.main.java.fun.rubicon.listener.CommandListener.java", "BodyUseAPI": [], "Fixed commit": "c2118348f30c95a5b82cf7574271b3b99eca0a8a", "Url": "https://api.github.com/repos/Rubicon-Bot/Rubicon", "Date": "2017-11-18T21:56:38Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentDrag.getItem()) == null) { currentDrag = null; }else { currentDrag.move(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7337/buggy-version/src.android.ygo.views.DuelDiskView.java", "BodyUseAPI": ["android.ygo.touch.Drag.move(int,int)"], "Fixed commit": "e62f50eece29bf219dc9320cb8706ceb2e903034", "Url": "https://api.github.com/repos/msk86/YGORoid", "Date": "2013-01-02T15:50:35Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((operator != null) && (rhs == null)) { throw new org.windning.lang.rule.exception.RuleException(((((\"Invalid boolean expression : [\" + (lhs.getValue(context).toString())) + \",\") + operator) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1022/buggy-version/src.org.windning.lang.rule.model.BasicExpression.java", "BodyUseAPI": [], "Fixed commit": "d3dff81aafc36d418db8fe8ecdef7abd46179487", "Url": "https://api.github.com/repos/gswind123/RuleEngine", "Date": "2016-05-06T07:21:22Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (caption != null) { if (counter == null) { put(caption, new com.c2point.tools.utils.IncrementalInt()); }else { caption = caption.concat(((\" (\" + counter) + \")\")); counter.increment(); } }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3055/buggy-version/src.com.c2point.tools.utils.MapForCountedCaptions.java", "BodyUseAPI": ["com.c2point.tools.utils.MapForCountedCaptions.put(java.lang.String,com.c2point.tools.utils.IncrementalInt)", "java.lang.String.concat(((\"   (\" + counter) + \")\"))"], "Fixed commit": "615c1750f9d0f741a017d459860c396ba6dcaec8", "Url": "https://api.github.com/repos/Yanychar/InventoryServer", "Date": "2017-04-21T11:35:07Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idx0) > (idx1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6500/buggy-version/src.main.java.de.gdoeppert.klima.guibase.TrendDia.java", "BodyUseAPI": [], "Fixed commit": "f051a455aa598b0b729ecd7ac90744bd711ac55d", "Url": "https://api.github.com/repos/gdoepp/klimastatistik", "Date": "2017-07-13T17:59:04Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.sideHit.getAxisDirection()) == (net.minecraft.util.EnumFacing.AxisDirection.NEGATIVE)) absoluteHit.add(result.sideHit);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7557/buggy-version/src.main.java.com.creativemd.littletiles.common.items.ItemLittleChisel.java", "BodyUseAPI": ["com.creativemd.littletiles.common.tiles.vec.LittleTileVec.add(result.sideHit)"], "Fixed commit": "042f170c6ed8b0a806628610e6c8a7693de269af", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-10-20T20:11:43Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flowerplatform.editor.model.remote.DiagramEditorStatefulService.addScenarioInteraction(com.crispico.flower.mp.model.codesync.CodeSyncElement,com.crispico.flower.mp.model.codesync.CodeSyncElement,com.crispico.flower.mp.model.codesync.CodeSyncElement)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (interaction != null) { return interaction; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4115/buggy-version/org.flowerplatform.editor.model.src.org.flowerplatform.editor.model.remote.DiagramEditorStatefulService.java", "BodyUseAPI": [], "Fixed commit": "f6a685a348f0fa51719de8ed90a1b5b5d787d68a", "Url": "https://api.github.com/repos/flower-platform/main", "Date": "2013-07-30T09:59:23Z"},
{"Line": "=>1462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (no.nordicsemi.android.dfu.DfuBaseService.DEBUG) android.util.Log.d(no.nordicsemi.android.dfu.DfuBaseService.TAG, message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7671/buggy-version/dfu.src.main.java.no.nordicsemi.android.dfu.DfuBaseService.java", "BodyUseAPI": [], "Fixed commit": "de3b23fb19256e19c5737fa1d208981411beaf08", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-DFU-Library", "Date": "2016-09-15T09:33:53Z"},
{"Line": "=>1452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (no.nordicsemi.android.dfu.DfuBaseService.DEBUG) android.util.Log.w(no.nordicsemi.android.dfu.DfuBaseService.TAG, message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7671/buggy-version/dfu.src.main.java.no.nordicsemi.android.dfu.DfuBaseService.java", "BodyUseAPI": [], "Fixed commit": "de3b23fb19256e19c5737fa1d208981411beaf08", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-DFU-Library", "Date": "2016-09-15T09:33:53Z"},
{"Line": "=>1457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (no.nordicsemi.android.dfu.DfuBaseService.DEBUG) android.util.Log.i(no.nordicsemi.android.dfu.DfuBaseService.TAG, message);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7671/buggy-version/dfu.src.main.java.no.nordicsemi.android.dfu.DfuBaseService.java", "BodyUseAPI": [], "Fixed commit": "de3b23fb19256e19c5737fa1d208981411beaf08", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-DFU-Library", "Date": "2016-09-15T09:33:53Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.isFile()) { allPaths[ptr] = f.getPath(); ++ptr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4590/buggy-version/src.util.FileTools.java", "BodyUseAPI": ["java.io.File.getPath()"], "Fixed commit": "c3104edabc44e4cb5811222c0aeb8ac4194fe450", "Url": "https://api.github.com/repos/Owen2284/BlancheNoire", "Date": "2017-04-02T19:10:35Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.portal.mop.navigation.NavigationStoreImpl.loadNavigationData(org.exoplatform.portal.mop.SiteKey)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (navData != (NavigationData.EMPTY)) { results.add(navData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2833/buggy-version/lib.src.main.java.org.exoplatform.portal.mop.navigation.NavigationStoreImpl.java", "BodyUseAPI": ["java.util.List<org.exoplatform.portal.mop.navigation.NavigationData>.add(org.exoplatform.portal.mop.navigation.NavigationData)"], "Fixed commit": "72e0239c6087915a9ecbed8625f0a9d1768e0e0f", "Url": "https://api.github.com/repos/exo-addons/portal-rdbms", "Date": "2016-04-26T23:02:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.liveoak.spi.state.ResourceState.id()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (rid != null) { if (!nested) { basicDBObject.append(io.liveoak.mongo.MongoResource.MONGO_ID_FIELD, getMongoID(rid)); }else { basicDBObject.append(LiveOak.ID, getMongoID(rid)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7907/buggy-version/modules.mongo.src.main.java.io.liveoak.mongo.MongoResource.java", "BodyUseAPI": ["io.liveoak.mongo.MongoResource.getMongoID(java.lang.String)", "com.mongodb.BasicDBObject.append(LiveOak.ID,java.lang.Object)", "io.liveoak.mongo.MongoResource.getMongoID(java.lang.String)", "com.mongodb.BasicDBObject.append(java.lang.String,java.lang.Object)"], "Fixed commit": "ba83e5cd64a455dc8329b8095945592cc5b00fba", "Url": "https://api.github.com/repos/mwringe/liveoak", "Date": "2015-01-06T19:13:35Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((java.lang.Character.isHighSurrogate(c)) && (pos < ((string.length()) - 1))) && (java.lang.Character.isLowSurrogate(string.charAt((pos + 1))))) accum.append(new java.lang.String(new int[]{ c, string.charAt((++pos)) }, 0, 2)); else if (map.containsKey(c)) accum.append('&').append(map.get(c)).append(';'); else if (encoder.canEncode(c)) accum.append(c.charValue()); else accum.append(\"&#\").append(((int) (c))).append(';');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5932/buggy-version/src.main.java.org.jsoup.nodes.Entities.java", "BodyUseAPI": ["java.util.Map<java.lang.Character, java.lang.String>.containsKey(java.lang.Character)", "java.util.Map<java.lang.Character, java.lang.String>.get(java.lang.Character)", "java.nio.charset.CharsetEncoder.canEncode(java.lang.Character)", "java.lang.Character.charValue()", "java.lang.StringBuilder.append(char)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.charAt(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "334d90d7af8fe95a73eabd37dab8408eacdcd965", "Url": "https://api.github.com/repos/michael-simons/jsoup", "Date": "2012-10-14T12:55:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zipcode.listing.ListingFragment.ListingsTransmitter.getListings()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((listings.get(mListingPosition).getMedia()) != null) { mImagesAdapter.setMedia(listings.get(mListingPosition).getMedia()); pageIndicator.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8928/buggy-version/app.src.main.java.com.zipcode.listing.ListingFragment.java", "BodyUseAPI": ["listings.get(mListingPosition).getMedia()", "com.zipcode.listing.ListingImagePagingAdapter.setMedia(listings.get(mListingPosition).getMedia())", "java.util.List<com.zipcode.model.Listing>.get(int)"], "Fixed commit": "96e679155cfa6c2d0be17baf3c5fa120937a40ee", "Url": "https://api.github.com/repos/jzila/zipdroid", "Date": "2015-11-08T07:58:51Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) == (Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1)) { ayah = ayah.replaceAll(\" \", \" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7026/buggy-version/src.com.qiraat.SurahDataParser.java", "BodyUseAPI": [], "Fixed commit": "3b3a54e4536ef7553f31baee422daed1fcab7f29", "Url": "https://api.github.com/repos/jazarine/Qiraat", "Date": "2013-11-10T12:31:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParseController()) == null) { return super.createSourceViewer(parent, ruler, styles); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3444/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.editor.SpoofaxEditor.java", "BodyUseAPI": [], "Fixed commit": "d5d12e8cd9f3caa3a2bb20afd432944b2bbf1ac0", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2013-08-29T23:54:40Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (refCount < 0) { io.realm.internal.log.RealmLog.w((\"Calling close() on a Realm that is already closed: \" + (getPath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/128/buggy-version/realm.src.main.java.io.realm.Realm.java", "BodyUseAPI": [], "Fixed commit": "cff94741e1c7d9691c076b57c7db03f4654959ca", "Url": "https://api.github.com/repos/realm/realm-java", "Date": "2015-01-13T17:16:41Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iguanaman.iguanatweakstconstruct.reference.Config.easyToolRepair) cpw.mods.fml.common.registry.GameRegistry.addRecipe(new iguanaman.iguanatweakstconstruct.tweaks.RepairCraftingRecipe());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5528/buggy-version/src.main.java.iguanaman.iguanatweakstconstruct.tweaks.IguanaTweaks.java", "BodyUseAPI": [], "Fixed commit": "c66e9009f583341160980b19512e0ba35c08a0b7", "Url": "https://api.github.com/repos/bonii-xx/IguanaTweaksTConstruct", "Date": "2014-08-04T12:12:50Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) getActivity().runOnUiThread(() -> mPresenter.loadTranslation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2443/buggy-version/app.src.main.java.com.example.kimichael.yandextranslate.sections.translate.TranslateFragment.java", "BodyUseAPI": [], "Fixed commit": "53e19f60694fb0295dfd1db67542324772017e5f", "Url": "https://api.github.com/repos/kimichael/mobilization-translator", "Date": "2017-04-29T09:11:58Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mRoomDirectoryAdapter) != (mPublicRoomsSelector.getAdapter())) { mPublicRoomsSelector.setAdapter(mRoomDirectoryAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1068/buggy-version/vector.src.main.java.im.vector.fragments.RoomsFragment.java", "BodyUseAPI": ["android.widget.Spinner.setAdapter(android.widget.ArrayAdapter<java.lang.CharSequence>)"], "Fixed commit": "3f5bd2c8d59f2ae57707c7e00e968f442dde9c9a", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-07-10T12:45:50Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((settings.get(setting)) != null) return settings.get(setting); else { game.Game.log(((\"[OPTIONS] CRITICAL ERROR! Could not retreive setting \" + setting) + \"!\")); setSetting(setting, \"OFF\"); return \"OFF\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2650/buggy-version/game.Options.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "game.Options.setSetting(java.lang.String,java.lang.String)", "game.Game.log(java.lang.String)"], "Fixed commit": "ff7a27948c7f33d13677f7b2848fb8689391413c", "Url": "https://api.github.com/repos/UnacceptableUse/Substrate", "Date": "2013-10-19T09:13:29Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.HONEYCOMB)) { layout.setLayerType(View.LAYER_TYPE_SOFTWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6763/buggy-version/caneffect.src.main.java.com.canyinghao.caneffect.CanCircularRevealLayout.java", "BodyUseAPI": [], "Fixed commit": "da1ed7911567d79a8a2489d978f4513209fbc765", "Url": "https://api.github.com/repos/canyinghao/CanEffect", "Date": "2016-02-04T03:37:41Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.creativemd.littletiles.common.tileentity.TileEntityLittleTiles.getTile(tileNBT.getInteger(\"cVecx\"),tileNBT.getInteger(\"cVecy\"),tileNBT.getInteger(\"cVecz\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(exstingTiles.contains(tile))) tile = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6692/buggy-version/src.main.java.com.creativemd.littletiles.common.tileentity.TileEntityLittleTiles.java", "BodyUseAPI": [], "Fixed commit": "30ff30bc7a569383ee4874aba64d04b0cdfdbaf7", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2016-10-05T21:00:05Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(link.getIdentity().isPersistent())) { com.orientechnologies.orient.core.record.ORecord real = link.getRecord(); if (real != null) link = real; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1904/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.binary.ORecordSerializerBinaryV0.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.record.OIdentifiable.getRecord()"], "Fixed commit": "79f4672955587706dc563d058127fa3d5d03cc23", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-07-14T17:09:03Z"},
{"Line": "=>2169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iFieldValue instanceof com.orientechnologies.orient.core.db.record.OIdentifiable) && (!(((com.orientechnologies.orient.core.db.record.OIdentifiable) (iFieldValue)).getIdentity().isPersistent()))) track(((com.orientechnologies.orient.core.db.record.OIdentifiable) (iFieldValue)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1904/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocument.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.track(java.lang.Object)"], "Fixed commit": "79f4672955587706dc563d058127fa3d5d03cc23", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-07-14T17:09:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xAbs < 0) { xAbs = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4684/buggy-version/src.graphics.Screen.java", "BodyUseAPI": [], "Fixed commit": "9214730d2d1a38700fcc71ac67c4c7ce18b0e11e", "Url": "https://api.github.com/repos/benkahlert/Rain", "Date": "2017-08-08T15:54:46Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fuwa.bomberman.es.EntityData.getComponent(de.fuwa.bomberman.es.EntityId,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (posCom == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5801/buggy-version/src.de.fuwa.bomberman.game.appstates.Ki.KiAppstate.java", "BodyUseAPI": [], "Fixed commit": "9459f122bbacb646e8a8a3b380d6313f61896c45", "Url": "https://api.github.com/repos/DomenicDev/FuwaMan", "Date": "2017-12-11T22:42:17Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fuwa.bomberman.es.Entity.get(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pos == null) return playerMap;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5801/buggy-version/src.de.fuwa.bomberman.game.appstates.Ki.KiAppstate.java", "BodyUseAPI": [], "Fixed commit": "9459f122bbacb646e8a8a3b380d6313f61896c45", "Url": "https://api.github.com/repos/DomenicDev/FuwaMan", "Date": "2017-12-11T22:42:17Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ch) <= 31) || ((ch) == 127)) { next(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5383/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONLexer.java", "BodyUseAPI": [], "Fixed commit": "3f7e1578d553720cf17db05c5d7e5de3945ed742", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-13T14:03:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<tuxdev.studio.maminasataclient.model.Trip>.body()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((trip.getData().getJarak()) != null) getJarak = trip.getData().getJarak();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4906/buggy-version/app.src.main.java.tuxdev.studio.maminasataclient.MapsActivity.java", "BodyUseAPI": ["trip.getData().getJarak()", "tuxdev.studio.maminasataclient.model.Trip.getData()"], "Fixed commit": "49bb7fbf93bd98f95186a2082c550b9027e4b9e1", "Url": "https://api.github.com/repos/tuxkids/New_Folder6_Client", "Date": "2016-04-28T15:27:35Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdesktop.swingx.mapviewer.LocalResponseCache.getLocalFile(java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (localFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9274/buggy-version/jxmapviewer2.src.org.jdesktop.swingx.mapviewer.LocalResponseCache.java", "BodyUseAPI": [], "Fixed commit": "2551d673171a3ef0a861d896996a287d649ad427", "Url": "https://api.github.com/repos/msteiger/jxmapviewer2", "Date": "2012-07-08T14:10:03Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdesktop.swingx.mapviewer.LocalResponseCache.getLocalFile(java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (localFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9274/buggy-version/jxmapviewer2.src.org.jdesktop.swingx.mapviewer.LocalResponseCache.java", "BodyUseAPI": [], "Fixed commit": "2551d673171a3ef0a861d896996a287d649ad427", "Url": "https://api.github.com/repos/msteiger/jxmapviewer2", "Date": "2012-07-08T14:10:03Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.vanhal.progressiveautomation.PAConfig.fuelCost) == 0) com.vanhal.progressiveautomation.PAConfig.fuelCost = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2442/buggy-version/src.main.java.com.vanhal.progressiveautomation.PAConfig.java", "BodyUseAPI": [], "Fixed commit": "79c6b09b16307df54ba6b7362924585f2ec624f5", "Url": "https://api.github.com/repos/Vanhal/ModJam", "Date": "2014-06-17T11:15:38Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List.indexOf(net.minecraftforge.fluids.IFluidHandler)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((container.canDrain(net.minecraftforge.common.util.ForgeDirection.getOrientation(side).getOpposite(), FluidRegistry.WATER)) || (container.canFill(net.minecraftforge.common.util.ForgeDirection.getOrientation(side).getOpposite(), FluidRegistry.WATER))) { connectable[side] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4460/buggy-version/src.main.java.mekanism.common.util.PipeUtils.java", "BodyUseAPI": [], "Fixed commit": "e7f3204ed71ae491f8c850f8ce0cffe9a2d21a7f", "Url": "https://api.github.com/repos/TPPIDev/Mekanism", "Date": "2014-09-30T19:22:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rule == null) { return relevant; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3587/buggy-version/OpenRosa.src.org.openrosa.client.xforms.RelevantBuilder.java", "BodyUseAPI": [], "Fixed commit": "693ebce53d7def3ffecb5fcb9ed68b6e9a782112", "Url": "https://api.github.com/repos/dimagi/FormDesigner", "Date": "2011-03-12T14:36:50Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((listeningAddress()) == null) java.lang.System.exit((-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6048/buggy-version/src.org.bukkit.virtualbukkit.RealVirtualBukkit.java", "BodyUseAPI": [], "Fixed commit": "7033e552d5e04849478c7a7a751e86c5f9fb6441", "Url": "https://api.github.com/repos/firelizzard18/VirtualBukkit", "Date": "2014-01-17T11:12:45Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.List<com.orientechnologies.orient.server.distributed.ODistributedResponse>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sameResponse.isEmpty()) found = true; else { final java.lang.Object currentPL = sameResponse.get(0).getPayload(); if ((currentPL == null) && ((response.getPayload()) == null)) found = true; else if (currentPL.equals(response.getPayload())) found = true; else if ((currentPL instanceof com.orientechnologies.orient.core.record.impl.ODocument) && (com.orientechnologies.orient.core.record.impl.ODocumentHelper.hasSameContentOf(((com.orientechnologies.orient.core.record.impl.ODocument) (currentPL)), null, ((com.orientechnologies.orient.core.record.impl.ODocument) (response.getPayload())), null, null))) found = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9135/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedResponseManager.java", "BodyUseAPI": ["java.util.List<com.orientechnologies.orient.server.distributed.ODistributedResponse>.get(int)", "sameResponse.get(0).getPayload()"], "Fixed commit": "e994489d25567244f697656734a021f7e9cce4f8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-11-03T14:29:30Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) { sameResponse.add(response); foundBucket = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9135/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedResponseManager.java", "BodyUseAPI": [], "Fixed commit": "e994489d25567244f697656734a021f7e9cce4f8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-11-03T14:29:30Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getValue().getSlice()) == 1) dimension = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1880/buggy-version/src.sbmlplugin.image.ImageExplorer.java", "BodyUseAPI": [], "Fixed commit": "afc33455786e3e2e2aedd2b3eb81d39ee61dc531", "Url": "https://api.github.com/repos/spatialsimulator/XitoSBML", "Date": "2016-11-12T11:38:24Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (networkLocation != null) { networkToSave.mLatitude = networkLocation.getLatitude(); networkToSave.mLongitude = networkLocation.getLongitude(); }else { networkToSave.mLatitude = -999999999; networkToSave.mLongitude = -999999999; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2345/buggy-version/WLANAudit.src.es.glasspixel.wlanaudit.dialogs.NetworkDetailsDialogFragment.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "54c0f0fec3a3daa5c857b941d146c58aee701402", "Url": "https://api.github.com/repos/JesusM/WLANAudit-Android", "Date": "2012-12-25T12:27:16Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (destination.exists()) { org.apache.commons.io.FileUtils.forceDelete(destination); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8479/buggy-version/core.cas-server-core-util.src.main.java.org.apereo.cas.util.ResourceUtils.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)"], "Fixed commit": "ee7b5a96e4b6e246558851e7c3e38302788bfac6", "Url": "https://api.github.com/repos/William-Hill-Online/cas", "Date": "2016-10-19T15:34:07Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((npc) != null) npc.update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/220/buggy-version/src.main.java.net.citizensnpcs.npc.entity.CitizensBatNPC.java", "BodyUseAPI": [], "Fixed commit": "c519cde217f3c9e0ef38d4d00b416ae1a3805e41", "Url": "https://api.github.com/repos/CitizensDev/Citizens2", "Date": "2012-10-30T00:59:52Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctx == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3555/buggy-version/src.freenet.clients.http.ContentFilterToadlet.java", "BodyUseAPI": [], "Fixed commit": "3cbb7939bc47d713f6726ae3fe8ae4b692ca5edc", "Url": "https://api.github.com/repos/NiteshBharadwaj/fred-staging", "Date": "2013-08-17T11:26:30Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.appinventor.common.version.AppInventorFeatures.allowMultiScreenApplications()) { if (((getCurrentProject()) == null) || ((getCurrentProject().currentScreen) == \"Screen1\")) { setButtonEnabled(com.google.appinventor.client.DesignToolbar.WIDGET_NAME_REMOVEFORM, false); }else { setButtonEnabled(com.google.appinventor.client.DesignToolbar.WIDGET_NAME_REMOVEFORM, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2027/buggy-version/appinventor.appengine.src.com.google.appinventor.client.DesignToolbar.java", "BodyUseAPI": [], "Fixed commit": "f82b4b140a5ad1a413fc93df376437aceb7c9d5e", "Url": "https://api.github.com/repos/lizlooney/appinventor-sources", "Date": "2015-09-24T23:55:05Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((students) == null) { students = new java.util.ArrayList<cz.muni.fi.pa165.languageschool.entities.Student>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7466/buggy-version/languageSchool.src.main.java.cz.muni.fi.pa165.languageschool.entities.Lection.java", "BodyUseAPI": [], "Fixed commit": "778afedb0f3f4e485e333c735830c6447ab36029", "Url": "https://api.github.com/repos/janinko/jazykova-skola", "Date": "2012-10-21T16:36:20Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.GameMaster.i) == (game.GameMaster.names.length)) game.GameMaster.i = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5741/buggy-version/src.game.GameMaster.java", "BodyUseAPI": [], "Fixed commit": "2c207c398ef2099ed4200b00bb3b5bf48b94f94e", "Url": "https://api.github.com/repos/HydrusWP/memory", "Date": "2017-06-20T08:09:33Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board[x][y].getContent()) == null) { success = false; }else if ((board[x][y].getContent().getPlayer_ID()) == (currentPlayer.getPlayer_ID())) { board[x][y].setCellState(0); board[x][y].setContent(null); success = true; }else { success = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2547/buggy-version/src.Game.java", "BodyUseAPI": ["board[x][y].getContent()", "board[x][y].setContent(<nulltype>)", "board[x][y].setCellState(int)", "board[x][y].getContent().getPlayer_ID()"], "Fixed commit": "700ff8fc212180220cc50ca1ac252375f67c5a50", "Url": "https://api.github.com/repos/brianhuynen/Project-2-Group-2", "Date": "2016-11-09T13:13:06Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["appUser.getSchedule().getWeekDays()[com.enhueco.model.other.Utilities.jodaWeekDayToServerWeekDay(startDateTimeLocal.getDayOfWeek())].getEventWithStartHour(startDateTimeUTC.toLocalTime())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (eventOptional.isPresent()) { intent.putExtra(\"eventToEdit\", eventOptional.get()); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7607/buggy-version/app.src.main.java.com.enhueco.view.ScheduleActivity.java", "BodyUseAPI": ["java.util.Optional<com.enhueco.model.model.Event>.get()", "android.content.Intent.putExtra(java.lang.String,eventOptional.get())"], "Fixed commit": "7ef32313354b861f3cf5a5b2548b4d96ece241f9", "Url": "https://api.github.com/repos/EnHueco/AndroidEnHueco", "Date": "2016-05-10T14:36:59Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.linyuzai.swipe.SwipeRecyclerView.findChildViewUnder(float,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (itemView == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7217/buggy-version/swipe.src.main.java.com.linyuzai.swipe.XSwipeRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "02eb327c188582c6cfa8719215e7a1a4f9cfdb4a", "Url": "https://api.github.com/repos/Linyuzai/Demo4SwipeRecyclerview", "Date": "2016-07-27T08:04:26Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(org.jlab.groot.graphics.EmbeddedCanvas,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (javax.swing.JOptionPane.OK_OPTION)) { this.save(file.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9098/buggy-version/src.main.java.org.jlab.groot.graphics.EmbeddedCanvas.java", "BodyUseAPI": [], "Fixed commit": "50a34444c82363059989afa5c83f3b424be22600", "Url": "https://api.github.com/repos/mckunkel/groot", "Date": "2017-05-12T18:45:45Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.launcher2.Launcher.getScreenCount(context.getContentResolver())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((getCurrentPage()) >= desiredCount) { snapToPage(mDefaultPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4644/buggy-version/src.com.android.launcher2.Workspace.java", "BodyUseAPI": [], "Fixed commit": "da4c05c03729f6913d752991e974dca07456e638", "Url": "https://api.github.com/repos/javroch/android_packages_apps_Launcher2", "Date": "2012-04-14T21:16:05Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mConf.pinDrawable) != null) { intrinsicHeight = (mConf.pinDrawable.getIntrinsicHeight()) / 2; intrinsicWidth = (mConf.pinDrawable.getIntrinsicWidth()) / 2; }else { intrinsicHeight = pin.radius; intrinsicWidth = pin.radius; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5130/buggy-version/library.src.main.java.com.tac.cropmodule.CroppingThread.java", "BodyUseAPI": ["mConf.pinDrawable.getIntrinsicHeight()", "mConf.pinDrawable.getIntrinsicWidth()"], "Fixed commit": "7f85b4c96cd5df304e528f7a4318d6b32c78f944", "Url": "https://api.github.com/repos/kulik/crop-tool", "Date": "2015-04-10T12:49:45Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 2) || (i == 3)) { pin.y = ((mBitmapToCrop.getHeight()) * newScale) - intrinsicHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5130/buggy-version/library.src.main.java.com.tac.cropmodule.CroppingThread.java", "BodyUseAPI": [], "Fixed commit": "7f85b4c96cd5df304e528f7a4318d6b32c78f944", "Url": "https://api.github.com/repos/kulik/crop-tool", "Date": "2015-04-10T12:49:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getContext().clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((simulation.getWinningPlayerId()) == (-1)) return 0.5;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/759/buggy-version/src.java.behaviors.standardMCTS.MCTSStandardNode.java", "BodyUseAPI": [], "Fixed commit": "b63f71fb71ce0c8ddfde45ca53c49cc3199c6d1b", "Url": "https://api.github.com/repos/dfreelan/MCTSHearthstone", "Date": "2016-06-27T13:36:20Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(p12File.exists())) || (!(p12File.canRead()))) { logger.info(\"ignore p12 file for non-existence or no rights to read\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3603/buggy-version/src.xd.fw.scheduler.WxCerts.java", "BodyUseAPI": [], "Fixed commit": "25479821042b07aa5e1d37593cf7cd61e0d721bb", "Url": "https://api.github.com/repos/xdlv-sys/XApp", "Date": "2016-11-08T03:52:32Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8125/buggy-version/src.main.java.ru.itbasis.utils.spring.security.accessrole.converters.AccessRole2StringConverter.java", "BodyUseAPI": [], "Fixed commit": "14be0b57e376117c31a81ef696965a4fd4ee741d", "Url": "https://api.github.com/repos/BorzdeG/ru.itbasis.utils.spring-boot-starter-security-accessrole", "Date": "2016-07-12T06:48:32Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parser.getWidth()) != null) { if (!(isDefaultFontMatrix)) { glyphWidths.put(glyphName, applyFontMatrix(parser.getWidth().getInteger())); }else { glyphWidths.put(glyphName, ((int) (parser.getWidth().getInteger()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2602/buggy-version/src.main.java.org.verapdf.pd.font.type1.Type1PrivateParser.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "org.verapdf.pd.font.type1.Type1CharStringParser.getWidth()", "org.verapdf.pd.font.type1.Type1CharStringParser.getWidth()", "org.verapdf.pd.font.type1.Type1PrivateParser.applyFontMatrix(parser.getWidth().getInteger())", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,((int) (parser.getWidth().getInteger())))", "parser.getWidth().getInteger()", "parser.getWidth().getInteger()"], "Fixed commit": "5f7ff259bcef30cd88ffdcb9a2b9830a99032c01", "Url": "https://api.github.com/repos/shem-sergey/veraPDF-pdflib", "Date": "2016-12-03T18:02:07Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((android.text.TextUtils.isEmpty(name)) && ((matcher.group(com.matburt.mobileorg.OrgData.OrgNode.TITLE_GROUP).length()) > 1)) name = matcher.group(com.matburt.mobileorg.OrgData.OrgNode.TITLE_GROUP).substring(1); else name += matcher.group(com.matburt.mobileorg.OrgData.OrgNode.TITLE_GROUP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3679/buggy-version/src.com.matburt.mobileorg.OrgData.OrgNode.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)", "java.lang.String.substring(int)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "576cc7bb10e7e752ad0df98b54e35171481054dc", "Url": "https://api.github.com/repos/matburt/mobileorg-android", "Date": "2012-09-23T00:13:13Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (sender)); org.bukkit.Bukkit.getScheduler().runTask(com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin, new java.lang.Runnable() { @java.lang.Override public void run() { player.performCommand((\"bukkit:version \" + (com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin.getName()))); } }); }else { org.bukkit.Bukkit.getScheduler().runTask(com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin, new java.lang.Runnable() { @java.lang.Override public void run() { org.bukkit.Bukkit.getServer().dispatchCommand(org.bukkit.Bukkit.getConsoleSender(), (\"bukkit:version \" + (com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.plugin.getName()))); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6376/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Commands.CommandLoader.java", "BodyUseAPI": [], "Fixed commit": "c590ca5a93c38171ff20cefbf6b3f1689113aca7", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2017-09-29T20:03:38Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.espertech.esper.filter.ExprConstantNode.getConstantValue(com.espertech.esper.filter.ExprEvaluatorContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1270/buggy-version/esper.src.main.java.com.espertech.esper.filter.FilterSpecCompilerMakeParamUtil.java", "BodyUseAPI": [], "Fixed commit": "0fcd7607a674a8c8b003727642812eedfe4877fa", "Url": "https://api.github.com/repos/espertechinc/esper", "Date": "2015-06-22T13:45:44Z"},
{"Line": "=>2001", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (target != null) { logger.error(target.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6405/buggy-version/daoju001.src.main.java.com.banzhuan.controller.CommonController.java", "BodyUseAPI": ["java.lang.Object.toString()", "org.slf4j.Logger.error(java.lang.String)"], "Fixed commit": "ba7112169ac075b44bcc9fef9aab5870847953b0", "Url": "https://api.github.com/repos/bigheadbro/daoju001", "Date": "2014-09-26T16:44:33Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((widthOfSreen) > (heightOfScreen)) { heightOfScreen = widthOfSreen; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4730/buggy-version/app.src.main.java.com.burakgon.starview.StarView.java", "BodyUseAPI": [], "Fixed commit": "df0eeafd8ad4befeb190a478fdc9e07ad4ed5d32", "Url": "https://api.github.com/repos/kumruomur/StarView-Android", "Date": "2017-08-15T06:44:25Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((heightOfScreen) > (widthOfSreen)) { widthOfSreen = heightOfScreen; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4730/buggy-version/app.src.main.java.com.burakgon.starview.StarView.java", "BodyUseAPI": [], "Fixed commit": "df0eeafd8ad4befeb190a478fdc9e07ad4ed5d32", "Url": "https://api.github.com/repos/kumruomur/StarView-Android", "Date": "2017-08-15T06:44:25Z"},
{"Line": "=>822", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (oldAnteil != null) { flaecheBean.setProperty(FlaechePropertyConstants.PROP__ANTEIL, ((float) ((int) (oldAnteil * ratio)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8815/buggy-version/src.main.java.de.cismet.verdis.gui.RegenFlaechenTabellenPanel.java", "BodyUseAPI": ["de.cismet.cids.dynamics.CidsBean.setProperty(FlaechePropertyConstants.PROP__ANTEIL,double)"], "Fixed commit": "b1d6f6ed9eebb33389accee9d6497e560d9400ff", "Url": "https://api.github.com/repos/cismet/verdis", "Date": "2015-05-13T07:23:53Z"},
{"Line": "=>1549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((responseStatus.emailNameTable.get(instructor.email)) == null) { responseStatus.noResponse.add(instructor.name); responseStatus.emailNameTable.put(instructor.email, instructor.name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2482/buggy-version/src.main.java.teammates.logic.core.FeedbackSessionsLogic.java", "BodyUseAPI": ["responseStatus.emailNameTable.put(instructor.email,instructor.name)", "responseStatus.noResponse.add(instructor.name)"], "Fixed commit": "7c6d91ed0099c839550e4708a35c494b0ed67654", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-07-07T08:42:41Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTintView.getVisibility()) != (VISIBLE)) { setTintVisibility(com.miguelcatalan.materialsearchview.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4470/buggy-version/library.src.main.java.com.miguelcatalan.materialsearchview.MaterialSearchView.java", "BodyUseAPI": [], "Fixed commit": "fa6d9014164f51e3d7d6c9f2870d2669d62c5cc8", "Url": "https://api.github.com/repos/Julie-R/MaterialSearchView", "Date": "2016-03-04T16:02:29Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((urlAnchorPair.getHref()) == null) { edu.uci.ics.crawler4j.parser.Parser.logger.error(\"URL {} contains invalid link in tag {}, anchor: {}\", baseURL, urlAnchorPair.getTag(), urlAnchorPair.getAnchor()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9218/buggy-version/src.main.java.edu.uci.ics.crawler4j.parser.Parser.java", "BodyUseAPI": ["edu.uci.ics.crawler4j.parser.ExtractedUrlAnchorPair.getAnchor()", "org.slf4j.Logger.error(java.lang.String,java.lang.String,urlAnchorPair.getTag(),urlAnchorPair.getAnchor())", "edu.uci.ics.crawler4j.parser.ExtractedUrlAnchorPair.getTag()"], "Fixed commit": "11e079b3728263f2be36ddde0e1ef1e3030d650b", "Url": "https://api.github.com/repos/EgbertW/crawler4j", "Date": "2015-02-17T13:53:32Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (back < 10) { backPrefix = \"0\" + backPrefix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/64/buggy-version/OsmAnd.src.net.osmand.plus.FavouritesDbHelper.java", "BodyUseAPI": [], "Fixed commit": "cf4d383b5878d619fe3b5b97c7365ccf73ccafef", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-06-11T22:34:27Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(propertyDefinitionMap.containsKey(propertyEntry.getKey()))) { violatedConstraints.add(new alien4cloud.topology.task.NodeFilterConstraintViolation(alien4cloud.rest.model.RestErrorCode.PROPERTY_MISSING_ERROR, null)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7410/buggy-version/alien4cloud-core.src.main.java.alien4cloud.topology.validation.NodeFilterValidationService.java", "BodyUseAPI": [], "Fixed commit": "c2fdb78888e8450ed5ff69502be8247a7c219d1c", "Url": "https://api.github.com/repos/alien4cloud/alien4cloud", "Date": "2015-07-10T16:32:17Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((savelist.sel) < 0) { getparent(haven.GameUI.class).error(\"No save entry selected.\"); }else { save(savelist.sel); use(savelist.sel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/385/buggy-version/src.haven.FightWnd.java", "BodyUseAPI": ["haven.FightWnd.2.use(savelist.sel)", "haven.FightWnd.2.save(savelist.sel)"], "Fixed commit": "db101ba4756ccffdd02a3d464211d19286a87d1d", "Url": "https://api.github.com/repos/puruscor/Purus-Pasta", "Date": "2017-01-09T19:29:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listOfTasksInService.size()) != 0) { holder.mTitle.setText(manager.getTaskTitle(listOfTasksInService.get(position))); holder.progresBar.setProgress(((int) (manager.getTaskProgress(listOfTasksInService.get(position))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4064/buggy-version/app.src.main.java.com.blstream.neverendingstory.Class.TaskPreviewAdapter.java", "BodyUseAPI": ["com.blstream.neverendingstory.Interfaces.IServiceManager.getTaskProgress(java.lang.Integer)", "com.blstream.neverendingstory.Interfaces.IServiceManager.getTaskTitle(java.lang.Integer)", "android.widget.TextView.setText(manager.getTaskTitle(listOfTasksInService.get(position)))", "java.util.ArrayList<java.lang.Integer>.get(int)", "android.widget.ProgressBar.setProgress(((int) (manager.getTaskProgress(listOfTasksInService.get(position)))))", "java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "82f12f6d8795df40cf437c2275340c17447c1cad", "Url": "https://api.github.com/repos/jackowskiBLStream/NeverEndingStory", "Date": "2016-03-17T22:05:13Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonatype.flexmojos.util.PathUtil.file(java.lang.String,getResourcesTargetDirectories())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file == null) { throw new java.lang.IllegalStateException(((\"Unable to resolve include file, path: '\" + path) + \"'. Please ensure that the file exists. Note: relative paths must be relative to a resource target directory.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4343/buggy-version/flexmojos-maven-plugin.src.main.java.org.sonatype.flexmojos.plugin.compiler.CompcMojo.java", "BodyUseAPI": [], "Fixed commit": "8f675569fbc4d829c9798cebf8a6c2cc36ae14fa", "Url": "https://api.github.com/repos/develar/flexmojos", "Date": "2011-03-02T21:50:45Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((base.after) == null) { if (identicalKeys(base.getKey(), name)) { base = null; return; } }else { entry = base.after; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/837/buggy-version/src.main.java.ch.mimo.netty.handler.codec.icap.IcapHeaders.java", "BodyUseAPI": ["ch.mimo.netty.handler.codec.icap.IcapHeaders.identicalKeys(java.lang.String,java.lang.String)", "ch.mimo.netty.handler.codec.icap.IcapHeaders.Entry.getKey()"], "Fixed commit": "3aa40e5dce00f40d459531e461277fb61d96fe27", "Url": "https://api.github.com/repos/jmimo/netty-icap", "Date": "2011-05-19T05:21:24Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((address.hostname.compareTo(EZShare_Server.ServerSetting.sharedSetting().getHost())) == 0) && ((address.port) == (EZShare_Server.ServerSetting.sharedSetting().getPort()))) { }else { EZShare_Server.Handler.Connection connection = EZShare_Server.Handler.ConnectionListManager.sharedConnectionListManager().connect(address, securityMode); connection.writeData(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2476/buggy-version/src.EZShare_Server.Handler.SubscribeHandler.java", "BodyUseAPI": ["EZShare_Server.Handler.ConnectionListManager.sharedConnectionListManager().connect(EZShare_Server.Handler.IPAddress,EZShare_Server.Handler.SubscribeHandler)"], "Fixed commit": "305c6dcd2ae3307ffdc36fe7424dedd5b7f335d1", "Url": "https://api.github.com/repos/AlonikiX/EZShareSystem", "Date": "2017-05-27T11:33:52Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cases) != null) { for (org.mozilla.javascript.ast.SwitchCase sc : cases) { sb.append(sc.toSource((depth + 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5032/buggy-version/src.org.mozilla.javascript.ast.SwitchStatement.java", "BodyUseAPI": [], "Fixed commit": "5f605d031893c904ea6bc95273e5e69f8baa75bf", "Url": "https://api.github.com/repos/apigee/rhino", "Date": "2015-01-16T22:19:58Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equalsIgnoreCase(\"Content-Length\")) { throw new org.expath.httpclient.HttpClientException(\"Content-Length should not be explicitly provided, either it will automatically be added or Transfer-Encoding will be used.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9058/buggy-version/http-client-java.src.main.java.org.expath.httpclient.impl.RequestParser.java", "BodyUseAPI": [], "Fixed commit": "f9adeb2fede6a67637575554d85538afcb47a78c", "Url": "https://api.github.com/repos/adamretter/expath-http-client-java", "Date": "2017-08-17T20:06:57Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equalsIgnoreCase(\"Transfer-Encoding\")) { throw new org.expath.httpclient.HttpClientException(\"Transfer-Encoding should not be explicitly provided, it will automatically be added if required.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9058/buggy-version/http-client-java.src.main.java.org.expath.httpclient.impl.RequestParser.java", "BodyUseAPI": [], "Fixed commit": "f9adeb2fede6a67637575554d85538afcb47a78c", "Url": "https://api.github.com/repos/adamretter/expath-http-client-java", "Date": "2017-08-17T20:06:57Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.content) == (com.google.gson.JsonNull.INSTANCE)) { this.content = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7223/buggy-version/library.src.main.java.net.callumtaylor.asynchttp.response.JsonResponseHandler.java", "BodyUseAPI": [], "Fixed commit": "ea77a85ffd46220886557fbfa19f2162ddd19e8e", "Url": "https://api.github.com/repos/scruffyfox/AsyncHttpClient", "Date": "2016-09-15T15:37:59Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCure) { a.setPlayerRadiation(e.getPlayer(), 0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1541/buggy-version/Apocalyptic.src.net.cyberninjapiggy.apocalyptic.events.PlayerEat.java", "BodyUseAPI": [], "Fixed commit": "f148e06a840f61ad53be64782cacf332c41edf0c", "Url": "https://api.github.com/repos/epicfacecreeper/Apocalyptic", "Date": "2013-11-26T18:42:30Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.getPropertyName().equals(ButtonModel.PRESSED_PROPERTY)) { de.bmotionstudio.gef.editor.figure.AbstractBMotionFigure f = ((de.bmotionstudio.gef.editor.figure.AbstractBMotionFigure) (getFigure())); if (f.getModel().isPressed()) { de.bmotionstudio.gef.editor.model.BControl control = ((de.bmotionstudio.gef.editor.model.BControl) (getModel())); control.getVisualization().getAnimation().checkObserver(); if (java.lang.Boolean.valueOf(control.getAttributeValue(AttributeConstants.ATTRIBUTE_CHECKED).toString())) { control.setAttributeValue(AttributeConstants.ATTRIBUTE_CHECKED, false); }else { control.setAttributeValue(AttributeConstants.ATTRIBUTE_CHECKED, true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5385/buggy-version/de.bmotionstudio.gef.editor.src.de.bmotionstudio.gef.editor.part.BCheckboxPart.java", "BodyUseAPI": [], "Fixed commit": "d6b1a47c9f4f1615a53d85614cd15ce9d11b0478", "Url": "https://api.github.com/repos/bendisposto/prob", "Date": "2011-12-13T16:25:59Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ircjce) == null) || ((ircjce.getSession()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/977/buggy-version/src.haven.GlobalChat.java", "BodyUseAPI": [], "Fixed commit": "656fd8437692e0dc447dd1180d7ef797be2ed1f4", "Url": "https://api.github.com/repos/X-com/Haven-and-Hearth-client-modified-by-Ender", "Date": "2014-05-13T11:25:06Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(previousTag == (java.lang.Integer.MAX_VALUE))) directory.setString(previousTag, ((directory.getString(previousTag)) + (tag[1])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3520/buggy-version/Source.com.drew.metadata.eps.EpsReader.java", "BodyUseAPI": ["com.drew.metadata.Directory.getString(int)", "com.drew.metadata.Directory.setString(int,((directory.getString(previousTag)) + (tag[1])))"], "Fixed commit": "c4495aedc3ae9e63e671d8edef142bc5fb8fa244", "Url": "https://api.github.com/repos/payton/metadata-extractor", "Date": "2017-06-14T18:56:54Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(edu.duke.cs.osprey.restypes.HardCodedResidueInfo.hasAminoAcidBB(res))) && ((type) == (BBType.AMINO_ACID))) { throw new java.lang.UnsupportedOperationException(\"tried to put an amino acid residue into a non-AA state\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4547/buggy-version/src.edu.duke.cs.osprey.dof.deeper.ResBBState.java", "BodyUseAPI": [], "Fixed commit": "1b77c09f6dd307b4cbb38f1925003418fa1b4ced", "Url": "https://api.github.com/repos/davidiot/OSPREY_refactor", "Date": "2017-04-09T13:49:50Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(edu.duke.cs.osprey.restypes.HardCodedResidueInfo.hasNucleicAcidBB(res))) && ((type) == (BBType.NUCLEIC_ACID))) { throw new java.lang.UnsupportedOperationException(\"tried to put an nucleic acid residue into a non-NA state\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4547/buggy-version/src.edu.duke.cs.osprey.dof.deeper.ResBBState.java", "BodyUseAPI": [], "Fixed commit": "1b77c09f6dd307b4cbb38f1925003418fa1b4ced", "Url": "https://api.github.com/repos/davidiot/OSPREY_refactor", "Date": "2017-04-09T13:49:50Z"},
{"Line": "=>1054", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (esme != null) { messageType = ((esme.getSmppSessionType()) == (com.cloudhopper.smpp.SmppSession.Type.CLIENT)) ? org.mobicents.smsc.library.CdrDetailedGenerator.CDR_MSG_TYPE_SUBMITSM : org.mobicents.smsc.library.CdrDetailedGenerator.CDR_MSG_TYPE_DELIVERSM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7356/buggy-version/core.slee.services.sbbs.src.main.java.org.mobicents.smsc.slee.services.deliverysbb.DeliveryCommonSbb.java", "BodyUseAPI": ["org.restcomm.smpp.Esme.getSmppSessionType()"], "Fixed commit": "507acf0fa7bc7e7687672a7a384f9c48eed22dc5", "Url": "https://api.github.com/repos/vetss/smscgateway", "Date": "2017-07-25T10:17:29Z"},
{"Line": "=>1050", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((smsSet.getDestClusterName()) != null) { esme = esmeManagement.getEsmeByClusterName(smsSet.getDestClusterName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7356/buggy-version/core.slee.services.sbbs.src.main.java.org.mobicents.smsc.slee.services.deliverysbb.DeliveryCommonSbb.java", "BodyUseAPI": ["org.mobicents.smsc.library.SmsSet.getDestClusterName()", "org.restcomm.smpp.EsmeManagement.getEsmeByClusterName(smsSet.getDestClusterName())"], "Fixed commit": "507acf0fa7bc7e7687672a7a384f9c48eed22dc5", "Url": "https://api.github.com/repos/vetss/smscgateway", "Date": "2017-07-25T10:17:29Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (args == null) { this.args = new java.util.ArrayList<>(0); }else { this.args = new java.util.ArrayList<>(java.util.Arrays.asList(args)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6660/buggy-version/src.rmi.RemoteCall.java", "BodyUseAPI": [], "Fixed commit": "ce02fb142cc6ab0d3c0ab5a3157ad353fa414230", "Url": "https://api.github.com/repos/qingPATHng-jia/cse291d-project1", "Date": "2017-02-10T03:41:19Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remoteCall.getParaTypes().size()) != (remoteCall.getArgs().size())) { send(new rmi.RMIException(\"Method parameter quantity does not match actual argument quantity\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6660/buggy-version/src.rmi.TCPWorker.java", "BodyUseAPI": [], "Fixed commit": "ce02fb142cc6ab0d3c0ab5a3157ad353fa414230", "Url": "https://api.github.com/repos/qingPATHng-jia/cse291d-project1", "Date": "2017-02-10T03:41:19Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remoteCall.getArgs()) == null) { send(new rmi.RMIException(\"Argument list is null\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6660/buggy-version/src.rmi.TCPWorker.java", "BodyUseAPI": [], "Fixed commit": "ce02fb142cc6ab0d3c0ab5a3157ad353fa414230", "Url": "https://api.github.com/repos/qingPATHng-jia/cse291d-project1", "Date": "2017-02-10T03:41:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 23) { requestPermissions(new java.lang.String[]{ Manifest.permission.READ_CONTACTS }, com.mysoft.autosendsms.MainActivity.REQUEST_CODE_ASK_PERMISSIONS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/284/buggy-version/src.com.mysoft.autosendsms.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "735213b50c7cf24059a027e143536d5baae4ce43", "Url": "https://api.github.com/repos/ivxin/Autosendsms", "Date": "2016-05-05T03:33:57Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.inl.blacklab.search.grouping.HitProperty.needsContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (requiredContext != null) findContext(requiredContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7588/buggy-version/core.src.main.java.nl.inl.blacklab.search.HitsImpl.java", "BodyUseAPI": ["nl.inl.blacklab.search.HitsImpl.findContext(java.util.List<java.lang.String>)"], "Fixed commit": "96f7df5603aa9607bb88776dd53a2d9937dd9ef6", "Url": "https://api.github.com/repos/INL/BlackLab", "Date": "2017-03-03T14:32:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (temp.contains(\"#name\")) { temp = temp.replace(\"#name\", listener.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6768/buggy-version/src.deadlybanquet.speech.SpeechActFactory.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,listener.getName())"], "Fixed commit": "dc43c2a4351e7839c260408234b5e06fb618d2b7", "Url": "https://api.github.com/repos/Mathcar/DeadlyBanquet", "Date": "2016-04-25T13:41:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (temp.contains(\"#opinion\")) { temp = temp.replace(\"#opinion\", o.getPAD().getOpinion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6768/buggy-version/src.deadlybanquet.speech.SpeechActFactory.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,o.getPAD().getOpinion())"], "Fixed commit": "dc43c2a4351e7839c260408234b5e06fb618d2b7", "Url": "https://api.github.com/repos/Mathcar/DeadlyBanquet", "Date": "2016-04-25T13:41:39Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mjc.type_checker.SymTable.getVariableNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (assignVariable.isField()) { generator.JasminPrinter.print_aload(0); generator.JasminPrinter.print_getField(symTable.getCurrentClass(), assignVariable); }else { generator.JasminPrinter.print_aload(symTable.getVariableIndex(assignVariable.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/688/buggy-version/src.mjc.lexer.Stmt.java", "BodyUseAPI": ["generator.JasminPrinter.print_getField(symTable.getCurrentClass(),mjc.lexer.VarDecl)", "mjc.lexer.VarDecl.getName()", "generator.JasminPrinter.print_aload(symTable.getVariableIndex(assignVariable.getName()))", "mjc.type_checker.SymTable.getVariableIndex(assignVariable.getName())"], "Fixed commit": "e612f0981b85cf485275d8db1daceee3f6727bc4", "Url": "https://api.github.com/repos/langest/komp14", "Date": "2014-05-18T11:13:34Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(current.variableIndex.containsKey(varName))) { java.lang.System.out.println((\"Can't find variable \" + varName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/688/buggy-version/src.mjc.type_checker.SymTable.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "e612f0981b85cf485275d8db1daceee3f6727bc4", "Url": "https://api.github.com/repos/langest/komp14", "Date": "2014-05-18T11:13:34Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isClosed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3091/buggy-version/src.main.java.org.drizzle.jdbc.DrizzleConnection.java", "BodyUseAPI": [], "Fixed commit": "336bc1bee7f147ece02bb25c1b0972de3e72e2bc", "Url": "https://api.github.com/repos/krummas/DrizzleJDBC", "Date": "2014-09-30T14:16:25Z"},
{"Line": "=>649", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (location != null) { lastTimeGPXLocationFixed = location.getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7457/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivity.java", "BodyUseAPI": ["android.location.Location.getTime()"], "Fixed commit": "c163a56f68d19015c200643285227a0ee1d2627c", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2011-04-26T22:37:42Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parentFile.exists())) { if (parentFile.mkdirs()) { org.mapsforge.android.maps.mapgenerator.FileSystemTileCache.LOGGER.log(java.util.logging.Level.INFO, (\"Created folder: \" + parentFile)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2103/buggy-version/mapsforge-map.src.main.java.org.mapsforge.android.maps.mapgenerator.FileSystemTileCache.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String)", "java.io.File.mkdirs()"], "Fixed commit": "76d3d9dd2db550f1b6c0b346104c76b12d5ed85a", "Url": "https://api.github.com/repos/geopaparazzi/mapsforge-custom-geopaparazzi", "Date": "2014-01-16T13:08:31Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parentFile.exists()) { fileOutputStream = new java.io.FileOutputStream(outputFile); fileOutputStream.write(array, 0, array.length); this.map.put(mapGeneratorJob, outputFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2103/buggy-version/mapsforge-map.src.main.java.org.mapsforge.android.maps.mapgenerator.FileSystemTileCache.java", "BodyUseAPI": [], "Fixed commit": "76d3d9dd2db550f1b6c0b346104c76b12d5ed85a", "Url": "https://api.github.com/repos/geopaparazzi/mapsforge-custom-geopaparazzi", "Date": "2014-01-16T13:08:31Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mBinding.tabs.getTabCount()) > 0) { mBinding.tabs.addTab(tab, 1); }else { mBinding.tabs.addTab(tab); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5043/buggy-version/Cus!News.app.src.main.java.com.cusnews.app.activities.MainActivity.java", "BodyUseAPI": ["mBinding.tabs.addTab(android.support.design.widget.TabLayout.Tab)", "mBinding.tabs.addTab(android.support.design.widget.TabLayout.Tab,int)"], "Fixed commit": "2f4d0f018372a078fb79a3fc46f946b9c1959293", "Url": "https://api.github.com/repos/XinyueZ/cusnews", "Date": "2015-06-30T08:19:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["example.model.User.getValue(java.lang.String)", "example.model.User.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (queryUserId.equals(uid)) { hidden = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/86/buggy-version/src.example.controller.Weibo.java", "BodyUseAPI": [], "Fixed commit": "c56a6e8d998d97730990c5cb7b0d9aec2ff8c668", "Url": "https://api.github.com/repos/shonenada/Juva", "Date": "2013-06-19T07:55:08Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gs.getLocation()) != null) { messages.add((((\"\\t\" + (gs.getName())) + \" - \") + (gs.getLocation().getAddress()))); }else { messages.add((((\"\\t\" + (gs.getName())) + \" - \") + \"no address information\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7702/buggy-version/src.main.java.ru.apache_maven.commands.ShowCommand.java", "BodyUseAPI": ["ru.apache_maven.models.GasStation.getName()", "ru.apache_maven.models.GasStation.getLocation()", "java.util.ArrayList<java.lang.String>.add((((\"\\t\" + (gs.getName())) + \" - \") + \"no address information\"))", "gs.getLocation().getAddress()", "java.util.ArrayList<java.lang.String>.add((((\"\\t\" + (gs.getName())) + \" - \") + (gs.getLocation().getAddress())))", "ru.apache_maven.models.GasStation.getName()"], "Fixed commit": "1f3f1c3e8ffa75a1ffa29ce20cd4056422b66545", "Url": "https://api.github.com/repos/TanyaKolp/HIbernateProject", "Date": "2017-06-15T11:50:02Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ioe instanceof org.apache.mina.core.write.WriteTimeoutException) { audio.broadcast.icecast.IcecastTCPAudioBroadcaster.mLog.info(\"Network write timeout error - resetting connection\"); disconnect(); connect(); }else { setBroadcastState(BroadcastState.ERROR); disconnect(); audio.broadcast.icecast.IcecastTCPAudioBroadcaster.mLog.error(\"Unspecified IO error - streaming halted.\", cause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2749/buggy-version/src.audio.broadcast.icecast.IcecastTCPAudioBroadcaster.java", "BodyUseAPI": [], "Fixed commit": "c3d60dc1741d80965f3d88bb08f6bb42dfdde50e", "Url": "https://api.github.com/repos/whelgeson/sdrtrunk", "Date": "2017-02-12T13:04:27Z"},
{"Line": "=>773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getMethod().equalsIgnoreCase(Request.NOTIFY)) || (request.getMethod().equalsIgnoreCase(Request.SUBSCRIBE))) { clonedRequest = org.mobicents.servlet.sip.proxy.ProxyUtils.createProxiedRequest(request, this, null, outboundInterface, recordRouteURI, null); }else { clonedRequest = org.mobicents.servlet.sip.proxy.ProxyUtils.createProxiedRequest(request, this, null, null, null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1746/buggy-version/sip-servlets-impl.src.main.java.org.mobicents.servlet.sip.proxy.ProxyBranchImpl.java", "BodyUseAPI": ["org.mobicents.servlet.sip.proxy.ProxyUtils.createProxiedRequest(org.mobicents.servlet.sip.message.SipServletRequestImpl,org.mobicents.servlet.sip.proxy.ProxyBranchImpl,<nulltype>,javax.servlet.sip.SipURI,javax.servlet.sip.SipURI,<nulltype>)", "org.mobicents.servlet.sip.proxy.ProxyUtils.createProxiedRequest(org.mobicents.servlet.sip.message.SipServletRequestImpl,org.mobicents.servlet.sip.proxy.ProxyBranchImpl,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Fixed commit": "21c864cf55122532aca7a0701948af3e5388af26", "Url": "https://api.github.com/repos/RestComm/sip-servlets", "Date": "2016-03-14T13:06:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.LayoutInflater.inflate(R.layout.fragment_donate_us,android.view.ViewGroup,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.mdareports.utils.DeviceInfoUtils.isCurrentLanguageHebrew(rootView.getContext())) { ratingBarDonation.setScaleX((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6882/buggy-version/MadaReports.src.com.mdareports.ui.fragments.DonateUsFragment.java", "BodyUseAPI": [], "Fixed commit": "b8d60ab3623c6992794ebd70e43cbb1c2fc97c51", "Url": "https://api.github.com/repos/mogaldev/mda", "Date": "2014-03-31T21:28:01Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == 0) { j = resolution.gridHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7207/buggy-version/app.src.main.java.com.dpanayotov.gameoflife.life.Life.java", "BodyUseAPI": [], "Fixed commit": "d900b54f7d9436edb72648243863cfbdeea39785", "Url": "https://api.github.com/repos/deanpanayotov/game-of-life-android", "Date": "2017-01-01T17:56:42Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != f) { f.onActivityResult(requestCode, resultCode, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6481/buggy-version/src.net.thetranquilpsychonaut.hashtagger.sites.ui.SitesActivity.java", "BodyUseAPI": ["android.support.v4.app.Fragment.onActivityResult(int,int,android.content.Intent)"], "Fixed commit": "29406ca400ecd4e3e793c251c1f542e76a3d190f", "Url": "https://api.github.com/repos/iTwenty/Hashtagger", "Date": "2014-07-29T11:39:20Z"},
{"Line": "=>1716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crtb.tunnelmonitor.utils.AlertUtils.getPointSubsidenceExceed(java.lang.Object,int,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ex == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6710/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.utils.AlertUtils.java", "BodyUseAPI": [], "Fixed commit": "3f84883022fced8f4e1bfa19acf8440bab1b6e8c", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-09-26T09:17:43Z"},
{"Line": "=>1709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (point != null) { info.mDate = format.format(((com.crtb.tunnelmonitor.entity.SubsidenceTotalData) (point)).getSurveyTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6710/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.utils.AlertUtils.java", "BodyUseAPI": [], "Fixed commit": "3f84883022fced8f4e1bfa19acf8440bab1b6e8c", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-09-26T09:17:43Z"},
{"Line": "=>952", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crtb.tunnelmonitor.utils.AlertUtils.getUVaule(c.getString(8),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (info != null) { ai.setUValue(((info.mUVaule) != null ? info.mUVaule : c.getDouble(7))); ai.setDate(((info.mDate) != null ? info.mDate : c.getString(1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6710/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.utils.AlertUtils.java", "BodyUseAPI": ["com.crtb.tunnelmonitor.entity.AlertInfo.setDate(((info.mDate) != null ? info.mDate : c.getString(1)))", "com.crtb.tunnelmonitor.entity.AlertInfo.setUValue(((info.mUVaule) != null ? info.mUVaule : c.getDouble(7)))"], "Fixed commit": "3f84883022fced8f4e1bfa19acf8440bab1b6e8c", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-09-26T09:17:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((timestamp) instanceof org.apache.flink.streaming.api.windowing.helper.SystemTimestamp) && ((otherTSW.timestamp) instanceof org.apache.flink.streaming.api.windowing.helper.SystemTimestamp)) { return true; }else { return ((startTime) == (otherTSW.startTime)) && ((timestamp.getClass()) == (otherTSW.timestamp.getClass())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5339/buggy-version/flink-staging.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.windowing.helper.TimestampWrapper.java", "BodyUseAPI": ["org.apache.flink.streaming.api.windowing.helper.Timestamp<T>.getClass()"], "Fixed commit": "8791d4f020f812593ceca1a047e8b0722c19d879", "Url": "https://api.github.com/repos/MoeweX/flink", "Date": "2015-04-26T11:02:59Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.getCount()) == 0) { updateMovieList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8512/buggy-version/app.src.main.java.com.tutorial.nano.popularmovies.FragmentMain.java", "BodyUseAPI": [], "Fixed commit": "d5169a9f7c76b37f7fbb589bb14de487813cf309", "Url": "https://api.github.com/repos/mkamhawi/popular-movies-app", "Date": "2016-04-25T12:32:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isHidden) { isHidden = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/250/buggy-version/app.src.main.java.com.jacobherbel.pocketdeck.cardStuff.Hand.java", "BodyUseAPI": [], "Fixed commit": "6269dce58cd638fc45e4a37c9ac5b033af0cb947", "Url": "https://api.github.com/repos/JakeHerb/PocketDeck", "Date": "2017-07-22T22:07:19Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (p_backend != null) { this._backend = p_backend; }else { _backend = new java.lang.Object[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2453/buggy-version/core.src.main.java.org.mwg.core.task.CoreTaskResultIterator.java", "BodyUseAPI": [], "Fixed commit": "b989e20d26112aa63775ec986403c9bd5231ad19", "Url": "https://api.github.com/repos/datathings/greycat", "Date": "2016-07-19T10:03:48Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"male\".equals(gender)) { gender = \"man\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3160/buggy-version/restcomm.rcml.src.main.java.org.mobicents.servlet.sip.restcomm.interpreter.tagstrategy.RcmlTagStrategy.java", "BodyUseAPI": [], "Fixed commit": "52ac0c0f33b02ca481efdcb9fdfe82dfbff8e396", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2012-11-29T03:14:45Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["attribute.getValue().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"female\".equals(gender)) { gender = \"woman\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3160/buggy-version/restcomm.rcml.src.main.java.org.mobicents.servlet.sip.restcomm.interpreter.tagstrategy.RcmlTagStrategy.java", "BodyUseAPI": [], "Fixed commit": "52ac0c0f33b02ca481efdcb9fdfe82dfbff8e396", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2012-11-29T03:14:45Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPlayer(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (defender.isInGame()) { defender.damage(amount, attacker.getId(), game, true, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2735/buggy-version/Mage.src.main.java.mage.game.combat.CombatGroup.java", "BodyUseAPI": ["mage.players.Player.damage(int,attacker.getId(),mage.game.Game,boolean,boolean)"], "Fixed commit": "ff6d79829e72283508befd64d475452292ff5211", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2017-02-04T22:56:03Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pasvSocket) != null) { pasvSocket.setSoTimeout(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8704/buggy-version/src.com.ftpserver.commandhandler.CMDHandler.java", "BodyUseAPI": [], "Fixed commit": "de08736363cee0a0d14295e162efc5ca362644cb", "Url": "https://api.github.com/repos/windr00/FTP", "Date": "2016-04-23T09:44:21Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileIOInstance.isDir(temp)) { response(Statics.RETR_FAILED_RETURN); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8704/buggy-version/src.com.ftpserver.commandhandler.CMDHandler.java", "BodyUseAPI": [], "Fixed commit": "de08736363cee0a0d14295e162efc5ca362644cb", "Url": "https://api.github.com/repos/windr00/FTP", "Date": "2016-04-23T09:44:21Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getClass()) == (java.lang.NoSuchMethodException.class)) { onResponse(Statics.COMMAND_NOT_UNDERSTOOD_RETURN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8704/buggy-version/src.com.ftpserver.network.ClientSocketThread.java", "BodyUseAPI": [], "Fixed commit": "de08736363cee0a0d14295e162efc5ca362644cb", "Url": "https://api.github.com/repos/windr00/FTP", "Date": "2016-04-23T09:44:21Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variantsPath.toString().endsWith(\".gz\")) { variantsFilename = com.google.common.io.Files.getNameWithoutExtension(variantsFilename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/793/buggy-version/opencga-app.src.main.java.org.opencb.opencga.app.cli.OpenCGAMain.java", "BodyUseAPI": [], "Fixed commit": "54a7366d106ce9373bfe3d35793e43c7ded3e5d2", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2014-08-14T14:17:52Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxRedundancyScore >= 1) { return java.lang.Double.MIN_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4807/buggy-version/grok.src.main.java.com.redygest.grok.selection.mmr.AbstractMMRSelector.java", "BodyUseAPI": [], "Fixed commit": "474db44c3559548af5b18a67635e56ae54036c11", "Url": "https://api.github.com/repos/semanticvoid/reDygest", "Date": "2012-05-16T01:12:22Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((treeInstanceRoot) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8675/buggy-version/src.tcg.tree.TreeInstance.java", "BodyUseAPI": [], "Fixed commit": "08adf8607b55e942b1e24b45d3303aff91b4dcfd", "Url": "https://api.github.com/repos/GerritSe/eclipse-human-oracle-plugin", "Date": "2017-01-16T19:47:33Z"},
{"Line": "=>2715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedVertices.contains(vertex)) { selectedVertices.remove(vertex); }else { selectedVertices.add(vertex); if ((org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow().getWorkingType()) == (org.nschmidt.ldparteditor.enums.ObjectMode.VERTICES)) lastSelectedVertex = vertex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1608/buggy-version/src.org.nschmidt.ldparteditor.data.VertexManager.java", "BodyUseAPI": ["java.util.Set<org.nschmidt.ldparteditor.data.Vertex>.add(org.nschmidt.ldparteditor.data.Vertex)", "java.util.Set<org.nschmidt.ldparteditor.data.Vertex>.remove(org.nschmidt.ldparteditor.data.Vertex)"], "Fixed commit": "05745282196e7c67b84374380a6c823b7e94f3c9", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-11-09T09:16:53Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lhoValue instanceof freemarker.template.TemplateNumberModel) { lhoNumber = freemarker.core.EvalUtil.modelToNumber(((freemarker.template.TemplateNumberModel) (lhoValue)), null); }else if (lhoValue == null) { throw freemarker.core.InvalidReferenceException.getInstance(variableName, getOperatorTypeAsString(), env); }else { throw new freemarker.core.NonNumericalException(variableName, lhoValue, null, env); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7894/buggy-version/src.main.java.freemarker.core.Assignment.java", "BodyUseAPI": [], "Fixed commit": "fb22de52369547a6cfbfd8095728f2e926541767", "Url": "https://api.github.com/repos/freemarker/freemarker-old", "Date": "2015-06-17T06:26:28Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 21) { pauseRunningBtn.setCompoundDrawablesWithIntrinsicBounds(null, getResources().getDrawable(R.drawable.ic_play), null, null); }else { pauseRunningBtn.setCompoundDrawablesWithIntrinsicBounds(null, getResources().getDrawable(R.drawable.ic_play_dark), null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7890/buggy-version/app.src.main.java.com.mtickner.runningmotivator.RunActivity.java", "BodyUseAPI": [], "Fixed commit": "c0fadc459e68653470d9f10b75c4f8e0e280f5f9", "Url": "https://api.github.com/repos/MarkTickner/RunAce", "Date": "2015-04-08T00:25:11Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 21) { pauseRunningBtn.setCompoundDrawablesWithIntrinsicBounds(null, getResources().getDrawable(R.drawable.ic_pause), null, null); }else { pauseRunningBtn.setCompoundDrawablesWithIntrinsicBounds(null, getResources().getDrawable(R.drawable.ic_pause_dark), null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7890/buggy-version/app.src.main.java.com.mtickner.runningmotivator.RunActivity.java", "BodyUseAPI": [], "Fixed commit": "c0fadc459e68653470d9f10b75c4f8e0e280f5f9", "Url": "https://api.github.com/repos/MarkTickner/RunAce", "Date": "2015-04-08T00:25:11Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tokens[0].equals(\"customer\"))) { if (!(o_keys.contains(k))) { same_operation = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3404/buggy-version/src.TransactionManager.Transaction.java", "BodyUseAPI": [], "Fixed commit": "7f3d4a9155f39c3f6925f5632e9eff158f6c1b0f", "Url": "https://api.github.com/repos/pmanko2/512_project", "Date": "2013-11-08T19:58:27Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jgit.lib.Repository.resolve(Constants.HEAD)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (head == null) { return diffList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3151/buggy-version/jp.ac.kyushu.iarch.checkplugin.src.jp.ac.kyushu.iarch.checkplugin.utils.GitUtils.java", "BodyUseAPI": [], "Fixed commit": "929ddf595c82224d34e15418db15b440ef6282e4", "Url": "https://api.github.com/repos/posl/iArch", "Date": "2017-04-13T10:50:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (classPath.endsWith(\"/build/test-classes/\")) { classPath = classPath.replaceFirst(\"/build/test-classes/\", \"/\"); }else if (classPath.endsWith(\"/build/classes/\")) { classPath = classPath.replaceFirst(\"/build/classes/\", \"/\"); }else if (classPath.endsWith(\"/WebContent/WEB-INF/lib/\")) { classPath = classPath.replaceFirst(\"/WebContent/WEB-INF/lib/\", \"/\"); }else if (classPath.endsWith(\"/WebRoot/WEB-INF/lib/\")) { classPath = classPath.replaceFirst(\"/WebRoot/WEB-INF/lib/\", \"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1114/buggy-version/src.main.java.com.di.kit.PathUtil.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "eba97cce268d616779c7ddaa9063e8000c44c302", "Url": "https://api.github.com/repos/dingey/kit", "Date": "2017-10-13T08:57:11Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params == null) { params = new android.support.v4.util.ArrayMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7491/buggy-version/app.src.main.java.com.dmh.mvp.http.OkHttpApi.java", "BodyUseAPI": [], "Fixed commit": "b30e4539748df43295b31db4e652ecc378739ef9", "Url": "https://api.github.com/repos/hahahazzz/MVP", "Date": "2017-09-28T09:17:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params == null) { params = new android.support.v4.util.ArrayMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7491/buggy-version/app.src.main.java.com.dmh.mvp.http.OkHttpApi.java", "BodyUseAPI": [], "Fixed commit": "b30e4539748df43295b31db4e652ecc378739ef9", "Url": "https://api.github.com/repos/hahahazzz/MVP", "Date": "2017-09-28T09:17:39Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.mcgill.cs.stg.jetuml.graph.Graph.findNode(java.awt.geom.Point2D)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(aSelectedElements.contains(n))) { aSelectedElements.set(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6937/buggy-version/src.ca.mcgill.cs.stg.jetuml.framework.GraphPanel.java", "BodyUseAPI": ["ca.mcgill.cs.stg.jetuml.framework.SelectionList.set(ca.mcgill.cs.stg.jetuml.graph.Node)"], "Fixed commit": "7758f4d5b5f86a442c15ec520672558574d8e78f", "Url": "https://api.github.com/repos/prmr/JetUML", "Date": "2015-01-31T16:35:58Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.mcgill.cs.stg.jetuml.graph.Graph.findNode(java.awt.geom.Point2D)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(aSelectedElements.contains(n))) { aSelectedElements.set(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6937/buggy-version/src.ca.mcgill.cs.stg.jetuml.framework.GraphPanel.java", "BodyUseAPI": ["ca.mcgill.cs.stg.jetuml.framework.SelectionList.set(ca.mcgill.cs.stg.jetuml.graph.Node)"], "Fixed commit": "7758f4d5b5f86a442c15ec520672558574d8e78f", "Url": "https://api.github.com/repos/prmr/JetUML", "Date": "2015-01-31T16:35:58Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLocation) == null) { mLocation = new android.location.Location(\"\"); mLocation.setLatitude((-38.0)); mLocation.setLongitude((-57.55)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3923/buggy-version/app.src.main.java.tesis.com.estudiemos.fragments.GroupDetailMapFragment.java", "BodyUseAPI": [], "Fixed commit": "20788c5007aa7a3fc49d6f25d128b982f2f2ef0a", "Url": "https://api.github.com/repos/apuli/Estudiemos", "Date": "2016-02-02T18:03:03Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getName().resolveBinding().getJavaElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (javaElement != null) { switch (javaElement.getElementType()) { case org.eclipse.jdt.core.IJavaElement.FIELD : if ((node.getQualifier().resolveBinding().getKind()) != (org.eclipse.jdt.core.dom.IBinding.TYPE)) if (!(isSubElement(node.getQualifier().toString()))) uses.add(node.getQualifier().toString()); stored.push((((node.getQualifier().toString()) + \".\") + (node.getName().toString()))); break; default : stored.push(node.getName().toString()); break; } }else stored.push(node.getName().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6544/buggy-version/PESTT.src.domain.explorer.DefUsesStatementVisitor.java", "BodyUseAPI": ["org.eclipse.jdt.core.IJavaElement.getElementType()"], "Fixed commit": "85ed2f62550858abcb8e03507cc13511de393fc2", "Url": "https://api.github.com/repos/pestt/PESTT", "Date": "2012-06-26T15:27:27Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((binding.get(\"orient\")) == null) binding.put(\"orient\", new com.orientechnologies.orient.graph.script.OScriptGraphOrientWrapper());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3712/buggy-version/graphdb.src.main.java.com.orientechnologies.orient.graph.handler.OGraphServerHandler.java", "BodyUseAPI": ["javax.script.Bindings.put(java.lang.String,com.orientechnologies.orient.graph.script.OScriptGraphOrientWrapper)"], "Fixed commit": "636df06365d11fe1160c17729033dad38c73fad8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-23T16:56:58Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tools != null) { for (int j = 0; j < (tools.tools.length); j++) { if (((tools.tools[j]) != null) && (tools.tools[j].isItemEnchanted())) { addApToItem(tools.tools[j]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/687/buggy-version/ak.EnchantChanger.EcEntityApOrb.java", "BodyUseAPI": ["tools.tools[j].isItemEnchanted()", "ak.EnchantChanger.EcEntityApOrb.addApToItem(tools.tools[j])"], "Fixed commit": "bdf02af5b1b6791054b1bde364440454ba967b7e", "Url": "https://api.github.com/repos/aksource/EnchantChanger147", "Date": "2013-10-28T04:27:20Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.getElementsByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (anchorTag != null) { for (org.jsoup.nodes.Element e : anchorTag) { org.jsoup.nodes.Element parElem = e.parent(); if (!(\"h2\".equals(parElem.tagName()))) { extraAnchorTagExists = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1932/buggy-version/src.main.com.cisco.dse.global.migration.solutionlisting.SolutionListingVariation11.java", "BodyUseAPI": [], "Fixed commit": "cce19d9c13f62cbcdc6f0ed624949b65727b5e18", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2015-12-07T07:05:05Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((fileFormat.length) > 1) && (fileFormat[1].equals(\"ur\"))) { readFromUserFormat(fileName); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/248/buggy-version/src.WireSimulator.BoardController.java", "BodyUseAPI": [], "Fixed commit": "02ac05d49b2cc0f903fd7a609a0a637c64bb0346", "Url": "https://api.github.com/repos/losiu97/WireWorld", "Date": "2017-05-22T08:33:28Z"},
{"Line": "=>944", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.marakana.webfilez.WebFilezServlet.resolveSafe(java.nio.file.Path,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (newFile == null) { refuseBadRequest(request, response, ((((\"Cannot rename [\" + file) + \"] to newFile=[\") + newFile) + \"]; illegal filename.\")); }else if (java.nio.file.Files.exists(newFile)) { refuseBadRequest(request, response, ((((\"Cannot rename [\" + file) + \"] because newFile=[\") + newFile) + \"] already exists\")); }else { java.nio.file.Files.move(file, newFile); if (com.marakana.webfilez.WebFilezServlet.logger.isDebugEnabled()) { com.marakana.webfilez.WebFilezServlet.logger.debug(((((\"Renamed [\" + file) + \"] to [\") + newFile) + \"]\")); } response.setStatus(HttpServletResponse.SC_OK); this.sendFileInfoResponse(com.marakana.webfilez.WebUtil.getParentUriPath(this.getAbsoluteUri(request)), newFile, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2559/buggy-version/src.com.marakana.webfilez.WebFilezServlet.java", "BodyUseAPI": ["com.marakana.webfilez.WebFilezServlet.refuseBadRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)", "java.nio.file.Files.exists(java.nio.file.Path)", "com.marakana.webfilez.WebFilezServlet.sendFileInfoResponse(com.marakana.webfilez.WebUtil.getParentUriPath(this.getAbsoluteUri(request)),java.nio.file.Path,javax.servlet.http.HttpServletResponse)", "org.slf4j.Logger.debug(java.lang.String)", "com.marakana.webfilez.WebFilezServlet.refuseBadRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String)", "java.nio.file.Files.move(java.nio.file.Path,java.nio.file.Path)"], "Fixed commit": "23e3d798f87c7e93935ea4ecb485b3d477a7ffdc", "Url": "https://api.github.com/repos/marakana/webfilez", "Date": "2013-04-09T20:25:28Z"},
{"Line": "=>1179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDirectory) { out.append('/'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2559/buggy-version/src.com.marakana.webfilez.WebFilezServlet.java", "BodyUseAPI": [], "Fixed commit": "23e3d798f87c7e93935ea4ecb485b3d477a7ffdc", "Url": "https://api.github.com/repos/marakana/webfilez", "Date": "2013-04-09T20:25:28Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!consumerTimeout) { processed = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5234/buggy-version/components.camel-kafka.src.main.java.org.apache.camel.component.kafka.KafkaConsumer.java", "BodyUseAPI": [], "Fixed commit": "2e9fda50fb1dff6ca18473b724e5ae513d3e503c", "Url": "https://api.github.com/repos/cerker/camel", "Date": "2014-12-25T08:27:12Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((endpoint.getConsumerTimeoutMs()) == null) || ((endpoint.getConsumerTimeoutMs().intValue()) < 0)) && ((endpoint.getConsumerStreams()) > 1)) { org.apache.camel.component.kafka.KafkaConsumer.LOG.warn(\"consumerTimeoutMs is set to -1 (infinite) while requested multiple consumer streams.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5234/buggy-version/components.camel-kafka.src.main.java.org.apache.camel.component.kafka.KafkaConsumer.java", "BodyUseAPI": [], "Fixed commit": "2e9fda50fb1dff6ca18473b724e5ae513d3e503c", "Url": "https://api.github.com/repos/cerker/camel", "Date": "2014-12-25T08:27:12Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.openConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((200 <= (conn.getResponseCode())) && ((conn.getResponseCode()) <= 299)) { bis = new java.io.BufferedInputStream(conn.getInputStream()); }else { bis = new java.io.BufferedInputStream(conn.getErrorStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8837/buggy-version/app.src.main.java.com.home.weatherstation.UploadService.java", "BodyUseAPI": ["javax.net.ssl.HttpsURLConnection.getInputStream()", "javax.net.ssl.HttpsURLConnection.getErrorStream()"], "Fixed commit": "375b94b0d5295eafc25b97728a4f3e4300740787", "Url": "https://api.github.com/repos/thaarres/thaarres.github.io", "Date": "2017-12-03T15:23:33Z"},
{"Line": "=>967", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indexOfPipe != (-1)) { ids = inputString.substring(0, indexOfPipe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4333/buggy-version/aeron-tools.src.main.java.uk.co.real_logic.aeron.tools.PubSubOptions.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "201c140c1565b92d02a05d35dab222d47ee9f9ef", "Url": "https://api.github.com/repos/migue/Aeron", "Date": "2015-05-05T15:52:08Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["o1.fieldValues.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (left == null) { left = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/897/buggy-version/src.main.java.io.mycat.sqlengine.mpp.tmp.RowDataCmp.java", "BodyUseAPI": [], "Fixed commit": "ab2580f5ccb3b77cea620a11f6fef42ba1e40db6", "Url": "https://api.github.com/repos/fireflyhoo/Mycat-Server", "Date": "2017-05-08T05:36:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["o2.fieldValues.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (right == null) { right = new byte[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/897/buggy-version/src.main.java.io.mycat.sqlengine.mpp.tmp.RowDataCmp.java", "BodyUseAPI": [], "Fixed commit": "ab2580f5ccb3b77cea620a11f6fef42ba1e40db6", "Url": "https://api.github.com/repos/fireflyhoo/Mycat-Server", "Date": "2017-05-08T05:36:58Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curclus == 0) && (colclus == 211)) edu.indiana.soic.spidal.binary.tools.mpitools.Utils.printMessage((\"Found value ::::::::::::::\" + ((ParallelOps.PointDistances[((localRow * (ParallelOps.globalColCount)) + col)]) * (edu.indiana.soic.spidal.binary.tools.mpitools.ClusterStatsGenerator.INV_SHORT_MAX))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8984/buggy-version/src.main.java.edu.indiana.soic.spidal.binary.tools.mpitools.ClusterStatsGenerator.java", "BodyUseAPI": [], "Fixed commit": "ed0156d03730ede9e826a7a5b1e3942d5e4a4b41", "Url": "https://api.github.com/repos/pulasthi/dsc-binary-tools", "Date": "2017-11-16T23:21:02Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tasksIdsConf == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4549/buggy-version/src.mapred.org.apache.hadoop.mapred.Utils.java", "BodyUseAPI": [], "Fixed commit": "74b8e06eca324faf37b05a29ba1f81e832fe26db", "Url": "https://api.github.com/repos/JerryLead/hadoop-1.2.0-enhanced", "Date": "2014-03-19T14:09:16Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<?>, android.util.SparseArray<java.lang.ref.SoftReference<java.lang.Object>>>.get(java.lang.Class<T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((classCache.get(id)) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3479/buggy-version/src.net.epsilonlabs.datamanagementefficient.library.Cache.java", "BodyUseAPI": [], "Fixed commit": "0b1f35b002bb7cda8da676d9880fdbf92d155975", "Url": "https://api.github.com/repos/epsilonlabsllc/DataManagement", "Date": "2013-03-26T16:28:18Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) == null) { task = new java.util.TimerTask() { @java.lang.Override public void run() { place(); } }; timer.schedule(task, DELAY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8060/buggy-version/src.gameBoard.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "df4daa3aacbf655df0c00ce291e17f8335f3bfd8", "Url": "https://api.github.com/repos/exal99/Tetris", "Date": "2016-09-27T10:14:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (placesTypesList.isEmpty()) { placesTypesList.add(new com.dominika.florczykowska.placesfinder.classes.PlaceType(\"hotel\", \"Hotels\", \"hotels\")); placesTypesList.add(new com.dominika.florczykowska.placesfinder.classes.PlaceType(\"restaurant\", \"Restaurants\", \"restaurants\")); placesTypesList.add(new com.dominika.florczykowska.placesfinder.classes.PlaceType(\"bar\", \"Bars\", \"bars\")); placesTypesList.add(new com.dominika.florczykowska.placesfinder.classes.PlaceType(\"night_club\", \"Night clubs\", \"night_clubs\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7836/buggy-version/app.src.main.java.com.dominika.florczykowska.placesfinder.fragments.SearchFragment.java", "BodyUseAPI": ["java.util.ArrayList<com.dominika.florczykowska.placesfinder.classes.PlaceType>.add(com.dominika.florczykowska.placesfinder.classes.PlaceType)", "java.util.ArrayList<com.dominika.florczykowska.placesfinder.classes.PlaceType>.add(com.dominika.florczykowska.placesfinder.classes.PlaceType)", "java.util.ArrayList<com.dominika.florczykowska.placesfinder.classes.PlaceType>.add(com.dominika.florczykowska.placesfinder.classes.PlaceType)", "java.util.ArrayList<com.dominika.florczykowska.placesfinder.classes.PlaceType>.add(com.dominika.florczykowska.placesfinder.classes.PlaceType)"], "Fixed commit": "a71ad2c3c3d20752c401f3a78314537abd2005a3", "Url": "https://api.github.com/repos/dflorczykowska/placesfinder", "Date": "2017-04-05T08:34:29Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(link.getIdentity().isPersistent())) { com.orientechnologies.orient.core.record.ORecord real = link.getRecord(); if (real != null) link = real; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4772/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.binary.ORecordSerializerBinaryV0.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.record.OIdentifiable.getRecord()"], "Fixed commit": "4a99cb1bcd28b4a2ad50865192d0a6493d6b1608", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-07-14T17:09:03Z"},
{"Line": "=>2180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iFieldValue instanceof com.orientechnologies.orient.core.db.record.OIdentifiable) && (!(((com.orientechnologies.orient.core.db.record.OIdentifiable) (iFieldValue)).getIdentity().isPersistent()))) track(((com.orientechnologies.orient.core.db.record.OIdentifiable) (iFieldValue)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4772/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocument.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.track(java.lang.Object)"], "Fixed commit": "4a99cb1bcd28b4a2ad50865192d0a6493d6b1608", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-07-14T17:09:03Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTrackAlpha) != (-1.0F)) { mTrackPaint.setAlpha(((int) (java.lang.Math.ceil(((mTrackAlpha) * 255))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7262/buggy-version/app.src.main.java.com.charliealbright.circleprogressbar.CircleProgressBar.java", "BodyUseAPI": ["java.lang.Math.ceil(float)", "android.graphics.Paint.setAlpha(double)"], "Fixed commit": "080b45476f1c6a9256f355e0d54f884693c78e14", "Url": "https://api.github.com/repos/charliealbright/CircleProgressBar", "Date": "2016-08-05T23:49:07Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mProgressAlpha) != (-1.0F)) { mProgressPaint.setAlpha(((int) (java.lang.Math.ceil(((mProgressAlpha) * 255))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7262/buggy-version/app.src.main.java.com.charliealbright.circleprogressbar.CircleProgressBar.java", "BodyUseAPI": ["java.lang.Math.ceil(float)", "android.graphics.Paint.setAlpha(double)"], "Fixed commit": "080b45476f1c6a9256f355e0d54f884693c78e14", "Url": "https://api.github.com/repos/charliealbright/CircleProgressBar", "Date": "2016-08-05T23:49:07Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bundle.getString(Constant.SYNC_CITYCODE)) != null) { cityCode = bundle.getString(Constant.SYNC_CITYCODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1915/buggy-version/app.src.main.java.com.amk2.musicrunner.services.SyncAdapter.java", "BodyUseAPI": ["android.os.Bundle.getString(Constant.SYNC_CITYCODE)"], "Fixed commit": "a824d4e6bbd6023a4ce34f87ef5b62cdc0cbaac9", "Url": "https://api.github.com/repos/rufuslee/MusicRunner", "Date": "2014-06-30T01:20:22Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bundle.getString(Constant.SYNC_CITYCODE)) != null) { cityCode = bundle.getString(Constant.SYNC_CITYCODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1915/buggy-version/app.src.main.java.com.amk2.musicrunner.services.SyncAdapter.java", "BodyUseAPI": ["android.os.Bundle.getString(Constant.SYNC_CITYCODE)"], "Fixed commit": "a824d4e6bbd6023a4ce34f87ef5b62cdc0cbaac9", "Url": "https://api.github.com/repos/rufuslee/MusicRunner", "Date": "2014-06-30T01:20:22Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bundle.getString(Constant.SYNC_CITYCODE)) != null) { cityCode = bundle.getString(Constant.SYNC_CITYCODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1915/buggy-version/app.src.main.java.com.amk2.musicrunner.services.SyncAdapter.java", "BodyUseAPI": ["android.os.Bundle.getString(Constant.SYNC_CITYCODE)"], "Fixed commit": "a824d4e6bbd6023a4ce34f87ef5b62cdc0cbaac9", "Url": "https://api.github.com/repos/rufuslee/MusicRunner", "Date": "2014-06-30T01:20:22Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == (buttonNewEnroll)) { startActivity(new android.content.Intent(this, com.example.mju4.embproject.Enroll_locationActivit.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4595/buggy-version/app.src.main.java.com.example.mju4.embproject.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "418ad8c0315f96f06c74bc0122712a6f11ec2ae0", "Url": "https://api.github.com/repos/gitdog01/EmbProject2", "Date": "2017-12-03T16:07:11Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayDeque<java.lang.Object>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (msg == (io.vertx.core.http.impl.VertxHttp2Stream.END)) { handleEnd(null); }else if (msg instanceof io.vertx.core.MultiMap) { handleEnd(((io.vertx.core.MultiMap) (msg))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4797/buggy-version/src.main.java.io.vertx.core.http.impl.VertxHttp2Stream.java", "BodyUseAPI": [], "Fixed commit": "b508969e3544374ec1b77205f5a10e680e52370d", "Url": "https://api.github.com/repos/eclipse/vert.x", "Date": "2016-03-30T07:59:51Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (trailers != null) { pending.add(trailers); }else { pending.add(io.vertx.core.http.impl.VertxHttp2Stream.END); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4797/buggy-version/src.main.java.io.vertx.core.http.impl.VertxHttp2Stream.java", "BodyUseAPI": ["java.util.ArrayDeque<java.lang.Object>.add(io.vertx.core.MultiMap)"], "Fixed commit": "b508969e3544374ec1b77205f5a10e680e52370d", "Url": "https://api.github.com/repos/eclipse/vert.x", "Date": "2016-03-30T07:59:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value != null) { this.value = value.clone(); }else { this.value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8283/buggy-version/src.main.java.com.googlecode.paradox.utils.ClobBlock.java", "BodyUseAPI": [], "Fixed commit": "70f385119ae632a37267f11a716de00459a6cda9", "Url": "https://api.github.com/repos/leonhad/paradoxdriver", "Date": "2016-09-30T00:28:33Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) != null) { return value.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8283/buggy-version/src.main.java.com.googlecode.paradox.utils.ClobBlock.java", "BodyUseAPI": [], "Fixed commit": "70f385119ae632a37267f11a716de00459a6cda9", "Url": "https://api.github.com/repos/leonhad/paradoxdriver", "Date": "2016-09-30T00:28:33Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i <= ((Server.Server.accs.size()) - 1)) { if ((GettingUsers) != 20) { serv.execute(new java.lang.String[]{ \"send\", \"user\", java.lang.String.valueOf(acc.id), acc.login }); i++; }else { break; } }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4999/buggy-version/src.Server.Intellect.java", "BodyUseAPI": [], "Fixed commit": "a8805bbdfd98e9eca160e4a607075f5c9ce509a6", "Url": "https://api.github.com/repos/AlexMac250/GUI-Messenger", "Date": "2016-09-12T02:32:08Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i <= ((Server.Server.accs.size()) - 1)) { ru.universum.Loader.Account account = Server.Server.accs.get(i); serv.execute(new java.lang.String[]{ \"send\", \"user\", java.lang.String.valueOf(account.id), account.login }); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4999/buggy-version/src.Server.Intellect.java", "BodyUseAPI": ["Server.Server.accs.get(int)"], "Fixed commit": "a8805bbdfd98e9eca160e4a607075f5c9ce509a6", "Url": "https://api.github.com/repos/AlexMac250/GUI-Messenger", "Date": "2016-09-12T02:32:08Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dlg.LOCField.getText().trim().equals(\"\")) { t.setLOC(0); }else { t.setLOC(java.lang.Long.parseLong(dlg.LOCField.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1352/buggy-version/src.net.sf.memoranda.ui.TaskPanel.java", "BodyUseAPI": ["java.lang.Long.parseLong(dlg.LOCField.getText())", "net.sf.memoranda.Task.setLOC(long)", "dlg.LOCField.getText()"], "Fixed commit": "7b906ae0312dc8491c7d36fb07742883e43b16ea", "Url": "https://api.github.com/repos/ser316asu/Grunewald_SER316", "Date": "2017-04-24T13:32:03Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dlg.LOCField.getText().trim().equals(\"\")) { locode = 0; }else { locode = java.lang.Long.parseLong(dlg.LOCField.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1352/buggy-version/src.net.sf.memoranda.ui.TaskPanel.java", "BodyUseAPI": ["dlg.LOCField.getText()", "java.lang.Long.parseLong(dlg.LOCField.getText())"], "Fixed commit": "7b906ae0312dc8491c7d36fb07742883e43b16ea", "Url": "https://api.github.com/repos/ser316asu/Grunewald_SER316", "Date": "2017-04-24T13:32:03Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dlg.LOCField.getText().trim().equals(\"\")) { locode = 0; }else { locode = java.lang.Long.parseLong(dlg.LOCField.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1352/buggy-version/src.net.sf.memoranda.ui.TaskPanel.java", "BodyUseAPI": ["dlg.LOCField.getText()", "java.lang.Long.parseLong(dlg.LOCField.getText())"], "Fixed commit": "7b906ae0312dc8491c7d36fb07742883e43b16ea", "Url": "https://api.github.com/repos/ser316asu/Grunewald_SER316", "Date": "2017-04-24T13:32:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((pname.startsWith(\"[ComputerCraft] Turtle\")) && ((event.getBlock().getTypeId()) == 194)) && ((event.getBlock().getData()) == 1)) { event.setCancelled(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/311/buggy-version/TekkitRestrict.src.com.github.dreadslicer.tekkitrestrict.listeners.BlockBreakListener.java", "BodyUseAPI": ["org.bukkit.event.block.BlockBreakEvent.setCancelled(boolean)"], "Fixed commit": "fa3b0ac8650709087e21fdc910bf77cd8a09bc9d", "Url": "https://api.github.com/repos/EterniaLogic/TekkitRestrict", "Date": "2013-09-12T20:59:12Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mskcc.cbio.oncokb.util.Evidence.getShortDescription()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (geneSummary == null) { geneSummary = ev.getDescription(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2017/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.SummaryUtils.java", "BodyUseAPI": [], "Fixed commit": "0bf7005d493a7aa121cd2d7b8f804029edcfd913", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2015-09-08T18:18:17Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mskcc.cbio.oncokb.util.Evidence.getShortDescription()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tumorTypeSummary == null) { tumorTypeSummary = ev.getDescription(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2017/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.SummaryUtils.java", "BodyUseAPI": [], "Fixed commit": "0bf7005d493a7aa121cd2d7b8f804029edcfd913", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2015-09-08T18:18:17Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.javaosc.framework.context.Configuration.getRequestEncode()) { value = org.javaosc.framework.assist.RequestParamHandler.encodingParam(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1306/buggy-version/javaosc-framework-core.src.main.java.org.javaosc.framework.assist.RequestParamHandler.java", "BodyUseAPI": [], "Fixed commit": "5aa0bb35efe52aace9f1e0010c76536a7782b3c8", "Url": "https://api.github.com/repos/dylan-tao/galaxy", "Date": "2016-07-31T18:36:17Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mygdx.game.dice.Dice.rollTheDice()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((player.getCurrentField().getFieldnumber()) > 91) && (((player.getCurrentField().getFieldnumber()) - eyeNumber) < 91)) { eyeNumber = (player.getCurrentField().getFieldnumber()) - 91; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/242/buggy-version/android.src.com.mygdx.game.maincontroller.Controler.java", "BodyUseAPI": ["player.getCurrentField().getFieldnumber()", "com.mygdx.game.game.Player.getCurrentField()"], "Fixed commit": "369c156ef7e9696f01b3dd30585c415789696f69", "Url": "https://api.github.com/repos/muhi28/worms-and-elevators", "Date": "2017-06-13T22:07:30Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.isInstance(when)) { found.add(((T) (when))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7218/buggy-version/camel-core.src.main.java.org.apache.camel.model.ProcessorDefinitionHelper.java", "BodyUseAPI": [], "Fixed commit": "46efbb67144eb2eb4fa32112d9826e154cdbe52b", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-09-22T07:05:59Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCalendarInstanceAdapter) != null) { mCalendarInstanceAdapter.setCurrencyUnit(mCurrencyUnit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7264/buggy-version/src.org.williamjoy.gexpense.ExpenseActivity.java", "BodyUseAPI": [], "Fixed commit": "0229aa05f33046b02dc97856d22cd47d848b64fd", "Url": "https://api.github.com/repos/williamjoy/android-expense", "Date": "2013-02-27T13:19:31Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAutonomous)) { it.polimi.spf.wfd.util.WfdLog.d(it.polimi.spf.wfd.WifiDirectMiddleware.TAG, \"Eternal connect is active...Reconnecting...\"); scheduler = java.util.concurrent.Executors.newScheduledThreadPool(1); eternalConnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4778/buggy-version/sPFWFDMid.src.main.java.it.polimi.spf.wfd.WifiDirectMiddleware.java", "BodyUseAPI": [], "Fixed commit": "5700c799a1f0fd9fd5942e6a04715cd50c058779", "Url": "https://api.github.com/repos/deib-polimi/SPF2", "Date": "2015-10-13T08:17:43Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.actionbarsherlock.widget.ActivityChooserView.ActivityChooserViewAdapter.getHistorySize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (historysize > 0) { mAdapter.setShowDefaultActivity(false, false); }else { mAdapter.setShowDefaultActivity(true, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4963/buggy-version/library.src.com.actionbarsherlock.widget.ActivityChooserView.java", "BodyUseAPI": [], "Fixed commit": "4c178e1bb2d50f2a0c21bef00c0bd18578fcb907", "Url": "https://api.github.com/repos/snepo/ActionBarSherlock", "Date": "2012-12-18T06:43:35Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getSparseParcelableArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.HONEYCOMB)) && (viewStates == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4963/buggy-version/library.src.com.actionbarsherlock.internal.view.menu.MenuBuilder.java", "BodyUseAPI": [], "Fixed commit": "4c178e1bb2d50f2a0c21bef00c0bd18578fcb907", "Url": "https://api.github.com/repos/snepo/ActionBarSherlock", "Date": "2012-12-18T06:43:35Z"},
{"Line": "=>932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof org.h2.value.ValueSpatial) { return this; }else { try { return convertTo(org.h2.value.Value.GEOMETRY); } catch (org.h2.message.DbException e) { return convertTo(org.h2.value.Value.RASTER); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8384/buggy-version/h2.src.main.org.h2.value.Value.java", "BodyUseAPI": [], "Fixed commit": "89f6023811cb96e44e1987197665257ae0c4d2cd", "Url": "https://api.github.com/repos/nicolas-f/h2database", "Date": "2015-09-11T14:47:40Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eu.iamgio.libfx.api.JavaFX.fromId(\"confirm_btn\").getOpacity()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5876/buggy-version/src.me.jfxrs.mastermind.listeners.ConfirmListener.java", "BodyUseAPI": [], "Fixed commit": "f1b6dd436855d31a916a630eb32d6aa20e1c30f1", "Url": "https://api.github.com/repos/zSamuulele/MasterMind", "Date": "2017-02-16T15:41:04Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.component.ResourcePerspectives.as(java.lang.Class,org.sonar.api.resources.Resource)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (issuable != null) { issuable.addIssue(issuable.newIssueBuilder().ruleKey(CycleBetweenPackagesCheck.RULE_KEY).effortToFix(((double) (subDependency.getWeight()))).message(((\"Remove the dependency on the source file \\\"\" + (toFile.getLongName())) + \"\\\" to break a package cycle.\")).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/219/buggy-version/sonar-java-plugin.src.main.java.org.sonar.plugins.java.bridges.DesignBridge.java", "BodyUseAPI": ["issuable.newIssueBuilder().ruleKey(CycleBetweenPackagesCheck.RULE_KEY).effortToFix(((double) (subDependency.getWeight()))).message(((\"Remove the dependency on the source file \\\"\" + (toFile.getLongName())) + \"\\\" to break a package cycle.\")).build()", "issuable.newIssueBuilder().ruleKey(CycleBetweenPackagesCheck.RULE_KEY).effortToFix(((double) (subDependency.getWeight())))", "org.sonar.api.issue.Issuable.addIssue(issuable.newIssueBuilder().ruleKey(CycleBetweenPackagesCheck.RULE_KEY).effortToFix(((double) (subDependency.getWeight()))).message(((\"Remove the dependency on the source file \\\"\" + (toFile.getLongName())) + \"\\\" to break a package cycle.\")).build())", "issuable.newIssueBuilder().ruleKey(CycleBetweenPackagesCheck.RULE_KEY).effortToFix(((double) (subDependency.getWeight()))).message(((\"Remove the dependency on the source file \\\"\" + (toFile.getLongName())) + \"\\\" to break a package cycle.\"))", "org.sonar.api.issue.Issuable.newIssueBuilder()", "issuable.newIssueBuilder().ruleKey(CycleBetweenPackagesCheck.RULE_KEY)"], "Fixed commit": "b1e293d7f2e211ec9d856a2ee2c9398feedb3380", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2014-11-17T12:08:35Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.component.ResourcePerspectives.as(java.lang.Class,org.sonar.api.resources.Directory)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (issuable != null) { org.sonar.api.issue.Issue issue = issuable.newIssueBuilder().ruleKey(org.sonar.api.rule.RuleKey.of(CheckList.REPOSITORY_KEY, PackageInfoCheck.RULE_KEY)).message(((\"Add a 'package-info.java' file to document the '\" + (directory.getPath())) + \"' package\")).build(); issuable.addIssue(issue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/219/buggy-version/sonar-java-plugin.src.main.java.org.sonar.plugins.java.bridges.ChecksBridge.java", "BodyUseAPI": ["issuable.newIssueBuilder().ruleKey(org.sonar.api.rule.RuleKey.of(CheckList.REPOSITORY_KEY, PackageInfoCheck.RULE_KEY)).message(((\"Add a 'package-info.java' file to document the '\" + (directory.getPath())) + \"' package\")).build()", "issuable.newIssueBuilder().ruleKey(org.sonar.api.rule.RuleKey.of(CheckList.REPOSITORY_KEY, PackageInfoCheck.RULE_KEY))", "org.sonar.api.issue.Issuable.addIssue(org.sonar.api.issue.Issue)", "org.sonar.api.issue.Issuable.newIssueBuilder()", "issuable.newIssueBuilder().ruleKey(org.sonar.api.rule.RuleKey.of(CheckList.REPOSITORY_KEY, PackageInfoCheck.RULE_KEY)).message(((\"Add a 'package-info.java' file to document the '\" + (directory.getPath())) + \"' package\"))"], "Fixed commit": "b1e293d7f2e211ec9d856a2ee2c9398feedb3380", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2014-11-17T12:08:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entry.getValue().length()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7050/buggy-version/app.src.main.java.net.kyouko.cloudier.util.NicknameUtil.java", "BodyUseAPI": [], "Fixed commit": "612a2becc67d4dbe6892c075c78df358296d0393", "Url": "https://api.github.com/repos/beta/cloudier", "Date": "2016-09-27T13:19:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evt.world.provider.dimensionId) == 0) { java.lang.System.out.println(\"SERVER START\"); com.mcjty.rftools.items.dimlets.KnownDimletConfiguration.init(); com.mcjty.rftools.items.dimlets.KnownDimletConfiguration.initCrafting(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8507/buggy-version/src.main.java.com.mcjty.rftools.WorldLoadEvent.java", "BodyUseAPI": [], "Fixed commit": "20ded353c14ea7f529fbac9cea315e72915620b7", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-02-02T17:54:13Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"cache\".equalsIgnoreCase(uri.getScheme())) { return resolveFile(resolveUri(uri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4992/buggy-version/src.main.java.com.cube.storm.content.lib.resolver.CacheResolver.java", "BodyUseAPI": ["com.cube.storm.content.lib.resolver.CacheResolver.resolveUri(android.net.Uri)", "com.cube.storm.content.lib.resolver.CacheResolver.resolveFile(android.net.Uri)"], "Fixed commit": "255d3392c76d3a2564695983ac1370fc3df84614", "Url": "https://api.github.com/repos/3sidedcube/Android-LightningContent", "Date": "2014-10-08T11:42:10Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((security.AppSettings.in) != null) { security.AppSettings.in.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4284/buggy-version/src.security.AppSettings.java", "BodyUseAPI": [], "Fixed commit": "1f57e03292452688ddf635b1bb25a442e4c12689", "Url": "https://api.github.com/repos/nicholasrusso/TeamPlay", "Date": "2016-05-24T05:06:15Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.wala.classLoader.CallSiteReference.getDeclaredTarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((target.getNumberOfParameters()) == 0) { return com.ibm.wala.util.intset.IntSetUtil.make(new int[]{ 0 }); }else { return com.ibm.wala.util.intset.IntSetUtil.make(new int[]{ 0, 1 }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3335/buggy-version/com.ibm.wala.dalvik.src.com.ibm.wala.dalvik.ipa.callgraph.propagation.cfa.IntentContextSelector.java", "BodyUseAPI": [], "Fixed commit": "bf78ff12494bf546911dbdf5b017c17b709b0957", "Url": "https://api.github.com/repos/mohrm/WALA", "Date": "2014-11-21T16:24:36Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mColorPicker) != null) mColorPicker.setAlphaSliderVisible(visible);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.afzkl.development.mColorPicker.ColorPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mColorPicker) != null) mColorPicker.setOnColorChangedListener(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.afzkl.development.mColorPicker.ColorPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOldColor) != null) mOldColor.setColor(color);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.afzkl.development.mColorPicker.ColorPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNewColor) != null) mNewColor.setColor(color);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.afzkl.development.mColorPicker.ColorPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mColorPicker) != null) mColorPicker.setColor(color, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.afzkl.development.mColorPicker.ColorPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mOldColor) != null) && ((mColorPicker) != null)) ((android.widget.LinearLayout) (mOldColor.getParent())).setPadding(java.lang.Math.round(mColorPicker.getDrawingOffset()), 0, java.lang.Math.round(mColorPicker.getDrawingOffset()), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.afzkl.development.mColorPicker.ColorPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mColorPicker) != null) return mColorPicker.getColor();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.afzkl.development.mColorPicker.ColorPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.tombarrasso.android.wp7bar.HomeActivity.mConnection) != null) com.tombarrasso.android.wp7bar.HomeActivity.mConnection.nullifyService();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.com.tombarrasso.android.wp7bar.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tombarrasso.android.wp7bar.HomeActivity.findViewById(R.id.root)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((com.tombarrasso.android.wp7ui.WPTheme.isDark()) && (mRoot != null)) { mRoot.setBackgroundColor(Color.BLACK); setTextColor(mRoot, Color.WHITE); }else if (mRoot != null) { mRoot.setBackgroundColor(Color.WHITE); setTextColor(mRoot, Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.com.tombarrasso.android.wp7bar.HomeActivity.java", "BodyUseAPI": ["com.tombarrasso.android.wp7bar.HomeActivity.setTextColor(android.view.View,Color.BLACK)", "com.tombarrasso.android.wp7bar.HomeActivity.setTextColor(android.view.View,Color.WHITE)", "android.view.View.setBackgroundColor(Color.WHITE)", "android.view.View.setBackgroundColor(Color.BLACK)"], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.tombarrasso.android.wp7bar.LanguageListener.hasInitialised()) mListeners.add(((com.tombarrasso.android.wp7bar.StateListener) (com.tombarrasso.android.wp7bar.LanguageListener.getInstance(mContext))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.com.tombarrasso.android.wp7bar.BarService.java", "BodyUseAPI": [], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPrefs.isExpandDisabled()) { registerReceiver(mScreenReceiver, com.tombarrasso.android.wp7bar.BarService.mFilter); registerReceiver(mPresenceReceiver, com.tombarrasso.android.wp7bar.BarService.mLockFilter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.com.tombarrasso.android.wp7bar.BarService.java", "BodyUseAPI": [], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNM) == null) mNM = ((android.app.NotificationManager) (getSystemService(com.tombarrasso.android.wp7bar.NOTIFICATION_SERVICE)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5135/buggy-version/WP7Bar.src.com.tombarrasso.android.wp7bar.BarService.java", "BodyUseAPI": [], "Fixed commit": "07d9a9a627c856cc23b2ebb4bf24d5ffa3eb50ef", "Url": "https://api.github.com/repos/Tombarr/StatusBar-", "Date": "2011-09-17T02:55:23Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((images.size()) == 2) imageLoadIndex = 1; else imageLoadIndex = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2435/buggy-version/app.src.main.java.com.proevan.spotifystreamer.presenter.adapter.ArtistListAdapter.java", "BodyUseAPI": [], "Fixed commit": "969ed1cb68bb3b77b9740fe096803e7d15a03cba", "Url": "https://api.github.com/repos/proevan/spotify-streamer", "Date": "2015-06-13T17:09:22Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.toolkits.graph.BlockGraph.addBlock(soot.toolkits.graph.Unit,soot.toolkits.graph.Unit,int,int,java.util.List<soot.toolkits.graph.Block>,java.util.Map<soot.toolkits.graph.Unit, soot.toolkits.graph.Block>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (added == 0) --indexInMethod;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4252/buggy-version/soot-develop.src.soot.toolkits.graph.BlockGraph.java", "BodyUseAPI": [], "Fixed commit": "139184fa2a3f62d8aacd582679c195945f1c98b9", "Url": "https://api.github.com/repos/gsrishaila/summer", "Date": "2017-08-21T19:30:57Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (button == 1) { for (crazypants.enderio.gui.TextFieldEIO tf : textFields) { if (tf.contains(x, y)) { tf.setText(\"\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8130/buggy-version/src.main.java.crazypants.gui.GuiContainerBase.java", "BodyUseAPI": [], "Fixed commit": "5cbacb0e7b357f2410dbee75926ca7ca29f97ed3", "Url": "https://api.github.com/repos/SleepyTrousers/EnderIO", "Date": "2015-04-20T22:51:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((data.get(\"jobName\").equals(jobName)) && ((data.get(\"jobStatus\")) != null)) { java.lang.String status = data.get(\"jobStatus\").toString(); for (java.lang.String completedStatus : org.trpr.platform.batch.client.StandAloneBatchClient.BATCH_COMPLETION_STATUSES) { if (status.equalsIgnoreCase(completedStatus)) { org.trpr.platform.batch.client.StandAloneBatchClient.LOGGER.info((\"Going to terminate Trooper as Job execution has completed with status : \" + status)); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7489/buggy-version/batch-core.src.main.java.org.trpr.platform.batch.client.StandAloneBatchClient.java", "BodyUseAPI": ["java.lang.Object.toString()", "javax.management.openmbean.CompositeData.get(java.lang.String)"], "Fixed commit": "14f2e95ab6d31fff57a29a2903dc693cd6cfe4ff", "Url": "https://api.github.com/repos/regunathb/Trooper", "Date": "2012-10-04T12:08:04Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eAttribute.getEAttributeType().getInstanceClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (clazz == null) { if (!(newValue instanceof org.eclipse.emf.ecore.EEnumLiteral)) { throw new org.eclipse.emf.eson.building.ModelBuilderException((\"Uh uh, EAttributeType().getInstanceClass() == null, but its not an EEnumLiteral, for feature: \" + (eAttribute.toString()))); } }else { try { newValue = convertToTargetType(clazz, newValue, getFeature()); } catch (java.lang.RuntimeException e) { throw new org.eclipse.emf.eson.building.ModelBuilderException((\"convertToTargetType() failed for feature: \" + (eAttribute.toString())), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/664/buggy-version/plugins.org.eclipse.emf.eson.src.org.eclipse.emf.eson.building.AttributeBuilder.java", "BodyUseAPI": ["org.eclipse.emf.eson.building.AttributeBuilder.convertToTargetType(java.lang.Class<?>,java.lang.Object,getFeature())"], "Fixed commit": "d132d1929a80c0f78e8e694bcf519b2eb2295369", "Url": "https://api.github.com/repos/vorburger/ESON", "Date": "2015-03-19T17:22:05Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["manys[i].findIdsByParentId(java.lang.Object,java.util.List<java.lang.Object>,com.avaje.ebeaninternal.api.SpiTransaction,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(childIds.isEmpty())) { delete(targetDesc, null, childIds, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3007/buggy-version/src.main.java.com.avaje.ebeaninternal.server.persist.DefaultPersister.java", "BodyUseAPI": ["com.avaje.ebeaninternal.server.persist.DefaultPersister.delete(com.avaje.ebeaninternal.server.deploy.BeanDescriptor<?>,<nulltype>,java.util.List<java.lang.Object>,com.avaje.ebeaninternal.api.SpiTransaction)"], "Fixed commit": "1cafea20c6b849f8ded0ae108c7823e83cfe9ece", "Url": "https://api.github.com/repos/ebean-orm/avaje-ebeanorm", "Date": "2013-08-28T21:06:37Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sequencer) != null) sequencer.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9283/buggy-version/src.main.java.com.sk89q.craftbook.circuits.gates.world.miscellaneous.Melody.java", "BodyUseAPI": [], "Fixed commit": "073dfcaa15bacf4b2a8d8a8ad95d13add4b4b1ad", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2014-01-31T10:00:13Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((newHead.x) < (mwall.getXMax())) && ((newHead.y) < (mwall.getYMax()))) { (mLives)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7321/buggy-version/src.cs175.hw4.snakes.SnakeView.java", "BodyUseAPI": [], "Fixed commit": "370002816bdd4d3037324697701bacb09969d95c", "Url": "https://api.github.com/repos/swathi-k/HW4version2", "Date": "2014-11-17T21:56:41Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLocationMarker) != null) currentLocationMarker.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8453/buggy-version/app.src.main.java.tw.uglyindian.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "5bdf0f00143343f2d3020d379185845a8e9d0894", "Url": "https://api.github.com/repos/pssaravanan/uglyindians", "Date": "2014-09-28T10:35:45Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.useDelimiter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (scanner.hasNext()) { jsonStr = scanner.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3807/buggy-version/hhdp-core.src.main.java.me.haogao.hhdp.util.AvroTools.java", "BodyUseAPI": ["java.util.Scanner.next()"], "Fixed commit": "38172243ef5114efac54ca07c0e975cc333e55d5", "Url": "https://api.github.com/repos/gaohao/hhdp", "Date": "2015-07-17T02:06:04Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (database.dbTypeIs(ConnectedDB.MySQL)) { try { date = resultSet.getDate((i + 1)); } catch (java.sql.SQLException ex) { } }else { date = resultSet.getDate((i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4566/buggy-version/src.de.fuberlin.wiwiss.d2rq.sql.ResultRowMap.java", "BodyUseAPI": [], "Fixed commit": "bdb781b2bff4aae47b458fba355ae2152162b8b1", "Url": "https://api.github.com/repos/d2rq/d2rq", "Date": "2012-03-12T22:38:39Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (database.dbTypeIs(ConnectedDB.MySQL)) { try { timestamp = resultSet.getString((i + 1)); } catch (java.sql.SQLException ex) { } }else { timestamp = resultSet.getString((i + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4566/buggy-version/src.de.fuberlin.wiwiss.d2rq.sql.ResultRowMap.java", "BodyUseAPI": [], "Fixed commit": "bdb781b2bff4aae47b458fba355ae2152162b8b1", "Url": "https://api.github.com/repos/d2rq/d2rq", "Date": "2012-03-12T22:38:39Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/555/buggy-version/src.nu.nerd.nerdmessage.NerdMessage.java", "BodyUseAPI": [], "Fixed commit": "18a6eeb0986656ba42a6deef12b33ce4e0e01168", "Url": "https://api.github.com/repos/NerdNu/NerdMessage", "Date": "2012-09-10T19:17:57Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(interceptorHolder.getOutInterceptors().isEmpty())) { factory.setOutInterceptors(interceptorHolder.getOutInterceptors()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8628/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.java", "BodyUseAPI": ["org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.InterceptorHolder.getOutInterceptors()", "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.setOutInterceptors(interceptorHolder.getOutInterceptors())"], "Fixed commit": "923cdb1e9ec8655d8f1414b11f696828fd901b00", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-04-04T03:32:11Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(interceptorHolder.getInInterceptors().isEmpty())) { factory.setInInterceptors(interceptorHolder.getInInterceptors()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8628/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.java", "BodyUseAPI": ["org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.InterceptorHolder.getInInterceptors()", "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.setInInterceptors(interceptorHolder.getInInterceptors())"], "Fixed commit": "923cdb1e9ec8655d8f1414b11f696828fd901b00", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-04-04T03:32:11Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(interceptorHolder.getOutFaultInterceptors().isEmpty())) { factory.setOutFaultInterceptors(interceptorHolder.getOutFaultInterceptors()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8628/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.java", "BodyUseAPI": ["org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.InterceptorHolder.getOutFaultInterceptors()", "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.setOutFaultInterceptors(interceptorHolder.getOutFaultInterceptors())"], "Fixed commit": "923cdb1e9ec8655d8f1414b11f696828fd901b00", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-04-04T03:32:11Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(interceptorHolder.getInFaultInterceptors().isEmpty())) { factory.setInFaultInterceptors(interceptorHolder.getInFaultInterceptors()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8628/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.java", "BodyUseAPI": ["org.apache.camel.component.cxf.jaxrs.CxfRsEndpoint.InterceptorHolder.getInFaultInterceptors()", "org.apache.cxf.jaxrs.AbstractJAXRSFactoryBean.setInFaultInterceptors(interceptorHolder.getInFaultInterceptors())"], "Fixed commit": "923cdb1e9ec8655d8f1414b11f696828fd901b00", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-04-04T03:32:11Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extraSymbols < 0) { throw new java.lang.IllegalArgumentException(\"invalid number of extra symbols\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2242/buggy-version/src.main.net.fec.openrq.OpenRQ.java", "BodyUseAPI": [], "Fixed commit": "e9c6bb7abb5c477460fde5d97e5911406eccae72", "Url": "https://api.github.com/repos/openrq-team/OpenRQ", "Date": "2014-06-11T02:46:04Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == 1) { ListNode oldRoot = root; root = oldRoot.getNext(); return oldRoot.getData(); }else { ListNode beforeRemove = root; for (int i = 0; i < (index - 2); i++) { beforeRemove = beforeRemove.getNext(); } ListNode toRemove = beforeRemove.getNext(); beforeRemove.setNextNode(toRemove.getNext()); (length)--; return toRemove.getData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8998/buggy-version/HomeWork5.src.ListLinked.java", "BodyUseAPI": [], "Fixed commit": "b2de71bfd5a74a11605b83962309109844239f2b", "Url": "https://api.github.com/repos/mandress64/fall_2015_assignments", "Date": "2015-12-08T19:15:38Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getInventory().getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (loc == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5369/buggy-version/src.me.ryanhamshire.GriefPrevention.PlayerEventHandler.java", "BodyUseAPI": [], "Fixed commit": "ec2d0fc730b10cf984f4c28776ccf3d6ddef5bb5", "Url": "https://api.github.com/repos/10becja/GriefPreventionPVP", "Date": "2016-05-10T02:21:22Z"},
{"Line": "=>1026", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { debug((\"fetchChildren for \" + href)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4801/buggy-version/bw-calendar-engine-core.src.main.java.org.bedework.calcore.indexing.BwIndexEsImpl.java", "BodyUseAPI": [], "Fixed commit": "82f049ad3b58d91e1cc6df7dfb52c8f65822f379", "Url": "https://api.github.com/repos/Bedework/bw-calendar-engine", "Date": "2016-06-19T19:26:21Z"},
{"Line": "=>1043", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bedework.calcore.indexing.BwIndexEsImpl.fetchAllEntities(org.bedework.calcore.indexing.BwIndexEsImpl,org.bedework.calcore.indexing.BwIndexEsImpl.BuildEntity<org.bedework.calfacade.BwCalendar>,org.elasticsearch.index.query.TermFilterBuilder)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.bedework.util.misc.Util.isEmpty(cols)) { return cols; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4801/buggy-version/bw-calendar-engine-core.src.main.java.org.bedework.calcore.indexing.BwIndexEsImpl.java", "BodyUseAPI": [], "Fixed commit": "82f049ad3b58d91e1cc6df7dfb52c8f65822f379", "Url": "https://api.github.com/repos/Bedework/bw-calendar-engine", "Date": "2016-06-19T19:26:21Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dmdiiDocument.getDmdiiProject()) != null) { parentId = dmdiiDocument.getDmdiiProject().getId(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/958/buggy-version/src.main.java.org.dmc.services.recentupdates.RecentUpdateDao.java", "BodyUseAPI": ["dmdiiDocument.getDmdiiProject().getId()", "org.dmc.services.data.entities.DMDIIDocument.getDmdiiProject()"], "Fixed commit": "111be984600d9c41fe13e51aa5375af4374119c7", "Url": "https://api.github.com/repos/dmc-uilabs/dmcrest", "Date": "2017-09-12T13:51:51Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isVerbose())) org.codehaus.groovy.runtime.StackTraceUtils.deepSanitize(error);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7211/buggy-version/grails-bootstrap.src.main.groovy.grails.build.logging.GrailsConsole.java", "BodyUseAPI": [], "Fixed commit": "828dd7683bf9377e330a5539d2c23a70a9a24183", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2011-07-05T16:07:55Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((error instanceof org.apache.tools.ant.BuildException) && ((error.getCause()) != null)) { error = error.getCause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7211/buggy-version/grails-bootstrap.src.main.groovy.grails.build.logging.GrailsConsole.java", "BodyUseAPI": ["java.lang.Throwable.getCause()"], "Fixed commit": "828dd7683bf9377e330a5539d2c23a70a9a24183", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2011-07-05T16:07:55Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isDirectlyCacheable(clazz, toCache)) { com.stormpath.sdk.cache.Cache cache = getCache(clazz); cache.put(href, toCache); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8093/buggy-version/impl.src.main.java.com.stormpath.sdk.impl.ds.DefaultDataStore.java", "BodyUseAPI": ["com.stormpath.sdk.impl.ds.DefaultDataStore.getCache(java.lang.Class<? extends com.stormpath.sdk.resource.Resource>)", "com.stormpath.sdk.cache.Cache.put(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "c0e3382ffb4b96a756f736e04314f4ac6c4c731f", "Url": "https://api.github.com/repos/stormpath/stormpath-sdk-java", "Date": "2013-09-18T22:57:20Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (annotationString != null) { switch (annotationString) { case \"S\" : annotation = new com.gmi.nordborglab.browser.server.data.annotation.SNPAnnotation(\"S\"); break; case \"NS\" : annotation = new com.gmi.nordborglab.browser.server.data.annotation.SNPAnnotation(\"NS\"); break; default : annotation = new com.gmi.nordborglab.browser.server.data.annotation.SNPAnnotation(\"*\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8825/buggy-version/genophenbrowser-server.src.main.java.com.gmi.nordborglab.browser.server.service.impl.MetaAnalysisServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f5a7c86ce1509fea28c4eac87bd3dd4094490c3d", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2015-06-09T10:53:50Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paramType instanceof java.lang.reflect.TypeVariable<?>) { final java.lang.reflect.TypeVariable<?> typeVariable = ((java.lang.reflect.TypeVariable<?>) (paramType)); final java.lang.reflect.Type type = localMap.get(typeVariable.getName()); if (type != null) { parameterType = uk.co.jemos.podam.typeManufacturers.TypeManufacturerUtil.resolveGenericParameter(type, localMap, methodGenericTypeArgs); } }else if (paramType instanceof java.lang.reflect.ParameterizedType) { java.lang.reflect.ParameterizedType pType = ((java.lang.reflect.ParameterizedType) (paramType)); parameterType = ((java.lang.Class<?>) (pType.getRawType())); java.lang.reflect.Type[] actualTypeArgs = pType.getActualTypeArguments(); if (!(typeArgsMap.isEmpty())) { for (int i = 0; i < (actualTypeArgs.length); i++) { java.lang.Class<?> tmp = uk.co.jemos.podam.typeManufacturers.TypeManufacturerUtil.resolveGenericParameter(actualTypeArgs[i], localMap, methodGenericTypeArgs); if (tmp != (actualTypeArgs[i])) { if (org.apache.commons.lang3.ArrayUtils.isEmpty(methodGenericTypeArgs.get())) { actualTypeArgs[i] = tmp; } } } } methodGenericTypeArgs.set(actualTypeArgs); }else if (paramType instanceof java.lang.reflect.WildcardType) { java.lang.reflect.WildcardType wType = ((java.lang.reflect.WildcardType) (paramType)); java.lang.reflect.Type[] bounds = wType.getLowerBounds(); java.lang.String msg; if ((bounds != null) && ((bounds.length) > 0)) { msg = \"Lower bounds:\"; }else { bounds = wType.getUpperBounds(); msg = \"Upper bounds:\"; } if ((bounds != null) && ((bounds.length) > 0)) { uk.co.jemos.podam.typeManufacturers.TypeManufacturerUtil.LOG.debug((msg + (java.util.Arrays.toString(bounds)))); parameterType = uk.co.jemos.podam.typeManufacturers.TypeManufacturerUtil.resolveGenericParameter(bounds[0], localMap, methodGenericTypeArgs); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2759/buggy-version/src.main.java.uk.co.jemos.podam.typeManufacturers.TypeManufacturerUtil.java", "BodyUseAPI": [], "Fixed commit": "667318e17ae7da5017b2b2d54f2d826943a8c124", "Url": "https://api.github.com/repos/daivanov/joinmo", "Date": "2016-12-20T16:39:00Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(typeArgsMap.isEmpty())) { for (int i = 0; i < (actualTypeArgs.length); i++) { java.lang.Class<?> tmp = uk.co.jemos.podam.typeManufacturers.TypeManufacturerUtil.resolveGenericParameter(actualTypeArgs[i], localMap, methodGenericTypeArgs); if (tmp != (actualTypeArgs[i])) { if (org.apache.commons.lang3.ArrayUtils.isEmpty(methodGenericTypeArgs.get())) { actualTypeArgs[i] = tmp; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2759/buggy-version/src.main.java.uk.co.jemos.podam.typeManufacturers.TypeManufacturerUtil.java", "BodyUseAPI": [], "Fixed commit": "667318e17ae7da5017b2b2d54f2d826943a8c124", "Url": "https://api.github.com/repos/daivanov/joinmo", "Date": "2016-12-20T16:39:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (o == null) sb.append(\"NULL\"); else if (((o.getClass().equals(java.lang.String.class)) | (o.getClass().equals(java.sql.Timestamp.class))) | (o.getClass().equals(java.sql.Date.class))) { sb.append('\\''); sb.append(o.toString()); sb.append('\\''); }else sb.append(o.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7182/buggy-version/src.main.java.autumn.database.TableQuery.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Object.toString()", "java.lang.Class<? extends java.lang.Object>.equals(java.lang.Class)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.equals(java.lang.Class)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.Class<? extends java.lang.Object>.equals(java.lang.Class)", "java.lang.Object.getClass()", "java.lang.Object.toString()"], "Fixed commit": "e7d1426c74742961536707d90b951ba06ecf0ccc", "Url": "https://api.github.com/repos/Infinitu/Autumn", "Date": "2014-12-25T11:58:00Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((callbacksRef.get()) != null) callbacksRef.get().onError();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9041/buggy-version/BandlabInterview.app.src.main.java.com.example.interview.videopage.VideoPagePresenter.java", "BodyUseAPI": ["com.example.interview.videopage.VideoPagePresenter.Callbacks.onError()", "java.lang.ref.WeakReference<com.example.interview.videopage.VideoPagePresenter.Callbacks>.get()"], "Fixed commit": "8c4c2a6870adaac12ae502c4bc7f7adaa4608d2a", "Url": "https://api.github.com/repos/Gelassen/android-samples", "Date": "2016-10-06T08:14:28Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(processorModel.hasGeoFile())) { ioPanel.remove(1); }else if (!(processorModel.hasPrimaryOutputFile())) { ioPanel.remove(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5348/buggy-version/seadas-processing.src.main.java.gov.nasa.gsfc.seadas.processing.general.ProgramUIFactory.java", "BodyUseAPI": ["gov.nasa.gsfc.seadas.processing.core.ProcessorModel.hasPrimaryOutputFile()"], "Fixed commit": "9e1060d93fc2b525d55f4f17fedb85e4ed0602dc", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2012-06-08T22:01:01Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((title.length()) > (MAX_FILE_NAME)) { title = title.substring(0, MAX_FILE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3805/buggy-version/src.eventswipe.utils.EventSwipeLogger.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "6c1dbef12e669c3cd63a1cefbf9c032c33320a2f", "Url": "https://api.github.com/repos/MattWildman/EventSwipe", "Date": "2016-10-06T10:38:55Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smartSchool.facade.SmartSchoolFacade.validateUserLogin(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((status.getLoginValidationStatus()) != null) && (status.getLoginValidationStatus().equals(\"success\"))) { this.setLoginAuthStatus(status.getCurrentUserRoleType()); }else if (((status.getLoginValidationStatus()) != null) && (status.getLoginValidationStatus().equals(\"reset\"))) { this.setLoginAuthStatus(\"reset\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3944/buggy-version/SmartSchool.src.main.java.com.smartSchool.bean.LoginBean.java", "BodyUseAPI": ["com.smartSchool.bean.LoginBean.setLoginAuthStatus(status.getCurrentUserRoleType())", "com.smartSchoolService.pojo.LoginPojo.getLoginValidationStatus()", "status.getLoginValidationStatus().equals(java.lang.String)", "com.smartSchoolService.pojo.LoginPojo.getCurrentUserRoleType()", "com.smartSchoolService.pojo.LoginPojo.getLoginValidationStatus()"], "Fixed commit": "ad208b6747c033b41f64805de0ef193183817664", "Url": "https://api.github.com/repos/andesrikanth/SmartSchoolProject", "Date": "2017-05-27T07:03:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.isUserInRole(\"ROLE_SYNCHRONIZE_TABLES\")) { java.util.List<java.lang.String> tableIds = odkClient.getTableIds(); modelAndView.getModelMap().addAttribute(\"tableIds\", tableIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/597/buggy-version/src.main.java.org.benetech.interceptor.MenuInterceptor.java", "BodyUseAPI": [], "Fixed commit": "f55bb2d9112eaec834702cf6e7cc32a236da3f0e", "Url": "https://api.github.com/repos/benetech/odk-hamsterball-java", "Date": "2017-05-18T22:03:46Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recordingPromise) != null) mediaRecorder.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8065/buggy-version/android.src.main.java.com.lwansbrough.RCTCamera.RCTCameraModule.java", "BodyUseAPI": [], "Fixed commit": "3bcb7d4be0b8c65f93390e85238bf18107987ba9", "Url": "https://api.github.com/repos/drivetribe/react-native-camera", "Date": "2016-04-18T23:33:56Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearJobs) { clearAllJobs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5487/buggy-version/src.main.java.com.sangupta.amass.impl.CrawlingQueue.java", "BodyUseAPI": [], "Fixed commit": "b98d78842f98e95a648e0406f42c43d1a376555a", "Url": "https://api.github.com/repos/sangupta/amass", "Date": "2013-05-31T12:23:14Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.jobs) != null) { this.jobs.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5487/buggy-version/src.main.java.com.sangupta.amass.impl.CrawlingQueue.java", "BodyUseAPI": [], "Fixed commit": "b98d78842f98e95a648e0406f42c43d1a376555a", "Url": "https://api.github.com/repos/sangupta/amass", "Date": "2013-05-31T12:23:14Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dyUnconsumed > 0) && ((child.getVisibility()) == (android.view.View.VISIBLE))) { child.hide(); }else if ((dyUnconsumed < 0) && ((child.getVisibility()) == (android.view.View.GONE))) { child.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/880/buggy-version/app.src.main.java.com.android.argb.edhlc.FABScrollBehavior.java", "BodyUseAPI": ["android.support.design.widget.FloatingActionButton.hide()", "android.support.design.widget.FloatingActionButton.getVisibility()", "android.support.design.widget.FloatingActionButton.show()"], "Fixed commit": "7d56d4843accfaa682adf6b942bfbb56f5c0f7eb", "Url": "https://api.github.com/repos/andrergb/EDHLC", "Date": "2016-02-18T11:49:54Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((RunAll.configpath) == \"\") RunAll.configpath = new java.io.File(\".\").getCanonicalPath();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3767/buggy-version/src.main.java.eu.himeros.hocr.NgtMaker.java", "BodyUseAPI": [], "Fixed commit": "9e7194bc762bb7955e2ddc98d86318f2b396c3da", "Url": "https://api.github.com/repos/fbaumgardt/hocrinfoaggregator", "Date": "2013-08-07T08:27:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t0 < 0) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7853/buggy-version/src.main.java.com.mlesniak.raytracer.scene.Sphere.java", "BodyUseAPI": [], "Fixed commit": "fa5d1afa60ba9316fc124442ba33e9832c30c38c", "Url": "https://api.github.com/repos/mlesniak/raytracer", "Date": "2016-05-27T22:50:21Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getVisibility()) != (VISIBLE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3038/buggy-version/musicWave.src.main.java.com.zyhang.musicWave.MusicWaveView.java", "BodyUseAPI": [], "Fixed commit": "cfea050a44e7708ad4ec4c9141d933f05f298463", "Url": "https://api.github.com/repos/izyhang/MusicWave", "Date": "2017-07-13T13:37:20Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAnimators) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3038/buggy-version/musicWave.src.main.java.com.zyhang.musicWave.MusicWaveView.java", "BodyUseAPI": [], "Fixed commit": "cfea050a44e7708ad4ec4c9141d933f05f298463", "Url": "https://api.github.com/repos/izyhang/MusicWave", "Date": "2017-07-13T13:37:20Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sensitivities == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3719/buggy-version/AndroidCll.src.main.java.com.microsoft.cll.android.PartA.java", "BodyUseAPI": [], "Fixed commit": "507bba4dc560156c7127459e67466152c3471fad", "Url": "https://api.github.com/repos/GageAmes/Telemetry-Client-for-Android", "Date": "2015-09-22T18:17:45Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.beijunyi.parallelgit.utils.Repository.getRef(com.beijunyi.parallelgit.utils.RefUtils.ensureBranchRefName(name))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (branchRef == null) throw new com.beijunyi.parallelgit.utils.exceptions.NoSuchBranchException(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5464/buggy-version/parallelgit-utils.src.main.java.com.beijunyi.parallelgit.utils.BranchUtils.java", "BodyUseAPI": [], "Fixed commit": "9c005fdc2aa4aa404d8a403f5ae1ea4a0136cbeb", "Url": "https://api.github.com/repos/beijunyi/ParallelGit", "Date": "2015-12-21T10:55:44Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players[((counter) % 2)]) instanceof com.radianceTOPS.constrain.HumanPlayer) { android.os.Vibrator v = ((android.os.Vibrator) (context.getSystemService(Context.VIBRATOR_SERVICE))); v.vibrate(30); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/866/buggy-version/app.src.main.java.com.radianceTOPS.constrain.GameControl.java", "BodyUseAPI": [], "Fixed commit": "6366730be5d78975c47b7261b6095dc0b57e05cf", "Url": "https://api.github.com/repos/neery1218/Kamisado", "Date": "2015-08-29T20:34:28Z"},
{"Line": "=>1197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.data.VM14Splitter.split(org.nschmidt.ldparteditor.data.GData2,org.nschmidt.ldparteditor.data.Vertex,org.nschmidt.ldparteditor.data.Vertex,org.nschmidt.ldparteditor.data.Vertex)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6280/buggy-version/src.org.nschmidt.ldparteditor.data.VM14Splitter.java", "BodyUseAPI": [], "Fixed commit": "6e006c1a90efbcf806b640f0b76066ba07feace8", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-08T14:23:34Z"},
{"Line": "=>1227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.data.VM14Splitter.split(org.nschmidt.ldparteditor.data.GData5,org.nschmidt.ldparteditor.data.Vertex,org.nschmidt.ldparteditor.data.Vertex,org.nschmidt.ldparteditor.data.Vertex)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6280/buggy-version/src.org.nschmidt.ldparteditor.data.VM14Splitter.java", "BodyUseAPI": [], "Fixed commit": "6e006c1a90efbcf806b640f0b76066ba07feace8", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-08T14:23:34Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((target.get(field).size()) != 0) { for (int index = 0; index < (target.get(field).size()); index++) { processor.valueAdded(pointer.append(field).append(index), target.get(field).get(index)); } }else { processor.valueAdded(pointer.append(field), target.get(field)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3990/buggy-version/src.main.java.com.github.fge.jsonpatch.diff.JsonDiff.java", "BodyUseAPI": ["target.get(field).size()", "com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)", "com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)", "com.github.fge.jackson.jsonpointer.JsonPointer.append(java.lang.String)", "target.get(field).get(int)", "com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)", "com.github.fge.jackson.jsonpointer.JsonPointer.append(java.lang.String)", "com.github.fge.jsonpatch.diff.DiffProcessor.valueAdded(pointer.append(field),target.get(field))", "com.github.fge.jsonpatch.diff.DiffProcessor.valueAdded(pointer.append(field).append(index),target.get(field).get(index))", "pointer.append(field).append(int)"], "Fixed commit": "f0b88f513ce256467085162d4cdf6b9675e9b6f2", "Url": "https://api.github.com/repos/fritesh/json-patch", "Date": "2017-12-29T15:00:28Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operation.path) != null) { ret = operation.apply(ret); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3990/buggy-version/src.main.java.com.github.fge.jsonpatch.JsonPatch.java", "BodyUseAPI": ["com.github.fge.jsonpatch.JsonPatchOperation.apply(com.fasterxml.jackson.databind.JsonNode)"], "Fixed commit": "f0b88f513ce256467085162d4cdf6b9675e9b6f2", "Url": "https://api.github.com/repos/fritesh/json-patch", "Date": "2017-12-29T15:00:28Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.fge.jsonpatch.JsonPatch.pathFixer(com.github.fge.jackson.jsonpointer.JsonPointer,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newPath == null) { operation.path = null; }else { operation.path = newPath; operation.value_locator = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3990/buggy-version/src.main.java.com.github.fge.jsonpatch.JsonPatch.java", "BodyUseAPI": [], "Fixed commit": "f0b88f513ce256467085162d4cdf6b9675e9b6f2", "Url": "https://api.github.com/repos/fritesh/json-patch", "Date": "2017-12-29T15:00:28Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((business.getName()) != null) && ((business.getCategory()) != null)) { _allBusinesses.put(business.getObjectId(), business); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6112/buggy-version/BookMeUpForCustomer.src.com.gling.bookmeup.customer.CustomerAllBusinessesFragment.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, com.gling.bookmeup.sharedlib.parse.Business>.put(business.getObjectId(),com.gling.bookmeup.sharedlib.parse.Business)", "com.gling.bookmeup.sharedlib.parse.Business.getObjectId()"], "Fixed commit": "420dfb3aa42de01f744ca8aacb4ce6bbdab3e5cb", "Url": "https://api.github.com/repos/galfalkon/BookMeUp", "Date": "2014-10-28T06:43:58Z"},
{"Line": "=>1139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myDataChoices) != null) { if (((myDataChoices.size()) > 0) && ((myDataChoices.get(0)) instanceof ucar.unidata.data.DerivedDataChoice)) { java.util.List cdcs = ((ucar.unidata.data.DerivedDataChoice) (myDataChoices.get(0))).getChoices(); if ((cdcs.size()) > 0) { ucar.unidata.data.DataChoice dc = ((ucar.unidata.data.DataChoice) (cdcs.get(0))); ucar.unidata.data.DataSelection ds = dc.getDataSelection(); if (ds != null) { java.util.List dtimes = ds.getTimeDriverTimes(); java.lang.Object ud1 = ds.getProperty(DataSelection.PROP_USESTIMEDRIVER); if (ud1 != null) { this.usesTimeDriver = ((java.lang.Boolean) (ud1)).booleanValue(); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6034/buggy-version/src.ucar.unidata.idv.control.DisplayControlImpl.java", "BodyUseAPI": [], "Fixed commit": "32e8dfcd494242b4ae2ae00824273d6ace0fe251", "Url": "https://api.github.com/repos/jon4than/IDV", "Date": "2012-10-18T21:23:45Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pt == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2982/buggy-version/src.main.java.bigwarp.landmarks.LandmarkTableModel.java", "BodyUseAPI": [], "Fixed commit": "d93c4dd406442a6e73a31409b1c4996a79ceef27", "Url": "https://api.github.com/repos/saalfeldlab/bigwarp", "Date": "2015-11-19T20:23:46Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.module.getConfiguration().defaultRoles.get(mirrorConfig.mainWorld)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (defaultRoles == null) { defaultRoles = new java.util.HashSet<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5140/buggy-version/roles.src.main.java.de.cubeisland.cubeengine.roles.role.WorldRoleProvider.java", "BodyUseAPI": [], "Fixed commit": "22ac8611ca48653828a7341d45bec311f23792c9", "Url": "https://api.github.com/repos/CubeEngineDev/CubeEngine", "Date": "2013-04-28T23:26:59Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((realizations.size()) > 0) { if (olapContext.isWeekMatch.containsKey(realizations.get(0))) { com.kylinolap.cube.CubeInstance cube = ((com.kylinolap.cube.CubeInstance) (realizations.get(0))); com.kylinolap.query.routing.RoutingRules.AdjustForWeeklyMatchCubeRule.adjustOLAPContext(cube, olapContext); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2001/buggy-version/query.src.main.java.com.kylinolap.query.routing.RoutingRules.AdjustForWeeklyMatchCubeRule.java", "BodyUseAPI": ["olapContext.isWeekMatch.containsKey(realizations.get(0))", "java.util.List<com.kylinolap.metadata.realization.IRealization>.get(int)", "java.util.List<com.kylinolap.metadata.realization.IRealization>.get(int)"], "Fixed commit": "bae6fdd6aea9ca9f2cc4d24e195f46498ed316d9", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-01-05T08:48:15Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getDrawingCache()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (orig != null) { config = orig.getConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4134/buggy-version/robotium-solo.src.main.java.com.jayway.android.robotium.solo.ScreenshotTaker.java", "BodyUseAPI": ["android.graphics.Bitmap.getConfig()"], "Fixed commit": "cb4d78d929e9b35f419acecacda6b9e63850e2fc", "Url": "https://api.github.com/repos/pandapeng/robotium", "Date": "2013-08-19T16:40:12Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.ebean.Ebean.find(java.lang.Class,user.email)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (oldUser != null) { io.ebean.Ebean.delete(oldUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6181/buggy-version/app.controllers.RegistrationController.java", "BodyUseAPI": ["io.ebean.Ebean.delete(models.data.User)"], "Fixed commit": "3f343dc39c3d07c08eb4d0dac5aafb6594b85ef7", "Url": "https://api.github.com/repos/Simmilliar/Play-framework", "Date": "2017-07-14T06:47:17Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (firstBreak >= 0) suffix = suffix.substring(0, firstBreak);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6642/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.findreplace.FindReplace.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "f82388c598d6defd0bde3cc401f4b02aa4c93e1a", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2011-06-08T23:09:56Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firstBreak < 0) firstBreak = suffix.indexOf(\"\\n\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6642/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.findreplace.FindReplace.java", "BodyUseAPI": [], "Fixed commit": "f82388c598d6defd0bde3cc401f4b02aa4c93e1a", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2011-06-08T23:09:56Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lastLF > 0) prefix = prefix.substring((lastLF + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6642/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.findreplace.FindReplace.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "f82388c598d6defd0bde3cc401f4b02aa4c93e1a", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2011-06-08T23:09:56Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.PushbackReader.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nextCh >= 0) && (nextCh != '\\n')) { this.in.unread(nextCh); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7301/buggy-version/src.main.j.io.LineColReader.java", "BodyUseAPI": ["java.io.PushbackReader.unread(int)"], "Fixed commit": "3ef69a307c4617f6f821ec12ede97f445e7abd7d", "Url": "https://api.github.com/repos/lucastan/libjava", "Date": "2013-03-25T14:08:33Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.PushbackReader.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ch != '\\r') { if (ch >= 0) this.in.unread(ch); return ch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7301/buggy-version/src.main.j.io.LineColReader.java", "BodyUseAPI": ["java.io.PushbackReader.unread(int)"], "Fixed commit": "3ef69a307c4617f6f821ec12ede97f445e7abd7d", "Url": "https://api.github.com/repos/lucastan/libjava", "Date": "2013-03-25T14:08:33Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myState) == (uk.co.itmoore.intellisubsteps.psi.feature.FeatureLexer.FeatureLexerState.STATE_AFTER_FEATURE_NAME)) { }else if ((myState) == (uk.co.itmoore.intellisubsteps.psi.feature.FeatureLexer.FeatureLexerState.STATE_IN_TABLE_HEADER_ROW)) { myState = uk.co.itmoore.intellisubsteps.psi.feature.FeatureLexer.FeatureLexerState.STATE_IN_TABLE_VALUE_ROWS; }else { int nextLineEnd = bufString.indexOf('\\n', ((myPosition) + 1)); if (nextLineEnd != (-1)) { java.lang.String nextLine = bufString.substring(((myPosition) + 1), nextLineEnd); if (nextLine.trim().isEmpty()) { uk.co.itmoore.intellisubsteps.psi.feature.FeatureLexer.log.trace(\"next line is empty, resetting state\"); myState = uk.co.itmoore.intellisubsteps.psi.feature.FeatureLexer.FeatureLexerState.STATE_DEFAULT; }else { uk.co.itmoore.intellisubsteps.psi.feature.FeatureLexer.log.trace(\"next line not empty, not resetting state\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1515/buggy-version/src.uk.co.itmoore.intellisubsteps.psi.feature.FeatureLexer.java", "BodyUseAPI": [], "Fixed commit": "22385d513b0bb7cc8ab62b6b4d162ed275b00914", "Url": "https://api.github.com/repos/iantmoore/substeps-intellij-plugin", "Date": "2015-07-20T22:14:19Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(org.lwjgl.opengl.Display.isCreated())) || (!(org.lwjgl.input.Mouse.isCreated()))) || (!(org.lwjgl.input.Keyboard.isCreated()))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3500/buggy-version/src.com.vloxlands.game.UpdateThread.java", "BodyUseAPI": [], "Fixed commit": "26046450eb4277cc6bab1d329d101eb9bf8478aa", "Url": "https://api.github.com/repos/Ichmed/Vloxlands", "Date": "2013-09-05T11:02:41Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Net.getIP()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ip != null) Main.display.serverPrompt(ip);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8145/buggy-version/src.Main.java", "BodyUseAPI": ["View.serverPrompt(java.lang.String)"], "Fixed commit": "e06944db13d479029400e07c01f112acd2a326b1", "Url": "https://api.github.com/repos/thechessguy/stupidChess", "Date": "2017-01-20T19:23:41Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((robot) != null) { robot.move(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7975/buggy-version/src.main.java.my.project.robocontrol.MoveCommand.java", "BodyUseAPI": [], "Fixed commit": "b169005c112a1c529cf1a5acb2f4da24e04fbb7e", "Url": "https://api.github.com/repos/SharvariNagesh/RobotProject", "Date": "2015-09-07T09:14:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eurekaclinical.i2b2.dao.JpaUserTemplateDao.getListByAttribute(UserTemplateEntity_.autoAuthorize,java.lang.Boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.isEmpty()) { return null; }else { return result.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1268/buggy-version/i2b2-eureka-service.src.main.java.org.eurekaclinical.i2b2.dao.JpaUserTemplateDao.java", "BodyUseAPI": ["java.util.List<org.eurekaclinical.i2b2.entity.UserTemplateEntity>.get(int)"], "Fixed commit": "8cf90d5c202a28e856b885bb41305d4c96c871b2", "Url": "https://api.github.com/repos/eurekaclinical/i2b2-eureka", "Date": "2016-08-05T22:54:05Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDeleteCurrent()) { il.co.topq.difido.PersistenceUtils.copyResources(currentLogFolder); }else { final java.io.File testDetailsHtmlFile = new java.io.File(currentLogFolder, il.co.topq.difido.PersistenceUtils.TEST_DETAILS_HTML_FILE); final java.io.File indexFile = new java.io.File(currentLogFolder, \"index.html\"); if ((!(testDetailsHtmlFile.exists())) && (!(indexFile.exists()))) { il.co.topq.difido.PersistenceUtils.copyResources(currentLogFolder); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3524/buggy-version/jsystem-core-projects.jsystemCore.src.main.java.jsystem.extensions.report.difido.HtmlReporter.java", "BodyUseAPI": [], "Fixed commit": "e8687ab21ac0e6bb362c7b0077a4dd53ffcdff21", "Url": "https://api.github.com/repos/Top-Q/jsystem", "Date": "2014-10-20T20:11:50Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.startsWith(\"PL:\")) smooth = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2021/buggy-version/src.java.edu.stanford.muse.ner.featuregen.FeatureDictionary.java", "BodyUseAPI": [], "Fixed commit": "1fd43f44bc037916f98736ac4e1265abd8e7c24d", "Url": "https://api.github.com/repos/ePADD/muse", "Date": "2015-09-25T11:00:39Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDragView.getMeasuredHeight()) != (mDragView.getHeight())) { mDragView.requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8440/buggy-version/weasel.src.main.java.com.minoon.weasel.layout.CollapsingHeaderLayout.java", "BodyUseAPI": ["android.view.View.requestLayout()"], "Fixed commit": "7f0f54aaa2818962234359c52edb0d77c597870c", "Url": "https://api.github.com/repos/m1noon/Weasel", "Date": "2015-09-04T06:34:13Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chkMon2.isSelected()) { board.displayChangePay(tradeTo, tradeFrom, java.lang.Integer.parseInt(txtMon2.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8523/buggy-version/src.monopolyalpha.TradeForm.java", "BodyUseAPI": [], "Fixed commit": "89bd0d6775b2ceaf8b8f75669c874446e2fba4d4", "Url": "https://api.github.com/repos/harsh2204/MonopolyJava", "Date": "2017-01-06T04:09:32Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4086/buggy-version/com.ibm.wala.core.src.com.ibm.wala.ipa.callgraph.propagation.ReturnValueKey.java", "BodyUseAPI": [], "Fixed commit": "112cf80658c09cb5e725689cc2cce8653ce109b9", "Url": "https://api.github.com/repos/GrammaTech/WALA", "Date": "2017-04-24T12:19:52Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/522/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "52046215c59b9e70f4627b809a20d6ed531f9603", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsOverlay.getSeries()) != null) { return jsOverlay.getSeries().length(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/522/buggy-version/addon.src.main.java.com.vaadin.addon.charts.client.ui.HighchartWidget.java", "BodyUseAPI": ["jsOverlay.getSeries().length()", "com.vaadin.addon.charts.client.ui.HighchartJsOverlay.getSeries()"], "Fixed commit": "52046215c59b9e70f4627b809a20d6ed531f9603", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.googlecode.mgwt.ui.client.util.MGWTUtil.isIEEdge()) { element.getStyle().setBackgroundImage(((\"url(\" + (imageResource.getSafeUri().asString())) + \")\")); }else { element.getStyle().setProperty(\"WebkitMaskBoxImage\", ((\"url(\" + (imageResource.getSafeUri().asString())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9053/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.tabbar.TabBarButtonBase.java", "BodyUseAPI": [], "Fixed commit": "6f91123d51dda4692b82f9bec135bcd11548b97b", "Url": "https://api.github.com/repos/Brainfuse/mgwt", "Date": "2016-07-18T22:51:50Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attrs.get(\"transform\")) != null) { com.moxun.s2v.utils.Logger.debug((\"Transform attrs merged:\" + (src.getAttribute(\"transform\").getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3709/buggy-version/src.com.moxun.s2v.utils.AttrMergeUtil.java", "BodyUseAPI": [], "Fixed commit": "b7ca62c15ed00a8c4cd6c9f56b64b06effee4cba", "Url": "https://api.github.com/repos/misakuo/svgtoandroid", "Date": "2016-05-10T09:42:52Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.applikeysolutions.cosmocalendar.model.Day>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (selectionManager.isDaySelected(day)) { selectedDays.add(day); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7623/buggy-version/cosmocalendar.src.main.java.com.applikeysolutions.cosmocalendar.view.CalendarView.java", "BodyUseAPI": ["java.util.List<com.applikeysolutions.cosmocalendar.model.Day>.add(com.applikeysolutions.cosmocalendar.model.Day)"], "Fixed commit": "8ccc5c96910da8b3196211c42c8cdb4752064397", "Url": "https://api.github.com/repos/ApplikeySolutions/CosmoCalendar", "Date": "2017-10-23T13:06:36Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (world.isRemote) { org.halvors.electrometrics.common.tile.TileEntity tileEntity = org.halvors.electrometrics.common.tile.TileEntity.getTileEntity(world, x, y, z); if (tileEntity instanceof org.halvors.electrometrics.common.base.tile.ITileOwnable) { org.halvors.electrometrics.common.base.tile.ITileOwnable tileOwnable = ((org.halvors.electrometrics.common.base.tile.ITileOwnable) (tileEntity)); return tileOwnable.isOwner(org.halvors.electrometrics.common.util.PlayerUtils.getClientPlayer()) ? blockHardness : -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8279/buggy-version/src.main.java.org.halvors.electrometrics.common.block.BlockMachine.java", "BodyUseAPI": ["org.halvors.electrometrics.common.tile.TileEntity.getTileEntity(net.minecraft.world.World,int,int,int)"], "Fixed commit": "da805758d84e79ca2e6c1d49d1847d18ecc1b32e", "Url": "https://api.github.com/repos/halvors/Electrometrics", "Date": "2015-10-10T21:56:23Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (world.isRemote) { org.halvors.electrometrics.common.tile.TileEntity tileEntity = org.halvors.electrometrics.common.tile.TileEntity.getTileEntity(world, x, y, z); if (tileEntity instanceof org.halvors.electrometrics.common.base.tile.ITileOwnable) { org.halvors.electrometrics.common.base.tile.ITileOwnable tileOwnable = ((org.halvors.electrometrics.common.base.tile.ITileOwnable) (tileEntity)); return tileOwnable.isOwner(org.halvors.electrometrics.common.util.PlayerUtils.getClientPlayer()) ? blockResistance : -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8279/buggy-version/src.main.java.org.halvors.electrometrics.common.block.BlockMachine.java", "BodyUseAPI": ["org.halvors.electrometrics.common.tile.TileEntity.getTileEntity(net.minecraft.world.World,int,int,int)"], "Fixed commit": "da805758d84e79ca2e6c1d49d1847d18ecc1b32e", "Url": "https://api.github.com/repos/halvors/Electrometrics", "Date": "2015-10-10T21:56:23Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(banRecord.getValue(BANS.HOSTMASK).isEmpty())) com.techcavern.wavetact.utils.IRCUtils.setMode(com.techcavern.wavetact.utils.IRCUtils.getChannelbyName(networkObject, banRecord.getValue(BANS.CHANNEL)), networkObject, (\"-\" + (banRecord.getValue(BANS.PROPERTY))), banRecord.getValue(BANS.HOSTMASK));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7904/buggy-version/src.main.java.com.techcavern.wavetact.utils.LoadUtils.java", "BodyUseAPI": ["com.techcavern.wavetact.utils.IRCUtils.getChannelbyName(org.pircbotx.PircBotX,banRecord.getValue(BANS.CHANNEL))", "org.jooq.Record.getValue(BANS.PROPERTY)", "org.jooq.Record.getValue(BANS.CHANNEL)", "com.techcavern.wavetact.utils.IRCUtils.setMode(com.techcavern.wavetact.utils.IRCUtils.getChannelbyName(networkObject, banRecord.getValue(BANS.CHANNEL)),org.pircbotx.PircBotX,(\"-\" + (banRecord.getValue(BANS.PROPERTY))),banRecord.getValue(BANS.HOSTMASK))", "org.jooq.Record.getValue(BANS.HOSTMASK)"], "Fixed commit": "2c24da315510340800e179c2e74b907432aade24", "Url": "https://api.github.com/repos/TechCavern/WaveTact", "Date": "2015-07-16T15:18:57Z"},
{"Line": "=>1146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.value) == null) result.value = setting.value;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8566/buggy-version/src.biz.bokhorst.xprivacy.PrivacyService.java", "BodyUseAPI": [], "Fixed commit": "3c078e075e8d162b050f7d73d03aa0f809ffba5b", "Url": "https://api.github.com/repos/M66B/XPrivacy", "Date": "2014-07-02T06:21:10Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sampleColumn.getUnits()) != null) { addTextColumn(sampleColumn); }else if ((sampleColumn.getTerm()) != null) { addEfoSuggestColumn(sampleColumn); }else { addTextColumn(sampleColumn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8443/buggy-version/app.web.src.main.java.uk.ac.ebi.fg.annotare2.web.gwt.editor.client.view.experiment.design.SamplesViewImpl.java", "BodyUseAPI": ["uk.ac.ebi.fg.annotare2.web.gwt.editor.client.view.experiment.design.SamplesViewImpl.addEfoSuggestColumn(uk.ac.ebi.fg.annotare2.web.gwt.common.shared.exepriment.columns.SampleColumn)", "uk.ac.ebi.fg.annotare2.web.gwt.editor.client.view.experiment.design.SamplesViewImpl.addTextColumn(uk.ac.ebi.fg.annotare2.web.gwt.common.shared.exepriment.columns.SampleColumn)", "uk.ac.ebi.fg.annotare2.web.gwt.editor.client.view.experiment.design.SamplesViewImpl.addTextColumn(uk.ac.ebi.fg.annotare2.web.gwt.common.shared.exepriment.columns.SampleColumn)", "uk.ac.ebi.fg.annotare2.web.gwt.common.shared.exepriment.columns.SampleColumn.getTerm()"], "Fixed commit": "d6693268c8d1a4d8810f6e3653ea36710964cf00", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2013-12-06T15:54:41Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message instanceof org.concord.sensor.server.SensorStateManager.TerminateEvent) { dispatcher.stop(); dispatcher = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6730/buggy-version/src.main.java.org.concord.sensor.server.SensorStateManager.java", "BodyUseAPI": [], "Fixed commit": "773f32b9f4ebf47de92bdf6260750f7d8734cb4b", "Url": "https://api.github.com/repos/concord-consortium/sensor-connector", "Date": "2014-04-14T16:51:36Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastPosition) >= (net.miz_hi.smileessence.system.PageController.getInstance().getAdapter().getCount())) { net.miz_hi.smileessence.view.fragment.NamedFragment from = net.miz_hi.smileessence.system.PageController.getInstance().getAdapter().getList().get(lastPosition); from.onDeselect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3221/buggy-version/src.net.miz_hi.smileessence.listener.PageChangeListener.java", "BodyUseAPI": [], "Fixed commit": "bb852d98e342cc08f76afa9cc793a727ca7cfbb8", "Url": "https://api.github.com/repos/laco0416/SmileEssence-Lite", "Date": "2013-11-24T10:19:33Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((method.getReturnType()) == (void.class)) { method.invoke(object); return new com.github.silk8192.reflector.Reflector(object); }else { return new com.github.silk8192.reflector.Reflector(method.invoke(object, args)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6961/buggy-version/src.main.java.com.github.silk8192.reflector.Reflector.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])", "java.lang.reflect.Method.invoke(java.lang.Object)"], "Fixed commit": "6f362afb517c837c69925857a5c707177c500682", "Url": "https://api.github.com/repos/salahsheikh/concise-reflector", "Date": "2017-01-04T21:05:02Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.toFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (file.exists()) { if (!(file.canWrite())) { throw new java.io.IOException((path + \": Permission denied\")); } }else { java.io.File parentFile = file.getParentFile(); if (!(parentFile.exists())) { throw new java.io.IOException((parentFile + \": Not found\")); }else if (!(parentFile.canWrite())) { throw new java.io.IOException((parentFile + \": Permission denied\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/581/buggy-version/opencga-storage.opencga-storage-core.src.main.java.org.opencb.opencga.storage.core.variant.io.VariantWriterFactory.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.canWrite()"], "Fixed commit": "7042be30b2727591d78744e412bdcf83fea32b8d", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2017-08-09T09:43:03Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bitmap == null) { android.graphics.BitmapFactory.Options options = new android.graphics.BitmapFactory.Options(); options.inSampleSize = de.eisfeldj.augendiagnose.util.ImageUtil.getBitmapFactor(path, maxSize); bitmap = android.graphics.BitmapFactory.decodeFile(path, options); if (bitmap == null) { try { java.lang.Thread.sleep(de.eisfeldj.augendiagnose.util.ImageUtil.BITMAP_RETRY); } catch (java.lang.InterruptedException e) { } bitmap = android.graphics.BitmapFactory.decodeFile(path, options); if (bitmap == null) { android.util.Log.w(Application.TAG, ((\"Cannot create bitmap from path \" + path) + \" - return dummy bitmap\")); return de.eisfeldj.augendiagnose.util.ImageUtil.getDummyBitmap(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7140/buggy-version/Augendiagnose.src.de.eisfeldj.augendiagnose.util.ImageUtil.java", "BodyUseAPI": [], "Fixed commit": "c8199f1926ba5de0fb0a5d0ec264ffb275079a32", "Url": "https://api.github.com/repos/jeisfeld/Android", "Date": "2014-09-25T19:59:08Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((bitmap.getWidth()) == 0) || ((bitmap.getHeight()) == 0)) { return bitmap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7140/buggy-version/Augendiagnose.src.de.eisfeldj.augendiagnose.util.ImageUtil.java", "BodyUseAPI": [], "Fixed commit": "c8199f1926ba5de0fb0a5d0ec264ffb275079a32", "Url": "https://api.github.com/repos/jeisfeld/Android", "Date": "2014-09-25T19:59:08Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endpoint.isPersistableBackendConnection()) { msgContext.setProperty(TCPConstants.CONNECTION_TERMINATE, true); org.apache.axiom.om.OMElement documentElement = org.apache.axis2.transport.tcp.TCPTransportSender.createDocumentElement(new org.apache.axiom.attachments.ByteArrayDataSource(\"\".getBytes()), msgContext); org.apache.axiom.soap.SOAPEnvelope handshakeEnvelope = org.apache.axis2.transport.TransportUtils.createSOAPEnvelope(documentElement); msgContext.setEnvelope(handshakeEnvelope); org.apache.axis2.engine.AxisEngine.receive(msgContext); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6038/buggy-version/modules.tcp.src.org.apache.axis2.transport.tcp.TCPWorker.java", "BodyUseAPI": [], "Fixed commit": "c63c54dbe85227b4ef11c4c3bbb733b3376e633d", "Url": "https://api.github.com/repos/laki88/wso2-axis2-transports", "Date": "2017-02-14T16:45:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dotIdx >= 0) { return path.substring(0, dotIdx); }else { return path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9038/buggy-version/asta4d-web.src.main.java.com.astamuse.asta4d.web.sitecategory.i18n.ContextTraceAwaredMessagePatternRetriever.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "d5cd6accece23e1764aae395039a95a2ec3c4ccf", "Url": "https://api.github.com/repos/astamuse/asta4d", "Date": "2014-10-21T05:37:49Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PaintroidApplication.perspective.getCanvasPointFromSurfacePoint(android.graphics.PointF)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (PaintroidApplication.drawingSurface.isPointOnCanvas(newMovePoint)) { PaintroidApplication.perspective.translate(((autoScrollDirection.x) * (step)), ((autoScrollDirection.y) * (step))); PaintroidApplication.currentTool.handleMove(newMovePoint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6974/buggy-version/Paintroid.src.main.java.org.catrobat.paintroid.listener.DrawingSurfaceListener.java", "BodyUseAPI": ["PaintroidApplication.currentTool.handleMove(android.graphics.PointF)"], "Fixed commit": "e29da246e3d07f9caef56247d9e691bc6e592fea", "Url": "https://api.github.com/repos/Catrobat/Paintroid", "Date": "2016-07-21T08:12:38Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexFile.exists()) { try (java.io.InputStream in = new java.io.FileInputStream(indexFile)) { version = in.read(); } return version; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7236/buggy-version/api.src.main.java.io.druid.segment.SegmentUtils.java", "BodyUseAPI": [], "Fixed commit": "b70ec8591dbb746fc467f891d05ee3adce8a6219", "Url": "https://api.github.com/repos/himanshug/druid", "Date": "2017-03-23T15:04:01Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((potentialConnector = calico.controllers.CStrokeController.getPotentialConnector(e.getPoint(), 20)) > 0L) { edu.umd.cs.piccolo.PLayer layer = CCanvasController.canvasdb.get(calico.controllers.CCanvasController.getCurrentUUID()).getLayer(); menuTimer = new calico.inputhandlers.CalicoAbstractInputHandler.MenuTimer(this, uuid, ((CalicoOptions.core.hold_time) / 2), CalicoOptions.core.max_hold_distance, CalicoOptions.core.hold_time, e.getPoint(), potentialConnector, layer); calico.utils.Ticker.scheduleIn(CalicoOptions.core.hold_time, menuTimer); }else if ((calico.controllers.CStrokeController.getPotentialScrap(e.getPoint())) > 0L) { edu.umd.cs.piccolo.PLayer layer = CCanvasController.canvasdb.get(calico.controllers.CCanvasController.getCurrentUUID()).getLayer(); menuTimer = new calico.inputhandlers.CalicoAbstractInputHandler.MenuTimer(this, uuid, ((CalicoOptions.core.hold_time) / 2), CalicoOptions.core.max_hold_distance, CalicoOptions.core.hold_time, e.getPoint(), e.group, layer); calico.utils.Ticker.scheduleIn(CalicoOptions.core.hold_time, menuTimer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8402/buggy-version/trunk.calico3client-bugfixes.src.calico.inputhandlers.canvas.CCanvasStrokeModeInputHandler.java", "BodyUseAPI": ["calico.controllers.CStrokeController.getPotentialScrap(e.getPoint())", "calico.inputhandlers.InputEventInfo.getPoint()", "calico.inputhandlers.InputEventInfo.getPoint()", "calico.inputhandlers.InputEventInfo.getPoint()"], "Fixed commit": "05a542f324e389a1c8540de657c460b1ae5d6562", "Url": "https://api.github.com/repos/nfmangano/CalicoClient", "Date": "2013-01-19T04:23:12Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["calico.controllers.CGroupController.get_smallest_containing_group_for_point(calico.controllers.CCanvasController.getCurrentUUID(),java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((calico.controllers.CStrokeController.exists(potentialScrap)) && (calico.controllers.CGroupController.group_contains_stroke(g, potentialScrap))) g = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8402/buggy-version/trunk.calico3client-bugfixes.src.calico.inputhandlers.CalicoAbstractInputHandler.java", "BodyUseAPI": [], "Fixed commit": "05a542f324e389a1c8540de657c460b1ae5d6562", "Url": "https://api.github.com/repos/nfmangano/CalicoClient", "Date": "2013-01-19T04:23:12Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calico.controllers.CGroupController.exists(g)) { }else if (calico.controllers.CConnectorController.exists(group)) { calico.controllers.CConnectorController.show_stroke_bubblemenu(group, false); }else if (calico.controllers.CStrokeController.exists(group)) { calico.controllers.CStrokeController.show_stroke_bubblemenu(group, false); }else if ((potentialScrap > 0L) || (potentialScrap > 0L)) { calico.components.CStroke stroke = CStrokeController.strokes.get(potentialScrap); long previewScrap = stroke.createTemporaryScrapPreview(deleteStroke); calico.controllers.CGroupController.show_group_bubblemenu(previewScrap, PieMenuButton.SHOWON_SCRAP_CREATE, true); }else if ((group != 0L) && (!(calico.controllers.CGroupController.group_contains_stroke(group, potentialScrap)))) { calico.controllers.CGroupController.show_group_bubblemenu(group); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8402/buggy-version/trunk.calico3client-bugfixes.src.calico.inputhandlers.CalicoAbstractInputHandler.java", "BodyUseAPI": [], "Fixed commit": "05a542f324e389a1c8540de657c460b1ae5d6562", "Url": "https://api.github.com/repos/nfmangano/CalicoClient", "Date": "2013-01-19T04:23:12Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((users) == null) || ((users.length) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5938/buggy-version/src.lesson9.UserRepository.java", "BodyUseAPI": [], "Fixed commit": "1dc7892769614165645b58f328a94f47bbd89573", "Url": "https://api.github.com/repos/iomel/test", "Date": "2017-10-07T08:04:54Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabledRulesOnly) { ruleList = husacct.define.domain.SoftwareArchitecture.getInstance().getAppliedRules(); }else { ruleList = husacct.define.domain.SoftwareArchitecture.getInstance().getEnabledAppliedRules(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4300/buggy-version/src.husacct.define.domain.services.AppliedRuleDomainService.java", "BodyUseAPI": [], "Fixed commit": "5cfb590dc8bc0bc84e3f11060a2065f669c2a475", "Url": "https://api.github.com/repos/pkmelee337/HUSACCT", "Date": "2012-05-18T16:10:07Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(specificParameters2.hasNullAttributes())) { logger.fine((((((\"Parameters : Brew=\" + (specificParameters2.getBrew())) + \" Step=\") + (specificParameters2.getStep())) + \" Actioner=\") + (specificParameters2.getActioner()))); return true; }else { throw new net.brewspberry.batches.exceptions.NotTheGoodNumberOfArgumentsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8486/buggy-version/brewspberry-jbatches.src.main.java.net.brewspberry.batches.tasks.RecordTemperatureFromFileTask.java", "BodyUseAPI": ["net.brewspberry.batches.beans.TaskParams.getStep()", "net.brewspberry.batches.beans.TaskParams.getBrew()", "net.brewspberry.batches.beans.TaskParams.getActioner()", "java.util.logging.Logger.fine((((((\"Parameters : Brew=\" + (specificParameters2.getBrew())) + \" Step=\") + (specificParameters2.getStep())) + \" Actioner=\") + (specificParameters2.getActioner())))"], "Fixed commit": "6d7cb43a4b2db161b549933dea9d18da6735b199", "Url": "https://api.github.com/repos/biologeek/brewspberry-rpm-parent", "Date": "2016-11-20T22:14:07Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cell == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5980/buggy-version/dbpa.src.main.java.com.hauldata.dbpa.file.XlsxSourceSheet.java", "BodyUseAPI": [], "Fixed commit": "8f88d4919c6227c5c0b7c665ef58c44c1fa30153", "Url": "https://api.github.com/repos/rdesantis/hauldata", "Date": "2017-06-09T04:14:48Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pms.service.dao.ICommonDao.findOneByQuery(java.util.HashMap<java.lang.String, java.lang.Object>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (configMap != null) { for (java.lang.String key : configMap.keySet()) { com.pms.service.cfg.ConfigurationManager.setProperties(key, configMap.get(key).toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4610/buggy-version/service.src.main.java.com.pms.service.annotation.InitBean.java", "BodyUseAPI": ["com.pms.service.cfg.ConfigurationManager.setProperties(java.lang.String,java.lang.String)", "java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.keySet()"], "Fixed commit": "ad83fb35bd68900aa04ca20245d8ee3c589c1df4", "Url": "https://api.github.com/repos/antme/pms", "Date": "2014-03-19T09:03:06Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((globalListDeclarationStatement.getListExpression()) != null) && ((globalListDeclarationStatement.getListExpression()) instanceof org.poormanscastle.products.hit2ass.ast.domain.ExpressionList)) { org.poormanscastle.products.hit2ass.ast.domain.ExpressionList expressionList = ((org.poormanscastle.products.hit2ass.ast.domain.ExpressionList) (globalListDeclarationStatement.getListExpression())); while (expressionList != null) { if (expressionList instanceof org.poormanscastle.products.hit2ass.ast.domain.PairExpressionList) { org.poormanscastle.products.hit2ass.ast.domain.PairExpressionList pairExpressionList = ((org.poormanscastle.products.hit2ass.ast.domain.PairExpressionList) (expressionList)); containerStack.peek().addContent(new org.poormanscastle.products.hit2ass.renderer.domain.ListAddItem(\"AddItem\", globalListDeclarationStatement.getListId(), pairExpressionList.getHead().toXPathString())); expressionList = pairExpressionList.getTail(); }else if (expressionList instanceof org.poormanscastle.products.hit2ass.ast.domain.LastExpressionList) { containerStack.peek().addContent(new org.poormanscastle.products.hit2ass.renderer.domain.ListAddItem(\"AddIem\", globalListDeclarationStatement.getListId(), expressionList.toXPathString())); expressionList = null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5541/buggy-version/src.main.java.org.poormanscastle.products.hit2ass.renderer.IRTransformer.java", "BodyUseAPI": ["org.poormanscastle.products.hit2ass.ast.domain.GlobalListDeclarationStatement.getListExpression()", "org.poormanscastle.products.hit2ass.ast.domain.GlobalListDeclarationStatement.getListId()", "org.poormanscastle.products.hit2ass.ast.domain.GlobalListDeclarationStatement.getListId()", "containerStack.peek().addContent(org.poormanscastle.products.hit2ass.renderer.domain.ListAddItem)", "containerStack.peek().addContent(org.poormanscastle.products.hit2ass.renderer.domain.ListAddItem)"], "Fixed commit": "09ea5828951cd0f2b3e5b1aa35270bc6daebecec", "Url": "https://api.github.com/repos/georgfedermann/hit2ass", "Date": "2016-07-24T20:12:53Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rtomchinsky.antigen.Antigen.getInputTypeOfMember(java.lang.reflect.AccessibleObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (type.isInterface()) { com.rtomchinsky.antigen.Antigen.ProviderEntry entry = context.getProvider(type); if (entry != null) { toInject = entry.provider; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8147/buggy-version/Antigen.src.main.java.com.rtomchinsky.antigen.Antigen.java", "BodyUseAPI": ["com.rtomchinsky.antigen.AntigenContext.getProvider(java.lang.Class<?>)"], "Fixed commit": "228febf8a4c21afd77cf9f1fa72573526965b7cd", "Url": "https://api.github.com/repos/rtomchinsky/Antigen", "Date": "2015-10-03T01:50:43Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<seedu.address.model.person.ReadOnlyPerson>.get(index.getZeroBased())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (personToEdit.isHomepageManuallySet()) { editedPerson = new seedu.address.model.person.Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(), personToEdit.getAddress(), remark, personToEdit.getAvatar(), personToEdit.getTags(), personToEdit.getHomepage()); }else { editedPerson = new seedu.address.model.person.Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(), personToEdit.getAddress(), remark, personToEdit.getAvatar(), personToEdit.getTags()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8904/buggy-version/src.main.java.seedu.address.logic.commands.RemarkCommand.java", "BodyUseAPI": ["seedu.address.model.person.ReadOnlyPerson.getAvatar()", "seedu.address.model.person.ReadOnlyPerson.getEmail()", "seedu.address.model.person.ReadOnlyPerson.getName()", "seedu.address.model.person.ReadOnlyPerson.getAvatar()", "seedu.address.model.person.ReadOnlyPerson.getPhone()", "seedu.address.model.person.ReadOnlyPerson.getTags()", "seedu.address.model.person.ReadOnlyPerson.getAddress()", "seedu.address.model.person.ReadOnlyPerson.getTags()", "seedu.address.model.person.ReadOnlyPerson.getName()", "seedu.address.model.person.ReadOnlyPerson.getEmail()", "seedu.address.model.person.ReadOnlyPerson.getHomepage()", "seedu.address.model.person.ReadOnlyPerson.getPhone()", "seedu.address.model.person.ReadOnlyPerson.getAddress()"], "Fixed commit": "f5943d75fe4b5f3e62f1f168492063aa18b7dea9", "Url": "https://api.github.com/repos/CS2103AUG2017-F11-B3/main", "Date": "2017-11-09T11:58:36Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((brValue) != null) test = testInternal(brValue); else { if (notPresentOk) test = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6726/buggy-version/src.com.xrtb.common.Node.java", "BodyUseAPI": [], "Fixed commit": "d91c6b2ab7a770447c1eadf541aab400fe07af08", "Url": "https://api.github.com/repos/benmfaul/XRTB", "Date": "2017-03-02T02:25:09Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.mobicents.restcomm.android.client.sdk.RCDevice.state) != (org.mobicents.restcomm.android.client.sdk.RCDevice.DeviceState.OFFLINE)) && (connectivityStatus == (RCDeviceListener.RCConnectivityStatus.RCConnectivityStatusNone))) { org.mobicents.restcomm.android.client.sdk.RCDevice.state = org.mobicents.restcomm.android.client.sdk.RCDevice.DeviceState.OFFLINE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1286/buggy-version/restcomm.android.client.sdk.src.main.java.org.mobicents.restcomm.android.client.sdk.RCDevice.java", "BodyUseAPI": [], "Fixed commit": "7e69da591bd73f6db087dbf90f1fe5701074894d", "Url": "https://api.github.com/repos/RestComm/restcomm-android-sdk", "Date": "2016-07-26T14:01:18Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.mobicents.restcomm.android.client.sdk.RCDevice.state) == (org.mobicents.restcomm.android.client.sdk.RCDevice.DeviceState.OFFLINE)) && (connectivityStatus != (RCDeviceListener.RCConnectivityStatus.RCConnectivityStatusNone))) { org.mobicents.restcomm.android.client.sdk.RCDevice.state = org.mobicents.restcomm.android.client.sdk.RCDevice.DeviceState.READY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1286/buggy-version/restcomm.android.client.sdk.src.main.java.org.mobicents.restcomm.android.client.sdk.RCDevice.java", "BodyUseAPI": [], "Fixed commit": "7e69da591bd73f6db087dbf90f1fe5701074894d", "Url": "https://api.github.com/repos/RestComm/restcomm-android-sdk", "Date": "2016-07-26T14:01:18Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWrongPosition())) { figure.clear(); createFromShape(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4723/buggy-version/GameTetris.java", "BodyUseAPI": [], "Fixed commit": "16ff4840ac540bbd678bdb18cb7efbd7cc88128c", "Url": "https://api.github.com/repos/biblelamp/JavaExercises", "Date": "2016-09-01T15:13:02Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mViewHolder.itemView.getParent().getParent().getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.KITKAT)) && (((android.view.View) (parent.getParent())).getFitsSystemWindows())) { android.app.Activity activity = null; if ((parent.getContext()) instanceof android.app.Activity) { activity = ((android.app.Activity) (parent.getContext())); }else if ((parent.getContext()) instanceof android.content.ContextWrapper) { if ((((android.content.ContextWrapper) (parent.getContext())).getBaseContext()) instanceof android.app.Activity) { activity = ((android.app.Activity) (parent.getContext())); } } if (activity != null) { if (((activity.getWindow().getAttributes().flags) & ((WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS) | (WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS))) != 0) { statusBarHeight = 0; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8106/buggy-version/library.src.main.java.rikka.materialpreference.SimpleMenuPreference.java", "BodyUseAPI": ["android.view.View.getContext()", "android.view.View.getContext()", "((android.content.ContextWrapper) (parent.getContext())).getBaseContext()", "android.view.View.getContext()", "android.view.View.getContext()", "android.view.View.getContext()"], "Fixed commit": "8bb3f12e7b3f6e32cc13f0ae48ea7a9bc4bcbb62", "Url": "https://api.github.com/repos/RikkaW/MaterialPreference", "Date": "2016-10-07T07:07:37Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (ip.equals(\"\")) { java.lang.System.out.println(\"ip is empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2427/buggy-version/core.src.com.varsom.system.network.BroadcastServerThread.java", "BodyUseAPI": [], "Fixed commit": "71553be184a0165e34d602bea03b04eb9a646d17", "Url": "https://api.github.com/repos/novalain/Varsom-Games", "Date": "2015-05-04T07:01:19Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.isSelected()) { getSelectHelper().addUnselected(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7488/buggy-version/Photo-picker.android-photo-picker.src.main.java.com.medlinker.photopicker.PhotoGridAdapter.java", "BodyUseAPI": [], "Fixed commit": "375504766bc43b1dbd76fcb77b8ce8f540278e93", "Url": "https://api.github.com/repos/LightSun/android-photo-picker", "Date": "2016-04-07T08:16:38Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.secGameState) != (data.GameControlData.STATE2_PENALTYSHOOT)) { data.kickOffTeam = ((data.team[side].teamColor) == (data.GameControlData.TEAM_BLUE)) ? data.GameControlData.TEAM_RED : data.GameControlData.TEAM_BLUE; }else if ((data.gameState) == (data.GameControlData.STATE_SET)) { (data.penaltyShot[((data.kickOffTeam) == (data.team[0].teamColor) ? 0 : 1)])--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6242/buggy-version/src.controller.action.ui.TimeOut.java", "BodyUseAPI": [], "Fixed commit": "30ce17d63386c26ec24d1441b856f21ccaacc241", "Url": "https://api.github.com/repos/bhuman/GameController", "Date": "2013-06-28T10:10:54Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.secGameState) != (data.GameControlData.STATE2_PENALTYSHOOT)) { ActionBoard.ready.perform(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6242/buggy-version/src.controller.action.ui.TimeOut.java", "BodyUseAPI": ["ActionBoard.ready.perform(data.AdvancedData)"], "Fixed commit": "30ce17d63386c26ec24d1441b856f21ccaacc241", "Url": "https://api.github.com/repos/bhuman/GameController", "Date": "2013-06-28T10:10:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer.getAccount().getBalance()) < 0) { pC.endTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2316/buggy-version/src.Game.GameController.java", "BodyUseAPI": [], "Fixed commit": "99ee32643340711cd99072b394c30f803a4973cc", "Url": "https://api.github.com/repos/Quaade94/13_CDIO_FINAL", "Date": "2016-01-15T10:26:53Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (match) { android.util.Log.e(\"match\", \"yes\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7672/buggy-version/app.src.main.java.com.teamspeaghetti.www.gifster.interiorapplication.presenters.UserProcesses.java", "BodyUseAPI": [], "Fixed commit": "0f83ae366a05228716cc245b73435270c6849d16", "Url": "https://api.github.com/repos/msalihguler/gifmessenger", "Date": "2016-06-03T14:08:58Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.example.exifer.MainFrame.prefs.getBoolean(com.example.exifer.MainFrame.MOVE_KEY, false)) copyButton = new javax.swing.JButton(\"Move\"); else copyButton = new javax.swing.JButton(\"Copy\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8827/buggy-version/src.com.example.exifer.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "15ce59f8c45113ae4d398091b3901ff15d94fa61", "Url": "https://api.github.com/repos/eyasuyuki/Exifer", "Date": "2013-11-28T05:40:26Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RegexUtil.COMMA_PATTERN.split(org.apache.commons.lang.StringUtils.replace(event.getLine(2), \"!\", \"\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bits.length) > 1) { java.lang.Double.parseDouble(bits[0]); java.lang.Double.parseDouble(bits[1]); java.lang.Double.parseDouble(bits[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/227/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.BounceBlocks.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "18e505912e524c545c2731ec26980c8cc091f2e5", "Url": "https://api.github.com/repos/Minebench/CraftBook", "Date": "2017-02-27T06:11:20Z"},
{"Line": "=>991", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, cz.filmtit.userspace.servlets.Session>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (sessionToRemove != null) { if (kill == null) { sessionToRemove.logout(); }else if (kill) { sessionToRemove.kill(); }else { sessionToRemove.terminateOnNewLogin(); } activeSessions.remove(oldSessionId); usersSessionIds.remove(user.getDatabaseId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8306/buggy-version/src.userspace.src.main.java.cz.filmtit.userspace.servlets.FilmTitBackendServer.java", "BodyUseAPI": ["cz.filmtit.userspace.servlets.Session.kill()", "cz.filmtit.userspace.servlets.Session.terminateOnNewLogin()", "cz.filmtit.userspace.servlets.Session.logout()"], "Fixed commit": "423a7f706c503d74207f60722cabf02340e1ccd8", "Url": "https://api.github.com/repos/runn1ng/FilmTit", "Date": "2012-09-02T21:11:07Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startNodesSet.contains(node)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/539/buggy-version/app.src.main.java.com.utyf.pmetro.map.RouteTimes.java", "BodyUseAPI": [], "Fixed commit": "15ed97127e79a7c6d0fbbf6214754bf6afc42b3d", "Url": "https://api.github.com/repos/asdzxcasd/pMetro", "Date": "2016-03-14T14:26:52Z"},
{"Line": "=>922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mAborted) { logi(\"Upload aborted\"); sendLogBroadcast(no.nordicsemi.android.dfu.DfuBaseService.LOG_LEVEL_WARNING, \"Upload aborted\"); mProgressInfo.setProgress(no.nordicsemi.android.dfu.DfuBaseService.PROGRESS_ABORTED); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9291/buggy-version/dfu.src.main.java.no.nordicsemi.android.dfu.DfuBaseService.java", "BodyUseAPI": [], "Fixed commit": "d7fe722fbf20532d0bae6ffb44a45a3ea4a07f84", "Url": "https://api.github.com/repos/NordicSemiconductor/Android-DFU-Library", "Date": "2016-09-23T08:55:13Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(readEndOfStream)) { asyncTcpSocket.read(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8992/buggy-version/async-streams.src.main.java.io.datakernel.stream.net.MessagingWithBinaryStreaming.java", "BodyUseAPI": [], "Fixed commit": "cc63afe0723f89e59fab339c352abe0cbc99aab2", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-08-31T13:54:55Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (app.drool.respite.handlers.LinkHandler.isPotentialYoutube(url)) { mContext.startActivity(new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(url))); }else { android.content.Intent webViewIntent = new android.content.Intent(mContext, app.drool.respite.activities.WebViewActivity.class); webViewIntent.putExtra(\"url\", url); mContext.startActivity(webViewIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2236/buggy-version/respite.src.main.java.app.drool.respite.handlers.LinkHandler.java", "BodyUseAPI": ["android.content.Context.startActivity(android.content.Intent)", "android.net.Uri.parse(java.lang.String)", "android.content.Intent.putExtra(java.lang.String,java.lang.String)"], "Fixed commit": "902d826e33dc4957f1208454096954e1483f3212", "Url": "https://api.github.com/repos/gouthamank/respite", "Date": "2016-07-02T23:10:12Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (views.contains(fixedView)) fixedSubsetViews.add(fixedView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2752/buggy-version/src.main.java.spim.process.interestpointregistration.pairwise.constellation.Subset.java", "BodyUseAPI": ["java.util.HashSet<V>.add(V)"], "Fixed commit": "3df904ccb01d20ac917175833ca5b3e74762be5e", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2017-02-12T13:47:54Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.stazo.project_18.Project_18.pulledEvents.contains(e))) { com.stazo.project_18.Project_18.pulledEvents.add(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6695/buggy-version/app.src.main.java.com.stazo.project_18.Project_18.java", "BodyUseAPI": ["java.util.ArrayList<com.stazo.project_18.Event>.add(com.stazo.project_18.Event)"], "Fixed commit": "5346b573cb6ed013d02600938b4363bcb71f91a9", "Url": "https://api.github.com/repos/lukethomas1/stazo-project-18", "Date": "2016-05-14T05:14:52Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(android.support.v4.view.ViewCompat.canScrollVertically(target, 1))) && (!(android.support.v4.view.ViewCompat.canScrollVertically(target, (-1))))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8793/buggy-version/rsen.src.main.java.com.rsen.view.TranBehavior.java", "BodyUseAPI": [], "Fixed commit": "0511e4b7281b102bd9ffc6d8cf27e462621c2f1e", "Url": "https://api.github.com/repos/angcyo/RJcenter", "Date": "2016-11-09T04:30:43Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sr.getValue()) == null) { return \"\"; }else { return sr.getValue().getWideString(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4204/buggy-version/src.main.java.mmarquee.automation.AutomationElement.java", "BodyUseAPI": ["sr.getValue().getWideString(int)", "com.sun.jna.ptr.PointerByReference.getValue()"], "Fixed commit": "a720f120eeb55079a7e5555e97a61dd588366cbd", "Url": "https://api.github.com/repos/mmarquee/ui-automation", "Date": "2016-12-01T09:42:51Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(edit)) getConv(ID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6368/buggy-version/app.src.main.java.ics4u.ics4u_final_project.MeasureSelectionActivity.java", "BodyUseAPI": [], "Fixed commit": "b461725a09fc82d697dc9c37e95eb3b43255bea0", "Url": "https://api.github.com/repos/iwismer/Nutrient-Calculator", "Date": "2016-01-19T18:43:45Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["intermediate.ICodeNode.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nodeType != (intermediate.ICodeNodeType.ELSE_BRANCH)) { conditionResult = expressionStatementExecutor.execute(conditionExpression, environment); result = checkConditionResult(conditionResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7033/buggy-version/src.interpreter.executors.IfStmtExecutor.java", "BodyUseAPI": [], "Fixed commit": "b7cdc1d6aee52866df3a48d8f379d824dec5514f", "Url": "https://api.github.com/repos/LeptusHe/schinus", "Date": "2015-11-21T16:45:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["intermediate.ICodeNode.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nodeType != (intermediate.ICodeNodeType.ELSE_BRANCH)) { conditionExpression = children.get(0); bodyNode = children.get(1); }else { bodyNode = children.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7033/buggy-version/src.interpreter.executors.IfStmtExecutor.java", "BodyUseAPI": [], "Fixed commit": "b7cdc1d6aee52866df3a48d8f379d824dec5514f", "Url": "https://api.github.com/repos/LeptusHe/schinus", "Date": "2015-11-21T16:45:03Z"},
{"Line": "=>1096", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.elegit.RepoHelper.getCommit(branch.getHeadId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (headCommit != null) headCommit.removeAsHead(branch);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/488/buggy-version/src.main.java.elegit.RepoHelper.java", "BodyUseAPI": ["main.java.elegit.CommitHelper.removeAsHead(main.java.elegit.BranchHelper)"], "Fixed commit": "3d37b142594d37a304575ab67f7aaf7dab33bb4d", "Url": "https://api.github.com/repos/dmusican/Elegit", "Date": "2016-04-04T20:01:08Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.startedAddresses) != null) { this.startedAddresses = createServer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2563/buggy-version/org.openscada.da.server.ngp.src.org.openscada.da.server.ngp.Exporter.java", "BodyUseAPI": [], "Fixed commit": "033fa7dd650b078a7feeafc932ceb726caa32918", "Url": "https://api.github.com/repos/ctron/org.openscada.atlantis", "Date": "2013-08-09T14:11:51Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.itemFactory) != null) { this.itemFactory.dispose(); this.itemFactory = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2563/buggy-version/org.openscada.da.server.exec.src.org.openscada.da.server.exec.command.AbstractSingleCommand.java", "BodyUseAPI": [], "Fixed commit": "033fa7dd650b078a7feeafc932ceb726caa32918", "Url": "https://api.github.com/repos/ctron/org.openscada.atlantis", "Date": "2013-08-09T14:11:51Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processItemFactory) != null) { this.processItemFactory.dispose(); this.processItemFactory = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2563/buggy-version/org.openscada.da.server.exec.src.org.openscada.da.server.exec.command.HiveProcessCommand.java", "BodyUseAPI": [], "Fixed commit": "033fa7dd650b078a7feeafc932ceb726caa32918", "Url": "https://api.github.com/repos/ctron/org.openscada.atlantis", "Date": "2013-08-09T14:11:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((characterTyped.length()) > 0) && ((characterTyped.charAt(0)) == 8)) { if ((!(allToDisplay.getCurrentNode().nodeText.getText().equals(\"\\n\"))) && (allToDisplay.getCurrentNode().pre.nodeText.getText().equals(\"\\n\"))) { temproot.getChildren().remove(allToDisplay.getCurrentNode().nodeText); allToDisplay.delete(); allToDisplay.XYPosUpdate(); allToDisplay.CurrentPosUpdate(); cursorPosUpdate(allToDisplay.getCurrentPosX(), allToDisplay.getCurrentPosY()); }else { temproot.getChildren().remove(allToDisplay.getCurrentNode().nodeText); allToDisplay.delete(); allToDisplay.XYPosUpdate(); allToDisplay.CurrentPosUpdate(); allToDisplay.deleteHjustify(); cursorPosUpdate(allToDisplay.getCurrentPosX(), allToDisplay.getCurrentPosY()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1931/buggy-version/proj2.editor.sg.util.KeyEventHandler.java", "BodyUseAPI": [], "Fixed commit": "01d2d07ddef54ebbf1ad74dad65d3d9ca63c13b1", "Url": "https://api.github.com/repos/JayLSU/skeleton-sp16", "Date": "2017-09-06T03:37:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((itemStack.getDamage()) > 0) && (!(getDamagedItems()))) || ((!(getBuyOnlyList().isEmpty())) && ((getBuyOnlyList().get(itemStack)) == null))) || ((getBuyExcludeList().get(itemStack)) != null)) { if (((itemStack.getDamage()) > 0) && (!(getDamagedItems()))) { plugin.getLog().debug(\"can not buy damaged item\"); } if ((!(getBuyOnlyList().isEmpty())) && ((getBuyOnlyList().get(itemStack)) == null)) { plugin.getLog().debug(\"can not buy not in only list item\"); } if ((getBuyExcludeList().get(itemStack)) != null) { plugin.getLog().debug(\"can not buy item in exclude list\"); } return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5046/buggy-version/src.fr.crafter.tickleman.realshop2.shop.Shop.java", "BodyUseAPI": ["fr.crafter.tickleman.realplugin.RealItemTypeList.get(fr.crafter.tickleman.realplugin.RealItemStack)", "fr.crafter.tickleman.realplugin.RealItemStack.getDamage()", "fr.crafter.tickleman.realplugin.RealItemTypeList.get(fr.crafter.tickleman.realplugin.RealItemStack)"], "Fixed commit": "78e832faf9747e477493e78cffb053901bcc96ca", "Url": "https://api.github.com/repos/tickleman/RealShop2", "Date": "2011-12-11T12:48:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((monitor) != null) monitor.setProgress(max);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1750/buggy-version/src.m127.util.ProgressMonitorListener.java", "BodyUseAPI": [], "Fixed commit": "9a9743664b9beddddfa605b267daf1ef3bf05cad", "Url": "https://api.github.com/repos/Megacrafter127/Installer", "Date": "2015-03-28T23:46:13Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstVisibleItem == 0) { mBackTopIv.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6729/buggy-version/src.com.plmt.boommall.ui.activity.GoodsListActivity.java", "BodyUseAPI": [], "Fixed commit": "edd1440e4567c18daea4e8cabaa6b1a571298ca0", "Url": "https://api.github.com/repos/xiguofeng/BoomMall", "Date": "2015-12-30T10:58:44Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ui.isCurrentlyRecognizingSpeech()) { speechRecognizer.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/700/buggy-version/android.src.com.ant.very.android.ActionResolverAndroid.java", "BodyUseAPI": [], "Fixed commit": "d5b1cf0c3d182a114918598d52262162bcbc5a7f", "Url": "https://api.github.com/repos/Divoolej/VeryRealisticAntSimulator", "Date": "2014-11-30T10:34:27Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Catalog.search(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (item instanceof DigitalCamera) { java.util.List<LoanableItem> issuedItems = member.getItemsBorrowed(); for (java.util.Iterator<LoanableItem> iterator = issuedItems.iterator(); iterator.hasNext();) { LoanableItem borrowed = iterator.next(); if (borrowed instanceof ReservableBook) { return null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/706/buggy-version/GP2.src.Library.java", "BodyUseAPI": [], "Fixed commit": "c9a332d9dfb179ed22e0fc0b441e968aa499a749", "Url": "https://api.github.com/repos/rdenman/gp2", "Date": "2016-11-08T01:33:22Z"},
{"Line": "=>1149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chromPos < (cdsStart + 1)) { org.biojava.nbio.genome.util.ChromosomeMappingTools.logger.debug((((chromPos + \" < \") + cdsStart) + 1)); return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3117/buggy-version/biojava-genome.src.main.java.org.biojava.nbio.genome.util.ChromosomeMappingTools.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "331ac2609e2c9c31f9ef06d4afb8c0c52b57be1a", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2017-02-23T00:55:04Z"},
{"Line": "=>1154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chromPos > (cdsEnd + 1)) { org.biojava.nbio.genome.util.ChromosomeMappingTools.logger.debug((((chromPos + \" > \") + cdsEnd) + 1)); return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3117/buggy-version/biojava-genome.src.main.java.org.biojava.nbio.genome.util.ChromosomeMappingTools.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "331ac2609e2c9c31f9ef06d4afb8c0c52b57be1a", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2017-02-23T00:55:04Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(java.lang.Double.isInfinite(yHighest))) && (!(java.lang.Double.isInfinite(yLowest)))) plot.setRange(yLowest, yHighest);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7720/buggy-version/genlab.algog.gui.jfreechart.src.genlab.algog.gui.jfreechart.views.ViewAlgogTable.java", "BodyUseAPI": ["genlab.algog.gui.jfreechart.views.FastScatterPlotWithLines.setRange(float,float)"], "Fixed commit": "75c03d9f16eeb81a4083ccd0599cb3525187c78f", "Url": "https://api.github.com/repos/samthiriot/genlab", "Date": "2015-05-15T11:20:57Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx >= 0) return content.get(rowId)[idx]; else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7720/buggy-version/genlab.core.src.genlab.core.model.meta.basics.flowtypes.GenlabTable.java", "BodyUseAPI": [], "Fixed commit": "75c03d9f16eeb81a4083ccd0599cb3525187c78f", "Url": "https://api.github.com/repos/samthiriot/genlab", "Date": "2015-05-15T11:20:57Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.benjp.listener.ServerBootstrap.getUserService().getUserFullName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fullname == null) fullname = remoteUser;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9277/buggy-version/application.src.main.java.org.benjp.portlet.chat.ChatApplication.java", "BodyUseAPI": [], "Fixed commit": "fea2d5076031fa2b43377724989cc8826865cd8e", "Url": "https://api.github.com/repos/exo-addons/chat-application", "Date": "2012-11-26T08:14:48Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.startsWith(\"FOOD:\")) { blueprint.setFood(((java.lang.Integer.parseInt(line.split(\":\")[1].trim())) == 1)); }else if (line.startsWith(\"NUTRITION:\")) { blueprint.setNutrition(java.lang.Integer.parseInt(line.split(\":\")[1].trim())); }else if (line.startsWith(\"EXPERIENCE_ON_EAT:\")) { blueprint.setExperienceOnEat(java.lang.Integer.parseInt(line.split(\":\")[1].trim())); }else if (line.startsWith(\"INTEGRITY_DECREMENT_ON_EAT:\")) { blueprint.setIntegrityDecrementOnEat(java.lang.Integer.parseInt(line.split(\":\")[1].trim())); }else if (line.startsWith(\"CLOCK:\")) { blueprint.setClock(((java.lang.Integer.parseInt(line.split(\":\")[1].trim())) == 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6791/buggy-version/src.org.dungeon.core.game.GameData.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.trim()", "org.dungeon.core.items.ItemBlueprint.setNutrition(int)", "java.lang.String.trim()", "org.dungeon.core.items.ItemBlueprint.setFood(boolean)", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.trim()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "org.dungeon.core.items.ItemBlueprint.setClock(boolean)", "org.dungeon.core.items.ItemBlueprint.setExperienceOnEat(int)", "org.dungeon.core.items.ItemBlueprint.setIntegrityDecrementOnEat(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "055ec7dba6db5b3fc2f9d53a1464622e17246102", "Url": "https://api.github.com/repos/mafagafogigante/dungeon", "Date": "2014-10-28T17:53:24Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (is != null) { is.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7275/buggy-version/intermine.objectstore.src.main.java.org.intermine.util.PropertiesUtil.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "db4f0875f213465c6fc884a0075ab9217d2cc77e", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2017-11-17T14:37:36Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.digitalcollections.iiif.model.image.RegionRequest.fromString(region.getCanonicalForm(nativeSize)).getRegion()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (canonicalRegion != null) { scaleReference = new java.awt.Dimension(((int) (canonicalRegion.getWidth())), ((int) (canonicalRegion.getHeight()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3054/buggy-version/src.main.java.de.digitalcollections.iiif.model.image.ImageApiSelector.java", "BodyUseAPI": ["java.awt.geom.Rectangle2D.getWidth()", "java.awt.geom.Rectangle2D.getHeight()"], "Fixed commit": "46452de965f3ff0a88783c971a94039d3782ea4c", "Url": "https://api.github.com/repos/dbmdz/iiif-apis", "Date": "2017-12-11T15:59:37Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nganle.dto.UserDTO.pageListUser(java.util.List<com.nganle.dto.UserDTO>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((pageList != null) && ((pageList.size()) != 0)) { model.addAttribute(com.nganle.controller.admin.LIST_USER, pageList.get((page - 1))); model.addAttribute(com.nganle.controller.admin.USER_PAGE, com.nganle.support.util.Utils.getPageToDisplay(pageList.size(), page)); model.addAttribute(com.nganle.controller.admin.CURRENT_PAGE, page); model.addAttribute(com.nganle.controller.admin.FISRT_PAGE, 1); model.addAttribute(com.nganle.controller.admin.LAST_PAGE, pageList.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1387/buggy-version/FoodRecipes.src.main.java.com.nganle.controller.admin.UserController.java", "BodyUseAPI": ["org.springframework.ui.ModelMap.addAttribute(com.nganle.controller.admin.USER_PAGE,com.nganle.support.util.Utils.getPageToDisplay(pageList.size(), page))", "java.util.List<java.util.List<com.nganle.dto.UserDTO>>.get(int)", "java.util.List<java.util.List<com.nganle.dto.UserDTO>>.size()", "com.nganle.support.util.Utils.getPageToDisplay(pageList.size(),int)", "java.util.List<java.util.List<com.nganle.dto.UserDTO>>.size()", "org.springframework.ui.ModelMap.addAttribute(com.nganle.controller.admin.LIST_USER,pageList.get((page - 1)))", "org.springframework.ui.ModelMap.addAttribute(com.nganle.controller.admin.LAST_PAGE,pageList.size())"], "Fixed commit": "1bc9cb0285d50ca525e5fa42cc006913799a07a8", "Url": "https://api.github.com/repos/DoanhNV/Food-Recipes", "Date": "2017-12-27T15:55:17Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mNoTrolleysDialog) == null) || (!(mNoTrolleysDialog.isShowing()))) { mNoTrolleysDialog = new com.afollestad.materialdialogs.MaterialDialog.Builder(getContext()).title(R.string.no_trolleys_title).content(R.string.no_trolleys_message).positiveText(R.string.no_trolleys_button).onPositive(new com.afollestad.materialdialogs.MaterialDialog.SingleButtonCallback() { @java.lang.Override public void onClick(com.afollestad.materialdialogs.MaterialDialog dialog, com.afollestad.materialdialogs.DialogAction which) { mListener.onNavigateSchedule(); } }).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7151/buggy-version/app.src.main.java.com.codeforgvl.trolleytrackerclient.fragments.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "2350b73eb29f407b511231462dc94b7023c2b844", "Url": "https://api.github.com/repos/codeforgreenville/trolley-tracker-android-client", "Date": "2016-01-10T15:45:11Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!extra) { row.setUnitPrice(modifier.getUnitPrice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4924/buggy-version/src.com.floreantpos.jreports.TicketDataSource.java", "BodyUseAPI": [], "Fixed commit": "3f59b3716fba0fb29b0ff1263744cac072f828b3", "Url": "https://api.github.com/repos/HowlingMind/floreantPOS", "Date": "2012-07-06T16:53:09Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size < 1) { size = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/418/buggy-version/src.main.java.com.weidian.bges.reader.ReadESClient.java", "BodyUseAPI": [], "Fixed commit": "dcd7752602e25747f28e80c457d1833a1992b153", "Url": "https://api.github.com/repos/jiangfuqiang/bges", "Date": "2017-11-22T10:28:42Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c != null) { background = c; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5168/buggy-version/src.libbluray.bdj.java-j2se.java.awt.BDGraphics.java", "BodyUseAPI": [], "Fixed commit": "c8635094ceb8c43d6ae89ed37b4895b977343829", "Url": "https://api.github.com/repos/Distrotech/libbluray", "Date": "2013-06-11T12:35:27Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((roullet.length) == 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/915/buggy-version/src.ppatosca.PPA.java", "BodyUseAPI": [], "Fixed commit": "b478db1c6be9d17a920f08b9e218074c6c3b945d", "Url": "https://api.github.com/repos/marcelomachado/Prey-Predator_to_SCA", "Date": "2017-09-06T18:52:13Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.uid) == 0) { throw new java.lang.RuntimeException(\"NO UID PROVIDED\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/845/buggy-version/app.src.main.java.com.beetle.im.IMService.java", "BodyUseAPI": [], "Fixed commit": "e86bb20247e0216d4fe8e7c6bb5ed8de18c2bd7c", "Url": "https://api.github.com/repos/richmonkey/im_android_sdk", "Date": "2014-11-10T13:15:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token.uid) > 0) { t.uid = token.uid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/845/buggy-version/app.src.main.java.com.example.imservice.activity.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "e86bb20247e0216d4fe8e7c6bb5ed8de18c2bd7c", "Url": "https://api.github.com/repos/richmonkey/im_android_sdk", "Date": "2014-11-10T13:15:33Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mediaPlayer.isPlaying())) { mediaPlayer.setDataSource(this, android.net.Uri.parse((\"android.resource://com.apps.nishtha.shauswach/\" + (R.raw.swagat)))); mediaPlayer.prepareAsync(); }else { android.widget.Toast.makeText(this, \"Already playing\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6606/buggy-version/app.src.main.java.com.apps.nishtha.shauswach.Activities.MainActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.prepareAsync()", "android.media.MediaPlayer.setDataSource(com.apps.nishtha.shauswach.Activities.MainActivity,android.net.Uri.parse((\"android.resource://com.apps.nishtha.shauswach/\" + (R.raw.swagat))))"], "Fixed commit": "6c4e5a5a04c9499583d4e73dfcc710cbb6d8dbc6", "Url": "https://api.github.com/repos/nb2998/ShauSwach", "Date": "2017-12-05T18:59:17Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number == null) setNumber(0); else this.number = number;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5682/buggy-version/invest.src.main.java.se.fermitet.invest.domain.Transaction.java", "BodyUseAPI": [], "Fixed commit": "2edcbe93e29628672d8bb5fde9104a49f7e81bf9", "Url": "https://api.github.com/repos/fferm/Invest", "Date": "2015-03-11T09:01:01Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.emc.storageos.db.client.model.Volume>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.emc.storageos.db.client.model.Volume.checkForVplexBackEndVolume(dbClient, vol)) && (com.emc.storageos.db.client.util.NullColumnValueGetter.isNullValue(vol.getReplicationGroupInstance()))) { isCG = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3641/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.xtremio.XtremIOStorageDevice.java", "BodyUseAPI": [], "Fixed commit": "d39de1b17913a6ca45df91930dbc3376a1e36e99", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-28T06:01:16Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["localCluster.get().getFilters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (listOfFilters != null) { newFilterChain = filterContextFactory.buildFilterContexts(getFilterConfig(), listOfFilters.getFilter()); }else { newFilterChain = java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5791/buggy-version/repose-aggregator.core.core-lib.src.main.java.org.openrepose.powerfilter.PowerFilter.java", "BodyUseAPI": ["org.openrepose.powerfilter.FilterList.getFilter()", "org.openrepose.powerfilter.filtercontext.FilterContextFactory.buildFilterContexts(getFilterConfig(),listOfFilters.getFilter())"], "Fixed commit": "4620ccb0c741261c68e589af4a04c0b07cf20623", "Url": "https://api.github.com/repos/rackerlabs/repose", "Date": "2014-12-29T15:29:27Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((diamondRemoteChecker) != null) diamondRemoteChecker.shutdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7639/buggy-version/src.main.java.org.n3r.diamond.client.impl.DiamondSubscriber.java", "BodyUseAPI": [], "Fixed commit": "ae0855e3a7a556e16a9043adc8538741a11e8183", "Url": "https://api.github.com/repos/bingoohuang/diamond-client", "Date": "2016-05-12T02:47:54Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((diamondRemoteChecker) != null) diamondRemoteChecker.addDiamondListener(diamondAxis, diamondListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7639/buggy-version/src.main.java.org.n3r.diamond.client.impl.DiamondSubscriber.java", "BodyUseAPI": [], "Fixed commit": "ae0855e3a7a556e16a9043adc8538741a11e8183", "Url": "https://api.github.com/repos/bingoohuang/diamond-client", "Date": "2016-05-12T02:47:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((diamondRemoteChecker) != null) diamondRemoteChecker.removeDiamondListener(diamondAxis, diamondListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7639/buggy-version/src.main.java.org.n3r.diamond.client.impl.DiamondSubscriber.java", "BodyUseAPI": [], "Fixed commit": "ae0855e3a7a556e16a9043adc8538741a11e8183", "Url": "https://api.github.com/repos/bingoohuang/diamond-client", "Date": "2016-05-12T02:47:54Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((postProcessUniformSet) != null) postProcessUniformSet.setUniforms(postProcess);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9224/buggy-version/src.psilox.core.Window.java", "BodyUseAPI": [], "Fixed commit": "0b361d8a89a1855be72b9814a442247dd35318ce", "Url": "https://api.github.com/repos/Xydium/Psilox", "Date": "2017-05-30T20:29:58Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myLocationClient) != null) location = myLocationClient.getLastLocation(); else if ((listLocation.size()) > 0) location = listLocation.getLast(); else if ((competeListLocation.size()) > 0) location = competeListLocation.getLast();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/3041/buggy-version/Course.src.edu.westmont.course.DrawMap.java", "BodyUseAPI": [], "Fixed commit": "fff3c51594b765b25d861776235ac51c695a68a3", "Url": "https://api.github.com/repos/westmontteam/cs130app", "Date": "2013-12-02T01:07:07Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.FROYO)) { scrollChanged(getFirstVisiblePosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5384/buggy-version/library.src.com.emilsjolander.components.StickyListHeaders.StickyListHeadersListView.java", "BodyUseAPI": [], "Fixed commit": "a28ba74bf630fe7a3c738070604b4c7ff7a0ebc6", "Url": "https://api.github.com/repos/emilsjolander/StickyListHeaders", "Date": "2012-08-28T20:33:50Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.squareup.okhttp.HttpUrl.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (url == null) { android.util.Log.e(com.auth0.android.provider.CallbackHelper.TAG, (\"The Domain is invalid and the Callback URI will not be set. You used: \" + domain)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4393/buggy-version/auth0.src.main.java.com.auth0.android.provider.CallbackHelper.java", "BodyUseAPI": [], "Fixed commit": "5e8ca6429aab611000c94b88017d6f0c038b910d", "Url": "https://api.github.com/repos/auth0/Auth0.Android", "Date": "2016-08-09T21:42:15Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(LogbookTabsActivity.LOGBOOK_BOAT_FAVOURED,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isEmpty(favouredBoatUUIDString))) { java.util.UUID uuidFavoured = java.util.UUID.fromString(favouredBoatUUIDString); if (uuidFavoured.equals(uuid)) favImageView.setBackgroundResource(android.R.drawable.star_big_on); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7444/buggy-version/SeapalAndroidApp.src.de.htwg.seapal.aview.gui.fragment.BoatListFragment.java", "BodyUseAPI": ["java.util.UUID.fromString(java.lang.String)"], "Fixed commit": "fb6d8b1d85d87305d2704d470b8b115a5002b520", "Url": "https://api.github.com/repos/jack10/de.htwg.seapal.android", "Date": "2013-12-29T22:41:09Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { if (data != null) { android.os.Bundle bundle = data.getExtras(); if (bundle != null) { android.graphics.Bitmap photo = bundle.getParcelable(\"data\"); content_bg.setImageBitmap(photo); applyBlur(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6598/buggy-version/Demo.src.com.talk.demo.daily.DailyEditActivity.java", "BodyUseAPI": [], "Fixed commit": "568664b37ccaaa4a283ac19a209ed2eb9a31df24", "Url": "https://api.github.com/repos/youtaya/crabapple", "Date": "2014-06-08T14:09:16Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.objectweb.asm.tree.AbstractInsnNode.getOpcode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (opcode == trimAtOpcode) { trimAtOpcode = -1; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7523/buggy-version/src.main.java.org.spongepowered.asm.mixin.transformer.MixinTransformer.java", "BodyUseAPI": [], "Fixed commit": "754bc465dd39dcb8b38db32b12bd5074c1f14a2b", "Url": "https://api.github.com/repos/SpongePowered/Mixin", "Date": "2015-02-21T14:37:09Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selected[i]) instanceof de.ovgu.featureide.examples.wizards.ExampleNewWizardPage.ProjectRecord) { createExistingProject(((de.ovgu.featureide.examples.wizards.ExampleNewWizardPage.ProjectRecord) (selected[i])), new org.eclipse.core.runtime.SubProgressMonitor(monitor, 1)); }else if ((selected[i]) instanceof java.lang.String) { for (de.ovgu.featureide.examples.wizards.ExampleNewWizardPage.ProjectRecord tmpRecord : compTable.get(((java.lang.String) (selected[i])))) { createExistingProject(tmpRecord, new org.eclipse.core.runtime.SubProgressMonitor(monitor, 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/998/buggy-version/plugins.de.ovgu.featureide.examples.src.de.ovgu.featureide.examples.wizards.ExampleNewWizardPage.java", "BodyUseAPI": ["de.ovgu.featureide.examples.wizards.ExampleNewWizardPage.8.createExistingProject(java.lang.Object,org.eclipse.core.runtime.SubProgressMonitor)", "java.util.Hashtable<java.lang.String, java.util.List<de.ovgu.featureide.examples.wizards.ExampleNewWizardPage.ProjectRecord>>.get(java.lang.Object)"], "Fixed commit": "9bf0589bd4ee02b4b1be5ce843a2c13e86f979e8", "Url": "https://api.github.com/repos/tthuem/FeatureIDE", "Date": "2014-05-29T12:13:49Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eventStart.getSecondOfDay()) != 0) { eventStart = eventStart.toDateTime(defaultTimeZone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5060/buggy-version/bundles.io.org.openhab.io.caldav.src.main.java.org.openhab.io.caldav.internal.CalDavLoaderImpl.java", "BodyUseAPI": ["net.fortuna.ical4j.model.DateTime.toDateTime(org.joda.time.DateTimeZone)"], "Fixed commit": "53df4f3b0ab5e29740b007066dde20dc89d1d97e", "Url": "https://api.github.com/repos/querdenker2k/openhab", "Date": "2015-04-16T20:30:01Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eventEnd.getSecondOfDay()) != 0) { eventEnd = eventEnd.toDateTime(defaultTimeZone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5060/buggy-version/bundles.io.org.openhab.io.caldav.src.main.java.org.openhab.io.caldav.internal.CalDavLoaderImpl.java", "BodyUseAPI": ["net.fortuna.ical4j.model.DateTime.toDateTime(org.joda.time.DateTimeZone)"], "Fixed commit": "53df4f3b0ab5e29740b007066dde20dc89d1d97e", "Url": "https://api.github.com/repos/querdenker2k/openhab", "Date": "2015-04-16T20:30:01Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (globalVariable.BossBattle) { textViewStaminaResultNum.setText(\"+20\"); }else { textViewStaminaResultNum.setText(\"-3\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5879/buggy-version/app.src.main.java.com.towerofsword.user.towerofsword.BattleResult.java", "BodyUseAPI": [], "Fixed commit": "89da6d492777a8ef1759a4fdc5130095460fb8a2", "Url": "https://api.github.com/repos/s910150/TowerofSword", "Date": "2017-01-14T15:55:04Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.item.Item.getIdFromItem(is1.getItem())) != (net.minecraft.item.Item.getIdFromItem(is2.getItem()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1934/buggy-version/mal.core.reference.UtilReference.java", "BodyUseAPI": [], "Fixed commit": "0e146fedc668f872ba2fbc7654ba9dac069827a8", "Url": "https://api.github.com/repos/Malorolam/MalCore", "Date": "2014-08-19T07:56:04Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (considerDamage && ((is1.getItemDamage()) != (is2.getItemDamage()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1934/buggy-version/mal.core.reference.UtilReference.java", "BodyUseAPI": [], "Fixed commit": "0e146fedc668f872ba2fbc7654ba9dac069827a8", "Url": "https://api.github.com/repos/Malorolam/MalCore", "Date": "2014-08-19T07:56:04Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (railo.runtime.op.Decision.isNativeArray(coll)) { java.lang.Object rtn = railo.runtime.type.util.ArrayUtil.get(coll, ((railo.runtime.op.Caster.toIntValue(key.getString())) - 1), null); if (rtn == null) throw new railo.runtime.exp.ExpressionException(((\"Key [\" + (key.getString())) + \"] doesn't exist in Native Array\")); return rtn; }else if (coll instanceof org.w3c.dom.Node) { return railo.runtime.text.xml.struct.XMLStructFactory.newInstance(((org.w3c.dom.Node) (coll)), false).get(key); }else if (coll instanceof java.lang.String) { if (railo.runtime.op.Decision.isInteger(key.getString())) { java.lang.String str = ((java.lang.String) (coll)); int index = railo.runtime.op.Caster.toIntValue(key.getString(), (-1)); if ((index > 0) && (index <= (str.length()))) { return str.substring((index - 1), index); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5137/buggy-version/railo-java.railo-core.src.railo.runtime.util.VariableUtilImpl.java", "BodyUseAPI": ["railo.runtime.type.util.ArrayUtil.get(java.lang.Object,((railo.runtime.op.Caster.toIntValue(key.getString())) - 1),<nulltype>)"], "Fixed commit": "ba4e1855f0975307c5e5cbb3738fdfe7cfe71d51", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-12-04T11:02:23Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTeamTournament) { if (col > 1) { cl = col - 1; } if (col == 1) { if (((tourma.data.Coach) (obj.getObject())) != null) { if ((((tourma.data.Coach) (obj.getObject())).getTeamMates()) != null) { object = ((tourma.data.Coach) (obj.getObject())).getTeamMates().getName(); }else { object = \"\"; } }else { object = \"\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8715/buggy-version/src.tourma.tableModel.MjtRankingIndiv.java", "BodyUseAPI": [], "Fixed commit": "ea07e9c87220c7089aab3ae4f8ef4d55c9d27883", "Url": "https://api.github.com/repos/Bojo38/tourma", "Date": "2016-06-28T15:18:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(texts[i].equals(\"\"))) { eTexts[i].setText(java.lang.String.valueOf(((java.lang.Math.round(((java.lang.Double.valueOf(texts[i])) * 1000.0))) / 1000.0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7285/buggy-version/app.src.main.java.com.mysterionnh.allmuffin.activities.RuleOfThreeActivity.java", "BodyUseAPI": ["eTexts[i].setText(java.lang.String)", "java.lang.Double.valueOf(java.lang.String)", "java.lang.String.valueOf(double)", "java.lang.Math.round(double)"], "Fixed commit": "3b8194db5baa225e283b498e344c087dc5b493d7", "Url": "https://api.github.com/repos/MysterionNH/allMuffin", "Date": "2015-08-21T12:31:07Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentView) != null) && (currentView.hideView(this, view, Direction.FORWARD).equals(HideOperation.PREVENT))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7791/buggy-version/Sources.MVP4Vaadin.src.com.github.peholmst.mvp4vaadin.navigation.DefaultViewController.java", "BodyUseAPI": [], "Fixed commit": "a25068b1ef77b557c85c71c84c4f3ed73b1f04c8", "Url": "https://api.github.com/repos/peholmst/MVP4Vaadin", "Date": "2011-07-07T11:26:08Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((direction) != (edu.rit.LightBikesClient.Bike.DIRECTION_EAST)) { direction = edu.rit.LightBikesClient.Bike.DIRECTION_WEST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6550/buggy-version/src.main.java.edu.rit.LightBikesClient.Bike.java", "BodyUseAPI": [], "Fixed commit": "28b9e23e3ac4fe7976fa9405580ffbb8985bd7e3", "Url": "https://api.github.com/repos/jwflory/LightBikes", "Date": "2016-05-11T15:27:57Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((direction) != (edu.rit.LightBikesClient.Bike.DIRECTION_SOUTH)) { direction = edu.rit.LightBikesClient.Bike.DIRECTION_NORTH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6550/buggy-version/src.main.java.edu.rit.LightBikesClient.Bike.java", "BodyUseAPI": [], "Fixed commit": "28b9e23e3ac4fe7976fa9405580ffbb8985bd7e3", "Url": "https://api.github.com/repos/jwflory/LightBikes", "Date": "2016-05-11T15:27:57Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((direction) != (edu.rit.LightBikesClient.Bike.DIRECTION_NORTH)) { direction = edu.rit.LightBikesClient.Bike.DIRECTION_SOUTH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6550/buggy-version/src.main.java.edu.rit.LightBikesClient.Bike.java", "BodyUseAPI": [], "Fixed commit": "28b9e23e3ac4fe7976fa9405580ffbb8985bd7e3", "Url": "https://api.github.com/repos/jwflory/LightBikes", "Date": "2016-05-11T15:27:57Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((direction) != (edu.rit.LightBikesClient.Bike.DIRECTION_WEST)) { direction = edu.rit.LightBikesClient.Bike.DIRECTION_EAST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6550/buggy-version/src.main.java.edu.rit.LightBikesClient.Bike.java", "BodyUseAPI": [], "Fixed commit": "28b9e23e3ac4fe7976fa9405580ffbb8985bd7e3", "Url": "https://api.github.com/repos/jwflory/LightBikes", "Date": "2016-05-11T15:27:57Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.siberika.idea.pascal.lang.psi.impl.PascalExpression.getTypes(((com.siberika.idea.pascal.lang.psi.impl.PascalExpression) (expr.getExpr())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(types.isEmpty())) { com.siberika.idea.pascal.lang.psi.PasEntityScope ns = com.siberika.idea.pascal.lang.psi.impl.PascalExpression.retrieveScope(types); if (ns != null) { namespaces.add(ns); if (ns instanceof com.siberika.idea.pascal.lang.psi.PascalStructType) { for (com.intellij.psi.SmartPsiElementPointer<com.siberika.idea.pascal.lang.psi.PasEntityScope> scopePtr : ns.getParentScope()) { namespaces.add(scopePtr.getElement()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4219/buggy-version/plugin.src.lang.references.PasReferenceUtil.java", "BodyUseAPI": ["com.siberika.idea.pascal.lang.psi.impl.PascalExpression.retrieveScope(java.util.List<PasField.ValueType>)"], "Fixed commit": "35847a581c32701dbe7b6a91f869df93e0dcad97", "Url": "https://api.github.com/repos/casteng/i-pascal", "Date": "2017-03-14T22:54:48Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) { prevId = PREPARE_ID; }else { prevId = backtype.storm.drpc.LinearDRPCTopologyBuilder.boltId((i - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7882/buggy-version/src.jvm.backtype.storm.drpc.LinearDRPCTopologyBuilder.java", "BodyUseAPI": ["backtype.storm.drpc.LinearDRPCTopologyBuilder.boltId(int)"], "Fixed commit": "436a8acf450710e4710601eb335f95a9d8f26737", "Url": "https://api.github.com/repos/nathanmarz/storm", "Date": "2011-12-01T03:04:17Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.maple.core.TraceItem>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((getChild(next.value)) != null) getChild(next.value).augment(trace, ports); else { org.maple.core.V child = new org.maple.core.V(); subtree.put(next.value, child); child.augment(trace, ports); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9026/buggy-version/src.main.java.org.maple.core.V.java", "BodyUseAPI": ["org.maple.core.V.getChild(next.value)", "org.maple.core.Node.augment(java.util.List<org.maple.core.TraceItem>,int[])", "java.util.Map<java.lang.Long, org.maple.core.Node>.put(next.value,org.maple.core.V)"], "Fixed commit": "8cbc0e8b7c7aa5af8166c55a121f55b02efaa8c8", "Url": "https://api.github.com/repos/maplesdn/MapleCore", "Date": "2015-05-01T01:43:06Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["drawersPanelNode.getNode(\"subdrawer_parsys\").getNodes(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clearFixDivSize != (subDrawerIterator.getSize())) { misMatchFlag = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7117/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.rproductlanding.RProductLandingVariation1.java", "BodyUseAPI": [], "Fixed commit": "e3b5addf0fa68e8b21562bc44e6c0c630695d985", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-02-25T09:46:46Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((msi.gama.metamodel.agent.GamlAgent.class.equals(arg0)) || (msi.gama.metamodel.agent.MinimalAgent.class.equals(arg0))) || (msi.gama.metamodel.agent.GamlAgent.class.equals(arg0.getSuperclass()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/1766/buggy-version/ummisco.gama.serialize.src.ummisco.gama.serializer.gamaType.converters.GamaAgentConverter.java", "BodyUseAPI": [], "Fixed commit": "55329e60a37e2b59d5cab09f0507f3e511ce08f3", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-05-20T20:10:51Z"},
{"Line": "=>743", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.equals(\"VirtualNAS\", com.emc.storageos.db.client.URIUtil.getTypeName(nasUri))) { nasServer = dbClient.queryObject(com.emc.storageos.db.client.model.VirtualNAS.class, java.net.URI.create(nasUri)); }else { nasServer = dbClient.queryObject(com.emc.storageos.db.client.model.PhysicalNAS.class, java.net.URI.create(nasUri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2822/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.UnManagedFilesystemService.java", "BodyUseAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)", "java.net.URI.create(java.lang.String)", "com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)", "java.net.URI.create(java.lang.String)"], "Fixed commit": "335910220c55be460e649e4f3575205f3d51716e", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-22T12:19:52Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(za.dats.bukkit.memorystone.Config.isEconomyEnabled())) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6680/buggy-version/src.main.java.za.dats.bukkit.memorystone.MemoryStone.java", "BodyUseAPI": [], "Fixed commit": "56d83a02f51d1e02259f2ad443f4e1f1bb56aa86", "Url": "https://api.github.com/repos/RTLBukkit/MemoryStone", "Date": "2011-10-18T13:16:39Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dest.x) == 50) && ((dest.y) == 50)) { this.state = 5; return this.pos; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/306/buggy-version/sheepdog.g1.Player.java", "BodyUseAPI": [], "Fixed commit": "1224de02ff4f6c3742f0f763000b15cbb07e8e43", "Url": "https://api.github.com/repos/eac2192/SheepDog", "Date": "2013-11-22T23:29:26Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == 0) { android.net.Uri selectedImage = data.getData(); java.lang.String[] filePathColumn = new java.lang.String[]{ MediaStore.Images.Media.DATA }; android.database.Cursor cursor = getContentResolver().query(selectedImage, filePathColumn, null, null, null); cursor.moveToFirst(); int columnIndex = cursor.getColumnIndex(filePathColumn[0]); java.lang.String picturePath = cursor.getString(columnIndex); cursor.close(); android.graphics.Bitmap bm = android.graphics.BitmapFactory.decodeFile(picturePath); if ((strQR) != \"\") strQR = \"\"; strQR = decodeQRImage(bm); if ((strQR) == \"\") android.widget.Toast.makeText(this, \"\u03b4\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0763\ufffd\", Toast.LENGTH_LONG).show(); else { android.os.Bundle bundle = new android.os.Bundle(); bundle.putString(\"qrcode\", strQR); android.content.Intent intent = new android.content.Intent(this, com.shining.qrcode.DecodeResult.class); intent.putExtras(bundle); startActivityForResult(intent, 0); } }else if (requestCode == 1) { strQR = data.getStringExtra(\"SCAN_RESULT\"); android.os.Bundle bundle = new android.os.Bundle(); bundle.putString(\"qrcode\", strQR); android.content.Intent intent = new android.content.Intent(this, com.shining.qrcode.DecodeResult.class); intent.putExtras(bundle); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4787/buggy-version/src.com.shining.qrcode.QRDecode.java", "BodyUseAPI": [], "Fixed commit": "91b39435a599ee0fa5f3007943af4ffa753bf3f0", "Url": "https://api.github.com/repos/cmjman/QRCode", "Date": "2012-12-11T14:02:59Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Float.isInfinite(f1)) { return java.lang.Float.isInfinite(f2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4713/buggy-version/src.main.java.br.odb.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "e00356a9384f9aead39a5c877f38dcd8c8e4a7e2", "Url": "https://api.github.com/repos/TheFakeMontyOnTheRun/gameutils", "Date": "2015-03-23T00:10:19Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Float.isNaN(f2)) { return java.lang.Float.isNaN(f1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4713/buggy-version/src.main.java.br.odb.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "e00356a9384f9aead39a5c877f38dcd8c8e4a7e2", "Url": "https://api.github.com/repos/TheFakeMontyOnTheRun/gameutils", "Date": "2015-03-23T00:10:19Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Float.isNaN(f1)) { return java.lang.Float.isNaN(f2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4713/buggy-version/src.main.java.br.odb.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "e00356a9384f9aead39a5c877f38dcd8c8e4a7e2", "Url": "https://api.github.com/repos/TheFakeMontyOnTheRun/gameutils", "Date": "2015-03-23T00:10:19Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Float.isInfinite(f2)) { return java.lang.Float.isInfinite(f1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4713/buggy-version/src.main.java.br.odb.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "e00356a9384f9aead39a5c877f38dcd8c8e4a7e2", "Url": "https://api.github.com/repos/TheFakeMontyOnTheRun/gameutils", "Date": "2015-03-23T00:10:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.jcala.xmarket.mvp.main.MainPresenter.init(com.miguelcatalan.materialsearchview.MaterialSearchView,android.view.View)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!testLogin) { android.content.Intent intent = new android.content.Intent(); intent.setClass(getApplicationContext(), me.jcala.xmarket.mvp.user.login.LoginRegisterActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8697/buggy-version/xmarket-android.app.src.main.java.me.jcala.xmarket.mvp.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "18667fbeb6b4220588d6aeae29c0d9597e031e3e", "Url": "https://api.github.com/repos/yyy2015/xmarket", "Date": "2017-02-21T13:11:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEditTxt_billInput.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Double.parseDouble(currentInput)) < 1.0) android.widget.Toast.makeText(view.getContext(), \"Bill must be $1.00 or more.\", Toast.LENGTH_SHORT).show(); else { MainActivity.Users_Bill = mEditTxt_billInput.getText().toString(); android.support.v4.app.Fragment fragment = new com.dgg.tipme.HowWasSvcFragment(); ((com.dgg.tipme.MainActivity) (getActivity())).replaceFragment(fragment, MainActivity.FRAG_BILL_AMOUNT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9121/buggy-version/TipMe.app.src.main.java.com.dgg.tipme.BillAmountFragment.java", "BodyUseAPI": [], "Fixed commit": "d869f098cea4d0cdddf03ce40fe4678896749dd9", "Url": "https://api.github.com/repos/dgghun/TipMe", "Date": "2017-11-15T20:47:11Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ip == null) { java.lang.String msg = \"No IP address found. IP allocation failed for \" + (memberContext); org.apache.stratos.cloud.controller.impl.CloudControllerServiceImpl.LOG.error(msg); throw new org.apache.stratos.cloud.controller.impl.CloudControllerException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5202/buggy-version/components.org.apache.stratos.cloud.controller.src.main.java.org.apache.stratos.cloud.controller.impl.CloudControllerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c6eafd2610006efd28bc163698e826a86446ca31", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2014-10-24T18:30:21Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(timeSlider.isValueChanging())) { timeSlider.setValue((((newValue.toMillis()) / (currentSongDuration.toMillis())) * 100.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8449/buggy-version/src.application.music.MusicPlayer.java", "BodyUseAPI": ["javafx.scene.control.Slider.setValue((((newValue.toMillis()) / (currentSongDuration.toMillis())) * 100.0))"], "Fixed commit": "6590e2a8600b79146afec904c3888afc2aa894a9", "Url": "https://api.github.com/repos/rhong612/OsuMusicPlayer", "Date": "2017-03-14T23:32:36Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.seek(currentSongDuration.multiply((newTime / 100.0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8449/buggy-version/src.application.music.MusicPlayer.java", "BodyUseAPI": [], "Fixed commit": "6590e2a8600b79146afec904c3888afc2aa894a9", "Url": "https://api.github.com/repos/rhong612/OsuMusicPlayer", "Date": "2017-03-14T23:32:36Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!teleportResult) { player.addChatComponentMessage(new net.minecraft.util.text.TextComponentString(\"Unable to teleport to bed. Please be sure that there are at least 2 blocks of free space around your bed to teleport to.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8199/buggy-version/src.main.java.wuest.utilities.Events.HomeCommand.java", "BodyUseAPI": [], "Fixed commit": "b4c82941fb52947174716d65bdc8f957e49c7db2", "Url": "https://api.github.com/repos/Brian-Wuest/MC-Repurpose", "Date": "2016-06-08T22:15:30Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (country.equals(\"united_states\")) { return ((((\"FILTER (?location=dbpedia:\" + country) + \" || \") + \"?location=dbpedia:\") + \"US\") + \" || ?location=dbpedia:USA).\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6352/buggy-version/EMUServer.src.dbpedia.DBPediaQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "98bf170eb9512c35939ae12e1b6ee1fcd5dd2e2d", "Url": "https://api.github.com/repos/alexandruatomei9/emu", "Date": "2015-02-10T23:01:33Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (country.equals(\"united_kingdom\")) { return (((((\"FILTER (?location=dbpedia:\" + country) + \" || \") + \"?location=dbpedia:\") + \"England\") + \" || ?location=dbpedia:Scotland\") + \" || ?location=dbpedia:Wales).\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6352/buggy-version/EMUServer.src.dbpedia.DBPediaQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "98bf170eb9512c35939ae12e1b6ee1fcd5dd2e2d", "Url": "https://api.github.com/repos/alexandruatomei9/emu", "Date": "2015-02-10T23:01:33Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stoyanov.developer.goevent.mvp.model.domain.Event.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (location != null) { holder.where.setText(location.getStreet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6087/buggy-version/app.src.main.java.com.stoyanov.developer.goevent.ui.adapter.EventsAdapter.java", "BodyUseAPI": ["com.stoyanov.developer.goevent.mvp.model.domain.Location.getStreet()", "android.widget.TextView.setText(location.getStreet())"], "Fixed commit": "0995e0059004edc01d1974a68e127596ad2fd816", "Url": "https://api.github.com/repos/vitaliystoyanov/goevent-android", "Date": "2016-11-02T22:19:15Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((players.size()) != 0) { averageX = totalX / (players.size()); java.lang.System.out.println(\"No consoles connected, connect a console and restart the game.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4896/buggy-version/core.src.dk.qpqp.states.GameState.java", "BodyUseAPI": ["java.util.ArrayList<dk.qpqp.entities.Player>.size()"], "Fixed commit": "e73e41284db988f31c14647d5895b2fb85469374", "Url": "https://api.github.com/repos/viktorstrate/ShadowBrawler", "Date": "2015-04-20T20:13:24Z"},
{"Line": "=>995", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(changeType.isEnter)) { for (com.bluelinelabs.conductor.ControllerHostedRouter router : mChildRouters) { router.setDetachFrozen(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9061/buggy-version/conductor.src.main.java.com.bluelinelabs.conductor.Controller.java", "BodyUseAPI": [], "Fixed commit": "3672ef6f5b8d88f6c6772a2da89295f2346d9c5b", "Url": "https://api.github.com/repos/bluelinelabs/Conductor", "Date": "2016-06-15T16:00:53Z"},
{"Line": "=>981", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(changeType.isEnter)) { for (com.bluelinelabs.conductor.ControllerHostedRouter router : mChildRouters) { router.setDetachFrozen(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9061/buggy-version/conductor.src.main.java.com.bluelinelabs.conductor.Controller.java", "BodyUseAPI": [], "Fixed commit": "3672ef6f5b8d88f6c6772a2da89295f2346d9c5b", "Url": "https://api.github.com/repos/bluelinelabs/Conductor", "Date": "2016-06-15T16:00:53Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((zoomStartX) == (-1)) || ((zoomStartY) == (-1))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4968/buggy-version/app.src.main.java.com.teinvdlugt.android.fractals.FractalView.java", "BodyUseAPI": [], "Fixed commit": "da895b9a5808249db61df8a2ef2c1e122ad48fd6", "Url": "https://api.github.com/repos/teinvdlugt/Fractals", "Date": "2015-09-26T16:26:47Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidth()) > 0) { heightResolution = (resolution * (getHeight())) / (getWidth()); widthResolution = resolution; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/4968/buggy-version/app.src.main.java.com.teinvdlugt.android.fractals.FractalView.java", "BodyUseAPI": [], "Fixed commit": "da895b9a5808249db61df8a2ef2c1e122ad48fd6", "Url": "https://api.github.com/repos/teinvdlugt/Fractals", "Date": "2015-09-26T16:26:47Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isPlayersTurn)) { receiveTask.execute(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/9294/buggy-version/app.src.main.java.com.example.shalantor.connect4.GamePlayActivity.java", "BodyUseAPI": [], "Fixed commit": "25b443a3c407091e8ffac44cf3f572fabf03065b", "Url": "https://api.github.com/repos/Shalantor/Connect4", "Date": "2016-12-10T15:51:51Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inBounds((posX + (x * offset)), (posY + (y * offset)))) { if ((board[(posY + (y * offset))][(posX + (x * offset))].getState()) == playerToken) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7110/buggy-version/src.app.Board.java", "BodyUseAPI": ["board[(posY + (y * offset))][(posX + (x * offset))].getState()"], "Fixed commit": "aa0af740e9d94dc9eea68100161179435256a759", "Url": "https://api.github.com/repos/OthelloAi/OthelloAi", "Date": "2017-04-16T14:38:31Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inBounds((posX + (x * offset)), (posY + (y * offset)))) { if ((board[(posY + (y * offset))][(posX + (x * offset))].getState()) == playerToken) for (int counter = 1; counter <= offset; counter++) board[(posY + (counter * y))][(posX + (counter * x))] = token; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/7110/buggy-version/src.app.Board.java", "BodyUseAPI": ["board[(posY + (y * offset))][(posX + (x * offset))].getState()"], "Fixed commit": "aa0af740e9d94dc9eea68100161179435256a759", "Url": "https://api.github.com/repos/OthelloAi/OthelloAi", "Date": "2017-04-16T14:38:31Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentFragment) > 0) { (currentFragment)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6591/buggy-version/app.src.main.java.com.partypeople.www.partypeople.activity.MakePartyActivity.java", "BodyUseAPI": [], "Fixed commit": "e98f98e74600589455bf475e6b547b6e099280ab", "Url": "https://api.github.com/repos/rapturekwang/PartyPeople", "Date": "2015-11-02T00:51:25Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(logEvent.getExecutedBehavior().isStatic())) { result.add(0, vm.wrapValue(method().getDeclaringClass(), logEvent.getTarget())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/509/buggy-version/edu.ubc.mirrors.tod.src.edu.ubc.mirrors.tod.TODMethodMirrorEntryEvent.java", "BodyUseAPI": ["edu.ubc.mirrors.tod.TODMethodMirrorEntryEvent.wrapValue(method().getDeclaringClass(),logEvent.getTarget())", "java.util.List<java.lang.Object>.add(int,vm.wrapValue(method().getDeclaringClass(), logEvent.getTarget()))", "tod.core.database.event.IBehaviorCallEvent.getTarget()"], "Fixed commit": "2780bb2d1587f5290cf5a02260240f2696c84be7", "Url": "https://api.github.com/repos/robinsalkeld/retrospect", "Date": "2015-06-16T17:19:50Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offTick == (onTick - 1)) { offTick += com.kh.beatbot.manager.MidiManager.getTicksPerBeat(GlobalVars.currBeatDivision); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/2821/buggy-version/src.com.kh.beatbot.manager.MidiManager.java", "BodyUseAPI": [], "Fixed commit": "d284b6beeb5639b74c5fa73b86162a590bf2c8d8", "Url": "https://api.github.com/repos/khiner/BeatBot", "Date": "2012-09-24T02:25:19Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wishList.contains(product)) { for (int i = 0; i < (wishList.size()); i++) { if (product.equals(wishList.get(i))) { wishList.add(i, product); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6647/buggy-version/src.User.java", "BodyUseAPI": ["ListADT<Product>.add(int,Product)", "Product.equals(wishList.get(i))", "ListADT<Product>.size()", "ListADT<Product>.get(int)"], "Fixed commit": "79513723b8dc659b5e2d0491810fe08a6b2c7024", "Url": "https://api.github.com/repos/twhitburn/Amazon-Store", "Date": "2015-03-05T03:40:47Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (commands[1].equals(\"all\")) { AmazonStore.printByCategory(); }else if (commands[1].equals(\"wishlist\")) { if ((AmazonStore.currentUser) == null) { java.lang.System.out.println(\"No user logged in. Log in first.\"); } }else if (commands[1].equals(\"instock\")) { for (int i = 0; i < (inStock.size()); i++) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6647/buggy-version/src.AmazonStore.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "79513723b8dc659b5e2d0491810fe08a6b2c7024", "Url": "https://api.github.com/repos/twhitburn/Amazon-Store", "Date": "2015-03-05T03:40:47Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(holder.getOuputId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (holderOutputValue == null) { holderOutputValue = context.getInputData().get(holder.getInputId()); if (holderOutputValue == null) holderOutputValue = holder.createInstance(context); result.put(holder.getOuputId(), holderOutputValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/5470/buggy-version/jbpm-form-modeler-core.jbpm-form-modeler-service.jbpm-form-modeler-ui.src.main.java.org.jbpm.formModeler.core.processing.impl.FormProcessorImpl.java", "BodyUseAPI": [], "Fixed commit": "e9dd38b0781b8d6665998a822fbf975341f6ad68", "Url": "https://api.github.com/repos/droolsjbpm/jbpm-form-modeler", "Date": "2013-09-10T10:36:39Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (n.isDay()) el = n.getEventManager().getDayChat(n.getDayNumber()); else el = n.getEventManager().getNightLog(null, n.getDayNumber());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6258/buggy-version/event.SelectionMessage.java", "BodyUseAPI": [], "Fixed commit": "e9c1b72d1b9d9dea364990d76925d246336296ec", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2017-02-06T05:11:56Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (registerChoice.equals(\"1\")) { POS_System.register1 = new Register(1); }else { POS_System.register1 = new Register(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/6925/buggy-version/POS_System.src.POS_System.java", "BodyUseAPI": [], "Fixed commit": "b6bff8b796e29486dd056be8c3421777e3a1f8ac", "Url": "https://api.github.com/repos/CatherineR/SEIS602_POS_System", "Date": "2016-11-03T14:29:12Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewToModel) != null) { for (int viewIndex = 0; viewIndex < (viewToModel.size()); viewIndex++) { java.lang.Integer modelIndex = viewToModel.get(viewIndex); modelToView.put(modelIndex, viewIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V107/8234/buggy-version/orbisgis-view.src.main.java.org.orbisgis.view.table.DataSourceRowSorter.java", "BodyUseAPI": [], "Fixed commit": "0a3a6cfded4eee380f3b8e933f365b5ee8524ad8", "Url": "https://api.github.com/repos/agouge/orbisgis", "Date": "2014-06-05T12:45:48Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (importType != null) { newImportList.add(importType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8530/buggy-version/src.main.java.com.bruce.intellijplugin.generatesetter.GenerateAllSetterAction.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b68acdfeb933775eb21369030eb17d4a68c6ed9c", "Url": "https://api.github.com/repos/gejun123456/intellij-generateAllSetMethod", "Date": "2016-12-24T07:43:43Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<com.squareup.javapoet.TypeName, com.raizlabs.android.dbflow.processor.SQLiteType>.get(com.squareup.javapoet.TypeName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sqLiteType == null) { sqLiteType = com.raizlabs.android.dbflow.processor.SQLiteType.TEXT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4012/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.SQLiteType.java", "BodyUseAPI": [], "Fixed commit": "46866ec08d669adb94836bff346225802f8032a0", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-08-30T20:58:43Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NamedNodeMap.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isNamespace(attr.getNodeName())) { ((org.w3c.dom.Element) (node)).removeAttributeNode(attr); }else { attr.setPrefix(null); attr.getOwnerDocument().renameNode(attr, null, attr.getLocalName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2433/buggy-version/ext.java.nokogiri.XmlDocument.java", "BodyUseAPI": ["org.w3c.dom.Attr.getOwnerDocument()", "org.w3c.dom.Attr.setPrefix(<nulltype>)", "org.w3c.dom.Document.renameNode(org.w3c.dom.Attr,<nulltype>,java.lang.String)", "org.w3c.dom.Attr.getLocalName()", "org.w3c.dom.Node.removeAttributeNode(org.w3c.dom.Attr)"], "Fixed commit": "e76178406d69efb4489d5eac0a435a6742d53bcd", "Url": "https://api.github.com/repos/sglee18/nokogiri", "Date": "2011-07-28T01:55:30Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(folder.exists())) { folder.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7947/buggy-version/app.src.main.java.com.joe.zatuji.utils.FileUtils.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "8359cf5f71b9137de7423aed7f3978fa2a1f7d04", "Url": "https://api.github.com/repos/JoeSteven/Zatuji", "Date": "2016-06-25T17:10:28Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) file.createNewFile();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7947/buggy-version/app.src.main.java.com.joe.zatuji.utils.FileUtils.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "8359cf5f71b9137de7423aed7f3978fa2a1f7d04", "Url": "https://api.github.com/repos/JoeSteven/Zatuji", "Date": "2016-06-25T17:10:28Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFile()) delete(); else getShare().rmdir(sharePath, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4625/buggy-version/src.main.java.com.xebialabs.overthere.smb2.Smb2File.java", "BodyUseAPI": [], "Fixed commit": "4fbbb851598c353e55373370cf4834a03de2362a", "Url": "https://api.github.com/repos/xebialabs/overthere", "Date": "2016-09-02T10:23:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.core.IMap<java.lang.Long, java.lang.Long>.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (deviceTimestampMap.remove(deviceId, time)) { deviceDAO.setOffline(deviceId); com.devicehive.service.DeviceActivityService.logger.warn(\"Device {} is now offline\", device.getGuid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1597/buggy-version/src.main.java.com.devicehive.service.DeviceActivityService.java", "BodyUseAPI": ["com.devicehive.dao.DeviceDAO.setOffline(java.lang.Long)"], "Fixed commit": "cd36ebd3e993b00bf2002b8cba7771b143990ef0", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2013-08-21T19:45:05Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((user.getUserRole()) != \"ROLE_CUSTOMER\") && ((operatorRepository.findById(user.getId())) != null)) { operatorRepository.deleteOperatorByUserId(user.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2939/buggy-version/src.main.java.lt.tieto.msi2016.auth.services.UserServiceImpl.java", "BodyUseAPI": ["lt.tieto.msi2016.auth.model.User.getId()", "lt.tieto.msi2016.operator.repository.OperatorRepository.deleteOperatorByUserId(user.getId())"], "Fixed commit": "97fa1f77718420afb8a612057a324b415e91d554", "Url": "https://api.github.com/repos/tieto-lt/dotnec", "Date": "2016-08-11T12:43:27Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isSneaking()) { net.minecraft.item.ItemStack stack = player.getCurrentEquippedItem(); if ((stack != null) && ((stack.getItem()) instanceof com.phylogeny.extrabitmanipulation.item.ItemBitToolBase)) { event.setCanceled(true); ExtraBitManipulation.packetNetwork.sendToServer(new com.phylogeny.extrabitmanipulation.packet.PacketCycleData(((event.dwheel) < 0))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2359/buggy-version/src.main.java.com.phylogeny.extrabitmanipulation.client.eventhandler.ClientEventHandler.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getCurrentEquippedItem()"], "Fixed commit": "f2ffe42f57e80bdf3b0402ac2145849a4d80435c", "Url": "https://api.github.com/repos/Phylogeny/ExtraBitManipulation", "Date": "2016-02-17T22:44:08Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(playerIDs.contains(ID))) { playerIDs.add(ID); playerList.add(name); fireTableRowsInserted(((playerList.size()) - 1), ((numcols) - 1)); (numrows)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7518/buggy-version/src.controller.PlayerTableModel.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(java.lang.Integer)"], "Fixed commit": "7302c4e2c0f130884df44d100c517fbddfa10a45", "Url": "https://api.github.com/repos/robertoramsis/FunLearn", "Date": "2015-06-10T20:13:07Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finalMerger) != null) { finalMerger.setStopProcess(true); mergerQueue.offer(finalMerger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2630/buggy-version/processing.src.main.java.org.apache.carbondata.processing.newflow.sort.impl.UnsafeBatchParallelReadMergeSorterImpl.java", "BodyUseAPI": [], "Fixed commit": "73833c28f51dce20ce220125d223bedf4ed59183", "Url": "https://api.github.com/repos/dhatchayani/carbondata", "Date": "2017-06-15T11:02:09Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operator.size()) > 0) { operator.remove(((operator.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8499/buggy-version/RPN.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.remove(int)"], "Fixed commit": "835061ad1592346cd8c65fb549a32fe034e7012e", "Url": "https://api.github.com/repos/DavidBittner/RPN", "Date": "2016-01-28T01:59:58Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(RPN.CheckFunc(i))) { OpAlready = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8499/buggy-version/RPN.java", "BodyUseAPI": [], "Fixed commit": "835061ad1592346cd8c65fb549a32fe034e7012e", "Url": "https://api.github.com/repos/DavidBittner/RPN", "Date": "2016-01-28T01:59:58Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((countryButton.country.getTroops().size()) > 1) { gameState.setCountry1(countryButton.country); javax.swing.JOptionPane.showMessageDialog(countryButton.b, (\"Country1 is \" + (gameState.getCountry1().getName()))); }else { gameState.setCountry1(null); javax.swing.JOptionPane.showMessageDialog(countryButton.b, \"Country does not have enough troops to attack\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/474/buggy-version/src.Window.WindowMain.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(countryButton.b,java.lang.String)", "Window.GameState.setCountry1(countryButton.country)", "javax.swing.JOptionPane.showMessageDialog(countryButton.b,(\"Country1 is \" + (gameState.getCountry1().getName())))"], "Fixed commit": "4162156e78dae79acbb4f2f4e960dd70f807cf7c", "Url": "https://api.github.com/repos/DIEGOJIM13/Risk", "Date": "2016-11-27T07:44:49Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapActivity) == null) { mapActivity = app.mapActivity; if ((mapActivity) != null) { mainLayout = ((android.widget.FrameLayout) (((android.widget.FrameLayout) (mapActivity.getLayout())).getChildAt(0))); }else { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4828/buggy-version/OsmAnd.src.net.osmand.plus.sherpafy.WaypointDialogHelper.java", "BodyUseAPI": [], "Fixed commit": "840b46f576b2ace46a2ff43da0fd1fe4282d3290", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-07-28T19:14:36Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mapActivity) != null) { this.mainLayout = ((android.widget.FrameLayout) (((android.widget.FrameLayout) (mapActivity.getLayout())).getChildAt(0))); this.mapActivity = app.mapActivity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4828/buggy-version/OsmAnd.src.net.osmand.plus.sherpafy.WaypointDialogHelper.java", "BodyUseAPI": [], "Fixed commit": "840b46f576b2ace46a2ff43da0fd1fe4282d3290", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-07-28T19:14:36Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ant.isAlive()) { ant.processContact(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1728/buggy-version/core.src.ru.spbau.kaysin.ants.entities.AnthillCodomain.java", "BodyUseAPI": ["ru.spbau.kaysin.ants.entities.Ant.processContact(ru.spbau.kaysin.ants.entities.AnthillCodomain)"], "Fixed commit": "bf2b149ce9a9f8b9a6f76c17dd283eb7ea52d44f", "Url": "https://api.github.com/repos/demarkok/The-ants-are-my-friends", "Date": "2017-02-26T22:19:50Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mEtSmsTo.getText().toString()", "mEtSmsMsg.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(to))) && (!(android.text.TextUtils.isEmpty(msg)))) { android.telephony.SmsManager smsManager = android.telephony.SmsManager.getDefault(); android.content.Intent sentIntent = new android.content.Intent(\"SENT_SMS_ACTION\"); android.app.PendingIntent pi = android.app.PendingIntent.getBroadcast(mContext, 0, sentIntent, 0); smsManager.sendTextMessage(mEtSmsTo.getText().toString(), null, mEtSmsMsg.getText().toString(), pi, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2588/buggy-version/app.src.main.java.com.example.dysaniazzz.activity.SmsActivity.java", "BodyUseAPI": [], "Fixed commit": "0453b86a45f7fa4cab122c92890597179938d30f", "Url": "https://api.github.com/repos/DysaniazzZ/HelloAndroid", "Date": "2016-09-22T07:24:12Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((decl.isAnonymous()) && (decl.isNative())) && (decl.isNativeHeader())) { if (((decl.getContainer()) != null) && ((decl.getContainer().getDirectMemberForBackend(decl.getName(), \"js\")) != null)) { name += \"$$N\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5556/buggy-version/src.main.java.com.redhat.ceylon.compiler.js.util.JsIdentifierNames.java", "BodyUseAPI": ["com.redhat.ceylon.model.typechecker.model.Declaration.getContainer()", "com.redhat.ceylon.model.typechecker.model.Declaration.getName()", "com.redhat.ceylon.model.typechecker.model.Declaration.getContainer()", "decl.getContainer().getDirectMemberForBackend(decl.getName(),java.lang.String)"], "Fixed commit": "e51960bead69c99293941daebadeba8f7a1cdd96", "Url": "https://api.github.com/repos/ceylon/ceylon-js", "Date": "2015-07-15T01:00:49Z"},
{"Line": "=>2394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["that.getScope().getInheritingDeclaration(com.redhat.ceylon.model.typechecker.model.Declaration)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (id == null) { id = ((com.redhat.ceylon.model.typechecker.model.TypeDeclaration) (d.getContainer())); if (id.isNativeHeader()) { nd = ((com.redhat.ceylon.model.typechecker.model.TypeDeclaration) (com.redhat.ceylon.model.typechecker.model.ModelUtil.getNativeDeclaration(id, Backend.JavaScript))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5556/buggy-version/src.main.java.com.redhat.ceylon.compiler.js.GenerateJsVisitor.java", "BodyUseAPI": [], "Fixed commit": "e51960bead69c99293941daebadeba8f7a1cdd96", "Url": "https://api.github.com/repos/ceylon/ceylon-js", "Date": "2015-07-15T01:00:49Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.arash.movie.MainActivity.movieDBSortType) == null) { com.example.arash.movie.MainActivity.movieDBSortType = getString(R.string.API_ratings_suffix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2725/buggy-version/app.src.main.java.com.example.arash.movie.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7dcf2f1b63e0abe88ef5678894102c09cac374b4", "Url": "https://api.github.com/repos/icepyramid/Movie", "Date": "2017-11-22T18:47:27Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOrderedBroadcast()) { abortBroadcast(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9149/buggy-version/infobip-mobile-messaging-android-sdk.src.main.java.org.infobip.mobile.messaging.gcm.MobileMessagingGcmReceiver.java", "BodyUseAPI": [], "Fixed commit": "db724cec4953a2397578287ab350f2f5c9519f6f", "Url": "https://api.github.com/repos/infobip/mobile-messaging-sdk-android", "Date": "2017-09-09T07:49:06Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (node == null) { node = org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(((org.talend.repository.model.IRepositoryNode) (view.getRoot())), curNode, view, expanded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3783/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.repository.model.RepositoryNodeUtilities.java", "BodyUseAPI": [], "Fixed commit": "bb1b9b85fcc7fc479e622ee5a81599183c1c940a", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-07-02T08:44:27Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.getRoot().getRootRepositoryNode(curNode.getRepositoryObjectType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (nodeFromType != null) { node = org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(nodeFromType, curNode, view, expanded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3783/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.repository.model.RepositoryNodeUtilities.java", "BodyUseAPI": ["org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(org.talend.repository.model.IRepositoryNode,org.talend.core.model.repository.IRepositoryViewObject,org.talend.repository.ui.views.IRepositoryView,boolean)"], "Fixed commit": "bb1b9b85fcc7fc479e622ee5a81599183c1c940a", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-07-02T08:44:27Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ticks > 0) { long currentMs = java.lang.System.currentTimeMillis(); long deltaMs = currentMs - (ms); ms = currentMs; long tickDeltaMs = deltaMs / ticks; for (int i = 0; i < ticks; i++) { tick(tickDeltaMs); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2488/buggy-version/src.main.java.com.github.horrorho.liquiddonkey.cloud.outcome.OutcomesProgress.java", "BodyUseAPI": [], "Fixed commit": "11fb18bfb14d06c4a87e87a04daf7bf8007fbaa8", "Url": "https://api.github.com/repos/horrorho/LiquidDonkey", "Date": "2015-08-07T12:28:18Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jloda.util.ProgramProperties.get(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jloda.gui.ColorTableManager.name2ColorTable.keySet().contains(name)) return jloda.gui.ColorTableManager.getColorTable(name); else return jloda.gui.ColorTableManager.getColorTable(jloda.gui.ColorTableManager.DefaultColorTableName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/632/buggy-version/src.jloda.gui.ColorTableManager.java", "BodyUseAPI": ["jloda.gui.ColorTableManager.getColorTable(java.lang.String)"], "Fixed commit": "1687440adac8ba22d6bff7fae5332af9178a5272", "Url": "https://api.github.com/repos/danielhuson/jloda", "Date": "2016-02-04T12:34:51Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chok.sso.filter.AuthFilter.log.isInfoEnabled()) chok.sso.filter.AuthFilter.log.info((\"[\u5f53\u524d\u8bbf\u95ee\u5730\u5740] = \" + relativeURI));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3919/buggy-version/src.chok.sso.filter.AuthFilter.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "c6cad1d53e2597a8d30793dee358d06db774591d", "Url": "https://api.github.com/repos/RicoFung/origami", "Date": "2017-09-08T08:22:27Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chok.cas.client.filter.CasAccessFilter.log.isInfoEnabled()) chok.cas.client.filter.CasAccessFilter.log.info((\"[\u5f53\u524d\u8bbf\u95ee\u5730\u5740] = \" + relativeURI));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3919/buggy-version/src.chok.cas.client.filter.CasAccessFilter.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "c6cad1d53e2597a8d30793dee358d06db774591d", "Url": "https://api.github.com/repos/RicoFung/origami", "Date": "2017-09-08T08:22:27Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sbml.jsbml.FunctionDefinition.getArgument(int)", "fd.getBody().clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newMath.equals(bvar)) { newMath = expandedBVar; break; }else { org.sbml.jsbml.util.converters.ExpandFunctionDefinitionConverter.replaceAll(newMath, bvar, expandedBVar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4007/buggy-version/core.src.org.sbml.jsbml.util.converters.ExpandFunctionDefinitionConverter.java", "BodyUseAPI": ["org.sbml.jsbml.util.converters.ExpandFunctionDefinitionConverter.replaceAll(org.sbml.jsbml.ASTNode,org.sbml.jsbml.ASTNode,org.sbml.jsbml.ASTNode)"], "Fixed commit": "034e3fc60f5746fea4afdc959036e5aaa3499b64", "Url": "https://api.github.com/repos/sbmlteam/jsbml", "Date": "2017-12-14T16:09:35Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sbml.jsbml.SBMLDocument.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((m == null) || ((m.getFunctionDefinitionCount()) == 0)) { return doc; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4007/buggy-version/core.src.org.sbml.jsbml.util.converters.ExpandFunctionDefinitionConverter.java", "BodyUseAPI": [], "Fixed commit": "034e3fc60f5746fea4afdc959036e5aaa3499b64", "Url": "https://api.github.com/repos/sbmlteam/jsbml", "Date": "2017-12-14T16:09:35Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buyOrder.getNumberOfUnits()) == (sellerOrder.getNumberOfUnits())) { doc = manageXMLFileBuyOrder(buyOrder, sellerOrder); sellerOrder.setNumberOfUnits(mt.server.MicroServer_US.EMPTY); buyOrder.setNumberOfUnits(mt.server.MicroServer_US.EMPTY); }else { sellerOrder.setNumberOfUnits(((sellerOrder.getNumberOfUnits()) - (buyOrder.getNumberOfUnits()))); doc = manageXMLFileSellOrder(buyOrder, sellerOrder); buyOrder.setNumberOfUnits(mt.server.MicroServer_US.EMPTY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8807/buggy-version/MiniTrader_US.src.main.java.mt.server.MicroServer_US.java", "BodyUseAPI": ["mt.Order.setNumberOfUnits(int)", "mt.Order.setNumberOfUnits(int)", "mt.Order.setNumberOfUnits(int)", "mt.Order.getNumberOfUnits()", "mt.Order.setNumberOfUnits(((sellerOrder.getNumberOfUnits()) - (buyOrder.getNumberOfUnits())))", "mt.server.MicroServer_US.manageXMLFileSellOrder(mt.Order,mt.Order)", "mt.Order.getNumberOfUnits()", "mt.server.MicroServer_US.manageXMLFileBuyOrder(mt.Order,mt.Order)"], "Fixed commit": "71ac8d98302978c2f76dcc0b761a0a4674ff92bb", "Url": "https://api.github.com/repos/mzioa-iscteiulpt/ES2-2017-METI-91-MiniTrader", "Date": "2017-05-18T16:47:11Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cfg.isSet(path))) { cfg.options().copyDefaults(true); cfg.addDefault(path, object); save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/105/buggy-version/src.de.Fabtopf.API.Config.java", "BodyUseAPI": ["org.bukkit.configuration.file.FileConfiguration.addDefault(java.lang.String,java.lang.Object)", "org.bukkit.configuration.file.FileConfiguration.options()", "cfg.options().copyDefaults(boolean)"], "Fixed commit": "067fce2a9c26e6d5d0465e1d0f3e8a7e31f52c0f", "Url": "https://api.github.com/repos/Fabtopf/Contray-Varo", "Date": "2017-06-30T18:31:22Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mUser.getUnits().equals(User.LBS_UNITS)) { totalView.setText(((mUser.getWeightliftingUserTotal()) + \" lbs\")); }else { totalView.setText(((mUser.getWeightliftingUserTotal()) + \" kg\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3512/buggy-version/app.src.main.java.com.gonet.oz.strengthstats.StatsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(((mUser.getWeightliftingUserTotal()) + \" lbs\"))", "com.gonet.oz.strengthstats.User.getWeightliftingUserTotal()", "android.widget.TextView.setText(((mUser.getWeightliftingUserTotal()) + \" kg\"))", "com.gonet.oz.strengthstats.User.getWeightliftingUserTotal()"], "Fixed commit": "36b7c3b86e168b64398655614416175b4d40a013", "Url": "https://api.github.com/repos/oziasgonet/StrengthStats", "Date": "2016-08-30T16:48:39Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data & (se.sics.mspsim.core.Timer.CC_IFG)) != 0) { if ((DEBUG) | true) log(\"no softwareTrigger as no edge was detected on CC_IFG \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4875/buggy-version/se.sics.mspsim.core.Timer.java", "BodyUseAPI": [], "Fixed commit": "078890b802469adf0679272fdc191337dd9b5aa3", "Url": "https://api.github.com/repos/bjooris/mspsim", "Date": "2017-09-20T17:42:29Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUserVisibleHint()) && ((loadedSubmissions) == 0)) { updateSubmissions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3830/buggy-version/app.src.main.java.co.adrianblan.cheddar.FeedFragment.java", "BodyUseAPI": [], "Fixed commit": "8ca801a8d2e44d45067d74a9272a6bac17f1eb7d", "Url": "https://api.github.com/repos/adrianblp/Cheddar", "Date": "2015-08-04T15:21:24Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((point2Index) == (-1)) { point2Index = findCloseRoiPoint(startPoints[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7923/buggy-version/Neurons-Axons.src.RoiAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "204d2c69fce99cc91ad0df8f1bdbfbb6e885d121", "Url": "https://api.github.com/repos/beloitcollegecomputerscience/Neurons-Axons", "Date": "2016-05-06T15:03:47Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length()) > 0) { audioID = args.getString(0); android.util.Log.d(audioID, action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7192/buggy-version/src.android.PGLowLatencyAudio.java", "BodyUseAPI": ["org.json.JSONArray.getString(int)"], "Fixed commit": "89792e822e4fb3b93d8f5941a95c3eb01be632c3", "Url": "https://api.github.com/repos/CloudKidStudio/LowLatencyAudio", "Date": "2014-06-19T19:58:07Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theGridNode) != null) theGridNode.destroy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1169/buggy-version/src.main.java.unwrittenfun.minecraft.immersiveintegration.tiles.TileMEWireConnector.java", "BodyUseAPI": [], "Fixed commit": "8d765ebfc916b53fb9b5a4378c8f95419eb8c789", "Url": "https://api.github.com/repos/UnwrittenFun/ImmersiveIntegration", "Date": "2015-07-04T16:56:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position < (getCount())) return getItem(position).hashCode(); else return position;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3170/buggy-version/app.src.main.java.com.android.sravnilka.ui.adapter.DragDropAdapter.java", "BodyUseAPI": ["com.android.sravnilka.ui.adapter.DragDropAdapter.getItem(int)", "getItem(position).hashCode()"], "Fixed commit": "bd638dabcd525dcdbecdf8b6ef56a8f6f06da6c8", "Url": "https://api.github.com/repos/DmitryArc/sravnilka", "Date": "2014-11-19T12:32:23Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matches.size()) > 0) { return builder.build(matches); }else { return java.util.Collections.EMPTY_SET; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4654/buggy-version/modules.wybs.src.wybs.util.StdBuildRule.java", "BodyUseAPI": ["wybs.lang.Builder.build(matches)"], "Fixed commit": "356ad1016a9a9554714e00b7a240f876f7dcf7ff", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2014-02-13T20:50:50Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((questionResponse != null) && ((questionResponse.rData) != null)) { stringObj.setText(questionResponse.rData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1763/buggy-version/app.src.main.java.uk.co.threeequals.landscapeconnect.Question.java", "BodyUseAPI": ["android.widget.EditText.setText(questionResponse.rData)"], "Fixed commit": "908b223cc6c246bdf9e62a153b06c2bff6e473b1", "Url": "https://api.github.com/repos/paperclipmonkey/Landscape-Connect", "Date": "2016-06-23T14:30:41Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schema.getProperties().get(\"avro\")) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6030/buggy-version/data-avro.src.main.java.com.linkedin.data.avro.SchemaTranslator.java", "BodyUseAPI": [], "Fixed commit": "14da8444a00bd1bc6dffa6e20a072a9a5bd59448", "Url": "https://api.github.com/repos/linkedin/rest.li", "Date": "2014-04-25T23:04:53Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((eyeHandler) != null) && (eyeHandler.hasMessages(0))) { eyeHandler.removeMessages(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/354/buggy-version/Android.toonDra.app.src.main.java.edu.kaist.mskers.toondra.ReadEpisodePage.java", "BodyUseAPI": ["android.os.Handler.removeMessages(int)"], "Fixed commit": "332c2bc021820fad9da8dcf9452e8b935a176993", "Url": "https://api.github.com/repos/deNsuh/toonDra", "Date": "2016-12-11T15:18:32Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((menuHandler) != null) && (menuHandler.hasMessages(0))) { menuHandler.removeMessages(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/354/buggy-version/Android.toonDra.app.src.main.java.edu.kaist.mskers.toondra.ReadEpisodePage.java", "BodyUseAPI": ["android.os.Handler.removeMessages(int)"], "Fixed commit": "332c2bc021820fad9da8dcf9452e8b935a176993", "Url": "https://api.github.com/repos/deNsuh/toonDra", "Date": "2016-12-11T15:18:32Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cursor == null) throw new org.bitcoinj.store.BlockStoreException(\"previous block does not exist\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1071/buggy-version/core.src.main.java.org.bitcoinj.store.SPVBlockStore.java", "BodyUseAPI": [], "Fixed commit": "23318c251ca099d96ff03305db32b5d6d76bc29a", "Url": "https://api.github.com/repos/HashEngineeringArchives/digitalcoinj", "Date": "2015-03-28T22:05:37Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hp.hpl.jena.datatypes.TypeMapper.getInstance().getTypeByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rdfDataType == null) { rdfDataType = new org.rdfhdt.hdtjena.CustomDatatype(datatype); com.hp.hpl.jena.datatypes.TypeMapper.getInstance().registerDatatype(rdfDataType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5583/buggy-version/hdt-jena.src.main.java.com.hp.hpl.jena.graph.JenaNodeCreator.java", "BodyUseAPI": [], "Fixed commit": "ed2fc592e78ede2f045b7c39a3313001cc602dcd", "Url": "https://api.github.com/repos/rdfhdt/hdt-java", "Date": "2014-04-22T14:17:30Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((m_Connection) != null) && (m_Connection.isConnected())) { m_Connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2350/buggy-version/src.main.java.net.wimpi.modbus.io.ModbusTCPTransaction.java", "BodyUseAPI": ["net.wimpi.modbus.net.TCPMasterConnection.close()"], "Fixed commit": "abf845c0ae8538c714b753b6172047153cd5da2c", "Url": "https://api.github.com/repos/openhab/jamod", "Date": "2015-10-02T06:06:45Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedTrack == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6827/buggy-version/src.main.java.org.terasology.rails.trains.blocks.system.Tasks.Standart.BuildRightTask.java", "BodyUseAPI": [], "Fixed commit": "8478bf38bd21bba073b249a03d9681532ab03d34", "Url": "https://api.github.com/repos/Terasology/Rails", "Date": "2014-09-14T05:14:16Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedTrack == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6827/buggy-version/src.main.java.org.terasology.rails.trains.blocks.system.Tasks.Standart.BuildLeftTask.java", "BodyUseAPI": [], "Fixed commit": "8478bf38bd21bba073b249a03d9681532ab03d34", "Url": "https://api.github.com/repos/Terasology/Rails", "Date": "2014-09-14T05:14:16Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6082/buggy-version/server.sonar-server.src.main.java.org.sonar.server.plugins.ws.InstalledPluginsWsAction.java", "BodyUseAPI": [], "Fixed commit": "39090f17159d2edaaeb943fc11d1f01ef4b1bfbc", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-04-17T14:44:03Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6082/buggy-version/server.sonar-server.src.main.java.org.sonar.server.plugins.ws.InstalledPluginsWsAction.java", "BodyUseAPI": [], "Fixed commit": "39090f17159d2edaaeb943fc11d1f01ef4b1bfbc", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-04-17T14:44:03Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mColorAnimation) != null) && (mColorAnimation.isRunning())) { setTextHtml(mExpressionText); setSelection(mSelStart, mSelEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9186/buggy-version/src.com.llamacorp.equate.view.EditTextCursorWatcher.java", "BodyUseAPI": [], "Fixed commit": "cf33943d1133a3292992de6ab9010e17eb28a45f", "Url": "https://api.github.com/repos/EvanRespaut/Equate", "Date": "2015-02-14T22:47:20Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(leaderboard.getSocial_thumb()))) { com.squareup.picasso.Picasso.with(mContext).load(leaderboard.getSocial_thumb()).placeholder(R.drawable.placeholder_profile).into(mProfileImage); }else { mProfileImage.setImageResource(R.drawable.placeholder_profile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4178/buggy-version/app.src.main.java.com.sharesmile.share.rfac.adapters.LeaderBoardAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(mContext).load(leaderboard.getSocial_thumb())", "com.sharesmile.share.LeaderBoard.getSocial_thumb()", "com.squareup.picasso.Picasso.with(mContext).load(leaderboard.getSocial_thumb()).placeholder(R.drawable.placeholder_profile).into(com.sharesmile.share.views.CircularImageView)", "com.squareup.picasso.Picasso.with(mContext).load(leaderboard.getSocial_thumb()).placeholder(R.drawable.placeholder_profile)"], "Fixed commit": "908ca7718232b01fda8d9da10af276c30a7a2b89", "Url": "https://api.github.com/repos/anshulagarwal06/Share", "Date": "2016-12-29T02:41:59Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (model.isBox(i, j)) { g.drawImage(imgBox, (j * imgWidth), (i * imgHeight), imgWidth, imgHeight, this); }else if ((model.isHero(i, j)) && (model.isPlace(i, j))) { g.drawImage(imgHeroOnPlace, (j * imgWidth), (i * imgHeight), imgWidth, imgHeight, this); }else if ((model.isHero(i, j)) && (!(model.isPlace(i, j)))) { g.drawImage(imgHero, (j * imgWidth), (i * imgHeight), imgWidth, imgHeight, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8776/buggy-version/src.ru.nsu.vakhrushev.pusher.viewer.FieldComponent.java", "BodyUseAPI": ["java.awt.Graphics.drawImage(java.awt.image.BufferedImage,int,int,int,int,ru.nsu.vakhrushev.pusher.viewer.FieldComponent)", "ru.nsu.vakhrushev.pusher.model.Model.isHero(int,int)", "ru.nsu.vakhrushev.pusher.model.Model.isHero(int,int)", "ru.nsu.vakhrushev.pusher.model.Model.isPlace(int,int)", "java.awt.Graphics.drawImage(java.awt.image.BufferedImage,int,int,int,int,ru.nsu.vakhrushev.pusher.viewer.FieldComponent)", "java.awt.Graphics.drawImage(java.awt.image.BufferedImage,int,int,int,int,ru.nsu.vakhrushev.pusher.viewer.FieldComponent)", "ru.nsu.vakhrushev.pusher.model.Model.isPlace(int,int)"], "Fixed commit": "12332f47dd961116fd07e3eb4205ffec44790558", "Url": "https://api.github.com/repos/mifril/PusherRep", "Date": "2013-05-12T09:29:51Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((costruct) != null) throw new comp.code.CodeException(\"Chiamata erronea di costruttore inesistente\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/292/buggy-version/comp.parser.Costructor.java", "BodyUseAPI": [], "Fixed commit": "5fbbb423cf8df8e7643251791cf9556620c77cf1", "Url": "https://api.github.com/repos/Loara/Meucci", "Date": "2017-03-05T15:44:25Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(productCategoryAndMemberList)) { for (org.ofbiz.entity.GenericValue productCategoryAndMember : productCategoryAndMemberList) { productCategoryIdList.add(productCategoryAndMember.getString(\"productCategoryId\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7970/buggy-version/hot-deploy.rest.src.org.ofbiz.rest.zuczug.ZuczugProductUtil.java", "BodyUseAPI": [], "Fixed commit": "ce66866c977d9d0a0de4e2e4551a252c31bcd156", "Url": "https://api.github.com/repos/zuczug/moka", "Date": "2017-02-23T09:38:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.values.get(Field.ADDRESS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (address == null) return out;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3422/buggy-version/src.we.should.list.GenericItem.java", "BodyUseAPI": [], "Fixed commit": "ec747e691f4e3ac3ba59fd64873e2747228cf9ab", "Url": "https://api.github.com/repos/ccemeraldeyes/AndroidLunch", "Date": "2012-05-18T08:01:39Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((out.size()) > 0) return out.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3422/buggy-version/src.we.should.list.GenericItem.java", "BodyUseAPI": ["java.util.List<android.location.Address>.get(int)"], "Fixed commit": "ec747e691f4e3ac3ba59fd64873e2747228cf9ab", "Url": "https://api.github.com/repos/ccemeraldeyes/AndroidLunch", "Date": "2012-05-18T08:01:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deviceInfo.getIMSINumber()) != null) { sdk.setText(((\"IMSI:\" + \" \") + (deviceInfo.getIMSINumber()))); }else { sdk.setText(((\"IMSI:\" + \" \") + operators)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/981/buggy-version/src.com.mdm.DisplayDeviceInfo.java", "BodyUseAPI": ["com.mdm.DeviceInfo.getIMSINumber()", "android.widget.TextView.setText(((\"IMSI:\" + \" \") + (deviceInfo.getIMSINumber())))"], "Fixed commit": "845556733422aba6f147a5c538dce565ec5697aa", "Url": "https://api.github.com/repos/WSO2Mobile/MDM-Android-Agent", "Date": "2013-06-07T12:11:50Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operators.equals(null)) || (operators.equals(\"null\"))) { operators = \"No Sim\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/981/buggy-version/src.com.mdm.DisplayDeviceInfo.java", "BodyUseAPI": [], "Fixed commit": "845556733422aba6f147a5c538dce565ec5697aa", "Url": "https://api.github.com/repos/WSO2Mobile/MDM-Android-Agent", "Date": "2013-06-07T12:11:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deviceInfo.getNetworkOperatorName()) != null) { jsonArray = deviceInfo.getNetworkOperatorName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/981/buggy-version/src.com.mdm.DisplayDeviceInfo.java", "BodyUseAPI": ["com.mdm.DeviceInfo.getNetworkOperatorName()"], "Fixed commit": "845556733422aba6f147a5c538dce565ec5697aa", "Url": "https://api.github.com/repos/WSO2Mobile/MDM-Android-Agent", "Date": "2013-06-07T12:11:50Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getQueryString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (queryString != null) { try { for (java.lang.String aQuery : queryString.split(\"&\")) { java.lang.String[] splittedQuery = aQuery.split(\"=\"); queryStringFields.put(java.net.URLDecoder.decode(splittedQuery[0], \"utf8\"), java.net.URLDecoder.decode(splittedQuery[1], \"utf8\")); } request.getQueryString(); } catch (java.io.UnsupportedEncodingException exception) { org.biokoframework.http.routing.impl.HttpRouteParserImpl.LOGGER.error(\"Unsupported encoding\", exception); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3552/buggy-version/src.main.java.org.biokoframework.http.routing.impl.HttpRouteParserImpl.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "db282d5b470b2598621bd335176bb2a5520e8cbd", "Url": "https://api.github.com/repos/bioko/http-exposer", "Date": "2014-03-31T12:35:14Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request) != null) request.statusChanged = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1199/buggy-version/core.src.net.mostlyoriginal.game.system.logic.analysis.RouteCalculationSystem.java", "BodyUseAPI": [], "Fixed commit": "b0d5c067184699dfac6429bec848c80e1eaeb8a8", "Url": "https://api.github.com/repos/DaanVanYperen/ns2-scc-profiler", "Date": "2015-01-25T19:32:13Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c0.getName().equals(\"java.lang.Object\")) || (c1.getName().equals(\"java.lang.Object\"))) { Gdx.app.log(\"CD\", (\"Object bug with method \" + (m.getName()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6233/buggy-version/core.src.de.fau.cs.mad.fly.game.CollisionDetector.java", "BodyUseAPI": [], "Fixed commit": "80296100f58289606d3dfacd0b10655a098f699f", "Url": "https://api.github.com/repos/FAU-Inf2/fly-gdx", "Date": "2014-08-07T11:27:52Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.suit) == (me.stefstef00.Poker.Card.Suit.DIAMONDS)) || ((this.suit) == (me.stefstef00.Poker.Card.Suit.HEARTS))) { return (\"\" + (me.stefstef00.Poker.Card.RANK_CHARS[this.rank])) + (me.stefstef00.Poker.Card.SUIT_CHARS[this.suit.ordinal()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7259/buggy-version/src.me.stefstef00.Poker.Card.java", "BodyUseAPI": [], "Fixed commit": "fc8c3fb90ae5ef6582df4de75c6a14b8c7ae22e9", "Url": "https://api.github.com/repos/stefstef00/Pokerbot", "Date": "2017-10-05T12:47:27Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((table.length) != 0) { java.lang.System.out.print(\"Table: \"); for (me.stefstef00.Poker.Card c : table) java.lang.System.out.print((c + \" \")); java.lang.System.out.println(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7259/buggy-version/src.me.stefstef00.Pokerbot.Main.java", "BodyUseAPI": [], "Fixed commit": "fc8c3fb90ae5ef6582df4de75c6a14b8c7ae22e9", "Url": "https://api.github.com/repos/stefstef00/Pokerbot", "Date": "2017-10-05T12:47:27Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!deleteLinkedAbsences) { for (edu.iastate.music.marching.attendance.model.Absence absence : todie) { ac.updateAbsence(absence); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2265/buggy-version/src.main.edu.iastate.music.marching.attendance.controllers.EventController.java", "BodyUseAPI": [], "Fixed commit": "72cbbe7051e9486716499c16b2b5f62c9c5afce6", "Url": "https://api.github.com/repos/curtisullerich/attendance", "Date": "2012-08-28T03:47:13Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tzapps.tzpalette.data.PaletteData.getTitle()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.tzapps.utils.StringUtils.isEmpty(title)) { title = mContext.getResources().getString(R.string.palette_title_default); data.setTitle(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2448/buggy-version/src.com.tzapps.tzpalette.data.PaletteDataSource.java", "BodyUseAPI": [], "Fixed commit": "86dcff021bd0335d970116daffabb1a3805c6c68", "Url": "https://api.github.com/repos/TianziHou/tzPalette", "Date": "2013-09-25T16:10:27Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((structure.getEndDateOrDateTime()) != null) { appendDosageEnd(s, structure.getEndDateOrDateTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1313/buggy-version/src.dk.medicinkortet.dosisstructuretext.longtextconverterimpl.WeeklyRepeatedConverterImpl.java", "BodyUseAPI": ["dk.medicinkortet.dosisstructuretext.vowrapper.StructureWrapper.getEndDateOrDateTime()", "dk.medicinkortet.dosisstructuretext.longtextconverterimpl.WeeklyRepeatedConverterImpl.appendDosageEnd(java.lang.StringBuilder,structure.getEndDateOrDateTime())"], "Fixed commit": "8bf84488b27edf686e51d2bb7a56870f0c00c19d", "Url": "https://api.github.com/repos/trifork/fmk-dosis-til-tekst", "Date": "2016-08-24T06:03:51Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.isOutgoingBatchFull()) { status.disableMarking(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3955/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.join.JoinTemplate.java", "BodyUseAPI": ["org.apache.drill.exec.physical.impl.join.JoinStatus.disableMarking()"], "Fixed commit": "0ced1986f281f830c695ede94138a461431ed8f4", "Url": "https://api.github.com/repos/amansinha100/incubator-drill", "Date": "2015-12-07T22:13:55Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.String) { return java.lang.Long.parseLong(((java.lang.String) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3538/buggy-version/server.server.src.beans.DataAccessIH.java", "BodyUseAPI": [], "Fixed commit": "fe22622b7e3119c78b9d6588faf55b81729b6e8c", "Url": "https://api.github.com/repos/CaoYouXin/serveV2", "Date": "2017-08-04T08:43:25Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bm != result) { bm.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4356/buggy-version/src.com.androidquery.callback.BitmapAjaxCallback.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "b1f60665ba44eb5b4aa44c5396e0b3e0ca7ca5e3", "Url": "https://api.github.com/repos/brk3/androidquery", "Date": "2013-02-21T03:57:30Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bm == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4356/buggy-version/src.com.androidquery.callback.BitmapAjaxCallback.java", "BodyUseAPI": [], "Fixed commit": "b1f60665ba44eb5b4aa44c5396e0b3e0ca7ca5e3", "Url": "https://api.github.com/repos/brk3/androidquery", "Date": "2013-02-21T03:57:30Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pieceCoordinates.containsKey(chosenPiece)) { if ((chosenPiece) != null) { if (!(chosenPiece.equals(\"none\"))) { drawPiece(canvas, this.chosenPiece); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7686/buggy-version/app.src.main.java.no.ntnu.sa2015.sofarc2015.BoardView.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "65172280c96a6a1f0aae6440e624b1c9183ade87", "Url": "https://api.github.com/repos/MarkusLund/SofArc2015", "Date": "2015-04-21T10:50:34Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (document.isSetModel()) { model = document.getModel(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1950/buggy-version/src.main.java.org.cy3sbml.mapping.IdObjectMap.java", "BodyUseAPI": [], "Fixed commit": "f56a31abc6e9b58a217f59b59ed1aec99e8b452d", "Url": "https://api.github.com/repos/matthiaskoenig/cy3sbml", "Date": "2016-07-30T15:56:23Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((client) != null) && (client.isRunning())) { client.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6725/buggy-version/ZloLocationClient.demo.src.main.java.com.ober.android.location.MainActivity.java", "BodyUseAPI": ["com.ober.loc.library.api.ZloLocationClient.cancel()"], "Fixed commit": "87b804f7c1561119e4dae39e7cfb77f60d4bd89c", "Url": "https://api.github.com/repos/Zhang0o/ZloLocationClient", "Date": "2015-05-26T09:40:09Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getStr(\"duration\")) != null) { duration = p.getInt(\"duration\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6098/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.plugins.Effects.java", "BodyUseAPI": ["com.google.gwt.query.client.Properties.getInt(java.lang.String)"], "Fixed commit": "ebd34704c08403e53a6dbf2b73213ddd2161b81c", "Url": "https://api.github.com/repos/manolo/gquery", "Date": "2013-12-07T19:46:13Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((easing) == null) { easing = com.google.gwt.query.client.plugins.effects.PropertiesAnimation.EasingCurve.swing; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6098/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.plugins.effects.PropertiesAnimation.java", "BodyUseAPI": [], "Fixed commit": "ebd34704c08403e53a6dbf2b73213ddd2161b81c", "Url": "https://api.github.com/repos/manolo/gquery", "Date": "2013-12-07T19:46:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o.exists()) o.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3744/buggy-version/src.main.java.com.github.keenon.minimalml.word2vec.Word2VecLoader.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "853438ea67e880908ba1a19d6d06011811c6ad07", "Url": "https://api.github.com/repos/keenon/minimalml", "Date": "2015-01-16T18:47:27Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAuditDomain) ((com.adms.common.domain.BaseAuditDomain) (objects[objNum])).setUpdateBy(java.lang.String.valueOf(objects[userNum]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3649/buggy-version/src.main.java.com.adms.common.service.aop.TimeStampIntercept.java", "BodyUseAPI": [], "Fixed commit": "868c4adc78dcb43bced2785d4633fe8f301d5842", "Url": "https://api.github.com/repos/AdamsTHDev/admsCommonService", "Date": "2014-11-05T11:00:03Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAuditDomain) ((com.adms.common.domain.BaseAuditDomain) (objects[objNum])).setCreateBy(java.lang.String.valueOf(objects[userNum]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3649/buggy-version/src.main.java.com.adms.common.service.aop.TimeStampIntercept.java", "BodyUseAPI": [], "Fixed commit": "868c4adc78dcb43bced2785d4633fe8f301d5842", "Url": "https://api.github.com/repos/AdamsTHDev/admsCommonService", "Date": "2014-11-05T11:00:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.openConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (con instanceof java.net.HttpURLConnection) { connection = ((java.net.HttpURLConnection) (con)); }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1662/buggy-version/src.main.java.org.solution.crawler.http.HttpService.java", "BodyUseAPI": [], "Fixed commit": "4c5fbb7150cdce8052e35c7555e6b971d29eca37", "Url": "https://api.github.com/repos/wxlfrank/crawler", "Date": "2016-03-31T21:07:13Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((extras.getStringArrayList(\"userInterestList\")) != null) { interests = extras.getStringArrayList(\"userInterestList\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6843/buggy-version/FaceToFace.app.src.main.java.nl.tue.facetoface.Activities.TopicActivity.java", "BodyUseAPI": ["android.os.Bundle.getStringArrayList(java.lang.String)"], "Fixed commit": "f7fbcdfce8f48b5640fc3bdd105042d7732d1dd9", "Url": "https://api.github.com/repos/Peter9000222/DBLAppDev", "Date": "2017-03-29T09:10:47Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mincdef_Text.getText().length()) > 0) { output += \" -cdef \" + (mincdef_Text.getText().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3728/buggy-version/src.amain.GUI.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.lang.String.trim()"], "Fixed commit": "c720f0104de7a7a498a81ec001f79aaec3199ef7", "Url": "https://api.github.com/repos/Orikuro/BNS_Comparer", "Date": "2016-04-29T23:05:22Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ctb.askanything.answer.service.FeedbackAnswerEngine.search(com.ctb.askanything.api.domain.Question)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (answerBody == null) { return com.ctb.askanything.api.domain.Answer.NOT_AVAILABLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3855/buggy-version/src.main.java.com.ctb.askanything.answer.service.FeedbackAnswerEngine.java", "BodyUseAPI": [], "Fixed commit": "bac252ff1fcce44889f230bb9214c4ff3cb111ea", "Url": "https://api.github.com/repos/izeye/ask-anything", "Date": "2016-08-26T06:07:52Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri.indexOf(org.mobicents.servlet.sip.address.RFC2396UrlDecoder.UTF8_ESCAPE_CHAR)) < 0) { return uri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6623/buggy-version/sip-servlets-impl.src.main.java.org.mobicents.servlet.sip.address.RFC2396UrlDecoder.java", "BodyUseAPI": [], "Fixed commit": "33a38ba68daf30602172a430ed3ac2055ad99107", "Url": "https://api.github.com/repos/RestComm/sip-servlets", "Date": "2016-04-08T11:49:23Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.getText().isEmpty()) == false) { if ((metadata.getMetadataType()) == (hu.documaison.data.entities.MetadataType.Integer)) { metadata.setValue(java.lang.Integer.parseInt(text.getText())); }else { metadata.setValue(text.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1821/buggy-version/hu.documaison.gui.src.hu.documaison.gui.doctype.MetadataDialog.java", "BodyUseAPI": ["hu.documaison.data.entities.DefaultMetadata.setValue(int)", "hu.documaison.data.entities.DefaultMetadata.setValue(text.getText())", "java.lang.Integer.parseInt(text.getText())", "org.eclipse.swt.widgets.Text.getText()", "org.eclipse.swt.widgets.Text.getText()"], "Fixed commit": "491143e41f4b97a9787cc2d405f525e269cb0b18", "Url": "https://api.github.com/repos/darvasd/documaison", "Date": "2012-11-17T12:34:23Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(Cache.Entry.KEY_CACHED_TTL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ttlString != null) { ttl = java.lang.Long.parseLong(ttlString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6875/buggy-version/library.src.main.java.com.android.volley.toolbox.HttpHeaderParser.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "b68123813fcfedb6d776f5db140047817dc78363", "Url": "https://api.github.com/repos/lxdvs/Volley-OkHttp-Android", "Date": "2015-03-04T21:35:12Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkConnection()) { closeConnection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3076/buggy-version/src.craftoplugin.core.MySQL.java", "BodyUseAPI": [], "Fixed commit": "52b4f22712544d511e99bb40933c49aa701fd8d5", "Url": "https://api.github.com/repos/Craftolution/CraftoPlugin", "Date": "2014-04-13T16:30:13Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tr.rp.ast.AbstractExpression.getDefiniteValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(dimensionValue instanceof java.lang.Integer)) { throw new com.tr.rp.exceptions.RPLTypeError(\"Integer\", dimensionValue, dimension); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/272/buggy-version/src.main.java.com.tr.rp.ast.expressions.ArrayInitExpression.java", "BodyUseAPI": [], "Fixed commit": "40e0ad3b3c872bb80fa9da14461d7dce64efce0b", "Url": "https://api.github.com/repos/tjitze/RankPL", "Date": "2017-09-20T20:26:19Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getDate()) != null) { events.add(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5909/buggy-version/src.main.java.com.patbaumgartner.zbw.utils.XlsParser.java", "BodyUseAPI": ["java.util.List<com.patbaumgartner.zbw.domain.Event>.add(com.patbaumgartner.zbw.domain.Event)"], "Fixed commit": "42e7c00e293b5c1cc673be2c4636d10a879b73a4", "Url": "https://api.github.com/repos/patbaumgartner/einsatzplanung-ics-converter", "Date": "2012-12-23T11:10:30Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.beanutils.PropertyUtils.getProperty(org.kuali.ole.select.document.OleAcquisitionsSearchDocument,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (attrValue.contains(\"-\")) { searchParams.getSearchConditions().add(searchParams.buildSearchCondition(\"phrase\", searchParams.buildSearchField(OleSelectConstant.DOCSTORE_TYPE_BIB, attr, attrValue), \"AND\")); }else { searchParams.getSearchConditions().add(searchParams.buildSearchCondition(\"AND\", searchParams.buildSearchField(OleSelectConstant.DOCSTORE_TYPE_BIB, attr, attrValue), \"AND\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7600/buggy-version/ole-app.olefs.src.main.java.org.kuali.ole.select.document.OleAcquisitionsSearchDocument.java", "BodyUseAPI": ["searchParams.getSearchConditions().add(searchParams.buildSearchCondition(\"AND\", searchParams.buildSearchField(OleSelectConstant.DOCSTORE_TYPE_BIB, attr, attrValue), \"AND\"))", "org.kuali.ole.select.document.SearchParams.buildSearchCondition(java.lang.String,searchParams.buildSearchField(OleSelectConstant.DOCSTORE_TYPE_BIB, attr, attrValue),java.lang.String)", "org.kuali.ole.select.document.SearchParams.buildSearchCondition(java.lang.String,searchParams.buildSearchField(OleSelectConstant.DOCSTORE_TYPE_BIB, attr, attrValue),java.lang.String)", "searchParams.getSearchConditions().add(searchParams.buildSearchCondition(\"phrase\", searchParams.buildSearchField(OleSelectConstant.DOCSTORE_TYPE_BIB, attr, attrValue), \"AND\"))", "org.kuali.ole.select.document.SearchParams.buildSearchField(OleSelectConstant.DOCSTORE_TYPE_BIB,java.lang.String,java.lang.String)", "org.kuali.ole.select.document.SearchParams.buildSearchField(OleSelectConstant.DOCSTORE_TYPE_BIB,java.lang.String,java.lang.String)"], "Fixed commit": "170ed3a43eb6156f56cbd11556cbc7065ddfb25a", "Url": "https://api.github.com/repos/jayared/ole", "Date": "2016-02-12T13:06:09Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (m != null) { archiveMessages.addAll(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6006/buggy-version/applications.plugins.org.csstudio.alarm.jms2ora.src.org.csstudio.alarm.jms2ora.MessageProcessor.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentLinkedQueue<org.csstudio.alarm.jms2ora.service.ArchiveMessage>.addAll(java.util.Collection<org.csstudio.alarm.jms2ora.service.ArchiveMessage>)"], "Fixed commit": "17b9a6337e94cc02e71df43c0d5e63b63b2c2891", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2013-02-26T14:42:01Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodeIndex.get(IVertex.ID, trusterID).getSingle()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (treeOwnerNode == null) throw new plugins.WebOfTrust.exceptions.UnknownIdentityException(((\"No such local identity '\" + trusterID) + \"'.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2500/buggy-version/src.main.java.plugins.WebOfTrust.fcp.GetIdentitiesByPartialNickname.java", "BodyUseAPI": [], "Fixed commit": "8dba5b663ecf4a47307d6ad93dd4b32143fe1423", "Url": "https://api.github.com/repos/SeekingFor/LessCrappyWebOfTrust", "Date": "2013-06-22T07:44:38Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enemy.getPosition().getX()) < 1) { enemy.changeDirection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7418/buggy-version/RunningMan.core.src.main.edu.chalmers.RunningMan.controllers.EnemyController.java", "BodyUseAPI": ["edu.chalmers.RunningMan.entities.Enemy.changeDirection()"], "Fixed commit": "22a8f8a4bb1db2ce28bfa2eeb27ac1fb09ab5d12", "Url": "https://api.github.com/repos/jeppzone/TDA367", "Date": "2015-05-14T10:16:53Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (authName == \"api_key\") { auth = new io.swagger.client.auth.ApiKeyAuth(\"header\", \"api_key\"); }else { throw new java.lang.RuntimeException(((\"auth name \\\"\" + authName) + \"\\\" not found in available auth names\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8103/buggy-version/samples.client.petstore.java.retrofit.src.main.java.io.swagger.client.ApiClient.java", "BodyUseAPI": [], "Fixed commit": "95113dbe225cc858726cf381aafab0ee988a914e", "Url": "https://api.github.com/repos/lugaru1234/swagger-codegen", "Date": "2015-10-27T02:45:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (inMethod == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5099/buggy-version/soot-infoflow.src.com.monster.taint.mstcallback.MSTCallback.java", "BodyUseAPI": [], "Fixed commit": "1337ae9451e9a564c09720c71303ea58165ae9e9", "Url": "https://api.github.com/repos/0-14N/Monster", "Date": "2014-04-02T13:32:12Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.store.storeapps.activities.HomeActivity.mCartId) == \"\") { com.store.storeapps.utility.Utility.showToastMessage(this, \"Add at least one item to cart\"); }else if (com.store.storeapps.utility.Utility.isValueNullOrEmpty(com.store.storeapps.utility.Utility.getSharedPrefStringData(this, Constants.USER_ID))) { com.store.storeapps.utility.Utility.navigateDashBoardFragment(new com.store.storeapps.fragments.ReviewOrderFragment_Before_Login(), ReviewOrderFragment_Before_Login.TAG, null, this); }else if (!(com.store.storeapps.utility.Utility.isValueNullOrEmpty(com.store.storeapps.utility.Utility.getSharedPrefStringData(this, Constants.USER_ID)))) { com.store.storeapps.utility.Utility.navigateDashBoardFragment(new com.store.storeapps.fragments.ReviewOrderFragment(), ReviewOrderFragment.TAG, null, this); }else { com.store.storeapps.utility.Utility.showToastMessage(this, \"Add at least one item to cart\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9199/buggy-version/app.src.main.java.com.store.storeapps.activities.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "f9c146d99e9cf139272c1979e54595a0cd9e13f8", "Url": "https://api.github.com/repos/AnushaPapani/3PMStoreAPP", "Date": "2016-10-17T18:56:16Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numMoves) < 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2556/buggy-version/src.game.Game.java", "BodyUseAPI": [], "Fixed commit": "c589080060081900148f66eef532c79716eca5d3", "Url": "https://api.github.com/repos/taylerhow/Arimaa", "Date": "2015-05-08T17:28:09Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numMoves) <= 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2556/buggy-version/src.game.Game.java", "BodyUseAPI": [], "Fixed commit": "c589080060081900148f66eef532c79716eca5d3", "Url": "https://api.github.com/repos/taylerhow/Arimaa", "Date": "2015-05-08T17:28:09Z"},
{"Line": "=>854", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inputs.contains(n2)) inputs.add(n1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5983/buggy-version/src.main.java.net.xprova.netlistgraph.NetlistGraph.java", "BodyUseAPI": ["java.util.HashSet<net.xprova.netlistgraph.Vertex>.add(net.xprova.netlistgraph.Vertex)"], "Fixed commit": "7a1471bfa46c81c30a802b2a205d051aa6c58827", "Url": "https://api.github.com/repos/xprova/netlist-graph", "Date": "2016-07-14T22:39:02Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sound.getResourcePack()) == (com.jcwhatever.nucleus.managed.resourcepacks.ResourcePacks.getDefault())) { soundNames.add(sound.getName()); }else { soundNames.add((((sound.getResourcePack().getName()) + '.') + (sound.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3501/buggy-version/src.com.jcwhatever.musical.playlists.MusicPlayList.java", "BodyUseAPI": ["com.jcwhatever.nucleus.managed.resourcepacks.sounds.types.IResourceSound.getName()", "java.util.List<java.lang.String>.add(sound.getName())", "com.jcwhatever.nucleus.managed.resourcepacks.sounds.types.IResourceSound.getName()", "sound.getResourcePack().getName()", "com.jcwhatever.nucleus.managed.resourcepacks.sounds.types.IResourceSound.getResourcePack()", "java.util.List<java.lang.String>.add((((sound.getResourcePack().getName()) + '.') + (sound.getName())))"], "Fixed commit": "1454375e457815fb4d020059a07ebb21c8e78bc8", "Url": "https://api.github.com/repos/JCThePants/MusicalRegions", "Date": "2015-10-17T08:56:23Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((routeName) != null) { comparisonChain.compare(routeName, another.routeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3/buggy-version/src.boston.Bus.Map.data.TimePrediction.java", "BodyUseAPI": [], "Fixed commit": "2700695dd1fc2f3e41fe20c6913b9608800f488a", "Url": "https://api.github.com/repos/bostonbusmap/bostonbusmap", "Date": "2014-04-01T03:10:53Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((standingDate) == null) { standingDate = gameDate; }else if (!(standingDate.equals(gameDate))) { actor.ActorApi.StandingsLoad sl = new actor.ActorApi.StandingsLoad(standingDate); standingDate = gameDate; standingModel.tell(sl, getSelf()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1677/buggy-version/basketball.app.actor.Controller.java", "BodyUseAPI": [], "Fixed commit": "3006febed3692d03f19227a4006070709a419b21", "Url": "https://api.github.com/repos/pablote3/accumulator", "Date": "2014-12-15T13:58:01Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((e.getMessage()) != null) && (!(e.getMessage().equals(\"\")))) { reason = e.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1035/buggy-version/src.servlets.SnapshotAPI.java", "BodyUseAPI": ["java.lang.RuntimeException.getMessage()"], "Fixed commit": "69aa8f5402ab2cacdf786cbb2984a057bb874b9b", "Url": "https://api.github.com/repos/mvougiou/DAQSnapshotService", "Date": "2017-03-02T12:24:36Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((front) == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6774/buggy-version/CurrentWorks.Dequeue.java", "BodyUseAPI": [], "Fixed commit": "b0255a22d74db72fc94f6d40ea20574db3c4333b", "Url": "https://api.github.com/repos/swghosh/jvmPad", "Date": "2016-02-06T03:50:05Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) new com.almasosorio.sharethatbill.FragmentGroupNotifications.NotificationsDownloader(getActivity().getApplicationContext(), dataSet, adapter, progressBar, listEmptyText).execute(groupName, userName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7214/buggy-version/Project.app.src.main.java.com.almasosorio.sharethatbill.FragmentGroupNotifications.java", "BodyUseAPI": [], "Fixed commit": "177dec915b0b076cf555d477ecba66b5115340bd", "Url": "https://api.github.com/repos/jeajjr/android-final-project", "Date": "2015-04-23T04:57:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) new com.almasosorio.sharethatbill.FragmentGroupBills.GroupBillsDownloader(getActivity().getApplicationContext(), dataSet, adapter, progressBar, listEmptyText).execute(groupName, userName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7214/buggy-version/Project.app.src.main.java.com.almasosorio.sharethatbill.FragmentGroupBills.java", "BodyUseAPI": [], "Fixed commit": "177dec915b0b076cf555d477ecba66b5115340bd", "Url": "https://api.github.com/repos/jeajjr/android-final-project", "Date": "2015-04-23T04:57:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) new com.almasosorio.sharethatbill.FragmentGroupMembers.GroupMembersDownloader(getActivity().getApplicationContext(), dataSet, adapter, progressBar).execute(groupName, userName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7214/buggy-version/Project.app.src.main.java.com.almasosorio.sharethatbill.FragmentGroupMembers.java", "BodyUseAPI": [], "Fixed commit": "177dec915b0b076cf555d477ecba66b5115340bd", "Url": "https://api.github.com/repos/jeajjr/android-final-project", "Date": "2015-04-23T04:57:32Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((enemies.size) == 0) { spawnNextWave(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2094/buggy-version/Main.src.com.dfgames.lastplanet.screens.game.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "38b2a1ba5113376633d70fa79a97963e04f186d2", "Url": "https://api.github.com/repos/Bubelov/Last-Planet", "Date": "2012-11-13T03:44:05Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.joinedClasses.contains(targetClass))) { this.joinedClasses.add(targetClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8216/buggy-version/src.main.java.org.fiteagle.api.core.usermanagement.User.java", "BodyUseAPI": ["java.util.List<java.lang.Class>.add(java.lang.Class)"], "Fixed commit": "04a6a23e72efc89af06117e4fa57061bdcf7632a", "Url": "https://api.github.com/repos/FITeagle/api", "Date": "2014-10-30T13:57:34Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (samples == 0) { return java.lang.Double.NaN; }else { return total.divide(new java.math.BigDecimal(samples), java.math.BigDecimal.ROUND_HALF_EVEN).doubleValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7097/buggy-version/src.main.java.com.andyhawkes.chronic.PurgeableTimeSeries.java", "BodyUseAPI": ["java.math.BigDecimal.divide(java.math.BigDecimal,int)", "java.math.BigDecimal.doubleValue()"], "Fixed commit": "f3a3ad7f4d424459135e3f0c74193f678c4f5b37", "Url": "https://api.github.com/repos/azhawkes/chronic", "Date": "2014-12-12T23:24:03Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) { java.lang.reflect.Field field = cls.getDeclaredField(fields[0]); field.setAccessible(true); return ((T) (field.get(null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8081/buggy-version/src.main.java.net.stuxcrystal.configuration.utils.ReflectionUtil.java", "BodyUseAPI": [], "Fixed commit": "b6a258c597082345a8b42c253cdf984b3f7edcec", "Url": "https://api.github.com/repos/StuxSoftware/SimpleDev", "Date": "2013-08-01T00:40:44Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loanToShow[i]) != 0) deptCalNoInput[i] = (income * 0.85F) - (loanCal[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7188/buggy-version/UsedCar.src.java.controller.CalCustomLoan.java", "BodyUseAPI": [], "Fixed commit": "8f43a55fb67274152ae1ab6a09b21114282a6e63", "Url": "https://api.github.com/repos/icerisa/UsedCar", "Date": "2017-07-29T07:21:34Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entryToUpdate.getReadableValue().equals(newValue))) { entryToUpdate.setReadableValue(newValue); fileHasChanged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6049/buggy-version/KajonaLanguageEditorCore.src.de.mulchprod.kajona.languageeditor.core.textfile.Textfile.java", "BodyUseAPI": ["de.mulchprod.kajona.languageeditor.core.textfile.Textentry.setReadableValue(java.lang.String)"], "Fixed commit": "4c84215211cb8d1e525f0dfedf74498c46be90dc", "Url": "https://api.github.com/repos/sidler/kajonalanguagefileeditor", "Date": "2009-09-20T18:02:30Z"},
{"Line": "=>932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buddyItem.getInternalType()) == (BuddyItem.TYPE_ROOM_ITEM)) { if (!((((com.tomclaw.mandarin.main.RoomItem) (buddyItem)).getRoomActive()) || (buddyItem.getDialogOpened()))) { if (com.tomclaw.mandarin.core.Handler.sureIsOnline()) { com.tomclaw.mandarin.main.Mechanism.enterRoomRequest(((com.tomclaw.mandarin.main.RoomItem) (buddyItem))); } return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5191/buggy-version/src.com.tomclaw.mandarin.main.MainFrame.java", "BodyUseAPI": ["com.tomclaw.mandarin.main.BuddyItem.getDialogOpened()"], "Fixed commit": "84f8a50201069abdb9324cfe111d44da6116b5ef", "Url": "https://api.github.com/repos/solkin/mandarin-j2me", "Date": "2012-10-13T17:55:43Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getTagCompound()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tagCompound == null) { tagCompound = new net.minecraft.nbt.NBTTagCompound(); shapeCard.setTagCompound(tagCompound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4865/buggy-version/src.main.java.mcjty.rftools.blocks.spaceprojector.BuilderTileEntity.java", "BodyUseAPI": [], "Fixed commit": "f713ca1e561690e900fba33c3d082f3f25f1c1c6", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2016-03-16T07:37:35Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxLengthExpr) != null) { return maxLengthExpr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1851/buggy-version/preon-binding.src.main.java.org.codehaus.preon.codec.RepeatingBitSizeBufferCodecFactory.java", "BodyUseAPI": [], "Fixed commit": "9747b332e174988999eeaad549e67bae884e4ef0", "Url": "https://api.github.com/repos/jumpkick/preon", "Date": "2015-06-13T04:08:41Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((blockInfo.getCummDifficulty()) == null) || ((blockInfo.getCummDifficulty().compareTo(java.math.BigInteger.ZERO)) < 0)) { throw new java.lang.RuntimeException(\"BlockInfo cummDifficulty should be positive BigInteger\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3976/buggy-version/ethereumj-core.src.main.java.org.ethereum.db.IndexedBlockStore.java", "BodyUseAPI": [], "Fixed commit": "be3514f674d92d422d35e57130f959947e9f93f3", "Url": "https://api.github.com/repos/cupuyc/ethereumj", "Date": "2016-12-26T10:23:19Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(commitId))) { commitContent = commitId.substring(0, 8); }else { commitContent = \"********\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3176/buggy-version/app.src.main.java.com.alorma.github.ui.view.issue.IssueTimelineView.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "e5e09c804bc23e258eecfc64c9cfba9dc9fc7ebc", "Url": "https://api.github.com/repos/gitskarios/Gitskarios", "Date": "2015-12-25T11:08:55Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((link.getDest()) instanceof grl.Feature)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7018/buggy-version/src.seg.jUCMNav.strategies.util.IntentionalElementUtil.java", "BodyUseAPI": [], "Fixed commit": "c3884b26ab0de770df7262711ead60cd7ebe403a", "Url": "https://api.github.com/repos/gmussbacher/seg.jUCMNav", "Date": "2014-04-14T17:56:17Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(javax.swing.SwingUtilities.isEventDispatchThread())) { final java.util.concurrent.atomic.AtomicInteger h = new java.util.concurrent.atomic.AtomicInteger(0); dorkbox.util.SwingUtil.invokeAndWaitQuietly(new java.lang.Runnable() { @java.lang.Override public void run() { h.set(((int) (java.awt.SystemTray.getSystemTray().getTrayIconSize().getHeight()))); } }); height = h.get(); }else { height = ((int) (java.awt.SystemTray.getSystemTray().getTrayIconSize().getHeight())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1651/buggy-version/src.dorkbox.systemTray.util.ImageUtils.java", "BodyUseAPI": [], "Fixed commit": "06b3da983101ee3931811a274b7e38ebd693ff6b", "Url": "https://api.github.com/repos/dorkbox/SystemTray", "Date": "2016-12-09T23:56:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.taobao.weex.dom.DOMActionContext.getDomByRef(WXDomObject.ROOT)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (root == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6794/buggy-version/android.sdk.src.main.java.com.taobao.weex.dom.action.AbstractLayoutFinishAction.java", "BodyUseAPI": [], "Fixed commit": "8a479c68157b5bc608c6b49f0e1f75d4e7586187", "Url": "https://api.github.com/repos/apache/incubator-weex", "Date": "2017-11-17T06:37:27Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((src.remaining()) == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4198/buggy-version/core.src.main.java.io.undertow.conduits.ChunkedStreamSinkConduit.java", "BodyUseAPI": [], "Fixed commit": "655ef12c4c0bb245e0aafb27ae8d3a34ad5ebe0a", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2013-11-21T12:34:58Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errcode == 42001) { return json; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2770/buggy-version/src.main.java.com.fengyunhe.wechat.mp.ErrorCode.java", "BodyUseAPI": [], "Fixed commit": "4dc72c107e0f95471965a1bbafe45dffc3d1c30f", "Url": "https://api.github.com/repos/fengyunhe/fengyunhe-wechat-mp", "Date": "2016-09-12T01:46:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aComponent instanceof lisong_mechlab.view.EquipmentPane) { lisong_mechlab.view.ItemTransferHandler.sourcePart = null; java.lang.Object dragged = ((lisong_mechlab.view.EquipmentPane) (aComponent)).getSelectionPath().getLastPathComponent(); if (dragged instanceof java.lang.String) return new java.awt.datatransfer.StringSelection(((java.lang.String) (dragged))); else if (dragged instanceof lisong_mechlab.model.item.Item) return new java.awt.datatransfer.StringSelection(((lisong_mechlab.model.item.Item) (dragged)).getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5625/buggy-version/src.lisong_mechlab.view.ItemTransferHandler.java", "BodyUseAPI": [], "Fixed commit": "47b2dba0a05eccd5314ea480d296424fa662f2e5", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-09-07T21:18:27Z"},
{"Line": "=>789", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getTransaction().isErreur()) { messageErreur = getTransaction().getMessageErreur(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7125/buggy-version/src.main.java.nc.mairie.gestionagent.process.poste.OePOSTEFichePoste.java", "BodyUseAPI": [], "Fixed commit": "7b6eccea7c0bdce3d01a691597880d34fea0f24d", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh", "Date": "2017-08-10T04:52:19Z"},
{"Line": "=>803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (messageErreur != null) { getTransaction().declarerErreur(messageErreur); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7125/buggy-version/src.main.java.nc.mairie.gestionagent.process.poste.OePOSTEFichePoste.java", "BodyUseAPI": ["getTransaction().declarerErreur(java.lang.String)"], "Fixed commit": "7b6eccea7c0bdce3d01a691597880d34fea0f24d", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh", "Date": "2017-08-10T04:52:19Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (adhr != null) { adhr.execute(AdapHH.Sa, AdapHH.Saa); }else { this.getAdaphh().copySolution(AdapHH.Sa, AdapHH.Saa); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7799/buggy-version/ParallelHyFlex.src.parallelhyflex.hyperheuristics.adaphh.records.AdapHHHybridRelaxationHeuristicRecord.java", "BodyUseAPI": ["parallelhyflex.hyperheuristics.adaphh.records.AdapHHHeuristicRecord.execute(AdapHH.Sa,AdapHH.Saa)"], "Fixed commit": "54ebca941092320c80553275ede102b3f9a03b37", "Url": "https://api.github.com/repos/KommuSoft/ParallelHyFlex", "Date": "2013-04-19T02:35:12Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (oldPacketReader != null) { try { oldPacketReader.shutdown(); } catch (java.lang.Exception e) { de.uniluebeck.itm.spyglass.core.Spyglass.log.warn((\"Exception while shutting down PacketReader: \" + e), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4935/buggy-version/core.src.main.java.de.uniluebeck.itm.spyglass.core.Spyglass.java", "BodyUseAPI": ["de.uniluebeck.itm.spyglass.io.PacketReader.shutdown()"], "Fixed commit": "2ff3044dcacac4f26eae6fe8788f6d8207f2b26e", "Url": "https://api.github.com/repos/itm/spyglass", "Date": "2011-07-13T13:38:59Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entries == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/740/buggy-version/src.com.android.settings.applications.AppStateAppOpsBridge.java", "BodyUseAPI": [], "Fixed commit": "41b4d908bb1ba2a1ede37015eaa9f98ca7339820", "Url": "https://api.github.com/repos/aosp-mirror/platform_packages_apps_settings", "Date": "2017-07-27T18:16:08Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchedYear.isEmpty()) { return bookList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9023/buggy-version/LMS.src.libraryManagementSystem.Library.java", "BodyUseAPI": [], "Fixed commit": "246ea163b540b549b767d8678a3df672161e33af", "Url": "https://api.github.com/repos/songulabuzar/CS535-LibraryManagementSystem", "Date": "2016-11-09T06:32:13Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(state instanceof com.pitt.loadingview.library.LoadingView.SavedState)) { super.onRestoreInstanceState(state); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1740/buggy-version/library.src.main.java.com.pitt.loadingview.library.LoadingView.java", "BodyUseAPI": ["android.view.View.onRestoreInstanceState(android.os.Parcelable)"], "Fixed commit": "16f74b9894e2a72379884812bd5f478e314654dc", "Url": "https://api.github.com/repos/Murashov/LoadingView", "Date": "2017-02-01T10:10:49Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.chosenAttributes.get(i)) attributes.add(i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1395/buggy-version/src.DecisionTree.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(int)"], "Fixed commit": "b751ab6c75b78df6bcd962d366c63340f4fed099", "Url": "https://api.github.com/repos/PatwinchIR/RandomForest", "Date": "2017-03-19T22:39:26Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n.value) != null) keys.add(n.key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/408/buggy-version/cp.visualizer-stdlib.ST.java", "BodyUseAPI": ["java.util.Set<Key>.add(Key)"], "Fixed commit": "44b9326319d18d23d3d6f36d7dad6a21d6937a43", "Url": "https://api.github.com/repos/daveagp/java_jail", "Date": "2014-04-23T21:15:10Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rawSQL.contains(\"end\")) { end = (rawSQL.indexOf(\"end\")) + 3; }else { end = rawSQL.indexOf(\";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6206/buggy-version/src.sqlchecker.io.impl.SubmissionReader.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "fb9b50b6af02329a21da63dc84fcc79840fe64ce", "Url": "https://api.github.com/repos/mxhdev/SQLChecker", "Date": "2016-01-26T15:03:07Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.mts.taskmanage.application.GroupAppService.findBelongingGroup(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (group != null) { simpMessagingTemplate.convertAndSend(((\"/topic/\" + memberId) + \"/group_available\"), new jp.mts.taskmanage.websocket.GroupAvailableNotification(group)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7039/buggy-version/app.api.task-manage.src.main.java.jp.mts.taskmanage.websocket.GroupNotifyWebSocketController.java", "BodyUseAPI": ["org.springframework.messaging.simp.SimpMessagingTemplate.convertAndSend(java.lang.String,jp.mts.taskmanage.websocket.GroupAvailableNotification)"], "Fixed commit": "688ae451c855c10114ac17c7c1f9f78e25feedd2", "Url": "https://api.github.com/repos/mtn81/live-taskboard", "Date": "2015-12-11T13:22:56Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mBluetoothAdapter.getProfileProxy(this, mProfileListener, BluetoothProfile.HEADSET))) { android.util.Log.d(wangrunz.bluetoothmonitor.MyBluetoothService.TAG, \"bluetooth health profile not available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5855/buggy-version/app.src.main.java.wangrunz.bluetoothmonitor.MyBluetoothService.java", "BodyUseAPI": [], "Fixed commit": "ba9b6c9d16f85eec024bc466732d331d4b341450", "Url": "https://api.github.com/repos/wangrunz/BluetoothMonitor", "Date": "2017-03-26T23:41:11Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length) == 0) { throw new java.lang.ArrayIndexOutOfBoundsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1939/buggy-version/src.ua.com.goit.itcolab.project.ElementManagementFIFO.java", "BodyUseAPI": [], "Fixed commit": "e2a43500d79a306623ad489365bae67ebe666ad5", "Url": "https://api.github.com/repos/nitogel/goitdiplom", "Date": "2015-08-09T18:56:21Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.att().contains(Attribute.MACRO_KEY)) { return s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8765/buggy-version/kernel.src.main.java.org.kframework.kore.compile.DeconstructIntegerAndFloatLiterals.java", "BodyUseAPI": [], "Fixed commit": "2731e5c48c8e75f2889514ca2e067f0029879f8a", "Url": "https://api.github.com/repos/dwightguth/k", "Date": "2015-08-14T15:51:43Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clickedPos != (-1)) { actionBar.startAnimation(fadeOutAnim); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1186/buggy-version/app.src.main.java.me.slackti.notesmatter.adapter.TodoAdapter.java", "BodyUseAPI": [], "Fixed commit": "c48af5ae9e2c59ad6d9a9a822071a61c1b0c519c", "Url": "https://api.github.com/repos/JackyMai/notes-matter", "Date": "2017-02-22T13:27:13Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tmpInput.contains(\";\")) { tmpInput = tmpInput.substring(0, ((tmpInput.indexOf(\";\")) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5511/buggy-version/fonte.Lotus.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "8b5f16586ff1cd900a4d31bfbd206e4650dd6707", "Url": "https://api.github.com/repos/vladimirbelinski/Lotus", "Date": "2015-04-14T02:13:39Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((secondData.get(value)) == null) { stringPicker2.setVisibility(View.INVISIBLE); stringPicker2.setValues(new java.lang.String[]{ \"\" }); }else { stringPicker2.setVisibility(View.VISIBLE); stringPicker2.setValues(((java.util.List) (secondData.get(value)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6626/buggy-version/wheel.src.main.java.kaoice.stringpicker.StringPickerDialog.java", "BodyUseAPI": ["kaoice.stringpicker.StringPicker.setValues(java.lang.Object)", "java.util.HashMap.get(java.lang.String)"], "Fixed commit": "f285e6a1b02c838b40cdccfeed0d8aaa7181f0a7", "Url": "https://api.github.com/repos/taiwanCHH/WheelPicker", "Date": "2015-05-10T15:25:39Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kaoice.stringpicker.DataModel.getSecond()", "android.os.Bundle.getParcelable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((secondData.get(values.getFirst().get(0))) == null) { stringPicker2.setVisibility(View.INVISIBLE); stringPicker2.setValues(new java.lang.String[]{ \"\" }); }else { stringPicker2.setVisibility(View.VISIBLE); stringPicker2.setValues(((java.util.List) (secondData.get(values.getFirst().get(0))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6626/buggy-version/wheel.src.main.java.kaoice.stringpicker.StringPickerDialog.java", "BodyUseAPI": ["kaoice.stringpicker.StringPicker.setValues(java.lang.Object)", "java.util.HashMap.get(values.getFirst().get(0))", "values.getFirst().get(int)", "kaoice.stringpicker.DataModel.getFirst()"], "Fixed commit": "f285e6a1b02c838b40cdccfeed0d8aaa7181f0a7", "Url": "https://api.github.com/repos/taiwanCHH/WheelPicker", "Date": "2015-05-10T15:25:39Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((isFile && (file != null)) && (file.exists())) { this.filePath = file.getAbsolutePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/941/buggy-version/JTree.src.com.zhangwei.smali.api.SmaliEntry.java", "BodyUseAPI": [], "Fixed commit": "a6ce3c585cdab2d4d603018d7ec856f5c9391596", "Url": "https://api.github.com/repos/zhangweihust/JTree", "Date": "2016-02-05T03:59:08Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((addRowBtn) != null) addRowBtn.setEnabled(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1856/buggy-version/src.main.java.org.sagebionetworks.web.client.widget.table.SimpleTableWidgetViewImpl.java", "BodyUseAPI": [], "Fixed commit": "529ecbd5fde5a5b4d3bb174f10b0eeb08d085c4b", "Url": "https://api.github.com/repos/dburdick/SynapseWebClient", "Date": "2014-04-03T21:26:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((storage.terms.size()) < 1) { toast(\"To get started, add some data using the menu in the top right of the screen.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5386/buggy-version/app.src.main.java.com.example.lambda.lambdaorganizer.GradeCalculator.GradeCalculatorMain.java", "BodyUseAPI": [], "Fixed commit": "e2b36045fd7c57b60a4b7b450bbc7957417d1d97", "Url": "https://api.github.com/repos/seaboyern/Lambda-Scheduler", "Date": "2017-11-29T05:04:34Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((work.getFinalGrade()) != 0) { return ((work.getName()) + \" Grade: \") + (work.getFinalGrade()); }else { return ((((work.getName()) + \" Grade: \") + (work.getFinalGrade())) + \" Grade Needed: \") + (parentCourse.calcGradeNeeded(work)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5386/buggy-version/app.src.main.java.com.example.lambda.lambdaorganizer.GradeCalculator.GradeCalculatorMain.java", "BodyUseAPI": ["GradeCalculatorObjects.Course.calcGradeNeeded(GradeCalculatorObjects.CourseWork)", "GradeCalculatorObjects.CourseWork.getFinalGrade()", "GradeCalculatorObjects.CourseWork.getName()", "GradeCalculatorObjects.CourseWork.getName()", "GradeCalculatorObjects.CourseWork.getFinalGrade()"], "Fixed commit": "e2b36045fd7c57b60a4b7b450bbc7957417d1d97", "Url": "https://api.github.com/repos/seaboyern/Lambda-Scheduler", "Date": "2017-11-29T05:04:34Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathLength == 1) { return firstOrderProbabilities; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2603/buggy-version/EnvironmentImporter.src.stats.chartdisplays.PathPredictionFrame.java", "BodyUseAPI": [], "Fixed commit": "a4c7ba053a5ea9606604883ac44d07ed37a5f467", "Url": "https://api.github.com/repos/vaisaghvt/gameAnalyzer", "Date": "2013-03-20T15:21:18Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((namesInLanguage.getAdapter()) != null) { ((sk.ab.herbsplus.activities.NameSearchActivity.NameAdapter) (namesInLanguage.getAdapter())).filter(newText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7358/buggy-version/appplus.src.main.java.sk.ab.herbsplus.activities.NameSearchActivity.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.getAdapter()", "((sk.ab.herbsplus.activities.NameSearchActivity.NameAdapter) (namesInLanguage.getAdapter())).filter(java.lang.String)"], "Fixed commit": "0104ae182634059824ed4fffb859bfb057f2a413", "Url": "https://api.github.com/repos/benadrasni/abherbs", "Date": "2017-05-23T23:20:39Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((namesInLatin.getAdapter()) != null) { ((sk.ab.herbsplus.activities.NameSearchActivity.NameAdapter) (namesInLatin.getAdapter())).filter(newText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7358/buggy-version/appplus.src.main.java.sk.ab.herbsplus.activities.NameSearchActivity.java", "BodyUseAPI": ["((sk.ab.herbsplus.activities.NameSearchActivity.NameAdapter) (namesInLatin.getAdapter())).filter(java.lang.String)", "android.support.v7.widget.RecyclerView.getAdapter()"], "Fixed commit": "0104ae182634059824ed4fffb859bfb057f2a413", "Url": "https://api.github.com/repos/benadrasni/abherbs", "Date": "2017-05-23T23:20:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (component.isPersistent()) lucee.runtime.orm.ORMUtil.getSession(pageContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5797/buggy-version/lucee-java.lucee-core.src.lucee.runtime.type.UDFRemoveProperty.java", "BodyUseAPI": [], "Fixed commit": "5fbaf0c7bf9515979042181c199685de505f8003", "Url": "https://api.github.com/repos/lucee/Lucee4", "Date": "2015-06-29T14:10:44Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (component.isPersistent()) lucee.runtime.orm.ORMUtil.getSession(pageContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5797/buggy-version/lucee-java.lucee-core.src.lucee.runtime.type.UDFSetterProperty.java", "BodyUseAPI": [], "Fixed commit": "5fbaf0c7bf9515979042181c199685de505f8003", "Url": "https://api.github.com/repos/lucee/Lucee4", "Date": "2015-06-29T14:10:44Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (component.isPersistent()) lucee.runtime.orm.ORMUtil.getSession(pageContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5797/buggy-version/lucee-java.lucee-core.src.lucee.runtime.type.UDFSetterProperty.java", "BodyUseAPI": [], "Fixed commit": "5fbaf0c7bf9515979042181c199685de505f8003", "Url": "https://api.github.com/repos/lucee/Lucee4", "Date": "2015-06-29T14:10:44Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.DBCollection.findOne(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (dbObject != null) { return com.google.common.base.Optional.fromNullable(com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(dbObject, org.atlasapi.feeds.youview.persistence.MongoYouViewPayloadHashStore.HASH_FIELD)); }else { return com.google.common.base.Optional.absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/935/buggy-version/src.main.java.org.atlasapi.feeds.youview.persistence.MongoYouViewPayloadHashStore.java", "BodyUseAPI": ["com.google.common.base.Optional.fromNullable(com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(dbObject, org.atlasapi.feeds.youview.persistence.MongoYouViewPayloadHashStore.HASH_FIELD))", "com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(com.mongodb.DBObject,java.lang.String)"], "Fixed commit": "e9eadf387e55887b0b9a25c040567a95e9a6380d", "Url": "https://api.github.com/repos/atlasapi/atlas-feeds", "Date": "2015-11-10T17:49:06Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (players.containsKey(playerId)) { players.remove(playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8381/buggy-version/Mage.src.mage.game.tournament.TournamentImpl.java", "BodyUseAPI": ["java.util.Map<java.util.UUID, mage.game.tournament.TournamentPlayer>.remove(java.util.UUID)"], "Fixed commit": "a070c5a8e13a014e3e5e168832d0b35093612a6e", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-04-06T00:09:04Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.expenx.expenx.activity.LoginActivity.isExpenxActivityLaunched)) { startActivity(new android.content.Intent(this, com.expenx.expenx.activity.ExpenxActivity.class)); com.expenx.expenx.activity.LoginActivity.isExpenxActivityLaunched = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4452/buggy-version/app.src.main.java.com.expenx.expenx.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "517ed182925fab3ee89a4ad75230dd2c7f8523dd", "Url": "https://api.github.com/repos/skaveesh/ExpenX", "Date": "2017-05-01T17:57:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.expenx.expenx.activity.LoginActivity.isExpenxActivityLaunched)) { startActivity(new android.content.Intent(this, com.expenx.expenx.activity.ExpenxActivity.class)); com.expenx.expenx.activity.LoginActivity.isExpenxActivityLaunched = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4452/buggy-version/app.src.main.java.com.expenx.expenx.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "517ed182925fab3ee89a4ad75230dd2c7f8523dd", "Url": "https://api.github.com/repos/skaveesh/ExpenX", "Date": "2017-05-01T17:57:56Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.registrator.community.components.SpringApplicationContext.getMessageSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (messageSource != null) { return messageSource.getMessage(messageKey, getMessageParameters(), locale); }else { return super.getLocalizedMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2888/buggy-version/src.main.java.org.registrator.community.exceptions.AbstractRegistratorException.java", "BodyUseAPI": ["org.springframework.context.MessageSource.getMessage(java.lang.String,java.lang.Object[],java.util.Locale)"], "Fixed commit": "19853d85539cd7344c9b0af19690decd1e0b0beb", "Url": "https://api.github.com/repos/Social-Projects/Resource-Registration-System", "Date": "2016-04-04T14:06:55Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.openhft.chronicle.bytes.Bytes<?>.readVolatileInt(bytes.readPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (net.openhft.chronicle.wire.Wires.isReady(header)) { if (net.openhft.chronicle.wire.Wires.isData(header)) return HeaderType.DATA; if (includeMetaData && (net.openhft.chronicle.wire.Wires.isReadyMetaData(header))) return HeaderType.META_DATA; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/455/buggy-version/src.main.java.net.openhft.chronicle.wire.AbstractWire.java", "BodyUseAPI": ["net.openhft.chronicle.wire.Wires.isReadyMetaData(int)", "net.openhft.chronicle.wire.Wires.isData(int)"], "Fixed commit": "4b45f211bc85a9ba9fe9a22a2805cf1643d23db7", "Url": "https://api.github.com/repos/lburgazzoli/Chronicle-Wire", "Date": "2016-04-01T11:02:48Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size == 0) { java.lang.System.out.println(\"fuck\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3691/buggy-version/DynamicDep.src.include.SentenceReader.java", "BodyUseAPI": [], "Fixed commit": "f90b4bdf8ae30cb0766a78bf8cf4494c124b54eb", "Url": "https://api.github.com/repos/biug/dymdep", "Date": "2014-10-29T01:35:15Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MacrosCCGDag.CCGTAG_MAP.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ii == null) { --size; }else { list[(j++)] = ii.intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3691/buggy-version/DynamicDep.src.include.SentenceReader.java", "BodyUseAPI": ["java.lang.Integer.intValue()"], "Fixed commit": "f90b4bdf8ae30cb0766a78bf8cf4494c124b54eb", "Url": "https://api.github.com/repos/biug/dymdep", "Date": "2014-10-29T01:35:15Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldValue instanceof com.orientechnologies.orient.core.id.ORecordId) fieldValue = ((com.orientechnologies.orient.core.id.ORecordId) (fieldValue)).getRecord();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5007/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java", "BodyUseAPI": [], "Fixed commit": "325aa148a9081e5d2997170b4b5e16d815a5fbad", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-07-28T11:25:17Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attribute.getType().name().toLowerCase().equals(EventStreamConstants.ATTR_TYPE_STRING)) { innerObject.addProperty(attribute.getName(), org.wso2.carbon.event.stream.core.internal.util.SampleEventGenerator.getSampleValue(attribute.getType())); }else if (attribute.getType().name().toLowerCase().equals(EventStreamConstants.ATTR_TYPE_BOOL)) { innerObject.addProperty(attribute.getName(), java.lang.Boolean.parseBoolean(org.wso2.carbon.event.stream.core.internal.util.SampleEventGenerator.getSampleValue(attribute.getType()))); }else { innerObject.addProperty(attribute.getName(), java.lang.Double.parseDouble(org.wso2.carbon.event.stream.core.internal.util.SampleEventGenerator.getSampleValue(attribute.getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7295/buggy-version/components.event-stream.org.wso2.carbon.event.stream.core.src.main.java.org.wso2.carbon.event.stream.core.internal.util.SampleEventGenerator.java", "BodyUseAPI": ["attribute.getType().name().toLowerCase()", "attribute.getType().name().toLowerCase().equals(EventStreamConstants.ATTR_TYPE_BOOL)", "com.google.gson.JsonObject.addProperty(attribute.getName(),boolean)", "org.wso2.carbon.databridge.commons.Attribute.getName()", "org.wso2.carbon.event.stream.core.internal.util.SampleEventGenerator.getSampleValue(attribute.getType())", "java.lang.Double.parseDouble(java.lang.String)", "org.wso2.carbon.databridge.commons.Attribute.getType()", "org.wso2.carbon.databridge.commons.Attribute.getType()", "org.wso2.carbon.event.stream.core.internal.util.SampleEventGenerator.getSampleValue(attribute.getType())", "attribute.getType().name()", "org.wso2.carbon.databridge.commons.Attribute.getName()", "com.google.gson.JsonObject.addProperty(attribute.getName(),java.lang.String)", "org.wso2.carbon.databridge.commons.Attribute.getName()", "org.wso2.carbon.databridge.commons.Attribute.getType()", "java.lang.Boolean.parseBoolean(java.lang.String)", "org.wso2.carbon.databridge.commons.Attribute.getType()", "com.google.gson.JsonObject.addProperty(attribute.getName(),double)", "org.wso2.carbon.event.stream.core.internal.util.SampleEventGenerator.getSampleValue(attribute.getType())"], "Fixed commit": "98df4d058cb5f2560c9f3f4474924c8a4026f8e8", "Url": "https://api.github.com/repos/keizer619/carbon-analytics-common", "Date": "2015-07-28T03:22:29Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.Map<java.lang.String, java.lang.Integer>>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rsvpMap == null) { rsvpMap = new java.util.HashMap<java.lang.String, java.lang.Integer>(); eventMap.put(eventId, rsvpMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6565/buggy-version/src.main.java.org.madhub.yankam.server.personaleventmanager.persistence.CoreDB.java", "BodyUseAPI": [], "Fixed commit": "82a5d34259d241319ee2e73cb40268fcbecc74f9", "Url": "https://api.github.com/repos/madhubabubits/personaleventmanager-server", "Date": "2015-07-26T20:46:37Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Reporting.choice.equals(\"0\"))) db = new DataBaseHelper(account);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7392/buggy-version/DB_Project_3.src.Reporting.java", "BodyUseAPI": [], "Fixed commit": "245e108df291a9779c49d9ba568bc13d89a23a70", "Url": "https://api.github.com/repos/jtfakult/DB_Project_3", "Date": "2017-02-26T20:52:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nomFonc != \"debut\") { Compil.Yaka.afficherErreur(\"Retourne interdit dans le main\"); return false; }else { int typeRetourVoulu = Yaka.tabIdent.chercherFonc(nomFonc).getRetour(); if (typeRetourVoulu != operande) { Compil.Yaka.afficherErreur(((((\"Mauvais type de retour pour la fonction \" + nomFonc) + \", un \") + (typeRetourVoulu == 15 ? \"ENTIER\" : \"BOOLEEN\")) + \" \ufffdtait attendu.\")); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1064/buggy-version/Compil.Fonction.java", "BodyUseAPI": ["Compil.Yaka.afficherErreur(java.lang.String)", "Yaka.tabIdent.chercherFonc(java.lang.String)", "Yaka.tabIdent.chercherFonc(nomFonc).getRetour()"], "Fixed commit": "1e7b12e43424313d416a7f5741e0968495eb8c23", "Url": "https://api.github.com/repos/miuhaki/ProjCompil", "Date": "2014-04-08T19:34:22Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((errorWord.isEmpty()) && (!(webElement.getAttribute(\"innerHTML\").isEmpty()))) { errorWord = webElement.getAttribute(\"innerHTML\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8511/buggy-version/src.main.java.org.raoxunrong.check.firefox.FirefoxSpellCheckerPluginChecker.java", "BodyUseAPI": ["org.openqa.selenium.WebElement.getAttribute(java.lang.String)"], "Fixed commit": "10c2ad2db994e33300e06c1521223f12d3a87bfb", "Url": "https://api.github.com/repos/raoxunrong/WebAcc", "Date": "2013-05-23T15:05:53Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.comment) == null) { this.comment = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4587/buggy-version/repository.src.main.java.com.softserve.edu.entity.verification.Verification.java", "BodyUseAPI": [], "Fixed commit": "4ba75c0e4d2431f9f576f14b147bc485edd5ee4d", "Url": "https://api.github.com/repos/stefandriy/calibration-devices-system", "Date": "2015-12-03T23:46:10Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.smred.stepprogressexample.MainActivity.findViewById(R.id.step_number_edit_text)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (editText != null) { try { number = java.lang.Integer.parseInt(editText.getText().toString()); } catch (java.lang.NumberFormatException nfe) { android.util.Log.e(\"Example\", (\"Could not parse \" + nfe)); } }else { android.util.Log.e(\"Example\", \"EditText is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/967/buggy-version/app.src.main.java.ru.smred.stepprogressexample.MainActivity.java", "BodyUseAPI": ["java.lang.Integer.parseInt(editText.getText().toString())", "android.widget.EditText.getText()", "editText.getText().toString()"], "Fixed commit": "e33a88305ab5b8e12f22639f5de98bce24d1c0cf", "Url": "https://api.github.com/repos/smred/StepProgressLineView", "Date": "2016-05-10T09:56:16Z"},
{"Line": "=>4129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTerminal()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4213/buggy-version/src.org.ggp.base.util.statemachine.implementation.propnet.forwardDeadReckon.ForwardDeadReckonPropnetStateMachine.java", "BodyUseAPI": [], "Fixed commit": "7e35747c76ec33236cd536d191c00f08dcd3d2f1", "Url": "https://api.github.com/repos/SanchoGGP/ggp-base", "Date": "2015-06-21T01:55:32Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (classPackageName)) && ((this.classPackageName.length()) > 0)) { fqcn = (fqcn + (this.classPackageName)) + \".\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1239/buggy-version/SmokXmlReader.src.main.java.com.xebia.smok.xml.domain.Smok.java", "BodyUseAPI": [], "Fixed commit": "0c33641c4f505283a2b1f28131b75cdb794ebf82", "Url": "https://api.github.com/repos/xebia/smok", "Date": "2011-06-30T11:39:36Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((slotCookTime[i]) != (-1)) { (slotCookTime[i])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7190/buggy-version/src.main.java.net.blay09.mods.cookingforblockheads.tile.TileOven.java", "BodyUseAPI": [], "Fixed commit": "422c9df66e8d5d685b0fa6551eef9fa01d98ced5", "Url": "https://api.github.com/repos/blay09/CookingForBlockheads", "Date": "2017-08-14T14:41:06Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentItemBurnTime) == 0) && ((furnaceBurnTime) > 0)) { return 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7190/buggy-version/src.main.java.net.blay09.mods.cookingforblockheads.tile.TileOven.java", "BodyUseAPI": [], "Fixed commit": "422c9df66e8d5d685b0fa6551eef9fa01d98ced5", "Url": "https://api.github.com/repos/blay09/CookingForBlockheads", "Date": "2017-08-14T14:41:06Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dep == null) { dep = dependenciesNode.createChild(org.jboss.forge.container.impl.AddonRepositoryImpl.DEPENDENCY_TAG_NAME); dep.attribute(org.jboss.forge.container.impl.AddonRepositoryImpl.ATTR_NAME, name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8705/buggy-version/container.src.main.java.org.jboss.forge.container.impl.AddonRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "370f4633f551331ada3d5a464eb40eaa54ea7d71", "Url": "https://api.github.com/repos/forge/core", "Date": "2013-04-01T22:06:07Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mKeyguardService) != null) { mKeyguardService.onSystemReady(); android.content.Intent i = new android.content.Intent(com.android.internal.policy.impl.keyguard.KeyguardServiceDelegate.ACTION_STATE_CHANGE); i.putExtra(com.android.internal.policy.impl.keyguard.KeyguardServiceDelegate.EXTRA_ACTIVE, bound); mScrim.getContext().sendStickyBroadcast(i); }else { android.content.Intent i = new android.content.Intent(com.android.internal.policy.impl.keyguard.KeyguardServiceDelegate.ACTION_STATE_CHANGE); i.putExtra(com.android.internal.policy.impl.keyguard.KeyguardServiceDelegate.EXTRA_ACTIVE, bound); mScrim.getContext().sendStickyBroadcast(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4589/buggy-version/policy.src.com.android.internal.policy.impl.keyguard.KeyguardServiceDelegate.java", "BodyUseAPI": [], "Fixed commit": "6558061b37a7284e7a71549983c2bc170ead2e96", "Url": "https://api.github.com/repos/VanirAOSP/frameworks_base", "Date": "2015-02-03T23:02:10Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((desColumn == startColumn) && ((playerMatrix[desRow][desColumn]) != 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7557/buggy-version/src.Pawn.java", "BodyUseAPI": [], "Fixed commit": "6f33f5a0694942f579a583b67376c92b471f5d6a", "Url": "https://api.github.com/repos/DoNgocTrinh/TechkidsChess", "Date": "2016-06-05T03:55:26Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6268/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "3e3b273400b19179e2310a5c14c466d4392e5780", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-22T02:48:55Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localDir == null) { throw new org.syncany.config.Config.ConfigException(\"Argument localDir cannot be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6195/buggy-version/syncany-lib.src.main.java.org.syncany.config.ConfigHelper.java", "BodyUseAPI": [], "Fixed commit": "4aeedaf2f1d780c57199341a83cc9ca830521fee", "Url": "https://api.github.com/repos/binwiederhier/syncany", "Date": "2014-03-05T23:33:43Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((JavaGame.enemy.size()) > 0) JavaGame.enemy.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1954/buggy-version/src.EditorLoop.java", "BodyUseAPI": [], "Fixed commit": "2affe6f64e94a9178cc068cf19b53a67bee60fac", "Url": "https://api.github.com/repos/kism3t1/java-game", "Date": "2012-05-02T20:27:11Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((JavaGame.enemy.size()) > 0) JavaGame.enemy.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1954/buggy-version/src.GameLoop.java", "BodyUseAPI": [], "Fixed commit": "2affe6f64e94a9178cc068cf19b53a67bee60fac", "Url": "https://api.github.com/repos/kism3t1/java-game", "Date": "2012-05-02T20:27:11Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String[]>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key.equals(com.sensei.search.client.servlet.PARAM_RESULT_HIT_UID)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8740/buggy-version/src.main.java.com.sensei.search.client.servlet.DefaultSenseiJSONServlet.java", "BodyUseAPI": [], "Fixed commit": "41b99b61d06764844eed886e8a57b82344e40d02", "Url": "https://api.github.com/repos/briangu/sensei", "Date": "2011-07-31T09:10:55Z"},
{"Line": "=>3113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (action != null) { mActions.add(action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6928/buggy-version/core.java.android.app.Notification.java", "BodyUseAPI": ["java.util.ArrayList<android.app.Notification.Action>.add(android.app.Notification.Action)"], "Fixed commit": "c14d5db0930fc296dddc212cf42de04eaa0d5b24", "Url": "https://api.github.com/repos/aosp-mirror/platform_frameworks_base", "Date": "2017-03-17T14:43:20Z"},
{"Line": "=>1764", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.actions[i]) != null) { that.actions[i] = this.actions[i].clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6928/buggy-version/core.java.android.app.Notification.java", "BodyUseAPI": ["android.app.Notification.Action.clone()"], "Fixed commit": "c14d5db0930fc296dddc212cf42de04eaa0d5b24", "Url": "https://api.github.com/repos/aosp-mirror/platform_frameworks_base", "Date": "2017-03-17T14:43:20Z"},
{"Line": "=>3129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actions[i]) != null) { mActions.add(actions[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6928/buggy-version/core.java.android.app.Notification.java", "BodyUseAPI": ["java.util.ArrayList<android.app.Notification.Action>.add(android.app.Notification.Action)"], "Fixed commit": "c14d5db0930fc296dddc212cf42de04eaa0d5b24", "Url": "https://api.github.com/repos/aosp-mirror/platform_frameworks_base", "Date": "2017-03-17T14:43:20Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pathname.endsWith(\"/\"))) pathname += \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8721/buggy-version/src.main.java.ch.hsr.mixtape.application.service.ServerService.java", "BodyUseAPI": [], "Fixed commit": "df7348dc14bd22519803e62754d8f389a16d9f52", "Url": "https://api.github.com/repos/mrgimo/mixtape-core", "Date": "2013-06-12T09:58:33Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((VCenterMonitor.zk_ms.isLeader()) == false) { net.juniper.contrail.vcenter.VCenterMonitorTask.s_logger.debug(\"Lost zookeeper leadership. Restarting myself\\n\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5641/buggy-version/src.net.juniper.contrail.vcenter.VCenterMonitorTask.java", "BodyUseAPI": [], "Fixed commit": "8cb0f2b76a6c42694d852947b84eb477048ba5da", "Url": "https://api.github.com/repos/Juniper/contrail-vcenter-plugin", "Date": "2015-06-19T07:37:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((element.getVarName()) != null) { if ((element.getVarName().getVarNamespace()) != null) { localNameOffset += (element.getVarName().getVarNamespace().getTextLength()) + (org.intellij.xquery.psi.impl.XQueryPsiImplUtil.SEPARATOR_LENGTH); } return new org.intellij.xquery.psi.impl.XQueryVariableReference(element, new com.intellij.openapi.util.TextRange(localNameOffset, element.getTextLength())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7364/buggy-version/src.org.intellij.xquery.psi.impl.XQueryPsiImplUtil.java", "BodyUseAPI": ["element.getVarName().getVarNamespace()", "element.getVarName().getVarNamespace()", "org.intellij.xquery.psi.impl.XQueryVarRef.getVarName()", "org.intellij.xquery.psi.impl.XQueryVarRef.getTextLength()", "element.getVarName().getVarNamespace().getTextLength()", "org.intellij.xquery.psi.impl.XQueryVarRef.getVarName()"], "Fixed commit": "ca06c06d24490d1a8f15148c1bceb759f2c4e9d3", "Url": "https://api.github.com/repos/ligasgr/intellij-xquery", "Date": "2013-07-05T13:59:47Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((folders.size()) == 0) { findViewById(R.id.divider).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/830/buggy-version/src.com.klinker.android.slackoff.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8b30e763a8053fcd0339690b79d597c2472948a9", "Url": "https://api.github.com/repos/klinker41/slackoff", "Date": "2013-12-02T00:58:08Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { findViewById(R.id.divider2).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/830/buggy-version/src.com.klinker.android.slackoff.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8b30e763a8053fcd0339690b79d597c2472948a9", "Url": "https://api.github.com/repos/klinker41/slackoff", "Date": "2013-12-02T00:58:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((specializationsCsv != null) && (!(specializationsCsv.isEmpty()))) { specializations = org.atlasapi.media.entity.Specialization.fromCsv(specializationsCsv); }else { specializations = java.util.Arrays.asList(Specialization.FILM, Specialization.TV, Specialization.RADIO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4842/buggy-version/src.main.java.org.atlasapi.search.SearchServlet.java", "BodyUseAPI": ["org.atlasapi.media.entity.Specialization.fromCsv(java.lang.String)"], "Fixed commit": "1f128c12302dec65371d53a4fa7db0f6eddc25fb", "Url": "https://api.github.com/repos/atlasapi/atlas-search", "Date": "2012-06-14T09:46:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5440/buggy-version/subsonic-android.src.github.daneren2005.dsub.util.CacheCleaner.java", "BodyUseAPI": [], "Fixed commit": "3e36ac78250fe64240121d4a17b279a566aeef28", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2013-02-28T23:26:53Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (eDataType == (EcorePackage.eINSTANCE.getEByteArray())) { localValue = XMLTypeFactory.eINSTANCE.convertBase64Binary(((byte[]) (value))); }else { localValue = EcoreFactory.eINSTANCE.convertToString(eDataType, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/328/buggy-version/core.org.eclipse.emf.texo.json.src.org.eclipse.emf.texo.json.JSONValueConverter.java", "BodyUseAPI": ["EcoreFactory.eINSTANCE.convertToString(org.eclipse.emf.ecore.EDataType,java.lang.Object)"], "Fixed commit": "3cdebba8415011c6c697c299b4c49fddc0423a62", "Url": "https://api.github.com/repos/eclipse/emf.texo", "Date": "2015-01-09T18:41:37Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sakuli.aop.SahiCommandExecutionAspect.printArgs(org.aspectj.lang.JoinPoint,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(argString.contains(\"keytool\"))) { org.sakuli.loader.BeanLoader.loadBaseActionLoader().getExceptionHandler().handleException(new org.sakuli.exceptions.SakuliInitException(error, (\"Error executing command \" + argString))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2525/buggy-version/src.core.src.main.java.org.sakuli.aop.SahiCommandExecutionAspect.java", "BodyUseAPI": ["org.sakuli.loader.BeanLoader.loadBaseActionLoader().getExceptionHandler().handleException(org.sakuli.exceptions.SakuliInitException)"], "Fixed commit": "96f2c2c2eb7f84b38b780533999fa8301fca6c48", "Url": "https://api.github.com/repos/ConSol/sakuli", "Date": "2016-02-29T10:06:35Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6327/buggy-version/src.main.java.org.logicng.datastructures.Assignment.java", "BodyUseAPI": [], "Fixed commit": "0341f2ec610efca2e118c0501dab6a84c10f82f5", "Url": "https://api.github.com/repos/logic-ng/LogicNG", "Date": "2017-07-14T07:08:02Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(contents.equals(\"\"))) { contents += \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2049/buggy-version/app.src.main.java.ahager3.calendarapp.EditFragment.java", "BodyUseAPI": [], "Fixed commit": "dfac1fc78c1d1ee2537eece77f4959436935296e", "Url": "https://api.github.com/repos/ahager3/407_HW2_CalendarApp", "Date": "2016-03-17T04:57:33Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((port) > 0) { properties.put(\"td.api.server.port\", java.lang.String.valueOf(port)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/565/buggy-version/core.src.main.java.com.treasure_data.logger.sender.HttpSender.java", "BodyUseAPI": [], "Fixed commit": "50bcea581252ba8906a2635eb506fa6bbfe8eb65", "Url": "https://api.github.com/repos/treasure-data/td-logger-java", "Date": "2013-06-16T02:57:09Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((host) != null) { properties.put(\"td.api.server.host\", host); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/565/buggy-version/core.src.main.java.com.treasure_data.logger.sender.HttpSender.java", "BodyUseAPI": [], "Fixed commit": "50bcea581252ba8906a2635eb506fa6bbfe8eb65", "Url": "https://api.github.com/repos/treasure-data/td-logger-java", "Date": "2013-06-16T02:57:09Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.android.utility.AlertDialog.activity) instanceof com.android.utility.RuntimePermissionInitializerInterface) com.android.utility.AlertDialog.activity.startActivityForResult(com.android.utility.AlertDialog.getCropIntent(intent), com.android.utility.AlertDialog.CAMERA_REQUEST); else if ((com.android.utility.AlertDialog.fragment) instanceof com.android.utility.RuntimePermissionInitializerInterface) com.android.utility.AlertDialog.fragment.startActivityForResult(com.android.utility.AlertDialog.getCropIntent(intent), com.android.utility.AlertDialog.CAMERA_REQUEST);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8517/buggy-version/utility.src.main.java.com.android.utility.AlertDialog.java", "BodyUseAPI": [], "Fixed commit": "3903229ca387a0566b1fee7f093f9e326624a3d1", "Url": "https://api.github.com/repos/pawanchauhan05/AndroidUtility", "Date": "2017-02-20T10:47:16Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.android.utility.AlertDialog.activity) instanceof com.android.utility.RuntimePermissionInitializerInterface) com.android.utility.AlertDialog.activity.startActivityForResult(com.android.utility.AlertDialog.getCropIntent(intent), com.android.utility.AlertDialog.CAMERA_REQUEST); else if ((com.android.utility.AlertDialog.fragment) instanceof com.android.utility.RuntimePermissionInitializerInterface) com.android.utility.AlertDialog.fragment.startActivityForResult(com.android.utility.AlertDialog.getCropIntent(intent), com.android.utility.AlertDialog.CAMERA_REQUEST);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8517/buggy-version/utility.src.main.java.com.android.utility.AlertDialog.java", "BodyUseAPI": [], "Fixed commit": "3903229ca387a0566b1fee7f093f9e326624a3d1", "Url": "https://api.github.com/repos/pawanchauhan05/AndroidUtility", "Date": "2017-02-20T10:47:16Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(editItem)) { android.widget.AutoCompleteTextView textName = ((android.widget.AutoCompleteTextView) (findViewById(R.id.editTextName))); ch.unibe.ese.shopnote.core.sqlite.SQLiteItemAdapter sqliteItemAdapter = new ch.unibe.ese.shopnote.core.sqlite.SQLiteItemAdapter(this, android.R.layout.simple_list_item_1, manager); textName.setAdapter(sqliteItemAdapter); textName.setText(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8648/buggy-version/Code.ShoppingList.src.ch.unibe.ese.shopnote.activities.CreateItemActivity.java", "BodyUseAPI": [], "Fixed commit": "f7ce9f62d668f99ae91819ccf828d43f8fea3edb", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2013-team8", "Date": "2013-11-11T17:02:52Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (linker.autoSaveManager.isEnabled()) { au.org.intersect.faims.android.log.FLog.e(\"error saving arch entity\", e); linker.autoSaveManager.reportError(); }else { au.org.intersect.faims.android.beanshell.DatabaseHelper.onError(linker, callback, e, \"Error trying to save arch entity\", ((\"Error found when executing save arch enitty \" + entityId) + \" onerror callback\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5914/buggy-version/faims-android-app.src.au.org.intersect.faims.android.beanshell.DatabaseHelper.java", "BodyUseAPI": ["linker.autoSaveManager.reportError()", "au.org.intersect.faims.android.beanshell.DatabaseHelper.onError(au.org.intersect.faims.android.beanshell.BeanShellLinker,au.org.intersect.faims.android.beanshell.callbacks.SaveCallback,java.lang.Exception,java.lang.String,java.lang.String)"], "Fixed commit": "004bfc28e530e8ae9fe746133b7f1610ee62c0d8", "Url": "https://api.github.com/repos/IntersectAustralia/faims-android", "Date": "2014-11-10T03:37:30Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetClass.equals(java.lang.Boolean.class)) { buf.append((\" public static BooleanMatcher<Boolean, ?> expect(boolean actual) {\\n\" + (\" return wrapped(BooleanMatcher.class, actual);\\n\" + \" }\\n\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6307/buggy-version/src.main.java.com.pivotallabs.greatexpectations.ExpectGenerator.java", "BodyUseAPI": [], "Fixed commit": "bcf4a4484f8a815229566685bcbfdf69c598eb85", "Url": "https://api.github.com/repos/PATHn/great-expectations", "Date": "2011-04-14T04:05:14Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (snippet.trim().matches(\"\")) snippet = getString(R.string.alarm);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4684/buggy-version/Code.Ass2Note.src.noteBlock.hig.noteedit.NoteEdit.java", "BodyUseAPI": [], "Fixed commit": "537d4338456d605e62945220b2e211086a1b79c3", "Url": "https://api.github.com/repos/Hywela/Noteblock", "Date": "2012-12-12T16:11:32Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textToSpeech) != null) { textToSpeech.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7079/buggy-version/app.src.main.java.com.se491.chef_ly.activity.GetCookingActivity.java", "BodyUseAPI": [], "Fixed commit": "b104c8fd6aea58cf46f27f0954c5ab9991d4f155", "Url": "https://api.github.com/repos/chef-ly/chefly_android", "Date": "2017-05-15T16:54:45Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((action != null) && (action.equals(ru.tulupov.alex.pluggedin.activities.ACTION_VIEW_STR))) { java.lang.String utl = intent.getData().toString(); presenter.showArticleOrReviewByURL(utl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5773/buggy-version/app.src.main.java.ru.tulupov.alex.pluggedin.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "315cad5972c56c0370b5f2f486f9df0414e758f0", "Url": "https://api.github.com/repos/Algresh/PluggedinAndroid", "Date": "2016-08-22T06:08:01Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getButton()) == 1) { createNewRectangle(e); startDragging(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7445/buggy-version/src.MyPanel.java", "BodyUseAPI": ["MyPanel.startDragging(java.awt.event.MouseEvent)", "MyPanel.createNewRectangle(java.awt.event.MouseEvent)"], "Fixed commit": "0f4c06f51f0b38f8ba985552be295a624f4ae3ed", "Url": "https://api.github.com/repos/kojonek2/AplikacjaOkienkowa", "Date": "2017-02-07T15:46:12Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.available()) >= (boundary.length)) { for (int i = buf_pos; i < (buf_end); i++) { for (int b = 0; b < (boundary.length); b++) { if ((buffer[(i + b)]) != (boundary[b])) break; else if (b == ((boundary.length) - 1)) { buf_bound_pos = i; return; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8059/buggy-version/src.zutil.io.BufferedBoundaryInputStream.java", "BodyUseAPI": [], "Fixed commit": "dc91d5e99235c299226d363a3277fbe3ea0b2a33", "Url": "https://api.github.com/repos/Ziver/zutil", "Date": "2016-07-13T19:29:38Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (resultData != null) { b.append(\": \"); b.append(resultData.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1632/buggy-version/src.org.devtcg.rojocam.util.DetachableResultReceiver.java", "BodyUseAPI": ["java.lang.StringBuilder.append(resultData.toString())", "android.os.Bundle.toString()"], "Fixed commit": "0a57fad7f7f629058aea32d6cd2d75ab9a41f355", "Url": "https://api.github.com/repos/jasta/rojocam", "Date": "2011-12-11T20:42:54Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) == null) { adapter = new com.bun.popupnotifications.AppSelectionAdapter(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1878/buggy-version/PopupNotifications.src.com.bun.popupnotifications.AppSelectionActivity.java", "BodyUseAPI": [], "Fixed commit": "f8fb56ec5aeae5f34acb6dfca11e534af152bfe1", "Url": "https://api.github.com/repos/vikrammiddha/PopupNotifications", "Date": "2013-10-04T18:16:18Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sensorhub.api.sensor.ISensorDataInterface.getLatestRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (latestRecord != null) dataStruct.setData(latestRecord);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/721/buggy-version/sensorhub-webui-core.src.main.java.org.sensorhub.ui.SensorAdminPanel.java", "BodyUseAPI": ["net.opengis.swe.v20.DataComponent.setData(net.opengis.swe.v20.DataBlock)"], "Fixed commit": "80ff368cf35d2e307882fb167b53246f994bee42", "Url": "https://api.github.com/repos/opensensorhub/osh-core", "Date": "2016-07-22T02:27:07Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.Username.getText().toString()", "this.Password.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkValidity(username, password)) { return errorMessage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1844/buggy-version/app.src.main.java.com.example.course.easylease.Login.java", "BodyUseAPI": [], "Fixed commit": "f42d37e91a201bd573bc2909b6b30135d63947d1", "Url": "https://api.github.com/repos/FrankHYB/Easylease", "Date": "2016-03-28T01:47:53Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<?>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((entry.getValue()) instanceof java.math.BigDecimal) { entry.setValue(entry.getValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5626/buggy-version/nuxeo-admin-center.nuxeo-admin-center.src.main.java.org.nuxeo.ecm.admin.setup.SetupWizardActionBean.java", "BodyUseAPI": ["java.util.Map.Entry.setValue(java.lang.String)", "java.util.Map.Entry.getValue()", "java.lang.Object.toString()"], "Fixed commit": "123e4fb2e625c839c58a8b7e3a47d07f9e096df1", "Url": "https://api.github.com/repos/nuxeo/nuxeo-features", "Date": "2014-10-29T10:52:42Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((graph.getSubpathways()) != null) { for (org.reactome.web.diagram.data.graph.raw.SubpathwayRaw subpathway : graph.getSubpathways()) { org.reactome.web.diagram.data.Subpathway sp = org.reactome.web.diagram.data.DatabaseObjectFactory.getOrCreateDatabaseObject(subpathway); for (java.lang.Long event : subpathway.getEvents()) { sp.addContainedEvent(((org.reactome.web.diagram.data.ReactionLikeEvent) (content.getDatabaseObject(event)))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6336/buggy-version/src.main.java.org.reactome.web.diagram.data.DiagramContentFactory.java", "BodyUseAPI": ["org.reactome.web.diagram.data.graph.raw.Graph.getSubpathways()"], "Fixed commit": "09dde2e4901c23f938f02586b1b019354208dea8", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2015-07-17T10:01:19Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { int position = savedInstanceState.getInt(\"position\"); mFragmentB.updateArticleView(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2353/buggy-version/app.src.main.java.com.example.myapplication.flexibleUI.NewsActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "2adc56b771dd2cf50fab0c34c5a935d65fc10dc6", "Url": "https://api.github.com/repos/fontjuna/Teachers", "Date": "2017-08-19T08:10:23Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.mIsDefaultDataSwitchRequested) && (registerForCallEndOnActiveCall(s))) { android.telephony.Rlog.d(com.android.internal.telephony.dataconnection.DctController.LOG_TAG, \"Voice call in progress, notify failure\"); errorEx = new java.lang.RuntimeException(\"PS ATTACH failed\"); }else { com.android.internal.os.SomeArgs args = com.android.internal.os.SomeArgs.obtain(); args.arg1 = s; args.arg2 = true; sendMessageDelayed(obtainMessage(com.android.internal.telephony.dataconnection.DctController.EVENT_DELAYED_RETRY, args), ATTACH_RETRY_DELAY); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7607/buggy-version/src.java.com.android.internal.telephony.dataconnection.DctController.java", "BodyUseAPI": [], "Fixed commit": "f73d113b736ca9cfbd234f42b97848a0567e42a7", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2015-09-25T09:45:35Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentDemand) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5922/buggy-version/app.src.main.java.neeedo.imimaprx.htw.de.neeedo.fragments.SingleDemandFragmentSwiper.java", "BodyUseAPI": [], "Fixed commit": "0c74e0cbdcae93ee1d34e5a4b75be367d20954ea", "Url": "https://api.github.com/repos/neeedo/neeedo-android", "Date": "2015-07-15T16:28:38Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentOffer) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5922/buggy-version/app.src.main.java.neeedo.imimaprx.htw.de.neeedo.fragments.SingleOfferFragment.java", "BodyUseAPI": [], "Fixed commit": "0c74e0cbdcae93ee1d34e5a4b75be367d20954ea", "Url": "https://api.github.com/repos/neeedo/neeedo-android", "Date": "2015-07-15T16:28:38Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sikuli.script.Region.exists(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lingqufujian != null) { region.click(Common.QUE_DING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4109/buggy-version/src.main.java.com.peace.auto.bl.task.Mail.java", "BodyUseAPI": [], "Fixed commit": "90bed510584b67cd212f2a46d33a8fab5d05207c", "Url": "https://api.github.com/repos/peace0phmind/blauto", "Date": "2016-07-04T00:27:59Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.bootcamp.fiftytwo.network.ParseUtils.isSelf(player))) { gameViewManagerActivity.addPlayersToView(getList(player)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3734/buggy-version/app.src.main.java.org.bootcamp.fiftytwo.network.ParseUtils.java", "BodyUseAPI": ["org.bootcamp.fiftytwo.activities.GameViewManagerActivity.addPlayersToView(getList(player))", "org.bootcamp.fiftytwo.network.ParseUtils.3.getList(org.bootcamp.fiftytwo.models.User)"], "Fixed commit": "96c09eee36c351c7729eb48cb9cc975e10565f5b", "Url": "https://api.github.com/repos/BootCampers/JustCards", "Date": "2016-11-28T01:06:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m > k) { return (m / k) + ((m % k) == 0 ? 0 : 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7653/buggy-version/src.FacebookHackerCup2017.SolutionA.java", "BodyUseAPI": [], "Fixed commit": "f2aab6fc322b3f11c2c1744a5aa728be0c1aeb08", "Url": "https://api.github.com/repos/asiunov/contests", "Date": "2017-01-21T22:52:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((movie.getDirectors().size()) > 0) { android.util.Log.v(\"movie director: \", movie.getDirectors().get(0).getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3597/buggy-version/app.src.main.java.com.epicodus.filmexplorer.adapters.MovieListAdapter.java", "BodyUseAPI": ["android.util.Log.v(java.lang.String,movie.getDirectors().get(0).getName())", "movie.getDirectors().get(int)", "movie.getDirectors().get(0).getName()", "com.epicodus.filmexplorer.models.Movie.getDirectors()"], "Fixed commit": "c7ac58252cb40457a00c6bb64240c706afcbfff0", "Url": "https://api.github.com/repos/annarbecker/FilmExplorer", "Date": "2016-04-28T17:09:52Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cookieStore) != null) { httpClient.setCookieStore(cookieStore); }else { if (!(recursiveEnter)) { recursiveEnter = true; emptyRequest(); if ((cookieStore) != null) { httpClient.setCookieStore(cookieStore); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5292/buggy-version/app.src.main.java.com.danilov.supermanga.core.repository.special.CloudFlareBypassEngine.java", "BodyUseAPI": [], "Fixed commit": "ef4f96ced01dae44536b3a4abdea2a8f3d67ddbb", "Url": "https://api.github.com/repos/SammyVimes/manga", "Date": "2016-03-20T19:05:13Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["deploymentConfiguration.getProviders().getOpenstack()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((openstackProvider.getPrimaryAccount()) != null) { com.netflix.spinnaker.halyard.config.model.v1.providers.openstack.OpenstackAccount openstackAccount = ((com.netflix.spinnaker.halyard.config.model.v1.providers.openstack.OpenstackAccount) (accountService.getProviderAccount(deploymentConfiguration.getName(), \"openstack\", openstackProvider.getPrimaryAccount()))); java.lang.String firstRegion = org.apache.commons.lang3.StringUtils.substringBefore(openstackAccount.getRegions(), \",\"); bindings.put(\"openstack.default.region\", firstRegion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5863/buggy-version/halyard-deploy.src.main.java.com.netflix.spinnaker.halyard.deploy.spinnaker.v1.profile.DeckProfile.java", "BodyUseAPI": ["com.netflix.spinnaker.halyard.config.model.v1.providers.openstack.OpenstackProvider.getPrimaryAccount()", "com.netflix.spinnaker.halyard.config.services.v1.AccountService.getProviderAccount(deploymentConfiguration.getName(),java.lang.String,openstackProvider.getPrimaryAccount())"], "Fixed commit": "90978e3044bd9dc94307effdc3bda4e9e88d80d8", "Url": "https://api.github.com/repos/emjburns/halyard", "Date": "2017-03-03T00:13:34Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sy <= 0) { sy = ((metrics.viewport[3]) - (java.lang.Math.min(((metrics.viewport[3]) - 1), padYpx))) / ((metrics.size.data[1]) + padYgu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7081/buggy-version/src.org.graphstream.ui.swingViewer.util.DefaultCamera.java", "BodyUseAPI": [], "Fixed commit": "1b1ebc69408b2fd986b454151bbe36a6f8bd7c3b", "Url": "https://api.github.com/repos/kitskub/gs-core", "Date": "2015-10-26T11:34:24Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sx <= 0) { sx = ((metrics.viewport[2]) - (java.lang.Math.min(((metrics.viewport[2]) - 1), padXpx))) / ((metrics.size.data[0]) + padXgu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7081/buggy-version/src.org.graphstream.ui.swingViewer.util.DefaultCamera.java", "BodyUseAPI": [], "Fixed commit": "1b1ebc69408b2fd986b454151bbe36a6f8bd7c3b", "Url": "https://api.github.com/repos/kitskub/gs-core", "Date": "2015-10-26T11:34:24Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inputText.length()) == 0) { android.widget.Toast.makeText(getApplicationContext(), \"Please enter a post\", Toast.LENGTH_LONG).show(); }else { recordLocationAndSavePost(currentLocation, inputText); setListView(currentLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/361/buggy-version/app.src.main.java.com.orbital2015.mingle.NearbyActivity.java", "BodyUseAPI": ["com.orbital2015.mingle.NearbyActivity.8.recordLocationAndSavePost(android.location.Location,java.lang.String)"], "Fixed commit": "d18b500d1fbc45faa239f595dbd1511bafa118ac", "Url": "https://api.github.com/repos/HooDeLin/Mingle", "Date": "2015-07-31T04:35:29Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isRefreshed) == true) { if ((refDialog) != null) { refDialog = null; } refDialog = Utility.WaitProgressFragment.newInstance(); refDialog.show(getFragmentManager(), \"Wait\"); }else { if ((myprogressDialog) != null) { myprogressDialog = null; } myprogressDialog = Utility.ProgressDialogFragment.newInstance(); myprogressDialog.show(getFragmentManager(), \"Wait\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3859/buggy-version/attini.src.main.java.com.zevenpooja.attini.Home.java", "BodyUseAPI": [], "Fixed commit": "c349c91fe3aec326b0c203a8a14e02b50976caac", "Url": "https://api.github.com/repos/poojagaonkar/StudioAttDev", "Date": "2016-04-28T09:41:00Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((refDialog) != null) { refDialog.dismiss(); }else if ((myprogressDialog) != null) { myprogressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3859/buggy-version/attini.src.main.java.com.zevenpooja.attini.Home.java", "BodyUseAPI": [], "Fixed commit": "c349c91fe3aec326b0c203a8a14e02b50976caac", "Url": "https://api.github.com/repos/poojagaonkar/StudioAttDev", "Date": "2016-04-28T09:41:00Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inputOpen(net.minecraftforge.common.util.ForgeDirection.getOrientation(i)))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4696/buggy-version/common.buildcraft.transport.PipeTransportPower.java", "BodyUseAPI": [], "Fixed commit": "ff60b8c8931abe6823dcfdc2ab29e54b474edd69", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2015-02-22T21:45:11Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((c1 == null) || (c2 == null)) return java.lang.Double.NaN;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8362/buggy-version/src.clldsystem.esa.ESAAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "d6d0cfc342382748d43c23d8de53ce0ada913bd4", "Url": "https://api.github.com/repos/ticcky/esalib", "Date": "2012-10-07T09:02:19Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newCv.count()) > 0) return newCv; else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8362/buggy-version/src.clldsystem.esa.ESAAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "d6d0cfc342382748d43c23d8de53ce0ada913bd4", "Url": "https://api.github.com/repos/ticcky/esalib", "Date": "2012-10-07T09:02:19Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(entry.getKey().equalsIgnoreCase(HttpHeaders.CONTENT_LENGTH))) { responseEx.addHeader(entry.getKey(), java.lang.String.valueOf(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1397/buggy-version/common.common-rest.src.main.java.io.servicecomb.common.rest.AbstractRestInvocation.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<java.lang.Object>>.getKey()", "io.servicecomb.foundation.vertx.http.HttpServletResponseEx.addHeader(java.lang.String,java.lang.String)"], "Fixed commit": "598f659ec8334a226992d4833965a3b1bdab3216", "Url": "https://api.github.com/repos/jeho0815/ServiceComb-Java-Chassis", "Date": "2017-11-06T12:20:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(deletablePoints.isEmpty())) { regattaResultDto.getPointListWithoutWorstRace().addAll(deletablePoints.subList(0, (ignoreWorstRace ? (deletablePoints.size()) - 1 : deletablePoints.size()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7735/buggy-version/src.main.java.de.klinger.adw.controller.ResultController.java", "BodyUseAPI": ["regattaResultDto.getPointListWithoutWorstRace().addAll(java.util.List<java.lang.Integer>)", "java.util.List<java.lang.Integer>.subList(int,int)", "java.util.List<java.lang.Integer>.size()", "java.util.List<java.lang.Integer>.size()"], "Fixed commit": "06792fa564d9c6ee8a1905e2fa8ff7781777274d", "Url": "https://api.github.com/repos/klingerr/JRegatta", "Date": "2017-05-10T08:05:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newNode.getArea()) > (largestAreaNonTerminalNodeList.get(0).getArea())) { largestAreaNonTerminalNodeList.removeAll(largestAreaNonTerminalNodeList); largestAreaNonTerminalNodeList.add(newNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8713/buggy-version/src.Main.NodeList.java", "BodyUseAPI": ["java.util.ArrayList<Main.Nodes>.removeAll(java.util.ArrayList<Main.Nodes>)", "java.util.ArrayList<Main.Nodes>.add(Main.Nodes)"], "Fixed commit": "af09a5be774b3b08f1e569d41ce6f37319a80216", "Url": "https://api.github.com/repos/jwchong93/CircuitProfiler", "Date": "2016-11-11T18:41:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newNode.getArea()) < (smallestAreaTerminalNodeList.get(0).getArea())) { smallestAreaTerminalNodeList.removeAll(smallestAreaTerminalNodeList); smallestAreaTerminalNodeList.add(newNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8713/buggy-version/src.Main.NodeList.java", "BodyUseAPI": ["java.util.ArrayList<Main.Nodes>.removeAll(java.util.ArrayList<Main.Nodes>)", "java.util.ArrayList<Main.Nodes>.add(Main.Nodes)"], "Fixed commit": "af09a5be774b3b08f1e569d41ce6f37319a80216", "Url": "https://api.github.com/repos/jwchong93/CircuitProfiler", "Date": "2016-11-11T18:41:35Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nsdb.univer.dataadapter.ProfessorDataAdapter.getView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rlv.isRefreshing()) rlv.completeRefreshing();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4650/buggy-version/src.com.nsdb.univer.dataadapter.ProfessorDataAdapter.java", "BodyUseAPI": ["com.woozzu.android.widget.RefreshableListView.completeRefreshing()"], "Fixed commit": "63ecd32b85c0a8154a81bb9c17dad426d8cce3c9", "Url": "https://api.github.com/repos/nsdb/Univer", "Date": "2012-10-28T07:10:30Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nsdb.univer.dataadapter.BookDataAdapter.getView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rlv.isRefreshing()) rlv.completeRefreshing();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4650/buggy-version/src.com.nsdb.univer.dataadapter.BookDataAdapter.java", "BodyUseAPI": ["com.woozzu.android.widget.RefreshableListView.completeRefreshing()"], "Fixed commit": "63ecd32b85c0a8154a81bb9c17dad426d8cce3c9", "Url": "https://api.github.com/repos/nsdb/Univer", "Date": "2012-10-28T07:10:30Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((root) == null) { root = new at.tugraz.ist.catroid.formulaeditor.FormulaElement(at.tugraz.ist.catroid.formulaeditor.FormulaElement.ElementType.VALUE, \"0 \", null); textRepresentation = \"0 \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3776/buggy-version/catroid.src.at.tugraz.ist.catroid.formulaeditor.Formula.java", "BodyUseAPI": [], "Fixed commit": "dc8785cb5de5b77d0edbf21da6cc0f814245f430", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-22T17:53:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == null) { root = new at.tugraz.ist.catroid.formulaeditor.FormulaElement(at.tugraz.ist.catroid.formulaeditor.FormulaElement.ElementType.VALUE, \"0 \", null); textRepresentation = \"0 \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3776/buggy-version/catroid.src.at.tugraz.ist.catroid.formulaeditor.Formula.java", "BodyUseAPI": [], "Fixed commit": "dc8785cb5de5b77d0edbf21da6cc0f814245f430", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-22T17:53:03Z"},
{"Line": "=>829", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastLine == (backend.Storage.PARAM_DOES_NOT_EXIST)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/433/buggy-version/src.backend.Storage.java", "BodyUseAPI": [], "Fixed commit": "51cfe39603c7c97a4f26dd30c941d9a38cc75c13", "Url": "https://api.github.com/repos/cs2103aug2015-w15-2j/WhatToDo", "Date": "2015-10-20T14:57:07Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastLine == (backend.Storage.PARAM_DOES_NOT_EXIST)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/433/buggy-version/src.backend.Storage.java", "BodyUseAPI": [], "Fixed commit": "51cfe39603c7c97a4f26dd30c941d9a38cc75c13", "Url": "https://api.github.com/repos/cs2103aug2015-w15-2j/WhatToDo", "Date": "2015-10-20T14:57:07Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentFragment) != null) { if (currentFragment.equals(com.sa7i7alboukhari.MainActivity.ADD_COMMENT_FRAGMENT)) currentFragment = com.sa7i7alboukhari.MainActivity.COMMENTS_FRAGMENT; else if (currentFragment.equals(com.sa7i7alboukhari.MainActivity.COMMENTS_FRAGMENT)) currentFragment = com.sa7i7alboukhari.MainActivity.AHADITH_FRAGMENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6404/buggy-version/Sa7i7AlBoukhari.src.com.sa7i7alboukhari.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5b8bcc9716e5511881ee7e21e8228cbd75a65ea4", "Url": "https://api.github.com/repos/SuperHich/Sa7i7AlBoukhari", "Date": "2014-08-27T23:41:44Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8452/buggy-version/src.main.java.ru.tehkode.permissions.bukkit.commands.GroupCommands.java", "BodyUseAPI": [], "Fixed commit": "272c565d1ef72832cce72ded51fb9c537c34bc0b", "Url": "https://api.github.com/repos/lycano/PermissionsEx", "Date": "2011-10-01T15:43:13Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((format.getMimeType()) != null) && (!(format.getMimeType().isEmpty()))) { formats.add(format.getMimeType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2333/buggy-version/dcs-packaging-tool.dcs-packaging-tool-model.src.main.java.org.dataconservancy.packaging.tool.model.ipm.FileInfo.java", "BodyUseAPI": [], "Fixed commit": "af089ab834d22522e2a9123608de16a557c32df2", "Url": "https://api.github.com/repos/emetsger/dcs", "Date": "2015-11-11T20:16:19Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((format.getId()) != null) && (!(format.getId().isEmpty()))) { formats.add(createFormatURIString(format)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2333/buggy-version/dcs-packaging-tool.dcs-packaging-tool-model.src.main.java.org.dataconservancy.packaging.tool.model.ipm.FileInfo.java", "BodyUseAPI": [], "Fixed commit": "af089ab834d22522e2a9123608de16a557c32df2", "Url": "https://api.github.com/repos/emetsger/dcs", "Date": "2015-11-11T20:16:19Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mPreviousTool) == null) && (((tool.getToolType()) == (org.catrobat.paintroid.tools.ToolType.MOVE)) || ((tool.getToolType()) == (org.catrobat.paintroid.tools.ToolType.ZOOM)))) { this.mCurrentTool = org.catrobat.paintroid.tools.ToolFactory.createTool(mainActivity, ToolType.BRUSH); }else { this.mCurrentTool = tool; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4732/buggy-version/Paintroid.src.org.catrobat.paintroid.ui.Statusbar.java", "BodyUseAPI": [], "Fixed commit": "4d714e2e19e5c77f3a9c826dd5098495c7ff4d58", "Url": "https://api.github.com/repos/Catrobat/Paintroid", "Date": "2013-03-16T17:47:08Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((tool.getToolType()) == (org.catrobat.paintroid.tools.ToolType.MOVE)) && ((mCurrentTool.getToolType()) == (org.catrobat.paintroid.tools.ToolType.ZOOM))) || (((tool.getToolType()) == (org.catrobat.paintroid.tools.ToolType.ZOOM)) && ((mCurrentTool.getToolType()) == (org.catrobat.paintroid.tools.ToolType.MOVE)))) { }else { mPreviousTool = null; setToolSwitchBackground(R.drawable.icon_menu_move); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4732/buggy-version/Paintroid.src.org.catrobat.paintroid.ui.Statusbar.java", "BodyUseAPI": [], "Fixed commit": "4d714e2e19e5c77f3a9c826dd5098495c7ff4d58", "Url": "https://api.github.com/repos/Catrobat/Paintroid", "Date": "2013-03-16T17:47:08Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rowBounds.getLimit()) == 0) { return pageSql.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6029/buggy-version/union-dao.src.main.java.xyz.appint.union.dao.dao.PaginationInterceptor.java", "BodyUseAPI": [], "Fixed commit": "b136037dd2b0a459b711e25e9f1715a4d08d030b", "Url": "https://api.github.com/repos/xyz-appint/union", "Date": "2016-05-17T05:43:35Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (com.tsungweiho.intelligentpowersaving.MainActivity.getContext())) ((com.tsungweiho.intelligentpowersaving.MainActivity) (com.tsungweiho.intelligentpowersaving.MainActivity.getContext())).setIfShowErrorMessage(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2710/buggy-version/IntelligentPowerSaving.app.src.main.java.com.tsungweiho.intelligentpowersaving.utils.NetworkUtilities.java", "BodyUseAPI": [], "Fixed commit": "19bfc8dbca945f3cd1647d2844e807326a4123e7", "Url": "https://api.github.com/repos/twho/iPower-Saving-Android", "Date": "2017-03-10T06:18:27Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((((worldObj.getRedstonePower(pos, EnumFacing.UP)) == 0) || ((worldObj.getRedstonePower(pos, EnumFacing.DOWN)) == 0)) || ((worldObj.getRedstonePower(pos, EnumFacing.NORTH)) == 0)) || ((worldObj.getRedstonePower(pos, EnumFacing.SOUTH)) == 0)) || ((worldObj.getRedstonePower(pos, EnumFacing.WEST)) == 0)) || ((worldObj.getRedstonePower(pos, EnumFacing.EAST)) == 0)) { outputEnergy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5671/buggy-version/src.main.java.com.vanhal.progressiveautomation.entities.capacitor.TileCapacitor.java", "BodyUseAPI": [], "Fixed commit": "ec6eb4318d24e7b88deb2e5974a64b13abb559b1", "Url": "https://api.github.com/repos/ToadsworthLP/ProgressiveAutomation", "Date": "2017-01-29T13:24:39Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sourcepage.equals(\"../index.jsp\")) { this.rolle = \"Kunde\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2613/buggy-version/src.project.loginCookie.java", "BodyUseAPI": [], "Fixed commit": "c6922254c9a0299d06291161015ad4d51e32500d", "Url": "https://api.github.com/repos/mbohnsack/WebShop", "Date": "2015-11-04T09:43:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(film.getCoverName().equals(\"\"))) { preparedStatement.setString(8, film.getCoverName()); }else { preparedStatement.setString(8, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7181/buggy-version/src.com.dao.jdbc.FilmJDBCDAO.java", "BodyUseAPI": ["com.videoondemand.model.Film.getCoverName()", "java.sql.PreparedStatement.setString(int,film.getCoverName())"], "Fixed commit": "b89de58d596ff61ab31428beaa3ebf516d12f5d6", "Url": "https://api.github.com/repos/AndreaValenziano/VideoOnDemand", "Date": "2017-12-15T00:34:09Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type == (com.alibaba.fastjson.JSON.class)) || (type == (com.alibaba.fastjson.JSONObject.class))) { return ((T) (parser.parse())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2481/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "1ca08a21902da828f3d4700692f60e1a13446dc7", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2014-11-19T03:38:21Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(addedThisProjection)) { projections.add(projection()); addedThisProjection = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1715/buggy-version/forsuredbapi.src.main.java.com.fsryan.forsuredb.api.Resolver.java", "BodyUseAPI": [], "Fixed commit": "22e6aad86d531a97f5d74bbcff8b31456b10792a", "Url": "https://api.github.com/repos/ryansgot/forsuredbcompiler", "Date": "2016-11-13T10:34:41Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.internal.collections.runtime.ListSequence.fromList(myParentPath).findLast(jetbrains.mps.internal.collections.runtime.IWhereFilter<org.jetbrains.mps.openapi.model.SNode>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (topExp == null) { topExp = myExpression; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1253/buggy-version/languages.baseLanguage.baseLanguage.source_gen.jetbrains.mps.baseLanguage.behavior.ParenthesisUtil.java", "BodyUseAPI": [], "Fixed commit": "13c121bc2314d30e67209865f694ec6e8c2badd5", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2014-09-08T13:29:28Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gravity == (com.staticbloc.widgets.BubbleView.Decoration.DecorationGravity.END)) { contentLp.width = LayoutParams.WRAP_CONTENT; }else if (gravity == (com.staticbloc.widgets.BubbleView.Decoration.DecorationGravity.BOTTOM)) { decoLp.weight = 0; decoLp.height = LayoutParams.WRAP_CONTENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8923/buggy-version/library.src.main.java.com.staticbloc.widgets.BubbleView.java", "BodyUseAPI": [], "Fixed commit": "6f81a113ac33f5453386dc9c33a67a52583eccf9", "Url": "https://api.github.com/repos/eygraber/widgets", "Date": "2015-03-11T07:27:47Z"},
{"Line": "=>754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ws.nmathe.saber.Main.getDBDriver().getScheduleCollection().find(eq(\"_id\", cId)).first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(doc.containsKey(\"rsvp_options\"))) { doc.append(\"rsvp_options\", options); ws.nmathe.saber.Main.getDBDriver().getScheduleCollection().replaceOne(eq(\"_id\", cId), doc); }else { ws.nmathe.saber.Main.getDBDriver().getScheduleCollection().updateOne(eq(\"_id\", cId), set(\"rsvp_options\", options)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2915/buggy-version/src.main.java.ws.nmathe.saber.core.schedule.ScheduleManager.java", "BodyUseAPI": ["ws.nmathe.saber.Main.getDBDriver().getScheduleCollection().replaceOne(eq(\"_id\", cId),org.bson.Document)", "org.bson.Document.append(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "a30628e2d5aabdec58204a3ba19d0684633e0325", "Url": "https://api.github.com/repos/notem/Saber-Bot", "Date": "2017-09-04T16:22:49Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((javax.swing.JOptionPane.showConfirmDialog(null, \"Are you shure?\", Constants.APP_NAME, javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE)) == (javax.swing.JOptionPane.YES_OPTION)) { if ((connectionsTable.getSelectedRow()) >= 0) { remotemanager.RemoteManager.remoteItems.remove(connectionsTable.getSelectedRow()); remotemanager.RemoteManager.writeConnectionsToXML(Constants.ITEMS_FILENAME); loadRemoteItems(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7808/buggy-version/src.remotemanager.RemoteManager.java", "BodyUseAPI": [], "Fixed commit": "8103fde65ee32b3f91fe4752ded4687f7dc21fb5", "Url": "https://api.github.com/repos/d1v0id/RemoteManager", "Date": "2014-04-21T07:45:06Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { obj = com.coderyuan.models.ApiResultManager.getErrorResult(ApiResultManager.ErrorTypes.UNKNOWN_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/772/buggy-version/src.main.java.com.coderyuan.utils.JsonUtil.java", "BodyUseAPI": [], "Fixed commit": "a47251d08d2786dc68fefab2d1ad4769d0cd4fb2", "Url": "https://api.github.com/repos/yuanguozheng/CoderyuanApiLib", "Date": "2015-08-06T11:19:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(line.contains(\"0\"))) || (line.contains(\"1\"))) { return lines; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/688/buggy-version/src.foogame.TPNInput.java", "BodyUseAPI": [], "Fixed commit": "73d24ca7c90ef83edc8f55d7fa2e69c8ed475f77", "Url": "https://api.github.com/repos/raptortech-js/Tak-AI", "Date": "2017-01-27T18:30:51Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kasirgalabs.etumulator.processor.RegisterFile.getValue(registerVisitor.visit(ctx.rm()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (right == 0) { registerFile.setValue(destRegister, 0); }else { registerFile.setValue(destRegister, java.lang.Integer.divideUnsigned(left, right)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2948/buggy-version/src.main.java.com.kasirgalabs.etumulator.visitor.MultiplyAndDivideVisitor.java", "BodyUseAPI": ["com.kasirgalabs.etumulator.processor.RegisterFile.setValue(java.lang.String,int)", "java.lang.Integer.divideUnsigned(int,int)"], "Fixed commit": "06a05780684877d30fa435c9b9a9974fcfa3c524", "Url": "https://api.github.com/repos/kasirgalabs/ETUmulator", "Date": "2017-05-11T12:24:39Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kasirgalabs.etumulator.processor.RegisterFile.getValue(registerVisitor.visit(ctx.rm()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (right == 0) { registerFile.setValue(destRegister, 0); }else { registerFile.setValue(destRegister, (left / right)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2948/buggy-version/src.main.java.com.kasirgalabs.etumulator.visitor.MultiplyAndDivideVisitor.java", "BodyUseAPI": ["com.kasirgalabs.etumulator.processor.RegisterFile.setValue(java.lang.String,int)"], "Fixed commit": "06a05780684877d30fa435c9b9a9974fcfa3c524", "Url": "https://api.github.com/repos/kasirgalabs/ETUmulator", "Date": "2017-05-11T12:24:39Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == n) right[pos] = n - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9209/buggy-version/src.area.LargestRectangleInHistogram.java", "BodyUseAPI": [], "Fixed commit": "8230f8aa7a4e24281edc9fef861b304e27af8e88", "Url": "https://api.github.com/repos/cserspring/leetcode", "Date": "2016-01-02T14:39:12Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (-1)) left[pos] = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9209/buggy-version/src.area.LargestRectangleInHistogram.java", "BodyUseAPI": [], "Fixed commit": "8230f8aa7a4e24281edc9fef861b304e27af8e88", "Url": "https://api.github.com/repos/cserspring/leetcode", "Date": "2016-01-02T14:39:12Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled) descriptor.setValue(BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE); else descriptor.setValue(BluetoothGattDescriptor.DISABLE_NOTIFICATION_VALUE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7883/buggy-version/app.src.main.java.com.berry_med.spo2_ble.BluetoothLeService.java", "BodyUseAPI": [], "Fixed commit": "6096558e15a1e095c17c7fa709e8d708f4d8b22e", "Url": "https://api.github.com/repos/zh2x/SpO2-BLE-for-Android", "Date": "2015-10-19T10:14:05Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.model.getVehicleTypeId()) != (org.invenzzia.helium.data.interfaces.IIdentifiable.NEUTRAL_ID)) { this.formScanner.setObject(\"vehicleType\", this.vehicleTypeSelectionModel.findById(this.model.getVehicleTypeId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9230/buggy-version/opentrans-lightweight.src.main.java.org.invenzzia.opentrans.lightweight.ui.tabs.vehicles.VehicleEditorController.java", "BodyUseAPI": ["org.invenzzia.opentrans.visitons.data.Vehicle.VehicleRecord.getVehicleTypeId()", "org.invenzzia.opentrans.lightweight.model.selectors.VehicleTypeSelectionModel.findById(this.model.getVehicleTypeId())", "org.invenzzia.opentrans.lightweight.controllers.IFormScanner.setObject(java.lang.String,this.vehicleTypeSelectionModel.findById(this.model.getVehicleTypeId()))"], "Fixed commit": "fa68798b2fbd31a283b1ebff3cc88674b7cf0249", "Url": "https://api.github.com/repos/zyxist/opentrans", "Date": "2013-06-11T16:39:47Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.getBytes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bytes.length) > 0) { requestInfo.entity = new com.jsonrpclib.JsonInputStreamEntity(new java.io.ByteArrayInputStream(bytes), bytes.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7835/buggy-version/src.com.jsonrpclib.controllers.JsonSimplePostController.java", "BodyUseAPI": [], "Fixed commit": "e42ca0ebaec2b1c16ac60ea88b06d5c2a6fe5ff5", "Url": "https://api.github.com/repos/kubatatami/JsonCallbacks", "Date": "2013-12-09T10:27:57Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getArgs()) != null) { for (java.lang.Object arg : request.getArgs()) { nameValuePairs.add(new org.apache.http.message.BasicNameValuePair(request.getParamNames()[i], (arg == null ? \"\" : arg.toString()))); i++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7835/buggy-version/src.com.jsonrpclib.controllers.JsonController.java", "BodyUseAPI": ["com.jsonrpclib.JsonRequestInterface.getParamNames()", "java.util.List<org.apache.http.NameValuePair>.add(org.apache.http.message.BasicNameValuePair)", "com.jsonrpclib.JsonRequestInterface.getArgs()"], "Fixed commit": "e42ca0ebaec2b1c16ac60ea88b06d5c2a6fe5ff5", "Url": "https://api.github.com/repos/kubatatami/JsonCallbacks", "Date": "2013-12-09T10:27:57Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((number.length()) < 10) { java.lang.System.out.println((\"Tried to send message to improper number: \" + number)); }else { boolean properFormat = true; for (int i = 0; i < (number.length()); i++) { int asciiCode = ((int) (number.charAt(i))); if (((asciiCode < 48) || (asciiCode > 57)) && ((asciiCode != 43) && (i == 0))) { properFormat = false; break; } } if (properFormat) { manager.sendTextMessage(number, null, content, null, null); }else { java.lang.System.out.println((\"Tried to send message to improper number: \" + number)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/322/buggy-version/app.src.main.java.com.example.copilot.co_pilot.Pilot.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.lang.String.length()", "android.telephony.SmsManager.sendTextMessage(java.lang.String,<nulltype>,java.lang.String,<nulltype>,<nulltype>)", "java.lang.String.charAt(int)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "9cb20f3544f738a211824c52e5fafa3cfa74ddca", "Url": "https://api.github.com/repos/durward/Co-Pilot", "Date": "2015-02-08T00:10:29Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == instance) { return globalConfig.getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8089/buggy-version/src.main.java.org.jenkinsci.plugins.stashNotifier.StashNotifier.java", "BodyUseAPI": [], "Fixed commit": "baa7ac5b0a0409941b43a1baa7f967a20f9fac70", "Url": "https://api.github.com/repos/jenkinsci/stashnotifier-plugin", "Date": "2016-09-16T17:52:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, T>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (placeholder == null) { throw new java.lang.RuntimeException(\"Add a placeholder to your placeholder manager before using it.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8498/buggy-version/jerautils.src.main.java.br.com.jera.jerautils.placeholders.PlaceholdersManager.java", "BodyUseAPI": [], "Fixed commit": "b0510e172a62eeabf3683a27f9cb3fbc53105b05", "Url": "https://api.github.com/repos/jera/jerautils-android", "Date": "2016-12-22T20:52:53Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((br.com.jera.jerautils.placeholders.Placeholders.defaultLoadingViewStubId) != 0) && ((br.com.jera.jerautils.placeholders.Placeholders.defaultLoadingMessageTextViewId) != 0)) { placeholderManager.add(br.com.jera.jerautils.placeholders.Placeholders.LOADING, new br.com.jera.jerautils.placeholders.impl.SimplePlaceholder(contentView, br.com.jera.jerautils.placeholders.Placeholders.defaultLoadingViewStubId, br.com.jera.jerautils.placeholders.Placeholders.defaultLoadingMessageTextViewId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8498/buggy-version/jerautils.src.main.java.br.com.jera.jerautils.placeholders.Placeholders.java", "BodyUseAPI": [], "Fixed commit": "b0510e172a62eeabf3683a27f9cb3fbc53105b05", "Url": "https://api.github.com/repos/jera/jerautils-android", "Date": "2016-12-22T20:52:53Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((br.com.jera.jerautils.placeholders.Placeholders.defaultErrorWithIconViewStubId) != 0) && ((br.com.jera.jerautils.placeholders.Placeholders.defaultErrorMessageTextViewId) != 0)) && ((br.com.jera.jerautils.placeholders.Placeholders.defaultErrorButtonId) != 0)) && ((br.com.jera.jerautils.placeholders.Placeholders.defaultErrorIconId) != 0)) { placeholderManager.add(br.com.jera.jerautils.placeholders.Placeholders.ERROR_WITH_ICON, new br.com.jera.jerautils.placeholders.impl.PlaceholderWithImage(contentView, br.com.jera.jerautils.placeholders.Placeholders.defaultErrorWithIconViewStubId, br.com.jera.jerautils.placeholders.Placeholders.defaultErrorMessageTextViewId, br.com.jera.jerautils.placeholders.Placeholders.defaultErrorButtonId, br.com.jera.jerautils.placeholders.Placeholders.defaultErrorIconId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8498/buggy-version/jerautils.src.main.java.br.com.jera.jerautils.placeholders.Placeholders.java", "BodyUseAPI": [], "Fixed commit": "b0510e172a62eeabf3683a27f9cb3fbc53105b05", "Url": "https://api.github.com/repos/jera/jerautils-android", "Date": "2016-12-22T20:52:53Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((br.com.jera.jerautils.placeholders.Placeholders.defaultErrorViewStubId) != 0) && ((br.com.jera.jerautils.placeholders.Placeholders.defaultErrorMessageTextViewId) != 0)) && ((br.com.jera.jerautils.placeholders.Placeholders.defaultErrorButtonId) != 0)) { placeholderManager.add(br.com.jera.jerautils.placeholders.Placeholders.ERROR, new br.com.jera.jerautils.placeholders.impl.SimplePlaceholder(contentView, br.com.jera.jerautils.placeholders.Placeholders.defaultErrorViewStubId, br.com.jera.jerautils.placeholders.Placeholders.defaultErrorMessageTextViewId, br.com.jera.jerautils.placeholders.Placeholders.defaultErrorButtonId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8498/buggy-version/jerautils.src.main.java.br.com.jera.jerautils.placeholders.Placeholders.java", "BodyUseAPI": [], "Fixed commit": "b0510e172a62eeabf3683a27f9cb3fbc53105b05", "Url": "https://api.github.com/repos/jera/jerautils-android", "Date": "2016-12-22T20:52:53Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CheckReceiveInfo()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4324/buggy-version/src.com.weijia.mymod.FillOrderActivity.java", "BodyUseAPI": [], "Fixed commit": "77727eb710798128464b697b8e48d778b64853bb", "Url": "https://api.github.com/repos/isNosky/mymod", "Date": "2014-06-24T06:20:20Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i % 100) == 0) { this.logger.log(java.util.logging.Level.INFO, (\"processing trialList \" + i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/500/buggy-version/ingest.clinicaltrials.src.main.java.org.renci.databridge.contrib.ingest.clinicaltrials.ClinicalTrialFormatter.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String)"], "Fixed commit": "fdba43185e708e81e2f34aff2745fd0568e0682e", "Url": "https://api.github.com/repos/HowardLander/DataBridge-contrib", "Date": "2016-06-10T20:19:18Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (theArray == null) { return new java.lang.String(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/500/buggy-version/ingest.clinicaltrials.src.main.java.org.renci.databridge.contrib.ingest.clinicaltrials.ClinicalTrialJson.java", "BodyUseAPI": [], "Fixed commit": "fdba43185e708e81e2f34aff2745fd0568e0682e", "Url": "https://api.github.com/repos/HowardLander/DataBridge-contrib", "Date": "2016-06-10T20:19:18Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getAmount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (amt == 1) { player.getInventory().remove(item); }else { item.setAmount((amt - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3563/buggy-version/src.caseus.Varietree.VarietreeBlockListener.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.setAmount(int)"], "Fixed commit": "646befc38eae246688146e0268486ac5150c8299", "Url": "https://api.github.com/repos/Caseus/bukkit-varietree", "Date": "2011-03-11T14:03:44Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device) != null) { message = \" connection=\" + (device.getConnection().getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2179/buggy-version/NFCommunicator.nfcommunicator.src.main.java.com.neofect.communicator.CommunicationController.java", "BodyUseAPI": [], "Fixed commit": "6dea3130d018b88c8ddb79e1d8d14c5a37684a2c", "Url": "https://api.github.com/repos/Neofect/Communicator", "Date": "2017-10-20T13:18:40Z"},
{"Line": "=>950", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentSize > 0) { org.apache.poi.ss.usermodel.ConditionalFormattingRule[] rules = new org.apache.poi.ss.usermodel.ConditionalFormattingRule[currentSize]; for (int i = 0; i < currentSize; i++) { int ruleIndex = i + ((maxRuleChunkSize) * c); rules[i] = currentCf.getRule(ruleIndex); if (debug) { debug((((((\"extendCellRangesForConditionalFormattings: add ranges: \" + (getRangesAsString(ranges))) + \" rule #\") + ruleIndex) + \" =\") + (de.cimt.talendcomp.tfileexcelpoi.SpreadsheetOutput.describeRule(rules[i])))); } } scf.addConditionalFormatting(ranges, rules); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9160/buggy-version/src.main.java.de.cimt.talendcomp.tfileexcelpoi.SpreadsheetOutput.java", "BodyUseAPI": [], "Fixed commit": "94ac0b982c33df5dcf51abeeff564d69825c2bd8", "Url": "https://api.github.com/repos/jlolling/talendcomp_tFileExcel", "Date": "2016-07-21T22:13:05Z"},
{"Line": "=>2564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerLoginEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (player == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6752/buggy-version/src.me.ryanhamshire.GriefPrevention.PlayerEventHandler.java", "BodyUseAPI": [], "Fixed commit": "33c687361b1bbedcf7b60a131576a69eb5deeb3a", "Url": "https://api.github.com/repos/Tux2/GriefPrevention", "Date": "2014-01-18T20:26:37Z"},
{"Line": "=>1026", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.unidata.view.geoloc.VertScaleInfo.getMajorIncrement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (top != majorIncrement) { for (int j = 0; j < minorIncrement; j++) { minorTicks.add((prevMap + (tmpIncr * j))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2396/buggy-version/ucar.unidata.view.geoloc.MapProjectionDisplay.java", "BodyUseAPI": [], "Fixed commit": "565c223e7f907c9a8e267d7e406042702c5312e3", "Url": "https://api.github.com/repos/mcidasv/mcidasv", "Date": "2015-01-30T16:01:38Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lastR == null) lastR = r; else if (lastR.passage.equals(r.passage)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3028/buggy-version/trec-eval.src.main.java.edu.unh.cs.trec.SystemResults.java", "BodyUseAPI": ["lastR.passage.equals(r.passage)"], "Fixed commit": "d01964904a19b9e546d68b17556a7698d06ae1f6", "Url": "https://api.github.com/repos/tuckerowens/trec-car-eval", "Date": "2017-03-13T15:16:11Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputFileName.contains(\"://\")) { return inputFileName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7841/buggy-version/src.main.java.org.openu.fimcmp.cmdline.CmdLineOptions.java", "BodyUseAPI": [], "Fixed commit": "9e165573e5d9946ec1317afae2bd3df529f238c1", "Url": "https://api.github.com/repos/Khovansa/fim", "Date": "2017-05-29T21:28:30Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nutz.lang.Strings.isBlank(src)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1502/buggy-version/src.org.nutz.castor.castor.String2Calendar.java", "BodyUseAPI": [], "Fixed commit": "3373a2055ca21a4f388ddd1299cc610650c9afff", "Url": "https://api.github.com/repos/ansjsun/nutz", "Date": "2012-02-15T11:37:55Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (singletons.containsKey(name)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7920/buggy-version/src.main.java.net.henryco.injector.meta.ModuleStruct.java", "BodyUseAPI": [], "Fixed commit": "55578108024dea49d24dce96f1f27eb094eef27e", "Url": "https://api.github.com/repos/henryco/GrInjector", "Date": "2017-12-19T10:50:31Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (singletons.containsKey(name)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7920/buggy-version/src.main.java.net.henryco.injector.meta.ModuleStruct.java", "BodyUseAPI": [], "Fixed commit": "55578108024dea49d24dce96f1f27eb094eef27e", "Url": "https://api.github.com/repos/henryco/GrInjector", "Date": "2017-12-19T10:50:31Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (msgData[1].contains(\"href\")) { msgData[1] = msgData[1].replaceFirst(\"'\", \"<b>'\"); for (int i = 2; i < (msgData.length); i++) { msgData[1] += \":\" + (msgData[i]); } msgData[1] += \"</b>\"; }else { msgData[1] = msgData[1].replaceFirst(\"'\", \"<b>'\"); msgData[1] += \"</b>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6415/buggy-version/src.logreporter.LogConverter.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "cc712a25692a409b2c9c682f45efcde2d647ee8b", "Url": "https://api.github.com/repos/sugarcrm/VooDooDriver", "Date": "2011-08-03T19:59:14Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MyPanel.getGridY(int,int)", "java.awt.Container.getComponent(int)", "MyPanel.getGridX(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((myPanel.mouseDownGridX) != gridX) || ((myPanel.mouseDownGridY) != gridY)) { myPanel.repaint(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3869/buggy-version/Lab5.src.MyMouseAdapter.java", "BodyUseAPI": ["MyPanel.repaint()"], "Fixed commit": "9f68e48da5edd239ee085b12dac296d9ed318b1f", "Url": "https://api.github.com/repos/irixavales/Minesweeper-Game", "Date": "2017-03-16T20:28:46Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4668/buggy-version/libcore.src.com.lb.auto_fit_textview.AutoResizeTextView.java", "BodyUseAPI": [], "Fixed commit": "c695f89eeec71a29a7863c4412405e6cf7e85cb2", "Url": "https://api.github.com/repos/SamKnows/skandroid-core", "Date": "2016-06-08T08:45:16Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (textArea.getText().equals(\"\")) { setText(text); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/383/buggy-version/src.Views.OutputPanel.java", "BodyUseAPI": [], "Fixed commit": "591c6ab494814d34f86e13d66b1a0601afec1872", "Url": "https://api.github.com/repos/maffan/PLeif", "Date": "2015-03-03T14:44:10Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eloreDefinialtAdatokAlapjanEllenoriz(mondat)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1593/buggy-version/src.mi.logic.InputProcessor.java", "BodyUseAPI": [], "Fixed commit": "3399121e5b5d4e6fe544ed5446e6781a43e685f6", "Url": "https://api.github.com/repos/benoc008/MIHazi", "Date": "2014-12-01T18:58:34Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) { type = org.egov.tradelicense.util.ConstantUtility.CATEGORY_TYPE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9142/buggy-version/tradelicense.tl-masters.src.main.java.org.egov.tradelicense.domain.services.validator.CategoryValidator.java", "BodyUseAPI": [], "Fixed commit": "360f48b93cb1da7dc7f95ce71518798aeb7bc42f", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-09-27T14:42:22Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.corsework.notepad.application.NotePadApplication) (context.getApplicationContext())).getReminderD().getById(pos)) == null) { ((com.corsework.notepad.application.NotePadApplication) (context.getApplicationContext())).startNotify((-1)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6009/buggy-version/NotePad.src.com.corsework.notepad.activity.TimeNotification.java", "BodyUseAPI": ["android.content.Context.getApplicationContext()", "((com.corsework.notepad.application.NotePadApplication) (context.getApplicationContext())).startNotify(int)"], "Fixed commit": "0c7d0398bd6d435fab91d5dc6ab7634bb0fa5955", "Url": "https://api.github.com/repos/bsucourse2012/Calendar-1.0", "Date": "2012-05-23T17:36:06Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((frameNodes.item(j).getAttributes().getNamedItem(\"image\")) != null) { newState.populateImage(new util.Pixmap(getAttributeValue(frameNodes.item(j), \"image\")), j); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4141/buggy-version/src.vooga.fighter.model.loaders.ObjectLoader.java", "BodyUseAPI": ["vooga.fighter.model.loaders.ObjectLoader.getAttributeValue(org.w3c.dom.Node,java.lang.String)", "vooga.fighter.model.utils.State.populateImage(util.Pixmap,int)", "org.w3c.dom.NodeList.item(int)"], "Fixed commit": "974e4690f0388f36e3d70255456ccf02cb9c67dd", "Url": "https://api.github.com/repos/duke-compsci308-spring2013/vooga", "Date": "2013-04-19T00:14:00Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (methodName.equals(com.beyondconstraint.bounty.generation.method.StringsMethod.METHOD_FIRST_TO_LOWER_CASE)) { return com.beyondconstraint.bounty.utils.StringUtils.firstToLowerCase(value); }else if (methodName.equals(com.beyondconstraint.bounty.generation.method.StringsMethod.METHOD_TO_UPPER_CASE)) { return value != null ? value.toUpperCase() : null; }else if (methodName.equals(com.beyondconstraint.bounty.generation.method.StringsMethod.METHOD_TO_LOWER_CASE)) { return value != null ? value.toLowerCase() : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/739/buggy-version/codegen.src.main.java.com.beyondconstraint.bounty.generation.method.StringsMethod.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "15b903fbcbf024cae69fc18a9615fa9b8f0e6d78", "Url": "https://api.github.com/repos/beyondconstraint/bounty-codegen", "Date": "2016-02-07T10:10:38Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((typeElement.getAnnotation(io.sundr.builder.annotations.Buildable.class)) != null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1330/buggy-version/annotations.src.main.java.io.sundr.builder.internal.functions.overrides.ToBuildableJavaType.java", "BodyUseAPI": [], "Fixed commit": "3b8343c2f54e6f615874e89ea5fa3e4d7684543d", "Url": "https://api.github.com/repos/iocanel/sundrio", "Date": "2015-08-05T16:58:58Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getPackageName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (packageName.contains(\".debug\")) { packageName = packageName.replace(\".debug\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/748/buggy-version/magnetrestclient.src.main.java.cl.magnet.magnetrestclient.utils.UserAgentUtils.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "07e3f7f197c621efb31412e6b4982e24d5244219", "Url": "https://api.github.com/repos/magnet-cl/MagnetRestClient", "Date": "2016-04-29T17:14:06Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deviceUtil.isLandscapeTablet()) { replaceFragmentInGivenContainer(com.devoxx.android.fragment.common.EmptyFragment_.builder().build(), false, R.id.content_frame_second); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7025/buggy-version/app.src.main.java.com.devoxx.android.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ca9e1e96b6625ac70bfed0ee3a2604e9d900e938", "Url": "https://api.github.com/repos/ScalaConsultants/devoxx-android", "Date": "2016-01-31T11:37:56Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deviceUtil.isLandscapeTablet()) { replaceFragmentInGivenContainer(com.devoxx.android.fragment.common.EmptyFragment_.builder().build(), false, R.id.content_frame_second); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7025/buggy-version/app.src.main.java.com.devoxx.android.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ca9e1e96b6625ac70bfed0ee3a2604e9d900e938", "Url": "https://api.github.com/repos/ScalaConsultants/devoxx-android", "Date": "2016-01-31T11:37:56Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((raw.size()) > 0) { com.yahoo.omid.client.ByteArray currentRowId = new com.yahoo.omid.client.ByteArray(raw.get(0).getRow()); if (!(currentRowId.equals(lastRowId))) { columnsSeen.clear(); lastRowId = currentRowId; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2270/buggy-version/src.main.java.com.yahoo.omid.client.regionserver.Compacter.java", "BodyUseAPI": ["raw.get(0).getRow()", "java.util.List<org.apache.hadoop.hbase.KeyValue>.get(int)"], "Fixed commit": "b7cc6e9873c0800da5a286572d384e324c037697", "Url": "https://api.github.com/repos/maysamyabandeh/omid", "Date": "2012-03-15T11:14:38Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startDate) == null) { startDate = new java.util.Date(((getStartDate()) != null ? getStartDate() : 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6937/buggy-version/android.src.main.java.com.thebluealliance.androidclient.models.Event.java", "BodyUseAPI": [], "Fixed commit": "7fdd341976a42e3591467afd6844c791dce411ea", "Url": "https://api.github.com/repos/phil-lopreiato/the-blue-alliance-android", "Date": "2016-10-08T01:44:27Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endDate) == null) { endDate = new java.util.Date(((getEndDate()) != null ? getEndDate() : 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6937/buggy-version/android.src.main.java.com.thebluealliance.androidclient.models.Event.java", "BodyUseAPI": [], "Fixed commit": "7fdd341976a42e3591467afd6844c791dce411ea", "Url": "https://api.github.com/repos/phil-lopreiato/the-blue-alliance-android", "Date": "2016-10-08T01:44:27Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapTypeToggle) == 1) { normalMapFAB.hideFloatingActionButton(); hybridMapFAB.hideFloatingActionButton(); mapTypeToggle = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3812/buggy-version/src.com.example.campuseventsapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2962866ee7f596e3044d08c450f8d87d41be6216", "Url": "https://api.github.com/repos/OJ7/CampusEventsApp", "Date": "2014-12-06T21:43:57Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(directory.isDirectory())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7961/buggy-version/allure-commons.src.main.java.ru.yandex.qatools.allure.commons.AllureFileUtils.java", "BodyUseAPI": [], "Fixed commit": "d35b785c781146da11edbfb5de485675e8d29b22", "Url": "https://api.github.com/repos/baev/allure-core", "Date": "2015-08-05T12:22:47Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (capacity == (thing.cost)) { java.util.List<java.lang.Integer> list = new java.util.ArrayList<>(); list.add(thing.cost); listListArray[capacity].data.add(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/811/buggy-version/src.Knapsack.java", "BodyUseAPI": ["java.util.List<java.util.List<java.lang.Integer>>.add(java.util.List<java.lang.Integer>)", "java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "d6ff1353ba149b18a6d48a43d0abf8bb4b90287b", "Url": "https://api.github.com/repos/ZhongBaby/JavaOJAlgorithms", "Date": "2016-09-26T01:49:06Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pool) != null) pool.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3865/buggy-version/ethereumj-core.src.main.java.org.ethereum.sync.BlockDownloader.java", "BodyUseAPI": [], "Fixed commit": "ed55feba5cf18f95db1cc2a3ed9b84fccfd723e4", "Url": "https://api.github.com/repos/cupuyc/ethereumj", "Date": "2017-01-09T11:31:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.pmd.ast.ASTPrimaryPrefix.getFirstChildOfType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name == null) { return super.visit(node, data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6841/buggy-version/ruleset.src.main.java.jp.skypencil.pmd.slf4j.NumberOfPlaceholderShouldBeEqualToNumberOfArgument.java", "BodyUseAPI": [], "Fixed commit": "6a0d5c75cd112df975fdc99f175216a678e59524", "Url": "https://api.github.com/repos/eller86/ruleset-for-SLF4J", "Date": "2012-08-20T13:55:34Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.lwjgl.opengl.GL11.glIsEnabled(GL12.GL_RESCALE_NORMAL))) org.lwjgl.opengl.GL11.glEnable(GL12.GL_RESCALE_NORMAL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5501/buggy-version/src.main.java.erebus.client.render.item.PreservedBlockitemRenderer.java", "BodyUseAPI": [], "Fixed commit": "b9c5ebd1cbec1d02d9d1850c5b7cb5af5d5ea508", "Url": "https://api.github.com/repos/ganymedes01/TheErebus", "Date": "2015-11-03T20:29:06Z"},
{"Line": "=>1076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((apdu.getStatus()) == 25352) { noticeString = \"No result!\"; backToScreen = gasstation.GasStation.SCR_MAIN; setScreen(gasstation.GasStation.SCR_NAVIGATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6393/buggy-version/src.gasstation.GasStation.java", "BodyUseAPI": [], "Fixed commit": "89b7b15563935d9ca060b5ef008c5629ed9951a8", "Url": "https://api.github.com/repos/13thang08/GasStationHostApplication", "Date": "2014-06-08T03:16:52Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(url)) { url = this.getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8734/buggy-version/src.main.java.org.wilson.world.image.DefaultImageRef.java", "BodyUseAPI": [], "Fixed commit": "e5362d7b8a8fd9b263929184391396a3f4540b52", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-11-25T08:58:43Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.flex.compiler.tree.as.IFunctionCallNode.getArgumentNodes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((argumentNodes.length) == 1) { org.apache.flex.compiler.tree.as.IExpressionNode arg = argumentNodes[0]; if ((arg.getNodeID()) == (org.apache.flex.compiler.tree.ASTNodeID.LiteralIntegerID)) { org.apache.flex.compiler.internal.tree.as.NumericLiteralNode literal = ((org.apache.flex.compiler.internal.tree.as.NumericLiteralNode) (arg)); java.lang.Integer value = java.lang.Integer.parseInt(literal.getValue()); java.lang.String vectorElementType = vector.getBaseName(); java.lang.String defaultValue = \"null\"; if (((vectorElementType.contains(\"Number\")) || (vectorElementType.contains(\"int\"))) || (vectorElementType.contains(\"unit\"))) { defaultValue = \"0\"; } for (int i = 0; i < value; i++) { write(defaultValue); if (i < (value - 1)) write(\", \"); } } }else { walkParameters(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6628/buggy-version/src.main.java.randori.compiler.internal.codegen.js.emitter.FunctionCallEmitter.java", "BodyUseAPI": [], "Fixed commit": "ee78d0ac9270a3389732842febbc8940585202a3", "Url": "https://api.github.com/repos/RandoriAS/randori-compiler", "Date": "2013-08-12T12:47:14Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == null) { value = defaultValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6454/buggy-version/metl-core.src.main.java.org.jumpmind.metl.core.runtime.component.ModelAttributeScriptHelper.java", "BodyUseAPI": [], "Fixed commit": "7bf016575c74a8e7a85063e490eb5fc0104b7e5c", "Url": "https://api.github.com/repos/JumpMind/metl", "Date": "2017-01-03T17:59:46Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (angle != (andrixServo1.getPositionInDegrees())) { andrixServo1.moveToAngle(angle); andrixServo2.moveToAngle(((andrixServo2.getMaximumAngle()) - angle)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8428/buggy-version/linker.src.main.java.at.pria.osiris.linker.implementation.hedgehog.components.HedgehogDoubleServo.java", "BodyUseAPI": ["at.pria.osiris.linker.implementation.hedgehog.components.HedgehogServo.moveToAngle(((andrixServo2.getMaximumAngle()) - angle))", "at.pria.osiris.linker.implementation.hedgehog.components.HedgehogServo.moveToAngle(int)"], "Fixed commit": "02458a0eeba207fcf1bf7a1956268cc6d26ca128", "Url": "https://api.github.com/repos/aayvazyan-tgm/osiris", "Date": "2015-03-23T14:53:29Z"},
{"Line": "=>1077", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.contains(\":\")) { name = new net.sf.saxon.s9api.QName(value, node); }else { name = new net.sf.saxon.s9api.QName(\"\", value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1103/buggy-version/src.main.java.com.xmlcalabash.model.Parser.java", "BodyUseAPI": [], "Fixed commit": "4f0b0737adfcadf54116e4757ea211391a55c7ed", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2015-05-05T02:23:17Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((seqNum >= (base)) && (seqNum < ((base) + (windowSize)))) { java.net.DatagramPacket packet = packets.get(((int) (seqNum - (base)))); if (packet != null) { if ((java.lang.Math.random()) < (dataError)) { byte[] buffer = new byte[packet.getLength()]; java.lang.System.arraycopy(packet.getData(), packet.getOffset(), buffer, 0, packet.getLength()); buffer[0] = ((byte) ((-(buffer[0])) & 255)); java.lang.System.out.println(((\"Simulated data packet corruption \" + (++(daoumoyer.sender.SendWindow.corruptcount))) + \" times\")); return new java.net.DatagramPacket(buffer, buffer.length, remoteAddress, remotePort); }else { return packet; } }else { throw new daoumoyer.sender.EndOfFileException(); } }else throw new daoumoyer.sender.NotInWindowException(base, nextSeqNum, seqNum);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6299/buggy-version/phase5.src.daoumoyer.sender.SendWindow.java", "BodyUseAPI": ["java.util.List<java.net.DatagramPacket>.get(long)"], "Fixed commit": "d6f7c46cbe9707f6e60cf31e4c7a7cb0377b3be2", "Url": "https://api.github.com/repos/eliedaou/networkDesign", "Date": "2015-11-26T06:57:53Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fetchRunnable) != null) && ((fetchRunnable.getId()) == id)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3681/buggy-version/fetch.src.main.java.com.tonyodev.fetch.FetchService.java", "BodyUseAPI": [], "Fixed commit": "89f19fff9dc1f575a0a4ee1794ff52efa42c92fa", "Url": "https://api.github.com/repos/EslamElMeniawy/Fetch", "Date": "2017-03-02T21:07:24Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map) != null) height = (map.heightAt(((thisPos.getX()) / (org.jtrfp.trcl.core.TR.mapSquareSize)), ((thisPos.getZ()) / (org.jtrfp.trcl.core.TR.mapSquareSize)))) * ((p.getTr().getWorld().sizeY) / 2); else { height = java.lang.Double.NEGATIVE_INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7373/buggy-version/src.main.java.org.jtrfp.trcl.beh.LeavesPowerupOnDeathBehavior.java", "BodyUseAPI": [], "Fixed commit": "b88b0727b8b239b8603e1846a1806dd7c9b97e46", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-01-03T18:51:31Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.osmand.plus.inapp.InAppHelper.isSubscribedToLiveUpdates()) { java.lang.String fileNameWithoutExtension = net.osmand.util.Algorithms.getFileNameWithoutExtension(f); net.osmand.plus.resources.IncrementalChangesManager changesManager = getMyApplication().getResourceManager().getChangesManager(); changesManager.deleteUpdates(fileNameWithoutExtension); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2337/buggy-version/OsmAnd.src.net.osmand.plus.download.ui.LocalIndexesFragment.java", "BodyUseAPI": [], "Fixed commit": "db5d79fa2defba0bde69cbe0182026b5ccb18522", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2017-09-19T13:02:38Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (uri == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2380/buggy-version/app.src.main.java.com.tongbaoh.virtualcoin.ui.activity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "b6d5f53288aa51ed92dc1662b0dc912fc4e90004", "Url": "https://api.github.com/repos/ljxwjj/VirtualCoin", "Date": "2017-08-16T15:07:53Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((res.length()) < 2) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4595/buggy-version/proj.android.src.org.cocos2dx.cpp.jniFacade.JniCppFacade.java", "BodyUseAPI": [], "Fixed commit": "d6f077ed9af2a90316c1b94af8cd22dc432d36fe", "Url": "https://api.github.com/repos/ludomuse/Ludomuse", "Date": "2016-06-24T15:51:08Z"},
{"Line": "=>1093", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cocos2dx.cpp.sockets.SocketHandler.getIPAddress(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (myLocalAddress.equals(\"\")) myLocalAddress = org.cocos2dx.cpp.sockets.SocketHandler.getIPAddress(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4595/buggy-version/proj.android.src.org.cocos2dx.cpp.wifiDirect.WifiDirectManager.java", "BodyUseAPI": [], "Fixed commit": "d6f077ed9af2a90316c1b94af8cd22dc432d36fe", "Url": "https://api.github.com/repos/ludomuse/Ludomuse", "Date": "2016-06-24T15:51:08Z"},
{"Line": "=>2223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getDialect().analyzeExpression(org.drools.rule.builder.PackageBuildContext,org.drools.lang.descr.AbstractClassTypeDeclarationDescr,java.lang.String,org.drools.compiler.BoundIdentifiers)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (results != null) { org.drools.spi.InternalReadAccessor reader = pkg.getClassFieldAccessorStore().getMVELReader(org.drools.core.util.ClassUtils.getPackage(type.getTypeClass()), type.getTypeClass().getName(), duration, type.isTypesafe(), results.getReturnType()); org.drools.rule.MVELDialectRuntimeData data = ((org.drools.rule.MVELDialectRuntimeData) (pkg.getDialectRuntimeRegistry().getDialectData(\"mvel\"))); data.addCompileable(((org.drools.base.mvel.MVELCompileable) (reader))); ((org.drools.base.mvel.MVELCompileable) (reader)).compile(data); type.setDurationExtractor(reader); }else { this.results.add(new org.drools.compiler.TypeDeclarationError(typeDescr, ((((\"Error processing @duration for TypeDeclaration '\" + (type.getTypeName())) + \"': cannot access the field '\") + duration) + \"'\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6085/buggy-version/drools-compiler.src.main.java.org.drools.compiler.PackageBuilder.java", "BodyUseAPI": ["pkg.getClassFieldAccessorStore().getMVELReader(org.drools.core.util.ClassUtils.getPackage(type.getTypeClass()),type.getTypeClass().getName(),java.lang.String,type.isTypesafe(),results.getReturnType())", "org.drools.rule.builder.dialect.mvel.MVELAnalysisResult.getReturnType()"], "Fixed commit": "c8f7c9596ebe749087fad1e2835743e33db16416", "Url": "https://api.github.com/repos/etirelli/drools", "Date": "2013-04-03T12:53:02Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (builder.hasDelegateOriginalProperties()) brooklyn.management.internal.LocalManagementContext.log.warn(((\"When reloading, mgmt context \" + (this)) + \" properties are fixed, so reload will be of limited utility\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8659/buggy-version/core.src.main.java.brooklyn.management.internal.LocalManagementContext.java", "BodyUseAPI": [], "Fixed commit": "1d3cc0eba622f70f7858248f75cbbf9c7efab5e6", "Url": "https://api.github.com/repos/grkvlt/brooklyn-central", "Date": "2014-03-30T20:24:39Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row == 1) && (java.lang.Boolean.TRUE.equals(getOwnProperty(Property.FORCED_PLACEMENT)))) { deleteOwnProperty(Property.FORCED_PLACEMENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8520/buggy-version/layout.src.main.java.com.itextpdf.layout.renderer.TableRenderer.java", "BodyUseAPI": [], "Fixed commit": "c8da0a26dc724216ff0da1abc75b03cf6a6d582c", "Url": "https://api.github.com/repos/itext/itext7", "Date": "2016-05-05T11:24:45Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (accession.equals(branchAccession)) { return searchByAccession(accession); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7156/buggy-version/app.web.src.main.java.uk.ac.ebi.fg.annotare2.web.server.services.EfoSearchImpl.java", "BodyUseAPI": ["uk.ac.ebi.fg.annotare2.web.server.services.EfoSearchImpl.searchByAccession(java.lang.String)"], "Fixed commit": "f66cfca8eee30e2fcd65600c060446d0bb47b66e", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2014-01-08T15:51:22Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { de.nordakademie.multiplechoice.participation.model.Participation participation = new de.nordakademie.multiplechoice.participation.model.Participation(); participation.setExamResult(ExamResultEnum.NOT_PARTICIPATED.getExamResult()); participation.setValid(true); participationService.create(participation, examId, user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7370/buggy-version/src.main.java.de.nordakademie.multiplechoice.participation.ui.ParticipationAction.java", "BodyUseAPI": [], "Fixed commit": "949c6b807ab1f2ca35c34ccf1988e4857b96186a", "Url": "https://api.github.com/repos/NakTNHenSte/multiple-choice", "Date": "2017-11-27T03:26:14Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.util.EntityUtils.toString(proxiedResponse.getEntity())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (entity != null) { builder.entity(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3271/buggy-version/containers.jersey2-routing.src.main.java.com.yahoo.gondola.container.client.ApacheHttpComponentProxyClient.java", "BodyUseAPI": ["Response.ResponseBuilder.entity(java.lang.String)"], "Fixed commit": "5756377947959da6da5a6f03e2b65d0730a4bc9e", "Url": "https://api.github.com/repos/patc888/gondola", "Date": "2015-11-13T02:08:59Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Teas.size()) == 0) { Teas.add(\"No Teas...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8318/buggy-version/TorC2.app.src.main.java.jr.torc.viewOrders.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "36b6b534f174a84d635526ae6dccaf9223bdadd9", "Url": "https://api.github.com/repos/JR1110/T-or-C", "Date": "2016-03-24T17:16:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Others.size()) == 0) { Others.add(\"No Other drinks...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8318/buggy-version/TorC2.app.src.main.java.jr.torc.viewOrders.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "36b6b534f174a84d635526ae6dccaf9223bdadd9", "Url": "https://api.github.com/repos/JR1110/T-or-C", "Date": "2016-03-24T17:16:25Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Coffees.size()) == 0) { Coffees.add(\"No Teas...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8318/buggy-version/TorC2.app.src.main.java.jr.torc.viewOrders.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "36b6b534f174a84d635526ae6dccaf9223bdadd9", "Url": "https://api.github.com/repos/JR1110/T-or-C", "Date": "2016-03-24T17:16:25Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return new ReturnObjectImpl(null, ErrorMessage.EMPTY_STRUCTURE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2449/buggy-version/LinkedList.java", "BodyUseAPI": [], "Fixed commit": "c78aa3277f1b2345578ec86876df6d7d09231ab9", "Url": "https://api.github.com/repos/aworton/cw-ds", "Date": "2016-11-13T16:16:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((omoikane.principal.Principal.IDCaja) < 0) { omoikane.caja.CajaManager.logger.info(\"Equipo no habilitado para caja\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7264/buggy-version/main.src.omoikane.caja.CajaManager.java", "BodyUseAPI": [], "Fixed commit": "3ce0343fe2a2fda5e52a98f00f3b00ef55a2ac04", "Url": "https://api.github.com/repos/ZooMMX/Omoikane", "Date": "2015-08-14T18:57:37Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canMovePlayer(dir, anim)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6808/buggy-version/Blockster.core.src.main.java.edu.chalmers.Blockster.core.Model.java", "BodyUseAPI": [], "Fixed commit": "b08027122efa13e23551db8a2cf1072f8c91f18d", "Url": "https://api.github.com/repos/oskarjonefors/TDA367", "Date": "2014-04-09T18:53:20Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ORMSession.getTransaction().isActive()) { ORMSession.getTransaction().rollback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5876/buggy-version/src.library.HibernateUtil.java", "BodyUseAPI": ["ORMSession.getTransaction().rollback()", "org.hibernate.Session.getTransaction()"], "Fixed commit": "554a9100de17d87b9ed1dc284a118f9dedcb9648", "Url": "https://api.github.com/repos/drakonoved/library", "Date": "2017-03-18T18:24:34Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isCheckoutCommand(formattedInput)) { return new com.twu.biblioteca.commands.CheckoutCommand(); }else if (isReturnCommand(formattedInput)) { return new com.twu.biblioteca.commands.ReturnCommand(); }else if (isShowInfoCommand(formattedInput)) { return new com.twu.biblioteca.commands.ShowBorrowerInfoCommand(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5291/buggy-version/src.main.java.com.twu.biblioteca.commands.CommandInterpreter.java", "BodyUseAPI": ["com.twu.biblioteca.commands.CommandInterpreter.isReturnCommand(java.lang.String)", "com.twu.biblioteca.commands.CommandInterpreter.isShowInfoCommand(java.lang.String)"], "Fixed commit": "87f2d6b66dfe89c691bad4b4cec1b6ae36287d5b", "Url": "https://api.github.com/repos/carlossdparaujo/twu-biblioteca-carlosaraujo", "Date": "2016-09-26T19:28:12Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((player.getAcceleration().x) == 0) && ((player.getAcceleration().y) == 0)) && ((player.getVelocity().x) == 0)) && ((player.getVelocity().y) == 0)) { player.setState(State.IDLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2835/buggy-version/Rusic_Game.src.com.rusic_game.controllers.PlayerController.java", "BodyUseAPI": ["com.rusic_game.models.Player.setState(State.IDLE)"], "Fixed commit": "ff6b8aa02912d6489102d056ecc288f7cbd6ab53", "Url": "https://api.github.com/repos/SlappyPhil/Rusic", "Date": "2013-10-17T23:18:11Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listView) == null) return; else if ((((mBuilder.items) == null) || ((mBuilder.items.length) == 0)) && ((mBuilder.adapter) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/214/buggy-version/library.src.main.java.com.afollestad.materialdialogs.MaterialDialog.java", "BodyUseAPI": [], "Fixed commit": "2aecf21f97a8ed5d8dea9ce5746372e0293ef90b", "Url": "https://api.github.com/repos/afollestad/material-dialogs", "Date": "2015-04-27T14:09:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((potentialNewRoot.getActions().size()) == (potentialNewRoot.amountOfChildren())) { potentialNewRoot.setFullyExpanded(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2435/buggy-version/src.main.java.nl.dke.boardgame.mcts.MonteCarloTree.java", "BodyUseAPI": ["nl.dke.boardgame.mcts.MonteCarloRootNode<S, A>.setFullyExpanded(boolean)"], "Fixed commit": "7e0710b89dda429c48916aceea8e3d60f109fe7f", "Url": "https://api.github.com/repos/nikvaessen/dke-boardgame", "Date": "2017-01-24T07:10:56Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(float)", "java.lang.Math.max(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((width + x) >= ((this.width) * (scaleX))) { width = (((this.width) * (scaleX)) - x) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2432/buggy-version/Blockster.src.main.java.edu.chalmers.blockster.gdx.view.MiniMap.java", "BodyUseAPI": [], "Fixed commit": "8386c1ca50bc76a29132375ebd5151f9bf0604f6", "Url": "https://api.github.com/repos/oskarjonefors/TDA367", "Date": "2014-05-15T22:29:59Z"},
{"Line": "=>2017", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((current.getParentCount()) == 0) { return child; }else { assert (current.getParentCount()) == 1; org.voltdb.plannodes.AbstractPlanNode parent = current.getParent(0); parent.unlinkChild(current); parent.addAndLinkChild(child); return root; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3738/buggy-version/src.frontend.org.voltdb.planner.PlanAssembler.java", "BodyUseAPI": ["org.voltdb.plannodes.AbstractPlanNode.unlinkChild(org.voltdb.plannodes.AbstractPlanNode)", "org.voltdb.plannodes.AbstractPlanNode.getParent(int)", "org.voltdb.plannodes.AbstractPlanNode.getParentCount()"], "Fixed commit": "41cd6b190ccabb1d632800864986eb89addbebb6", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2013-11-27T22:57:38Z"},
{"Line": "=>2012", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (child instanceof org.voltdb.plannodes.ProjectionPlanNode) { assert (child.getChildCount()) == 1; child = child.getChild(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3738/buggy-version/src.frontend.org.voltdb.planner.PlanAssembler.java", "BodyUseAPI": ["org.voltdb.plannodes.AbstractPlanNode.getChild(int)", "org.voltdb.plannodes.AbstractPlanNode.getChildCount()"], "Fixed commit": "41cd6b190ccabb1d632800864986eb89addbebb6", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2013-11-27T22:57:38Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fieldsBuilder.length()) != 0) { fieldsBuilder.append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8677/buggy-version/src.main.java.golem.mud.common.das.QueryBuilder.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "fa9fbf7a4814f988cec4dba20e9e8979deacbe6d", "Url": "https://api.github.com/repos/sshookman/ragnarok-hub", "Date": "2016-09-10T02:54:33Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((valuesBuilder.length()) != 0) { valuesBuilder.append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8677/buggy-version/src.main.java.golem.mud.common.das.QueryBuilder.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "fa9fbf7a4814f988cec4dba20e9e8979deacbe6d", "Url": "https://api.github.com/repos/sshookman/ragnarok-hub", "Date": "2016-09-10T02:54:33Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((setBuilder.length()) != 0) { setBuilder.append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8677/buggy-version/src.main.java.golem.mud.common.das.QueryBuilder.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "fa9fbf7a4814f988cec4dba20e9e8979deacbe6d", "Url": "https://api.github.com/repos/sshookman/ragnarok-hub", "Date": "2016-09-10T02:54:33Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.location_manager.CurrentLocationHelper.getCurrentLocation(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (location == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/276/buggy-version/src.com.example.location_manager.CurrentLocationHelper.java", "BodyUseAPI": [], "Fixed commit": "758c850bbf66f52cf358192510d716af6d146237", "Url": "https://api.github.com/repos/vominhnhut/QLQTPM2013", "Date": "2013-11-08T19:18:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<java.lang.Long>.pollFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((five * 7) > limitFives) { fives.add((five * 7)); limitFives = five * 7; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6125/buggy-version/cci.KthMultiple.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Long>.add(long)"], "Fixed commit": "cd0bae61c3796d7dbc5cc22766d5b26a52d0eaf9", "Url": "https://api.github.com/repos/egultekin/interview", "Date": "2017-04-20T18:06:22Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<java.lang.Long>.pollFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((five * 5) > limitFives) fives.add((five * 5));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6125/buggy-version/cci.KthMultiple.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Long>.add(long)"], "Fixed commit": "cd0bae61c3796d7dbc5cc22766d5b26a52d0eaf9", "Url": "https://api.github.com/repos/egultekin/interview", "Date": "2017-04-20T18:06:22Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<java.lang.Long>.pollFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((three * 5) > limitThrees) threes.add((three * 5));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6125/buggy-version/cci.KthMultiple.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Long>.add(long)"], "Fixed commit": "cd0bae61c3796d7dbc5cc22766d5b26a52d0eaf9", "Url": "https://api.github.com/repos/egultekin/interview", "Date": "2017-04-20T18:06:22Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<java.lang.Long>.pollFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((three * 3) > limitThrees) threes.add((three * 3));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6125/buggy-version/cci.KthMultiple.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Long>.add(long)"], "Fixed commit": "cd0bae61c3796d7dbc5cc22766d5b26a52d0eaf9", "Url": "https://api.github.com/repos/egultekin/interview", "Date": "2017-04-20T18:06:22Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<java.lang.Long>.pollFirst()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((three * 7) > limitThrees) { threes.add((three * 7)); limitThrees = three * 7; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6125/buggy-version/cci.KthMultiple.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Long>.add(long)"], "Fixed commit": "cd0bae61c3796d7dbc5cc22766d5b26a52d0eaf9", "Url": "https://api.github.com/repos/egultekin/interview", "Date": "2017-04-20T18:06:22Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (methodConfig.isLongRunningOperation()) { return \"\\\\Google\\\\GAX\\\\OperationResponse\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8021/buggy-version/src.main.java.com.google.api.codegen.transformer.php.PhpSurfaceNamer.java", "BodyUseAPI": [], "Fixed commit": "791e1420ed3ba182ccd1e43728362939c8afe540", "Url": "https://api.github.com/repos/landrito/toolkit", "Date": "2017-09-13T17:03:12Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((qAnswers.getQuestionId()) != currentQuestionId) { deleteAnswer = true; currentQuestionId = qAnswers.getQuestionId(); }else { deleteAnswer = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/779/buggy-version/raw.master.registryKit.registryKit.registryKit-1.0.src.main.java.com.registryKit.survey.surveyDAO.java", "BodyUseAPI": ["com.registryKit.survey.surveyQuestionAnswers.getQuestionId()"], "Fixed commit": "c4d9f4a25c90eae85f0ece0cfb2d09b27eec3ac3", "Url": "https://api.github.com/repos/bowlinktech/rr-mvn-repo", "Date": "2015-09-11T16:02:20Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deleteAnswer == true) { java.lang.String deleteQuestionAns = ((\"delete from submittedSurveyAnswers where submittedSurveyId = \" + submittedSurveyId) + \" and questionId = \") + (qAnswers.getQuestionId()); org.hibernate.Query deleteQuestionAnsQuery = sessionFactory.getCurrentSession().createSQLQuery(deleteQuestionAns); deleteQuestionAnsQuery.executeUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/779/buggy-version/raw.master.registryKit.registryKit.registryKit-1.0.src.main.java.com.registryKit.survey.surveyDAO.java", "BodyUseAPI": [], "Fixed commit": "c4d9f4a25c90eae85f0ece0cfb2d09b27eec3ac3", "Url": "https://api.github.com/repos/bowlinktech/rr-mvn-repo", "Date": "2015-09-11T16:02:20Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canDetectExit()) { animatorView.getPositionAnimator().setToState(controller.getState(), exitState); animatorView.getPositionAnimator().setState(exitState, false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5877/buggy-version/library.src.main.java.com.alexvasilkov.gestures.internal.ExitController.java", "BodyUseAPI": [], "Fixed commit": "dacf215ad228ac02145a1139fc8ff0648f112152", "Url": "https://api.github.com/repos/alexvasilkov/GestureViews", "Date": "2017-12-17T15:24:58Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.fenixedu.bennu.scheduler.domain.SchedulerSystem.repository) == null) { org.fenixedu.bennu.scheduler.domain.SchedulerSystem.repository = new org.fenixedu.bennu.scheduler.log.FileSystemLogRepository(3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3013/buggy-version/bennu-scheduler.src.main.java.org.fenixedu.bennu.scheduler.domain.SchedulerSystem.java", "BodyUseAPI": [], "Fixed commit": "e4888bc88993113e36b599d3bb0d5f67715b7aba", "Url": "https://api.github.com/repos/diutsu/bennu", "Date": "2016-12-29T15:17:12Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) == 1) return (\"\" + (getHead().getElement())) + \"\"; else { java.lang.StringBuilder builder = new java.lang.StringBuilder(); NumLinkedList.DoubleNode ndptr = getHead(); while ((ndptr.next()) != (getTail())) { builder.append(ndptr.getElement()); builder.append(' '); ndptr = ndptr.next(); } builder.append(ndptr.getElement()); builder.append(' '); builder.append(ndptr.next().getElement()); return builder.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8062/buggy-version/P1.src.NumLinkedList.java", "BodyUseAPI": [], "Fixed commit": "ca3fe5ae09f9f00615c731d5855c70f671b9d600", "Url": "https://api.github.com/repos/rytrose/EECS_233", "Date": "2014-09-21T18:22:34Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gf.rep.redundant()) return r;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2355/buggy-version/src.dfh.grammar.Compiler.java", "BodyUseAPI": [], "Fixed commit": "b4a5f68429ba21c4c538adeb6b7679a5683c0d34", "Url": "https://api.github.com/repos/dfhoughton/Grammar", "Date": "2011-03-24T17:08:57Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tracking)) { net.minecraft.client.Minecraft.getMinecraft().getTextureManager().bindTexture(new net.minecraft.util.ResourceLocation(\"goetia:textures/gui/guiSlot.png\")); java.lang.String text = (net.minecraft.client.resources.I18n.format(\"goetia.tooltip.impurity\")) + (player.getCapability(ImpurityProvider.impurityCapability, null).getImpurity()); this.fontRendererObj.drawStringWithShadow(text, ((((int) (width)) / 2) - ((this.fontRendererObj.getStringWidth(text)) / 2)), (((((int) (height)) / 2) - ((this.fontRendererObj.FONT_HEIGHT) / 2)) + 24), 16729156); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8178/buggy-version/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java", "BodyUseAPI": [], "Fixed commit": "b668c336f128209090acda3a415e56518b7621fd", "Url": "https://api.github.com/repos/RootsTeam/Goetia", "Date": "2016-08-08T04:23:44Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mThreadBeans.size()) > 0) mMainFab.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1871/buggy-version/hipda.src.main.java.net.jejer.hipda.ui.ThreadListFragment.java", "BodyUseAPI": [], "Fixed commit": "2e563bd36cab62ece369ac962c143d0dcab62556", "Url": "https://api.github.com/repos/r0nn/hipda", "Date": "2016-12-04T06:35:00Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restlet.data.Method.equals(Method.POST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (isPost && (storeName != null)) { org.geoserver.catalog.CoverageStoreInfo coverage = catalog.getCoverageStoreByName(storeName); if (coverage != null) { if ((workspaceName == null) || ((workspaceName != null) && (coverage.getWorkspace().getName().equalsIgnoreCase(workspaceName)))) { java.io.File dirFile = org.geotools.data.DataUtilities.urlToFile(new java.net.URL(coverage.getURL())); if (!(dirFile.exists())) { directory = catalog.getResourceLoader().findOrCreateDirectory(dirFile, \"\"); }else { directory = dirFile; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7016/buggy-version/src.restconfig.src.main.java.org.geoserver.catalog.rest.StoreFileResource.java", "BodyUseAPI": ["org.geoserver.catalog.Catalog.getCoverageStoreByName(java.lang.String)"], "Fixed commit": "b7fbda81d5af8f8547dbbf0bec77d9f9e7300ba9", "Url": "https://api.github.com/repos/n-lagomarsini/geoserver", "Date": "2014-06-05T17:30:48Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directory == null) { directory = catalog.getResourceLoader().findOrCreateDirectory(\"data\", workspaceName, storeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7016/buggy-version/src.restconfig.src.main.java.org.geoserver.catalog.rest.StoreFileResource.java", "BodyUseAPI": [], "Fixed commit": "b7fbda81d5af8f8547dbbf0bec77d9f9e7300ba9", "Url": "https://api.github.com/repos/n-lagomarsini/geoserver", "Date": "2014-06-05T17:30:48Z"},
{"Line": "=>1065", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mcsmith.nlp.hw6.TagDict.debugMode) java.lang.System.out.printf(\"novel new emission:%s->%s\\n\", mcsmith.nlp.hw6.TagDict.getTagFromKey(possibleTag), mcsmith.nlp.hw6.TagDict.getWordFromKey(wordKey));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1703/buggy-version/HMMEM.src.mcsmith.nlp.hw6.TagDict.java", "BodyUseAPI": [], "Fixed commit": "99cb22282abe44249ae15f9ab895a618f9a0ce28", "Url": "https://api.github.com/repos/themikesmith/nlphw6", "Date": "2013-11-19T05:35:39Z"},
{"Line": "=>1112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mcsmith.nlp.hw6.TagDict.debugMode) java.lang.System.out.println((\"novel new word:\" + word));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1703/buggy-version/HMMEM.src.mcsmith.nlp.hw6.TagDict.java", "BodyUseAPI": [], "Fixed commit": "99cb22282abe44249ae15f9ab895a618f9a0ce28", "Url": "https://api.github.com/repos/themikesmith/nlphw6", "Date": "2013-11-19T05:35:39Z"},
{"Line": "=>1083", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mcsmith.nlp.hw6.TagDict.debugMode) java.lang.System.out.printf(\"novel new transmission:%s->%s\\n\", mcsmith.nlp.hw6.TagDict.getTagFromKey(prevPossibleTag), mcsmith.nlp.hw6.TagDict.getTagFromKey(possibleTag));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1703/buggy-version/HMMEM.src.mcsmith.nlp.hw6.TagDict.java", "BodyUseAPI": [], "Fixed commit": "99cb22282abe44249ae15f9ab895a618f9a0ce28", "Url": "https://api.github.com/repos/themikesmith/nlphw6", "Date": "2013-11-19T05:35:39Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hidden) toolbar.setTitle(getString(R.string.hidden_folder)); else toolbar.setTitle(getString(R.string.local_folder));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1539/buggy-version/app.src.main.java.org.fossasia.phimpme.gallery.activities.LFMainActivity.java", "BodyUseAPI": [], "Fixed commit": "d183d412263aa466dcabdbfa8ce43860effb1e24", "Url": "https://api.github.com/repos/Anshpuri/phimpme-android", "Date": "2017-09-17T15:13:51Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMenuItem) > 0) currentMenuItem = (currentMenuItem) - 1; else currentMenuItem = (menuStrings.length) - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3948/buggy-version/core.src.at.juggle.gdx.screens.MenuScreen.java", "BodyUseAPI": [], "Fixed commit": "f333e0e961d5ca01318e337bd931a983d1a12c28", "Url": "https://api.github.com/repos/dermotte/GdxGameSkeleton", "Date": "2016-02-17T15:14:35Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/805/buggy-version/src.main.java.snap.forms.internal.CheckBoxField.java", "BodyUseAPI": [], "Fixed commit": "56f8904cfeb1253b4bdb87a13a4102e2d5339e18", "Url": "https://api.github.com/repos/jaapgeurts/snap", "Date": "2016-04-01T10:41:48Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.sammengistu.stuck.model.StuckPostSimple.getChoiceOne()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((choiceOne.length()) > 9) { cardViewListADViewHolder.mStuckPostSneakPeakChoice.setText(choiceOne.substring(0, 9)); }else { cardViewListADViewHolder.mStuckPostSneakPeakChoice.setText(choiceOne); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/280/buggy-version/app.src.main.java.com.example.sammengistu.stuck.adapters.CardViewListFBAdapter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "813dd9d3aae93ca7d46df8cb50358530da45388f", "Url": "https://api.github.com/repos/sam321pbs/Stuck", "Date": "2016-05-04T17:05:12Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parentfile.exists())) { parentfile.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8297/buggy-version/src.main.java.org.mart.crs.logging.NewFileLogger.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "46cf2cd5b3bdae026281fb878e6ee2a5327c2373", "Url": "https://api.github.com/repos/hutm/MART", "Date": "2012-10-23T11:34:48Z"},
{"Line": "=>1312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getMyApplication().getLocationProvider().getLocationSimulation().isRouteAnimating()) { getMyApplication().getLocationProvider().getLocationSimulation().startStopRouteAnimation(mapActivity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8367/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": [], "Fixed commit": "4b5cf87d3461b70d1336057258bdb0b3b9b4b3a7", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2013-08-03T21:44:51Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jds.webapp.Fragment.FragmentListArticle.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (bundle != null) { keyword = bundle.getString(com.jds.webapp.Fragment.FragmentListArticle.KEY_WORD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8380/buggy-version/app.src.main.java.com.jds.webapp.Fragment.FragmentListArticle.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "c02dc4fe34d84be25706ade0ca436e03b5959d5e", "Url": "https://api.github.com/repos/deoreo/matome_prototype", "Date": "2015-03-13T16:13:50Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(getMultiTechnology())) { for (java.lang.String technologyList : getMultiTechnology()) { java.util.List<com.photon.phresco.commons.model.ArtifactGroup> moduleGroups = getServiceManager().getFeatures(getCustomerId(), technologyList, com.photon.phresco.commons.model.ArtifactGroup.Type.valueOf(getType()).name()); if (org.apache.commons.collections.CollectionUtils.isNotEmpty(moduleGroups)) { for (com.photon.phresco.commons.model.ArtifactGroup moduleGroup : moduleGroups) { if (moduleGroup.getName().equalsIgnoreCase(getName())) { setNameError(getText(com.photon.phresco.service.admin.actions.components.KEY_I18N_ERR_NAME_ALREADY_EXIST_APPTYPE)); tempError = true; break; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/374/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.admin.actions.components.Features.java", "BodyUseAPI": [], "Fixed commit": "f13238aaae2770476c8b73543f5232a8ed55e699", "Url": "https://api.github.com/repos/phresco/service", "Date": "2013-01-04T10:36:32Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getScrollY()) + differenceInY) <= 0) { int bottomEndPoint = getTop(); if (((getScrollY()) + differenceInY) >= (getTop())) { scrollBy(0, ((int) (differenceInY))); }else { scrollTo(0, bottomEndPoint); } }else { scrollTo(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7469/buggy-version/customscrollablelistview.src.main.java.com.anitha.custom.viewgroup.CircularListViewGroup.java", "BodyUseAPI": [], "Fixed commit": "c8f18d56fabca0d3145e2316eb1e4e919b027507", "Url": "https://api.github.com/repos/AnithaManikandan/CustomListViewGroup", "Date": "2016-03-20T10:09:08Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (origFile instanceof java.lang.String) { iis = javax.imageio.ImageIO.createImageInputStream(new java.io.File(((java.lang.String) (origFile)))); }else { com.utils.media.ThumbnailGenerator.logger.warn(\"unknown type of input file: {}\", origFile); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6962/buggy-version/photoweb.src.com.utils.media.ThumbnailGenerator.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.Object)"], "Fixed commit": "5465d61aed8e90700c777daecd4d77b98b0b47f6", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-03-08T13:17:29Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (icnt == (nw)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4977/buggy-version/h2o-core.src.main.java.water.rapids.ast.prims.advmath.AstISax.java", "BodyUseAPI": [], "Fixed commit": "6c123ba7ac88b96280f212e67f60eab5048cc18d", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-09-08T20:28:09Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addDefectIds) { defectList = dt.getDefectList(); if (((dt.getLastError()) != null) && (!(dt.getLastError().isEmpty()))) { map.put(com.denimgroup.threadfix.webapp.controller.ApplicationsController.ERROR_MSG, dt.getLastError()); return map; } }else { defectList = list(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/858/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.webapp.controller.ApplicationsController.java", "BodyUseAPI": [], "Fixed commit": "7d45e11f8f4a7559674495b52d88eba20ec4a3e7", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2014-10-09T21:43:34Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tag.getItemViewType()) != (getItemViewType(pos))) { android.util.Log.d(\"SmartpadViewAdapter\", \"view reuse failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6092/buggy-version/src.com.jinnova.smartpad.android.SmartpadViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "ecef14dd1edf1a98e68d8f28f1c824093c2415ce", "Url": "https://api.github.com/repos/smartpad/android", "Date": "2014-05-17T04:17:08Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mCurrentSearch))) { searchAction.expandActionView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5495/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.posts.PostsListActivity.java", "BodyUseAPI": [], "Fixed commit": "3b48bfbe6e1ac3aa84445cfe79da1621a4819759", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2017-05-23T00:27:17Z"},
{"Line": "=>863", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (underscorePos > 0) { measurementType = listRes.get(i).substring(0, underscorePos); processName = listRes.get(i).substring((underscorePos + 1)); }else { measurementType = listRes.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5372/buggy-version/src.com.orange.atk.phone.android.AndroidPhone.java", "BodyUseAPI": ["java.lang.String.substring(int,java.lang.Integer)", "java.lang.String.substring(int)"], "Fixed commit": "f5ee3976ac17cfedb439229a744c16e8d38ee9ca", "Url": "https://api.github.com/repos/Orange-OpenSource/ATK", "Date": "2015-05-07T14:17:58Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (optimalRuns) net.sf.rails.game.specific._1880.ExpressTrainModifier.log.debug((\"Express Best Run = \" + expressRun));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5049/buggy-version/src.main.java.net.sf.rails.game.specific._1880.ExpressTrainModifier.java", "BodyUseAPI": [], "Fixed commit": "56876cf1972bd246d907a91f736add2d7e644997", "Url": "https://api.github.com/repos/freystef/Rails", "Date": "2015-04-15T17:31:14Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (optimalRuns) net.sf.rails.game.specific._1880.ExpressTrainModifier.log.debug((\"Express Long Run = \" + (run.getRunVertices())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5049/buggy-version/src.main.java.net.sf.rails.game.specific._1880.ExpressTrainModifier.java", "BodyUseAPI": [], "Fixed commit": "56876cf1972bd246d907a91f736add2d7e644997", "Url": "https://api.github.com/repos/freystef/Rails", "Date": "2015-04-15T17:31:14Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ws.group15.DataSingleton.getItineraryById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (compensate(itin)) { itin.state = Itinerary.BookingState.CANCELLED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2617/buggy-version/TravelGoodREST.src.java.ws.group15.DataSingleton.java", "BodyUseAPI": [], "Fixed commit": "74a1c98958bd3096618a64a1913dc9dbafcb7217", "Url": "https://api.github.com/repos/cbudtz/webservices", "Date": "2015-11-30T07:34:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dir.listFiles()) != null) for (java.io.File file : dir.listFiles()) if (!(file.delete())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8678/buggy-version/system.TaskTracker.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "f7978e695b6be9cf9e8a9ee69cb8ccd521919cc9", "Url": "https://api.github.com/repos/lrd15/MapReduce", "Date": "2014-11-23T01:43:59Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jclouds.openstack.nova.v2_0.domain.Server.getImage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (image != null) server.setImage(getImageById(vimInstance, image.getId())); else log.warn(\"The image this server is using was deleted\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2173/buggy-version/src.main.java.org.openbaton.clients.interfaces.client.openstack.OpenstackClient.java", "BodyUseAPI": ["org.openbaton.clients.interfaces.client.openstack.Server.setImage(org.openbaton.clients.interfaces.client.openstack.NFVImage)", "org.openbaton.clients.interfaces.client.openstack.OpenstackClient.getImageById(org.openbaton.clients.interfaces.client.openstack.VimInstance,image.getId())", "org.jclouds.openstack.v2_0.domain.Resource.getId()"], "Fixed commit": "4baca1316a59641a98d23bb4e8ffd5d85f5851fe", "Url": "https://api.github.com/repos/openbaton/openstack-plugin", "Date": "2015-12-03T14:11:22Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jclouds.openstack.nova.v2_0.domain.Server.getImage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (image != null) server.setImage(getImageById(vimInstance, image.getId())); else log.warn(\"The image this server is using was deleted\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2173/buggy-version/src.main.java.org.openbaton.clients.interfaces.client.openstack.OpenstackClient.java", "BodyUseAPI": ["org.jclouds.openstack.v2_0.domain.Resource.getId()", "org.openbaton.clients.interfaces.client.openstack.OpenstackClient.getImageById(org.openbaton.clients.interfaces.client.openstack.VimInstance,image.getId())", "org.openbaton.clients.interfaces.client.openstack.Server.setImage(org.openbaton.clients.interfaces.client.openstack.NFVImage)"], "Fixed commit": "4baca1316a59641a98d23bb4e8ffd5d85f5851fe", "Url": "https://api.github.com/repos/openbaton/openstack-plugin", "Date": "2015-12-03T14:11:22Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jclouds.openstack.nova.v2_0.domain.Server.getFlavor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (flavor != null) server.setFlavor(getFlavorById(vimInstance, flavor.getId())); else log.warn(\"The flavor this server is using was deleted\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2173/buggy-version/src.main.java.org.openbaton.clients.interfaces.client.openstack.OpenstackClient.java", "BodyUseAPI": ["org.openbaton.clients.interfaces.client.openstack.OpenstackClient.getFlavorById(org.openbaton.clients.interfaces.client.openstack.VimInstance,flavor.getId())", "org.jclouds.openstack.v2_0.domain.Resource.getId()", "org.openbaton.clients.interfaces.client.openstack.Server.setFlavor(org.openbaton.catalogue.mano.common.DeploymentFlavour)"], "Fixed commit": "4baca1316a59641a98d23bb4e8ffd5d85f5851fe", "Url": "https://api.github.com/repos/openbaton/openstack-plugin", "Date": "2015-12-03T14:11:22Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (percentage >= 100) { return curve.last(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4427/buggy-version/src.main.java.model.curve.Curve.java", "BodyUseAPI": [], "Fixed commit": "4adaa55b3de6bcc22b1ca4ef7b85b56e028cab43", "Url": "https://api.github.com/repos/goscott/309Grader", "Date": "2015-02-17T21:29:20Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (percentage <= 0) { return curve.first(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4427/buggy-version/src.main.java.model.curve.Curve.java", "BodyUseAPI": [], "Fixed commit": "4adaa55b3de6bcc22b1ca4ef7b85b56e028cab43", "Url": "https://api.github.com/repos/goscott/309Grader", "Date": "2015-02-17T21:29:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getRegisteredMachine().getContainerTemplate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (containerSlots == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2640/buggy-version/src.main.java.mineapi.tile.MadTileEntityInventoryPrefab.java", "BodyUseAPI": [], "Fixed commit": "619debdf7bcb6bea5b25bedb6938401e45753734", "Url": "https://api.github.com/repos/MineAPI/MineAPI.Java", "Date": "2014-12-23T07:49:22Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((world.hasGoalNodesChanged()) || (MarioAI.marioMovement.MarioControls.isPathInvalid(observation, newestPath))) || (enemyPredictor.hasNewEnemySpawned())) { blue = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/536/buggy-version/src.MarioAI.FastAndFurious.java", "BodyUseAPI": [], "Fixed commit": "a2e80c20af2d3a8fd980dfc4f9a461ab74710e83", "Url": "https://api.github.com/repos/TheAIBot/MarioAI", "Date": "2017-06-01T08:29:16Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ajbtechnologies.pojos.ListItem.isUpdate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isUpdate) { getApplicationContext().getCurrentList().addListItem(listItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1751/buggy-version/app.src.main.java.com.ajbtechnologies.DrawNoteActivity.java", "BodyUseAPI": [], "Fixed commit": "eabfc4678fa1235a021afa0bd83d1383f0e46fb9", "Url": "https://api.github.com/repos/pleasantstranga/honeydewit", "Date": "2017-04-29T01:01:42Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((questName == null) || (chapterName == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6425/buggy-version/src.main.java.net.jeebiss.questmanager.quests.QuestJournal.java", "BodyUseAPI": [], "Fixed commit": "6096e73cd5d99914dc697ff7b07d53513df324b9", "Url": "https://api.github.com/repos/Jeebiss/QuestManager", "Date": "2013-01-23T04:39:45Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((questName == null) || (chapterName == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6425/buggy-version/src.main.java.net.jeebiss.questmanager.quests.QuestJournal.java", "BodyUseAPI": [], "Fixed commit": "6096e73cd5d99914dc697ff7b07d53513df324b9", "Url": "https://api.github.com/repos/Jeebiss/QuestManager", "Date": "2013-01-23T04:39:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (questName == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6425/buggy-version/src.main.java.net.jeebiss.questmanager.quests.QuestJournal.java", "BodyUseAPI": [], "Fixed commit": "6096e73cd5d99914dc697ff7b07d53513df324b9", "Url": "https://api.github.com/repos/Jeebiss/QuestManager", "Date": "2013-01-23T04:39:45Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((okHttpRequest.getListOfHeader()) != null) { for (com.virorg.webcallerlib.ContentValue contentValue : okHttpRequest.getListOfHeader()) { builder.addHeader(contentValue.getKey(), contentValue.getStringValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3581/buggy-version/webcallerlib.src.main.java.com.virorg.webcallerlib.HttpWebCall.java", "BodyUseAPI": ["com.virorg.webcallerlib.OkHttpRequest<T>.getListOfHeader()"], "Fixed commit": "2095b7a34675ae6d90aa1c88178e4a1331bf70bb", "Url": "https://api.github.com/repos/VirOrg/webcaller", "Date": "2017-02-06T06:14:00Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDirection) == (SwipyRefreshLayoutDirection.TOP)) { targetY = (mOriginalOffsetTop) + ((int) ((slingshotDist * dragPercent) + extraMove)); }else { targetY = (mOriginalOffsetTop) - ((int) ((slingshotDist * dragPercent) + extraMove)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1620/buggy-version/lib.src.main.java.com.orangegangsters.github.swipyrefreshlayout.library.SwipyRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "1df40ac575da4a53e106e1df6cfd46c8ca159776", "Url": "https://api.github.com/repos/realaboo/SwipyRefreshLayout", "Date": "2015-01-28T06:46:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.channel.ChannelHandlerContext.writeAndFlush(io.netty.buffer.Unpooled.copiedBuffer((\"CSV\" + ((data.getFailCount()) - 1)), java.nio.charset.Charset.forName(\"ascii\")))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (future.isSuccess()) { com.cjx.monitor.jingsu.MessageHandler.logger.debug(\"Succeed to send CSV\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7666/buggy-version/src.main.java.com.cjx.monitor.jingsu.MessageHandler.java", "BodyUseAPI": [], "Fixed commit": "b74bd9dad5e641ae8c5b10cdfb2c71478f309104", "Url": "https://api.github.com/repos/freemanh/cjx-socket-jingsu", "Date": "2016-06-30T15:49:00Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextMonitorTimerPath) != null) { monitorTimerPath = nextMonitorTimerPath; monitorStopped = false; nextMonitorTimerPath = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7368/buggy-version/src.engine.TickManager.java", "BodyUseAPI": [], "Fixed commit": "86e01123585b321a2743cc0ee93c43718232dc4c", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-01-27T19:42:15Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.trentorise.smartcampus.trentinofamiglia.fragments.track.TrackListingFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((java.util.List<java.lang.Object>) (bundle.get(SearchFragment.ARG_LIST))).get(0)) instanceof eu.trentorise.smartcampus.trentinofamiglia.custom.data.model.TrackObject) { return ((java.util.List<eu.trentorise.smartcampus.trentinofamiglia.custom.data.model.TrackObject>) (bundle.get(SearchFragment.ARG_LIST))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3975/buggy-version/src.eu.trentorise.smartcampus.trentinofamiglia.fragments.track.TrackListingFragment.java", "BodyUseAPI": ["android.os.Bundle.get(SearchFragment.ARG_LIST)"], "Fixed commit": "eca0b453e6b4cf13021b14fa3478f30977d2137d", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.vas.trentinofamiglia.android", "Date": "2013-11-27T13:48:21Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hasSign) && (lengthToDelete == 0)) { return false; }else { if (!(insertion.matches(\"^[-\\\\+]?\\\\d*$\"))) { return false; } if (((insertion.charAt(0)) == '+') || ((insertion.charAt(0)) == '-')) { _hasSign = true; }else { _hasSign = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4102/buggy-version/src.main.java.org.lostfan.ktv.view.components.IntegerTextField.java", "BodyUseAPI": [], "Fixed commit": "059ac0c21981aab996d829d015510f4704a8fd6a", "Url": "https://api.github.com/repos/LostFan/KTV", "Date": "2016-01-21T12:22:56Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((packageId.indexOf(':')) > (-1)) { parts = packageId.split(\":\"); packageId = parts[((parts.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8645/buggy-version/SEAD-VA-extensions.services.bagItRestService.src.main.java.org.seadva.bagit.event.impl.SipGenerationHandler.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "f5bf4e505072a9268e0f53067bc501c3b0acd64f", "Url": "https://api.github.com/repos/Data-to-Insight-Center/sead-virtual-archive", "Date": "2015-04-07T20:17:05Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collectionId.indexOf(':')) > (-1)) { parts = collectionId.split(\":\"); collectionId = parts[((parts.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8645/buggy-version/SEAD-VA-extensions.services.bagItRestService.src.main.java.org.seadva.bagit.event.impl.SipGenerationHandler.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "f5bf4e505072a9268e0f53067bc501c3b0acd64f", "Url": "https://api.github.com/repos/Data-to-Insight-Center/sead-virtual-archive", "Date": "2015-04-07T20:17:05Z"},
{"Line": "=>4001", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5965/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "8c9179e49fa431bf015baa43fe4bfdfa01c1ce93", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-09-21T15:41:27Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == (head)) head = n.prev;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7282/buggy-version/src.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "277b82cd1e47cfa1382b4265400c38344d0eb57f", "Url": "https://api.github.com/repos/Frontlinjen/Semester-Projekt-Protokol", "Date": "2016-04-30T20:12:33Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lexer.token()) == (com.alibaba.fastjson.parser.JSONToken.JSONToken.LITERAL_STRING)) && ((lexer.stringVal().length()) == 0)) { lexer.nextToken(); return object; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5895/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.JSONLexer.nextToken()"], "Fixed commit": "3e376375390d05c04199f1a866dec3b27db3e15a", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-12-20T07:20:34Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toHexString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentHex.length()) == 1) { currentHex = \"0\" + currentHex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6280/buggy-version/src.com.lukasz.Solution.java", "BodyUseAPI": [], "Fixed commit": "1b8f6c420b96181c42766629e94713fa5b78e0be", "Url": "https://api.github.com/repos/bbb89/AdventOfCodeDay10", "Date": "2017-12-24T09:23:56Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnFile.exists()) return returnFile;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6297/buggy-version/src.amidst.json.InstallInformation.java", "BodyUseAPI": [], "Fixed commit": "2e95b98528433ea324af1d9381fa95768058286d", "Url": "https://api.github.com/repos/skiphs/AMIDST", "Date": "2013-08-13T03:51:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.hasErrors()) { com.rainasmoon.onepay.web.ApplicationController.LOGGER.warn(\"field error. when submiting reset password application.\"); com.rainasmoon.onepay.web.ApplicationController.LOGGER.debug(result.toString()); return \"reset_password_application\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7381/buggy-version/onepay.src.main.java.com.rainasmoon.onepay.web.ApplicationController.java", "BodyUseAPI": ["org.springframework.validation.BindingResult.toString()", "org.slf4j.Logger.debug(result.toString())"], "Fixed commit": "7717eeb764ffac2813923cf78b13232ad5c721aa", "Url": "https://api.github.com/repos/rainasmoon/online-application", "Date": "2016-08-03T02:02:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((currentModel != null) && ((shortcutToModel) != null)) if (!(currentModel.getDiagramElements().contains(shortcutTo))) shortcutInfo = (\"( \" + ((java.lang.String) (shortcutToModel.getParentPackage().getProperty(PackageProperties.NAME)))) + \" )\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1636/buggy-version/GraphEdit.src.graphedit.model.components.shortcuts.ClassShortcut.java", "BodyUseAPI": ["graphedit.model.diagram.GraphEditModel.getDiagramElements()", "currentModel.getDiagramElements().contains(java.lang.Class)"], "Fixed commit": "95eafdb117371ff15f5c40f8c58140b884847df3", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2014-07-02T12:25:18Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mLoanBean.getLoanType()) == (LoanBean.TYPE_DEBX)) { ((android.widget.RadioButton) (findViewById(R.id.debx))).setChecked(true); }else if ((mLoanBean.getLoanType()) == (LoanBean.TYPE_DEBJ)) { ((android.widget.RadioButton) (findViewById(R.id.debj))).setChecked(true); }else { ((android.widget.RadioButton) (findViewById(R.id.debj))).setChecked(true); mLoanBean.setLoanType(LoanBean.TYPE_DEBJ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7329/buggy-version/app.src.main.java.com.sl.houseloan.MainActivity.java", "BodyUseAPI": ["com.sl.houseloan.LoanBean.setLoanType(LoanBean.TYPE_DEBJ)", "com.sl.houseloan.LoanBean.getLoanType()"], "Fixed commit": "a47780ef9e9d0747847e75b3b218fb6fa05d6c13", "Url": "https://api.github.com/repos/songlin0859/HouseLoan", "Date": "2017-12-09T06:17:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasPaymentNotApproved) { if ((selectedPayment.getPaidserviceid().getId()) == 2) { completeBuyingPoints(selectedPayment); }else if ((selectedPayment.getPaidserviceid().getId()) == 1) { completeMembershipPayment(selectedPayment); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7226/buggy-version/src.main.Java.DT.Beans.PaymentsConfirmBean.java", "BodyUseAPI": [], "Fixed commit": "75d8cd4af4faede8c94dc738911a78c88ef95b1e", "Url": "https://api.github.com/repos/karolis1994/PSK", "Date": "2016-05-30T20:18:30Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempSummaryCompStrategyNames != null) && (!(tempSummaryCompStrategyNames.isEmpty()))) { for (java.lang.String strategyClassName : tempSummaryCompStrategyNames) { version2.prototype.util.Schemas.addTemporalSummaryCompositionStrategy(globalEASTWebSchema, strategyClassName, stmt); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4408/buggy-version/src.version2.prototype.util.Schemas.java", "BodyUseAPI": [], "Fixed commit": "00c1132949474e3a3d1153164c700e3cf2e169c1", "Url": "https://api.github.com/repos/eastweb/EastWeb.V2", "Date": "2015-10-06T18:53:07Z"},
{"Line": "=>1301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pointsRoot.getNumberOfChildren()) > 8) { for (int i = 8; i < 12; i++) getEditPointShape(i).setDefaultColor(ColorRGBA.ORANGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4134/buggy-version/src.main.java.org.concord.energy3d.model.Foundation.java", "BodyUseAPI": [], "Fixed commit": "45a01915db6f4461b71554ec0e6e4e7b7ab5516d", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2016-07-21T14:56:19Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(blockName.equals(\"minecraft:tripwire\"))) { if ((!(blockName.equals(\"minecraft:dirt\"))) && (!(blockName.equals(\"minecraft:grass\")))) { theWorld.setBlock(((startX) + indX), ((startY) + indY), ((startZ) + indZ), net.minecraft.block.Block.getBlockFromName(blockName), 0, 2); }else { theWorld.setBlock(((startX) + indX), ((startY) + indY), ((startZ) + indZ), MagicBeans.blockCloud, 0, 2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1897/buggy-version/src.main.java.com.blogspot.jabelarminecraft.magicbeans.structures.Structure.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "net.minecraft.world.World.setBlock(int,int,int,net.minecraft.block.Block.getBlockFromName(blockName),int,int)", "net.minecraft.block.Block.getBlockFromName(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "791003f3e64c09191f158836bb6b2a82d4ee255b", "Url": "https://api.github.com/repos/jabelar/MagicBeans-1.7.10", "Date": "2015-01-18T07:34:43Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.eco.pioneer.AppLinkService.getInstance()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6642/buggy-version/ecoPioneer.src.com.eco.pioneer.AppLinkService.java", "BodyUseAPI": [], "Fixed commit": "ba2815b95fb265b415b86e6cff7ee6d327c7f73e", "Url": "https://api.github.com/repos/sorik/eco-pioneer", "Date": "2013-11-23T13:45:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.yahoo.labs.samoa.topology.impl.ThreadsEngine.threadPool.size()) <= 0) throw new java.lang.IllegalStateException(\"Try to get ExecutorService from an empty pool.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6940/buggy-version/samoa-threads.src.main.java.com.yahoo.labs.samoa.topology.impl.ThreadsEngine.java", "BodyUseAPI": [], "Fixed commit": "1fd8f9507a1e8a81fe4475cae7325a7c0f807c18", "Url": "https://api.github.com/repos/abifet/samoa", "Date": "2014-02-18T16:38:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cookieFilePath.trim().isEmpty()) cookieFilePath = \"cookie.obj\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6303/buggy-version/src.main.java.com.hehehey.ghost.network.HttpClient.java", "BodyUseAPI": [], "Fixed commit": "578c706dba8ca55a1c79b3dc308b6db42b84a40b", "Url": "https://api.github.com/repos/dickrd/ghost", "Date": "2017-08-29T00:52:29Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.ACTIVITY_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (activityManager != null) { java.util.List<android.app.ActivityManager.RunningAppProcessInfo> appProcessList = activityManager.getRunningAppProcesses(); if (appProcessList != null) { try { for (android.app.ActivityManager.RunningAppProcessInfo process : appProcessList) { if ((process.pid) == myPid) { myProcess = process; break; } } } catch (java.lang.Exception e) { android.util.Log.e(com.tencent.tinker.loader.shareutil.ShareTinkerInternals.TAG, (\"getProcessNameInternal exception:\" + (e.getMessage()))); } if (myProcess != null) { return myProcess.processName; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5538/buggy-version/tinker-android.tinker-android-loader.src.main.java.com.tencent.tinker.loader.shareutil.ShareTinkerInternals.java", "BodyUseAPI": ["android.app.ActivityManager.getRunningAppProcesses()"], "Fixed commit": "3941ea632ae1043bc91dec2349b8862380f88aba", "Url": "https://api.github.com/repos/Tencent/tinker", "Date": "2017-05-24T05:32:44Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["github.daneren2005.dsub.domain.MusicDirectory.Entry.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (filename == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3289/buggy-version/app.src.main.java.github.daneren2005.dsub.domain.MusicDirectory.java", "BodyUseAPI": [], "Fixed commit": "5fc25df4eb3cf1427a00319e5599ab0c97022416", "Url": "https://api.github.com/repos/thknepper/DSub", "Date": "2016-04-27T04:29:31Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fullyQualifiedName.indexOf('$')) != (-1)) fullyQualifiedName = fullyQualifiedName.replace('$', '.');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6276/buggy-version/migdb.dsl.ide.src.migdb.dsl.ide.launch.OpsLaunchShortcut.java", "BodyUseAPI": ["java.lang.String.replace(char,char)"], "Fixed commit": "36842d4ded075fba074bf253dc2bf800d796a2ce", "Url": "https://api.github.com/repos/migdb/migdb", "Date": "2014-03-13T00:01:53Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((xspeed) == 0) && ((yspeed) == 0)) { xspeed = 1; xspeed = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8948/buggy-version/src.BubblePanel.java", "BodyUseAPI": [], "Fixed commit": "a4b67431d5c25d6726eeb3d8d7a3eaeed1ae2ba6", "Url": "https://api.github.com/repos/KWClark/BubbleDraw", "Date": "2016-05-26T06:21:25Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dbtools.gen.android.SchemaField.getJdbcDataType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldType == (SchemaFieldType.BOOLEAN)) { if (field.isNotNull()) { value = fieldNameJavaStyle + \" ? 1 : 0\"; }else { value = ((fieldNameJavaStyle + \" != null ? (\") + fieldNameJavaStyle) + \" ? 1 : 0) : 0\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5789/buggy-version/src.main.java.org.dbtools.gen.android.AndroidBaseRecordRenderer.java", "BodyUseAPI": [], "Fixed commit": "92db5ad6debd1ce8ff8e6f6edd927aa67004743a", "Url": "https://api.github.com/repos/jeffdcamp/dbtools-gen", "Date": "2015-07-09T16:50:27Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!noPreviousEntries) { jsonStreamWriter.separator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1737/buggy-version/odata2-lib.odata-core.src.main.java.org.apache.olingo.odata2.core.ep.producer.JsonDeletedEntryEntityProducer.java", "BodyUseAPI": [], "Fixed commit": "b9a83feae8969adc247ce4313e6e0e99a46d74ed", "Url": "https://api.github.com/repos/ManuelB/olingo-odata2", "Date": "2015-11-17T13:45:55Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8022/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "b50f423c87bae8f6eb9da9cbf1e3c70cf56934b9", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>3047", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c.isOnline(\"mod syn\")) { sendFrame126(\"Mod Syn is @gre@online\", 8147); }else { sendFrame126(\"Mod Syn @red@offline\", 8147); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1748/buggy-version/src.server.game.players.PlayerAssistant.java", "BodyUseAPI": [], "Fixed commit": "39503384a7164c9ede916e222c41bf87f7e3c4cc", "Url": "https://api.github.com/repos/synDev/asp00z232", "Date": "2015-02-25T01:44:21Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startTime) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5731/buggy-version/src.main.java.com.spikeify.cron.entities.CronJob.java", "BodyUseAPI": [], "Fixed commit": "a776056a9daa972ec576325a13064dfa03fb98cd", "Url": "https://api.github.com/repos/Spikeify/spikeify-cron", "Date": "2016-03-05T10:28:53Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((xdi2.core.util.XDIAddressUtil.startsWithXDIAddress(xdiInnerRoot.getSubjectOfInnerRoot(), targetXDIAddress)) != null) { node = this.getGraph().getDeepContextNode(xdiInnerRoot.getContextNode().getXDIAddress(), true); xdi2.core.util.CopyUtil.copyContextNode(((xdi2.core.ContextNode) (node)), operationResultGraph, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7024/buggy-version/messaging-target.src.main.java.xdi2.messaging.target.impl.graph.GraphContextHandler.java", "BodyUseAPI": ["xdi2.core.Graph.getDeepContextNode(xdiInnerRoot.getContextNode().getXDIAddress(),boolean)", "xdiInnerRoot.getContextNode().getXDIAddress()", "xdi2.core.features.nodetypes.XdiInnerRoot.getContextNode()"], "Fixed commit": "27ec993ca7725bc3e661ffff5dd321cff70bed30", "Url": "https://api.github.com/repos/projectdanube/xdi2", "Date": "2015-08-27T12:49:08Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(elements.isEmpty())) { java.lang.String stringelements = \"\"; for (org.jsoup.nodes.Element element : elements) { stringelements += element.text(); } return stringelements.split(\" \").length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/56/buggy-version/src.main.java.eu.learnpad.ca.analysis.presentation.PresentationClarity.java", "BodyUseAPI": [], "Fixed commit": "9561894af6997aa22cd0e31f3fef3c870e989aba", "Url": "https://api.github.com/repos/ISTI-FMT-LearnPAd/learnpad", "Date": "2016-03-02T15:43:59Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.ParameterizedType.getActualTypeArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((converterTypes[1]) instanceof java.lang.reflect.ParameterizedType) { converterClassTarget = ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (converterTypes[1])).getRawType())); }else { converterClassTarget = ((java.lang.Class<?>) (converterTypes[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3710/buggy-version/src.main.java.com.tuyang.beanutils.internal.cache.BeanCopyCache.java", "BodyUseAPI": ["java.lang.reflect.Type.getRawType()"], "Fixed commit": "bd6673325e39a7641c9d36d966e005ec4f4856aa", "Url": "https://api.github.com/repos/yangtu222/BeanUtils", "Date": "2017-11-17T10:59:53Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.ParameterizedType.getActualTypeArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((converterTypes[0]) instanceof java.lang.reflect.ParameterizedType) { converterClassSource = ((java.lang.Class<?>) (((java.lang.reflect.ParameterizedType) (converterTypes[0])).getRawType())); }else { converterClassSource = ((java.lang.Class<?>) (converterTypes[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3710/buggy-version/src.main.java.com.tuyang.beanutils.internal.cache.BeanCopyCache.java", "BodyUseAPI": ["java.lang.reflect.Type.getRawType()"], "Fixed commit": "bd6673325e39a7641c9d36d966e005ec4f4856aa", "Url": "https://api.github.com/repos/yangtu222/BeanUtils", "Date": "2017-11-17T10:59:53Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(user.getStripeManagedAccountId())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6730/buggy-version/src.main.java.com.iuxta.nearby.service.StripeService.java", "BodyUseAPI": [], "Fixed commit": "7243a03ae0aa5a57fa9dc8fc8fd02f8e2ffec7f6", "Url": "https://api.github.com/repos/kelseykerr/nearby-server", "Date": "2017-04-12T19:59:56Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == artifactIds) { artifactIds = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6581/buggy-version/src.main.java.com.wso2.build.registry.GRegRuleRegistry.java", "BodyUseAPI": [], "Fixed commit": "4a36fc3f9341c76e90c618561fc1cac94644b70f", "Url": "https://api.github.com/repos/uvindra/rule-maven-plugin", "Date": "2014-04-11T09:27:22Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.headsupdev.agile.app.docs.View.getPageParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(createParams.containsKey(\"page\"))) { createParams.add(\"page\", title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/581/buggy-version/agile-apps.agile-app-docs.src.main.java.org.headsupdev.agile.app.docs.View.java", "BodyUseAPI": ["org.apache.wicket.PageParameters.add(java.lang.String,java.lang.String)"], "Fixed commit": "70ef3d679e2de1404edbb87b6e80887b099e32b2", "Url": "https://api.github.com/repos/headsupdev/agile", "Date": "2013-03-02T10:44:32Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((command.getSecondWord()) != null) && (command.getSecondWord().equals(\"hello\"))) { zuul.Display.display(this.getName()); zuul.Display.displayln(\"bundleKey\"); }else { zuul.Display.display(this.getName()); zuul.Display.displayln(\"person.notUnderstood\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6038/buggy-version/src.zuul.person.MysteriousPerson.java", "BodyUseAPI": [], "Fixed commit": "41c7b9aa80b7824b1a89d1ffff36c14eab81df97", "Url": "https://api.github.com/repos/mathieumoli/ProjetFinSemestreJ2015", "Date": "2015-01-23T16:09:46Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((value == (-0.0)) && (index < ((_n) - 1))) && ((_keys[(index + 1)]) == 0.0)) { ++index; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4746/buggy-version/projects.OG-Analytics.src.main.java.com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle.java", "BodyUseAPI": [], "Fixed commit": "0de8eafa7067d04f4a534738ff6a0d42dd8020e6", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2014-12-19T14:53:04Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isIrcAvailable()) { org.bukkit.Bukkit.getPluginManager().registerEvents(new de.static_interface.sinklibrary.listener.IrcCommandListener(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1155/buggy-version/SinkLibrary.src.main.java.de.static_interface.sinklibrary.SinkLibrary.java", "BodyUseAPI": [], "Fixed commit": "3d7d9b82eeb6482399abc51c77f7a19ae018da73", "Url": "https://api.github.com/repos/Static-Interface/Sink-Plugins", "Date": "2015-01-18T14:17:43Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tok.countTokens()) != 8) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3080/buggy-version/BNetLogin.src.versioning.CheckRevision.java", "BodyUseAPI": [], "Fixed commit": "7be18adc319d9d735800cd9b2140c2d0833892d4", "Url": "https://api.github.com/repos/wjlafrance/javaop2", "Date": "2011-08-21T06:42:28Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.countTokens()) != 8) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3080/buggy-version/BNetLogin.src.versioning.CheckRevision.java", "BodyUseAPI": [], "Fixed commit": "7be18adc319d9d735800cd9b2140c2d0833892d4", "Url": "https://api.github.com/repos/wjlafrance/javaop2", "Date": "2011-08-21T06:42:28Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (meta != null) { if (type == (meta.getType())) { return true; } if ((type != (org.jclouds.blobstore.domain.StorageType.BLOB)) && ((meta.getType()) != (org.jclouds.blobstore.domain.StorageType.BLOB))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2059/buggy-version/nl.uva.vlet.vfs.cloud.src.nl.uva.vlet.vfs.cloud.CloudFileSystem.java", "BodyUseAPI": ["org.jclouds.blobstore.domain.BlobMetadata.getType()", "org.jclouds.blobstore.domain.BlobMetadata.getType()"], "Fixed commit": "49d2bf625e910e50715bca61321cfb3b157894f8", "Url": "https://api.github.com/repos/skoulouzis/vlet-cloud", "Date": "2012-03-19T16:45:28Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callback) != null) args = callback.onReceiveInBackground(response, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3968/buggy-version/library.src.main.java.com.guster.skywebservice.library.webservice.SkyHttp.java", "BodyUseAPI": [], "Fixed commit": "4d6102f1c94ac6ce4f635450d39e485bac5acd03", "Url": "https://api.github.com/repos/gusterwoei/skyhttp", "Date": "2016-09-13T09:10:33Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (totNum == 0) { controller.setAverageDeliveryTime(0); }else { controller.setAverageDeliveryTime((avTime / totNum)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1371/buggy-version/src.main.logic.Monitor.java", "BodyUseAPI": ["main.controllers.UIController.setAverageDeliveryTime(double)"], "Fixed commit": "e1963417cb70693d326013b931b0faa75f8c555d", "Url": "https://api.github.com/repos/CameronProbert/VUW-SWEN301-GroupProject", "Date": "2015-06-05T07:54:28Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pkg.length()) == 0) { parClsName = clsName.substring(0, sep); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6358/buggy-version/jadx-core.src.main.java.jadx.core.dex.info.ClassInfo.java", "BodyUseAPI": [], "Fixed commit": "e250c7310984ec54937603eedb79aa8e45f72c29", "Url": "https://api.github.com/repos/dstmath/jadx", "Date": "2017-04-29T19:18:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.server.PluginEnableEvent.getPlugin()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((plugin.isEnabled()) && (plugin instanceof com.griefcraft.lwc.LWCPlugin)) { economyPlugin.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8763/buggy-version/modules.economy.src.main.java.com.griefcraft.bukkit.EconomyServerListener.java", "BodyUseAPI": [], "Fixed commit": "63e98be842931bf8e23bafff0f31b2f92ff13632", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2011-08-25T00:21:59Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataSource.isNumeric()) { expression.append(value.toString()); }else { expression.append(\"\\\"\").append(value).append(\"\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4156/buggy-version/zssmodel.src.org.zkoss.zss.range.impl.imexp.ExcelXlsxImporter.java", "BodyUseAPI": [], "Fixed commit": "2c2878dedfb910cf3fb1a92c72818f2505ac2e61", "Url": "https://api.github.com/repos/zkoss/zkspreadsheet", "Date": "2014-03-05T08:26:20Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark.getScaleFactor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numWarehouses <= 0) { numWarehouses = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8832/buggy-version/src.com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark.java", "BodyUseAPI": [], "Fixed commit": "4fdb2e5abf693814318de2421fa14b2a5d6c32bf", "Url": "https://api.github.com/repos/dvanaken/oltpbench", "Date": "2017-04-12T01:33:26Z"},
{"Line": "=>1075", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 17) { if (!(isDestroyed())) { fragmentTransaction.commit(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3089/buggy-version/tables_app.src.main.java.org.opendatakit.tables.activities.TableDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "8653b763db009be5d78a288ab7eb83c812afd50b", "Url": "https://api.github.com/repos/clarlars/tables", "Date": "2017-07-27T04:50:34Z"},
{"Line": "=>1103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nativeFont == null) { nativeFont = impl.defaultFont; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5201/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidAsyncView.java", "BodyUseAPI": [], "Fixed commit": "1315b1b43e256a16b221b143b1eb015589e6d7d0", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-01-29T09:50:23Z"},
{"Line": "=>1088", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (font == null) { font = impl.defaultFont; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5201/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidAsyncView.java", "BodyUseAPI": [], "Fixed commit": "1315b1b43e256a16b221b143b1eb015589e6d7d0", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-01-29T09:50:23Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this) == (cz.cuni.mff.d3s.been.core.task.TaskState.ACCEPTED)) && (state == (cz.cuni.mff.d3s.been.core.task.TaskState.SCHEDULED))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/477/buggy-version/core-data.src.main.java.cz.cuni.mff.d3s.been.core.task.TaskState.java", "BodyUseAPI": [], "Fixed commit": "28ce7381eed9f4109dfe3c65192d60a381932aec", "Url": "https://api.github.com/repos/ever-been/everBeen", "Date": "2013-09-04T19:09:50Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resourceConfig.getProvisionerConfig()) != null) { config.addNamespacedConfig(new org.apache.helix.model.ProvisionerConfigHolder(resourceConfig.getProvisionerConfig()).toNamespacedConfig()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2951/buggy-version/helix-core.src.main.java.org.apache.helix.api.accessor.ResourceAccessor.java", "BodyUseAPI": ["org.apache.helix.api.config.ResourceConfig.getProvisionerConfig()", "org.apache.helix.model.ResourceConfiguration.addNamespacedConfig(new org.apache.helix.model.ProvisionerConfigHolder(resourceConfig.getProvisionerConfig()).toNamespacedConfig())", "org.apache.helix.model.ProvisionerConfigHolder.toNamespacedConfig()"], "Fixed commit": "224c7eaaa0863ae89da7fe7ed12ce36303faca07", "Url": "https://api.github.com/repos/apache/helix", "Date": "2014-02-24T18:13:22Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slot == 0) { if ((itemStack != null) && (pneumaticCraft.common.tileentity.TileEntityProgrammableController.isProgrammableAndValidForDrone(this, itemStack))) { progWidgets = pneumaticCraft.common.tileentity.TileEntityProgrammer.getProgWidgets(itemStack); }else { progWidgets.clear(); targetX = (xCoord) + 0.5; targetY = (yCoord) + 0.6; targetZ = (zCoord) + 0.5; boolean updateNeighbours = false; for (int i = 0; i < (redstoneLevels.length); i++) { if ((redstoneLevels[i]) > 0) { redstoneLevels[i] = 0; updateNeighbours = true; } } if (updateNeighbours) updateNeighbours(); } getAIManager(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/467/buggy-version/src.pneumaticCraft.common.tileentity.TileEntityProgrammableController.java", "BodyUseAPI": [], "Fixed commit": "7e90bc58a4e9b9e2545b96a7eb2278d4e617935b", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-27T19:38:12Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateNeighbours) updateNeighbours();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/467/buggy-version/src.pneumaticCraft.common.tileentity.TileEntityProgrammableController.java", "BodyUseAPI": [], "Fixed commit": "7e90bc58a4e9b9e2545b96a7eb2278d4e617935b", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-27T19:38:12Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["town.ranksContainer.get(defaultRank.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rank == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2789/buggy-version/src.main.java.mytown.commands.CommandsAssistant.java", "BodyUseAPI": [], "Fixed commit": "ae8e9af314fe002c46e466eca7f07c5ce1ef6cb2", "Url": "https://api.github.com/repos/joserobjr/MyTown2", "Date": "2015-12-27T17:40:26Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (btDeviceSelected) { com.mbientlab.activitytracker.MWDeviceConfirmFragment mwDeviceConfirmFragment = new com.mbientlab.activitytracker.MWDeviceConfirmFragment(); mwDeviceConfirmFragment.flashDeviceLight(mwController, getFragmentManager()); btDeviceSelected = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1195/buggy-version/app.src.main.java.com.mbientlab.activitytracker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "65e8ebca2a6157878339fc47128a580ef771768c", "Url": "https://api.github.com/repos/fkangaye/HealthyBit", "Date": "2015-05-10T04:33:45Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((status.isDone()) && ((status.getExitCode()) != null)) && (status.getExitCode().equals(0))) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5535/buggy-version/src.main.java.nl.esciencecenter.xenon.adaptors.slurm.SlurmSchedulerConnection.java", "BodyUseAPI": [], "Fixed commit": "8154bf23a8d3f71cd69cc785d94c1c54f8128c00", "Url": "https://api.github.com/repos/NLeSC/Xenon", "Date": "2015-12-15T08:54:33Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((card2.getValue()) == (card3.getValue())) && ((card3.getValue()) == (card4.getValue()))) && ((card4.getValue()) == (card5.getValue()))) { fourOfAKind = true; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3647/buggy-version/src.backend.actors.Evaluator.java", "BodyUseAPI": [], "Fixed commit": "a035fff313c2dee22bacbb6529a3a99445203490", "Url": "https://api.github.com/repos/RyanNewsom/VideoPokerSimulation", "Date": "2015-12-04T17:22:44Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tr.getCurrentMission().currentNAVObjective()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (obj == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5073/buggy-version/src.main.java.org.jtrfp.trcl.NAVSystem.java", "BodyUseAPI": [], "Fixed commit": "57acc6a3f205203768f08f88c7165d9a561fa62e", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-02-16T11:28:53Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter > 1000) counter = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8104/buggy-version/h2o-core.src.main.java.hex.AUC2.java", "BodyUseAPI": [], "Fixed commit": "c1d53fd797eb4d7a6fa859415b6bc68ad70c4d33", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2017-12-14T21:25:47Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gui.isNumeric(field.getText())) { try { final java.lang.String key = ((java.lang.String) (field.getData(FormProperty.DataKey.KEY.toString()))); final int index = ((java.lang.Integer) (field.getData(FormProperty.DataKey.INDEX.toString()))); final it.albertus.cycles.gui.TorqueGraph graph = ((it.albertus.cycles.gui.TorqueGraph) (field.getData(FormProperty.DataKey.GRAPH.toString()))); final short value = it.albertus.cycles.model.Torque.parse(key, field.getText(), gui.getNumeralSystem().getRadix()); graph.getValues()[index] = value; graph.refresh(); } catch (it.albertus.cycles.engine.InvalidPropertyException ipe) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8812/buggy-version/src.main.java.it.albertus.cycles.gui.listener.TorquePropertyFocusListener.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Text.getText()", "gui.getNumeralSystem().getRadix()", "org.eclipse.swt.widgets.Text.getData(FormProperty.DataKey.GRAPH.toString())", "it.albertus.cycles.gui.listener.TorquePropertyFocusListener.getNumeralSystem()", "org.eclipse.swt.widgets.Text.getData(FormProperty.DataKey.INDEX.toString())", "it.albertus.cycles.model.Torque.parse(java.lang.String,field.getText(),gui.getNumeralSystem().getRadix())", "org.eclipse.swt.widgets.Text.getData(FormProperty.DataKey.KEY.toString())"], "Fixed commit": "8f3cc5199f632ae1a85837cbd1ee0d8b119e61b3", "Url": "https://api.github.com/repos/Albertus82/CyclesMod", "Date": "2016-03-26T21:38:33Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i.label) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4840/buggy-version/app.src.main.java.com.klippe.emojikeyboard.view.DefaultKeyboard.java", "BodyUseAPI": [], "Fixed commit": "9bb2d79a7a12e62e368f12f74149980acfad8ccc", "Url": "https://api.github.com/repos/Konoshenko/EmojiKeyboard", "Date": "2017-07-29T17:05:00Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showDefaultColumn) { configureDefaultColumn(tableViewerCreator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3463/buggy-version/main.plugins.org.talend.core.ui.src.main.java.org.talend.core.ui.metadata.editor.AbstractMetadataTableEditorView.java", "BodyUseAPI": [], "Fixed commit": "3720fb7c106245d5e8ce1e58535477b0c3543c50", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-01-23T10:57:21Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rlimits != null) { this.rlimits = rlimits; }else { this.rlimits = new com.mesosphere.sdk.specification.yaml.WriteOnceLinkedHashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3586/buggy-version/sdk.scheduler.src.main.java.com.mesosphere.sdk.specification.yaml.RawContainer.java", "BodyUseAPI": [], "Fixed commit": "65d3715c8b82d00b74763e113d019c6ead18ba9f", "Url": "https://api.github.com/repos/mesosphere/dcos-commons", "Date": "2017-01-11T19:11:10Z"},
{"Line": "=>1084", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (animator != null) { animator.removeListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4325/buggy-version/src.com.android.incallui.CallCardFragment.java", "BodyUseAPI": ["android.animation.Animator.removeListener(1)"], "Fixed commit": "7fd05f51b9f046979a9283d5f186256c24c1a100", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-InCallUI", "Date": "2016-10-20T00:27:01Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(super.equals(o))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5088/buggy-version/ProjectSource.app-library.src.main.java.com.kayako.sdk.android.k5.common.adapter.BaseIdentityListItem.java", "BodyUseAPI": [], "Fixed commit": "a62a8c3f1993667d1e91e625a9338a8b3cd85838", "Url": "https://api.github.com/repos/metalwihen/Kayako-Android-SDK", "Date": "2017-05-28T02:37:56Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getArtifactVersion().endsWith(\"-SNAPSHOT\")) { routeletBundleVersion += \".0.SNAPSHOT\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2306/buggy-version/main.plugins.org.talend.camel.designer.src.main.java.org.talend.camel.designer.ui.wizards.actions.JavaCamelJobScriptsExportWSAction.java", "BodyUseAPI": [], "Fixed commit": "26665ba549ac7a4c7a858aca6cdf5e2f48ac42db", "Url": "https://api.github.com/repos/ggu-talend/tesb-studio-se", "Date": "2017-03-08T12:08:48Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mBitmapArray) == null) || (mBitmapArray.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5054/buggy-version/app.src.main.java.com.example.chukimmuoi.numberview.NumberObject.java", "BodyUseAPI": [], "Fixed commit": "84fc2654f527b795593c98ab88ba6493ff0989f6", "Url": "https://api.github.com/repos/chukimmuoi/NumberView", "Date": "2017-10-24T07:08:42Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((service.getSrcDevice().status) == (android.net.wifi.p2p.WifiP2pDevice.CONNECTED)) { if ((chatFragment) == null) { chatFragment = new edu.rit.se.crashavoidance.views.ChatFragment(); } replaceFragment(chatFragment); android.util.Log.i(edu.rit.se.crashavoidance.views.MainActivity.TAG, \"Switching to Chat fragment\"); }else if ((service.getSrcDevice().status) == (android.net.wifi.p2p.WifiP2pDevice.AVAILABLE)) { java.lang.String sourceDeviceName = service.getSrcDevice().deviceName; if (sourceDeviceName.equals(\"\")) { sourceDeviceName = \"other device\"; } android.widget.Toast.makeText(this, ((\"Inviting \" + sourceDeviceName) + \" to connect\"), Toast.LENGTH_LONG).show(); wifiDirectHandler.initiateConnectToService(service); }else { android.util.Log.e(edu.rit.se.crashavoidance.views.MainActivity.TAG, \"Service not available\"); android.widget.Toast.makeText(this, \"Service not available\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7408/buggy-version/app.src.main.java.edu.rit.se.crashavoidance.views.MainActivity.java", "BodyUseAPI": ["edu.rit.se.wifibuddy.DnsSdService.getSrcDevice()", "edu.rit.se.wifibuddy.WifiDirectHandler.initiateConnectToService(edu.rit.se.wifibuddy.DnsSdService)", "edu.rit.se.wifibuddy.DnsSdService.getSrcDevice()"], "Fixed commit": "5540feab117c16285d34518a85679fd630bfc7c6", "Url": "https://api.github.com/repos/Crash-Test-Buddies/wifi-direct-tester", "Date": "2016-07-03T23:43:50Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.cam.sup.controllers.BinController.getBin(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bin == null) return javax.ws.rs.core.Response.status(404).build();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4189/buggy-version/src.main.java.uk.ac.cam.sup.controllers.SubmissionController.java", "BodyUseAPI": [], "Fixed commit": "3b3e8333086dfbe985772cb16f283e6f735040fe", "Url": "https://api.github.com/repos/ucam-cl-dtg/urop-2013-handins", "Date": "2013-07-12T10:36:56Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strings.Soundex.debug) { java.lang.System.out.println(((c + \" --> \") + m)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6535/buggy-version/src.main.java.strings.Soundex.java", "BodyUseAPI": [], "Fixed commit": "e71496f97b0d143824bc5395083896a21123244d", "Url": "https://api.github.com/repos/IanDarwin/javasrc", "Date": "2014-03-09T00:50:22Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { if ((((isActive) || (worldObj.isBlockIndirectlyGettingPowered(xCoord, yCoord, zCoord))) && (!(isDone()))) && (calemi.fusionwarfare.api.EnergyUtil.canSubtractEnergy(this, getEnergyCost()))) { (progress)++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8752/buggy-version/src.main.java.calemi.fusionwarfare.tileentity.machine.TileEntityAuraBase.java", "BodyUseAPI": [], "Fixed commit": "a5c5cf3eff362ca3380820b73a529edb463949cc", "Url": "https://api.github.com/repos/TeamMonumental/FusionWarfare", "Date": "2015-11-21T02:08:24Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((connectionTags != null) && ((connectionTags.size()) != 0)) { for (me.anky.connectid.data.ConnectionTag connectionTag : allTags) { if (connectionTags.contains(connectionTag.getTag())) { java.lang.String ids = connectionTag.getConnection_ids(); if ((ids == null) || ((ids.length()) == 0)) { ids = java.lang.String.valueOf(databaseId); }else { ids = (ids + \",\") + (java.lang.String.valueOf(databaseId)); } connectionTag.setConnection_ids(ids); dataSource.updateTag(connectionTag); connectionTags.remove(connectionTag.getTag()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5349/buggy-version/app.src.main.java.me.anky.connectid.editTag.EditTagActivityPresenter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.contains(connectionTag.getTag())", "java.util.List<java.lang.String>.remove(connectionTag.getTag())"], "Fixed commit": "03469e5fa9e4038937e683578522da9f1a5011aa", "Url": "https://api.github.com/repos/anky21/Remember-Names", "Date": "2017-10-31T13:17:56Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (zip != null) { try { zip.close(); } catch (java.io.IOException e) { org.rapidoid.log.Log.error(\"Couldn't close the ZIP stream!\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2686/buggy-version/rapidoid-scan.src.main.java.org.rapidoid.scan.Scan.java", "BodyUseAPI": ["java.util.zip.ZipInputStream.close()"], "Fixed commit": "983ca3e2986340e5c62cad3575592f5f7d49ba96", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2015-07-04T12:37:43Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Words.controller.Model.getSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((this.originaly) < 300) && ((selected.getY()) > 300)) { model.getBoard().releaseWords(selected); }else if (((this.originaly) > 300) && ((selected.getY()) < 300)) { boolean isOverlap = false; if ((model.getBoard().checkOverlap(selected)) != null) { isOverlap = true; selected.setLocation(originalx, originaly); }else { if ((model.getBoard().checkOverlapWord(selected)) != null) { isOverlap = true; selected.setLocation(originalx, originaly); } } if (isOverlap == false) model.getBoard().protectWords(selected); }else if (((this.originaly) > 300) && ((selected.getY()) > 300)) { }else if (((this.originaly) < 300) && ((selected.getY()) < 300)) { boolean potential = false; boolean potentialWord = false; if ((model.getBoard().getOverLapNumber(selected)) > 1) { selected.setLocation(originalx, originaly); }else if ((model.getBoard().checkOverlap(selected)) != null) { Words.controller.Word connectWord = model.getBoard().checkOverlap(selected); int type = model.getBoard().getOverlapType(selected, connectWord); if (((type == 1) || (type == 2)) || (type == 6)) { if (model.getBoard().checkPotentialOverlap(selected, connectWord, 1)) { potentialWord = true; } }else if (((type == 3) || (type == 4)) || (type == 5)) { if (model.getBoard().checkPotentialOverlap(selected, connectWord, 2)) { potentialWord = true; } } if (potentialWord == false) { Words.controller.WordConnectionController connection = new Words.controller.WordConnectionController(model, panel, model.getBoard().checkOverlap(selected)); connection.connect(); }else { selected.setLocation(originalx, originaly); } }else { if ((model.getBoard().checkOverlapWord(selected)) != null) { Words.controller.Poem connectPoem = model.getBoard().checkOverlapWord(selected); int type = model.getBoard().getOverlapPoemWord(connectPoem, selected); if (((type == 1) || (type == 4)) || (type == 5)) { if (model.getBoard().checkPotentialOverlapPoem(selected, connectPoem, 1)) { potential = true; } }else if (((type == 2) || (type == 3)) || (type == 6)) { if (model.getBoard().checkPotentialOverlapPoem(selected, connectPoem, 2)) { potential = true; } } if (((type == 7) || (type == 8)) || (potential == true)) { selected.setLocation(originalx, originaly); }else { Words.controller.WordConnectionController connection = new Words.controller.WordConnectionController(model, panel, connectPoem); connection.connectPoem(type); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/13/buggy-version/cs509_cyberPoetrySlam.src.Words.controller.WordMoveController.java", "BodyUseAPI": ["Words.controller.Word.getY()", "model.getBoard().checkOverlap(Words.controller.Word)", "model.getBoard().checkOverlap(Words.controller.Word)", "model.getBoard().checkOverlapWord(Words.controller.Word)", "model.getBoard().checkPotentialOverlap(Words.controller.Word,Words.controller.Word,int)", "model.getBoard().releaseWords(Words.controller.Word)", "model.getBoard().checkOverlapWord(Words.controller.Word)", "Words.controller.Word.getY()", "model.getBoard().getOverlapType(Words.controller.Word,Words.controller.Word)", "model.getBoard().getOverlapPoemWord(Words.controller.Poem,Words.controller.Word)", "Words.controller.Word.setLocation(int,int)", "model.getBoard().checkOverlapWord(Words.controller.Word)", "Words.controller.Word.setLocation(int,int)", "model.getBoard().checkPotentialOverlapPoem(Words.controller.Word,Words.controller.Poem,int)", "Words.controller.Word.getY()", "model.getBoard().checkOverlap(Words.controller.Word)", "Words.controller.Word.setLocation(int,int)", "model.getBoard().checkPotentialOverlapPoem(Words.controller.Word,Words.controller.Poem,int)", "Words.controller.Word.setLocation(int,int)", "model.getBoard().getOverLapNumber(Words.controller.Word)", "Words.controller.Word.setLocation(int,int)", "model.getBoard().protectWords(Words.controller.Word)", "model.getBoard().checkPotentialOverlap(Words.controller.Word,Words.controller.Word,int)", "model.getBoard().checkOverlap(Words.controller.Word)"], "Fixed commit": "064024927685e0cfc7efe095f1091f21580d8c2d", "Url": "https://api.github.com/repos/KuanSheng/CS509_CyberPoemSlam", "Date": "2014-10-31T15:20:24Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Words.controller.Model.getSelected()", "model.getBoard().checkOverlap(Words.controller.Word)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (model.getBoard().checkPotentialOverlap(selected, connectWord, 1)) { potentialWord = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/13/buggy-version/cs509_cyberPoetrySlam.src.Words.controller.WordMoveController.java", "BodyUseAPI": [], "Fixed commit": "064024927685e0cfc7efe095f1091f21580d8c2d", "Url": "https://api.github.com/repos/KuanSheng/CS509_CyberPoemSlam", "Date": "2014-10-31T15:20:24Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (potentialWord == false) { Words.controller.WordConnectionController connection = new Words.controller.WordConnectionController(model, panel, model.getBoard().checkOverlap(selected)); connection.connect(); }else { selected.setLocation(originalx, originaly); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/13/buggy-version/cs509_cyberPoetrySlam.src.Words.controller.WordMoveController.java", "BodyUseAPI": [], "Fixed commit": "064024927685e0cfc7efe095f1091f21580d8c2d", "Url": "https://api.github.com/repos/KuanSheng/CS509_CyberPoemSlam", "Date": "2014-10-31T15:20:24Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Words.controller.Model.getSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((model.getBoard().checkOverlapWord(selected)) != null) { Words.controller.Poem connectPoem = model.getBoard().checkOverlapWord(selected); int type = model.getBoard().getOverlapPoemWord(connectPoem, selected); if (((type == 1) || (type == 4)) || (type == 5)) { if (model.getBoard().checkPotentialOverlapPoem(selected, connectPoem, 1)) { potential = true; } }else if (((type == 2) || (type == 3)) || (type == 6)) { if (model.getBoard().checkPotentialOverlapPoem(selected, connectPoem, 2)) { potential = true; } } if (((type == 7) || (type == 8)) || (potential == true)) { selected.setLocation(originalx, originaly); }else { Words.controller.WordConnectionController connection = new Words.controller.WordConnectionController(model, panel, connectPoem); connection.connectPoem(type); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/13/buggy-version/cs509_cyberPoetrySlam.src.Words.controller.WordMoveController.java", "BodyUseAPI": ["model.getBoard().checkOverlapWord(Words.controller.Word)", "Words.controller.Model.getBoard()", "model.getBoard().getOverlapPoemWord(Words.controller.Poem,Words.controller.Word)", "Words.controller.Model.getBoard()", "Words.controller.Model.getBoard()", "model.getBoard().checkPotentialOverlapPoem(Words.controller.Word,Words.controller.Poem,int)", "Words.controller.Model.getBoard()", "model.getBoard().checkPotentialOverlapPoem(Words.controller.Word,Words.controller.Poem,int)", "Words.controller.Word.setLocation(int,int)"], "Fixed commit": "064024927685e0cfc7efe095f1091f21580d8c2d", "Url": "https://api.github.com/repos/KuanSheng/CS509_CyberPoemSlam", "Date": "2014-10-31T15:20:24Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.vuzi.fileexplorer.database.directory.DirectoryUtils.getDirectory(fr.vuzi.fileexplorer.database.user.User,java.util.List<java.lang.String>,java.lang.String)", "fr.vuzi.fileexplorer.database.directory.DirectoryUtils.getDirectory(fr.vuzi.fileexplorer.database.user.User,java.util.ArrayList<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (container.getInnerPath().startsWith(dir.getInnerPath())) { c.setAttribute(\"model\", new fr.vuzi.fileexplorer.message.GenericMessage(true, 404, new fr.vuzi.fileexplorer.message.ErrorMessage(400, \"Error : Could not move directory inside itself\"))); c.setStatus(400); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1535/buggy-version/WEB-INF.src.fr.vuzi.fileexplorer.api.action.directory.ActionDirModification.java", "BodyUseAPI": [], "Fixed commit": "6af6d3c5bfd97ef07876eba8173af175a1fc1c27", "Url": "https://api.github.com/repos/Vuzi/JavaOnlineFileExplorer", "Date": "2015-05-18T21:11:34Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path == null) || (path.isEmpty())) return this.config.getRoot().getKeys(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1622/buggy-version/src.core.net.citizensnpcs.properties.ConfigurationHandler.java", "BodyUseAPI": [], "Fixed commit": "45c5a31109db70e88b99e9be649ade691e67e4bc", "Url": "https://api.github.com/repos/CitizensDev/Citizens", "Date": "2011-10-27T15:08:09Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commitService.saveCommit(newCommit)) { integrationResultRepository.saveIntegrationResult(new com.github.dmitriylamzin.domain.IntegrationResult()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5990/buggy-version/src.main.java.com.github.dmitriylamzin.service.IntegrationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7cbc1b721cd5813687b89293a231bbe34ec17946", "Url": "https://api.github.com/repos/DmitriyLamzin/m1ke", "Date": "2016-11-12T15:00:07Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anyAreSet(channelState, ((org.jboss.remoting3.remote.RemoteConnectionHandler.RECEIVED_CLOSE_REQ) | (org.jboss.remoting3.remote.RemoteConnectionHandler.SENT_CLOSE_REQ)))) { pendingChannels.remove(pendingChannel); result.setCancelled(); return org.xnio.IoUtils.nullCancellable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5981/buggy-version/src.main.java.org.jboss.remoting3.remote.RemoteConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "724a97d5ed692cd683e600aaeceda926a904a3a4", "Url": "https://api.github.com/repos/jboss-remoting/jboss-remoting", "Date": "2016-01-28T18:13:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (carry != 0) { sb.append(carry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8793/buggy-version/lcode.src.lcode.AddStrings.java", "BodyUseAPI": ["java.lang.StringBuilder.append(int)"], "Fixed commit": "386d68429464064168f7a886c71810df451d1cd1", "Url": "https://api.github.com/repos/smeng-study/leetcode", "Date": "2016-10-11T15:13:19Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringCreator == null) { stringCreator = new com.hazelcast.nio.UTFEncoderDecoder.DefaultStringCreator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6096/buggy-version/hazelcast.src.main.java.com.hazelcast.nio.UTFEncoderDecoder.java", "BodyUseAPI": [], "Fixed commit": "373ca2b5221026744ba159b1726924eb2c34b3f1", "Url": "https://api.github.com/repos/asimarslan/hazelcast", "Date": "2015-08-20T17:44:45Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (output.isEmpty()) { output.addAll(super.runSpecificList(matchedTasks)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6758/buggy-version/src.logic.search.Search.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.addAll(super.runSpecificList(matchedTasks))"], "Fixed commit": "f9b40f8b8eb13de851a351c75eeff7ab6b56b9d8", "Url": "https://api.github.com/repos/cs2103jan2016-t11-3j/main", "Date": "2016-03-28T15:41:21Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((-1) == indexOfMin) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/216/buggy-version/src.main.java.com.ldbc.driver.WorkloadStreams.java", "BodyUseAPI": [], "Fixed commit": "8c28cd7808bd7ab9ee5532cce23e926083108abc", "Url": "https://api.github.com/repos/ldbc/ldbc_driver", "Date": "2014-10-10T07:57:04Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.dolia.pmm.repository.AccountRepository.findOne(transaction.getAccount().getId())", "me.dolia.pmm.repository.AccountRepository.findOne(transaction.getTransferAccount().getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (accountTo.equals(account)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3528/buggy-version/src.main.java.me.dolia.pmm.service.TransactionService.java", "BodyUseAPI": [], "Fixed commit": "df87ab1d69f3728c41f3139546233f01ae4305f4", "Url": "https://api.github.com/repos/MaksymDolia/personal-money-manager", "Date": "2015-09-25T19:24:08Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(gender.matches(\"0\"))) AddList(getString(R.string.gender), (gender.matches(\"1\") ? getString(R.string.male) : getString(R.string.female)), 2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2995/buggy-version/Favorite.src.com.tarks.favorite.page.ProfileEdit.java", "BodyUseAPI": ["com.tarks.favorite.page.ProfileEdit.AddList(getString(R.string.gender),(gender.matches(\"1\") ? getString(R.string.male) : getString(R.string.female)),int)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "4fdcc03db6732a1cd487a63d917b556cf57c46f6", "Url": "https://api.github.com/repos/tarksgit/Favorite-Android-Client", "Date": "2014-06-05T16:21:34Z"},
{"Line": "=>814", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < 14) { if ((imagesize[1]) > 1024) option.inSampleSize = (java.lang.Integer.parseInt(com.tarks.favorite.global.Global.mod.getString(R.string.pic_size_devide))) * 1; if ((imagesize[1]) > 2048) option.inSampleSize = (java.lang.Integer.parseInt(com.tarks.favorite.global.Global.mod.getString(R.string.pic_size_devide))) * 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2995/buggy-version/Favorite.src.com.tarks.favorite.global.Global.java", "BodyUseAPI": [], "Fixed commit": "4fdcc03db6732a1cd487a63d917b556cf57c46f6", "Url": "https://api.github.com/repos/tarksgit/Favorite-Android-Client", "Date": "2014-06-05T16:21:34Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tmp.stackSize) <= 0) { tmp = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6218/buggy-version/src.main.java.izzyaxel.arcaneartificing.blocks.tileEntities.TEManaFurnace.java", "BodyUseAPI": [], "Fixed commit": "b515c9621e5ec133e95a0e3b91790219dd3ecaba", "Url": "https://api.github.com/repos/izzyaxel/ArcaneArtificing", "Date": "2016-03-15T03:09:52Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ability instanceof mage.abilities.keyword.KickerAbility) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4243/buggy-version/Mage.src.mage.game.GameState.java", "BodyUseAPI": [], "Fixed commit": "4836c48d5e5f5a9d0c2e37c3cea243eae3d54d31", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2012-07-01T20:29:49Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commandLabel.equalsIgnoreCase(\"website\")) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (sender)); if (player.hasPermission(\"information.website\")) { player.sendMessage((((((org.bukkit.ChatColor.DARK_RED) + \"[Information]\") + \" \") + (org.bukkit.ChatColor.DARK_GREEN)) + (plugin.getConfig().getString(\"Website\")))); }else { player.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"I'm sorry, but you do not have permission to perform this command. Please contact the server administrators if you believe that this is in error.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3643/buggy-version/src.io.github.lst96.Information.Commands.java", "BodyUseAPI": [], "Fixed commit": "fc4ec7796ed3cce539e8d602fe48c56d6f149ce5", "Url": "https://api.github.com/repos/lst96/Information", "Date": "2013-05-11T21:41:13Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ihmc.commonWalkingControlModules.highLevelHumanoidControl.highLevelStates.walkingController.states.WalkingSingleSupportState.peekTiming(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (nextFootstepTiming != null) pelvisOrientationManager.initializeSwing(supportSide, swingTime, nextFootstepTiming.getTransferTime(), nextFootstepTiming.getSwingTime()); else pelvisOrientationManager.initializeSwing(supportSide, swingTime, finalTransferTime, 0.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3800/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.highLevelHumanoidControl.highLevelStates.walkingController.states.WalkingSingleSupportState.java", "BodyUseAPI": ["us.ihmc.humanoidRobotics.footstep.FootstepTiming.getSwingTime()", "us.ihmc.humanoidRobotics.footstep.FootstepTiming.getTransferTime()", "us.ihmc.commonWalkingControlModules.controlModules.PelvisOrientationManager.initializeSwing(us.ihmc.commonWalkingControlModules.highLevelHumanoidControl.highLevelStates.walkingController.states.WalkingSingleSupportState,double,nextFootstepTiming.getTransferTime(),nextFootstepTiming.getSwingTime())"], "Fixed commit": "486060a042bbb7e139cbff595930f5dee84408cf", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2017-04-27T18:10:57Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jar.exists())) { console.error(\"Excluding {0} from Eclipse classpath because artifact does not exist!\", dependency.getCoordinates()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8351/buggy-version/toolkit.src.core.java.org.moxie.Build.java", "BodyUseAPI": [], "Fixed commit": "c753e554769061a317c431ab65205fcd0fd03527", "Url": "https://api.github.com/repos/gitblit/moxie", "Date": "2013-02-07T23:58:55Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(jar.exists())) { console.error(\"Excluding {0} from IntelliJ IDEA classpath because artifact does not exist!\", dependency.getCoordinates()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8351/buggy-version/toolkit.src.core.java.org.moxie.Build.java", "BodyUseAPI": [], "Fixed commit": "c753e554769061a317c431ab65205fcd0fd03527", "Url": "https://api.github.com/repos/gitblit/moxie", "Date": "2013-02-07T23:58:55Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.actions.get((this.indexOfCurrentAction %= this.actions.size()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(this.removeActionIfFinished(action))) { (this.indexOfCurrentAction)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/557/buggy-version/src.pool.action.scheduler.FairScheduler.java", "BodyUseAPI": [], "Fixed commit": "4465cfa53e50db9dcb53223a7ddd9631719358c4", "Url": "https://api.github.com/repos/Antou/Pool", "Date": "2015-10-17T20:58:19Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(learnLevelLanguageTextField.getText().equals(trainingVocables.get(currentPositionInTrainingVocables).getLearnLevel()))) { manager.VocableManager.changeVocableLearnLevel(trainingVocables.get(currentPositionInTrainingVocables), learnLevelLanguageTextField.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6729/buggy-version/src.dialogues.vocableactions.TrainVocablesDialogue.java", "BodyUseAPI": ["manager.VocableManager.changeVocableLearnLevel(trainingVocables.get(currentPositionInTrainingVocables),learnLevelLanguageTextField.getText())", "java.util.ArrayList<dictionary.Vocable>.get(int)", "gui.JTextFieldWithContextMenu.getText()"], "Fixed commit": "113c7300323bf186c87e50edb0567f5cc37675c8", "Url": "https://api.github.com/repos/Garrin/PATHolong-dictionary", "Date": "2014-02-11T20:42:18Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(learnLevelLanguageTextField.getText().equals(trainingVocables.get(currentPositionInTrainingVocables).getLearnLevel()))) { manager.VocableManager.changeVocableLearnLevel(trainingVocables.get(currentPositionInTrainingVocables), learnLevelLanguageTextField.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6729/buggy-version/src.dialogues.vocableactions.TrainVocablesDialogue.java", "BodyUseAPI": ["java.util.ArrayList<dictionary.Vocable>.get(int)", "manager.VocableManager.changeVocableLearnLevel(trainingVocables.get(currentPositionInTrainingVocables),learnLevelLanguageTextField.getText())", "gui.JTextFieldWithContextMenu.getText()"], "Fixed commit": "113c7300323bf186c87e50edb0567f5cc37675c8", "Url": "https://api.github.com/repos/Garrin/PATHolong-dictionary", "Date": "2014-02-11T20:42:18Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((determina.getMovimentoDeterminaCollection()) != null) { determina.getMovimentoDeterminaCollection().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7780/buggy-version/src.it.tn.rivadelgarda.comune.suite.DeterminaCallbacksRiva.java", "BodyUseAPI": ["com.aPATHstudio.suite.deliberedetermine.entities.Determina.getMovimentoDeterminaCollection()", "determina.getMovimentoDeterminaCollection().clear()"], "Fixed commit": "e54a927605d0a667860a865ccb6d69d331ebdb5a", "Url": "https://api.github.com/repos/ComuneRivaDelGarda/GDA", "Date": "2014-04-07T15:03:18Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.github.sipuada.Constants.RequestMethod, org.github.sipuada.plugins.SipuadaPlugin>.get(RequestMethod.INVITE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sessionPlugin != null) { activePlugins.put(callId, sessionPlugin); sessionPlugin.performSessionSetup(callId, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5897/buggy-version/src.org.github.sipuada.UserAgent.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.github.sipuada.plugins.SipuadaPlugin>.put(java.lang.String,org.github.sipuada.plugins.SipuadaPlugin)", "org.github.sipuada.plugins.SipuadaPlugin.performSessionSetup(java.lang.String,org.github.sipuada.UserAgent)"], "Fixed commit": "237995300d498897da35245b2546c97955eed2e1", "Url": "https://api.github.com/repos/Sipuada/sipuada", "Date": "2016-02-22T20:19:20Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (sessionPlugin != null) { sessionPlugin.performSessionTermination(callId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5897/buggy-version/src.org.github.sipuada.UserAgent.java", "BodyUseAPI": ["org.github.sipuada.plugins.SipuadaPlugin.performSessionTermination(java.lang.String)"], "Fixed commit": "237995300d498897da35245b2546c97955eed2e1", "Url": "https://api.github.com/repos/Sipuada/sipuada", "Date": "2016-02-22T20:19:20Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.classifierIds) == null) { this.classifierIds = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2768/buggy-version/src.main.java.com.ibm.watson.developer_cloud.visual_recognition.v3.model.ClassifyImagesOptions.java", "BodyUseAPI": [], "Fixed commit": "e6a697db4f0769d14320f6e22dbc5e6db2e1ebaa", "Url": "https://api.github.com/repos/watson-developer-cloud/java-sdk", "Date": "2016-07-29T18:56:45Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.ichi2.anki.CollectionHelper.hasStorageAccessPermission(this))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/10/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.services.BootService.java", "BodyUseAPI": [], "Fixed commit": "9a480e6174d29e30495765612839a1e0cbe72758", "Url": "https://api.github.com/repos/ankidroid/Anki-Android", "Date": "2017-12-14T22:27:36Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listener.onMessage(message)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7348/buggy-version/src.main.java.com.kiara.netty.BaseHandler.java", "BodyUseAPI": [], "Fixed commit": "ec05e7c2469fa87ee9c322ac63d3d57faedfd5be", "Url": "https://api.github.com/repos/FIWARE-Middleware/KIARA", "Date": "2014-12-05T12:32:02Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((title.length()) > 3) { this.title = title; }else { this.title = \"Title\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6670/buggy-version/src.chatbot.model.Movie.java", "BodyUseAPI": [], "Fixed commit": "fdeb0b6575e426660d31b4c25c21934c9e78fac5", "Url": "https://api.github.com/repos/Ikegorgon/Chatbot", "Date": "2017-11-03T19:33:52Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sitecore.android.sdk.web.ScParams.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(mSession.getMediaLibraryPath().endsWith(\"/\"))) && (!(itemPath.startsWith(\"/\")))) itemPath = \"/\".concat(itemPath);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7847/buggy-version/sitecore-js-android.src.main.java.net.sitecore.android.sdk.web.UploadMediaPlugin.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "6dcc476ebf308a5ed99aaad6d9a4627089a0437b", "Url": "https://api.github.com/repos/Sitecore/sitecore-android-sdk", "Date": "2014-03-11T12:55:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stringtable.getVirtualFile().exists())) { throw new java.io.FileNotFoundException(\"stringtable.xml doesn't exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8319/buggy-version/src.com.kaylerrenslow.a3plugin.project.ArmaModuleData.java", "BodyUseAPI": [], "Fixed commit": "1f12b70af028897ffdcac1922101eb2890e1f11e", "Url": "https://api.github.com/repos/kayler-renslow/arma-intellij-plugin", "Date": "2016-10-26T00:39:23Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7804/buggy-version/app.src.main.java.in.shaaan.pcipharmd.helper.WebviewActivity.java", "BodyUseAPI": [], "Fixed commit": "6476feca1584a81e9d11eda4b0a7781c7c8280cd", "Url": "https://api.github.com/repos/Shaaan/pcipd", "Date": "2016-01-05T21:09:50Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (originalUnique && (!newVal)) { draft.addUniqueToRemove(field.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7056/buggy-version/platform.mds.mds.src.main.java.org.motechproject.mds.service.impl.EntityServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "be6a9fb3bc84c42f65d84a1db1f7cf40f1a79b5f", "Url": "https://api.github.com/repos/motech/motech", "Date": "2015-12-18T10:53:59Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ps.parse_type) == null) _parse_type = ParserType.AUTO;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5642/buggy-version/h2o-core.src.main.java.water.parser.ParseSetup.java", "BodyUseAPI": [], "Fixed commit": "f1a0921fb29e6aa3efbc6d4a6cea67b97a9b0542", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-03-13T02:28:07Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ps.separator) == 0) _separator = water.parser.ParseSetup.AUTO_SEP;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5642/buggy-version/h2o-core.src.main.java.water.parser.ParseSetup.java", "BodyUseAPI": [], "Fixed commit": "f1a0921fb29e6aa3efbc6d4a6cea67b97a9b0542", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-03-13T02:28:07Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((excecao.getMessage().contains(\"component must be showing on the screen to determine its location\")) && (excecao.getMessage().contains(\"javax.swing.text.JTextComponent$InputMethodRequestsHandler.getTextLocation\"))) { }else { exibirExcecao(new br.univali.ps.nucleo.ExcecaoAplicacao(excecao, ExcecaoAplicacao.Tipo.ERRO_PROGRAMA)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/317/buggy-version/ide.src.main.java.br.univali.ps.nucleo.TratadorExcecoes.java", "BodyUseAPI": ["br.univali.ps.nucleo.TratadorExcecoes.exibirExcecao(br.univali.ps.nucleo.ExcecaoAplicacao)"], "Fixed commit": "3ae89eb9b5b531bdfe30c9835c59eaab334b7f35", "Url": "https://api.github.com/repos/UNIVALI-LITE/Portugol-Studio", "Date": "2017-11-07T16:42:22Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (param.name.equalsIgnoreCase(\"nodeName\")) { nodeName = param.value; if (nodeName.contains(\".\")) throw new com.orientechnologies.orient.core.exception.OConfigurationException(((\"Illegal node name '\" + (nodeName)) + \"'. '.' is not allowed in node name\")); }else if (param.name.startsWith(com.orientechnologies.orient.server.distributed.ODistributedAbstractPlugin.PAR_DEF_DISTRIB_DB_CONFIG)) { setDefaultDatabaseConfigFile(param.value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3120/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedAbstractPlugin.java", "BodyUseAPI": ["param.name.startsWith(java.lang.String)", "com.orientechnologies.orient.server.distributed.ODistributedAbstractPlugin.setDefaultDatabaseConfigFile(param.value)"], "Fixed commit": "37a93c9bc1d75f7c37e70b7b2c6f10035a1f5c72", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-06-24T16:19:47Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currGoal) == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6282/buggy-version/src.main.java.StateMachine.java", "BodyUseAPI": [], "Fixed commit": "374c1db87c50c616b2eaf0b00488dd927f2392bf", "Url": "https://api.github.com/repos/rss-2014-team-6/rss-team-6-state-machine", "Date": "2014-04-08T22:32:14Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.isSsl()) { throw new java.lang.Exception(\"This provider can not provide ssl communication\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2331/buggy-version/benchmark-service-provider.src.main.java.org.rouplex.service.benchmarkservice.BenchmarkServiceProvider.java", "BodyUseAPI": [], "Fixed commit": "e99cec071dddea93f937503434c682ef1ca8132f", "Url": "https://api.github.com/repos/rouplex/rouplex-benchmark-service", "Date": "2017-04-13T10:51:31Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.ethz.inf.dbproject.model.Person.getFirstName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (retFirstName == null) { retFirstName = \"(?)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4972/buggy-version/src.ch.ethz.inf.dbproject.model.Person.java", "BodyUseAPI": [], "Fixed commit": "7f79333e4e3ef9173a7a1185db1eb571c8c88fdd", "Url": "https://api.github.com/repos/vdemotz/IntroDBProject", "Date": "2014-04-09T16:23:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.ethz.inf.dbproject.model.Person.getLastName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (retLastName == null) { retLastName = \"(?)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4972/buggy-version/src.ch.ethz.inf.dbproject.model.Person.java", "BodyUseAPI": [], "Fixed commit": "7f79333e4e3ef9173a7a1185db1eb571c8c88fdd", "Url": "https://api.github.com/repos/vdemotz/IntroDBProject", "Date": "2014-04-09T16:23:21Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Maps.newHashMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rmap = remote.get(map.name)) != null) { boolean needsUpdate = ((map.md5sum) != null) && (!(map.md5sum.equals(rmap.md5sum))); if ((force) || needsUpdate) { org.mctourney.AutoReferee.AutoReferee.getInstance().sendMessageSync(sender, java.lang.String.format(\"UPDATING %s (%s -> %s)...\", rmap.name, map.version, rmap.version)); if ((rmap.getFolder()) == null) sender.sendMessage(\"Update FAILED\"); else { if (map.isInstalled()) org.apache.commons.io.FileUtils.deleteDirectory(map.folder); org.mctourney.AutoReferee.AutoReferee.getInstance().sendMessageSync(sender, (\"Update SUCCESS: \" + (rmap.getVersionString()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8341/buggy-version/src.main.java.org.mctourney.AutoReferee.AutoRefMap.java", "BodyUseAPI": ["org.mctourney.AutoReferee.AutoReferee.getInstance().sendMessageSync(org.bukkit.command.CommandSender,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)", "java.lang.String.equals(java.lang.String)", "org.mctourney.AutoReferee.AutoRefMap.isInstalled()"], "Fixed commit": "c547de0ff57a863a0163470a19eed6b01f2b6595", "Url": "https://api.github.com/repos/rmct/AutoReferee", "Date": "2013-01-17T07:42:49Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["megamek.common.pathfinder.AeroGroundPathFinder.AeroGroundOffBoardFilter.getShortestPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (offBoardPath != null) { paths.add(offBoardFilter.getShortestPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2128/buggy-version/megamek.src.megamek.client.bot.princess.PathEnumerator.java", "BodyUseAPI": [], "Fixed commit": "c1a696e4e923ba107910707327209d6dd9c7540e", "Url": "https://api.github.com/repos/NickAragua/megamek", "Date": "2017-09-13T01:25:48Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.String.valueOf(uri).split(\":\").length) == 3) { ((android.widget.EditText) (findViewById(R.id.ipedit))).setText(java.lang.String.valueOf(uri).split(\"://\")[1].split(\"[:]\")[0]); ((android.widget.EditText) (findViewById(R.id.passedit))).setText(java.lang.String.valueOf(uri).split(\"://\")[1].split(\"[:]\")[1]); }else { ((android.widget.EditText) (findViewById(R.id.ipedit))).setText(java.lang.String.valueOf(uri).split(\"://\")[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8328/buggy-version/src.com.example.whatdosetheboardsay.JoinInterface_activity.java", "BodyUseAPI": ["((android.widget.EditText) (findViewById(R.id.ipedit))).setText(java.lang.String.valueOf(uri).split(\"://\")[1].split(\"[:]\")[0])", "((android.widget.EditText) (findViewById(R.id.ipedit))).setText(java.lang.String.valueOf(uri).split(\"://\")[1])", "java.lang.String.split(java.lang.String)", "((android.widget.EditText) (findViewById(R.id.passedit))).setText(java.lang.String.valueOf(uri).split(\"://\")[1].split(\"[:]\")[1])", "java.lang.String.valueOf(android.net.Uri)", "java.lang.String.valueOf(uri).split(\"://\")[1].split(java.lang.String)", "java.lang.String.valueOf(android.net.Uri)", "java.lang.String.split(java.lang.String)", "java.lang.String.valueOf(android.net.Uri)", "java.lang.String.valueOf(uri).split(\"://\")[1].split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "1bec33c261150acf554664916f0f50a7bcdec528", "Url": "https://api.github.com/repos/Windrunnner/what-dose-the-board-say", "Date": "2014-05-01T04:05:19Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (all) { if (issuesPerLine.containsKey(lineId)) { return issuesPerLine.get(lineId); } }else if (newIssuesPerLine.containsKey(lineId)) { return newIssuesPerLine.get(lineId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5508/buggy-version/src.main.java.org.sonar.issuesreport.report.ResourceReport.java", "BodyUseAPI": [], "Fixed commit": "dd0c427a5af9cec6e646a55996c7cdba0d860b1d", "Url": "https://api.github.com/repos/SonarCommunity/sonar-issues-report", "Date": "2013-09-27T08:26:10Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getPosition().pieceAt(org.rjo.chess.Square,game.getPosition().getSideToMove())", "org.rjo.chess.Square.fromString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((piece != (org.rjo.chess.pieces.PieceType.PAWN)) || ((to.rank()) != validRank)) { throw new java.lang.IllegalArgumentException(((\"UCI string \" + moveStr) + \" indicates pawn promotion, but incorrect piece/rank\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/872/buggy-version/src.main.java.org.rjo.chess.Move.java", "BodyUseAPI": [], "Fixed commit": "08ba43419bda2f27f6efeb11de493dfd2058fc7b", "Url": "https://api.github.com/repos/rjo67/chess", "Date": "2017-12-27T19:42:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parent.source.child(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (allowEmptySuffix && ((block == null) || ((block.child(prefix)) == null))) return prefix;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2047/buggy-version/N2A.src.gov.sandia.n2a.ui.eq.undo.AddAnnotation.java", "BodyUseAPI": [], "Fixed commit": "94a0750444b3022f9f7a17066a3b75a9bb864dce", "Url": "https://api.github.com/repos/frothga/n2a", "Date": "2017-05-02T23:01:52Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.query.client.plugins.ajax.Ajax.Settings.getContentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (contentType != null) { requestBuilder.setHeader(\"Content-type\", settings.getContentType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8537/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.client.plugins.ajax.Ajax.java", "BodyUseAPI": [], "Fixed commit": "d1fd135448f1bf548630baba40df7d8582cbba2c", "Url": "https://api.github.com/repos/manolo/gquery", "Date": "2012-02-13T12:27:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeInfo.isInactive()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6955/buggy-version/src.main.java.redis.clients.util.ClusterNodeInformationParser.java", "BodyUseAPI": [], "Fixed commit": "bf981cb75070ef04e9688d42a0c9b56c56679ca9", "Url": "https://api.github.com/repos/carlvine500/jedis", "Date": "2016-03-02T12:06:45Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (matches(Token.String.class)) { java.lang.String str = match(Token.String.class).text; return wycs.io.Expr.Constant(wycs.io.Value.String(str.substring(1, ((str.length()) - 1))), sourceAttr(start, ((index) - 1))); }else if (matches(Token.Identifier.class)) { return parseVariableOrFunCall(generics, environment); }else if (token instanceof wybs.io.Token.Number) { return parseNumber(generics, environment); }else if (matches(\"-\")) { return parseNegation(generics, environment); }else if (matches(\"|\")) { return parseLengthOf(generics, environment); }else if (matches(\"!\")) { match(\"!\"); return wycs.io.Expr.Unary(Expr.Unary.Op.NOT, parseTerm(generics, environment), sourceAttr(start, ((index) - 1))); }else if (matches(\"{\")) { return parseSet(generics, environment); }else if (matches(\"[\")) { return parseList(generics, environment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2126/buggy-version/modules.wycs.src.wycs.io.WycsFileParser.java", "BodyUseAPI": ["wycs.io.WycsFileParser.match(java.lang.Class)"], "Fixed commit": "87ad28d9509931d547b4b63f4772a77a73dcd0b8", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-03-13T21:02:11Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getSize().length()) > 0) { size = size.add(new java.math.BigInteger(p.getSize())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/903/buggy-version/bigbluebutton-web.src.java.org.bigbluebutton.api.domain.Recording.java", "BodyUseAPI": ["org.bigbluebutton.api.domain.Playback.getSize()", "java.math.BigInteger.add(java.math.BigInteger)"], "Fixed commit": "d56230a948acd5ae32183af0dc570bd7d4c155a6", "Url": "https://api.github.com/repos/mconf/bigbluebutton", "Date": "2016-03-08T22:42:18Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getSize().length()) > 0) { size = size.add(new java.math.BigInteger(p.getSize())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/903/buggy-version/bigbluebutton-web.src.java.org.bigbluebutton.api.domain.Recording.java", "BodyUseAPI": ["java.math.BigInteger.add(java.math.BigInteger)", "org.bigbluebutton.api.domain.Download.getSize()"], "Fixed commit": "d56230a948acd5ae32183af0dc570bd7d4c155a6", "Url": "https://api.github.com/repos/mconf/bigbluebutton", "Date": "2016-03-08T22:42:18Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((moveStatus) == (com.aug.elevator.model.Elevator.MoveStatus.IDLE)) && ((loadSeeds.size()) == 0)) { moveStatus = (seed.isDown()) ? com.aug.elevator.model.Elevator.MoveStatus.DOWN : com.aug.elevator.model.Elevator.MoveStatus.UP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2986/buggy-version/src.com.aug.elevator.model.Elevator.java", "BodyUseAPI": [], "Fixed commit": "750bb3c91bfc0d58bc74e91cd6fc1afb08b0f6ac", "Url": "https://api.github.com/repos/augustan/ElevatorSchedule", "Date": "2015-06-21T15:23:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((owner != null) && (owner.contains(\"[\"))) { callData.setDepth(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/8186/buggy-version/src.problem.asm.MethodBodyVisitor.java", "BodyUseAPI": [], "Fixed commit": "7f5f9db9698401c5523e7bd8dcced9b24b92a77d", "Url": "https://api.github.com/repos/LoganErexson/CSSE374TeamProject", "Date": "2016-01-19T02:25:55Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (viewToRemove != null) { viewToRemove.deleteModuleView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5622/buggy-version/freemodellingeditor.src.main.java.org.openflexo.fme.controller.action.GivesFMENatureInitializer.java", "BodyUseAPI": ["org.openflexo.fme.view.ConvertToFMEProjectView.deleteModuleView()"], "Fixed commit": "7a9d1495015cf2dfd1a146ffcdc93b8164f3b150", "Url": "https://api.github.com/repos/openflexo-team/openflexo-modules", "Date": "2017-12-15T08:21:58Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/5167/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "cc292987d736e8d753a89c1ceaa03e569d2171c0", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IProject.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (projectName.endsWith(\"_erl\")) { final java.lang.String linkname = projectName.substring(0, ((projectName.length()) - 4)); p = new org.eclipse.core.runtime.Path(linkname).append(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6587/buggy-version/org.erlide.core.src.org.erlide.core.builder.BuilderHelper.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "e936b7d7c98ba5b18b8d21673c45620ddefdb4f8", "Url": "https://api.github.com/repos/jakobc/erlide", "Date": "2011-02-11T10:42:42Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempPlayer == (currentPlayer)) { nextTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4041/buggy-version/src.PlayingField.java", "BodyUseAPI": [], "Fixed commit": "f122c853bf84ccdbb597cf5cf57f3ecb79e2a0bb", "Url": "https://api.github.com/repos/exal99/Fanorona", "Date": "2017-01-23T07:36:32Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groupHead) != null) { if (listView.isGroupExpanded(groupPosition)) { if (firstVisibleItem != 0) { groupHead.setVisibility(View.VISIBLE); }else { android.view.View child = listView.getChildAt(0); int top = child.getTop(); if (top < 0) { groupHead.setVisibility(View.VISIBLE); }else { groupHead.setVisibility(View.INVISIBLE); } } }else { groupHead.setVisibility(View.INVISIBLE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1243/buggy-version/AnimateDemo.src.org.mazhuang.animatedemo.StickExpandListHead.java", "BodyUseAPI": [], "Fixed commit": "c5dea8ec6efc00347a5fe5258971d4e2f8d2bd1b", "Url": "https://api.github.com/repos/mzlogin/AndroidPractices", "Date": "2015-03-13T19:25:07Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (buf != null) { int origSize = buf.remaining(); byte[] bytes = new byte[origSize]; buf.get(bytes, buf.position(), origSize); pKey.set(bytes, 0, origSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6475/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.common.KafkaReader.java", "BodyUseAPI": ["java.nio.ByteBuffer.remaining()", "java.nio.ByteBuffer.position()", "java.nio.ByteBuffer.get(byte[],int,int)"], "Fixed commit": "d45a0bb75044d21a79eefac21f982e999fb83c26", "Url": "https://api.github.com/repos/airbnb/camus", "Date": "2016-03-16T00:02:19Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (location == null) { location = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6406/buggy-version/src.de.kneipe.kneipenquartett.ui.map.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "b54325dac28fb7ab72b2d4be0db2d76dfb0fe567", "Url": "https://api.github.com/repos/thju1011/KneipenApp", "Date": "2014-01-02T18:04:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ObjectMapperRepository.objectMapper.readValue(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(openMRSEncounter.shouldERPConsumeEvent())) return org.bahmni.openerp.web.request.OpenERPRequest.DO_NOT_CONSUME;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6894/buggy-version/openerp-atomfeed-service.src.main.java.org.bahmni.feed.openerp.worker.OpenERPSaleOrderEventWorker.java", "BodyUseAPI": [], "Fixed commit": "b026a9d782dbb0c12d1420452ccbe7f87e95db45", "Url": "https://api.github.com/repos/Bahmni/openerp-atomfeed-service", "Date": "2016-01-14T18:52:44Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((maxSize) > 0) && (iSize > (maxSize))) throw new java.lang.IllegalArgumentException((((\"Cannot extend the file to \" + (com.orientechnologies.common.io.OFileUtils.getSizeAsString(iSize))) + \" because the max is \") + (com.orientechnologies.common.io.OFileUtils.getSizeAsString(maxSize))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1322/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.fs.OFileMMap.java", "BodyUseAPI": ["com.orientechnologies.common.io.OFileUtils.getSizeAsString(int)"], "Fixed commit": "97be1755943edf0ae3de081aae0d4540902659bb", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2012-06-02T18:35:00Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startPoint.toString().equals(\"(10926, 11533)\")) java.lang.System.out.println(\"fuck you\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/4572/buggy-version/src.main.java.Fast.java", "BodyUseAPI": [], "Fixed commit": "7bc00dbb2a7f2530aceaea2e977fd3b673256c6e", "Url": "https://api.github.com/repos/maiorovi/AlgorithmsAssignmentPart1", "Date": "2015-07-08T21:24:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (params != null) this.loadParameters(params);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/9012/buggy-version/src.domain.UniSimController.java", "BodyUseAPI": ["domain.UniSimController.loadParameters(java.util.Hashtable<java.lang.String, java.lang.Integer>)"], "Fixed commit": "08845020fca9b18918580487e2098732a0b840c4", "Url": "https://api.github.com/repos/HerrSubset/UniSim", "Date": "2016-01-02T11:00:47Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(passThrough)) { resize(size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3925/buggy-version/bungee.src.main.java.codecrafter47.bungeetablistplus.tablisthandler.AbstractLegacyTabList.java", "BodyUseAPI": [], "Fixed commit": "49404bbfc797f97ae7351fd581712d8728c73b51", "Url": "https://api.github.com/repos/CodeCrafter47/BungeeTabListPlus", "Date": "2016-09-26T22:38:10Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jkiss.dbeaver.DBException.getDataSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dataSource.getContainer().getDataSource()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3850/buggy-version/plugins.org.jkiss.dbeaver.core.src.org.jkiss.dbeaver.core.DBeaverUI.java", "BodyUseAPI": [], "Fixed commit": "0e2e7a84366672b21bd716853f5e3f2e7511eab5", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2017-11-16T17:54:53Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.equals(\"Thomas\")) && (to == (com.abbyberkers.apphome.BaseClass.RDaal))) { int unroundedMinutes = c.get(java.util.Calendar.MINUTE); int mod = unroundedMinutes % 5; c.add(java.util.Calendar.MINUTE, 25); c.add(java.util.Calendar.MINUTE, (mod < 5 ? -mod : 10 - mod)); }else if (((user.equals(\"Abby\")) && (to == (com.abbyberkers.apphome.BaseClass.RDaal))) || ((user.equals(\"Thomas\")) && (to == (com.abbyberkers.apphome.BaseClass.Heeze)))) { java.lang.String plainNumberedTime = convertCalendarToString(c); return new com.abbyberkers.apphome.TimeToWordsConverter(false, true).getTimeString(plainNumberedTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/2938/buggy-version/AppHome.app.src.main.java.com.abbyberkers.apphome.BaseClass.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "d4af66cbbab3b0b1ee222d2c74f57c1bc3921d5f", "Url": "https://api.github.com/repos/PHPirates/AppHome", "Date": "2017-03-25T14:13:04Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Enum, java.lang.Double>.get(E)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(currPeriodicAvLat.isNaN())) { this.averageOfPeriodicAverageLatencies += currPeriodicAvLat; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1325/buggy-version/src.main.java.io.rainfall.statistics.StatisticsPeek.java", "BodyUseAPI": [], "Fixed commit": "a1748176cae232dfecd54e1aed108c3a718d6e1f", "Url": "https://api.github.com/repos/aurbroszniowski/Rainfall-core", "Date": "2015-01-02T00:13:59Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Enum, java.lang.Double>.get(E)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(currCumulAvLat.isNaN())) { this.averageOfCumulativeAverageLatencies += currCumulAvLat; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1325/buggy-version/src.main.java.io.rainfall.statistics.StatisticsPeek.java", "BodyUseAPI": [], "Fixed commit": "a1748176cae232dfecd54e1aed108c3a718d6e1f", "Url": "https://api.github.com/repos/aurbroszniowski/Rainfall-core", "Date": "2015-01-02T00:13:59Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!res0) { res = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3967/buggy-version/src.main.java.name.kazennikov.annotations.patterns.RecursiveJapeAnnotator.java", "BodyUseAPI": [], "Fixed commit": "70e853e79059a5366f853faaeea65621ac8b6d8d", "Url": "https://api.github.com/repos/kzn/tokens", "Date": "2013-11-18T08:55:33Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((am) && ((mHour) == 12)) { return 0; }else if ((!(am)) && ((mHour) == 24)) { return 12; }else { return mHour; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/6271/buggy-version/src.com.bitty.notifyme.TimeChooser.java", "BodyUseAPI": [], "Fixed commit": "798d2fd1cbad1f64f727c472ccd334c43c43e30b", "Url": "https://api.github.com/repos/emmaassin/NotifyMe", "Date": "2011-11-19T17:16:32Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getChannelType().isGuild()) { color = e.getGuild().getSelfMember().getColor(); }else { color = java.awt.Color.decode(configuration.getColor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/414/buggy-version/src.main.java.me.sirgregg.osubot.cmdsystem.commands.UserCommand.java", "BodyUseAPI": ["e.getGuild().getSelfMember().getColor()", "net.dv8tion.jda.core.events.message.MessageReceivedEvent.getGuild()", "e.getGuild().getSelfMember()"], "Fixed commit": "c48b791aa21e7b8abb8d6bb93be15c9116c3deb8", "Url": "https://api.github.com/repos/GreggKr/osu-Self-Bot", "Date": "2017-08-04T16:19:53Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getChannelType().isGuild()) { color = e.getGuild().getSelfMember().getColor(); }else { color = java.awt.Color.decode(configuration.getColor()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/414/buggy-version/src.main.java.me.sirgregg.osubot.cmdsystem.commands.BeatmapCommand.java", "BodyUseAPI": ["net.dv8tion.jda.core.events.message.MessageReceivedEvent.getGuild()", "e.getGuild().getSelfMember()", "e.getGuild().getSelfMember().getColor()"], "Fixed commit": "c48b791aa21e7b8abb8d6bb93be15c9116c3deb8", "Url": "https://api.github.com/repos/GreggKr/osu-Self-Bot", "Date": "2017-08-04T16:19:53Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["persistence.ConnectionManager.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (connection == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7022/buggy-version/src.main.java.persistence.JdbcTemplate.java", "BodyUseAPI": [], "Fixed commit": "69f3759cad0d17b249c62e5fafcb7c9fe05268ab", "Url": "https://api.github.com/repos/BaranovYaroslav/courses", "Date": "2017-07-12T22:21:35Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (connection != null) { connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7022/buggy-version/src.main.java.persistence.JdbcTemplate.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "69f3759cad0d17b249c62e5fafcb7c9fe05268ab", "Url": "https://api.github.com/repos/BaranovYaroslav/courses", "Date": "2017-07-12T22:21:35Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["persistence.ConnectionManager.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (connection == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7022/buggy-version/src.main.java.persistence.JdbcTemplate.java", "BodyUseAPI": [], "Fixed commit": "69f3759cad0d17b249c62e5fafcb7c9fe05268ab", "Url": "https://api.github.com/repos/BaranovYaroslav/courses", "Date": "2017-07-12T22:21:35Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.cookTimeFresh) == 0) { needsSync = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/1817/buggy-version/src.main.java.fi.dy.masa.enderutilities.tileentity.TileEntityEnderFurnace.java", "BodyUseAPI": [], "Fixed commit": "540958d5c881686a27fd93902994bdcfb0cb8570", "Url": "https://api.github.com/repos/maruohon/modjam4", "Date": "2014-07-30T19:02:28Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getChangedValue()) == null) { preparedStatement.setNull(currentIndex, java.sql.Types.TIMESTAMP); }else { preparedStatement.setTimestamp(currentIndex, getChangedValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/7377/buggy-version/src.com.mayhew3.gamesutil.mediaobject.FieldValueTimestamp.java", "BodyUseAPI": [], "Fixed commit": "679e163497dcffc33d17635c6a1ebd5cf4884cf9", "Url": "https://api.github.com/repos/mayhew3/MediaMogulData", "Date": "2016-02-01T08:09:59Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["es.uniovi.asw.parser.readers.ExcelReadList.parseRow(org.apache.poi.xssf.usermodel.XSSFRow,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((data[7]) == null) { wReport.report((\"Null NIF on row number \" + r), ruta); }else { cit = new es.uniovi.asw.parser.Citizen(data); if (census.contains(cit)) { wReport.report((\"Duplicated citizen on row number \" + r), ruta); }else { census.add(cit); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3902/buggy-version/src.main.java.es.uniovi.asw.parser.readers.ExcelReadList.java", "BodyUseAPI": [], "Fixed commit": "10f090fd99610daa4e0f7b6c3d74785edc5a5741", "Url": "https://api.github.com/repos/Arquisoft/citizensLoader_i3b", "Date": "2017-02-19T21:52:02Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (split[7].equals(\"\")) { wReport.report((\"Null NIF on row number \" + r), ruta); }else { es.uniovi.asw.parser.Citizen cit = new es.uniovi.asw.parser.Citizen(split); if (census.contains(cit)) { wReport.report((\"Duplicated citizen on row number \" + r), ruta); }else { census.add(cit); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3902/buggy-version/src.main.java.es.uniovi.asw.parser.readers.TxtReadList.java", "BodyUseAPI": [], "Fixed commit": "10f090fd99610daa4e0f7b6c3d74785edc5a5741", "Url": "https://api.github.com/repos/Arquisoft/citizensLoader_i3b", "Date": "2017-02-19T21:52:02Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cayenne.tx.TransactionFactory.createTransaction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tx.isRollbackOnly()) { tx.rollback(); }else { tx.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V108/3287/buggy-version/weboot-cayenne.src.main.java.com.softmotions.weboot.cayenne.TransactionalInterceptor.java", "BodyUseAPI": ["org.apache.cayenne.tx.Transaction.commit()", "org.apache.cayenne.tx.Transaction.rollback()"], "Fixed commit": "1d829e1ba57ef987d97fd5cab840df3cf51f3baa", "Url": "https://api.github.com/repos/Softmotions/softmotions-java-commons", "Date": "2015-12-22T07:06:39Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((edu.ualberta.med.biobank.widgets.infotables.InfoTableBgrLoader.ListUpdater.getTableViewer().getControl().isDisposed()) || ((paginationWidget) == null)) || (paginationWidget.isDisposed())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4660/buggy-version/eclipse_ws.biobank2.src.edu.ualberta.med.biobank.widgets.infotables.InfoTableBgrLoader.java", "BodyUseAPI": [], "Fixed commit": "ce04896af83505bd73b0ccab2637d0b6df70a37f", "Url": "https://api.github.com/repos/cbsrbiobank/biobank", "Date": "2012-10-23T17:37:24Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pattern.contains(\"$id\"))) { pattern = pattern + \"$id\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5956/buggy-version/org.bridgedb.rdf.src.org.bridgedb.rdf.UriPattern.java", "BodyUseAPI": [], "Fixed commit": "197c6cef9693ea0638589b18f20ced419d6658bd", "Url": "https://api.github.com/repos/bridgedb/BridgeDb", "Date": "2013-11-27T15:52:03Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(parameters.get(\"state\"))) { parameters.put(\"state\", java.util.UUID.randomUUID().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7947/buggy-version/connect.src.com.telenor.connect.AbstractSdkProfile.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "8514c618036b23ada24c6ba55e45b03c3ad6c0b2", "Url": "https://api.github.com/repos/gorandostanic/connect-android-sdk", "Date": "2017-05-30T08:27:26Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.plr.comparator.alphanum.NaturalComparator.logger.isDebugEnabled()) { com.plr.comparator.alphanum.NaturalComparator.logger.debug(\"toSplit:'{}'\", toSplit); for (int i = 0; i < (matcher.groupCount()); i++) { com.plr.comparator.alphanum.NaturalComparator.logger.debug(\"find {} Gr{}: '{}'\", j, i, matcher.group(i)); } j++; com.plr.comparator.alphanum.NaturalComparator.logger.debug(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6362/buggy-version/src.main.java.com.plr.comparator.alphanum.NaturalComparator.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,int,int,java.lang.String)", "org.slf4j.Logger.debug(java.lang.String,java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "25768e453479c9b90955c0d9ad9f30e6ca128eb7", "Url": "https://api.github.com/repos/plrigaux/Comparators", "Date": "2016-04-28T04:04:52Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (immutableZkWorker.isPresent()) { runPendingTasks(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/268/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.RemoteTaskRunner.java", "BodyUseAPI": [], "Fixed commit": "ee5ba486398e0b902c4c5d0f8647c3cd4cd7c552", "Url": "https://api.github.com/repos/metamx/druid", "Date": "2016-04-28T17:28:00Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.druid.indexing.overlord.RemoteTaskRunnerWorkQueue.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (workItem != null) { taskComplete(workItem, null, io.druid.indexing.common.TaskStatus.failure(taskId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/268/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.RemoteTaskRunner.java", "BodyUseAPI": ["io.druid.indexing.overlord.RemoteTaskRunner.3.taskComplete(io.druid.indexing.overlord.RemoteTaskRunnerWorkItem,<nulltype>,io.druid.indexing.common.TaskStatus.failure(taskId))"], "Fixed commit": "ee5ba486398e0b902c4c5d0f8647c3cd4cd7c552", "Url": "https://api.github.com/repos/metamx/druid", "Date": "2016-04-28T17:28:00Z"},
{"Line": "=>1306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node.resolveBoxing()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/318/buggy-version/plugin.src.se.arnetheduck.j2c.transform.TransformUtil.java", "BodyUseAPI": [], "Fixed commit": "7c23b0852c9b230a3a80e68ebbd0efb974ca2f39", "Url": "https://api.github.com/repos/arnetheduck/j2c", "Date": "2013-07-15T14:56:16Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allMethods[i].getName().matches(\"access.*\")) { notAGetter = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8889/buggy-version/src.org.obsidian.util.MethodSorter.java", "BodyUseAPI": [], "Fixed commit": "0f416af64cfd13e4a0ad5fa1fa91276f6b037ab9", "Url": "https://api.github.com/repos/micole/obsidian", "Date": "2013-04-16T02:39:32Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allMethods[i].getName().matches(\"access.*\")) { notASetter = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8889/buggy-version/src.org.obsidian.util.MethodSorter.java", "BodyUseAPI": [], "Fixed commit": "0f416af64cfd13e4a0ad5fa1fa91276f6b037ab9", "Url": "https://api.github.com/repos/micole/obsidian", "Date": "2013-04-16T02:39:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getItemId()) == (R.id.resetAllUsers)) { java.util.List<com.tg.narcis.finalproject.User> users = com.tg.narcis.finalproject.database.DataBaseHelper.getInstance(getActivity()).queryAllUsers(); for (com.tg.narcis.finalproject.User user : users) { if ((user.getPassword()) != \"0\") { user.setScore(\"-1\"); int i = com.tg.narcis.finalproject.database.DataBaseHelper.getInstance(getActivity()).updateUser(user.getUsername(), user.getPassword(), user.getScore()); } } sp = getActivity().getSharedPreferences(\"FinalProject\", Context.MODE_PRIVATE); android.content.SharedPreferences.Editor editor = sp.edit(); editor.putBoolean(\"isFirstTime\", true); editor.apply(); android.widget.Toast.makeText(getActivity(), \"All users score deleted\", Toast.LENGTH_SHORT).show(); restartFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1571/buggy-version/app.src.main.java.com.tg.narcis.finalproject.fragments.Ranking.java", "BodyUseAPI": [], "Fixed commit": "db86edfa85aca21f451aa93aa5d974d089ca8c56", "Url": "https://api.github.com/repos/Nar67/FinalProject", "Date": "2017-07-17T10:41:55Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (head != null) head.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3491/buggy-version/src.main.java.org.mitre.dsmiley.httpproxy.fragments.RearrangeHead.java", "BodyUseAPI": ["org.jsoup.nodes.Element.remove()"], "Fixed commit": "c688ba27109c603b6f3bfc47acbb5ec368a55231", "Url": "https://api.github.com/repos/relvaner/HTTP-Proxy-Servlet", "Date": "2017-11-17T22:08:20Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (head != null) head.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3491/buggy-version/src.main.java.org.mitre.dsmiley.httpproxy.fragments.RearrangeHead.java", "BodyUseAPI": ["org.jsoup.nodes.Element.remove()"], "Fixed commit": "c688ba27109c603b6f3bfc47acbb5ec368a55231", "Url": "https://api.github.com/repos/relvaner/HTTP-Proxy-Servlet", "Date": "2017-11-17T22:08:20Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pairHead.getRight()) != null) { childs = pairHead.getRight().childNodes(); if (((childs.size()) > 0) && ((childs.get(0)) instanceof org.jsoup.nodes.TextNode)) ((org.jsoup.nodes.TextNode) (childs.get(0))).text(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3491/buggy-version/src.main.java.org.mitre.dsmiley.httpproxy.fragments.RearrangeHead.java", "BodyUseAPI": ["pairHead.getRight().childNodes()", "org.apache.commons.lang3.tuple.Pair<org.jsoup.nodes.Element, org.jsoup.nodes.Node>.getRight()"], "Fixed commit": "c688ba27109c603b6f3bfc47acbb5ec368a55231", "Url": "https://api.github.com/repos/relvaner/HTTP-Proxy-Servlet", "Date": "2017-11-17T22:08:20Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.getSelectedIndex()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (position >= 0) { addLabel(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6420/buggy-version/hci-practical.hci.ImagePanel.java", "BodyUseAPI": ["hci.ImagePanel.addLabel(int)"], "Fixed commit": "d42203a5828b2bf9bca5241eb81970f3305ce9db", "Url": "https://api.github.com/repos/Steven-Eardley/hci", "Date": "2012-10-19T12:26:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (instance.isAdmin(event.getMessage().getSender().getId())) { me.stuntguy3000.java.redditlivebot.object.Lang.send(event.getChat(), Lang.ERROR_NOT_ADMIN); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1440/buggy-version/src.main.java.me.stuntguy3000.java.redditlivebot.handler.TelegramEventHandler.java", "BodyUseAPI": ["me.stuntguy3000.java.redditlivebot.object.Lang.send(event.getChat(),Lang.ERROR_NOT_ADMIN)", "pro.zackpollard.telegrambot.api.event.chat.message.TextMessageReceivedEvent.getChat()"], "Fixed commit": "d2c27824cbf8e64b03f05706222166bc248a7dfd", "Url": "https://api.github.com/repos/aaomidi/RedditLiveBot", "Date": "2016-09-27T19:27:25Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hxqh.eam.service.MobileService.cnopNoBadData(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((mobileCnopMsgsList.size()) > 0) { mobileCnopMsgsMap = com.hxqh.eam.common.util.GroupListUtil.group(mobileCnopMsgsList, new com.hxqh.eam.common.util.GroupListUtil.GroupBy<java.lang.String>() { @java.lang.Override public java.lang.String groupby(java.lang.Object obj) { com.hxqh.eam.model.MobileCnopMsg d = ((com.hxqh.eam.model.MobileCnopMsg) (obj)); return d.getSourceType(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2588/buggy-version/src.main.java.com.hxqh.eam.controller.MobileController.java", "BodyUseAPI": ["com.hxqh.eam.common.util.GroupListUtil.group(java.util.List<com.hxqh.eam.model.MobileCnopMsg>,com.hxqh.eam.common.util.GroupListUtil.GroupBy<java.lang.String>)"], "Fixed commit": "91b0abf8a72a8fcfbf93220e31f2fa4d13356edb", "Url": "https://api.github.com/repos/hklhai/hxqh-app", "Date": "2017-12-07T06:40:01Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ByteArrayOutputStream.toByteArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((blob.length) > 1000000) { throw new org.commcare.modern.models.RecordTooLargeException(((blob.length) / 1000000)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4611/buggy-version/modern.org.commcare.modern.database.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "be29daeadf9ff8dc7b7bc0eca85426932415990a", "Url": "https://api.github.com/repos/dimagi/commcare-core", "Date": "2015-10-13T21:36:01Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((accountEntity.assets) != null) { account.assets = assetEntityDataMapper.transform(accountEntity.assets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5219/buggy-version/iroha-android.src.main.java.io.soramitsu.irohaandroid.entity.mapper.AccountEntityDataMapper.java", "BodyUseAPI": ["io.soramitsu.irohaandroid.entity.mapper.AssetEntityDataMapper.transform(accountEntity.assets)"], "Fixed commit": "7959e3932d4a8212f441736098df9f830fe93188", "Url": "https://api.github.com/repos/hyperledger/iroha-android", "Date": "2016-12-10T19:14:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.voidsink.anewjkuapp.activity.KusssAuthenticatorActivity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(mIntent.hasExtra(KusssAuthenticator.ARG_ACCOUNT_TYPE))) { mIntent.putExtra(KusssAuthenticator.ARG_ACCOUNT_TYPE, KusssAuthenticator.ACCOUNT_TYPE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9169/buggy-version/aNewJKUApp.src.main.java.org.voidsink.anewjkuapp.activity.KusssAuthenticatorActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(KusssAuthenticator.ARG_ACCOUNT_TYPE,KusssAuthenticator.ACCOUNT_TYPE)"], "Fixed commit": "0dc3b9c77e8467267392e5dfc116583b89bd4315", "Url": "https://api.github.com/repos/marunjar/anewjkuapp", "Date": "2016-12-16T13:58:55Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mAnchorView.isShown()) { mPopupWindow.showAsDropDown(mAnchorView); }else { android.util.Log.e(com.tooltip.Tooltip.TAG, \"Tooltip cannot be shown, root view is invalid or has been closed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8542/buggy-version/library.src.main.java.com.tooltip.Tooltip.java", "BodyUseAPI": ["android.widget.PopupWindow.showAsDropDown(android.view.View)"], "Fixed commit": "7863e35812023988c8efe8b1478eb09d91bab42a", "Url": "https://api.github.com/repos/ViHtarb/Tooltip", "Date": "2017-04-13T08:13:30Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<cl.minsal.semantikos.model.relationships.SnomedCTRelationship>.size()", "cl.minsal.semantikos.model.ConceptSMTK.getRelationshipsSnomedCT()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((size == 0) || ((size == 1) && (relationship.equals(relationshipsSnomedCT.get(0))))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1404/buggy-version/SemantikosKernelEJB.src.cl.minsal.semantikos.model.businessrules.RelationshipBindingBR.java", "BodyUseAPI": [], "Fixed commit": "dd329304525f831d749781045068d0a6cd1b07d5", "Url": "https://api.github.com/repos/MedicalTrends/servidor-terminologico", "Date": "2016-11-25T19:03:27Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alliance) == (org.firstinspires.ftc.team8923.MasterAutonomous.Alliance.BLUE)) deltaX /= java.lang.Math.sqrt(2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/180/buggy-version/Team8923.src.main.java.org.firstinspires.ftc.team8923.MasterAutonomous.java", "BodyUseAPI": [], "Fixed commit": "e4c3b27210b5fac9971399fb727325ea3234a625", "Url": "https://api.github.com/repos/SwerveRoboticsTeams/ftc_app", "Date": "2017-02-03T05:08:05Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exception.getMessage().contains(\"Merge conflict\")) { refreshProject(openedEditors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6063/buggy-version/codenvy-ext-git.src.main.java.com.codenvy.ide.ext.git.client.pull.PullPresenter.java", "BodyUseAPI": [], "Fixed commit": "65270917252c58e2359e987678649ad907c99d90", "Url": "https://api.github.com/repos/mleduque/plugin-git", "Date": "2014-06-30T12:32:07Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min.isVariable()) return 0; else return ((org.spiderplan.representation.logic.IntegerTerm) (min)).getValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4958/buggy-version/src.main.java.org.spiderplan.representation.constraints.Interval.java", "BodyUseAPI": [], "Fixed commit": "d94420794adfca6a51a81522825ffb4665f2990e", "Url": "https://api.github.com/repos/Ewulution/SpiderPlan", "Date": "2015-09-11T13:18:13Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min.isVariable()) return org.spiderplan.tools.Global.MaxTemporalHorizon; else return ((org.spiderplan.representation.logic.IntegerTerm) (max)).getValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4958/buggy-version/src.main.java.org.spiderplan.representation.constraints.Interval.java", "BodyUseAPI": [], "Fixed commit": "d94420794adfca6a51a81522825ffb4665f2990e", "Url": "https://api.github.com/repos/Ewulution/SpiderPlan", "Date": "2015-09-11T13:18:13Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filter == (ConstEnums.ENRICHMENT_FILTER.AVAILABLE)) && (((dataProvider.getViewType()) != (EnrichmentProvider.TYPE.CANDIDATE_GENE_LIST)) && ((dataProvider.getViewType()) != (EnrichmentProvider.TYPE.STUDY)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7554/buggy-version/genophenbrowser-client.src.main.java.com.gmi.nordborglab.browser.client.mvp.presenter.diversity.meta.CandidateGeneListEnrichmentPresenterWidget.java", "BodyUseAPI": [], "Fixed commit": "da84c2c530c70dcc2da61ec6a88d08ef78c00bf9", "Url": "https://api.github.com/repos/timeu/geno-phen-browser", "Date": "2014-01-13T16:57:02Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((prev == '*') && (ch == '/')) { currentSTATE = yoshikihigo.commentremover.CommentRemover.STATE.CODE; buf.append(\" \"); }else if ((ch == '\\n') || ((ch != '\\n') && (prev == '\\r'))) { buf.append(yoshikihigo.commentremover.CommentRemover.LINE_SEPARATOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2117/buggy-version/src.yoshikihigo.commentremover.CommentRemover.java", "BodyUseAPI": [], "Fixed commit": "df8a0322b9a0d3af22c32d3a2e5f45a6d10ff385", "Url": "https://api.github.com/repos/YoshikiHigo/CommentRemover", "Date": "2013-10-29T14:38:18Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((symbol.length()) > 16) { symbol = (symbol.substring(0, 13)) + \"...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7284/buggy-version/src.compiler.CompilerVisitor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "09f3db42a8aac11bfc8bdf5a7c6bcde67908d9f9", "Url": "https://api.github.com/repos/petersch/jazzik", "Date": "2014-01-06T14:55:18Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2400/buggy-version/ninio-core.src.main.java.com.davfx.ninio.core.HexTcpdumpReader.java", "BodyUseAPI": [], "Fixed commit": "2c1cf32fd6da76c0548f169ea7c7df2ef2152ad3", "Url": "https://api.github.com/repos/davidfauthoux/ninio", "Date": "2016-04-18T08:14:27Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.extension.siddhi.gpl.execution.streamingml.clustering.clustree.ClusTreeStreamProcessorExtension.logger.isDebugEnabled()) { org.wso2.extension.siddhi.gpl.execution.streamingml.clustering.clustree.ClusTreeStreamProcessorExtension.logger.debug((\"Is train the model periodically done: \" + (f.isDone()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/105/buggy-version/component.src.main.java.org.wso2.extension.siddhi.gpl.execution.streamingml.clustering.clustree.ClusTreeStreamProcessorExtension.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "fa63f7752f173d35298e6582659375ce9e3ccdb5", "Url": "https://api.github.com/repos/ksdperera/siddhi-gpl-execution-streamingml", "Date": "2017-12-19T18:31:03Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapFactory.decodeFile(photos.get(position).getPhotoPath())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (bitmap != null) { android.graphics.Matrix matrix = new android.graphics.Matrix(); matrix.postRotate(90.0F); android.graphics.Bitmap rotatedBitmap = android.graphics.Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true); imageThumbnail.setImageBitmap(rotatedBitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7577/buggy-version/app.src.main.java.mobiledev.unb.ca.project365.PhotoGridAdapter.java", "BodyUseAPI": ["android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,bitmap.getWidth(),bitmap.getHeight(),android.graphics.Matrix,boolean)", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getWidth()"], "Fixed commit": "5df03c1371029afa6ad57b6f1e9a4c39d8a7b2ed", "Url": "https://api.github.com/repos/linnameng/project-365", "Date": "2016-02-21T21:16:41Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number == 2) out = \"II\"; else out = \"\" + number;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/42/buggy-version/src.main.java.net.praqma.codeacademy.romannumerals.App.java", "BodyUseAPI": [], "Fixed commit": "98f5255ed1799174f647dbf19b1ef4bfd5202551", "Url": "https://api.github.com/repos/jonasvinther/romannumerals", "Date": "2017-08-03T08:48:09Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is_connected) { output_socket.close(); is_connected = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7579/buggy-version/src.MapGenerator.RoomFieldStructure.Vrep.VrepSocket.java", "BodyUseAPI": [], "Fixed commit": "6ba9e64ac57cfab1b7556eb74df8badc49acd3bb", "Url": "https://api.github.com/repos/Lukx19/Vrep-map-generator", "Date": "2015-05-21T21:06:56Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mQuantityTextView.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(quantityString)) { android.widget.Toast.makeText(this, getString(R.string.save_quantity_empty), Toast.LENGTH_SHORT).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7783/buggy-version/app.src.main.java.com.greiner_co.inventoryapp.EditorActivity.java", "BodyUseAPI": [], "Fixed commit": "294deb9763156a6ac9d5881fcc7c082f49409425", "Url": "https://api.github.com/repos/jensgreiner/InventoryApp", "Date": "2017-07-17T18:29:38Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mView) != null) mView.updateFavorites(movies);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6676/buggy-version/app.src.main.java.com.moviedb.presentation.favorites.FavoriteMoviesPresenter.java", "BodyUseAPI": [], "Fixed commit": "421fc88207225f19fe2dab5bffa31793637d3d45", "Url": "https://api.github.com/repos/yurabreza/moviedb", "Date": "2017-10-23T07:00:48Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mView) != null) mView.showErrorMessage(new com.moviedb.domain.exception.DefaultErrorBundle(((java.lang.Exception) (e))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6676/buggy-version/app.src.main.java.com.moviedb.presentation.favorites.FavoriteMoviesPresenter.java", "BodyUseAPI": [], "Fixed commit": "421fc88207225f19fe2dab5bffa31793637d3d45", "Url": "https://api.github.com/repos/yurabreza/moviedb", "Date": "2017-10-23T07:00:48Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((area) != null) { area.setX(x); area.setY(y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2623/buggy-version/Cortak.src.org.javajumper.cortak.ClickArea.java", "BodyUseAPI": [], "Fixed commit": "a2fa04d767c3ca6f3f419efa5c1f7242a3884a6b", "Url": "https://api.github.com/repos/JayJayJay1/Cortak", "Date": "2014-01-01T15:24:57Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (comp instanceof robokill.Element) { if (!(comp instanceof robokill.Bar)) elements.add(((robokill.Element) (comp))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7923/buggy-version/src.robokill.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "153a5c57fbcba2bd2b9ed2d3c9bd9f2cca67f53f", "Url": "https://api.github.com/repos/emranbm/robokill", "Date": "2015-06-22T13:40:50Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(customerId)) { java.util.List<java.lang.String> customers = new java.util.ArrayList<java.lang.String>(); customers.add(customerId); if (org.apache.commons.lang.StringUtils.isNotEmpty(techId)) { com.photon.phresco.service.dao.CustomerDAO customer = mongoOperation.findOne(com.photon.phresco.service.rest.api.CUSTOMERS_COLLECTION_NAME, new org.springframework.data.document.mongodb.query.Query(org.springframework.data.document.mongodb.query.Criteria.whereId().is(customerId)), com.photon.phresco.service.dao.CustomerDAO.class); if (org.apache.commons.collections.CollectionUtils.isNotEmpty(customer.getApplicableTechnologies())) { if (customer.getApplicableTechnologies().contains(techId)) { customers.add(com.photon.phresco.service.rest.api.DEFAULT_CUSTOMER_NAME); } } } org.springframework.data.document.mongodb.query.Criteria customerCriteria = org.springframework.data.document.mongodb.query.Criteria.where(com.photon.phresco.service.rest.api.DB_COLUMN_CUSTOMERIDS).in(customers.toArray()); query.addCriteria(customerCriteria); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/579/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.rest.api.ComponentService.java", "BodyUseAPI": ["org.springframework.data.document.mongodb.query.Criteria.whereId().is(java.lang.String)", "com.photon.phresco.service.rest.api.ComponentService.findOne(com.photon.phresco.service.rest.api.CUSTOMERS_COLLECTION_NAME,org.springframework.data.document.mongodb.query.Query,java.lang.Class)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "3af35a775e8b36bcdba5f55121d93b6a5652c3d5", "Url": "https://api.github.com/repos/phresco/service", "Date": "2013-03-05T09:30:48Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getLicense()) == null) { addFieldError(\"license\", getText(\"errors.required\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4647/buggy-version/Dashboard.src.main.java.eu.apenet.dashboard.ead2edm.ConvertAction.java", "BodyUseAPI": [], "Fixed commit": "46fb3260f5ef00da8581361b151c3e25efbe8d4f", "Url": "https://api.github.com/repos/ArchivesPortalEuropeFoundation/ape-backend", "Date": "2017-06-21T08:54:25Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["es.gobcan.eadmon.gestordocumental.ws.gestionelementos.dominio.PropiedadesDocumento.getPropiedadesAvanzadas()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((propAdmin.getResolucion()) == null) { play.Logger.info(\"resolucion es NULL \"); es.gobcan.eadmon.gestordocumental.ws.gestionelementos.dominio.Resolucion res = new es.gobcan.eadmon.gestordocumental.ws.gestionelementos.dominio.Resolucion(); res.setPrimerFolio(resolucion.folio_inicio.toString()); res.setUltimoFolio(resolucion.folio_final.toString()); res.setNumeroResolucion(resolucion.numero.toString()); res.setFechaResolucion(resolucion.fechaRegistroResolucion.toDate()); propAdmin.setResolucion(res); }else { propAdmin.getResolucion().setPrimerFolio(resolucion.folio_inicio.toString()); propAdmin.getResolucion().setUltimoFolio(resolucion.folio_final.toString()); propAdmin.getResolucion().setNumeroResolucion(resolucion.numero.toString()); propAdmin.getResolucion().setFechaResolucion(resolucion.fechaRegistroResolucion.toDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8414/buggy-version/fap.app.services.aed.AedGestorDocumentalServiceImpl.java", "BodyUseAPI": ["es.gobcan.eadmon.gestordocumental.ws.gestionelementos.dominio.PropiedadesAdministrativas.getResolucion()", "propAdmin.getResolucion().setPrimerFolio(resolucion.folio_inicio.toString())", "es.gobcan.eadmon.gestordocumental.ws.gestionelementos.dominio.PropiedadesAdministrativas.getResolucion()", "es.gobcan.eadmon.gestordocumental.ws.gestionelementos.dominio.PropiedadesAdministrativas.getResolucion()", "es.gobcan.eadmon.gestordocumental.ws.gestionelementos.dominio.PropiedadesAdministrativas.setResolucion(es.gobcan.eadmon.gestordocumental.ws.gestionelementos.dominio.Resolucion)", "propAdmin.getResolucion().setUltimoFolio(resolucion.folio_final.toString())", "propAdmin.getResolucion().setNumeroResolucion(resolucion.numero.toString())", "es.gobcan.eadmon.gestordocumental.ws.gestionelementos.dominio.PropiedadesAdministrativas.getResolucion()", "propAdmin.getResolucion().setFechaResolucion(resolucion.fechaRegistroResolucion.toDate())"], "Fixed commit": "33761f74f4aff3db288a39e31392f20062b8e9fa", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2013-06-03T13:07:57Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(heureDebut.matches(format))) || (!(heureFin.matches(format)))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2863/buggy-version/titan-shippment.src.model.planning.InterfacePlanning.java", "BodyUseAPI": [], "Fixed commit": "02d454759e5e0c74421b640f9e00366943c0e36a", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-12T11:11:09Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.planning.InterfacePlanning.setEntrepot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!success) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2863/buggy-version/titan-shippment.src.utils.XMLBuilder.java", "BodyUseAPI": [], "Fixed commit": "02d454759e5e0c74421b640f9e00366943c0e36a", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-12T11:11:09Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) == null) { return null; }else { return ((org.akquinet.httpd.syntax.Context) (getParent())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1255/buggy-version/ApacheBSIAuditHelper.src.org.akquinet.httpd.syntax.StatementList.java", "BodyUseAPI": [], "Fixed commit": "7a4b1b964c2e09e3efcfe489be63b9dfa9e1c2a8", "Url": "https://api.github.com/repos/inspector-cochise/cochise", "Date": "2011-04-22T08:35:18Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (clientThread != null) { peerProperties = clientThread.getPeerProperties(); }else { peerProperties = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6837/buggy-version/BtConnectorLib.btconnectorlib2.src.main.java.org.thaliproject.p2p.btconnectorlib.internal.bluetooth.BluetoothConnector.java", "BodyUseAPI": ["org.thaliproject.p2p.btconnectorlib.internal.bluetooth.BluetoothClientThread.getPeerProperties()"], "Fixed commit": "b0803f7705eef798659a3803ab50c2377bd8e2e4", "Url": "https://api.github.com/repos/thaliproject/Thali_CordovaPlugin_BtLibrary", "Date": "2015-12-15T08:13:38Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.util.StringUtils.hasText(nsEntry.getKey())) { if (!(schema.getElement().hasAttributeNS(com.consol.citrus.xml.schema.WsdlXsdSchema.WWW_W3_ORG_2000_XMLNS, nsEntry.getKey()))) { schema.getElement().setAttributeNS(com.consol.citrus.xml.schema.WsdlXsdSchema.WWW_W3_ORG_2000_XMLNS, (\"xmlns:\" + (nsEntry.getKey())), nsEntry.getValue()); } }else { if (!(schema.getElement().hasAttribute(\"xmlns\"))) { schema.getElement().setAttributeNS(com.consol.citrus.xml.schema.WsdlXsdSchema.WWW_W3_ORG_2000_XMLNS, (\"xmlns\" + (nsEntry.getKey())), nsEntry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2387/buggy-version/modules.citrus-core.src.main.java.com.consol.citrus.xml.schema.WsdlXsdSchema.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "schema.getElement().setAttributeNS(java.lang.String,java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "schema.getElement().hasAttributeNS(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "schema.getElement().setAttributeNS(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "42cddf61258f0890fd04eff5e971e14422fae87a", "Url": "https://api.github.com/repos/christophd/citrus", "Date": "2012-11-21T11:54:15Z"},
{"Line": "=>956", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((error) != null) && (!(hasUtilityModeProp))) { final java.lang.String errMsg = \"* Exiting due to network setup problem: \" + (error.toString()); throw new java.net.SocketException(errMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8666/buggy-version/src.java.soc.server.SOCServer.java", "BodyUseAPI": [], "Fixed commit": "4f9b6d665aac2b6d9f9168143d8bc3f20dd9c5e7", "Url": "https://api.github.com/repos/jdmonin/JSettlers2", "Date": "2016-10-02T14:20:39Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resetState) { workbenchKeyboard.resetState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5776/buggy-version/bundles.org.eclipse.e4.ui.bindings.src.org.eclipse.e4.ui.bindings.internal.KeyAssistDialog.java", "BodyUseAPI": [], "Fixed commit": "36f761aafffe2838b890437058c1dc280efa22f3", "Url": "https://api.github.com/repos/eclipse/eclipse.platform.ui", "Date": "2013-11-05T15:55:03Z"},
{"Line": "=>1831", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.getContentChunkList().isEmpty())) { if ((message.getContentChunkList().get(0).getData().length) != 0) { createRetainedEntry(connection, message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4905/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl.java", "BodyUseAPI": ["org.wso2.andes.kernel.AndesMessage.getContentChunkList()", "message.getContentChunkList().get(0).getData()", "org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl.createRetainedEntry(java.sql.Connection,org.wso2.andes.kernel.AndesMessage)", "message.getContentChunkList().get(int)"], "Fixed commit": "a61fb3a42000b5b8b2bfbc8892b31a453a74cb91", "Url": "https://api.github.com/repos/pumudu88/andes", "Date": "2015-10-02T06:31:35Z"},
{"Line": "=>4386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mUndoRedoStackToRecord.empty())) { mUndoRedoStackToRecord.peek().mUndoCommands.add(new com.ichi2.anki.Deck.UndoCommand(command, table, values, whereClause)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/884/buggy-version/src.com.ichi2.anki.Deck.java", "BodyUseAPI": ["java.util.ArrayList<com.ichi2.anki.Deck.UndoCommand>.add(com.ichi2.anki.Deck.UndoCommand)", "java.util.Stack<com.ichi2.anki.Deck.UndoRow>.peek()"], "Fixed commit": "7ccedf9c94b7072c8ab0b507a38b98645a6a0d86", "Url": "https://api.github.com/repos/Blaisorblade/Anki-Android", "Date": "2011-10-18T13:52:08Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gov.anl.aps.cdb.portal.controllers.ItemController.getEntityDisplayItemsDerivedFromItem()) { return gov.anl.aps.cdb.portal.controllers.ItemController.findDomainController(gov.anl.aps.cdb.portal.controllers.ItemController.getDefaultDomainDerivedToDomainName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5267/buggy-version/src.java.CdbWebPortal.src.java.gov.anl.aps.cdb.portal.controllers.ItemController.java", "BodyUseAPI": [], "Fixed commit": "5e6d21bc91a09286f1179a79eaa4573e9a921cd4", "Url": "https://api.github.com/repos/iTerminate/Component.DB", "Date": "2017-04-27T18:09:23Z"},
{"Line": "=>1007", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gov.anl.aps.cdb.portal.controllers.ItemController.getEntityDisplayDerivedFromItem()) { return gov.anl.aps.cdb.portal.controllers.ItemController.findDomainController(gov.anl.aps.cdb.portal.controllers.ItemController.getDefaultDomainDerivedFromDomainName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5267/buggy-version/src.java.CdbWebPortal.src.java.gov.anl.aps.cdb.portal.controllers.ItemController.java", "BodyUseAPI": [], "Fixed commit": "5e6d21bc91a09286f1179a79eaa4573e9a921cd4", "Url": "https://api.github.com/repos/iTerminate/Component.DB", "Date": "2017-04-27T18:09:23Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.vmware.bdd.utils.CommonUtil.isBlank(e.getMessage()))) { exceptionMsg.append(\",\").append(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6583/buggy-version/cli.src.main.java.com.vmware.bdd.cli.rest.RestClient.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.io.IOException.getMessage()"], "Fixed commit": "f30cea2179c8d1a6d7ed870458beadc58fec44f2", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-01-07T03:41:12Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWearSide) { mHandler.postDelayed(mRequestRunnable, requestInterval); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/926/buggy-version/Wearable.src.main.java.com.example.android.wearable.watchface.data.WeatherDataAcquirer.java", "BodyUseAPI": [], "Fixed commit": "bc9ca394b4ac7029095c364bf2ca63f0f8b7e308", "Url": "https://api.github.com/repos/mtrung/android-WatchFace", "Date": "2015-09-17T23:27:50Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) com.almalence.opencam.cameracontroller.CameraController.setCaptureFormat(capture);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/127/buggy-version/src.com.almalence.opencam.ApplicationScreen.java", "BodyUseAPI": [], "Fixed commit": "5dddda0f56c263d2231b7dd9eb0521e1d9d5b528", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2015-05-28T07:37:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ratingBar) != null) { android.graphics.drawable.Drawable stars = ratingBar.getProgressDrawable(); if (rank <= 1.5) { android.support.v4.graphics.drawable.DrawableCompat.setTint(stars, context.getResources().getColor(R.color.bad)); }else if (rank <= 3.5) { android.support.v4.graphics.drawable.DrawableCompat.setTint(stars, context.getResources().getColor(R.color.medium)); }else { android.support.v4.graphics.drawable.DrawableCompat.setTint(stars, context.getResources().getColor(R.color.good)); } ratingBar.setRating(rank); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7259/buggy-version/app.src.main.java.it.polito.mad_lab4.user.FavouritesAdapter.java", "BodyUseAPI": [], "Fixed commit": "4fed71bff18e504d8643181632048f45ad1c7148", "Url": "https://api.github.com/repos/FabioGermano/MAD_Lab4", "Date": "2016-09-16T13:07:08Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seedu.address.commons.util.StringUtil.countOccurrences('\\'', userInput)) != 2) { throw new java.lang.IllegalArgumentException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6516/buggy-version/src.main.java.seedu.address.logic.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "667865107ae574f509bb91dee4e9e49a38b23188", "Url": "https://api.github.com/repos/CS2103AUG2016-T10-C2/main", "Date": "2016-11-07T08:05:37Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ev.getAction()) == (org.bukkit.event.block.Action.PHYSICAL)) { if ((((ev.getClickedBlock().getY()) == 42) && ((ev.getClickedBlock().getX()) == 6)) && ((((ev.getClickedBlock().getZ()) == (-8)) || ((ev.getClickedBlock().getZ()) == (-9))) || ((ev.getClickedBlock().getZ()) == (-10)))) ev.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2281/buggy-version/src.me.azenet.UHPlugin.UHPluginListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "ev.getClickedBlock().getY()", "ev.getClickedBlock().getZ()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "org.bukkit.event.player.PlayerInteractEvent.setCancelled(boolean)", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()", "ev.getClickedBlock().getZ()", "ev.getClickedBlock().getX()", "ev.getClickedBlock().getZ()"], "Fixed commit": "2ee0206c226493e9d8804a9aebfafd700b3d610a", "Url": "https://api.github.com/repos/CartoonCraft/uhc", "Date": "2014-03-04T01:41:27Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((collection.size()) <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2750/buggy-version/core.src.main.java.sut.game01.core.UI.FloatLabel.java", "BodyUseAPI": [], "Fixed commit": "569cca536b2b52db520f479d7e66f9aa4120f097", "Url": "https://api.github.com/repos/peesadgame/LittleWitch", "Date": "2014-03-23T09:59:30Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 17) { return android.webkit.WebSettings.getDefaultUserAgent(intercom.piethis.com.intercomclientsdk.Intercom.getApplicationContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8792/buggy-version/intercom.src.main.java.intercom.piethis.com.intercomclientsdk.utils.VersionUtils.java", "BodyUseAPI": [], "Fixed commit": "9d7058625e019e2074147be2f1692b4c73a0513e", "Url": "https://api.github.com/repos/creativepsyco/intercom-android-sdk", "Date": "2015-02-24T04:39:05Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.componentId) == null) && ((state) == (ComponentState.INACTIVE))) { this.componentId = componentId; state = ComponentState.READABLE_WRITABLE; }else { requestedToBeActive = true; assert (pendingComponentId) == null; pendingComponentId = componentId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7934/buggy-version/hyracks-fullstack.hyracks.hyracks-storage-am-lsm-common.src.main.java.org.apache.hyracks.storage.am.lsm.common.impls.AbstractLSMMemoryComponent.java", "BodyUseAPI": [], "Fixed commit": "ce477face1b6a62861f92c2d05ab55bd69bd39a8", "Url": "https://api.github.com/repos/luochen01/asterixdb", "Date": "2017-10-18T16:08:00Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((c) / (a)) == ((d) / (b))) || (((a) / (c)) == ((b) / (d)))) if (((f) == 0) && ((e) == 0)) return \"infinity\"; else if ((((a) * (d)) - ((b) * (c))) == 0) return \"false\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2996/buggy-version/Lab4.PartD.PartD.java", "BodyUseAPI": [], "Fixed commit": "869207a5e0a7fc805a752a1857a226155a97197c", "Url": "https://api.github.com/repos/ilyashamd/Java-M01-lab", "Date": "2015-11-11T20:01:55Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uploadRetryCount) > 1) { (uploadRetryCount)++; log.warn(\"YouView upload retry count - {}\", uploadRetryCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/286/buggy-version/src.main.java.org.atlasapi.feeds.youview.client.HttpYouViewClient.java", "BodyUseAPI": [], "Fixed commit": "8ee43037e35f2e3d5734de0b05eafa067b88d1b2", "Url": "https://api.github.com/repos/atlasapi/atlas-feeds", "Date": "2016-03-10T16:54:51Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(grid.getBounds().contains(e.x, e.y))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3196/buggy-version/com.notlob.jgrid.src.com.notlob.jgrid.input.GridMouseHandler.java", "BodyUseAPI": [], "Fixed commit": "a458c02275fcb9c8d6a97e714e52be55d86d4047", "Url": "https://api.github.com/repos/GrandmasterTash/jGrid", "Date": "2015-05-12T08:14:30Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.button) == 1) { mouseDown = true; resizing = viewport.getColumnForMouseOperation(gc, e.x, e.y, ColumnMouseOperation.RESIZE); if ((resizing) == null) { repositioningDetect = viewport.getColumnForMouseOperation(gc, e.x, e.y, ColumnMouseOperation.REPOSITION); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3196/buggy-version/com.notlob.jgrid.src.com.notlob.jgrid.input.GridMouseHandler.java", "BodyUseAPI": ["com.notlob.jgrid.model.Viewport<T>.getColumnForMouseOperation(org.eclipse.swt.graphics.GC,e.x,e.y,ColumnMouseOperation.RESIZE)", "com.notlob.jgrid.model.Viewport<T>.getColumnForMouseOperation(org.eclipse.swt.graphics.GC,e.x,e.y,ColumnMouseOperation.REPOSITION)"], "Fixed commit": "a458c02275fcb9c8d6a97e714e52be55d86d4047", "Url": "https://api.github.com/repos/GrandmasterTash/jGrid", "Date": "2015-05-12T08:14:30Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objCovEnv.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/528/buggy-version/modules.display.geotk-render2d.src.main.java.org.geotoolkit.display2d.style.renderer.DefaultRasterSymbolizerRenderer.java", "BodyUseAPI": [], "Fixed commit": "fd9b40912370cd0ddb8801d4669912c1c82f8771", "Url": "https://api.github.com/repos/Geomatys/geotoolkit", "Date": "2014-11-26T15:42:01Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Location.getWorld()", "org.bukkit.entity.Player.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(location.getWorld().equals(sourceWorld))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6396/buggy-version/src.main.java.com.elmakers.mine.bukkit.utility.NMSUtils.java", "BodyUseAPI": [], "Fixed commit": "0cfe9ec37b7b360077d085d1defbb2db0cf9a604", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2015-04-20T23:38:31Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6403/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationViewerActivity.java", "BodyUseAPI": [], "Fixed commit": "b3b05ff5cb17846cdcb6296afef832c4c6628fab", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-05-22T06:55:33Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arrayIndex < (nIterations - 1)) arrayIndex++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3373/buggy-version/app.src.main.java.com.jk0myn0.dynsys.GraficoEquazioneLogistica.java", "BodyUseAPI": [], "Fixed commit": "44b516469e5e897cc5ec827aaf658cdea86eb50f", "Url": "https://api.github.com/repos/jkomyno/dynsys", "Date": "2015-09-16T21:41:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rs.next()) { newUserID = rs.getInt(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6435/buggy-version/src.DAOs.UserDAO.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "fe79a58ce3ebe2801dd25fa6c078128ae5177b7b", "Url": "https://api.github.com/repos/chancet1982/SmartTrack", "Date": "2013-11-27T16:14:22Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endTime - startTime) > 0) { duration = endTime - startTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2654/buggy-version/src.main.java.org.intellimate.izou.addon.izousound.TrackInfoGenerator.java", "BodyUseAPI": [], "Fixed commit": "3068a4ce3d2c11df1bac829cd44d88ad22aa3896", "Url": "https://api.github.com/repos/intellimate/IzouSound", "Date": "2015-12-26T18:48:19Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endTime - startTime) > 0) { duration = endTime - startTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2654/buggy-version/src.main.java.org.intellimate.izou.addon.izousound.TrackInfoGenerator.java", "BodyUseAPI": [], "Fixed commit": "3068a4ce3d2c11df1bac829cd44d88ad22aa3896", "Url": "https://api.github.com/repos/intellimate/IzouSound", "Date": "2015-12-26T18:48:19Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val.endsWith(\" \")) { val = val + \"\\\\\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5807/buggy-version/src.ccl.csy.value.compile.StringValueCompiler.java", "BodyUseAPI": [], "Fixed commit": "6ec5ba3e1bf95544435f4fa6a108e6dcc304c09e", "Url": "https://api.github.com/repos/ccldev/v2-compile-sytems", "Date": "2016-12-12T12:28:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((networkInfo != null) && (networkInfo.isConnected())) { com.slowthecurry.movies.MainActivity.MovieFinder movieFinder = new com.slowthecurry.movies.MainActivity.MovieFinder(); movieFinder.execute(list); }else { android.widget.ImageView imageView = ((android.widget.ImageView) (findViewById(R.id.trex))); imageView.setImageResource(R.drawable.trex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3433/buggy-version/Movies.app.src.main.java.com.slowthecurry.movies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "978fcbb0fe593d936aa43d4a627754548eaeb34a", "Url": "https://api.github.com/repos/MHmnd/Project-1-Movies", "Date": "2016-06-02T02:11:24Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmd[3].equals(null)) cmd[3] = \"python\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8698/buggy-version/src.tracks.LearningMachine.java", "BodyUseAPI": [], "Fixed commit": "05f265cb39718588e446abf1a3670c7899cc12c1", "Url": "https://api.github.com/repos/kisenshi/gvgai-experiments", "Date": "2017-06-18T00:14:17Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((AI) (playerList.get(turnNumber))).botTurn(board, this)) turnNumber += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4673/buggy-version/Monopoly.java", "BodyUseAPI": [], "Fixed commit": "e442db737ab705ff9512a5ea28ac41eb7d14ba27", "Url": "https://api.github.com/repos/alanc2k17/Team-Admeyerable-Pennybags", "Date": "2016-01-25T02:56:58Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IFloodlightProviderService.bcStore.get(net.floodlightcontroller.core.FloodlightContext,IFloodlightProviderService.CONTEXT_PI_PAYLOAD)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((eth.getEtherType()) < 17) { net.floodlightcontroller.linkdiscovery.internal.LinkDiscoveryManager.log.error(\"Received invalid ethertype of {}.\", eth.getEtherType()); return Command.STOP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1293/buggy-version/src.main.java.net.floodlightcontroller.linkdiscovery.internal.LinkDiscoveryManager.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,eth.getEtherType())", "net.floodlightcontroller.packet.Ethernet.getEtherType()"], "Fixed commit": "db965ec996b99ee78d41057746d90c8a7cfcd4a4", "Url": "https://api.github.com/repos/ClassWYZ/floodlight", "Date": "2015-03-14T19:41:13Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((drawe.isShown()) && (number == 1)) { drawe.close(); topButtons.setVisible(true); mainButtons.setVisible(false); drawe.open(); userName.setVisible(false); }else if ((drawe.isShown()) && (number == 2)) { drawe.close(); topButtons.setVisible(true); mainButtons.setVisible(false); userName.setVisible(false); drawe.open(); }else { topButtons.setVisible(true); mainButtons.setVisible(false); userName.setVisible(false); drawe.open(); drawe.toFront(); add.toFront(); centerPane.toBack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2137/buggy-version/src.controllers.TeacherCalendarController.java", "BodyUseAPI": ["com.jfoenix.controls.JFXDrawer.close()", "com.jfoenix.controls.JFXDrawer.toFront()", "com.jfoenix.controls.JFXDrawer.open()", "com.jfoenix.controls.JFXDrawer.isShown()", "com.jfoenix.controls.JFXDrawer.open()", "com.jfoenix.controls.JFXDrawer.close()", "com.jfoenix.controls.JFXDrawer.open()"], "Fixed commit": "815edff70c2cbef57d922ed790a7857bbec733f6", "Url": "https://api.github.com/repos/adrianjs/Programvareutvikling-Gruppe-35", "Date": "2017-04-17T18:03:35Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.univocity.parsers.common.processor.core.Context.headers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx < (allHeaders.length)) { headers[i] = allHeaders[selectedIndexes[i]]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7155/buggy-version/src.main.java.com.univocity.parsers.common.processor.core.ColumnSplitter.java", "BodyUseAPI": [], "Fixed commit": "58a8d43694df1c0ce06b72936e8ea8de74532599", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-08-20T03:32:10Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text != null) { return (\"\\t\" + text) + \"\\t\"; }else return \"\\tNULL\\t\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2879/buggy-version/project2.src.edu.ucla.cs.cs144.MyParser.java", "BodyUseAPI": [], "Fixed commit": "44832323920fb5fcff36341b03a7481b2a9211f0", "Url": "https://api.github.com/repos/julian-yang/baymax", "Date": "2015-02-08T02:21:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info) != null) { getSupportLoaderManager().restartLoader(com.example.oluwatimilehin.moviebuff.MovieActivity.MOVIE_LOADER_ID, bundle, new com.example.oluwatimilehin.moviebuff.MovieActivity.MovieDataLoader()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8193/buggy-version/app.src.main.java.com.example.oluwatimilehin.moviebuff.MovieActivity.java", "BodyUseAPI": [], "Fixed commit": "6df93bd1a53b212c66ab195f6f063c32e0b5fc26", "Url": "https://api.github.com/repos/oluwatimilehin/movie-buff", "Date": "2017-05-27T15:14:02Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (image == null) { this.image = android.graphics.Bitmap.createBitmap(1, 1, Bitmap.Config.ARGB_8888); }else { this.image = image; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7302/buggy-version/app.src.main.java.com.example.nookie.demotivatorsmaker.models.Demotivator.java", "BodyUseAPI": [], "Fixed commit": "64f6eeac3b35576c8a3df91a129687bd0887e050", "Url": "https://api.github.com/repos/Nookieaaa/DemotivatorsMaker", "Date": "2015-12-01T09:53:12Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level()) < 0) { upgrade((-(level()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/655/buggy-version/core.src.main.java.com.shatteredpixel.shatteredpixeldungeon.items.rings.Ring.java", "BodyUseAPI": [], "Fixed commit": "42a37ec1ac568e778a7e47585aaa2d1b9a928295", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2017-06-21T20:43:15Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.TextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(profile.getEmail().equals(mail))) { model.Database.removeEmail(profile.getEmail()); profile.setEmail(mail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4392/buggy-version/src.controller.ProfileController.java", "BodyUseAPI": ["model.Database.removeEmail(profile.getEmail())", "model.Profile.setEmail(java.lang.String)", "model.Profile.getEmail()"], "Fixed commit": "2b44167b5465dba5440c55d24382b15f68cabe1f", "Url": "https://api.github.com/repos/olliefoo/FinalProject", "Date": "2016-12-06T16:52:46Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serverId == 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1212/buggy-version/bayou_handout.server.Server.java", "BodyUseAPI": [], "Fixed commit": "cb57daf4a21e505661c82359ec76706dbde48711", "Url": "https://api.github.com/repos/tylermcdonnell/Bayou", "Date": "2015-12-05T20:53:01Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCountingDown) { countDownTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4871/buggy-version/app.src.main.java.com.google.zach.OnTargetFencing.video.java", "BodyUseAPI": [], "Fixed commit": "a0ccfbb7ab343de80ef1c5840a21fda2bbf4618d", "Url": "https://api.github.com/repos/SnackKing/DigitalFencingRef", "Date": "2017-07-18T12:09:08Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCountingDown) { countDownTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4871/buggy-version/app.src.main.java.com.google.zach.OnTargetFencing.glossary.java", "BodyUseAPI": [], "Fixed commit": "a0ccfbb7ab343de80ef1c5840a21fda2bbf4618d", "Url": "https://api.github.com/repos/SnackKing/DigitalFencingRef", "Date": "2017-07-18T12:09:08Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["table.getName().equals(tableA.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tableone && (position2 != (table2.getRowCount()))) { order.add(\"B\"); }else if (position2 != (table2.getRowCount())) { order.add(\"A\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4464/buggy-version/src.main.java.model.process.analysis.operations.comparisons.LagSequentialAnalysis.java", "BodyUseAPI": ["model.data.DataTable.getRowCount()"], "Fixed commit": "3796918d9e2310ae346ba7a10c4fd55f96e195a7", "Url": "https://api.github.com/repos/clanghout/Health-Informatics-3", "Date": "2015-06-06T08:28:44Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.junit.runner.Description.getTestClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (testClass != null) { suiteDescription = org.junit.runner.Description.createSuiteDescription(testClass); }else { suiteDescription = org.junit.runner.Description.createSuiteDescription(description.getClassName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8301/buggy-version/allure-junit-adaptor.src.main.java.ru.yandex.qatools.allure.junit.AllureRunListener.java", "BodyUseAPI": ["org.junit.runner.Description.createSuiteDescription(java.lang.Class)"], "Fixed commit": "56714290dfdc9576d53d4037de514c44597647a5", "Url": "https://api.github.com/repos/wuhuizuo/allure-core", "Date": "2017-01-31T15:38:57Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.fib.model.FIBComponent.getIndex()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (startIndex == null) { startIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7239/buggy-version/flexodesktop.GUI.flexointerfacebuilder.src.main.java.org.openflexo.fib.model.FIBContainer.java", "BodyUseAPI": [], "Fixed commit": "bf52eb2f89d107be97b8911c57e21087ccb0d0ff", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-01-09T22:05:39Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mInputEditText.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(phone))) { addContract(new io.innofang.autosms.bean.Contract(phone, \"\")); mInputEditText.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2777/buggy-version/app.src.main.java.io.innofang.autosms.module.edit_message.add_contracts.AddContractsFragment.java", "BodyUseAPI": ["io.innofang.autosms.module.edit_message.add_contracts.AddContractsFragment.2.addContract(io.innofang.autosms.bean.Contract)"], "Fixed commit": "529e7ac3e54b5381fa00c5995ec4308ee1f3e130", "Url": "https://api.github.com/repos/InnoFang/AutoSMS", "Date": "2017-05-21T13:54:50Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Greenfoot.getMouseInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (mouse != null) { frontActor = ((BaseActor) (mouse.getActor())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4902/buggy-version/BlockGame.BaseWorld.java", "BodyUseAPI": ["MouseInfo.getActor()"], "Fixed commit": "2458625423f2f4d2c61bee5d09a7e58c9b86edcc", "Url": "https://api.github.com/repos/projectormato/Block", "Date": "2016-06-23T14:19:11Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(theLocks.isEmpty())) { while (!(lct.areCompatible(newType, theLocks))) { waitOn(key, newType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3357/buggy-version/src.ch.epfl.tkvs.transactionmanager.lockingunit.LockingUnit.java", "BodyUseAPI": ["ch.epfl.tkvs.transactionmanager.lockingunit.LockCompatibilityTable.areCompatible(ch.epfl.tkvs.transactionmanager.lockingunit.LockType,java.util.List<ch.epfl.tkvs.transactionmanager.lockingunit.LockType>)"], "Fixed commit": "2ed6ae0fd7210bb2e1b8939517aea85f2e7ea6ff", "Url": "https://api.github.com/repos/philemonf/transactional-key-value-store-project", "Date": "2015-04-18T13:18:56Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.brejza.matt.habmodem.Waterfall.UpdateLine(mService.getFFT(),mService.get_f1_FFTbin(),mService.get_f2_FFTbin())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (img != null) { wfview.setImageBitmap(img); wfview.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6814/buggy-version/habmodem.src.com.brejza.matt.habmodem.StatusScreen.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "70f52fa168f3f6f38d4c3ceef99083359b83aa51", "Url": "https://api.github.com/repos/mattbrejza/rtty_modem", "Date": "2013-02-10T00:43:43Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_imageHeight) <= 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6814/buggy-version/habmodem.src.com.brejza.matt.habmodem.Waterfall.java", "BodyUseAPI": [], "Fixed commit": "70f52fa168f3f6f38d4c3ceef99083359b83aa51", "Url": "https://api.github.com/repos/mattbrejza/rtty_modem", "Date": "2013-02-10T00:43:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ufo.socketioandroiddemo.login.UserInfoRepository.currentUser(getApplicationContext())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bean != null) { getRecent(); startSocketIOService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4608/buggy-version/SocketIOAndroidDemo.app.src.main.java.com.ufo.socketioandroiddemo.MyApplication.java", "BodyUseAPI": [], "Fixed commit": "89e9dcea56159ca27df49ca3784ad0e08327aeac", "Url": "https://api.github.com/repos/wangnamu/SocketIOAndroidDemo", "Date": "2017-05-25T03:11:58Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countD == 0) { incrementLinesInput(); putRow(data.outputRowMeta, org.pentaho.di.core.row.RowDataUtil.addValueData(row, data.inputRowSize, model)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8206/buggy-version/GraphSparqlEndpoint.src.main.java.br.ufrj.ppgi.greco.lodbr.plugin.graphsparql.GraphSparqlStep.java", "BodyUseAPI": [], "Fixed commit": "018d2e5ea46059204e02bb8e75de1011af3ae779", "Url": "https://api.github.com/repos/Kellli/ETL4LOD-Graph", "Date": "2014-08-12T15:58:16Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.enablix.services.util.TemplateUtil.isLinkedContainer(containerDef)) { containerDef = template.getContainerDefinition(containerDef.getLinkContainerQId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3401/buggy-version/commons.services-util.src.main.java.com.enablix.services.util.ContentDataUtil.java", "BodyUseAPI": ["com.enablix.core.api.TemplateFacade.getContainerDefinition(containerDef.getLinkContainerQId())", "com.enablix.core.commons.xsdtopojo.ContainerType.getLinkContainerQId()"], "Fixed commit": "e307edc21d66124886e0058829e6524e373298a2", "Url": "https://api.github.com/repos/dikshitluthra/enablix", "Date": "2017-04-27T07:00:24Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dainames != null) { for (java.lang.Object item : dainames) { org.json.simple.JSONObject tmp = ((org.json.simple.JSONObject) (item)); java.lang.String titleTmp = ((java.lang.String) (tmp.get(\"title\"))); java.lang.String langTmp = ((java.lang.String) (tmp.get(\"language\"))); names.addSingleName(langTmp, titleTmp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1819/buggy-version/src.main.java.org.linkedgeodesy.gazetteerjson.gazetteer.IDAIGazetteer.java", "BodyUseAPI": [], "Fixed commit": "563e7fa3040552791f6977ffa4e500411f1e3d0d", "Url": "https://api.github.com/repos/linkedgeodesy/gazetteer-json", "Date": "2017-11-30T12:21:58Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list) != null) { list.tableFiles.repaint(); list.tableTotal.repaint(); modelTotal.fireTableDataChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7565/buggy-version/src.org.omegat.gui.filelist.ProjectFilesListController.java", "BodyUseAPI": [], "Fixed commit": "b5284827f2b55674cdfa219d177f3e8cc56bc992", "Url": "https://api.github.com/repos/stsypanov/omegat", "Date": "2015-07-27T07:38:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isChecked) { cpp.cs245final.MainActivity.mediaPlayer.pause(); android.widget.Toast.makeText(getBaseContext(), \"Music Off\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3526/buggy-version/app.src.main.java.cpp.cs245final.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2ca70ae7bff9ebfc577367948deb29737ec58d16", "Url": "https://api.github.com/repos/Gilbertg6790/Android_Tile_Game", "Date": "2017-12-02T08:23:01Z"},
{"Line": "=>913", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder.getComponent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((((component == null) || (component instanceof com.taobao.weex.ui.component.WXRefresh)) || (component instanceof com.taobao.weex.ui.component.WXLoading)) || (((component.getDomObject()) != null) && (component.getDomObject().isFixed()))) { if (com.taobao.weex.WXEnvironment.isApkDebugable()) { com.taobao.weex.utils.WXLogUtils.d(TAG, (\"Bind WXRefresh & WXLoading \" + holder)); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5449/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.list.BasicListComponent.java", "BodyUseAPI": [], "Fixed commit": "00151bce372d26c35ade7a9dc65bdcf6692702f8", "Url": "https://api.github.com/repos/apache/incubator-weex", "Date": "2017-03-08T03:00:43Z"},
{"Line": "=>1305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDomObj.isFixed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5449/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.WXComponent.java", "BodyUseAPI": [], "Fixed commit": "00151bce372d26c35ade7a9dc65bdcf6692702f8", "Url": "https://api.github.com/repos/apache/incubator-weex", "Date": "2017-03-08T03:00:43Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workDir) == null) return path;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/323/buggy-version/modules.hadoop.src.main.java.org.apache.ignite.hadoop.fs.LocalIgfsSecondaryFileSystem.java", "BodyUseAPI": [], "Fixed commit": "94c95147635390f640def30d7e2158c7ae70d73f", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2016-08-03T11:55:11Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["melnorme.lang.tooling.parser.lexer.ICharacterReader.lookahead()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(((la == '{') || (la == '}')) || (isHexDigit(la)))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5191/buggy-version/plugin_tooling.src-lang.melnorme.lang.tooling.parser.lexer.CharacterLexingRule.java", "BodyUseAPI": [], "Fixed commit": "c78859f132107e1321d7020b734d05917064601a", "Url": "https://api.github.com/repos/DDT-IDE/DDT", "Date": "2015-04-09T20:13:21Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((startDate.value.equals(Messages.MESSAGE_NO_START_DATE_SPECIFIED)) && (startTime.value.equals(Messages.MESSAGE_NO_START_TIME_SET))) { constructStartDateTime(endDate, endTime); }else { constructStartDateTime(startDate, startTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1875/buggy-version/src.main.java.seedu.ggist.model.task.Task.java", "BodyUseAPI": ["seedu.ggist.model.task.Task.constructStartDateTime(seedu.ggist.model.task.TaskDate,seedu.ggist.model.task.TaskTime)"], "Fixed commit": "d7c1b8b719b7355f73639ee79f9041fcd11a0c45", "Url": "https://api.github.com/repos/CS2103AUG2016-W13-C2/main", "Date": "2016-11-02T04:27:25Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ij.Menus.getFontSize()) != 0) pMenu.setFont(ij.Menus.getFont());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1828/buggy-version/src.main.java.tracing.InteractiveTracerCanvas.java", "BodyUseAPI": [], "Fixed commit": "69ccd15e4496235e80f5c156a6574f3fec18b7e8", "Url": "https://api.github.com/repos/tferr/Simple_Neurite_Tracer", "Date": "2017-12-28T04:24:49Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!bluetoothWasOff) { scanButton.callOnClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5126/buggy-version/SensorTagRx.src.com.carruesco.pfc.sensortagrx.fragments.ScanFragment.java", "BodyUseAPI": [], "Fixed commit": "731c467141684ec091f05c0a82d9f09a6b765ea2", "Url": "https://api.github.com/repos/carru/PFC", "Date": "2014-03-25T10:07:51Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((columns.length) < 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4718/buggy-version/Prototype.src.DB.DBClass.java", "BodyUseAPI": [], "Fixed commit": "3d32fa48afb317a61d92c2138c6309248f8bb875", "Url": "https://api.github.com/repos/cse216sudoers/pos", "Date": "2015-11-19T20:52:07Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(coordinator.getCoordinatorClient().nodeExists(com.emc.storageos.systemservices.impl.driver.DriverManager.LISTEN_PATH))) { com.emc.storageos.coordinator.client.model.DriverInfo initDriversInfo = new com.emc.storageos.coordinator.client.model.DriverInfo(); coordinator.getCoordinatorClient().setTargetInfo(initDriversInfo); com.emc.storageos.systemservices.impl.driver.DriverManager.log.info(\"Created DriverInfo ZNode\"); targetDrivers = initDriversInfo.getDrivers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8554/buggy-version/syssvc.src.main.java.com.emc.storageos.systemservices.impl.driver.DriverManager.java", "BodyUseAPI": ["com.emc.storageos.systemservices.impl.driver.DriverManager.getCoordinatorClient()", "coordinator.getCoordinatorClient().setTargetInfo(com.emc.storageos.coordinator.client.model.DriverInfo)"], "Fixed commit": "52cad54192fa3d99cbcd7059c155a9044853543d", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-02T04:25:30Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dep.getScope().equals(ScopeType.RUNTIME)) { try { parentCl.load(depJar); } catch (java.io.IOException e) { org.kevoree.log.Log.error(\"Unable to load jar {} in class loader {}\", depJar.getAbsolutePath(), parentCl.getKey()); } }else { depCl = bs.getKernel().put(key, depJar); parentCl.attachChild(depCl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6750/buggy-version/kevoree-core.org.kevoree.bootstrap.src.main.java.org.kevoree.bootstrap.kernel.KevoreeCLKernel.java", "BodyUseAPI": [], "Fixed commit": "ec12a821fc74fb11db61f8af91e59b1e3d21e569", "Url": "https://api.github.com/repos/kevoree/kevoree", "Date": "2016-08-04T12:08:27Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dep.getScope().equals(ScopeType.RUNTIME))) { parentCl.attachChild(depCl); org.kevoree.log.Log.debug(\"{} = {} already installed\", indent, key, ((java.lang.System.currentTimeMillis()) - before)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6750/buggy-version/kevoree-core.org.kevoree.bootstrap.src.main.java.org.kevoree.bootstrap.kernel.KevoreeCLKernel.java", "BodyUseAPI": [], "Fixed commit": "ec12a821fc74fb11db61f8af91e59b1e3d21e569", "Url": "https://api.github.com/repos/kevoree/kevoree", "Date": "2016-08-04T12:08:27Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(aqiItemValue)) { parentView.setVisibility(View.GONE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8881/buggy-version/app.src.main.java.com.joe.holi.ui.fragment.WeatherInfoFragment.java", "BodyUseAPI": [], "Fixed commit": "7d962101468be38091aae8e4ff83fd4dfde95196", "Url": "https://api.github.com/repos/joj1989/Holiday", "Date": "2017-03-20T07:42:55Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.service.SequenceService.getLastSequence()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (last != null) { sequence.setId(((sequenceService.getLastSequence().getId()) + 1)); }else { sequence.setId(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/198/buggy-version/src.main.java.app.controllers.InputController.java", "BodyUseAPI": [], "Fixed commit": "3d9633a47686de739d8255f0a854b76d81dbd07d", "Url": "https://api.github.com/repos/msarcev/doc-sequence-generator-webapp", "Date": "2016-11-16T12:38:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.service.impl.SequenceServiceImpl.getAll()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.size()) > 0) { return list.get(((list.size()) - 1)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/198/buggy-version/src.main.java.app.service.impl.SequenceServiceImpl.java", "BodyUseAPI": ["java.util.List<app.model.Sequence>.size()", "java.util.List<app.model.Sequence>.get(((list.size()) - 1))"], "Fixed commit": "3d9633a47686de739d8255f0a854b76d81dbd07d", "Url": "https://api.github.com/repos/msarcev/doc-sequence-generator-webapp", "Date": "2016-11-16T12:38:35Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entityStack.size()) == 0) top = e; else top = entityStack.get(((entityStack.size()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4711/buggy-version/CustomSpawners.modules.v1_5_R2.src.main.java.com.github.thebiologist13.v1_5_R2.Converter.java", "BodyUseAPI": ["java.util.ArrayList<org.bukkit.entity.Entity>.size()", "java.util.ArrayList<org.bukkit.entity.Entity>.get(((entityStack.size()) - 1))"], "Fixed commit": "96ecade2f0e183ed6c20b162d5c3df1068f1cb29", "Url": "https://api.github.com/repos/thebiologist13/CustomSpawners", "Date": "2013-04-11T02:48:46Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentFuncBody) == null) node = syntaxTree.makeInterior(lookahead.getRepresentation()); else node = currentFuncBody.makeInterior(lookahead.getRepresentation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2079/buggy-version/Parser.java", "BodyUseAPI": [], "Fixed commit": "7695e10dbb4dddea097311e07c750de3f4f1c216", "Url": "https://api.github.com/repos/BradleyKatz/Compilers-A3", "Date": "2016-11-13T20:49:15Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN)) { parent.getViewTreeObserver().removeGlobalOnLayoutListener(this); }else { parent.getViewTreeObserver().removeOnGlobalLayoutListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8409/buggy-version/calligraphy.src.main.java.uk.co.chrisjenx.calligraphy.CalligraphyFactory.java", "BodyUseAPI": [], "Fixed commit": "d4d07f608aeee0fa885baf56bb2a0d48e68f7fe0", "Url": "https://api.github.com/repos/chrisjenx/Calligraphy", "Date": "2015-01-27T00:02:04Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((verse.getVerse()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/387/buggy-version/src.main.java.org.crosswire.jsword.passage.BitwisePassage.java", "BodyUseAPI": [], "Fixed commit": "d55a56d2a491a543adf44ba2964afcae408a0c17", "Url": "https://api.github.com/repos/crosswire/jsword", "Date": "2012-10-01T09:02:53Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader) != null) { reader.searchMapIndex(sr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2487/buggy-version/OsmAnd-java.src.net.osmand.map.OsmandRegions.java", "BodyUseAPI": [], "Fixed commit": "18e0e8208e8f47af9c728ca4824dc3f60504757a", "Url": "https://api.github.com/repos/poretsky/Osmand", "Date": "2013-10-26T22:37:32Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader) != null) { reader.searchMapIndex(sr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2487/buggy-version/OsmAnd-java.src.net.osmand.map.OsmandRegions.java", "BodyUseAPI": [], "Fixed commit": "18e0e8208e8f47af9c728ca4824dc3f60504757a", "Url": "https://api.github.com/repos/poretsky/Osmand", "Date": "2013-10-26T22:37:32Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader) != null) { reader.searchMapIndex(sr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2487/buggy-version/OsmAnd-java.src.net.osmand.map.OsmandRegions.java", "BodyUseAPI": [], "Fixed commit": "18e0e8208e8f47af9c728ca4824dc3f60504757a", "Url": "https://api.github.com/repos/poretsky/Osmand", "Date": "2013-10-26T22:37:32Z"},
{"Line": "=>2210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(theInputType.equals(\"safupload\"))) { new java.io.File(dataPath).delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5894/buggy-version/dspace-api.src.main.java.org.dspace.app.itemimport.ItemImport.java", "BodyUseAPI": [], "Fixed commit": "7707a29190d71c6b47d1d816dfe4243489015030", "Url": "https://api.github.com/repos/EKT/DSpace", "Date": "2014-11-28T12:09:37Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.spinner.getChangeListeners().length) == 0) this.spinner.addChangeListener(new javax.swing.event.ChangeListener() { @java.lang.Override public void stateChanged(javax.swing.event.ChangeEvent e) { aggiornaSpesa(); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/82/buggy-version/src.GUI.Abstract.AFormRDA.java", "BodyUseAPI": [], "Fixed commit": "35fc8013b1f2da2da7a251a824ec5bc5acb5e4fb", "Url": "https://api.github.com/repos/FMiscia/Coedil99", "Date": "2013-10-21T13:59:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.csstudio.auth.internal.subnet.CSSPlatformInfo.getInstance().isOnsite()) { sf.authenticateApplicationUser(); }else { org.eclipse.jface.dialogs.MessageDialog.openInformation(org.eclipse.swt.widgets.Display.getCurrent().getActiveShell(), \"Login info\", \"You are not 'onsite'. Login is disabled!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2865/buggy-version/products.DESY.plugins.org.csstudio.desy.startuphelper.src.org.csstudio.desy.startuphelper.login.DesyLoginPrompt.java", "BodyUseAPI": [], "Fixed commit": "ae0716226d4aaf13373f7f00804cb5dc711ca288", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2017-04-21T08:06:35Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children) != null) { for (org.pavement.iface.Component child : children) { child.resetStyles(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1345/buggy-version/src.org.pavement.iface.Container.java", "BodyUseAPI": [], "Fixed commit": "3eae4fa67f8e12515f15557f152d143ebba939d1", "Url": "https://api.github.com/repos/LiviasSecret/Pavement", "Date": "2014-05-15T00:02:01Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state.clockVars.size()) == 0) { throw new com.rockwellcollins.atc.agree.analysis.AgreeException((((\"During Lustre generation there were no subcomponent clock varaibles present. \" + \"Is it possible that none of the subcomponents in '\") + (state.curInst.getFullName())) + \"' contain an AGREE annex?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6416/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.analysis.src.com.rockwellcollins.atc.agree.analysis.AgreeGenerator.java", "BodyUseAPI": ["state.curInst.getFullName()"], "Fixed commit": "0bcca51497ee4e43360bcd143094edbdfd17667d", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2015-05-20T13:52:50Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ifgi.sc.smartcitiesapp.p2p.P2PManager.calculateDuration(com.google.android.gms.nearby.messages.Message)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (duration < 0) { if (duration > 86400) { publish(message, 86400); }else { publish(message, duration); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1658/buggy-version/SmartCitiesApp.app.src.main.java.de.ifgi.sc.smartcitiesapp.p2p.P2PManager.java", "BodyUseAPI": ["de.ifgi.sc.smartcitiesapp.p2p.P2PManager.publish(com.google.android.gms.nearby.messages.Message,int)"], "Fixed commit": "33688c3f310d6f627b8e4e48f5c7cb3c2329cc8d", "Url": "https://api.github.com/repos/heinrichloewen/SC-App", "Date": "2016-07-13T12:32:21Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bStructType) == null) { throw new org.ballerinalang.util.exceptions.BallerinaException(\"the expected struct type is not specified in action\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8218/buggy-version/modules.ballerina-builtin.src.main.java.org.ballerinalang.nativeimpl.actions.data.sql.SQLDataIterator.java", "BodyUseAPI": [], "Fixed commit": "3b053caaefa3bd08e14eee63a6f94b34de9d7bff", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2017-12-06T16:31:13Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diffDay == 0) diffTime = ((6 * 60) * 60) * 1000; else diffTime = ((30 * 60) * 60) * 1000;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5067/buggy-version/app.src.main.java.org.skv.dailyenglish.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "718d3145174690c61794cceb88121906c5e164ea", "Url": "https://api.github.com/repos/hoaite1229/DailyEnglish", "Date": "2017-06-26T15:19:39Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff > diffTime) { }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5067/buggy-version/app.src.main.java.org.skv.dailyenglish.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "718d3145174690c61794cceb88121906c5e164ea", "Url": "https://api.github.com/repos/hoaite1229/DailyEnglish", "Date": "2017-06-26T15:19:39Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val == 0) { return DISABLED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/428/buggy-version/flaggr.src.main.java.com.comuto.flag.operators.PercentageOperator.java", "BodyUseAPI": [], "Fixed commit": "e69ec92c778932c2a9bff159325177409c48b471", "Url": "https://api.github.com/repos/blablacar/flaggr-android", "Date": "2017-12-14T15:50:47Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (url.startsWith(\"/mydb\")) { url = url.substring(\"/mydb\".length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2626/buggy-version/mydb-web.src.main.java.com.shinemo.mydb.common.interceptor.AuthorizedInterceptor.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "37f11accfd42c12d18a463439e240cc82bb7e6c4", "Url": "https://api.github.com/repos/zhileihuang/mydb", "Date": "2015-07-08T14:20:02Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((converter) != null) { val = converter.deserialize(value); }else if (type.isEnum()) { val = java.lang.Enum.valueOf(((java.lang.Class<java.lang.Enum>) (type)), ((java.lang.String) (value))); }else if (java.lang.Long.class.isAssignableFrom(type)) { val = ((java.lang.Number) (value)).longValue(); }else if (type.isArray()) { java.util.List valueAsList = ((java.util.List) (value)); int length = valueAsList.size(); val = java.lang.reflect.Array.newInstance(type.getComponentType(), length); }else if (java.util.Set.class.isAssignableFrom(type)) { val = new java.util.HashSet(((java.util.List) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3676/buggy-version/src.main.java.io.innerloop.neo4j.ogm.impl.metadata.PropertyMetadata.java", "BodyUseAPI": [], "Fixed commit": "55f7188fba8978da1e0331f9e37fca311d770fd4", "Url": "https://api.github.com/repos/mangrish/java-neo4j-ogm", "Date": "2015-04-13T05:52:28Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (delete) { possibleFieldIterator.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4841/buggy-version/Source.ch.zhaw.necarex.src.model.pieces.Piece.java", "BodyUseAPI": [], "Fixed commit": "b8a84339af6656a24b4e5cbc44d04d1e78a4465b", "Url": "https://api.github.com/repos/sprengmeister/IT10-t_SWE1_chess", "Date": "2012-12-04T08:30:55Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jeremydeanlakey.json.Jtparser.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextToken.getStringValue().equalsIgnoreCase(\"null\")) return new com.jeremydeanlakey.json.Jnull();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6944/buggy-version/src.main.java.com.jeremydeanlakey.json.Jtparser.java", "BodyUseAPI": [], "Fixed commit": "81d6af94c53a36297da7fabbbf242cf9a237dc76", "Url": "https://api.github.com/repos/jeremydeanlakey/json", "Date": "2016-07-17T02:57:41Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jeremydeanlakey.json.Jtparser.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextToken.getStringValue().equalsIgnoreCase(\"true\")) return new com.jeremydeanlakey.json.Jboolean(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6944/buggy-version/src.main.java.com.jeremydeanlakey.json.Jtparser.java", "BodyUseAPI": [], "Fixed commit": "81d6af94c53a36297da7fabbbf242cf9a237dc76", "Url": "https://api.github.com/repos/jeremydeanlakey/json", "Date": "2016-07-17T02:57:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jeremydeanlakey.json.Jtparser.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextToken.getStringValue().equalsIgnoreCase(\"false\")) return new com.jeremydeanlakey.json.Jboolean(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6944/buggy-version/src.main.java.com.jeremydeanlakey.json.Jtparser.java", "BodyUseAPI": [], "Fixed commit": "81d6af94c53a36297da7fabbbf242cf9a237dc76", "Url": "https://api.github.com/repos/jeremydeanlakey/json", "Date": "2016-07-17T02:57:41Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (classe.getSimpleName().equals(\"Computer\")) { pagination.setNumberOfElements(crudComputerServiceImpl.getCountOfComputers()); }else if (classe.getSimpleName().equals(\"Company\")) { pagination.setNumberOfElements(crudCompanyServiceImpl.getCountOfCompanies()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6742/buggy-version/src.main.java.com.excilys.scaltot.cdb.services.implementation.PaginationServiceImpl.java", "BodyUseAPI": ["java.lang.Class<?>.getSimpleName()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "5b17e62650d4c24489b6ebd6f8f979e8068ff32a", "Url": "https://api.github.com/repos/StephanCaltot/cdb", "Date": "2017-03-23T08:26:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dev.blunch.blunch.services.CollaborativeMenuService.get(answer.getMenuId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (menuHost.containsSuggestedDish(entry.getKey())) menuHost.removeSuggestedDish(entry.getKey());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4919/buggy-version/app.src.main.java.dev.blunch.blunch.services.CollaborativeMenuService.java", "BodyUseAPI": ["dev.blunch.blunch.domain.CollaborativeMenu.removeSuggestedDish(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()"], "Fixed commit": "f888c3970670d1f97df681485c06e26cbd22e267", "Url": "https://api.github.com/repos/BlunchDev/blunch_android", "Date": "2016-04-25T17:48:26Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count >= (stringColumn)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1768/buggy-version/HukidashiChatTick.java", "BodyUseAPI": [], "Fixed commit": "191f7e727b61e39fc4425a7de9ecd5627a376e3e", "Url": "https://api.github.com/repos/anaso/HukidashiChat", "Date": "2013-12-21T13:56:25Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new java.io.File(javaWarFile).isFile()) { cmd.add(\"--webapp-archive\"); }else { cmd.add(\"--findwars\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7627/buggy-version/src.main.java.jenkins.plugins.coverity.analysis.CoverityToolHandler.java", "BodyUseAPI": [], "Fixed commit": "a92afa2ff4a1a9f709509a258e208adf4b7c5743", "Url": "https://api.github.com/repos/ddooley77/coverity-plugin", "Date": "2016-07-13T14:13:01Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idFacultySubject.getIdSubject().getProgramCourse().getProgram().getIdProgram().equalsIgnoreCase(\"ME\")) && ((fType.getIdFeedbackType()) == 6)) qver = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/90/buggy-version/src.java.controllers.feedback.Feedback2013Controller.java", "BodyUseAPI": [], "Fixed commit": "028c7e2c48bfd68f1b8b5161334c5c4a0db98b05", "Url": "https://api.github.com/repos/amathew121/sams", "Date": "2015-04-18T05:37:57Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((BModel.getHighlighted()) == null) || (BModel.getHighlighted().isActive())) { buildings.BoardObject clicked = getClickedBuilding(((int) (v.x)), ((int) (v.y))); if ((clicked != null) && (!(clicked instanceof buildings.Wall))) { BModel.clickedBuilding(clicked); }else { BModel.deselectHighlighted(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5188/buggy-version/core.src.main.controllers.BuildingController.java", "BodyUseAPI": ["models.BuildingModel.deselectHighlighted()", "models.BuildingModel.clickedBuilding(buildings.BoardObject)"], "Fixed commit": "7cee131b0c1c494005a5709c7e8838b1d1041681", "Url": "https://api.github.com/repos/Coec0/tda367-JOKE", "Date": "2017-05-20T15:41:22Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checked) checkRules();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8214/buggy-version/uLTRA.frontend.panels.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "436cb1fd74bdb016ec3dd643406bae5bd477d3b8", "Url": "https://api.github.com/repos/Hawkeye281/uLTRA", "Date": "2014-01-31T11:46:51Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scanner.getInput().contains(\"blockquote\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4180/buggy-version/src.main.java.de.neuland.jade4j.lexer.Lexer.java", "BodyUseAPI": [], "Fixed commit": "184f31e9ccae2d0ae36660871ae5fb7a9c4d3579", "Url": "https://api.github.com/repos/neuland/jade4j", "Date": "2013-04-16T17:43:23Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fileInput == null) { fileInput = new java.io.FileInputStream(filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/763/buggy-version/src.main.java.de.funky_clan.mc.file.SchematicLoader.java", "BodyUseAPI": [], "Fixed commit": "1ceb2c6a8456c4a2afcd04bf428d641f9e163c5d", "Url": "https://api.github.com/repos/synopia/mc_architect", "Date": "2011-07-31T16:59:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getEnergy()) >= 20) { for (int i = 0; i < 5; i++) { p.setEnergy(((p.getEnergy()) - (20 / 5))); p.setAssignmentProgress(((p.getAssignmentProgress()) + 20)); java.lang.System.out.println((((\"Energy = \" + (p.getEnergy())) + \" and assignmentProgress = \") + (p.getAssignmentProgress()))); } if ((p.getAssignmentProgress()) >= 100) { p.setAssignmentProgress(0); p.setGradedAssignments(((p.getGradedAssignments()) + 1)); java.lang.System.out.println(\"Assignment graded\"); p.inventory().removeItem(this); if ((p.getGradedAssignments()) >= 2) { java.lang.System.out.println(\"you won\"); } } }else { java.lang.System.out.println(\"You do not have enough energy\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2934/buggy-version/Semesterprojekt.src.worldofzuul.items.Assignment.java", "BodyUseAPI": ["worldofzuul.People.Player.setEnergy(((p.getEnergy()) - (20 / 5)))", "p.inventory().removeItem(worldofzuul.items.Assignment)", "worldofzuul.People.Player.getGradedAssignments()", "worldofzuul.People.Player.getGradedAssignments()", "worldofzuul.People.Player.getAssignmentProgress()", "worldofzuul.People.Player.setAssignmentProgress(int)", "java.io.PrintStream.println((((\"Energy = \" + (p.getEnergy())) + \" and assignmentProgress = \") + (p.getAssignmentProgress())))", "worldofzuul.People.Player.getAssignmentProgress()", "worldofzuul.People.Player.inventory()", "worldofzuul.People.Player.getEnergy()", "worldofzuul.People.Player.setGradedAssignments(((p.getGradedAssignments()) + 1))", "worldofzuul.People.Player.getAssignmentProgress()", "worldofzuul.People.Player.setAssignmentProgress(((p.getAssignmentProgress()) + 20))", "worldofzuul.People.Player.getEnergy()"], "Fixed commit": "543192f64676c4bd29e18d81922e790f68ea7e32", "Url": "https://api.github.com/repos/SE-ST-1-Grp-7/Zuul", "Date": "2017-11-15T11:34:55Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((io.github.mdsimmo.bomberman.BoardGenerator.loadBoard(oldBoard.name)) == null) io.github.mdsimmo.bomberman.BoardGenerator.saveBoard(oldBoard);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8379/buggy-version/src.main.java.io.github.mdsimmo.bomberman.Game.java", "BodyUseAPI": ["io.github.mdsimmo.bomberman.BoardGenerator.saveBoard(io.github.mdsimmo.bomberman.Board)"], "Fixed commit": "9d9a0d5db8e722ed0f475907ff904bd38f48ac30", "Url": "https://api.github.com/repos/mdsimmo/Bomberman", "Date": "2014-07-06T10:49:14Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (damage == (this.getMaxDamage())) { damage = 0; typeIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1340/buggy-version/src.main.java.toughasnails.item.ItemCanteen.java", "BodyUseAPI": [], "Fixed commit": "73fdbfbf3398568fd34e1dde364fd190b49bb768", "Url": "https://api.github.com/repos/Glitchfiend/ToughAsNails", "Date": "2016-04-05T05:57:59Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(value.isEmpty())) { if (result.isEmpty()) { result += (key + \"=\") + (data.get(key)); }else { result += ((\"&\" + key) + \"=\") + (data.get(key)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4220/buggy-version/app.src.main.java.com.example.abela.marketspiral.Utility.Functions.java", "BodyUseAPI": [], "Fixed commit": "7b68eed5cbcf775d44adb8eed72dc28eef5eb972", "Url": "https://api.github.com/repos/abel06/MarketSpiral", "Date": "2017-05-18T09:35:50Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((this.scope) != null) && (this.scope.isEmpty())) { this.scope = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8095/buggy-version/jphp-runtime.src.php.runtime.lang.Closure.java", "BodyUseAPI": [], "Fixed commit": "026bab7ff37f701b0c31d3d45539273e64d06aaf", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2016-03-16T06:30:16Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((env != null) && (((this.scope) == null) || (this.scope.isEmpty()))) { this.scope = env.getLateStatic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8095/buggy-version/jphp-runtime.src.php.runtime.lang.Closure.java", "BodyUseAPI": [], "Fixed commit": "026bab7ff37f701b0c31d3d45539273e64d06aaf", "Url": "https://api.github.com/repos/jphp-group/jphp", "Date": "2016-03-16T06:30:16Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(duoqu(region, status, \"huguo.png\"))) { if (!(duoqu(region, status, \"fengguo.png\"))) { duoqu(region, status, \"langguo.png\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2666/buggy-version/src.main.java.com.peace.auto.bl.task.ShengHuo.java", "BodyUseAPI": ["com.peace.auto.bl.task.ShengHuo.duoqu(org.sikuli.script.Region,com.peace.auto.bl.Status,java.lang.String)", "com.peace.auto.bl.task.ShengHuo.duoqu(org.sikuli.script.Region,com.peace.auto.bl.Status,java.lang.String)"], "Fixed commit": "be1e90ffc6f66936e05b296cb2c8eca802428eef", "Url": "https://api.github.com/repos/peace0phmind/blauto", "Date": "2016-12-03T15:20:00Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFanLoaded) { onAdsLoadedListener.onAdsLoaded(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3307/buggy-version/app.src.main.java.com.alexxpasta.nativeadsinrecyclerview.ads.AdsProvider.java", "BodyUseAPI": [], "Fixed commit": "1cc9f09c2bb6a093f1bb3fadc35fa34d1bc9ce17", "Url": "https://api.github.com/repos/alexpasta/Native-Ads-in-RecyclerView", "Date": "2017-04-17T08:39:05Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (output == 0) return 1; else return output;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5945/buggy-version/src.HashUtilities.java", "BodyUseAPI": [], "Fixed commit": "5c2f7863e290e3524bc569e96c803c1a02ef6e77", "Url": "https://api.github.com/repos/BBK-PiJ-2014-01/Day8", "Date": "2014-12-28T22:25:58Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((symbolList) != null) { myAdapter = new com.example.ivanradosavljevic.stockquotes.logic.MyAdapter(symbolList, getApplicationContext()); lv.setAdapter(myAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6207/buggy-version/app.src.main.java.com.example.ivanradosavljevic.stockquotes.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6492c03b7cd99906bc7014a11a6adfeb578bdbdd", "Url": "https://api.github.com/repos/ivanradosavljevic/StockQuotes", "Date": "2016-12-05T09:00:42Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { isTest = true; }else { isTest = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1066/buggy-version/app.src.main.java.demo.venpath.com.venpathsample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "73c773afee16f0285316e8a4a6206662b0223b8c", "Url": "https://api.github.com/repos/Venpath/Android-SDK", "Date": "2017-07-17T06:22:55Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.descoped.client.util.CommonUtil.tccl().getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (in == null) { io.descoped.client.api.config.Configuration.log.error(\"Security config '{}' NOT found!\", \"META-INF/security.properties\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3635/buggy-version/src.main.java.io.descoped.client.api.config.Configuration.java", "BodyUseAPI": [], "Fixed commit": "10acf49829c309453edc6c8bd013c218fd45c62a", "Url": "https://api.github.com/repos/descoped/api-proxy", "Date": "2017-11-21T16:01:07Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (instance.getKeyId().isPresent()) { keyPromises.add(model.getLocator().getFormInstance(instance.getKeyId().get())); }else { org.activityinfo.legacy.shared.Log.error((\"Key is not found for instance: \" + (instance.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5061/buggy-version/server.src.main.java.org.activityinfo.ui.client.component.form.subform.SubFormInstanceLoader.java", "BodyUseAPI": ["org.activityinfo.model.form.FormInstance.getKeyId()", "org.activityinfo.model.form.FormInstance.getId()", "instance.getKeyId().get()", "model.getLocator().getFormInstance(instance.getKeyId().get())", "java.util.List<org.activityinfo.promise.Promise<org.activityinfo.model.form.FormInstance>>.add(model.getLocator().getFormInstance(instance.getKeyId().get()))", "org.activityinfo.legacy.shared.Log.error((\"Key is not found for instance: \" + (instance.getId())))"], "Fixed commit": "ce9ce7b5cba26a2dba64c87ff497e64f261c73f3", "Url": "https://api.github.com/repos/bedatadriven/activityinfo", "Date": "2016-02-02T15:42:05Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(showOpen)) { for (io.github.davidg95.JTill.jtillserver.Product p : currentTableContents) { if (!(p.isOpen())) { newList.add(p); } } currentTableContents = newList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3691/buggy-version/src.io.github.davidg95.JTill.jtillserver.ProductSelectDialog.java", "BodyUseAPI": [], "Fixed commit": "f651e6c86770abd0cd41f54355aba49d3bb120f7", "Url": "https://api.github.com/repos/davidg95/JTillServer", "Date": "2017-11-03T16:49:38Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clickedX < 0) || (clickedY < 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1064/buggy-version/src.main.java.com.techno_wizard.mcguicreator.management.InventoryManager.java", "BodyUseAPI": [], "Fixed commit": "d0ec7075d649353e6dd638b1c266c8b6b786cddd", "Url": "https://api.github.com/repos/EthanZeigler/MenuForge", "Date": "2016-04-14T01:05:38Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clickedX < 0) || (clickedY < 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1064/buggy-version/src.main.java.com.techno_wizard.mcguicreator.management.InventoryManager.java", "BodyUseAPI": [], "Fixed commit": "d0ec7075d649353e6dd638b1c266c8b6b786cddd", "Url": "https://api.github.com/repos/EthanZeigler/MenuForge", "Date": "2016-04-14T01:05:38Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clickedX < 0) || (clickedY < 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1064/buggy-version/src.main.java.com.techno_wizard.mcguicreator.management.InventoryManager.java", "BodyUseAPI": [], "Fixed commit": "d0ec7075d649353e6dd638b1c266c8b6b786cddd", "Url": "https://api.github.com/repos/EthanZeigler/MenuForge", "Date": "2016-04-14T01:05:38Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cur.ownText()) != null) page.getHtmlBody().insertString(cur.ownText(), pageStyle);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8482/buggy-version/src.com.controller.PageController.java", "BodyUseAPI": ["org.jsoup.nodes.Element.ownText()", "page.getHtmlBody().insertString(cur.ownText(),javax.swing.text.SimpleAttributeSet)"], "Fixed commit": "c0a4f4fa19a2e3d30f8b931fe0cb3be7ca16a44b", "Url": "https://api.github.com/repos/huuson94/oop", "Date": "2015-05-22T08:07:31Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (sessions.size())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2158/buggy-version/vector.src.main.java.im.vector.Matrix.java", "BodyUseAPI": [], "Fixed commit": "b05cc0e5876fe4df6a741c769319f08f45d196e4", "Url": "https://api.github.com/repos/rkfg/riot-android", "Date": "2017-07-24T09:20:04Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((l != null) && (l != (defaultResultListener))) { waitingForResult = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/403/buggy-version/Ports.Android.src.com.codename1.impl.android.CodenameOneActivity.java", "BodyUseAPI": [], "Fixed commit": "6395bec93c626b9ab558daac1d5ae2b32d5a1e04", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-01-04T18:31:09Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.isRepeated()) && (!(type.isMap()))) { return methodName(com.google.api.codegen.util.Name.from(\"get\").join(name).join(\"list\")); }else { return methodName(com.google.api.codegen.util.Name.from(\"get\").join(name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/743/buggy-version/src.main.java.com.google.api.codegen.transformer.SurfaceNamer.java", "BodyUseAPI": [], "Fixed commit": "903434fca777efd384bedcbc14deaf628ab19c7b", "Url": "https://api.github.com/repos/jmuk/toolkit", "Date": "2016-08-18T20:56:34Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (count > 1) { return methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), (\"Test\" + (java.lang.Integer.toString(count))))); }else { return methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), \"Test\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/743/buggy-version/src.main.java.com.google.api.codegen.transformer.SurfaceNamer.java", "BodyUseAPI": ["java.lang.Integer.toString(java.lang.Integer)", "com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(),java.lang.String)", "com.google.api.codegen.transformer.SurfaceNamer.methodName(com.google.api.codegen.util.Name.upperCamel(method.getSimpleName(), (\"Test\" + (java.lang.Integer.toString(count)))))"], "Fixed commit": "903434fca777efd384bedcbc14deaf628ab19c7b", "Url": "https://api.github.com/repos/jmuk/toolkit", "Date": "2016-08-18T20:56:34Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getInventory()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6195/buggy-version/ConsolePlugin.src.com.computerdude.volanti.CustomEnchants.java", "BodyUseAPI": [], "Fixed commit": "ed04821fcc7329175fbc0fc9cbf70323b79afdf6", "Url": "https://api.github.com/repos/ComputerDude/Volanti", "Date": "2016-10-30T22:51:42Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getEntity().getType()) != (org.bukkit.entity.EntityType.PLAYER)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6195/buggy-version/ConsolePlugin.src.com.computerdude.volanti.CustomEnchants.java", "BodyUseAPI": [], "Fixed commit": "ed04821fcc7329175fbc0fc9cbf70323b79afdf6", "Url": "https://api.github.com/repos/ComputerDude/Volanti", "Date": "2016-10-30T22:51:42Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(lastOperator.canBeMerged())) || (!(searchResult.lastOperator.canBeMerged()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7761/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OIndexSearchResult.java", "BodyUseAPI": [], "Fixed commit": "1623221aec7f6bfab063c3c873d55d6d8cb01338", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-10-27T15:12:36Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (daValue != null) { this.doubleArray = daValue.doubleArray.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4680/buggy-version/src.burlap.oomdp.core.values.DoubleArrayValue.java", "BodyUseAPI": [], "Fixed commit": "f8d6a3835c08e71fedd713d211468f98f548efcc", "Url": "https://api.github.com/repos/brawner/burlap", "Date": "2014-10-10T20:49:02Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rectLength == 1) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7813/buggy-version/src.main.java.pathfinder.algorithm.RectanglePathToEdgePoints.java", "BodyUseAPI": [], "Fixed commit": "e5ff22d9d40ebc8b253ede91f24495b5b309397c", "Url": "https://api.github.com/repos/gabrielilharco/PathFinder", "Date": "2015-07-08T19:05:56Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (divisionSize == 0) { return rectLength / 2; }else { return rectLength / divisionSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7813/buggy-version/src.main.java.pathfinder.algorithm.RectanglePathToEdgePoints.java", "BodyUseAPI": [], "Fixed commit": "e5ff22d9d40ebc8b253ede91f24495b5b309397c", "Url": "https://api.github.com/repos/gabrielilharco/PathFinder", "Date": "2015-07-08T19:05:56Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(value[j].toString())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7816/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.rulebuilder.DataDTOToMVELTranslator.java", "BodyUseAPI": [], "Fixed commit": "9b556e9914c84a41ae10f07813ea46a5d2023f27", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2014-07-29T21:51:35Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAppendable()) { org.springframework.data.hadoop.store.output.TextSequenceFileWriter.log.info(\"Idle timeout detected for this writer, flushing stream\"); hflush(); }else { org.springframework.data.hadoop.store.output.TextSequenceFileWriter.log.info(\"Idle timeout detected for this writer, closing stream\"); close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5388/buggy-version/spring-hadoop-store.src.main.java.org.springframework.data.hadoop.store.output.TextSequenceFileWriter.java", "BodyUseAPI": [], "Fixed commit": "6b2bbd091c23792a96333b65e5737c6356bd4d97", "Url": "https://api.github.com/repos/liujiong1982/spring-hadoop", "Date": "2014-06-16T11:57:39Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.che.ide.ext.svn.server.SubversionApi.runCommand(<nulltype>,java.util.List<java.lang.String>,java.io.File,java.util.List)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((result.getStdout()) != null) && ((result.getStdout().size()) > 0)) { output = result.getStdout().subList(1, result.getStdout().size()); }else { output = result.getStdout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4368/buggy-version/plugin-svn.che-plugin-svn-ext-subversion.src.main.java.org.eclipse.che.ide.ext.svn.server.SubversionApi.java", "BodyUseAPI": ["result.getStdout().size()", "result.getStdout().subList(int,result.getStdout().size())", "org.eclipse.che.ide.ext.svn.server.upstream.CommandLineResult.getStdout()", "org.eclipse.che.ide.ext.svn.server.upstream.CommandLineResult.getStdout()", "org.eclipse.che.ide.ext.svn.server.upstream.CommandLineResult.getStdout()"], "Fixed commit": "b2324fa43e79564937177fcdaac9d54bd775fa9e", "Url": "https://api.github.com/repos/codenvy-legacy/che-plugins", "Date": "2015-05-05T15:37:10Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(inputText.getText().replaceAll(\"//s+\", \"\").isEmpty())) { java.io.InputStream sound = null; try { sound = audio.getAudio(inputText.getText(), Language.GREEK); } catch (java.io.IOException ex) { ex.printStackTrace(java.lang.System.err); } try { audio.play(sound); } catch (javazoom.jl.decoder.JavaLayerException ex) { ex.printStackTrace(java.lang.System.err); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1280/buggy-version/src.gr.peustr.openhawking.gui.Menu.java", "BodyUseAPI": ["com.gtranslate.Audio.getAudio(java.lang.String,Language.GREEK)", "javax.swing.JTextField.getText()"], "Fixed commit": "c4a6435d0dc414bd35cf2e2c760f171da36cedf1", "Url": "https://api.github.com/repos/peustr/OpenHawking", "Date": "2015-04-07T15:30:46Z"},
{"Line": "=>2279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groupSelection) != null) { org.openmicroscopy.shoola.agents.util.ui.JComboBoxImageObject o = ((org.openmicroscopy.shoola.agents.util.ui.JComboBoxImageObject) (groupSelection.getSelectedItem())); g = ((pojos.GroupData) (o.getData())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2049/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.fsimporter.chooser.ImportDialog.java", "BodyUseAPI": [], "Fixed commit": "cc8011d9e3d7b03c90a1922a6e6dc73b11c0f469", "Url": "https://api.github.com/repos/openmicroscopy/openmicroscopy", "Date": "2012-09-21T18:54:38Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.Slot.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(this.mergeItemStack(itemstack1, 9, 10, false))) { if (!(this.mergeItemStack(itemstack1, 0, 9, false))) { return net.minecraft.item.ItemStack.EMPTY; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6147/buggy-version/src.main.java.com.elytradev.teckle.common.container.ContainerAlloyFurnace.java", "BodyUseAPI": ["com.elytradev.teckle.common.container.ContainerAlloyFurnace.mergeItemStack(net.minecraft.item.ItemStack,int,int,boolean)"], "Fixed commit": "9bee11b3e9269c5b96f6052b551e86393c28bb31", "Url": "https://api.github.com/repos/elytra/Teckle", "Date": "2017-07-18T06:23:57Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tradeOut.getOptionStrikePrice()) == null) { tradeOut.setTradeType(TradeType.SWAP); }else { tradeOut.setTradeType(TradeType.OPTION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3336/buggy-version/OTCAnalyser.src.uk.ac.cam.cstibhotel.otcanalyser.networklayer.ParseZIP.java", "BodyUseAPI": ["uk.ac.cam.cstibhotel.otcanalyser.trade.Trade.setTradeType(TradeType.OPTION)", "uk.ac.cam.cstibhotel.otcanalyser.trade.Trade.setTradeType(TradeType.SWAP)"], "Fixed commit": "435d2f190fc46a2ef2d27f593bd42e7fe9770048", "Url": "https://api.github.com/repos/CSTIB-Hotel/OTCAnalyser", "Date": "2015-02-23T15:18:00Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((null != (ja.getString(i))) && (!(ja.getString(i).isEmpty()))) { arraySpinner[i] = ja.getString(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7399/buggy-version/app.src.main.java.rsklabs.com.fuelprices_india.MainActivity.java", "BodyUseAPI": ["org.json.JSONArray.getString(int)"], "Fixed commit": "3954e992deca1c565d123f56a3469b15648e8260", "Url": "https://api.github.com/repos/Senthil2592/FuelPrices_India", "Date": "2017-10-02T16:30:01Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.takari.watcher.PathUtils.hash(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (hash != null) { lastModifiedMap.put(child, hash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6763/buggy-version/src.main.java.io.takari.watcher.PathUtils.java", "BodyUseAPI": ["java.util.Map<java.nio.file.Path, com.google.common.hash.HashCode>.put(java.nio.file.Path,com.google.common.hash.HashCode)"], "Fixed commit": "33a353494fd8b4192bec85fe4c34e9b3d7439a38", "Url": "https://api.github.com/repos/takari/directory-watcher", "Date": "2016-05-24T15:59:46Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.takari.watchservice.MacOSXListeningWatchService.MacOSXListeningCallback.hash(java.nio.file.Path)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (hashCode != null) { createdFileList.add(file); hashCodeMap.put(file, hashCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6763/buggy-version/src.main.java.io.takari.watchservice.MacOSXListeningWatchService.java", "BodyUseAPI": ["java.util.Map<java.nio.file.Path, com.google.common.hash.HashCode>.put(java.nio.file.Path,com.google.common.hash.HashCode)"], "Fixed commit": "33a353494fd8b4192bec85fe4c34e9b3d7439a38", "Url": "https://api.github.com/repos/takari/directory-watcher", "Date": "2016-05-24T15:59:46Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.match(\"part\")) { com.btbb.irc.IRCBot.JavaBot.say(\"Bye\"); com.btbb.irc.IRCBot.JavaBot.part(lastChannel); channels.remove(lastChannel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7792/buggy-version/src.com.btbb.irc.IRCBot.java", "BodyUseAPI": [], "Fixed commit": "7aad023bba2fd835ad46707f332d1d469709b60b", "Url": "https://api.github.com/repos/bobtheblueberry/IRC-Bot", "Date": "2012-05-05T22:52:32Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cgeo.geocaching.utils.BaseUtils.containsHtml(waypoint.getNote())) { ((android.widget.EditText) (findViewById(R.id.note))).setText(android.text.Html.fromHtml(org.apache.commons.lang3.StringUtils.trimToEmpty(waypoint.getNote())).toString()); }else { ((android.widget.EditText) (findViewById(R.id.note))).setText(org.apache.commons.lang3.StringUtils.trimToEmpty(waypoint.getNote())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4306/buggy-version/main.src.cgeo.geocaching.cgeowaypointadd.java", "BodyUseAPI": ["android.text.Html.fromHtml(org.apache.commons.lang3.StringUtils.trimToEmpty(waypoint.getNote()))", "org.apache.commons.lang3.StringUtils.trimToEmpty(waypoint.getNote())", "((android.widget.EditText) (findViewById(R.id.note))).setText(android.text.Html.fromHtml(org.apache.commons.lang3.StringUtils.trimToEmpty(waypoint.getNote())).toString())", "((android.widget.EditText) (findViewById(R.id.note))).setText(org.apache.commons.lang3.StringUtils.trimToEmpty(waypoint.getNote()))", "android.text.Html.fromHtml(org.apache.commons.lang3.StringUtils.trimToEmpty(waypoint.getNote())).toString()", "cgeo.geocaching.cgWaypoint.getNote()", "org.apache.commons.lang3.StringUtils.trimToEmpty(waypoint.getNote())", "cgeo.geocaching.cgWaypoint.getNote()"], "Fixed commit": "1e06aee2435ec34858890b6f14cab554f2c42a84", "Url": "https://api.github.com/repos/cgeo/c-geo-opensource", "Date": "2012-04-12T12:40:40Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(com.kotcrab.vis.ui.VisUI.isLoaded())) { com.kotcrab.vis.ui.VisUI.load(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5536/buggy-version/core.src.com.veins.game.screens.MenuScreen.java", "BodyUseAPI": [], "Fixed commit": "40e4e9e14e9cee8920780af9f2784b147a64d5c9", "Url": "https://api.github.com/repos/Zireael07/veins-of-the-earth", "Date": "2017-05-12T12:41:38Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callBack != null) { callBack.onItemClick(v, getAdapterPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5248/buggy-version/app.src.main.java.com.ilis.memoryoptimizer.holder.ProcessViewHolder.java", "BodyUseAPI": ["com.ilis.memoryoptimizer.holder.ProcessViewCallback.onItemClick(android.view.View,getAdapterPosition())"], "Fixed commit": "4f4f96951b90f41bc2c03eb56f3f34a9dea992a1", "Url": "https://api.github.com/repos/helinyun98/MemoryOptimizer", "Date": "2016-12-04T14:00:07Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cl == null) { cl = org.pentaho.di.ui.util.SwtSvgImageUtil.class.getClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7571/buggy-version/ui.src.org.pentaho.di.ui.util.SwtSvgImageUtil.java", "BodyUseAPI": [], "Fixed commit": "c745b46b597e70af63abd6cdcd204c60069989df", "Url": "https://api.github.com/repos/pentaho/pentaho-kettle", "Date": "2015-05-12T19:20:09Z"},
{"Line": "=>792", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFriendsAdapter) != null) { mFriendsAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6419/buggy-version/app.src.main.java.com.moyersoftware.contender.game.GameBoardActivity.java", "BodyUseAPI": [], "Fixed commit": "aa992bf72a1bf7121fe006ff41055cf51804f1f0", "Url": "https://api.github.com/repos/sheyko-d/Contender", "Date": "2016-09-09T09:06:52Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (source == null) { this.source = null; }else { this.source = source.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/457/buggy-version/src.main.java.tudelft.ti2806.pl3.data.graph.SingleNode.java", "BodyUseAPI": [], "Fixed commit": "5ee394eb0f79dfd3af001deda3c5025454b33d6b", "Url": "https://api.github.com/repos/ProgrammingLife3/ProgrammingLife3", "Date": "2015-05-08T09:20:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (contentOfTheNode == null) { this.content = null; }else { this.content = contentOfTheNode.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/457/buggy-version/src.main.java.tudelft.ti2806.pl3.data.graph.SingleNode.java", "BodyUseAPI": [], "Fixed commit": "5ee394eb0f79dfd3af001deda3c5025454b33d6b", "Url": "https://api.github.com/repos/ProgrammingLife3/ProgrammingLife3", "Date": "2015-05-08T09:20:04Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mCourse.getInstructors()) != null) && ((mCourse.getInstructors().length) != 0)) { bus.post(new org.stepic.droid.events.instructors.StartLoadingInstructorsEvent(mCourse)); mShell.getApi().getUsers(mCourse.getInstructors()).enqueue(new retrofit.Callback<org.stepic.droid.web.UserStepicResponse>() { @java.lang.Override public void onResponse(retrofit.Response<org.stepic.droid.web.UserStepicResponse> response, retrofit.Retrofit retrofit) { bus.post(new org.stepic.droid.events.instructors.OnResponseLoadingInstructorsEvent(mCourse, response, retrofit)); } @java.lang.Override public void onFailure(java.lang.Throwable t) { bus.post(new org.stepic.droid.events.instructors.FailureLoadInstrictorsEvent(mCourse, t)); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8756/buggy-version/app.src.main.java.org.stepic.droid.view.activities.NotEnrolledCourseDetailActivity.java", "BodyUseAPI": ["org.stepic.droid.view.activities.NotEnrolledCourseDetailActivity.post(org.stepic.droid.events.instructors.StartLoadingInstructorsEvent)", "org.stepic.droid.view.activities.NotEnrolledCourseDetailActivity.3.post(org.stepic.droid.events.instructors.OnResponseLoadingInstructorsEvent)", "org.stepic.droid.model.Course.getInstructors()", "mShell.getApi().getUsers(mCourse.getInstructors()).enqueue(retrofit.Callback<org.stepic.droid.web.UserStepicResponse>)", "org.stepic.droid.view.activities.NotEnrolledCourseDetailActivity.3.post(org.stepic.droid.events.instructors.FailureLoadInstrictorsEvent)", "mShell.getApi().getUsers(mCourse.getInstructors())"], "Fixed commit": "cf3f662dd61058db6b2b05dce8a99bed9a810595", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2015-10-07T09:11:50Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["alien4cloud.application.ApplicationEnvironmentService.getTopologyId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (topologyId == null) { throw new alien4cloud.exception.ApplicationVersionNotFoundException(\"An application version is required by an application environment.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9167/buggy-version/alien4cloud-rest-api.src.main.java.alien4cloud.rest.application.ApplicationEnvironmentController.java", "BodyUseAPI": [], "Fixed commit": "7ccc38da059fd6742673581a636c4a8738ef4c11", "Url": "https://api.github.com/repos/OresteVisari/alien4cloud", "Date": "2015-05-07T10:46:45Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) mChildFrame.getViewTreeObserver().removeOnGlobalLayoutListener(this); else mChildFrame.getViewTreeObserver().removeGlobalOnLayoutListener(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/390/buggy-version/app.src.main.java.com.chien.sony.cameraremote.widget.FloatingActionButtonSelect.java", "BodyUseAPI": [], "Fixed commit": "56efe2a04d5648591ab8ca248417620fc42d2a14", "Url": "https://api.github.com/repos/ChihChienKung/SonyCameraRemote", "Date": "2015-12-02T02:07:17Z"},
{"Line": "=>490", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((comPlayer) && ((game.getCurrentPlayer()) == 1)) { compTurn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2929/buggy-version/src.warfare.WarefareGUI.java", "BodyUseAPI": [], "Fixed commit": "92792412fa1a11601be90c01b1e3977ee13567db", "Url": "https://api.github.com/repos/elliotensink/Warfare", "Date": "2015-12-09T17:48:12Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((gankItemData != null) && ((gankItemData.size()) > 0)) mView.updateUI(gankItemData);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6753/buggy-version/app.src.main.java.com.demo.newsdemo.presenter.GankItemPresenter.java", "BodyUseAPI": ["com.demo.newsdemo.presenter.GankItemPresenter.1.updateUI(java.util.List<com.demo.newsdemo.model.bean.GankItemData>)"], "Fixed commit": "fc6a683df906dad52e24cca12d8f01dc2afcaf66", "Url": "https://api.github.com/repos/hanswook/newslook", "Date": "2017-12-26T01:58:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((zhihuEntity != null) && ((zhihuEntity.size()) > 0)) mView.updateList(zhihuEntity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6753/buggy-version/app.src.main.java.com.demo.newsdemo.presenter.HomePresenter.java", "BodyUseAPI": ["com.demo.newsdemo.presenter.HomePresenter.1.updateList(java.util.List<com.demo.newsdemo.model.bean.zhihu.StoriesBean>)"], "Fixed commit": "fc6a683df906dad52e24cca12d8f01dc2afcaf66", "Url": "https://api.github.com/repos/hanswook/newslook", "Date": "2017-12-26T01:58:30Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((girlItemData != null) && ((girlItemData.size()) > 0)) mView.updateUI(girlItemData);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6753/buggy-version/app.src.main.java.com.demo.newsdemo.presenter.GirlItemPresenter.java", "BodyUseAPI": ["com.demo.newsdemo.presenter.GirlItemPresenter.1.updateUI(java.util.List<com.demo.newsdemo.model.bean.GirlItemData>)"], "Fixed commit": "fc6a683df906dad52e24cca12d8f01dc2afcaf66", "Url": "https://api.github.com/repos/hanswook/newslook", "Date": "2017-12-26T01:58:30Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (table.isEditing()) { table.getCellEditor().stopCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6610/buggy-version/RedisEditorXM.src.rediseditor.logic.MainEditorClass.java", "BodyUseAPI": ["javax.swing.JTable.getCellEditor()", "javax.swing.table.TableCellEditor.stopCellEditing()"], "Fixed commit": "c956f8120efd861d5999fa81116b4a18e8a630f0", "Url": "https://api.github.com/repos/tosw164/RedisCRUDTool", "Date": "2016-12-07T04:26:27Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gCal.withExistingToken()) { logic.LogicController.logger.log(java.util.logging.Level.INFO, \"Deleting- sync with google.\"); gCal.deleteEvent(logic.Converter.jsonToTask(task).getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1725/buggy-version/src.logic.LogicController.java", "BodyUseAPI": ["logic.google.GoogleCal.deleteEvent(logic.Converter.jsonToTask(task).getName())"], "Fixed commit": "bf3b8d24b91ba4e149e4cf54a67fe66b74c121e0", "Url": "https://api.github.com/repos/cs2103aug2014-t16-4j/main", "Date": "2014-11-08T13:17:05Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gCal.withExistingToken()) { gCal.createEvent(task, \"primary\"); logic.LogicController.logger.log(java.util.logging.Level.INFO, \"Adding - sync with google.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1725/buggy-version/src.logic.LogicController.java", "BodyUseAPI": ["logic.google.GoogleCal.createEvent(model.Task,java.lang.String)"], "Fixed commit": "bf3b8d24b91ba4e149e4cf54a67fe66b74c121e0", "Url": "https://api.github.com/repos/cs2103aug2014-t16-4j/main", "Date": "2014-11-08T13:17:05Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { url = new java.net.URL(value).toURI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/351/buggy-version/src.main.java.uk.ac.ebi.biostudy.submission.AppConfig.java", "BodyUseAPI": ["java.net.URL.toURI()"], "Fixed commit": "a901c56ed089531bb1a976a973b0e452335a5233", "Url": "https://api.github.com/repos/EBIBioStudies/BioStudySubmProxy", "Date": "2016-04-20T15:23:23Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arguments.length) < 1) return original;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2446/buggy-version/src.com.iCo6.util.Messaging.java", "BodyUseAPI": [], "Fixed commit": "46728d51c8f46b8dd5976eb3c2adfa37002d3433", "Url": "https://api.github.com/repos/iConomy/Core", "Date": "2011-09-20T21:38:27Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.equals(subredditsStr, redit.com.redditshow.util.PreferenceUtil.getSubreddit(getApplicationContext())))) { fetchData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8255/buggy-version/app.src.main.java.redit.com.redditshow.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "140ac176f453972d3543f978a4709286b0e1ce94", "Url": "https://api.github.com/repos/sureshdraco/RedditShow", "Date": "2017-04-26T13:48:36Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"totalMastery\".equalsIgnoreCase(keyword)) { returnMessage += output; }else if (\"icon\".equalsIgnoreCase(keyword)) { returnMessage += output; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7458/buggy-version/src.main.java.com.lol.discord.bot.LolDiscordBot.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "f5850080f794960f62212d2d4521444978204a44", "Url": "https://api.github.com/repos/AveryVine/lol-discord-bot", "Date": "2017-12-03T01:06:58Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.canWrite())) { open(DataAccessOption.WRITE_ACCESS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1844/buggy-version/src.main.java.edu.harvard.iq.dataverse.dataaccess.S3AccessIO.java", "BodyUseAPI": [], "Fixed commit": "ae03de4ec46c4e847bacf42103cb12bf42b0cfb7", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2017-08-11T14:47:07Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lp.screenBrightness) < 0) { playFile.getWindow().setAttributes(lp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/220/buggy-version/app.src.main.java.com.mediaplayer.listeners.BrightnessOnSeekBarChangeListener.java", "BodyUseAPI": ["playFile.getWindow().setAttributes(WindowManager.LayoutParams)"], "Fixed commit": "6b8e494326baea3256cc4dd235996c2a769abf63", "Url": "https://api.github.com/repos/vinayadahal/mediaplayer", "Date": "2016-09-13T15:07:44Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serverWasActive) { if (ready(false)) return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5946/buggy-version/src.edu.stanford.nlp.pipeline.WebServiceAnnotator.java", "BodyUseAPI": [], "Fixed commit": "3f76190cfff52f323e22cbd98f90bd64c3348cdd", "Url": "https://api.github.com/repos/shantanusharma/corenlp", "Date": "2017-04-19T21:31:56Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((z.jjtGetChildIndex()) == 0) { addViolation(data, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4373/buggy-version/pmd-apex.src.main.java.net.sourceforge.pmd.lang.apex.rule.security.ApexOpenRedirect.java", "BodyUseAPI": ["net.sourceforge.pmd.lang.apex.rule.security.ApexOpenRedirect.addViolation(java.lang.Object,net.sourceforge.pmd.lang.apex.ast.ASTVariableExpression)"], "Fixed commit": "c3c78f0ec1325b197b1139e3838b436ce8cb1468", "Url": "https://api.github.com/repos/sgorbaty/pmd", "Date": "2016-11-01T21:03:27Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDisplay()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1346/buggy-version/core.ui.src.main.java.imagej.ui.viewer.image.AbstractImageDisplayViewer.java", "BodyUseAPI": [], "Fixed commit": "3e54935fc52f44b92ba5e29da6a4e745c92e684a", "Url": "https://api.github.com/repos/imagej/imagej", "Date": "2013-01-15T18:52:39Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["in.fanzy.androidmvc.data.HttpDataHolder.getDataObject(java.lang.Class<T>,long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dataObject == null) { dataObject = dataClass.newInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9118/buggy-version/src.in.fanzy.androidmvc.data.HttpDataParser.java", "BodyUseAPI": [], "Fixed commit": "8a3c48aa8d672cd4daed9b8bad5f3654720d6797", "Url": "https://api.github.com/repos/gauthamns/android-mvc", "Date": "2014-01-29T03:09:39Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tf2dMode) { auxColor = transfer2dCalc(val, gradients.getGradient(coord)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2897/buggy-version/VolumeVisualization.src.volvis.RaycastRenderer.java", "BodyUseAPI": [], "Fixed commit": "aa25648cc44642953c6555316758dcb0c02118c2", "Url": "https://api.github.com/repos/fpk47/IN4086-Data-Visualisation-2", "Date": "2017-02-09T15:17:51Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.replaceNonStandardByX()) { eppic.ChainEvolContext.LOGGER.warn((\"Replacing 'O' by 'X' in UniProt reference \" + (query.getUniId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1927/buggy-version/src.main.java.eppic.ChainEvolContext.java", "BodyUseAPI": ["owl.core.sequence.UnirefEntry.getUniId()", "org.apache.commons.logging.Log.warn((\"Replacing 'O' by 'X' in UniProt reference \" + (query.getUniId())))"], "Fixed commit": "c584f1db61fb1c99baa3dac6a1ac532b151807cd", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2014-05-29T08:26:50Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((completedFile.exists()) == false) { return allTasks; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/653/buggy-version/src.forager.server.ListManager.java", "BodyUseAPI": [], "Fixed commit": "a000b0b811b7d2d1d0169a5989c41984c12bf380", "Url": "https://api.github.com/repos/malensek/forager", "Date": "2014-09-23T05:26:25Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.broad.igv.feature.MutationTrackLoader.isMutationAnnotationFile(locator)) { loadMutFile(locator, newTracks, genome); }else { loadMultipleAlignmentTrack(locator, newTracks, genome); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1291/buggy-version/src.org.broad.igv.track.TrackLoader.java", "BodyUseAPI": ["org.broad.igv.track.TrackLoader.loadMutFile(org.broad.igv.util.ResourceLocator,java.util.List<org.broad.igv.track.Track>,org.broad.igv.track.Genome)", "org.broad.igv.track.TrackLoader.loadMultipleAlignmentTrack(org.broad.igv.util.ResourceLocator,java.util.List<org.broad.igv.track.Track>,org.broad.igv.track.Genome)"], "Fixed commit": "c78023f1ff96bf111c79639a64d708608968da91", "Url": "https://api.github.com/repos/igvteam/igv", "Date": "2017-04-12T16:32:52Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curOC.equals(\"Excavate\")) { updateMP((-(excavateC))); spellInfo.append(\"Excavation yielded nothing\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7902/buggy-version/PlayerRes.java", "BodyUseAPI": [], "Fixed commit": "251b949e7fb9200c9397d199362aa0c1f1bd6abd", "Url": "https://api.github.com/repos/asheen09/minesweeper", "Date": "2013-06-30T10:21:15Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (main.isAuto()) { main.setPlayerA(\"Pegasus\"); insideStartGame = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6790/buggy-version/src.view.MainMenuState.java", "BodyUseAPI": ["view.MainController.setPlayerA(java.lang.String)"], "Fixed commit": "d53f6fa044be894de2f7a8f955cdf89cd8e70aab", "Url": "https://api.github.com/repos/spyl94/drasus", "Date": "2013-01-13T19:32:47Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(newText)) { modifyMenu(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5660/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c238706e12af515b654ccc5f925b9cb60c18c071", "Url": "https://api.github.com/repos/ashu10832/susi_android", "Date": "2016-10-10T07:03:47Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node instanceof com.github.javaparser.symbolsolver.javaparsermodel.CatchClause) { return new com.github.javaparser.symbolsolver.javaparsermodel.CatchClauseContext(((com.github.javaparser.symbolsolver.javaparsermodel.CatchClause) (node)), typeSolver); }else if ((node instanceof com.github.javaparser.symbolsolver.javaparsermodel.ObjectCreationExpr) && (((com.github.javaparser.symbolsolver.javaparsermodel.ObjectCreationExpr) (node)).getAnonymousClassBody().isPresent())) { return new com.github.javaparser.symbolsolver.javaparsermodel.AnonymousClassDeclarationContext(((com.github.javaparser.symbolsolver.javaparsermodel.ObjectCreationExpr) (node)), typeSolver); }else { if (node instanceof com.github.javaparser.symbolsolver.javaparsermodel.NameExpr) { if (((node.getParentNode().isPresent()) && ((node.getParentNode().get()) instanceof com.github.javaparser.symbolsolver.javaparsermodel.FieldAccessExpr)) && (node.getParentNode().get().getParentNode().isPresent())) { return com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(node.getParentNode().get().getParentNode().get(), typeSolver); } } return com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(getParentNode(node), typeSolver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6310/buggy-version/java-symbol-solver-core.src.main.java.com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.java", "BodyUseAPI": ["com.github.javaparser.ast.Node.getParentNode()", "com.github.javaparser.ast.Node.getParentNode()", "node.getParentNode().get()", "node.getParentNode().get()", "node.getParentNode().get().getParentNode().get()", "node.getParentNode().get().getParentNode().isPresent()", "node.getParentNode().get().getParentNode()", "com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(getParentNode(node),com.github.javaparser.symbolsolver.model.resolution.TypeSolver)", "node.getParentNode().isPresent()", "node.getParentNode().get()", "com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getParentNode(com.github.javaparser.ast.Node)", "com.github.javaparser.symbolsolver.javaparsermodel.JavaParserFactory.getContext(node.getParentNode().get().getParentNode().get(),com.github.javaparser.symbolsolver.model.resolution.TypeSolver)", "node.getParentNode().get().getParentNode()", "com.github.javaparser.ast.Node.getParentNode()", "com.github.javaparser.ast.Node.getParentNode()"], "Fixed commit": "73253d89b2b631e26818af8cd58f9167d5f96d71", "Url": "https://api.github.com/repos/staslev/javasymbolsolver", "Date": "2017-05-13T09:41:01Z"},
{"Line": "=>885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getCollectionRepository().getUserCollectionItemAssoc(collectionItem.getCollectionItemId(),user.getPartyUid())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (userCollectionItemAssoc != null) { if ((userCollectionItemAssoc.getStatus()) != null) { collectionItem.setStatus(userCollectionItemAssoc.getStatus().getValue()); } if ((userCollectionItemAssoc.getMinimumScore()) != null) { collectionItem.setMinimumScoreByUser(userCollectionItemAssoc.getMinimumScore()); } collectionItem.setAssignmentCompleted(userCollectionItemAssoc.getAssignmentCompleted()); collectionItem.setTimeStudying(userCollectionItemAssoc.getTimeStudying()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4470/buggy-version/api.src.main.java.org.ednovo.gooru.domain.service.classpage.ClasspageServiceImpl.java", "BodyUseAPI": ["org.ednovo.gooru.core.api.model.UserCollectionItemAssoc.getMinimumScore()", "org.ednovo.gooru.core.api.model.UserCollectionItemAssoc.getStatus()", "org.ednovo.gooru.core.api.model.UserCollectionItemAssoc.getAssignmentCompleted()", "org.ednovo.gooru.core.api.model.CollectionItem.setMinimumScoreByUser(userCollectionItemAssoc.getMinimumScore())", "org.ednovo.gooru.core.api.model.CollectionItem.setStatus(userCollectionItemAssoc.getStatus().getValue())", "org.ednovo.gooru.core.api.model.UserCollectionItemAssoc.getTimeStudying()", "org.ednovo.gooru.core.api.model.UserCollectionItemAssoc.getMinimumScore()", "userCollectionItemAssoc.getStatus().getValue()", "org.ednovo.gooru.core.api.model.CollectionItem.setTimeStudying(userCollectionItemAssoc.getTimeStudying())", "org.ednovo.gooru.core.api.model.UserCollectionItemAssoc.getStatus()", "org.ednovo.gooru.core.api.model.CollectionItem.setAssignmentCompleted(userCollectionItemAssoc.getAssignmentCompleted())"], "Fixed commit": "85c3422ea76e5d9fd2086dd72a6f81fca2d86677", "Url": "https://api.github.com/repos/cyrilraja/Gooru-Core-API", "Date": "2014-09-19T08:37:20Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (peopleContract != null) { if (org.apache.commons.lang3.StringUtils.isEmpty(peopleContract.getSchoolDate())) { peopleContract.setSchoolDate(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7447/buggy-version/src.main.java.com.wangzhixuan.service.impl.PeopleContractServiceImpl.java", "BodyUseAPI": ["com.wangzhixuan.model.PeopleContract.setSchoolDate(<nulltype>)", "org.apache.commons.lang3.StringUtils.isEmpty(peopleContract.getSchoolDate())", "com.wangzhixuan.model.PeopleContract.getSchoolDate()"], "Fixed commit": "0b2f955eec6b77619025dba1164bfb15de2a7c61", "Url": "https://api.github.com/repos/puppylsy/spring-shiro-training", "Date": "2016-11-30T10:46:55Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (peopleTemp != null) { if (org.apache.commons.lang3.StringUtils.isEmpty(peopleTemp.getSchoolDate())) { peopleTemp.setSchoolDate(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7447/buggy-version/src.main.java.com.wangzhixuan.service.impl.PeopleTempServiceImpl.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.isEmpty(peopleTemp.getSchoolDate())", "com.wangzhixuan.model.PeopleTemp.setSchoolDate(<nulltype>)", "com.wangzhixuan.model.PeopleTemp.getSchoolDate()"], "Fixed commit": "0b2f955eec6b77619025dba1164bfb15de2a7c61", "Url": "https://api.github.com/repos/puppylsy/spring-shiro-training", "Date": "2016-11-30T10:46:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCurrentSessionAlive()) { onlineUsers = api.getOnlineUsers(currentSession); }else { onlineUsers.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5396/buggy-version/app.src.main.java.alex.imhere.activity.model.ImhereModel.java", "BodyUseAPI": [], "Fixed commit": "8921ef6fad34f9c76af101b507dd72ba7bb435cf", "Url": "https://api.github.com/repos/Nexen23/I_am_here", "Date": "2015-08-17T10:02:45Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cashierClosuresController.getLastCashierClosure()) == null) { throw new api.exceptions.NotExistsCashierClosuresException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4239/buggy-version/src.main.java.api.CashierClosuresResource.java", "BodyUseAPI": [], "Fixed commit": "e42a26dff2ebf4883780182f86e6d7f5c75526f9", "Url": "https://api.github.com/repos/miw-upm/SPRING.tpv", "Date": "2017-05-15T11:36:49Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(killSquadFormed)) && ((storedKillers.size()) == 4)) { int formedCount = 0; java.util.ArrayList<outpost.sim.Pair> toBePlacedRes = new java.util.ArrayList<outpost.sim.Pair>(res); for (outpost.sim.Pair position : toBePlacedRes) for (int i = 0; i < (ourOutpostLst.size()); i++) if (((ourOutpostLst.get(i).x) == (position.x)) && ((ourOutpostLst.get(i).y) == (position.y))) formedCount++; if (formedCount == 4) killSquadFormed = true; java.lang.System.out.println((\"killSquadFormed = \" + (killSquadFormed))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3838/buggy-version/Outpost.src.outpost.fifthDeliverable.Player.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "80b11a8b0c61596c9707fb0dc202351c88f3b767", "Url": "https://api.github.com/repos/edwardfxc/project4", "Date": "2014-12-03T06:57:45Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rental.g3.SimpleActionGenerator.findPickups(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((game.cars[picks.get(i).cid].inuse) == true) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3398/buggy-version/Deliverable_2.src.rental.g3.SimpleActionGenerator.java", "BodyUseAPI": [], "Fixed commit": "9226aa94f47ece5c22b6ea62bf40eddd2ea76c2b", "Url": "https://api.github.com/repos/harshilgandhi/PPS-Group-3-One-Way-Rental", "Date": "2012-09-17T15:59:14Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.troja.eve.crest.CrestDataProcessor.downloadAndProcessContainerData(net.troja.eve.crest.processors.CrestApiProcessor<T>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (result != null) { config.getConsumer().accept(result.getEntries()); updateDate = result.getTimestamp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4764/buggy-version/src.main.java.net.troja.eve.crest.CrestDataHandler.java", "BodyUseAPI": ["net.troja.eve.crest.CrestContainer<T>.getEntries()", "config.getConsumer().accept(result.getEntries())", "net.troja.eve.crest.CrestContainer<T>.getTimestamp()"], "Fixed commit": "a05b22e1ec7af6efcd05e57feb42f54a25261d4b", "Url": "https://api.github.com/repos/burberius/eve-crest", "Date": "2015-08-18T19:45:22Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fenixedu.academic.domain.EnrolmentEvaluation.getWhenDateTime()", "org.fenixedu.academic.domain.EnrolmentEvaluation.getWhenDateTime()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((o1When != null) && (o2When != null)) { return o1When.compareTo(o2When); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6168/buggy-version/src.main.java.org.fenixedu.academic.domain.EnrolmentEvaluation.java", "BodyUseAPI": ["org.joda.time.DateTime.compareTo(org.joda.time.DateTime)"], "Fixed commit": "366b435ded967a35fc23d11535da52263d4bc7ca", "Url": "https://api.github.com/repos/qub-it/fenixedu-academic", "Date": "2017-03-01T19:00:24Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((talon) != null) return talon.getPosition();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1541/buggy-version/RoboRIO.src.edu.nr.robotics.subsystems.turret.Turret.java", "BodyUseAPI": [], "Fixed commit": "63c9e59199c4312230787354b5f0c2521e3f5e52", "Url": "https://api.github.com/repos/Nashoba-Robotics/Nashoba-Robotics2017", "Date": "2017-02-06T23:27:33Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((talon) != null) return (talon.getControlMode()) == (com.ctre.CANTalon.TalonControlMode.MotionMagic);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1541/buggy-version/RoboRIO.src.edu.nr.robotics.subsystems.turret.Turret.java", "BodyUseAPI": [], "Fixed commit": "63c9e59199c4312230787354b5f0c2521e3f5e52", "Url": "https://api.github.com/repos/Nashoba-Robotics/Nashoba-Robotics2017", "Date": "2017-02-06T23:27:33Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.nr.robotics.subsystems.shooter.Shooter.singleton) == null) edu.nr.robotics.subsystems.shooter.Shooter.init();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1541/buggy-version/RoboRIO.src.edu.nr.robotics.subsystems.shooter.Shooter.java", "BodyUseAPI": [], "Fixed commit": "63c9e59199c4312230787354b5f0c2521e3f5e52", "Url": "https://api.github.com/repos/Nashoba-Robotics/Nashoba-Robotics2017", "Date": "2017-02-06T23:27:33Z"},
{"Line": "=>560", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((startsWithIs && ((fieldClass == (boolean.class)) || (fieldClass == (java.lang.Boolean.class)))) && (fieldName.equalsIgnoreCase(key.substring(2)))) { fieldDeserializer = fieldDeser; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6285/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "ca4c14460d2c919fddb0308e7ca62dd2e0b5b1f2", "Url": "https://api.github.com/repos/tenwx/fastjson", "Date": "2016-04-12T16:25:38Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.pikater.web.config.ServerConfigurationInterface.avoidUsingDBForNow()) { return true; }else { return org.pikater.web.vaadin.ManageAuth.isUserAuthenticated(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3590/buggy-version/src.org.pikater.web.vaadin.gui.server.ui_default.indexpage.content.ContentProvider.java", "BodyUseAPI": [], "Fixed commit": "9028cbda5b01ceb6ef5c6ded77638a89e7880163", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-06-07T20:49:39Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { checkPermissions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8641/buggy-version/src.main.java.menion.android.whereyougo.gui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "748a37faef33d78bf31c75852801a056b5e38a70", "Url": "https://api.github.com/repos/biylda/WhereYouGo", "Date": "2017-03-22T21:57:13Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(this.currentDirectory.exists())) || (!(this.currentDirectory.canRead()))) { this.currentDirectory = android.os.Environment.getExternalStorageDirectory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8641/buggy-version/src.main.java.menion.android.whereyougo.maps.mapsforge.filepicker.FilePicker.java", "BodyUseAPI": [], "Fixed commit": "748a37faef33d78bf31c75852801a056b5e38a70", "Url": "https://api.github.com/repos/biylda/WhereYouGo", "Date": "2017-03-22T21:57:13Z"},
{"Line": "=>1090", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<T, com.notlob.jgrid.model.Row<T>>.get(T)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (childRow != null) { children.add(childRow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5255/buggy-version/com.notlob.jgrid.src.com.notlob.jgrid.model.GridModel.java", "BodyUseAPI": ["java.util.List<com.notlob.jgrid.model.Row<T>>.add(com.notlob.jgrid.model.Row<T>)"], "Fixed commit": "f3d1c70d8d713a8fef09a8d4c527a03930ac85b1", "Url": "https://api.github.com/repos/GrandmasterTash/jGrid", "Date": "2015-10-28T10:33:14Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umass.ckc.wo.smgr.SessionManager.getStudentState()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (state.isInChallengeMode()) r = pedMod.processChallengeModeNextProblemRequest(npe); else if (state.isInReviewMode()) r = pedMod.processReviewModeNextProblemRequest(npe); else r = pedMod.processNextProblemRequest(npe);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/284/buggy-version/woServer.src.edu.umass.ckc.wo.handler.MPPTutorHandler.java", "BodyUseAPI": ["edu.umass.ckc.wo.state.StudentState.isInReviewMode()"], "Fixed commit": "befd98b2b502ade5cf260f37e9c384f46f7d5488", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2017-03-30T16:19:36Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logisticspipes.proxy.MainProxy.isClient()) { configFile = new java.io.File(net.minecraft.client.Minecraft.getMinecraftDir(), \"config/LogisticsPipes.cfg\"); }else if (logisticspipes.proxy.MainProxy.isServer()) { configFile = net.minecraft.server.MinecraftServer.getServer().getFile(\"config/LogisticsPipes.cfg\"); }else { net.minecraft.src.ModLoader.getLogger().severe(\"No server, no client? Where am I running?\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2553/buggy-version/common.logisticspipes.config.Configs.java", "BodyUseAPI": [], "Fixed commit": "f7461cff4512ea89c773b8ff7557c9abc6486926", "Url": "https://api.github.com/repos/RS485/LogisticsPipes", "Date": "2012-09-11T19:10:10Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validToken == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4473/buggy-version/src.main.java.com.github.jucovschi.ProtoCometD.SessionDataManager.java", "BodyUseAPI": [], "Fixed commit": "9653b167d131b74348a68f69ce8a2cc180a030c3", "Url": "https://api.github.com/repos/jucovschi/ProtoCometD", "Date": "2012-08-22T16:42:40Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskname.equalsIgnoreCase(\"StartVanillaServer\")) { configuration.appendChild(VMargs); configuration.appendChild(programParameters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8327/buggy-version/src.main.java.com.qixalite.spongestart.tasks.GenerateIntelijTask.java", "BodyUseAPI": [], "Fixed commit": "58805d754295876f1bf2f3fba30651c5695adbb7", "Url": "https://api.github.com/repos/ImMorpheus/SpongeStart", "Date": "2017-09-26T21:43:51Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskname.equalsIgnoreCase(\"StartVanillaServer\")) { VMargs.setAttribute(\"name\", \"VM_PARAMETERS\"); VMargs.setAttribute(\"value\", \"-classpath $PROJECT_DIR$/run/vanilla/server.jar:$PROJECT_DIR$/build/classes/java/main\"); programParameters.setAttribute(\"name\", \"PROGRAM_PARAMETERS\"); programParameters.setAttribute(\"value\", \"--scan-classpath\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8327/buggy-version/src.main.java.com.qixalite.spongestart.tasks.GenerateIntelijTask.java", "BodyUseAPI": [], "Fixed commit": "58805d754295876f1bf2f3fba30651c5695adbb7", "Url": "https://api.github.com/repos/ImMorpheus/SpongeStart", "Date": "2017-09-26T21:43:51Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((account.getUserInfo()) == null) { com.echarm.apigateway.accountsystem.model.DoctorInfo info = new com.echarm.apigateway.accountsystem.model.DoctorInfo(); info.setCategory(com.echarm.apigateway.accountsystem.util.Category.valueOf(category)); account.setUserInfo(info); }else { account.getUserInfo().setCategory(com.echarm.apigateway.accountsystem.util.Category.valueOf(category)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3519/buggy-version/src.main.java.com.echarm.apigateway.accountsystem.controller.PartiallyUpdateAccountController.java", "BodyUseAPI": ["com.echarm.apigateway.accountsystem.model.DoctorAccount.setUserInfo(com.echarm.apigateway.accountsystem.model.DoctorInfo)", "com.echarm.apigateway.accountsystem.model.DoctorAccount.getUserInfo()", "account.getUserInfo().setCategory(com.echarm.apigateway.accountsystem.util.Category.valueOf(category))"], "Fixed commit": "742157fef40ddd80965337731259a475ff8a28dd", "Url": "https://api.github.com/repos/sevenlol/APIGatewayService", "Date": "2015-10-22T14:32:03Z"},
{"Line": "=>1185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scratchProperty.getDependencyLevel()) < 0) { throw new org.snrg_nyc.model.EditorException((\"Tried to add property without \" + \"setting its dependency level\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3901/buggy-version/src.org.snrg_nyc.model.PropertiesEditor_Impl.java", "BodyUseAPI": [], "Fixed commit": "6a47d6d82e533ef247f96db619269b6185c02f23", "Url": "https://api.github.com/repos/LeeHastings/SNRG-Frontend", "Date": "2016-08-06T21:22:30Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.DBCollection.findOne(com.mongodb.BasicDBObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (obj != null) { obj.put(\"value\", value); connect().update(store, obj); }else { store.append(\"value\", value); connect().insert(store); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7718/buggy-version/src.main.java.com.brotherlogic.configstore.mongo.MongoConfig.java", "BodyUseAPI": ["com.mongodb.DBCollection.update(com.mongodb.BasicDBObject,com.mongodb.DBObject)", "com.mongodb.DBObject.put(java.lang.String,byte[])"], "Fixed commit": "43f8d63789a11ba5927c6936bffb6c9b3fb91ef6", "Url": "https://api.github.com/repos/BrotherLogic/ConfigStore", "Date": "2012-11-17T10:30:38Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GetSelectedSongs().size()) > 0) { new ShoppingCart(GetSelectedSongs()); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Error: At least one song must be selected.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4750/buggy-version/src.main.java.MusicStore.java", "BodyUseAPI": [], "Fixed commit": "6964cebd612158fa9c3e1661844d4de43791daee", "Url": "https://api.github.com/repos/Sw1fty/ScrumATeam", "Date": "2016-07-01T10:36:56Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(cronJob.getTasks(),new com.google.gson.reflect.TypeToken<java.util.List<com.dts.core.TaskConf>>() {}.getType())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((tasks == null) || ((tasks.size()) != 1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9230/buggy-version/admin.src.main.java.com.dts.admin.service.ClientEndpoint.java", "BodyUseAPI": [], "Fixed commit": "5f3052a2df28d5159e47d15b85d56ebeb9b4d56a", "Url": "https://api.github.com/repos/zx150842/task-scheduler", "Date": "2017-02-08T09:15:29Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImpl) != null) { mImpl.setBackgroundDrawable(background, mBackgroundTint, mBackgroundTintMode, mRippleColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7207/buggy-version/design.src.android.support.design.widget.FloatingActionButton.java", "BodyUseAPI": [], "Fixed commit": "29611577eb234da4c8c73bcc0c4357978ff25bb8", "Url": "https://api.github.com/repos/aosp-mirror/platform_frameworks_support", "Date": "2015-04-17T10:02:42Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endTime) == 0) { video.setEndTime(java.lang.Integer.MAX_VALUE); }else { video.setEndTime(endTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6198/buggy-version/app.src.main.java.fi.aalto.legroup.achso.entities.OptimizedVideo.java", "BodyUseAPI": [], "Fixed commit": "0c31a4532fe0e728386c17d5ed92fdc4fe7bafbf", "Url": "https://api.github.com/repos/learning-layers/AchSo", "Date": "2016-09-25T16:08:47Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (contactExtra != null) { trigger = true; createUri = android.net.Uri.fromParts(\"tel\", contactExtra, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5905/buggy-version/core.java.android.widget.QuickContactBadge.java", "BodyUseAPI": ["android.net.Uri.fromParts(java.lang.String,java.lang.String,<nulltype>)"], "Fixed commit": "383a0141cd3249fe672d654c3fa0628219b719be", "Url": "https://api.github.com/repos/CRXTeam/android_frameworks_base", "Date": "2014-07-28T18:58:48Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.home.dr.Word.getFullText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i >= 1) && ((((text.charAt((i - 1))) == ',') || ((text.charAt((i - 1))) == ';')) || ((text.charAt(i)) == '.'))) { word.hasComma = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2415/buggy-version/src.main.java.com.home.dr.WordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "bb5747fce927fb2c0c6b160fac637e3b988dc949", "Url": "https://api.github.com/repos/dysform/digres", "Date": "2016-05-16T00:14:09Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(url)) { android.widget.Toast.makeText(getContext(), \"No url\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7703/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayerStandard.java", "BodyUseAPI": [], "Fixed commit": "4531fa5fc4d0395b53c2e11f1a6af833b4c514dc", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2016-05-04T07:43:42Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (active) java.lang.System.out.println((\"Timer : \" + (engine.GlobalData.serverTick())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7757/buggy-version/src.entity.objectEntity.logicGateObjectEntity.TimerLogicGateObjectEntity.java", "BodyUseAPI": [], "Fixed commit": "f312b1dbddf6f03fd6b1006070e1677307ee895d", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2015-12-13T12:54:01Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Sets.newHashSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((hosts.size()) > 1) { exchangeSshKeys(userKeys); }else if (!(io.subutai.common.util.CollectionUtil.isCollectionEmpty(userKeys))) { appendSshKeys(userKeys); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/432/buggy-version/management.server.core.environment-manager.environment-manager-impl.src.main.java.io.subutai.core.environment.impl.workflow.creation.steps.RegisterSshStep.java", "BodyUseAPI": [], "Fixed commit": "6698914202868401987fcfb066dd35d5db0d961f", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-04-10T15:22:48Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUsingSides()) curTooltip.add(\"Accessing sides:\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3575/buggy-version/src.pneumaticCraft.common.progwidgets.ProgWidgetInventoryBase.java", "BodyUseAPI": [], "Fixed commit": "0ef13fce1c1d6b33b662fbcac7dca2b50703836a", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-08-20T10:26:15Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (carts.containsKey(product)) { int tmpQty = carts.get(product).intValue(); carts.remove(product); carts.put(product, (tmpQty + qty)); }else { carts.put(product, java.lang.Integer.valueOf(qty)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3722/buggy-version/shoppingcart.src.main.java.com.adthena.model.ShoppingCart.java", "BodyUseAPI": ["java.util.HashMap<com.adthena.model.inferces.iProduct, java.lang.Integer>.put(com.adthena.model.inferces.iProduct,int)", "java.util.HashMap<com.adthena.model.inferces.iProduct, java.lang.Integer>.put(com.adthena.model.inferces.iProduct,java.lang.Integer)", "carts.get(product).intValue()", "java.util.HashMap<com.adthena.model.inferces.iProduct, java.lang.Integer>.get(com.adthena.model.inferces.iProduct)", "java.util.HashMap<com.adthena.model.inferces.iProduct, java.lang.Integer>.remove(com.adthena.model.inferces.iProduct)"], "Fixed commit": "90d4de4c7f05431757ae3f971835a8fa84d32e40", "Url": "https://api.github.com/repos/edwarts/shopingcart", "Date": "2015-02-09T06:28:31Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.slipcor.pvparena.arena.ArenaPlayer.parsePlayer(player.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ap.getStatus().equals(Status.READY)) || (ap.getStatus().equals(Status.LOUNGE))) { event.setCancelled(true); arena.msg(player, net.slipcor.pvparena.core.Language.parse(MSG.NOTICE_NO_DROP_ITEM)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/717/buggy-version/src.net.slipcor.pvparena.listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "2d6fa152b835bbe5c163bb399cbc441bf52762ad", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-10-13T12:41:40Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jgit.lib.Repository.getBranch()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (((url != null) && (branch != null)) && (sha != null)) { return java.util.Optional.of(new com.atomist.rug.git.RepositoryDetails(url, branch, sha, date)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7833/buggy-version/src.main.java.com.atomist.rug.git.RepositoryDetailsProvider.java", "BodyUseAPI": ["java.util.Optional.of(com.atomist.rug.git.RepositoryDetails)"], "Fixed commit": "d3df4313f5a092fbb0753989452a9386cf5829a5", "Url": "https://api.github.com/repos/atomist-attic/rug-resolver", "Date": "2016-12-09T14:02:39Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((match.getIntent()) != null) jmatch.put(\"Intent\", match.getIntent().getIntent());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2424/buggy-version/jo.alexa.sim.src.jo.alexa.sim.ui.logic.ToJSONLogic.java", "BodyUseAPI": ["jo.alexa.sim.data.MatchBean.getIntent()", "org.json.simple.JSONObject.put(java.lang.String,match.getIntent().getIntent())", "match.getIntent().getIntent()"], "Fixed commit": "0bd0c7a4f56cc46409de5e6258d737190b56236b", "Url": "https://api.github.com/repos/jjaquinta/EchoSim", "Date": "2015-06-25T13:21:16Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.io.FileNotFoundException) { return \"LIST_NOT_FOUND\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8290/buggy-version/mobile.src.main.java.com.liamfruzyna.android.wishlister.data.IO.java", "BodyUseAPI": [], "Fixed commit": "4d3daecf70047af9f0b141403f5b837dcd657338", "Url": "https://api.github.com/repos/mail929/Lister", "Date": "2017-04-18T23:51:43Z"},
{"Line": "=>861", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arePointsAdjacent(playerx, playery, mob.x, mob.y, false)) { health -= (mob.getAttackPower()) - (defense); printMessage(mob.getBattleMessage()); }else { java.util.List<com.fourisland.frigidearth.Direction> path = findPath(mob.getPosition(), new java.awt.Point(playerx, playery)); if (path != null) { java.awt.Point to = path.get(0).to(mob.getPosition()); boolean found = false; for (com.fourisland.frigidearth.Mob m : mobs) { if (m.getPosition().equals(to)) { found = true; break; } } if (!found) { mob.moveInDirection(path.get(0)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1569/buggy-version/src.com.fourisland.frigidearth.MapViewGameState.java", "BodyUseAPI": ["com.fourisland.frigidearth.MapViewGameState.findPath(mob.getPosition(),java.awt.Point)", "com.fourisland.frigidearth.Mob.getPosition()", "com.fourisland.frigidearth.MapViewGameState.printMessage(mob.getBattleMessage())", "com.fourisland.frigidearth.Mob.getAttackPower()", "com.fourisland.frigidearth.Mob.getPosition()", "path.get(0).to(mob.getPosition())", "com.fourisland.frigidearth.Mob.getBattleMessage()", "com.fourisland.frigidearth.Mob.moveInDirection(path.get(0))"], "Fixed commit": "4c1ce3df77273d198c6d8f42fd0e22b55ec9f3cd", "Url": "https://api.github.com/repos/hatkirby/frigidearth", "Date": "2012-06-04T15:34:23Z"},
{"Line": "=>882", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { mob.moveInDirection(path.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1569/buggy-version/src.com.fourisland.frigidearth.MapViewGameState.java", "BodyUseAPI": [], "Fixed commit": "4c1ce3df77273d198c6d8f42fd0e22b55ec9f3cd", "Url": "https://api.github.com/repos/hatkirby/frigidearth", "Date": "2012-06-04T15:34:23Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["location.clone().add(blockRep.getX(), blockRep.getY(), blockRep.getZ()).getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((block.getType().equals(Material.SAND)) || (block.getType().equals(Material.GRAVEL))) { addTempAirBlock(block); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4305/buggy-version/src.com.projectkorra.projectkorra.earthbending.EarthSmash.java", "BodyUseAPI": ["com.projectkorra.projectkorra.earthbending.EarthSmash.addTempAirBlock(org.bukkit.block.Block)"], "Fixed commit": "4cbd49519c9280bccdabde8cb3a06dfb7e3ce2bc", "Url": "https://api.github.com/repos/StrangeOne101/ProjectKorra", "Date": "2016-02-08T15:18:16Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lobobrowser.html.svgimpl.SVGSVGElementImpl.getAttribute(org.lobobrowser.html.svgimpl.D)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (d != null) { d.replaceAll(\"\\\\r|\\\\n\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4668/buggy-version/HTML_Renderer.src.main.java.org.lobobrowser.html.svgimpl.SVGSVGElementImpl.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "a53fbc7724809791d917fbc7e8b47718df27a18f", "Url": "https://api.github.com/repos/oswetto/LoboEvolution", "Date": "2017-04-28T23:14:54Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Build.MODEL.toString().contains(\"Nexus 5X\")) { mr.setOrientationHint(180); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9183/buggy-version/app.src.main.java.com.tsarouchi.betaapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f796e2f64e0a5ae6423f0edbb19ffba8947744b5", "Url": "https://api.github.com/repos/emmanouil/Spatiotemporal-Navigation-Recorder", "Date": "2016-10-28T15:36:19Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getAcceptDate()) == null) setAcceptDate(ilarkesto.core.time.Date.today());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3762/buggy-version/src.main.java.scrum.client.issues.Issue.java", "BodyUseAPI": [], "Fixed commit": "fdd73c4bbe617f15ef9592ed2ea8429dcc4621a1", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2012-04-18T22:22:12Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getAcceptDate()) == null) setAcceptDate(ilarkesto.core.time.Date.today());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3762/buggy-version/src.main.java.scrum.client.issues.Issue.java", "BodyUseAPI": [], "Fixed commit": "fdd73c4bbe617f15ef9592ed2ea8429dcc4621a1", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2012-04-18T22:22:12Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isValidSymbol(input.toString())) { mServiceIntent.putExtra(\"tag\", \"add\"); mServiceIntent.putExtra(\"symbol\", input.toString()); startService(mServiceIntent); }else { android.widget.Toast.makeText(getApplicationContext(), R.string.invalid_symbol_toast, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8209/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.ui.MyStocksActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,java.lang.String)", "java.lang.CharSequence.toString()"], "Fixed commit": "a1943cb2e9b0681e3fefdb2dd9988be8f5427c8c", "Url": "https://api.github.com/repos/xdeng9/StockHawk-master", "Date": "2016-09-21T05:29:03Z"},
{"Line": "=>9230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((utils.rac) && (inOldEnv)) && (utils.isExprLocal(that.sym.flags()))) { java.lang.String message = \"quantifier variable inside a \\\\old or \\\\pre expression: \" + (that.toString()); throw new org.jmlspecs.openjml.Utils.JmlNotImplementedException(that, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3237/buggy-version/OpenJML.src.org.jmlspecs.openjml.esc.JmlAssertionAdder.java", "BodyUseAPI": ["com.sun.tools.javac.tree.JCTree.JCIdent.toString()"], "Fixed commit": "dd5053965a8a2407d8a0bcd0e2456cf13ff1bce4", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2017-03-20T03:39:52Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mFoods.size()) < 1) { for (int i = 0; i < 50; i++) { edu.harding.android.eatsmart.Food f = new edu.harding.android.eatsmart.Food(); f.setTitle((\"Food #\" + i)); f.setQuantity(0); f.setCalories((i + 100)); mFoods.add(f); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3521/buggy-version/EatSmart.src.edu.harding.android.eatsmart.FoodLab.java", "BodyUseAPI": [], "Fixed commit": "ae0852604a510bea336f53443c19b374e716ccef", "Url": "https://api.github.com/repos/cceren/Comp475-EatSmart", "Date": "2014-02-27T00:54:58Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLocation) != null) { com.parse.ParseUser currentUser = com.parse.ParseUser.getCurrentUser(); com.parse.ParseGeoPoint currentLocationGeoPoint = new com.parse.ParseGeoPoint(currentLocation.getLatitude(), currentLocation.getLongitude()); query.whereWithinMiles(\"location\", currentLocationGeoPoint, currentUser.getDouble(\"maxDistance\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6539/buggy-version/FindFreeStuff.app.src.main.java.edu.hmc.sp15.cs121.findfreestuff.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "410eb927364bbc17ffecebea6fae30e84b21c123", "Url": "https://api.github.com/repos/sagarbatchu/findfreestuff", "Date": "2015-03-25T02:04:31Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doCoreference) { final org.lambda3.graphene.core.coreference.model.CoreferenceContent cc = doCoreference(text); text = cc.getSubstitutedText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5841/buggy-version/graphene-core.src.main.java.org.lambda3.graphene.core.Graphene.java", "BodyUseAPI": [], "Fixed commit": "49ad8e7047b4b191ff332a1599e9576a04531007", "Url": "https://api.github.com/repos/Lambda-3/Graphene", "Date": "2017-05-13T14:22:45Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openstaxcollege.android.utils.OSCUtil.getTitle(content.getBookTitle(),android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (bookTitle != null) { content.setBookUrl(bookTitle.getBookUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7025/buggy-version/app.src.main.java.org.openstaxcollege.android.adapters.BookmarkRecyclerViewAdapter.java", "BodyUseAPI": ["org.openstaxcollege.android.beans.Content.getBookUrl()", "org.openstaxcollege.android.beans.Content.setBookUrl(bookTitle.getBookUrl())"], "Fixed commit": "446c79ceed4b1cb0b69a11a3e35fb8e80da7386d", "Url": "https://api.github.com/repos/Connexions/OSCAndroid", "Date": "2017-07-25T13:00:31Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.marcohc.toasteroid.helper.Toasteroid.toast) != null) { com.marcohc.toasteroid.helper.Toasteroid.toast.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4669/buggy-version/library.src.main.java.com.marcohc.toasteroid.helper.Toasteroid.java", "BodyUseAPI": [], "Fixed commit": "5065843792c317705d68717384e0cc607febb5ef", "Url": "https://api.github.com/repos/marcohc/Toasteroid", "Date": "2015-10-01T13:05:27Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chatUser.getUserId().equals(userDisplay)) { return chatUser; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5610/buggy-version/src.main.java.skype.UsersSortedByUserId.java", "BodyUseAPI": [], "Fixed commit": "1a78af93cac8bf6349bb567b3a60eaeb3642f5c0", "Url": "https://api.github.com/repos/taksan/Skype2Gmail", "Date": "2011-03-23T23:27:13Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<curtis.toaster.Blocks.Block>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (block instanceof curtis.toaster.Blocks.BlockSetValue) { curtis.toaster.Blocks.BlockSetValue blockSetValue = ((curtis.toaster.Blocks.BlockSetValue) (block)); int num = occurrences.get(blockSetValue.getVariable()); occurrences.put(blockSetValue.getVariable(), (num + 1)); toRemove.remove(blockSetValue); }else if ((block instanceof curtis.toaster.Blocks.BlockIfStatement) || (block instanceof curtis.toaster.Blocks.BlockForLoop)) { block.trimDown(); if ((block.getChildren().size()) == 0) { this.children.remove(block); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8042/buggy-version/src.curtis.toaster.Blocks.Block.java", "BodyUseAPI": ["java.util.ArrayList<curtis.toaster.Blocks.Block>.size()", "curtis.toaster.Blocks.Block.trimDown()", "curtis.toaster.Blocks.Block.getChildren()", "java.util.ArrayList<curtis.toaster.Blocks.Block>.remove(curtis.toaster.Blocks.Block)"], "Fixed commit": "2e4c5e1eb7dde01cb0c1d434aacc0925382c7fd5", "Url": "https://api.github.com/repos/cwlowder/CodeDesktopGenerator", "Date": "2017-04-28T02:20:46Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tile.getOwner()) != \"\") { if (java.util.UUID.fromString(tile.getOwner()).equals(player.getUniqueID())) { kMax++; if ((tile.getField(2)) == 1) { kMax = kMax + 2; if (player.isCreative()) kMax++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/365/buggy-version/src.main.java.gunn.modcurrency.mod.client.gui.GuiExchanger.java", "BodyUseAPI": ["java.util.UUID.fromString(tile.getOwner())", "gunn.modcurrency.mod.tileentity.TileExchanger.getOwner()", "java.util.UUID.equals(player.getUniqueID())", "gunn.modcurrency.mod.tileentity.TileExchanger.getField(int)"], "Fixed commit": "ce354cd10204cd5a59c70e4d176a3404c0e90608", "Url": "https://api.github.com/repos/BeardlessBrady/Currency-Mod", "Date": "2017-06-11T07:15:39Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jaggeryjs.hostobjects.file.JavaScriptFileImpl.getURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parentDir.endsWith(\"/\"))) { parentDir += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3965/buggy-version/components.hostobjects.org.jaggeryjs.hostobjects.file.src.main.java.org.jaggeryjs.hostobjects.file.JavaScriptFileImpl.java", "BodyUseAPI": [], "Fixed commit": "7d86eae59ca747226943674b0564f8955a5146e3", "Url": "https://api.github.com/repos/wso2/jaggery", "Date": "2015-06-25T15:23:53Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jaggeryjs.jaggery.core.plugins.WebAppFile.getURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(parentDir.endsWith(\"/\"))) { parentDir += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3965/buggy-version/components.jaggery-core.org.jaggeryjs.jaggery.core.src.main.java.org.jaggeryjs.jaggery.core.plugins.WebAppFile.java", "BodyUseAPI": [], "Fixed commit": "7d86eae59ca747226943674b0564f8955a5146e3", "Url": "https://api.github.com/repos/wso2/jaggery", "Date": "2015-06-25T15:23:53Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bookApiList.isEmpty()) { mBookList.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1343/buggy-version/app.src.main.java.com.quartzodev.adapters.BookGridAdapter.java", "BodyUseAPI": [], "Fixed commit": "2bbacbe030aae344b678f98f1810abdcaea8c620", "Url": "https://api.github.com/repos/victoraldir/BuddyBook", "Date": "2017-10-27T02:33:37Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buckets[getIndex(oEntry.getKey())]) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4581/buggy-version/src.main.java.Map.HashMap.java", "BodyUseAPI": [], "Fixed commit": "b8e33703a58725b8b8d91bea622b5c5a9ff957d4", "Url": "https://api.github.com/repos/andreyoganesyan/MavenMap", "Date": "2017-03-02T18:37:49Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2842/buggy-version/Visualisierung.VesDroid.src.de.gaffa.vescom.vesdroid.bluetoothmanagement.MessageHandler.java", "BodyUseAPI": [], "Fixed commit": "2f19127515d6df888ac892d1965f86921cec4166", "Url": "https://api.github.com/repos/gaffa/VeCom", "Date": "2012-12-02T12:09:45Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2842/buggy-version/Visualisierung.VesDroid.src.de.gaffa.vescom.vesdroid.bluetoothmanagement.MessageHandler.java", "BodyUseAPI": [], "Fixed commit": "2f19127515d6df888ac892d1965f86921cec4166", "Url": "https://api.github.com/repos/gaffa/VeCom", "Date": "2012-12-02T12:09:45Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.netbeans.libs.git.GitRemoteConfig>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == config) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4209/buggy-version/src.main.java.de.markiewb.netbeans.plugin.git.openinexternalviewer.GitUtils.java", "BodyUseAPI": [], "Fixed commit": "ab8c847a0ea994ea872dcb5d4cc2d7933c7874a5", "Url": "https://api.github.com/repos/markiewb/nb-git-open-in-external-repoviewer", "Date": "2014-05-20T19:02:19Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.netbeans.libs.git.GitRemoteConfig.getUris()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == uris) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4209/buggy-version/src.main.java.de.markiewb.netbeans.plugin.git.openinexternalviewer.GitUtils.java", "BodyUseAPI": [], "Fixed commit": "ab8c847a0ea994ea872dcb5d4cc2d7933c7874a5", "Url": "https://api.github.com/repos/markiewb/nb-git-open-in-external-repoviewer", "Date": "2014-05-20T19:02:19Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.netbeans.libs.git.GitClient.getRemotes(org.netbeans.libs.git.progress.ProgressMonitor)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == remotes) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4209/buggy-version/src.main.java.de.markiewb.netbeans.plugin.git.openinexternalviewer.GitUtils.java", "BodyUseAPI": [], "Fixed commit": "ab8c847a0ea994ea872dcb5d4cc2d7933c7874a5", "Url": "https://api.github.com/repos/markiewb/nb-git-open-in-external-repoviewer", "Date": "2014-05-20T19:02:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.netbeans.libs.git.GitRepository.getInstance(org.openide.filesystems.FileUtil.toFile(gitRepoDirectory))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == repo) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4209/buggy-version/src.main.java.de.markiewb.netbeans.plugin.git.openinexternalviewer.GitUtils.java", "BodyUseAPI": [], "Fixed commit": "ab8c847a0ea994ea872dcb5d4cc2d7933c7874a5", "Url": "https://api.github.com/repos/markiewb/nb-git-open-in-external-repoviewer", "Date": "2014-05-20T19:02:19Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) > 0) { musicViewHolder.bindItem(list.get(position), position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8837/buggy-version/app.src.main.java.com.forezp.banya.adapter.MusicAdapter.java", "BodyUseAPI": ["java.util.List<com.forezp.banya.bean.music.Musics>.get(int)", "com.forezp.banya.adapter.MusicAdapter.MusicViewHolder.bindItem(list.get(position),int)"], "Fixed commit": "db5ed78f7e6993ea96f95c0ce828abeb873245e5", "Url": "https://api.github.com/repos/forezp/banya", "Date": "2016-10-17T13:08:07Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jumpComponents.contains(localBehavior))) { jumpComponents.add(localBehavior); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8538/buggy-version/src.main.java.edu.ucsc.cross.hse.core.framework.component.ComponentOperator.java", "BodyUseAPI": ["java.util.ArrayList<edu.ucsc.cross.hse.core.framework.component.Component>.add(edu.ucsc.cross.hse.core.framework.component.Component)"], "Fixed commit": "a684d8155cf7627c7ce8747851f8c1faa3445d19", "Url": "https://api.github.com/repos/be3short/HybridSystemsEnvironment", "Date": "2017-06-14T00:11:34Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edu.ucsc.cross.hse.core.framework.models.DynamicalModel.jumpOccurring(localBehavior, true)) { jumpOccurred = edu.ucsc.cross.hse.core.framework.models.DynamicalModel.applyDynamics(localBehavior, true, jump_occurring); }else if (edu.ucsc.cross.hse.core.framework.models.DynamicalModel.flowOccurring(localBehavior, true)) { jumpOccurred = edu.ucsc.cross.hse.core.framework.models.DynamicalModel.applyDynamics(localBehavior, true, jump_occurring); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8538/buggy-version/src.main.java.edu.ucsc.cross.hse.core.framework.component.ComponentOperator.java", "BodyUseAPI": ["edu.ucsc.cross.hse.core.framework.models.DynamicalModel.applyDynamics(edu.ucsc.cross.hse.core.framework.models.DynamicalModel,boolean,boolean)", "edu.ucsc.cross.hse.core.framework.models.DynamicalModel.applyDynamics(edu.ucsc.cross.hse.core.framework.models.DynamicalModel,boolean,boolean)", "edu.ucsc.cross.hse.core.framework.models.DynamicalModel.flowOccurring(edu.ucsc.cross.hse.core.framework.models.DynamicalModel,boolean)"], "Fixed commit": "a684d8155cf7627c7ce8747851f8c1faa3445d19", "Url": "https://api.github.com/repos/be3short/HybridSystemsEnvironment", "Date": "2017-06-14T00:11:34Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (openParenToken != null) { this.openParenToken = openParenToken; addChild(openParenToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4167/buggy-version/java-squid.src.main.java.org.sonar.java.ast.parser.LambdaParameterListTreeImpl.java", "BodyUseAPI": [], "Fixed commit": "65188cee830c30ea567b9d2d9eaca1ca73c7b8de", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2014-09-04T06:02:34Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (closeParenToken != null) { addChild(closeParenToken); this.closeParenToken = closeParenToken; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4167/buggy-version/java-squid.src.main.java.org.sonar.java.ast.parser.LambdaParameterListTreeImpl.java", "BodyUseAPI": [], "Fixed commit": "65188cee830c30ea567b9d2d9eaca1ca73c7b8de", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2014-09-04T06:02:34Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((adVDO.getValue()) != null) && ((adVDO.getValue().length()) > 0)) { try { repeatCode = dictionaryCache.getById(java.lang.Integer.valueOf(adVDO.getValue())).getLocalAbbrev(); } catch (java.lang.Exception anyE) { throw new java.lang.Exception((\"Error looking up dictionary entry for Repeat Code; \" + (anyE.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9067/buggy-version/ejb.src.org.openelis.bean.SDWISUnloadReportBean.java", "BodyUseAPI": ["org.openelis.domain.AuxDataViewDO.getValue()", "org.openelis.local.DictionaryCacheLocal.getById(java.lang.Integer)", "java.lang.Integer.valueOf(adVDO.getValue())", "dictionaryCache.getById(java.lang.Integer.valueOf(adVDO.getValue())).getLocalAbbrev()"], "Fixed commit": "9dd80e728a3f917d0364b334925068918f76cc29", "Url": "https://api.github.com/repos/mbielicke/OpenELIS-Iowa", "Date": "2011-09-15T19:09:18Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((adVDO.getValue()) != null) && ((adVDO.getValue().length()) > 0)) { try { compIndicator = dictionaryCache.getById(java.lang.Integer.valueOf(adVDO.getValue())).getLocalAbbrev(); } catch (java.lang.Exception anyE) { throw new java.lang.Exception((\"Error looking up dictionary entry for Composite Indicator; \" + (anyE.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9067/buggy-version/ejb.src.org.openelis.bean.SDWISUnloadReportBean.java", "BodyUseAPI": ["org.openelis.domain.AuxDataViewDO.getValue()", "org.openelis.local.DictionaryCacheLocal.getById(java.lang.Integer)", "dictionaryCache.getById(java.lang.Integer.valueOf(adVDO.getValue())).getLocalAbbrev()", "java.lang.Integer.valueOf(adVDO.getValue())"], "Fixed commit": "9dd80e728a3f917d0364b334925068918f76cc29", "Url": "https://api.github.com/repos/mbielicke/OpenELIS-Iowa", "Date": "2011-09-15T19:09:18Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((adVDO.getValue()) != null) && ((adVDO.getValue().length()) > 0)) { try { pbType = dictionaryCache.getById(java.lang.Integer.valueOf(adVDO.getValue())).getLocalAbbrev(); } catch (java.lang.Exception anyE) { throw new java.lang.Exception((\"Error looking up dictionary entry for Pb Sample Type; \" + (anyE.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9067/buggy-version/ejb.src.org.openelis.bean.SDWISUnloadReportBean.java", "BodyUseAPI": ["java.lang.Integer.valueOf(adVDO.getValue())", "org.openelis.local.DictionaryCacheLocal.getById(java.lang.Integer)", "org.openelis.domain.AuxDataViewDO.getValue()", "dictionaryCache.getById(java.lang.Integer.valueOf(adVDO.getValue())).getLocalAbbrev()"], "Fixed commit": "9dd80e728a3f917d0364b334925068918f76cc29", "Url": "https://api.github.com/repos/mbielicke/OpenELIS-Iowa", "Date": "2011-09-15T19:09:18Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datatorrent.lib.appdata.schemas.FieldsDescriptor.getType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (type.equals(Type.DOUBLE)) { if ((fieldToDouble) == null) { return null; } return fieldToDouble.get(field); }else if (type.equals(Type.STRING)) { if ((fieldToString) == null) { return null; } return fieldToString.get(field); }else { throw new java.lang.IllegalArgumentException((field + \" is not a valid field of this object.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8019/buggy-version/library.src.main.java.com.datatorrent.lib.appdata.gpo.GPOMutable.java", "BodyUseAPI": ["com.datatorrent.lib.appdata.schemas.Type.equals(Type.STRING)"], "Fixed commit": "8cb7304378e27304ac2f923b7e6d6bd08f2506f2", "Url": "https://api.github.com/repos/apache/apex-malhar", "Date": "2015-03-24T00:09:23Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) != null) throw new org.zachtaylor.jnodalxml.XMLException(\"Cannot add children to XMLNode with value\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3059/buggy-version/src.org.zachtaylor.jnodalxml.XMLNode.java", "BodyUseAPI": [], "Fixed commit": "993a69f24534a987ab436ee57bbe855f6f0d4d8e", "Url": "https://api.github.com/repos/zachtaylor/JNodalXML", "Date": "2013-04-26T07:18:31Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arcaneSpellcasterRadioButton.isSelected()) { newClass.setCasterType(CasterType.ARCANE_CASTER); }else if (divineSpellcasterRadioButton.isSelected()) { newClass.setCasterType(CasterType.DIVINE_CASTER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1234/buggy-version/src.gui.classes.ClassBuilderDialog.java", "BodyUseAPI": [], "Fixed commit": "1b8df2ed41b31df24832384c2e1756188af125ab", "Url": "https://api.github.com/repos/Japhez/Dragonfruit-Dungeon-Helper", "Date": "2013-11-14T18:48:44Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bank.loan(getAccountNumber(bank), money)) { this.asset += money; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8078/buggy-version/src.client.Client.java", "BodyUseAPI": [], "Fixed commit": "78bacd793b3cd2758ed8fb287fc63b303fdf4dbf", "Url": "https://api.github.com/repos/KMU-bank/KMU-Bank", "Date": "2015-12-11T05:03:20Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((testWord.equals(\"\")) || (testWord.equals(\"-\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4106/buggy-version/src.problem6.Main.java", "BodyUseAPI": [], "Fixed commit": "fae77530dee001ccca8f9e9cc9a9f2bdb71bb616", "Url": "https://api.github.com/repos/tutti/DAT157-Oblig-4", "Date": "2016-11-18T11:51:16Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(data.hasExtra(\"com.braintreepayments.api.dropin.EXTRA_PAYMENT_METHOD_NONCE\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4873/buggy-version/app.src.main.java.com.example.trevorbernard.parkhere.Client.RentSpotActivity.java", "BodyUseAPI": [], "Fixed commit": "2c222fa837263fae28dd25945ba0b4be8adc689c", "Url": "https://api.github.com/repos/ParkHere310/ParkHere", "Date": "2016-11-01T05:32:37Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((diskSpaceChecker) != null) { unbindService(diskSpaceChecker); diskSpaceChecker = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3963/buggy-version/src.main.java.org.radarcns.android.device.DeviceService.java", "BodyUseAPI": [], "Fixed commit": "2b28a64b607f4673ae264875b67ba2749c6e8246", "Url": "https://api.github.com/repos/RADAR-base/radar-commons-android", "Date": "2017-07-27T07:55:20Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseObject.getObjectId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((mUserVotesMap.get(postId)) != null) && ((mUserVotesMap.get(postId).getInt(ParseConstants.KEY_IS_FOLLOWER)) == 1)) { mHolder.heartButton.setImageResource(drawable.ic_heart_liked); }else { mHolder.heartButton.setImageResource(drawable.icon_heart_empty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6085/buggy-version/src.com.myteam.thisorthat.adapter.MessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "9c868fc16cb106ced1fc3b881fa62c634e085e4b", "Url": "https://api.github.com/repos/matanvr/thisorthatpurple", "Date": "2014-05-28T07:52:58Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mUserVotesMap.get(postId)) == null) { curr = new com.parse.ParseObject(com.myteam.thisorthat.util.ParseConstants.CLASS_USER_VOTE); curr.put(ParseConstants.KEY_USER_ID, userId); curr.put(ParseConstants.KEY_POST_ID, postId); curr.put(ParseConstants.KEY_IS_FOLLOWER, 1); curr.saveInBackground(); }else { curr = mUserVotesMap.get(postId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6085/buggy-version/src.com.myteam.thisorthat.adapter.MessageAdapter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, com.parse.ParseObject>.get(java.lang.String)", "com.parse.ParseObject.put(ParseConstants.KEY_POST_ID,java.lang.String)"], "Fixed commit": "9c868fc16cb106ced1fc3b881fa62c634e085e4b", "Url": "https://api.github.com/repos/matanvr/thisorthatpurple", "Date": "2014-05-28T07:52:58Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (mStatsSession == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5397/buggy-version/src.cn.cloudchain.yboxserver.helper.DataUsageHelper.java", "BodyUseAPI": [], "Fixed commit": "51cb878b57dd0385757229a318e4914fb72b7ea0", "Url": "https://api.github.com/repos/lazzynan/YboxServer", "Date": "2014-02-25T03:43:38Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.withiter.quhao.util.StringUtils.isNull(m.merchantImage)) { merchantImg.setImageResource(R.drawable.no_logo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5316/buggy-version/modules.android.Quhao.src.com.withiter.quhao.activity.MerchantDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "29093583b95be8450a8df9cfa90dcf47776ecdcb", "Url": "https://api.github.com/repos/withitergroup/quhao", "Date": "2013-11-27T07:47:07Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.contains(bakatxt.core.Database.TAG_DELETED)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7924/buggy-version/src.bakatxt.core.Database.java", "BodyUseAPI": [], "Fixed commit": "3f67b1149c06433b2c310513af0d41fd9ad1a75b", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-10-08T14:14:07Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gpa.containsKey(year)) { if ((course.getGrade()) > 0.0) { if ((gpa.get(year)) > 0.0) { java.lang.Float previousGrade = gpa.get(year); gpa.put(year, ((previousGrade + (course.getGrade())) / 2)); }else { gpa.put(year, course.getGrade()); } } }else { gpa.put(year, course.getGrade()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3490/buggy-version/src.main.java.com.model.sc.Student.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Float>.put(java.lang.String,course.getGrade())", "java.util.Map<java.lang.String, java.lang.Float>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Float>.put(java.lang.String,((previousGrade + (course.getGrade())) / 2))", "java.util.Map<java.lang.String, java.lang.Float>.put(java.lang.String,course.getGrade())", "java.util.Map<java.lang.String, java.lang.Float>.get(java.lang.String)"], "Fixed commit": "0a963c4a24360401b83c3a25401540760d3809ea", "Url": "https://api.github.com/repos/mokarian/inse6260", "Date": "2017-12-19T23:09:29Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((course.getGrade()) != 0.0F) { sum = sum + (course.getGrade()); counter++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3490/buggy-version/src.main.java.com.model.sc.Student.java", "BodyUseAPI": ["com.model.sc.Course.getGrade()"], "Fixed commit": "0a963c4a24360401b83c3a25401540760d3809ea", "Url": "https://api.github.com/repos/mokarian/inse6260", "Date": "2017-12-19T23:09:29Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageRequestPrefix) != null) { return (((servletContext.getContextPath()) + (imageRequestPrefix)) + \"/\") + imageKey; }else { return ((servletContext.getContextPath()) + \"/\") + imageKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/899/buggy-version/modules.server.blob-store.src.main.java.com.df.blobstore.image.http.DefaultImageLinkCreator.java", "BodyUseAPI": [], "Fixed commit": "395f04f598ca612f528c9bc45478999ccf019177", "Url": "https://api.github.com/repos/sala223/DelicacyFusion", "Date": "2013-10-31T17:11:21Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scrollX < 0) { scrollX += totalWidth; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6436/buggy-version/HorizontalPicker.src.main.java.com.wefika.horizontalpicker.HorizontalPicker.java", "BodyUseAPI": [], "Fixed commit": "2388544b7727afe6ac6f1e702729feca98aa9d6f", "Url": "https://api.github.com/repos/blazsolar/HorizontalPicker", "Date": "2016-02-23T13:43:14Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editable.length()) != 0) { state.addAnswer(questionId, editable.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1488/buggy-version/apptentive-android-sdk.src.com.apptentive.android.sdk.module.survey.view.TextSurveyQuestionView2.java", "BodyUseAPI": ["com.apptentive.android.sdk.module.survey.SurveyState.addAnswer(java.lang.String,editable.toString())", "android.text.Editable.toString()"], "Fixed commit": "fa5990faac76f88a8d81d54f4639c20fb9371bbe", "Url": "https://api.github.com/repos/skykelsey/apptentive-android", "Date": "2013-07-14T09:48:00Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (newSession == null) throw new java.io.IOException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/586/buggy-version/server.src.main.java.distributed_fs.overlay.manager.QuorumThread.java", "BodyUseAPI": [], "Fixed commit": "f89e55a6a4067e4d0920f3e0d161f7b3553132d9", "Url": "https://api.github.com/repos/sceccotti89/Distributed-File-System", "Date": "2016-09-14T10:40:49Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end < 0) end = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/169/buggy-version/app.src.main.java.com.project.tangyifeng.ex_recyclerview.EX_ChatListView.java", "BodyUseAPI": [], "Fixed commit": "c7b3dd7c5984f27c1478207760f3fbbbf3971a31", "Url": "https://api.github.com/repos/AlexanderInHUST/EX_Recyclerview", "Date": "2017-01-15T11:07:03Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.Ben12345rocks.AdvancedCore.Objects.User.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (player != null) { for (final java.lang.String cmd : cmds) { com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().debug((((\"Executing player command for \" + (getPlayerName())) + \": \") + cmd)); org.bukkit.Bukkit.getScheduler().runTask(plugin, new java.lang.Runnable() { @java.lang.Override public void run() { player.performCommand(cmd); } }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9192/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.User.java", "BodyUseAPI": ["org.bukkit.entity.Player.performCommand(java.lang.String)", "org.bukkit.Bukkit.getScheduler().runTask(org.bukkit.plugin.Plugin,java.lang.Runnable)"], "Fixed commit": "6e9c388f19fa5638566c7c3c7dd07c549c6467b5", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-10-03T20:41:13Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (validIndex((number - 1), header.size())) { return header.get((number - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8309/buggy-version/Source.Core.src.com.shtrih.jpos.fiscalprinter.DriverHeader.java", "BodyUseAPI": ["java.util.Vector<com.shtrih.jpos.fiscalprinter.HeaderLine>.get(int)"], "Fixed commit": "26e2458c3b62130aa47568a30dc1044a1d4b2b9f", "Url": "https://api.github.com/repos/shtrih-m/javapos_shtrih", "Date": "2017-04-03T09:53:40Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (validIndex((number - 1), trailer.size())) { return trailer.get((number - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8309/buggy-version/Source.Core.src.com.shtrih.jpos.fiscalprinter.DriverHeader.java", "BodyUseAPI": ["java.util.Vector<com.shtrih.jpos.fiscalprinter.HeaderLine>.get(int)"], "Fixed commit": "26e2458c3b62130aa47568a30dc1044a1d4b2b9f", "Url": "https://api.github.com/repos/shtrih-m/javapos_shtrih", "Date": "2017-04-03T09:53:40Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMarkerStationB) != null) mMarkerStationB.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4026/buggy-version/FindMyBikes.app.src.main.java.com.ludoscity.findmybikes.fragments.StationMapFragment.java", "BodyUseAPI": [], "Fixed commit": "06d8f13d469bf81ea2ce50188d264da34eada9b4", "Url": "https://api.github.com/repos/f8full/ludOScity", "Date": "2016-04-02T02:38:23Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalWorth != 0) ret = (totalPoints / totalWorth) * 100;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/219/buggy-version/src.objects.MyCourse.java", "BodyUseAPI": [], "Fixed commit": "23dcf1913260767cfe3a812687d531d3769037c2", "Url": "https://api.github.com/repos/ZachMSU/GhostGrader", "Date": "2013-12-05T02:15:29Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((stateListenerTypes) != null) && ((stateListenerTypes.length()) > 0)) { org.apache.zookeeper.server.quorum.QuorumStateHelper.getInstance().initialize(stateListenerTypes, cfg, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2835/buggy-version/src.java.main.org.apache.zookeeper.server.quorum.QuorumPeerConfig.java", "BodyUseAPI": ["org.apache.zookeeper.server.quorum.QuorumStateHelper.getInstance().initialize(java.lang.String,java.util.Properties,org.apache.zookeeper.server.quorum.QuorumPeerConfig)"], "Fixed commit": "9ab9a55ffaad5d31378511903d893d83424bac14", "Url": "https://api.github.com/repos/aruanruan/zookeeper", "Date": "2016-03-22T13:58:10Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.length()) < 2) return s.toUpperCase().trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1916/buggy-version/app.src.main.java.in.sportscult.sportscultapp.RegistrationActivity.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.lang.String.trim()"], "Fixed commit": "f85a7d298438e8f95dcd783d5206f7c13f9674c6", "Url": "https://api.github.com/repos/vikasmahato/SportsCultApp", "Date": "2017-04-01T08:11:39Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string == \"creepered\") return (com.caindonaghey.commandbin.Phrases.prefix) + \"Player was creepered.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5891/buggy-version/src.com.caindonaghey.commandbin.Phrases.java", "BodyUseAPI": [], "Fixed commit": "8b229eb10771f8b3dec327e553f7a820f52d9912", "Url": "https://api.github.com/repos/CainFoool/CommandBin-Reloaded", "Date": "2013-04-27T14:25:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.web.savedrequest.HttpSessionRequestCache.getRequest(request.getNativeRequest(javax.servlet.http.HttpServletRequest.class),request.getNativeResponse(javax.servlet.http.HttpServletResponse.class))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (savedRequest != null) { return savedRequest.getRedirectUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/303/buggy-version/giles-spring.src.main.java.edu.asu.giles.config.SimpleSignInAdapter.java", "BodyUseAPI": ["org.springframework.security.web.savedrequest.SavedRequest.getRedirectUrl()"], "Fixed commit": "ec973559e6e0cb38d917e3ae4ab26b43be1ca988", "Url": "https://api.github.com/repos/diging/giles", "Date": "2016-07-22T21:12:39Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lpos > 0) de.doridian.yiffbukkit.main.util.Configuration.configValues.put(line.substring(0, lpos), line.substring((lpos + 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7137/buggy-version/src.main.java.de.doridian.yiffbukkit.main.util.Configuration.java", "BodyUseAPI": [], "Fixed commit": "636a129a79039201bd8ff867191a907ce6aea300", "Url": "https://api.github.com/repos/YiffBukkit/YiffBukkit", "Date": "2014-05-08T17:29:57Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBookmarks.length) == 0) { setListError(\"Keine ungelesenen Bookmarks.\"); }else if (e instanceof com.mde.potdroid.helpers.ObjectManager.NotLoggedInException) { setListError(\"Nicht eingeloggt.\"); }else { setListError(\"Verbindungsfehler.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1442/buggy-version/src.com.mde.potdroid.activities.LeftMenu.java", "BodyUseAPI": [], "Fixed commit": "a33ab78bbb1f72451322aed4999c5037920dea4c", "Url": "https://api.github.com/repos/janoliver/pOT-Droid", "Date": "2013-02-16T11:00:04Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sunshinelibrary.turtle.utils.TurtleInfoUtils.getAccessToken(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((accessToken != null) && (!(accessToken.equals(\"\")))) { org.sunshinelibrary.turtle.TurtleManagers.cookieManager.cookieStore.addCookie(new org.apache.http.impl.cookie.BasicClientCookie(\"connect.sid\", accessToken)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1552/buggy-version/src.org.sunshinelibrary.turtle.TurtleManagers.java", "BodyUseAPI": ["org.sunshinelibrary.turtle.TurtleManagers.cookieManager.cookieStore.addCookie(org.apache.http.impl.cookie.BasicClientCookie)"], "Fixed commit": "977a175eb87a9e601ba45c8c29a01bb5ac6bd61c", "Url": "https://api.github.com/repos/SunshineLibrary/turtle-android", "Date": "2014-03-19T05:57:16Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (c.isArray()) { if (!(c.getComponentType().isPrimitive())) { for (int i = 0; i < (java.lang.reflect.Array.getLength(o)); i++) { java.lang.Object entry = java.lang.reflect.Array.get(o, i); java.lang.Object entryD = deduplicateObject(entry, (recursion + 1)); if ((entryD != null) && (entry != entryD)) java.lang.reflect.Array.set(o, i, entryD); } }else { pl.asie.foamfix.client.Deduplicator.BLACKLIST_CLASS.add(c); } }else { if (!(pl.asie.foamfix.client.Deduplicator.CLASS_FIELDS.containsKey(c))) { com.google.common.collect.ImmutableSet.Builder<java.lang.invoke.MethodHandle[]> fsBuilder = com.google.common.collect.ImmutableSet.builder(); java.lang.Class cc = c; do { for (java.lang.reflect.Field f : cc.getDeclaredFields()) { f.setAccessible(true); if (((f.getModifiers()) & (java.lang.reflect.Modifier.STATIC)) != 0) continue; if (((!(f.getType().isPrimitive())) && (!(f.getType().isEnum()))) && (!(pl.asie.foamfix.client.Deduplicator.BLACKLIST_CLASS.contains(f.getType())))) { try { fsBuilder.add(new java.lang.invoke.MethodHandle[]{ java.lang.invoke.MethodHandles.lookup().unreflectGetter(f), java.lang.invoke.MethodHandles.lookup().unreflectSetter(f) }); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); } } } } while ((cc = cc.getSuperclass()) != (java.lang.Object.class) ); pl.asie.foamfix.client.Deduplicator.CLASS_FIELDS.put(c, fsBuilder.build()); } for (java.lang.invoke.MethodHandle[] mh : pl.asie.foamfix.client.Deduplicator.CLASS_FIELDS.get(c)) { try { java.lang.Object value = mh[0].invoke(o); java.lang.Object valueD = deduplicateObject(value, (recursion + 1)); if ((valueD != null) && (value != valueD)) mh[1].invoke(o, valueD); } catch (java.lang.IllegalAccessException e) { } catch (java.lang.Throwable t) { t.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5589/buggy-version/src.main.java.pl.asie.foamfix.client.Deduplicator.java", "BodyUseAPI": ["java.util.Map<java.lang.Class, java.util.Set<java.lang.invoke.MethodHandle[]>>.put(java.lang.Class,fsBuilder.build())", "java.util.Set<java.lang.Class>.add(java.lang.Class)", "java.lang.Class.getComponentType()", "java.util.Map<java.lang.Class, java.util.Set<java.lang.invoke.MethodHandle[]>>.get(java.lang.Class)", "java.lang.Class.isPrimitive()", "java.util.Map<java.lang.Class, java.util.Set<java.lang.invoke.MethodHandle[]>>.containsKey(java.lang.Class)"], "Fixed commit": "7cf78fe31c1b7210a84228ea7eb0b700e96b93e5", "Url": "https://api.github.com/repos/asiekierka/FoamFix", "Date": "2016-12-15T21:27:06Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (zipPassword == null) { zipPassword = \"fragebogen\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1147/buggy-version/src.main.java.de.fau.amos4.util.ZipGenerator.java", "BodyUseAPI": [], "Fixed commit": "9cd27b5fe48f3667147586d6db88ac3c2052fec5", "Url": "https://api.github.com/repos/JonasGroeger/amos-ss15-proj4", "Date": "2015-07-11T20:58:12Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.event_crf_id()) == null) { java.lang.System.out.print(\"TEST\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6125/buggy-version/Source.src.Column.java", "BodyUseAPI": [], "Fixed commit": "827c51294454b8b8120d167831949e58105ce7fe", "Url": "https://api.github.com/repos/onlyjazz/cc-sas-extract", "Date": "2017-07-27T12:35:42Z"},
{"Line": "=>845", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (event_crf_id == null) { java.lang.System.out.print(\"Event CRF ID is NULL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6125/buggy-version/Source.src.Export.java", "BodyUseAPI": [], "Fixed commit": "827c51294454b8b8120d167831949e58105ce7fe", "Url": "https://api.github.com/repos/onlyjazz/cc-sas-extract", "Date": "2017-07-27T12:35:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.docdoku.core.configuration.ProductInstanceIteration.getPathDataMasterList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pathDataMasterList.isEmpty()) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7944/buggy-version/docdoku-server.docdoku-server-ejb.src.main.java.com.docdoku.server.dao.PathDataQueryDAO.java", "BodyUseAPI": [], "Fixed commit": "f197df66e9fb3ae8a0ea5d6c6535f16a01550c1f", "Url": "https://api.github.com/repos/docdoku/docdoku-plm", "Date": "2017-04-13T09:20:29Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mousephenotype.cda.solr.service.dto.ObservationDTO.getDiscretePoint()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (discreteTimePoint > 0) { controlDataPoints.add(new org.mousephenotype.cda.db.pojo.DiscreteTimePoint(discreteTimePoint, dataPoint)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/800/buggy-version/web.src.main.java.uk.ac.ebi.phenotype.chart.TimeSeriesChartAndTableProvider.java", "BodyUseAPI": ["java.util.List<org.mousephenotype.cda.db.pojo.DiscreteTimePoint>.add(org.mousephenotype.cda.db.pojo.DiscreteTimePoint)"], "Fixed commit": "e0a7527568aae1efcb821ff03e7337ce73615941", "Url": "https://api.github.com/repos/mpi2/PhenotypeData", "Date": "2017-07-31T10:56:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mousephenotype.cda.solr.service.dto.ObservationDTO.getDiscretePoint()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (discreteTimePoint > 0) { mutantData.add(new org.mousephenotype.cda.db.pojo.DiscreteTimePoint(discreteTimePoint, new java.lang.Float(dataPoint))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/800/buggy-version/web.src.main.java.uk.ac.ebi.phenotype.chart.TimeSeriesChartAndTableProvider.java", "BodyUseAPI": ["java.util.List<org.mousephenotype.cda.db.pojo.DiscreteTimePoint>.add(org.mousephenotype.cda.db.pojo.DiscreteTimePoint)"], "Fixed commit": "e0a7527568aae1efcb821ff03e7337ce73615941", "Url": "https://api.github.com/repos/mpi2/PhenotypeData", "Date": "2017-07-31T10:56:41Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closed.getAndSet(true)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5986/buggy-version/extras.socketio.src.main.java.org.atmosphere.socketio.cpr.SocketIOAtmosphereInterceptor.java", "BodyUseAPI": [], "Fixed commit": "90304e4109ba57a648e583b2ad23cf161bfb7202", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2013-05-08T21:28:47Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wroteRecords) { this.metadata = metadata; }else { writeRecord(metadata, \"metadata\"); wroteMetadata = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7068/buggy-version/gedcomx-model.src.main.java.org.gedcomx.util.RecordSetWriter.java", "BodyUseAPI": [], "Fixed commit": "33c02cd19c8bc79ed51bcca52391f42d6c3ac7e3", "Url": "https://api.github.com/repos/FamilySearch/gedcomx-java", "Date": "2014-09-23T17:24:33Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((systemRules.containsKey(symbol)) && ((systemRules.get(symbol)) instanceof java.lang.String)) { lsystem.ContextSensitiveString cxs = new lsystem.ContextSensitiveString(); cxs.addProduction(((java.lang.String) (systemRules.get(symbol)))); java.lang.String before = sensitiveMatcher.group(2); java.lang.String after = sensitiveMatcher.group(5); char beforeChar = (before != null) ? before.trim().charAt(0) : '\\u0000'; char afterChar = (after != null) ? after.trim().charAt(0) : '\\u0000'; cxs.addProduction(s2, beforeChar, afterChar); systemRules.put(symbol, cxs); }else { lsystem.ContextSensitiveString cxs = new lsystem.ContextSensitiveString(); java.lang.String before = sensitiveMatcher.group(2); java.lang.String after = sensitiveMatcher.group(5); char beforeChar = (before != null) ? before.trim().charAt(0) : '\\u0000'; char afterChar = (after != null) ? after.trim().charAt(0) : '\\u0000'; cxs.addProduction(s2, beforeChar, afterChar); systemRules.put(symbol, cxs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2914/buggy-version/src.main.ApplicationLoader.java", "BodyUseAPI": ["lsystem.ContextSensitiveString.addProduction(((java.lang.String) (systemRules.get(symbol))))", "lsystem.RuleSet.get(char)", "lsystem.RuleSet.put(char,lsystem.ContextSensitiveString)", "lsystem.RuleSet.put(char,lsystem.ContextSensitiveString)"], "Fixed commit": "6f0ca52c3d211b38d2d22249abf8efa9f019386b", "Url": "https://api.github.com/repos/timbeurskens/L-Systems", "Date": "2016-08-19T13:39:12Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type != (view.gui.event.Type.mouseDragged)) && (type != (view.gui.event.Type.mouseClicked))) { sd.getMouseEvents().add(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3806/buggy-version/Oberien.src.view.View.java", "BodyUseAPI": [], "Fixed commit": "50d78cba723e72087153b8cabe8346cb8b850356", "Url": "https://api.github.com/repos/Blackhole16/Oberien", "Date": "2014-11-03T20:04:33Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.launchPhase) >= (EnumLaunchPhase.LAUNCHED.ordinal())) return true; else return (this.currentPowerCapacity) == (this.getPowerMaxCapacity());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4466/buggy-version/src.main.java.com.mjr.extraplanets.entities.rockets.EntityElecticAutoRocket.java", "BodyUseAPI": [], "Fixed commit": "088562ac2ee020fb60e83d6ffbdb9d067fc2dd35", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-06-20T15:46:32Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(wholeString.contains(Reference.VER_MODHASH))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5084/buggy-version/co.einsteinium.wikilink.util.VersionHandler.java", "BodyUseAPI": [], "Fixed commit": "2e85ca305570a0f247b2e992a498f58a44056eca", "Url": "https://api.github.com/repos/DrEinsteinium/WikiLink", "Date": "2013-10-31T18:56:24Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (it == null) { return this.atomsByPredicate(atom.getPredicate()); }else { return new fr.lirmm.graphik.util.stream.filter.FilterIteratorWithoutException<fr.lirmm.graphik.graal.api.core.Atom, fr.lirmm.graphik.graal.api.core.Atom>(it, new fr.lirmm.graphik.util.stream.filter.Filter<fr.lirmm.graphik.graal.api.core.Atom>() { @java.lang.Override public boolean filter(fr.lirmm.graphik.graal.api.core.Atom a) { return matcher.check(((fr.lirmm.graphik.graal.api.core.Atom) (a))); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4101/buggy-version/graal.graal-core.src.main.java.fr.lirmm.graphik.graal.core.atomset.graph.DefaultInMemoryGraphAtomSet.java", "BodyUseAPI": [], "Fixed commit": "17935f0b50b7238672ccd423ed69b09f6e1d487b", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2016-10-19T15:49:14Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.lirmm.graphik.graal.core.atomset.graph.DefaultInMemoryGraphAtomSet.getPredicateVertex(fr.lirmm.graphik.graal.api.core.Predicate)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pv == null) { return fr.lirmm.graphik.util.stream.Iterators.<fr.lirmm.graphik.graal.api.core.Atom>emptyIterator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4101/buggy-version/graal.graal-core.src.main.java.fr.lirmm.graphik.graal.core.atomset.graph.DefaultInMemoryGraphAtomSet.java", "BodyUseAPI": [], "Fixed commit": "17935f0b50b7238672ccd423ed69b09f6e1d487b", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2016-10-19T15:49:14Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.google.common.base.Strings.nullToEmpty(params).isEmpty())) retVal += params;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1505/buggy-version/src.main.java.com.itba.domain.model.Campaign.java", "BodyUseAPI": [], "Fixed commit": "e831953a47fc543a869f3f2da9e260897d2dcd58", "Url": "https://api.github.com/repos/gromarion/pf", "Date": "2017-11-25T20:37:58Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((de.danoeh.antennapod.service.PlaybackService.isRunning) && ((playbackService) != null)) && (de.danoeh.antennapod.service.PlaybackService.isPlayingVideo())) { playbackService.pause(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7963/buggy-version/src.de.danoeh.antennapod.activity.VideoplayerActivity.java", "BodyUseAPI": [], "Fixed commit": "0e7b1a9f3995981fff456f6f24c09ddcd65c2e44", "Url": "https://api.github.com/repos/danieloeh/AntennaPod", "Date": "2012-08-05T13:43:03Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLoadingIndicator) != null) mLoadingIndicator.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3084/buggy-version/app.src.main.java.com.example.profbola.bakingtime.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2133bcc840f23cd057ba4b1b56d30bc72b9b71da", "Url": "https://api.github.com/repos/Ehbraheem/Baking-Time", "Date": "2017-07-30T23:29:15Z"},
{"Line": "=>941", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e2.getChildren()[0]) instanceof cager.jexpr.ast.IdentifierExpression) { cager.jexpr.ast.IdentifierExpression i = ((cager.jexpr.ast.IdentifierExpression) (e2.getChildren()[0])); fieldValue = i.getName(); }else if ((e2.getChildren()[0]) instanceof cager.jexpr.ast.LiteralExpression) { cager.jexpr.ast.LiteralExpression i = ((cager.jexpr.ast.LiteralExpression) (e2.getChildren()[0])); fieldValue = (i.getValue()) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8380/buggy-version/src.cager.jexpr.visitor.BoogieVisitor.java", "BodyUseAPI": ["cager.jexpr.ast.PrimaryExpression.getChildren()", "cager.jexpr.ast.PrimaryExpression.getChildren()", "cager.jexpr.ast.PrimaryExpression.getChildren()"], "Fixed commit": "2b4482bbb35e1bdc95e05bc4d4e7981f166bb622", "Url": "https://api.github.com/repos/ligianistor/Oprop", "Date": "2015-08-04T23:15:05Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.newdawn.slick.Input.isKeyDown(Input.KEY_UP)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (northKey) { movementDirection = new scratch.model.Vector2D(0, (-1)); }else if (westKey) { movementDirection = new scratch.model.Vector2D((-1), 0); }else if (eastKey) { movementDirection = new scratch.model.Vector2D(1, 0); }else { movementDirection = new scratch.model.Vector2D(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2039/buggy-version/TisButAScratch.src.main.java.scratch.network.PacketPlayerInput.java", "BodyUseAPI": [], "Fixed commit": "ec50d035a40fed68e2bce82033d1dfd8b02ea89f", "Url": "https://api.github.com/repos/Tejpbit/TDA367", "Date": "2014-05-17T20:20:10Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.newdawn.slick.Input.isKeyDown(Input.KEY_UP)", "org.newdawn.slick.Input.isKeyDown(Input.KEY_LEFT)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (northKey && westKey) { movementDirection = new scratch.model.Vector2D((-1), (-1)); }else if (northKey && eastKey) { movementDirection = new scratch.model.Vector2D(1, (-1)); }else if (southKey) { movementDirection = new scratch.model.Vector2D(0, 1); }else if (northKey) { movementDirection = new scratch.model.Vector2D(0, (-1)); }else if (westKey) { movementDirection = new scratch.model.Vector2D((-1), 0); }else if (eastKey) { movementDirection = new scratch.model.Vector2D(1, 0); }else { movementDirection = new scratch.model.Vector2D(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2039/buggy-version/TisButAScratch.src.main.java.scratch.network.PacketPlayerInput.java", "BodyUseAPI": [], "Fixed commit": "ec50d035a40fed68e2bce82033d1dfd8b02ea89f", "Url": "https://api.github.com/repos/Tejpbit/TDA367", "Date": "2014-05-17T20:20:10Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) { executeUpdate(getStmtLogException(), new java.sql.Timestamp(java.lang.System.currentTimeMillis()), trimAndTrunc(hostname, DBConnector.MAX_LEN_CRAWLER_EXCEPT_LOG_HOST), threadID, trimAndTrunc(classPath, DBConnector.MAX_LEN_CRAWLER_EXCEPT_LOG_CLASS_PATH), trimAndTrunc(info, DBConnector.MAX_LEN_CRAWLER_EXCEPT_LOG_INFO), trimAndTrunc(e.getMessage(), DBConnector.MAX_LEN_CRAWLER_EXCEPT_LOG_MSG), trimAndTrunc(e.getClass().getName(), DBConnector.MAX_LEN_CRAWLER_EXCEPT_LOG_CLASS), trimAndTrunc(stackTrace, DBConnector.MAX_LEN_CRAWLER_EXCEPT_LOG_STACK)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8766/buggy-version/InfoCrawlers.src.DBConnector.java", "BodyUseAPI": [], "Fixed commit": "ea6cf7df03abcc9b48325aabe5a47224edbca675", "Url": "https://api.github.com/repos/clembanas/EventViz-15", "Date": "2015-06-08T07:23:25Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) { executeUpdate(getStmtLogDebugInfo(), new java.sql.Timestamp(java.lang.System.currentTimeMillis()), trimAndTrunc(hostname, DBConnector.MAX_LEN_CRAWLER_DEBUG_LOG_HOST), threadID, trimAndTrunc(classPath, DBConnector.MAX_LEN_CRAWLER_DEBUG_LOG_CLASS_PATH), trimAndTrunc(info, DBConnector.MAX_LEN_CRAWLER_DEBUG_LOG_INFO)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8766/buggy-version/InfoCrawlers.src.DBConnector.java", "BodyUseAPI": [], "Fixed commit": "ea6cf7df03abcc9b48325aabe5a47224edbca675", "Url": "https://api.github.com/repos/clembanas/EventViz-15", "Date": "2015-06-08T07:23:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(buttonActions.isEmpty())) { de.longri.cachebox3.gui.widgets.ActionButton action = buttonActions.get(0); if (action != null) action.getAction().callExecute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6377/buggy-version/core.src.de.longri.cachebox3.gui.widgets.GestureButton.java", "BodyUseAPI": ["java.util.ArrayList<de.longri.cachebox3.gui.widgets.ActionButton>.get(int)"], "Fixed commit": "f76207b8a16456db7c2461e628190aedc1dc5637", "Url": "https://api.github.com/repos/Longri/cachebox3.0", "Date": "2016-08-04T05:50:35Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((block != (this)) && (!(block instanceof net.minecraft.block.BlockBreakable))) return !(block.isOpaqueCube());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5529/buggy-version/source.net.malisis.doors.block.MixedBlock.java", "BodyUseAPI": ["net.minecraft.block.Block.isOpaqueCube()"], "Fixed commit": "2a0dc99a1a1f40561d2b4db786e8d1892702de2e", "Url": "https://api.github.com/repos/Ordinastie/MalisisDoors", "Date": "2014-11-18T14:56:39Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list == null) || ((list.size()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4785/buggy-version/src.data_center.DatabaseConnector.java", "BodyUseAPI": [], "Fixed commit": "21932d5ecc75ee0c7469f8deb365bfa7ed812799", "Url": "https://api.github.com/repos/igemsoftware/SJTU-Software_2014", "Date": "2014-10-19T17:17:25Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.JavaPsiFacade.getInstance(project).findPackage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (psiPackage != null) { com.intellij.psi.PsiClass[] matchingClasses = psiPackage.findClassByShortName(com.google.gct.idea.debugger.ServerToIDEFileResolver.getClassNameFromPath(path), com.intellij.psi.search.GlobalSearchScope.allScope(project)); if ((matchingClasses.length) > 0) { file = matchingClasses[0].getContainingFile().getVirtualFile(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/34/buggy-version/google-cloud-tools-plugin.src.com.google.gct.idea.debugger.ServerToIDEFileResolver.java", "BodyUseAPI": ["com.intellij.psi.PsiPackage.findClassByShortName(java.lang.String,com.intellij.psi.search.GlobalSearchScope.allScope(project))"], "Fixed commit": "32c38d269f4fb9e87f5cdaa818427cc29438def1", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-02-05T21:31:40Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ordinal == (com.ociweb.iot.maker.Port.values().length)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1377/buggy-version/src.main.java.com.ociweb.iot.maker.Port.java", "BodyUseAPI": [], "Fixed commit": "6a5a0ac50350962cc453c033147bd33f2f91cfc2", "Url": "https://api.github.com/repos/oci-pronghorn/FogLight", "Date": "2017-09-08T21:07:35Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clusterConfigMgr.getRpMgr().getVcResourcePoolByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (vcClusters == null) { nonexistentRpNames.append(rpName).append(\",\"); }else { clusters.addAll(vcClusters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7638/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.ClusterManager.java", "BodyUseAPI": ["java.util.List<com.vmware.bdd.spectypes.VcCluster>.addAll(java.util.List<com.vmware.bdd.spectypes.VcCluster>)"], "Fixed commit": "ecf5d82929fef5a2c7a16863d6a610a3d7c33f14", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-10-25T03:22:45Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nonexistentRpNames.length()) > 0) { nonexistentRpNames.delete(((nonexistentRpNames.length()) - 1), nonexistentRpNames.length()); throw com.vmware.bdd.exception.VcProviderException.RESOURCE_POOL_NOT_FOUND(nonexistentRpNames.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7638/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.ClusterManager.java", "BodyUseAPI": ["com.vmware.bdd.exception.VcProviderException.RESOURCE_POOL_NOT_FOUND(java.lang.String)", "java.lang.StringBuffer.delete(int,int)", "java.lang.StringBuffer.length()", "java.lang.StringBuffer.length()", "java.lang.StringBuffer.toString()"], "Fixed commit": "ecf5d82929fef5a2c7a16863d6a610a3d7c33f14", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-10-25T03:22:45Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((destEntryRow) != null) { destEntryRow.focusOnEntryField(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/106/buggy-version/Routy.src.org.routy.OriginActivity.java", "BodyUseAPI": [], "Fixed commit": "42507f5736f9a687ecf8220325a50653e6301f05", "Url": "https://api.github.com/repos/ryanprater/Routy", "Date": "2013-05-13T00:24:28Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7769/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "dc6d05ce042ea8be82eb0eaa6b985ea01a207b3d", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.renderer) != null) { requestRender(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6008/buggy-version/android.android_studio.MOSTVisualizationLib.MOSTVisualization.src.main.java.it.crs4.most.visualization.augmentedreality.TouchGLSurfaceView.java", "BodyUseAPI": [], "Fixed commit": "432759e943998330bf61615db15743dd8bbdb959", "Url": "https://api.github.com/repos/crs4/most-visualization", "Date": "2016-09-19T08:45:42Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (effectiveEvents == null) { effectiveEvents = new java.util.ArrayList<com.microsoft.azure.eventhubs.EventData>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8093/buggy-version/azure-eventhubs-eph.src.main.java.com.microsoft.azure.eventprocessorhost.EventHubPartitionPump.java", "BodyUseAPI": [], "Fixed commit": "9fd080985b9e1cf6ed78d707828392ee4752ad8a", "Url": "https://api.github.com/repos/SreeramGarlapati/azure-event-hubs-java", "Date": "2017-03-02T21:23:13Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((location) != null) && (location.startsWith(XmldbURI.LOCAL_DB))) { dependantModule = location; }else { dependantModule = org.exist.xmldb.XmldbURI.create(getParentContext().getModuleLoadPath(), false).append(location).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6527/buggy-version/src.org.exist.xquery.ModuleContext.java", "BodyUseAPI": ["org.exist.xmldb.XmldbURI.create(getParentContext().getModuleLoadPath(), false).append(location).toString()", "org.exist.xmldb.XmldbURI.create(getParentContext().getModuleLoadPath(), false).append(java.lang.String)"], "Fixed commit": "cf35c6153328667414fd8704162fc6876db03987", "Url": "https://api.github.com/repos/ljo/exist", "Date": "2016-03-09T00:06:45Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.yangtools.yang.parser.impl.ParserListenerUtils.wrapPattern(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.opendaylight.yangtools.yang.parser.impl.ParserListenerUtils.isValidPattern(pattern, ctx, moduleName)) { return org.opendaylight.yangtools.yang.model.util.BaseConstraints.newPatternConstraint(pattern, description, reference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9047/buggy-version/yang.yang-parser-impl.src.main.java.org.opendaylight.yangtools.yang.parser.impl.ParserListenerUtils.java", "BodyUseAPI": ["org.opendaylight.yangtools.yang.model.util.BaseConstraints.newPatternConstraint(java.lang.String,com.google.common.base.Optional<java.lang.String>,com.google.common.base.Optional<java.lang.String>)"], "Fixed commit": "b401ea6d55a428bc5c90bad611ae675a0c92f765", "Url": "https://api.github.com/repos/opendaylight/yangtools", "Date": "2014-10-23T07:58:22Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) != (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9001/buggy-version/src.main.java.com.sk89q.craftbook.mech.XPStorer.java", "BodyUseAPI": [], "Fixed commit": "0ad5f4f73b783ab973819d941ef1df44217962e5", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-12-20T07:11:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<P>.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (className.startsWith(\"java.util.\")) accessClassName = (\"net.minidev.asm.\" + className) + \"AccAccess\"; else accessClassName = className.concat(\"AccAccess\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7100/buggy-version/asm.src.main.java.net.minidev.asm.BeansAccess.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "68bbbe52a7299422b8e4432bc53e3746db0d0529", "Url": "https://api.github.com/repos/netplex/json-smart-v2", "Date": "2014-06-05T10:37:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (className.startsWith(\"java.util.\")) this.accessClassName = (\"net.minidev.asm.\" + (className)) + \"AccAccess\"; else this.accessClassName = className.concat(\"AccAccess\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7100/buggy-version/asm.src.main.java.net.minidev.asm.BeansAccessBuilder.java", "BodyUseAPI": [], "Fixed commit": "68bbbe52a7299422b8e4432bc53e3746db0d0529", "Url": "https://api.github.com/repos/netplex/json-smart-v2", "Date": "2014-06-05T10:37:09Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["method.getAnnotations().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (methodAnnot != null) { org.teavm.jso.plugin.AnnotationValue redefinedMethodName = methodAnnot.getValue(\"value\"); if (redefinedMethodName != null) { name = redefinedMethodName.getString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5798/buggy-version/teavm-jso.src.main.java.org.teavm.jso.plugin.JavascriptNativeProcessor.java", "BodyUseAPI": ["org.teavm.jso.plugin.AnnotationReader.getValue(java.lang.String)"], "Fixed commit": "ab3469027112191e37b7d0c02dc78a1e7e811322", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2014-11-03T17:48:17Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["issuerInfo.getCert().getNotAfter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(caNotAfter.equals(cert.getNotAfter()))) { issue.setFailureMessage((\"cert validity is not within \" + (validity.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8619/buggy-version/ca.ca-qa.src.main.java.org.xipki.pki.ca.qa.X509CertprofileQa.java", "BodyUseAPI": [], "Fixed commit": "442e4eb6532b2d9f2234ededf89e28e260f37b14", "Url": "https://api.github.com/repos/xipki/xipki", "Date": "2016-05-21T20:03:46Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.HashBasedTable<java.net.InetSocketAddress, java.lang.Integer, java.lang.Boolean>.remove(me.getRemoteAddress(),coapResponse.getMessageID())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (o == null) { java.lang.System.out.println(\"Object o ist NULL!!!\"); }else { java.lang.System.out.println(\"Object o ist NICHT NULL!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2887/buggy-version/src.main.java.de.uniluebeck.itm.spitfire.nCoap.communication.reliability.IncomingMessageReliabilityHandler.java", "BodyUseAPI": [], "Fixed commit": "d9a000deaf127680bb0fdc63c0b94f3b8e47b339", "Url": "https://api.github.com/repos/okleine/nCoAP", "Date": "2012-04-11T14:55:52Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.uniluebeck.itm.spitfire.nCoap.communication.encoding.CoapMessageDecoder.log.isDebugEnabled()) { de.uniluebeck.itm.spitfire.nCoap.communication.encoding.CoapMessageDecoder.log.debug((\"[CoapMessageDecoder] Set receipient address to: \" + rcptAddress)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2887/buggy-version/src.main.java.de.uniluebeck.itm.spitfire.nCoap.communication.encoding.CoapMessageDecoder.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "d9a000deaf127680bb0fdc63c0b94f3b8e47b339", "Url": "https://api.github.com/repos/okleine/nCoAP", "Date": "2012-04-11T14:55:52Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.footer) != null) { list.append(footer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7967/buggy-version/src.main.java.com.github.mmonkey.Destinations.Utilities.PaginatedList.java", "BodyUseAPI": [], "Fixed commit": "6634ba838bffea6975788810863b0227a2296c53", "Url": "https://api.github.com/repos/mmonkey/Destinations", "Date": "2015-05-02T04:56:02Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(h.hasTITLE())) { r1 = 1; if (!(h.hasNAME())) { r2 = 1; if (!(h.hasAUTHOR())) { r3 = 1; if (!(h.hasTYPE())) { r4 = 1; if (!(h.hasLICENSE())) { r5 = 1; if (!(h.hasBFC())) { r6 = 1; } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9041/buggy-version/src.org.nschmidt.ldparteditor.data.DatHeaderManager.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.text.HeaderState.hasNAME()", "org.nschmidt.ldparteditor.text.HeaderState.hasTYPE()", "org.nschmidt.ldparteditor.text.HeaderState.hasBFC()", "org.nschmidt.ldparteditor.text.HeaderState.hasLICENSE()", "org.nschmidt.ldparteditor.text.HeaderState.hasAUTHOR()"], "Fixed commit": "e6f36df463dd2efddb961181a5743125aa5022bb", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-08-29T10:44:22Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dist == 0) return false; else return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/204/buggy-version/BlockReversiCore.java", "BodyUseAPI": [], "Fixed commit": "2748ba67b0242eb1e6a3be1d4b976f8f6e1abd7c", "Url": "https://api.github.com/repos/linoal13f/MinecraftReversiMod", "Date": "2012-07-14T15:09:45Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.leiqun.currencies.MainActivity.isNumeric(java.lang.String.valueOf(mAmountEditText.getText()))) { new com.example.leiqun.currencies.MainActivity.CurrencyConverterTask().execute(((com.example.leiqun.currencies.MainActivity.URL_BASE) + (mKey))); }else { android.widget.Toast.makeText(this, \"\u8f93\u5165\u7684\u4e0d\u662f\u6570\u503c\uff0c\u91cd\u65b0\u8f93\u5165\uff01\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7818/buggy-version/app.src.main.java.com.example.leiqun.currencies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d268e50d19512224c2f241e555572f2cfedd00f3", "Url": "https://api.github.com/repos/qunleinature/currencies", "Date": "2016-06-08T16:32:52Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.beanutils.PropertyUtils.getProperty(T,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fieldObj == null) { javax.edi.bind.EDIMarshaller.LOG.warn(\"This shouldn't happen.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3581/buggy-version/jaeb-core.src.main.java.javax.edi.bind.EDIMarshaller.java", "BodyUseAPI": [], "Fixed commit": "092844e9a563baee1451f29a2c3b7dd5ad903d25", "Url": "https://api.github.com/repos/bradsdavis/java-architecture-edi-binding", "Date": "2013-09-23T13:05:15Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.ct.ColorTeaming.getCTConfig()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (config.isShowJapanizeGlobalChat()) { event.setMessage(addJapanize(event.getMessage())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6187/buggy-version/src.main.java.com.github.ucchyocean.ct.listener.PlayerChatListener.java", "BodyUseAPI": [], "Fixed commit": "a36b41c4a614cb1e94b0366a57187bf4d92721cc", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-09-18T12:03:37Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMod.isLarge()) && (mMod.isLand(((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE))))) { ListSessionFragment.mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/521/buggy-version/FallDetector.src.it.unipd.dei.esp1415.falldetector.fragment.DetailSessionFragment.java", "BodyUseAPI": [], "Fixed commit": "b99e3a7e561292d9fefef99aaa12903692cc8080", "Url": "https://api.github.com/repos/MrBonty/ESP1415", "Date": "2015-08-29T15:18:35Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((headerNumber) == (java.lang.Long.MIN_VALUE)) { fastForwardDontWriteHeaderNumber(lastPositionValue); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7287/buggy-version/src.main.java.net.openhft.chronicle.wire.AbstractWire.java", "BodyUseAPI": [], "Fixed commit": "2dcfeeda4274f70889b59d58b478c7a36747f55d", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Wire", "Date": "2017-11-20T15:33:03Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CoreProxy.proxy.getBuildCraftPlayer(((net.minecraft.world.WorldServer) (getWorld())), ((int) (p.x)), ((int) (p.y)), ((int) (p.z))).get()", "event.entity.getEntityItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (defaultItemsHandler.handle(getWorld(), ((int) (p.x)), ((int) (p.y)), ((int) (p.z)), event.direction, stack, player, this)) { event.entity = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1538/buggy-version/common.buildcraft.transport.pipes.PipeItemsStripes.java", "BodyUseAPI": [], "Fixed commit": "f6fe4ffcb26e1382c99f065054ee3282fb498896", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2015-02-13T02:32:57Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entries.size()) > 0) { java.util.ArrayList<budgetapp.main.Stats> months = ((java.util.ArrayList<budgetapp.main.Stats>) (years.get(index).getChildren())); list.add(years.get(index).getName()); if ((selectedMonth) > (-1)) { printMonth(list, months, selectedMonth); }else { for (int j = 0; j < (months.size()); j++) { printMonth(list, months, j); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8771/buggy-version/src.budgetapp.main.StatsActivity.java", "BodyUseAPI": [], "Fixed commit": "d36f226bb7eef5b5063eb3ebc25e51074700fbbe", "Url": "https://api.github.com/repos/steenstn/BudgetApp", "Date": "2013-03-17T14:30:16Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.cm.settings.LiquidSettings.runRootCommand(\"./system/etc/init.d/06sensitivity\")) android.widget.Toast.makeText(this, \"Sensitivity set correctly\", 1750).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3258/buggy-version/src.com.cm.settings.settings.java", "BodyUseAPI": [], "Fixed commit": "a1467a6b8235938d803c1f7309d0844f352818a3", "Url": "https://api.github.com/repos/gnufabio/liquid_settings", "Date": "2011-02-19T12:43:18Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secondsValue.length()) == 1) { secondsValue = \"0\" + secondsValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2868/buggy-version/src.main.java.ee.ellytr.chat.component.TimeComponent.java", "BodyUseAPI": [], "Fixed commit": "2f8e263008792a87fa0f304f99b65cd2d85cc70b", "Url": "https://api.github.com/repos/CardinalDevelopment/EllyChat", "Date": "2016-07-01T04:13:44Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jfmClassName.equals(\"com.sun.tools.javac.api.ClientCodeWrapper$WrappedStandardJavaFileManager\")) { try { java.lang.reflect.Field wrappedField = java.lang.Class.forName(\"com.sun.tools.javac.api.ClientCodeWrapper$WrappedJavaFileManager\").getDeclaredField(\"clientJavaFileManager\"); wrappedField.setAccessible(true); javax.tools.JavaFileManager wrappedManager = ((javax.tools.JavaFileManager) (wrappedField.get(jfm))); java.lang.Class<?> superType = java.lang.Class.forName(\"com.sun.tools.javac.file.BaseFileManager\"); if (superType.isInstance(wrappedManager)) { return new lombok.javac.apt.LombokFileObjects.Java9Compiler(wrappedManager); } } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6089/buggy-version/src.core.lombok.javac.apt.LombokFileObjects.java", "BodyUseAPI": [], "Fixed commit": "e92e285d95e0fb08c32e7059f85806a30985084b", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2017-07-17T20:22:30Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.ethz.inf.vs.californium.dtls.DTLSMessage.getMessageSeq()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (messageSeq > (nextReceiveSeq)) { ch.ethz.inf.vs.californium.dtls.Handshaker.LOG.info((((\"Queued newer message from same epoch, message_seq: \" + messageSeq) + \", next_receive_seq: \") + (nextReceiveSeq))); queuedMessages.add(record); return false; }else { ch.ethz.inf.vs.californium.dtls.Handshaker.LOG.info((((\"Discarded message due to older message_seq: \" + messageSeq) + \", next_receive_seq: \") + (nextReceiveSeq))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1672/buggy-version/californium.src.main.java.ch.ethz.inf.vs.californium.dtls.Handshaker.java", "BodyUseAPI": ["java.util.logging.Logger.info(java.lang.String)", "java.util.logging.Logger.info(java.lang.String)"], "Fixed commit": "727eaa69fb826ab513c6519a4acfe4ec3b7d0805", "Url": "https://api.github.com/repos/mkovatsc/Californium", "Date": "2012-08-22T15:46:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.items) == null) this.items = new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2605/buggy-version/chat-adapters.src.main.java.in.habel.chat_adapters.RecyclerChatAdapter.java", "BodyUseAPI": [], "Fixed commit": "4473c92294672d4bc09c8a8fb5ae2135945ea54d", "Url": "https://api.github.com/repos/habelMarottipuzha/Android-Binding-Adapters", "Date": "2017-10-07T05:36:12Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.wanghaomiao.seimi.core.SeimiDownloader.process(cn.wanghaomiao.seimi.struct.Request)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (BodyType.TEXT.equals(seimiResponse.getBodyType())) { java.util.regex.Matcher mm = metaRefresh.matcher(seimiResponse.getContent()); int refreshCount = 0; while (((!(request.isUseSeimiAgent())) && (mm.find())) && (refreshCount < 3)) { java.lang.String nextUrl = mm.group(1).replaceAll(\"'\", \"\"); seimiResponse = downloader.metaRefresh(nextUrl); mm = metaRefresh.matcher(seimiResponse.getContent()); refreshCount += 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6080/buggy-version/project.src.main.java.cn.wanghaomiao.seimi.core.SeimiProcessor.java", "BodyUseAPI": ["cn.wanghaomiao.seimi.struct.Response.getContent()", "java.util.regex.Pattern.matcher(seimiResponse.getContent())"], "Fixed commit": "d7593418b4314af43b08c6185f9b032014215c17", "Url": "https://api.github.com/repos/WesleyDevLab/SeimiCrawler", "Date": "2016-07-06T13:17:06Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["p.getTeamManager().getTeamForPlayer(ev.getEntity())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (team != null) { boolean isAliveTeam = false; for (org.bukkit.entity.Player player : team.getPlayers()) { if (!(p.getGameManager().isPlayerDead(player.getName()))) { isAliveTeam = true; break; } } if (!isAliveTeam) { p.getServer().broadcastMessage(((((((((p.getConfig().getString(\"death-messages.teamDeathMessagesPrefix\", \"\")) + \"The team \") + (org.bukkit.ChatColor.RESET)) + (team.getChatColor())) + (team.getDisplayName())) + (org.bukkit.ChatColor.RESET)) + (p.getConfig().getString(\"death-messages.teamDeathMessagesPrefix\", \"\"))) + \" has fallen!\")); } }else { p.getLogger().warning(\"Team null?!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3047/buggy-version/src.me.azenet.UHPlugin.UHPluginListener.java", "BodyUseAPI": ["me.azenet.UHPlugin.UHTeam.getChatColor()", "me.azenet.UHPlugin.UHTeam.getPlayers()", "p.getServer().broadcastMessage(((((((((p.getConfig().getString(\"death-messages.teamDeathMessagesPrefix\", \"\")) + \"The team \") + (org.bukkit.ChatColor.RESET)) + (team.getChatColor())) + (team.getDisplayName())) + (org.bukkit.ChatColor.RESET)) + (p.getConfig().getString(\"death-messages.teamDeathMessagesPrefix\", \"\"))) + \" has fallen!\"))", "me.azenet.UHPlugin.UHTeam.getDisplayName()"], "Fixed commit": "bfd0d2cc4ebfe24401807647183bfe145e7e8d51", "Url": "https://api.github.com/repos/AmauryCarrade/KTP", "Date": "2014-07-10T02:58:07Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.ielse.demo.p02.ViewState.read(android.widget.ImageView,ViewState.STATE_ORIGIN)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((vsOrigin.alpha) == 0) vsOrigin.translationX(iSource.getTranslationX()).translationY(iSource.getTranslationY());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2694/buggy-version/P02_ImageWatcher.app.src.main.java.ch.ielse.demo.p02.ImageWatcher.java", "BodyUseAPI": ["ch.ielse.demo.p02.ViewState.translationX(iSource.getTranslationX())", "vsOrigin.translationX(iSource.getTranslationX()).translationY(iSource.getTranslationY())"], "Fixed commit": "0e09d9c0354c796724304fc9abb4490dda58cfd2", "Url": "https://api.github.com/repos/iielse/ImageWatcher", "Date": "2017-02-06T10:09:51Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dest.equals(\"\")) { dest = step.getString(\"html_instructions\").replaceAll(\"<(.*?)*>\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/469/buggy-version/src.com.codepath.travelplanner.directions.GoogleParser.java", "BodyUseAPI": [], "Fixed commit": "86d7647abf34e968f22473b24fa885f894d0701d", "Url": "https://api.github.com/repos/boyserk84/AndroidMobile_ItineraryPlanner", "Date": "2014-04-25T08:23:03Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentFile.exists()) { currentFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2577/buggy-version/app.press.io.OnDiskCompressedFile.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "582dc3e99c658ac3a091a4b283dd026bc4ce30c6", "Url": "https://api.github.com/repos/dooooug/press", "Date": "2013-04-02T09:18:20Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (error < 0) { this.delta = -error; }else { this.delta = error; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3778/buggy-version/hamcrest-library.src.main.java.org.hamcrest.number.IsCloseTo.java", "BodyUseAPI": [], "Fixed commit": "1e6d76fb5776ba77676b69edbbe86d54451c39c9", "Url": "https://api.github.com/repos/StarBax89/JavaHamcrest", "Date": "2016-09-28T14:59:02Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aggreagationFunctions.size()) > 0) { groupBy.put(\"columns\", ((org.json.JSONArray) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2798/buggy-version/sensei-core.src.main.java.com.senseidb.search.req.BQLParserUtils.java", "BodyUseAPI": [], "Fixed commit": "75f648f34c49036879d248559fd048cb08928f4b", "Url": "https://api.github.com/repos/vzhabiuk/sensei", "Date": "2013-02-12T23:29:47Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["postDiv.select(\"div[class=desc]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((descDiv.children().size()) > 0) { org.jsoup.nodes.Element title = descDiv.child(0); if (!(title.text().equals(\"\"))) { titleString = title.text(); } org.jsoup.nodes.Element a = descDiv.select(\"a\").first(); if (a != null) { linkString = a.attr(\"href\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3236/buggy-version/src.java.it.unimol.my.news.NewsExtractor.java", "BodyUseAPI": ["org.jsoup.nodes.Element.child(int)", "org.jsoup.nodes.Element.select(java.lang.String)", "descDiv.select(\"a\").first()"], "Fixed commit": "bb99b7175ce74b97249cc3686b59203ee371ecf9", "Url": "https://api.github.com/repos/myunimol/api", "Date": "2015-01-14T17:50:00Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mayhem.overlay.RegionControllerLookup.getMessageId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (recievedAcks.containsKey(msgId)) return recievedAcks.get(msgId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4165/buggy-version/core.src.com.mayhem.overlay.ClientApplication.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, rice.p2p.commonapi.Id>.get(long)"], "Fixed commit": "77d4f146d255363e338c69d594f301854d218eb6", "Url": "https://api.github.com/repos/dreadnought303/MajorMayhem", "Date": "2014-08-12T13:21:57Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_logFormat) == (com.fanniemae.ezpie.LogManager.LogFormat.TEXT)) return _newLineTab;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1264/buggy-version/JAVA.ezPIE.ezpie.src.main.java.com.fanniemae.ezpie.LogManager.java", "BodyUseAPI": [], "Fixed commit": "e27e17347200b7c4fcd6369c206b1beb286437be", "Url": "https://api.github.com/repos/FannieMaeOpenSource/ezPie", "Date": "2017-08-17T14:08:15Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getErrorStream()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (response != null) { java.lang.String message = new java.lang.String(sun.misc.IOUtils.readFully(response, (-1), true)); throw new pl.poznan.put.bsr.bank.exceptions.BankServiceException(message); }else { throw new pl.poznan.put.bsr.bank.exceptions.BankServiceException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2636/buggy-version/src.main.java.pl.poznan.put.bsr.bank.services.BankOperationService.java", "BodyUseAPI": ["sun.misc.IOUtils.readFully(java.io.InputStream,int,boolean)"], "Fixed commit": "110d4b38525d94f4eb1ac8b3e383036988e25e16", "Url": "https://api.github.com/repos/gracz21/bsr-bank-backend", "Date": "2016-12-14T13:16:25Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(BandwidthConstants.BANDWIDTH_SYSPROP_HTTP_MAX_DEFAULT_CONNECTIONS_PER_ROUTE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (defaultMaxPerRoute == null) { defaultMaxPerRoute = java.lang.System.getenv().get(BandwidthConstants.BANDWIDTH_HTTP_MAX_DEFAULT_CONNECTIONS_PER_ROUTE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6129/buggy-version/src.main.java.com.bandwidth.sdk.BandwidthClient.java", "BodyUseAPI": [], "Fixed commit": "58f17e453f4f64b8e85ad5f0dad2f56edbcfbcb8", "Url": "https://api.github.com/repos/Bandwidth/java-bandwidth", "Date": "2015-06-10T19:59:56Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (defaultMaxPerRoute != null) { try { defaultMaxPerRouteNum = java.lang.Integer.parseInt(defaultMaxPerRoute); } catch (java.lang.NumberFormatException ex) { throw new java.lang.RuntimeException(java.lang.String.format(\"Invalid parameter for MAX_DEFAULT_CONNECTIONS_PER_ROUTE %s\", defaultMaxPerRoute), ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6129/buggy-version/src.main.java.com.bandwidth.sdk.BandwidthClient.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "58f17e453f4f64b8e85ad5f0dad2f56edbcfbcb8", "Url": "https://api.github.com/repos/Bandwidth/java-bandwidth", "Date": "2015-06-10T19:59:56Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shipment.getMessageType()) == (EDUCore.MessageType.APPRECEIPT)) { marshalledShipment = new java.lang.String(marshalledShipment).replaceAll(\":?ns2:?\", \"\").getBytes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1142/buggy-version/integrasjonspunkt.src.main.java.no.difi.meldingsutveksling.noarkexchange.StandardBusinessDocumentFactory.java", "BodyUseAPI": [], "Fixed commit": "8b816101022aa754432871670da924de7775aaf6", "Url": "https://api.github.com/repos/difi/move-integrasjonspunkt", "Date": "2017-02-22T09:33:21Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((m_Connection) != null) && (m_Connection.isConnected())) { m_Connection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5572/buggy-version/bundles.binding.org.openhab.binding.modbus.src.main.java.net.wimpi.modbus.io.ModbusTCPTransaction.java", "BodyUseAPI": ["net.wimpi.modbus.net.TCPMasterConnection.close()"], "Fixed commit": "fcc55ec45174c6cb6408958a2199dc4e910ce384", "Url": "https://api.github.com/repos/openhab/openhab1-addons", "Date": "2015-10-02T06:06:45Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastNonColorPickerTool) != null) toolController.selectTool(lastNonColorPickerTool);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1257/buggy-version/src.draw.DrawAreaController.java", "BodyUseAPI": [], "Fixed commit": "a872e81e00bbe30ba6e36b212f949e97a4f0e5f6", "Url": "https://api.github.com/repos/gonutz/draw", "Date": "2015-02-23T08:41:09Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i > 0) { if (((groupGenerations.get((i - 1)).getFirst()) + 1) > largerTime) { largerTime = (groupGenerations.get((i - 1)).getFirst()) + 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7623/buggy-version/Simworm.src.dataStructures.Shell.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.util.LinkedList<java.lang.Integer>>.get(int)", "java.util.HashMap<java.lang.Integer, java.util.LinkedList<java.lang.Integer>>.get(int)", "java.util.LinkedList<java.lang.Integer>.getFirst()", "java.util.LinkedList<java.lang.Integer>.getFirst()"], "Fixed commit": "aaec8b62fa1dab4e234bd841bff5e1d7aeb387f8", "Url": "https://api.github.com/repos/rachelwigell/Simworm-2014", "Date": "2014-04-22T23:50:18Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.oodt.cas.metadata.Metadata.getMetadata(Constants.METADATA_KEY_VERSION)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (version != null) { id = ((((pt.getName()) + \".\") + version) + \".\") + (product.getProductName()); }else { id = ((pt.getName()) + \".\") + (product.getProductName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6099/buggy-version/common.src.main.java.gov.nasa.jpl.edrn.labcas.generators.ProductTypeDotVersionDotProductIdGenerator.java", "BodyUseAPI": [], "Fixed commit": "57776ec9e6c627314a1a19ee1c4e7e2a9f584131", "Url": "https://api.github.com/repos/EDRN/labcas-backend", "Date": "2016-05-16T23:04:01Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(oldPath.equals(\"version\"))) { newPath = remapMotherlodeToThredds(oldPath, checkForUrlType); urlNameMaps.put(oldPath, newPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2774/buggy-version/src.ucar.unidata.idv.ServerUrlRemapper.java", "BodyUseAPI": ["ucar.unidata.idv.ServerUrlRemapper.remapMotherlodeToThredds(java.lang.String,java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "5515539c0b74c673d3687cea8bf2e9be222eb40d", "Url": "https://api.github.com/repos/jon4than/IDV", "Date": "2013-02-05T21:38:10Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["expressionText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.lang.Character.isLetter(expression.charAt(((expression.length()) - 1)))) { expression = expression.substring(0, ((expression.length()) - 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7174/buggy-version/app.src.main.java.com.andela.currencycalculator.Activities.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "f2074f76cca5ee1a2ea30ea1973c8471a50167b7", "Url": "https://api.github.com/repos/dannijax/currency-calculator", "Date": "2016-01-04T15:38:29Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.miraclem4n.mchat.api.API.pexB) { com.miraclem4n.mchat.api.API.pexPermissions = ru.tehkode.permissions.bukkit.PermissionsEx.getPermissionManager(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5239/buggy-version/src.main.java.com.miraclem4n.mchat.api.API.java", "BodyUseAPI": [], "Fixed commit": "17f5fcf4b14210ececbbac23ab6a07ab06439293", "Url": "https://api.github.com/repos/Q0rDev/MChat", "Date": "2013-07-10T12:27:53Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.sdevteam.vinv.game.Level.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (o == null) { java.lang.System.out.println(\"Oh no motherfucker no-o!\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8046/buggy-version/src.ru.sdevteam.vinv.game.logics.LevelController.java", "BodyUseAPI": [], "Fixed commit": "7172f719af7fa6f89ec4d26767be459270114bae", "Url": "https://api.github.com/repos/SleepyDevelopersTeam/vinvasion", "Date": "2015-08-21T18:54:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((names.length) != (hollows.getGaps().size())) { throw new org.panda_lang.panda.implementation.interpreter.parser.PandaParserException(\"Cannot map the mismatched hollows\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7152/buggy-version/panda.src.main.java.org.panda_lang.panda.implementation.interpreter.lexer.token.pattern.TokenHollowRedactor.java", "BodyUseAPI": [], "Fixed commit": "9e0b24081fd64396dc30f6fe144efa0523fdc740", "Url": "https://api.github.com/repos/Panda-Programming-Language/Panda", "Date": "2017-03-03T21:50:27Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (planarRegionsListsDeque.isEmpty()) { clearYoVariables(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7345/buggy-version/IHMCGraphics3DDescription.src.us.ihmc.graphics3DDescription.yoGraphics.YoGraphicPlanarRegionsList.java", "BodyUseAPI": [], "Fixed commit": "2edc58968ce620877b045bc9177e485d310ce90e", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-11-29T17:55:44Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pussycat.minions.SharedVariables.getInstance().getPoints()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((points.size()) > 1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4845/buggy-version/PussycatMinions.src.com.pussycat.minions.PointsWidget.java", "BodyUseAPI": [], "Fixed commit": "26dc2308513c97e28240c337b6dfdbcbc1bbe278", "Url": "https://api.github.com/repos/Cigg/Game-on-Mobile-Cluster", "Date": "2014-05-25T15:08:25Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (applyToRows) { if (useAll) { aggregationGroups = new int[heatmap.getMatrixView().getColumnCount()]; for (int i = 0; i < (heatmap.getMatrixView().getColumnCount()); i++) aggregationGroups[i] = i; }else { aggregationGroups = heatmap.getMatrixView().getSelectedColumns(); } }else { if (useAll) { }else if (useAll) { aggregationGroups = new int[heatmap.getMatrixView().getRowCount()]; for (int i = 0; i < (heatmap.getMatrixView().getRowCount()); i++) aggregationGroups[i] = i; }else { aggregationGroups = heatmap.getMatrixView().getSelectedRows(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6295/buggy-version/gitools-ui-app.src.main.java.org.gitools.ui.heatmap.header.wizard.heatmapheader.AggregatedHeatmapHeaderWizard.java", "BodyUseAPI": [], "Fixed commit": "2857794ccd771f6b7817d8d8c8a776148d44e2f5", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2012-10-11T08:42:02Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user.profilePicture) == null) user.profilePicture = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2059/buggy-version/app.src.main.java.ir.rasen.charsoo.view.activity.user.ActivityUserRegister.java", "BodyUseAPI": [], "Fixed commit": "7f93d938e673809b4b2731782201b23155ddf790", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-08-15T11:45:24Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"listSMSByAddress\".equals(action)) { org.json.JSONObject filters = inputs.optJSONObject(0); result = listSMSByAddress(filters, callbackContext); }else if (\"sendSMS\".equals(action)) { java.lang.String Phone = inputs.optString(0); java.lang.String mess = inputs.optString(1); java.lang.String method = inputs.optString(2); result = sendSMS(Phone, mess, method, callbackContext); }else { android.util.Log.d(\"SMSPlugin\", java.lang.String.format(\"Invalid action passed: %s\", new java.lang.Object[]{ action })); result = new org.apache.cordova.PluginResult(org.apache.cordova.PluginResult.Status.INVALID_ACTION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7017/buggy-version/src.plugnative.cordova.sms.SMSPlugin.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.Object[])", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "1ecf64d8551e1a0dbaede89e6eaf62df1e6b1193", "Url": "https://api.github.com/repos/rinfimate/plugnative-cordova-sms", "Date": "2017-03-07T05:52:58Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tileArray[((int) (((x) - ((x) % 32)) / 32))][((int) ((((y) - ((y) % 32)) + (32 * 2)) / 32))]) instanceof tiles.SolidTile) { hitBelow = true; if (!(jumping)) { y = ((y) - ((y) % 32)) + 17; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4193/buggy-version/Slick2D.src.game.character.Player.java", "BodyUseAPI": [], "Fixed commit": "c959ed4fc0ce928b26215de63eeb71e824fc1db3", "Url": "https://api.github.com/repos/rooseveltcs/MattAndFinnsProject", "Date": "2015-01-13T16:36:18Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (subredditSubscriptionState != null) { org.quantumbadger.redreader.activities.OptionsMenuUtility.addSubscriptionItem(activity, menu, subredditSubscriptionState); if (subredditHasSidebar) org.quantumbadger.redreader.activities.OptionsMenuUtility.add(activity, menu, org.quantumbadger.redreader.activities.OptionsMenuUtility.Option.SIDEBAR, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6872/buggy-version/src.main.java.org.quantumbadger.redreader.activities.OptionsMenuUtility.java", "BodyUseAPI": ["org.quantumbadger.redreader.activities.OptionsMenuUtility.addSubscriptionItem(E,com.actionbarsherlock.view.Menu,RedditSubredditSubscriptionManager.SubredditSubscriptionState)"], "Fixed commit": "12afdeef60dee22785a8d36eb6b74173c0b8c7f8", "Url": "https://api.github.com/repos/nikolaychernov/RedReader", "Date": "2014-08-02T08:25:50Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (subredditSubscriptionState != null) { org.quantumbadger.redreader.activities.OptionsMenuUtility.addSubscriptionItem(activity, menu, subredditSubscriptionState); if (subredditHasSidebar) org.quantumbadger.redreader.activities.OptionsMenuUtility.add(activity, menu, org.quantumbadger.redreader.activities.OptionsMenuUtility.Option.SIDEBAR, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6872/buggy-version/src.main.java.org.quantumbadger.redreader.activities.OptionsMenuUtility.java", "BodyUseAPI": ["org.quantumbadger.redreader.activities.OptionsMenuUtility.addSubscriptionItem(E,com.actionbarsherlock.view.Menu,RedditSubredditSubscriptionManager.SubredditSubscriptionState)"], "Fixed commit": "12afdeef60dee22785a8d36eb6b74173c0b8c7f8", "Url": "https://api.github.com/repos/nikolaychernov/RedReader", "Date": "2014-08-02T08:25:50Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subreddit) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6872/buggy-version/src.main.java.org.quantumbadger.redreader.fragments.PostListingFragment.java", "BodyUseAPI": [], "Fixed commit": "12afdeef60dee22785a8d36eb6b74173c0b8c7f8", "Url": "https://api.github.com/repos/nikolaychernov/RedReader", "Date": "2014-08-02T08:25:50Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPairsSpinner) != null) { outState.putInt(\"position\", mPairsSpinner.getSelectedItemPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4895/buggy-version/BTCeClient.src.main.java.com.QuarkLabs.BTCeClient.fragments.OrdersBookFragment.java", "BodyUseAPI": [], "Fixed commit": "95824ec860885821161e4d3881598e7a3db0da59", "Url": "https://api.github.com/repos/0xnm/BTC-e-client-for-Android", "Date": "2017-07-11T20:52:15Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activityCallback) != null) { activityCallback.makeNotification(ConstantHolder.TRADE_REGISTERED_NOTIF_ID, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4895/buggy-version/BTCeClient.src.main.java.com.QuarkLabs.BTCeClient.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "95824ec860885821161e4d3881598e7a3db0da59", "Url": "https://api.github.com/repos/0xnm/BTC-e-client-for-Android", "Date": "2017-07-11T20:52:15Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activityCallback) != null) { activityCallback.makeNotification(ConstantHolder.ACCOUNT_INFO_NOTIF_ID, notificationText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4895/buggy-version/BTCeClient.src.main.java.com.QuarkLabs.BTCeClient.fragments.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "95824ec860885821161e4d3881598e7a3db0da59", "Url": "https://api.github.com/repos/0xnm/BTC-e-client-for-Android", "Date": "2017-07-11T20:52:15Z"},
{"Line": "=>1533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position.equals(org.alfresco.extension.pdftoolkit.service.POSITION_TOPLEFT)) { r = new com.itextpdf.text.Rectangle(0, pageHeight, width, (pageHeight - height)); }else if (position.equals(org.alfresco.extension.pdftoolkit.service.POSITION_TOPRIGHT)) { r = new com.itextpdf.text.Rectangle((pageWidth - width), pageHeight, pageWidth, (pageHeight - height)); }else if (position.equals(org.alfresco.extension.pdftoolkit.service.POSITION_CENTER)) { r = new com.itextpdf.text.Rectangle(((pageWidth / 2) - (width / 2)), ((pageHeight / 2) - (height / 2)), ((pageWidth / 2) + (width / 2)), ((pageHeight / 2) + (height / 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/70/buggy-version/pdf-toolkit-repo.src.main.java.org.alfresco.extension.pdftoolkit.service.PDFToolkitServiceImpl.java", "BodyUseAPI": ["java.lang.String.equals(org.alfresco.extension.pdftoolkit.service.POSITION_CENTER)", "java.lang.String.equals(org.alfresco.extension.pdftoolkit.service.POSITION_TOPRIGHT)"], "Fixed commit": "b523af14870fd70c103e0c28e4207bb520a20c46", "Url": "https://api.github.com/repos/jpotts/alfresco-pdf-toolkit", "Date": "2015-12-07T20:46:51Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.milburn.mytlc.CalendarHelper.getCalendarNames(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((calNames.length) > 0) { listCalendars.setEnabled(true); listCalendars.setDefaultValue(calNames[0]); }else { listCalendars.setEnabled(false); listCalendars.setValue(\"No calendars found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4320/buggy-version/app.src.main.java.com.milburn.mytlc.SettingsFragment.java", "BodyUseAPI": ["android.preference.ListPreference.setDefaultValue(java.lang.CharSequence)"], "Fixed commit": "206757589da8561edb4b3a28b8e6e9ad4c304e28", "Url": "https://api.github.com/repos/masonmilby/MyTLC-Android", "Date": "2017-11-17T03:43:20Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentJournal) != null) { mCloudPhotoPathList = ((java.util.ArrayList<java.lang.String>) (currentJournal.getmImagePaths())); for (int i = 0; i < (mCloudPhotoPathList.size()); i++) { populateImage(mCloudPhotoPathList.get(i), true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/151/buggy-version/MyEveryDay.app.src.main.java.compsci290.edu.duke.myeveryday.notes.JournalEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "1127e8990dba8ac351fcade7481c2337322fb19c", "Url": "https://api.github.com/repos/lesswifi/Everyday", "Date": "2017-04-25T01:42:28Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuffer.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(result)) { result = org.apache.commons.io.IOUtils.toString(stdout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1780/buggy-version/utils.src.main.java.com.cloud.utils.ssh.SshHelper.java", "BodyUseAPI": [], "Fixed commit": "c9565f8deee9a0c8722b845ce34ad2e5ffb78888", "Url": "https://api.github.com/repos/nvazquez/cloudstack", "Date": "2016-08-24T12:32:55Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberstr.endsWith(\"e\")) || (numberstr.endsWith(\"E\"))) { if (((sr.peek()) == '-') || ((sr.peek()) == '+')) numberstr += sr.read(1); numberstr += sr.readWhile(\"0123456789\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7953/buggy-version/java.src.main.java.net.razorvine.serpent.Parser.java", "BodyUseAPI": [], "Fixed commit": "10c5b353de5ac91bac86e73ff55762a9ae316fa2", "Url": "https://api.github.com/repos/irmen/Serpent", "Date": "2016-12-27T21:49:35Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((review_result_data.size()) == 0) { textView_review_unavailable.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6065/buggy-version/app.src.main.java.com.cf.popularmovies.MovieDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "d1b7aec7ae0821db778be9f26c8002cb76513310", "Url": "https://api.github.com/repos/christianfuerst/PopularMovies2", "Date": "2015-08-24T20:43:27Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((video_result_data.size()) == 0) { textView_video_unavailable.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6065/buggy-version/app.src.main.java.com.cf.popularmovies.MovieDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "d1b7aec7ae0821db778be9f26c8002cb76513310", "Url": "https://api.github.com/repos/christianfuerst/PopularMovies2", "Date": "2015-08-24T20:43:27Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.core.ext.typeinfo.JMethod.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nameAnnotation != null) { name = (name.substring(0, 1).toLowerCase()) + (name.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8463/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.rebind.JsonBuilderGenerator.java", "BodyUseAPI": [], "Fixed commit": "ba808b506a381c12a3371abcc1e59dc4889f3079", "Url": "https://api.github.com/repos/gwtquery/gwtquery", "Date": "2013-12-16T03:40:12Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.core.ext.typeinfo.JMethod.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nameAnnotation != null) { name = (name.substring(0, 1).toLowerCase()) + (name.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8463/buggy-version/gwtquery-core.src.main.java.com.google.gwt.query.rebind.XmlBuilderGenerator.java", "BodyUseAPI": [], "Fixed commit": "ba808b506a381c12a3371abcc1e59dc4889f3079", "Url": "https://api.github.com/repos/gwtquery/gwtquery", "Date": "2013-12-16T03:40:12Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.opencv.android.OpenCVLoader.initDebug()) { java.lang.System.loadLibrary(\"opencv\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2685/buggy-version/app.src.main.java.io.weichao.opencv.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "43d2dfe0d8adf5b7d50ee16ed60215f4df588919", "Url": "https://api.github.com/repos/weichao66666/OpenCV_Min", "Date": "2017-03-09T05:59:37Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Id.NULL.equals(writtenEvent.getCentricId()))) { com.jivesoftware.os.jive.utils.id.TenantIdAndCentricId tenantIdAndCentricId = new com.jivesoftware.os.jive.utils.id.TenantIdAndCentricId(tenantId, writtenEvent.getCentricId()); process(lock, model, model.getCentricWriteTraversers(), className, writtenInstance, tenantIdAndCentricId, batchContext, writtenEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5535/buggy-version/code.com.jivesoftware.os.tasmo.tasmo-lib.src.main.java.com.jivesoftware.os.tasmo.lib.process.TasmoEventProcessor.java", "BodyUseAPI": ["com.jivesoftware.os.tasmo.model.process.WrittenEvent.getCentricId()", "com.jivesoftware.os.tasmo.lib.process.TasmoEventProcessor.process(java.lang.Object,com.jivesoftware.os.tasmo.lib.model.VersionedTasmoViewModel,model.getCentricWriteTraversers(),java.lang.String,com.jivesoftware.os.tasmo.model.process.WrittenInstance,com.jivesoftware.os.jive.utils.id.TenantIdAndCentricId,com.jivesoftware.os.tasmo.lib.process.WrittenEventContext,com.jivesoftware.os.tasmo.model.process.WrittenEvent)"], "Fixed commit": "ff698a622a9b66911b779bcbd8c824f41816d61c", "Url": "https://api.github.com/repos/jivesoftware/tasmo", "Date": "2014-07-16T21:22:34Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["um.edu.mt.cps2002.assignment.part1.Transaction.getAccount(int)", "um.edu.mt.cps2002.assignment.part1.Transaction.getAccount(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((accSrc != null) && (accDst != null)) { if (accSrc.adjustBalance((-(amount)))) { if (accDst.adjustBalance(amount)) { return true; }else { accSrc.adjustBalance(amount); return false; } }else { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5026/buggy-version/src.main.java.um.edu.mt.cps2002.assignment.part1.Transaction.java", "BodyUseAPI": ["um.edu.mt.cps2002.assignment.part1.Account.adjustBalance(long)", "um.edu.mt.cps2002.assignment.part1.Account.adjustBalance(long)", "um.edu.mt.cps2002.assignment.part1.Account.adjustBalance(long)"], "Fixed commit": "b4b89099aa40460656bef0ddcff98e6b3a3881a7", "Url": "https://api.github.com/repos/kylebonnici/Cps2002UOMAssignmentPart1", "Date": "2015-04-06T12:08:31Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (account == null) { account = authDao.getAccountByExternalId(gotIdentity.getExternalId(), gotIdentity.getExternalIdType()); if ((account != null) && (!(org.apache.commons.lang3.StringUtils.equals(CommonStatesConstants.ACTIVE, account.getState())))) { throw new io.github.ibuildthecloud.gdapi.exception.ClientVisibleException(io.github.ibuildthecloud.gdapi.util.ResponseCodes.UNAUTHORIZED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2804/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "045d862f1b984b9eaacd728432bca1465e3ca73a", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-10T18:36:34Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.iaas.api.auth.dao.AuthDao.getAccountByExternalId(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((account != null) && (!(org.apache.commons.lang3.StringUtils.equals(CommonStatesConstants.ACTIVE, account.getState())))) { throw new io.github.ibuildthecloud.gdapi.exception.ClientVisibleException(io.github.ibuildthecloud.gdapi.util.ResponseCodes.UNAUTHORIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2804/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "045d862f1b984b9eaacd728432bca1465e3ca73a", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-10T18:36:34Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.getAccountByExternalId(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (account != null) { throw new io.github.ibuildthecloud.gdapi.exception.ClientVisibleException(io.github.ibuildthecloud.gdapi.util.ResponseCodes.UNAUTHORIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2804/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "045d862f1b984b9eaacd728432bca1465e3ca73a", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-10T18:36:34Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sequenceid == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1070/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.SequenceIdAccounting.java", "BodyUseAPI": [], "Fixed commit": "e5be3516b45a775a16dc1b7c54f3de700cd45a57", "Url": "https://api.github.com/repos/Eshcar/hbase", "Date": "2015-08-18T13:03:08Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<byte[], java.lang.Long>.get(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (l == null) { m.put(familyName, sequenceid); replaced = true; }else if (sequenceid > l) { replaced = m.replace(familyName, l, sequenceid); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1070/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.wal.SequenceIdAccounting.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentMap<byte[], java.lang.Long>.replace(byte[],java.lang.Long,java.lang.Long)"], "Fixed commit": "e5be3516b45a775a16dc1b7c54f3de700cd45a57", "Url": "https://api.github.com/repos/Eshcar/hbase", "Date": "2015-08-18T13:03:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursor.moveToFirst()) return cursorToInteger(cursor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2427/buggy-version/app.src.main.java.com.example.perfectmenu.ClassifyDatasource.java", "BodyUseAPI": ["com.example.perfectmenu.ClassifyDatasource.cursorToInteger(android.database.Cursor)"], "Fixed commit": "5199a239869d1af15a20b6f0ba7e5ba3c8bcd7b9", "Url": "https://api.github.com/repos/PerfectMenu/PerfectMenu", "Date": "2016-06-01T05:59:36Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.illinois.ncsa.versus.store.ComparisonServiceImpl.getComparison(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((c.getStatus()) != (edu.illinois.ncsa.versus.engine.impl.Job.ComparisonStatus.DONE)) { c.wait(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3996/buggy-version/src.main.java.edu.illinois.ncsa.versus.restlet.MultiLabelDecisionSupport.java", "BodyUseAPI": ["edu.illinois.ncsa.versus.restlet.Comparison.wait()"], "Fixed commit": "303f63bbd74006fefe13f81ae4104bdec23c21b9", "Url": "https://api.github.com/repos/VersusProject/versus-service", "Date": "2013-01-03T17:45:30Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom.Element.getChild(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (dirsE != null) { java.util.List<org.jdom.Element> dirs = dirsE.getChildren(); for (org.jdom.Element dir : dirs) { wfdm.addDirectory(dir.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4855/buggy-version/seqware-pipeline.src.main.java.net.sourceforge.seqware.pipeline.workflowV2.WorkflowXmlParser.java", "BodyUseAPI": ["org.jdom.Element.getChildren()"], "Fixed commit": "c1b67bb509cd86d4f579fc0c7bc458ecc0e30290", "Url": "https://api.github.com/repos/SeqWare/seqware", "Date": "2012-10-24T02:46:27Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_tier) == (LeagueRankedTier.CHALLENGER)) elo += LeagueRankedRank.V.getApproximateEloContribution(); else elo += _rank.getApproximateEloContribution();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9164/buggy-version/src.com.achimala.leaguelib.models.LeagueSummonerLeagueStats.java", "BodyUseAPI": [], "Fixed commit": "b6a91ff43eccd529babcff9eb9c8da5e92e3dc05", "Url": "https://api.github.com/repos/achimala/leaguelib", "Date": "2013-02-21T02:22:36Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getValue()) == null) || (event.getValue().trim().equalsIgnoreCase(\"\"))) { mv.set(\"value\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/73/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.browse.FormUtilities.java", "BodyUseAPI": [], "Fixed commit": "559872ef95e58c2fc2d4bba39a0e8c000c18aabc", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2016-09-09T14:43:32Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((linkType < (StevenDimDoors.mod_pocketDim.core.LinkTypes.ENUM_MIN)) || (linkType > (StevenDimDoors.mod_pocketDim.core.LinkTypes.ENUM_MAX))) && (linkType != (StevenDimDoors.mod_pocketDim.core.LinkTypes.CLIENT_SIDE))) { linkType = StevenDimDoors.mod_pocketDim.core.LinkTypes.NORMAL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/452/buggy-version/StevenDimDoors.mod_pocketDim.saving.DDSaveHandler.java", "BodyUseAPI": [], "Fixed commit": "d4fc43482dcb6117ec3028a5496a6c5e0945f16a", "Url": "https://api.github.com/repos/skyboy/DimDoors", "Date": "2013-11-06T04:06:21Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cardinalityAggregation.has(java.lang.String.valueOf(io.searchbox.core.search.aggregation.AggregationField.VALUE))) && (!(cardinalityAggregation.get(java.lang.String.valueOf(io.searchbox.core.search.aggregation.AggregationField.VALUE)).isJsonNull()))) { cardinality = cardinalityAggregation.get(java.lang.String.valueOf(io.searchbox.core.search.aggregation.AggregationField.VALUE)).getAsLong(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2491/buggy-version/jest-common.src.main.java.io.searchbox.core.search.aggregation.CardinalityAggregation.java", "BodyUseAPI": [], "Fixed commit": "d2d46e483682e963550fa7d70f7f102ed208749e", "Url": "https://api.github.com/repos/SethAbrams/Jest", "Date": "2016-08-08T21:03:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ranges.length) > 0) dataset.addSeries(chartDataPack.getName(), ranges, ((int) (bucketsize.doubleValue())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4631/buggy-version/src.com.sciome.charts.jfree.SciomeHistogramJFree.java", "BodyUseAPI": ["org.jfree.data.statistics.HistogramDataset.addSeries(chartDataPack.getName(),double[],((int) (bucketsize.doubleValue())))"], "Fixed commit": "f701c6fd9f1f3b03a8bd3cc3502d18b898f34981", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2017-12-11T05:09:58Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((series.getData().size()) > 0) seriesData.add(series);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4631/buggy-version/src.com.sciome.charts.jfree.SciomeHistogramJFree.java", "BodyUseAPI": ["java.util.List<com.sciome.charts.model.SciomeSeries<java.lang.String, java.lang.Number>>.add(com.sciome.charts.model.SciomeSeries<java.lang.String, java.lang.Number>)"], "Fixed commit": "f701c6fd9f1f3b03a8bd3cc3502d18b898f34981", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2017-12-11T05:09:58Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.length) > 0) dataset.addSeries(key, values, ((int) (bucketsize.doubleValue())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4631/buggy-version/src.com.sciome.charts.jfree.SciomeHistogramJFree.java", "BodyUseAPI": ["org.jfree.data.statistics.HistogramDataset.addSeries(java.lang.String,double[],((int) (bucketsize.doubleValue())))"], "Fixed commit": "f701c6fd9f1f3b03a8bd3cc3502d18b898f34981", "Url": "https://api.github.com/repos/auerbachs/BMDExpress-2", "Date": "2017-12-11T05:09:58Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.codeanalysis.bytecode.ReadFieldRetriever.getLineNumber(access.getStartPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (linNum == (lineNumber)) { fullFieldName = access.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2197/buggy-version/microbat.src.main.microbat.codeanalysis.bytecode.ReadFieldRetriever.java", "BodyUseAPI": [], "Fixed commit": "1907d79b2ab0c404a43a983d64eb79419c775a37", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2016-08-16T09:30:59Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((point.getLineNumber()) == 143) { java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2197/buggy-version/microbat.src.main.microbat.codeanalysis.bytecode.LineNumberVisitor.java", "BodyUseAPI": [], "Fixed commit": "1907d79b2ab0c404a43a983d64eb79419c775a37", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2016-08-16T09:30:59Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) == 1) { hotelBeanList.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5654/buggy-version/app.src.main.java.com.bqy.ssqyb.home.seek.hotel.activity.AllHotelActivity.java", "BodyUseAPI": [], "Fixed commit": "0ad1330a4e99a382099c0445c39e4c8b7c5326fe", "Url": "https://api.github.com/repos/nanke1992/ssqyb-0920", "Date": "2017-09-21T02:11:03Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.permissions) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3284/buggy-version/src.main.java.com.sdm.master.entity.RoleEntity.java", "BodyUseAPI": [], "Fixed commit": "2ecf32d18d31539e2086590e6e962e695146e709", "Url": "https://api.github.com/repos/Htoonlin/MasterAPI", "Date": "2017-08-09T07:04:17Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tableModel.getValueAt(row, edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.gui.ListRequirementsPanel.ESTIMATE)) == null) { isIterationValid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7985/buggy-version/RequirementsManagement.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.gui.ListRequirementsPanel.java", "BodyUseAPI": [], "Fixed commit": "89e32e2af0134593d5274ac8a8ebe3c1aea30a65", "Url": "https://api.github.com/repos/alexhenning/wpi-suite-tng", "Date": "2013-04-17T20:21:38Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((atomExp.contains(\"(\")) || (atomExp.contains(\")\"))) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"expression: %s is invalid syntax.\", trimmed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6095/buggy-version/rdf-store.src.main.java.logic.PLParser.java", "BodyUseAPI": [], "Fixed commit": "50d40e5155d20f0851c5541d60b625645b7c117e", "Url": "https://api.github.com/repos/taczge/rdf-store", "Date": "2014-04-16T08:01:58Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyword == null) { throw new java.lang.IllegalArgumentException(\"Strings must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6531/buggy-version/FastStringMatcher.src.main.java.com.github.pekoto.faststringmatcher.StringMatcher.java", "BodyUseAPI": [], "Fixed commit": "8605c2372ee3138c408341038ebef04884d5eeb6", "Url": "https://api.github.com/repos/pekoto/FastFuzzyStringMatcher", "Date": "2017-08-28T22:22:10Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyword.length()) == 0) { throw new java.lang.IllegalArgumentException(\"Strings must not be empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6531/buggy-version/FastStringMatcher.src.main.java.com.github.pekoto.faststringmatcher.StringMatcher.java", "BodyUseAPI": [], "Fixed commit": "8605c2372ee3138c408341038ebef04884d5eeb6", "Url": "https://api.github.com/repos/pekoto/FastFuzzyStringMatcher", "Date": "2017-08-28T22:22:10Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from.getWordsInSubtree()) == 0) { from.set(c, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6806/buggy-version/src.main.java.ru.spbau.mit.StringSetImpl.java", "BodyUseAPI": ["ru.spbau.mit.TrieNode.set(char,<nulltype>)"], "Fixed commit": "339ae4804c5df99bd4307dbe0d3eea0ca14fa331", "Url": "https://api.github.com/repos/egorbunov/assignments-2016-1", "Date": "2016-03-05T17:22:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((instanceIds.size()) > 0) wh.terminateWorkerAction(instanceIds);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/445/buggy-version/application.src.com.pod.manager.SystemSchedulerTask.java", "BodyUseAPI": ["com.pod.manager.WorkerHandler.terminateWorkerAction(java.util.List<java.lang.String>)"], "Fixed commit": "3f86c42725c262885b36637375f1711886a932d0", "Url": "https://api.github.com/repos/gpuenteallott/pod", "Date": "2014-07-22T03:27:08Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["corp.model.evaluation.HyperParameterGridSearch.getBestPosition()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (bestParameters != null) foldModel.setHyperParameters(bestParameters.getCoordinates());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5189/buggy-version/src.corp.model.evaluation.KFoldCrossValidation.java", "BodyUseAPI": ["corp.model.Model.setHyperParameters(bestParameters.getCoordinates())", "HyperParameterGridSearch.GridPosition.getCoordinates()"], "Fixed commit": "d60859015b721aa83e5264f9e539586d2746e25c", "Url": "https://api.github.com/repos/forkunited/CorporateRelationExtraction", "Date": "2013-10-14T00:34:04Z"},
{"Line": "=>533", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5939/buggy-version/src.main.java.com.lowagie.text.pdf.XfaForm.java", "BodyUseAPI": [], "Fixed commit": "754368c412d3b3ff66360dad7c29d02a17f42a99", "Url": "https://api.github.com/repos/daviddurand/iText-4.2.0", "Date": "2014-02-12T02:49:34Z"},
{"Line": "=>5905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ref.length()) == 0) || ((var.length()) == 0)) { return \"Complex\"; }else if ((ref.charAt(0)) != (var.charAt(0))) { return \"Complex\"; }else if ((((ref.length()) == 1) && ((var.length()) > 1)) && (var.startsWith(ref))) { return \"Insertion\"; }else if ((((ref.length()) > 1) && ((var.length()) == 1)) && (ref.startsWith(var))) { return \"Deletion\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5990/buggy-version/src.main.java.com.astrazeneca.vardict.VarDict.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "15222d3b2802801aaf2e461dfe4d30c353a82eec", "Url": "https://api.github.com/repos/AstraZeneca-NGS/VarDictJava", "Date": "2015-12-03T15:21:55Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastLocation) != null) { jObj.put(\"listener\", lastLocation.toJSON()); }else { java.lang.String android_id = Settings.Secure.getString(com.schematical.adam.AdamWorldActivity.getInstance().getContentResolver(), Settings.Secure.ANDROID_ID); jObj.put(\"listener_id\", android_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3900/buggy-version/app.src.main.java.com.schematical.adam.AdamWorldActivity.java", "BodyUseAPI": [], "Fixed commit": "41e778394786f2eaa4cda78a129a50bedac85e05", "Url": "https://api.github.com/repos/schematical/adam-android-sdk", "Date": "2015-05-02T22:26:00Z"},
{"Line": "=>1091", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aState.getEndTimestamp()) < 0) aState.setEndTimestamp(schedSwitchTS.get(aCpu));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6987/buggy-version/fr.inria.soctrace.tools.importer.ctf.fr.inria.soctrace.tools.importer.ctftrace.src.fr.inria.soctrace.tools.importer.ctftrace.core.CtfParser.java", "BodyUseAPI": ["fr.inria.soctrace.lib.model.State.setEndTimestamp(java.lang.Long)"], "Fixed commit": "740615ed9ec0b026e2863ab3ed74928965802e03", "Url": "https://api.github.com/repos/soctrace-inria/framesoc.importers", "Date": "2015-02-25T13:04:04Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mutabilitydetector.checkers.CollectionTypeWrappedInUnmodifiableIdiomChecker.checkWrappedInUnmodifiable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((unmodifiableWrapResult.canBeWrapped) && (unmodifiableWrapResult.invokesWhitelistedWrapperMethod)) { if (unmodifiableWrapResult.safelyCopiesBeforeWrapping) { break; }else { setResult(\"Attempts to wrap mutable collection type without safely performing a copy first.\", fieldLocation(fieldName, org.mutabilitydetector.locations.ClassLocation.fromInternalName(ownerClass)), MutabilityReason.ABSTRACT_COLLECTION_TYPE_TO_FIELD); break; } }else if ((unmodifiableWrapResult.canBeWrapped) && (!(unmodifiableWrapResult.invokesWhitelistedWrapperMethod))) { setResult(\"Attempts to wrap mutable collection type using a non-whitelisted unmodifiable wrapper method.\", fieldLocation(fieldName, org.mutabilitydetector.locations.ClassLocation.fromInternalName(ownerClass)), MutabilityReason.ABSTRACT_COLLECTION_TYPE_TO_FIELD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2706/buggy-version/src.main.java.org.mutabilitydetector.checkers.MutableTypeToFieldChecker.java", "BodyUseAPI": [], "Fixed commit": "c3c945fe11bcf92e43a629ee543668a46e49ac2c", "Url": "https://api.github.com/repos/MutabilityDetector/MutabilityDetector", "Date": "2013-01-08T22:12:53Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.scheduler.urlsCrawledContain(newLink)) && (!(this.scheduler.urlsQueueContain(newLink)))) { java.lang.Integer newLinkPriority = commonlib.TopicComparator.getStringPriority(newLink); if (!(this.mysqlConnection.insertIntoLinkQueueTable(newLink, domainId, newLinkPriority, persistent, null, null))) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/152/buggy-version/newscrawler.BaseParser.java", "BodyUseAPI": ["commonlib.TopicComparator.getStringPriority(java.lang.String)", "dbconnection.MySqlConnection.insertIntoLinkQueueTable(java.lang.String,int,java.lang.Integer,int,<nulltype>,<nulltype>)"], "Fixed commit": "30cac07a418053b9b16f875211ac44f5228d863a", "Url": "https://api.github.com/repos/hungtantran/WatchPriceAnalysis", "Date": "2014-10-25T17:24:29Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parser.currentToken()) == (org.elasticsearch.hadoop.serialization.Parser.Token.VALUE_NULL)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/233/buggy-version/src.main.java.org.elasticsearch.hadoop.serialization.ScrollReader.java", "BodyUseAPI": [], "Fixed commit": "ef345b9073be58b6b4f48d1a4278fae9ba957d90", "Url": "https://api.github.com/repos/elasticsearch/elasticsearch-hadoop", "Date": "2013-12-17T15:13:02Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (line != null) { android.util.Log.e(interdroid.swan.sensors.impl.RainSensor.TAG, (\"Rain Sensor Value: \" + (java.lang.Integer.parseInt(line.substring(0, 3))))); float value = convertValueToMMPerHr(java.lang.Integer.parseInt(line.substring(0, 3))); putValueTrimSize(valuePath, id, start, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5153/buggy-version/phone.src.main.java.interdroid.swan.sensors.impl.RainSensor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "android.util.Log.e(java.lang.String,java.lang.String)", "interdroid.swan.sensors.impl.RainSensor.RainPoller.convertValueToMMPerHr(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "271d1939d2e6801d89412926cf30191f869b9f21", "Url": "https://api.github.com/repos/swandroid/swan-sense-studio", "Date": "2017-05-17T10:04:24Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImageView) != null) { view = mImageView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7425/buggy-version/src.me.dibber.blablablapp.PostDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "c31b5715ab2b41b25b83d051b04f36315b6aae0b", "Url": "https://api.github.com/repos/joeybattja/BlaBlaBlAppDibber", "Date": "2015-02-07T23:00:22Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTable().getVisibleRowCount()) != null) { return super.getPreferredScrollableViewportSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2276/buggy-version/flexodesktop.GUI.flexointerfacebuilder.src.main.java.org.openflexo.fib.view.widget.FIBTableWidget.java", "BodyUseAPI": [], "Fixed commit": "580df9f299b89aa91ab17db26bb167a8c8b004a2", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-01-24T10:12:12Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((sound == null) || ((sound.length()) == 0)) { n.defaults |= android.app.Notification.DEFAULT_SOUND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3332/buggy-version/Ports.Android.src.com.codename1.impl.android.LocalNotificationPublisher.java", "BodyUseAPI": [], "Fixed commit": "ea74e0b110d72fc6f668a485c898e3465f7f32e8", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-06-27T19:23:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.google.cloud.tools.intellij.appengine.cloud.AppEngineDeployable) (source)).getEnvironment().equals(AppEngineEnvironment.APP_ENGINE_FLEX)) { return new com.google.cloud.tools.intellij.appengine.cloud.flexible.AppEngineFlexibleDeploymentEditor(project); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6991/buggy-version/google-cloud-tools-plugin.src.com.google.cloud.tools.intellij.appengine.cloud.AppEngineDeploymentConfigurator.java", "BodyUseAPI": [], "Fixed commit": "ada65212ee74c49f75361d87a8e2f63e7e454549", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-12-23T15:59:47Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (definition.status().headerIsOK()) { builder.addAllParam(defSerializer.writeParameters(definition.getParameters())); if ((definition.getResultType()) != null) builder.setType(defSerializer.writeExpr(definition.getResultType())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/14/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.module.caching.serialization.DefinitionStateSerialization.java", "BodyUseAPI": ["DefinitionProtos.Definition.FunctionData.Builder.addAllParam(defSerializer.writeParameters(definition.getParameters()))", "com.jetbrains.jetpad.vclang.module.caching.serialization.DefinitionSerialization.writeParameters(definition.getParameters())", "com.jetbrains.jetpad.vclang.module.caching.serialization.DefinitionSerialization.writeExpr(definition.getResultType())", "DefinitionProtos.Definition.FunctionData.Builder.setType(defSerializer.writeExpr(definition.getResultType()))", "com.jetbrains.jetpad.vclang.module.caching.serialization.FunctionDefinition.getResultType()", "com.jetbrains.jetpad.vclang.module.caching.serialization.FunctionDefinition.getResultType()", "com.jetbrains.jetpad.vclang.module.caching.serialization.FunctionDefinition.getParameters()"], "Fixed commit": "2a572be5b045cd6560d3c66a4e85a587c6694015", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2017-11-28T16:33:02Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (definition.status().headerIsOK()) { builder.setSort(defSerializer.writeSort(definition.getSort())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/14/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.module.caching.serialization.DefinitionStateSerialization.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.module.caching.serialization.DefinitionSerialization.writeSort(definition.getSort())", "DefinitionProtos.Definition.DataData.Builder.setSort(defSerializer.writeSort(definition.getSort()))", "com.jetbrains.jetpad.vclang.module.caching.serialization.DataDefinition.getSort()"], "Fixed commit": "2a572be5b045cd6560d3c66a4e85a587c6694015", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2017-11-28T16:33:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { savedInstanceState.clear(); savedInstanceState = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5476/buggy-version/FairyPlugin.src.main.java.com.limpoxe.fairy.core.loading.WaitForLoadingPluginActivity.java", "BodyUseAPI": ["android.os.Bundle.clear()"], "Fixed commit": "12370cc083c971f0b4170d6d821dc46e0400aee4", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2016-11-23T12:48:47Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.voovan.tools.ByteBufferChannel.indexOf(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index > 0) { byteBuffer.position(0); java.nio.ByteBuffer lineBuffer = java.nio.ByteBuffer.allocate((index + 1)); int readSize = readHead(lineBuffer); if (readSize == (index + 1)) { lineStr = org.voovan.tools.TByteBuffer.toString(lineBuffer); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1292/buggy-version/src.main.java.org.voovan.tools.ByteBufferChannel.java", "BodyUseAPI": ["java.nio.ByteBuffer.allocate(int)"], "Fixed commit": "b540be94be401890538dae56a6fcd01ffa1e77f7", "Url": "https://api.github.com/repos/helyho/Voovan", "Date": "2017-03-23T04:58:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((endDate.isEmpty()) == true) || (endDate == null)) || (endDate.equals(\"0000-00-00\"))) { endDate = \"3000-01-01\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3509/buggy-version/TAP2.0.src.tap2.pkg0.dbQuery.java", "BodyUseAPI": [], "Fixed commit": "16b8a159ce41877eba797200c3d75157b941a977", "Url": "https://api.github.com/repos/4th8/Tap2.0", "Date": "2016-11-16T06:31:00Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((startDate.isEmpty()) == true) || (startDate == null)) || (startDate.equals(\"0000-00-00\"))) { startDate = \"2000-01-01\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3509/buggy-version/TAP2.0.src.tap2.pkg0.dbQuery.java", "BodyUseAPI": [], "Fixed commit": "16b8a159ce41877eba797200c3d75157b941a977", "Url": "https://api.github.com/repos/4th8/Tap2.0", "Date": "2016-11-16T06:31:00Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p.getRemark().toString().equals(\"~\"))) { java.lang.String remark = p.getRemark().toString(); bufferedWriter.write((((vcf.getNotes()) + \":\") + remark)); bufferedWriter.newLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/424/buggy-version/src.main.java.seedu.address.storage.ExportVCardFile.java", "BodyUseAPI": ["seedu.address.model.person.ReadOnlyPerson.getRemark()", "p.getRemark().toString()"], "Fixed commit": "e95b6b126b4d35034ba63c10da67049a3f09326d", "Url": "https://api.github.com/repos/darrinloh/OneBook", "Date": "2017-11-03T11:59:58Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["p.getName().toString().split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((arrayName.length) == (seedu.address.storage.ExportVCardFile.INDEX_TWO)) { bufferedWriter.write(arrayName[seedu.address.storage.ExportVCardFile.INDEX_ONE]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/424/buggy-version/src.main.java.seedu.address.storage.ExportVCardFile.java", "BodyUseAPI": ["java.io.BufferedWriter.write(java.lang.String)"], "Fixed commit": "e95b6b126b4d35034ba63c10da67049a3f09326d", "Url": "https://api.github.com/repos/darrinloh/OneBook", "Date": "2017-11-03T11:59:58Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.opencb.biodata.models.variant.Variant>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((variant.getType()) == null) { variant.setType(variant.inferType(variant.getReference(), variant.getAlternate(), variant.getLength())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7593/buggy-version/cellbase-core.src.main.java.org.opencb.cellbase.core.variant.annotation.VariationDataReader.java", "BodyUseAPI": ["org.opencb.biodata.models.variant.Variant.setType(variant.inferType(variant.getReference(), variant.getAlternate(), variant.getLength()))", "org.opencb.biodata.models.variant.Variant.inferType(variant.getReference(),variant.getAlternate(),variant.getLength())", "org.opencb.biodata.models.variant.Variant.getLength()", "org.opencb.biodata.models.variant.Variant.getReference()", "org.opencb.biodata.models.variant.Variant.getAlternate()"], "Fixed commit": "26a105eca8a4e0d62c1cc138367746d9b9f5ef14", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2016-02-24T17:21:59Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { queryFlags = android.content.pm.PackageManager.MATCH_ALL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7626/buggy-version/app.src.main.java.nz.co.chrisdrake.events.util.CustomTabsHelper.java", "BodyUseAPI": [], "Fixed commit": "e629f73c341e5c86d5710b8ad1c240cfb6a9ff7c", "Url": "https://api.github.com/repos/Chris-Drake/events", "Date": "2016-01-11T06:42:00Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((((((((us.wardware.firstfruits.Settings.getInstance().getStringValue(Settings.DATABASE_SERVER)) == null) || ((us.wardware.firstfruits.Settings.getInstance().getStringValue(Settings.DATABASE_SERVER).length()) < 1)) || ((us.wardware.firstfruits.Settings.getInstance().getStringValue(Settings.DATABASE_PORT)) == null)) || ((us.wardware.firstfruits.Settings.getInstance().getStringValue(Settings.DATABASE_PORT).length()) < 1)) || ((us.wardware.firstfruits.Settings.getInstance().getStringValue(Settings.DATABASE_NAME)) == null)) || ((us.wardware.firstfruits.Settings.getInstance().getStringValue(Settings.DATABASE_NAME).length()) < 1)) || ((us.wardware.firstfruits.Settings.getInstance().getStringValue(Settings.DATABASE_COLLECTION_NAME)) == null)) || ((us.wardware.firstfruits.Settings.getInstance().getStringValue(Settings.DATABASE_COLLECTION_NAME).length()) < 1)) { java.lang.System.out.println(\"MongoDB database configuration not set - skipping.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5796/buggy-version/src.us.wardware.firstfruits.RecordManager.java", "BodyUseAPI": [], "Fixed commit": "ea9a62f05a009656b8c2c6007c31584c402f9818", "Url": "https://api.github.com/repos/TransWebT/First-Fruits", "Date": "2015-03-28T16:12:34Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (next != null) { findNearest(next, search, (depth + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4398/buggy-version/src.org.traccar.helper.LocationTree.java", "BodyUseAPI": ["org.traccar.helper.LocationTree.findNearest(org.traccar.helper.LocationTree.Item,org.traccar.helper.LocationTree.Item,int)"], "Fixed commit": "ed7fe94f1da3b333a1ffff4f9238bab7484a81ca", "Url": "https://api.github.com/repos/fleetr-eu/traccar", "Date": "2016-04-14T22:15:56Z"},
{"Line": "=>680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (canUnbox(toType)) { if (isCeylonBoolean(toType)) { return makeBoolean(false); }else if (isCeylonFloat(toType)) { return make().Literal(0.0); }else if (isCeylonInteger(toType)) { return makeLong(0); }else if (isCeylonCharacter(toType)) { return make().Literal('\\u0000'); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3120/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.StatementTransformer.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.java.codegen.StatementTransformer.IsCond.isCeylonFloat(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.compiler.java.codegen.StatementTransformer.IsCond.isCeylonInteger(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.compiler.java.codegen.StatementTransformer.IsCond.isCeylonCharacter(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.compiler.java.codegen.StatementTransformer.IsCond.isCeylonBoolean(com.redhat.ceylon.compiler.typechecker.model.ProducedType)"], "Fixed commit": "498a5065b6c8feac477c5a1052b52c869314ddfc", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2012-10-08T10:40:22Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mediaPlayer) == null) { createMediaPlayerIfNeeded(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5604/buggy-version/app.src.main.java.com.cpacm.moemusic.music.MusicPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "70828951deecda2a464e221c48f77f14c47cbc89", "Url": "https://api.github.com/repos/cpacm/MoeMusic", "Date": "2016-09-21T10:27:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (buffer != null) { java.lang.System.arraycopy(buffer, 0, array, 0, size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6960/buggy-version/jemma.osgi.javagal.src.main.java.org.energy_home.jemma.javagal.layers.object.ByteArrayObject.java", "BodyUseAPI": [], "Fixed commit": "055fb7589855398f30efd22a9af4e0e77caa90e3", "Url": "https://api.github.com/repos/Tophans/jemma", "Date": "2014-11-05T10:44:44Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((status) != (EUpdateStatusType.UPDATE_DECLINED)) { status = EUpdateStatusType.UPDATE_AVAILABLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3035/buggy-version/org.bbaw.bts.core.controller.impl.src.org.bbaw.bts.core.controller.impl.generalController.ApplicationUpdateControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "01c2dd349dcab0cfd1e5122e9df7b11524ed72e8", "Url": "https://api.github.com/repos/JKatzwinkel/bts", "Date": "2016-04-19T15:21:33Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((status) != (EUpdateStatusType.UPDATE_DECLINED)) { status = ((updates.length) > 0) ? EUpdateStatusType.UPDATE_AVAILABLE : EUpdateStatusType.NO_UPDATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3035/buggy-version/org.bbaw.bts.core.controller.impl.src.org.bbaw.bts.core.controller.impl.generalController.ApplicationUpdateControllerImpl.java", "BodyUseAPI": [], "Fixed commit": "01c2dd349dcab0cfd1e5122e9df7b11524ed72e8", "Url": "https://api.github.com/repos/JKatzwinkel/bts", "Date": "2016-04-19T15:21:33Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getImageUri()) != null) { java.io.File file = new java.io.File(item.getImageUri().getPath()); file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6791/buggy-version/src.com.example.howlertodolist.ItemManager.java", "BodyUseAPI": ["com.example.howlertodolist.Item.getImageUri()", "item.getImageUri().getPath()"], "Fixed commit": "bda91f5d8909eb3976877e35333867b69c1c56f4", "Url": "https://api.github.com/repos/iancl/AndroidDemo", "Date": "2013-09-06T17:43:04Z"},
{"Line": "=>748", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((boolean.class) == colClass) || ((java.lang.Boolean.class) == colClass)) { colValues.put(colName, ((java.lang.Boolean) (colValue))); }else if ((java.lang.String.class) == colClass) { colValues.put(colName, ((java.lang.String) (colValue))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3296/buggy-version/cn.ieclipse.aorm.core.src.cn.ieclipse.aorm.Session.java", "BodyUseAPI": [], "Fixed commit": "61813c71b9c0284651256e6445afdf614c497178", "Url": "https://api.github.com/repos/Jamling/Android-ORM", "Date": "2016-12-06T03:02:46Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.net.BindException) { org.dapnet.core.rest.RestManager.logger.fatal(e.getCause().getMessage()); }else { org.dapnet.core.rest.RestManager.logger.catching(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3387/buggy-version/src.org.dapnet.core.rest.RestManager.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.fatal(java.lang.String)", "java.lang.Throwable.getMessage()", "org.apache.logging.log4j.Logger.catching(java.lang.Exception)", "java.lang.Exception.getCause()"], "Fixed commit": "f4bbc576def21126ec14e3f968d165848bff1e3b", "Url": "https://api.github.com/repos/DecentralizedAmateurPagingNetwork/Core", "Date": "2016-12-08T13:20:32Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (genericType.startsWith(\"*\")) { if (type.startsWith(\"*\")) { theLabel = TOPICS.ONTOLOGY_ROOT.label; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8863/buggy-version/src.main.java.ioc.liturgical.ws.managers.databases.external.neo4j.ExternalDbManager.java", "BodyUseAPI": [], "Fixed commit": "b395d8c9ac8f6670819da26fd45e61ec00bf8922", "Url": "https://api.github.com/repos/OCMC-Translation-Projects/ioc-liturgical-ws", "Date": "2017-07-13T16:49:12Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (theProperty.startsWith(\"*\")) { theProperty = \"name\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8863/buggy-version/src.main.java.ioc.liturgical.ws.managers.databases.external.neo4j.ExternalDbManager.java", "BodyUseAPI": [], "Fixed commit": "b395d8c9ac8f6670819da26fd45e61ec00bf8922", "Url": "https://api.github.com/repos/OCMC-Translation-Projects/ioc-liturgical-ws", "Date": "2017-07-13T16:49:12Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.isRecurring()) { tasksToDisplay = new taskcommando.logic.datastructures.TaskList(); tasksToDisplay.addTask(task); viewCommands.setType(ViewParameters.VIEW_RECURRING); viewCommands.setRecurringTasksToDisplay(tasksToDisplay); }else if (task.isDeadLine()) { viewCommands.setType(ViewParameters.VIEW_DEADLINE); }else if (task.isFloating()) { viewCommands.setType(ViewParameters.VIEW_FLOATING); }else { viewCommands.setType(ViewParameters.VIEW_NORMAL); viewCommands.setStartDate(task.getStartDateTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1100/buggy-version/src.taskcommando.logic.commands.CommandView.java", "BodyUseAPI": ["taskcommando.logic.datastructures.Task.isFloating()", "taskcommando.logic.datastructures.Task.getStartDateTime()", "taskcommando.logic.datastructures.UiSettings.setStartDate(task.getStartDateTime())", "taskcommando.logic.datastructures.Task.isDeadLine()", "taskcommando.logic.datastructures.TaskList.addTask(taskcommando.logic.datastructures.Task)"], "Fixed commit": "c09bf0b827b8f5eb25cef44fc7fba98cbe39e964", "Url": "https://api.github.com/repos/cs2103jan2015-t13-3j/main", "Date": "2015-04-11T10:24:11Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recurringTasksToDisplay.size()) != 0) { this.headerToDisplay = taskcommando.logic.datastructures.UiSettings.VIEW_HEADER_RECURRING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1100/buggy-version/src.taskcommando.logic.datastructures.UiSettings.java", "BodyUseAPI": [], "Fixed commit": "c09bf0b827b8f5eb25cef44fc7fba98cbe39e964", "Url": "https://api.github.com/repos/cs2103jan2015-t13-3j/main", "Date": "2015-04-11T10:24:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.i.getHolder()) instanceof org.bukkit.entity.Player) { ((org.bukkit.entity.Player) (this.i.getHolder())).updateInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4435/buggy-version/src.main.java.com.laytonsmith.abstraction.bukkit.BukkitMCInventory.java", "BodyUseAPI": ["org.bukkit.inventory.PlayerInventory.getHolder()", "((org.bukkit.entity.Player) (this.i.getHolder())).updateInventory()"], "Fixed commit": "7c4280a2234d57b5cff891d24103a03b43cd46e3", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-09-05T04:51:56Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.i.getHolder()) instanceof org.bukkit.entity.Player) { ((org.bukkit.entity.Player) (this.i.getHolder())).updateInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4435/buggy-version/src.main.java.com.laytonsmith.abstraction.bukkit.BukkitMCInventory.java", "BodyUseAPI": ["org.bukkit.inventory.PlayerInventory.getHolder()", "((org.bukkit.entity.Player) (this.i.getHolder())).updateInventory()"], "Fixed commit": "7c4280a2234d57b5cff891d24103a03b43cd46e3", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-09-05T04:51:56Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.i.getHolder()) instanceof org.bukkit.entity.Player) { ((org.bukkit.entity.Player) (this.i.getHolder())).updateInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4435/buggy-version/src.main.java.com.laytonsmith.abstraction.bukkit.BukkitMCInventory.java", "BodyUseAPI": ["((org.bukkit.entity.Player) (this.i.getHolder())).updateInventory()", "org.bukkit.inventory.PlayerInventory.getHolder()"], "Fixed commit": "7c4280a2234d57b5cff891d24103a03b43cd46e3", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-09-05T04:51:56Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.i.getHolder()) instanceof org.bukkit.entity.Player) { ((org.bukkit.entity.Player) (this.i.getHolder())).updateInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4435/buggy-version/src.main.java.com.laytonsmith.abstraction.bukkit.BukkitMCInventory.java", "BodyUseAPI": ["((org.bukkit.entity.Player) (this.i.getHolder())).updateInventory()", "org.bukkit.inventory.PlayerInventory.getHolder()"], "Fixed commit": "7c4280a2234d57b5cff891d24103a03b43cd46e3", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-09-05T04:51:56Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.i.getHolder()) instanceof org.bukkit.entity.Player) { ((org.bukkit.entity.Player) (this.i.getHolder())).updateInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4435/buggy-version/src.main.java.com.laytonsmith.abstraction.bukkit.BukkitMCInventory.java", "BodyUseAPI": ["org.bukkit.inventory.PlayerInventory.getHolder()", "((org.bukkit.entity.Player) (this.i.getHolder())).updateInventory()"], "Fixed commit": "7c4280a2234d57b5cff891d24103a03b43cd46e3", "Url": "https://api.github.com/repos/sk89q/commandhelper", "Date": "2012-09-05T04:51:56Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setProgressDrawable(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableSeekBar.PROGESS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4592/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableSeekBar.java", "BodyUseAPI": [], "Fixed commit": "843960d134b2ee8a6a654a54d4f9424dc5289984", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setBackground(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableFrameLayout.BACKGROUND)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4592/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "843960d134b2ee8a6a654a54d4f9424dc5289984", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4592/buggy-version/android.apollo.src.com.andrew.apollo.widgets.RepeatingImageButton.java", "BodyUseAPI": [], "Fixed commit": "843960d134b2ee8a6a654a54d4f9424dc5289984", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isVariable(var))) { return (\"'\" + var) + \"' can not be used as a Variable!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1820/buggy-version/src.calc.CalcShell.java", "BodyUseAPI": [], "Fixed commit": "8d64f489ec899fd12642d3879be52038c14c307a", "Url": "https://api.github.com/repos/CedricHanebaum/AlgoHa06", "Date": "2014-04-25T13:27:38Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operand2 == 0) { throw new java.lang.Exception(\"divide by 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4210/buggy-version/Calculator.java", "BodyUseAPI": [], "Fixed commit": "ecb8fc679cf38e951ab906bb0897e375eef228e3", "Url": "https://api.github.com/repos/lightb0x/dataStructureHW3", "Date": "2016-04-21T06:56:45Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operand1 == 0) && (operand2 < 0)) { throw new java.lang.Exception(\"0^y when y < 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4210/buggy-version/Calculator.java", "BodyUseAPI": [], "Fixed commit": "ecb8fc679cf38e951ab906bb0897e375eef228e3", "Url": "https://api.github.com/repos/lightb0x/dataStructureHW3", "Date": "2016-04-21T06:56:45Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operand2 == 0) { throw new java.lang.Exception(\"divide by 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4210/buggy-version/Calculator.java", "BodyUseAPI": [], "Fixed commit": "ecb8fc679cf38e951ab906bb0897e375eef228e3", "Url": "https://api.github.com/repos/lightb0x/dataStructureHW3", "Date": "2016-04-21T06:56:45Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view) != null) view.waitToBeRealized();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1153/buggy-version/msi.gama.core.src.msi.gama.outputs.LayeredDisplayOutput.java", "BodyUseAPI": [], "Fixed commit": "b750aa1a04802c7f8d35ac87066e00ba3f902879", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-03-10T22:26:06Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((api.getGameManager().getGameState()) != (me.redraskal.arcadia.api.game.GameState.STARTING)) { this.cancel(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1446/buggy-version/src.main.java.me.redraskal.arcadia.runnable.GameStartRunnable.java", "BodyUseAPI": [], "Fixed commit": "77ca9d3b620497ea1c2bd397fc61687cf1648d0b", "Url": "https://api.github.com/repos/ArcadiaPlugins/Arcadia-Spigot", "Date": "2017-06-22T18:55:12Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sum != 0.0F) { for (java.lang.String rooms : acc_point.keySet()) { if ((cur_acc_point_belief.get(rooms)) != 0.0F) { cur_acc_point_belief.put(rooms, ((cur_acc_point_belief.get(rooms)) / sum)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/943/buggy-version/app.src.main.java.at.schuschu.android.rssilogger.GuessMyRoom.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Float>.put(java.lang.String,float)"], "Fixed commit": "ee3c4282981f7bd2180301265d865ee4d1a83ded", "Url": "https://api.github.com/repos/schuschu/SPS2014-RSSI", "Date": "2014-07-29T11:31:23Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["route.getProperties().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((option.getProperties()) != null) && (option.getProperties().containsKey(key))) && ((option.getProperties().get(key).getClass()) != (type.getClass()))) { uk.ac.cam.echo2016.multinarrative.dev.Debug.logError((((((((((((\"Type mismatch on \" + option) + \".\") + key) + \" \") + type) + \":\") + (type.getClass().getSimpleName())) + \"!=\") + (option.getProperties().get(key))) + \":\") + (option.getProperties().get(key).getClass().getSimpleName())), 2, Debug.SYSTEM_GRAPH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4056/buggy-version/src.main.java.uk.ac.cam.echo2016.multinarrative.NarrativeInstance.java", "BodyUseAPI": ["uk.ac.cam.echo2016.multinarrative.dev.Debug.logError((((((((((((\"Type mismatch on \" + option) + \".\") + key) + \" \") + type) + \":\") + (type.getClass().getSimpleName())) + \"!=\") + (option.getProperties().get(key))) + \":\") + (option.getProperties().get(key).getClass().getSimpleName())),int,Debug.SYSTEM_GRAPH)", "java.lang.Class<? extends java.lang.Object>.getSimpleName()", "option.getProperties().get(java.lang.String)", "option.getProperties().get(java.lang.String)", "uk.ac.cam.echo2016.multinarrative.Route.getProperties()", "uk.ac.cam.echo2016.multinarrative.Route.getProperties()", "option.getProperties().get(key).getClass()", "java.lang.Object.getClass()", "option.getProperties().get(key).getClass().getSimpleName()"], "Fixed commit": "f95fb9cc563fa3caa1bd656bcfec36ed2def2c55", "Url": "https://api.github.com/repos/echocam/dynamo", "Date": "2016-02-26T14:55:54Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.disciples.feed.rest.AbstractRepositoryListener<T>.onQuery(qes.getEntityType(),qes.getPageable(),qes.getParameters())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (result != null) { qes.setResult(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6141/buggy-version/src.main.java.com.disciples.feed.rest.AbstractRepositoryListener.java", "BodyUseAPI": ["com.disciples.feed.rest.QueryEventSource.setResult(org.springframework.data.domain.Page<?>)"], "Fixed commit": "9b602d5a14f5bd07babe2dd4fe6a2bcd360d8d39", "Url": "https://api.github.com/repos/hushengte/feed", "Date": "2017-12-28T04:27:15Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (polygon == null) { zonesWidth = passedBitmap.getWidth(); zonesHeight = passedBitmap.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6469/buggy-version/app.src.main.java.com.silvergold.ppaaiinntt.FxAntQueen.java", "BodyUseAPI": [], "Fixed commit": "a88203e89aeea4a45d36c150e92cc64552e7165f", "Url": "https://api.github.com/repos/vustav/KIEFER", "Date": "2017-04-13T17:06:48Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.unboundid.ldap.sdk.SearchResultEntry.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((attribute != null) && (attribute.hasValue())) { user.emailAddress = attribute.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1175/buggy-version/src.com.gitblit.LdapUserService.java", "BodyUseAPI": ["com.unboundid.ldap.sdk.Attribute.getValue()"], "Fixed commit": "a01257b8a1ace8e8b13e6a3b25aebb0348610409", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2012-07-17T11:44:41Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.unboundid.ldap.sdk.SearchResultEntry.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((attribute != null) && (attribute.hasValue())) { user.displayName = attribute.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1175/buggy-version/src.com.gitblit.LdapUserService.java", "BodyUseAPI": ["com.unboundid.ldap.sdk.Attribute.getValue()"], "Fixed commit": "a01257b8a1ace8e8b13e6a3b25aebb0348610409", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2012-07-17T11:44:41Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.cube.storm.ui.data.FragmentPackage>.get((position % (pages.size())))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(fragmentPackage.getPageDescriptor().getName()))) { tabName = fragmentPackage.getPageDescriptor().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/63/buggy-version/src.main.java.com.cube.storm.ui.lib.adapter.StormPageAdapter.java", "BodyUseAPI": ["fragmentPackage.getPageDescriptor().getName()", "com.cube.storm.ui.data.FragmentPackage.getPageDescriptor()"], "Fixed commit": "8753dc421011142c1bdbc88e276cca2d25c5b979", "Url": "https://api.github.com/repos/3sidedcube/Android-LightningUi", "Date": "2014-10-30T13:52:59Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.prevVisibleLeaf(com.intellij.psi.PsiElement)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((prevVisibleSibling == null) || (!((prevVisibleSibling.getParent()) instanceof org.ballerinalang.plugins.idea.psi.AnnotationAttachmentNode))) { addValueKeywords(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6778/buggy-version/src.main.java.org.ballerinalang.plugins.idea.completion.BallerinaKeywordsCompletionContributor.java", "BodyUseAPI": [], "Fixed commit": "5ae238f4c5fdd377e7d4d9353ce10daec9aea472", "Url": "https://api.github.com/repos/Shan1024/plugin-intellij", "Date": "2017-07-24T06:01:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.service.ResourcePermissionLocalServiceUtil.getResourcePermissionsCount(permissionChecker.getCompanyId(),java.lang.String,ResourceConstants.SCOPE_INDIVIDUAL,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count == 0) { com.liferay.portal.service.ResourceLocalServiceUtil.addResources(permissionChecker.getCompanyId(), classPK, 0, com.liferay.portlet.messageboards.service.permission.MBPermission.RESOURCE_NAME, classPK, false, true, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4692/buggy-version/portal-impl.src.com.liferay.portlet.messageboards.service.permission.MBPermission.java", "BodyUseAPI": [], "Fixed commit": "ff44781d93f240ccc26eca082cb22b749af312c1", "Url": "https://api.github.com/repos/robertoDiaz/liferay-portal", "Date": "2014-11-15T15:41:52Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(contentType.isEmpty())) { con.setRequestProperty(\"Content-Type\", contentType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5230/buggy-version/src.de.kasoki.jfeedly.helper.HTTPConnections.java", "BodyUseAPI": ["java.net.HttpURLConnection.setRequestProperty(java.lang.String,java.lang.String)"], "Fixed commit": "63107d5d302cc439a27584eea1934c53b3b57080", "Url": "https://api.github.com/repos/Kasoki/jfeedly", "Date": "2013-11-13T16:14:11Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xmppConnectionServiceBound) { xmppConnectionService.setOnConversationListChangedListener(this.onConvChanged); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2160/buggy-version/src.eu.siacs.conversations.ui.ConversationActivity.java", "BodyUseAPI": [], "Fixed commit": "6ec5b2f055995fad63a8d5dd27a261d476485eb8", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2014-03-08T20:22:54Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((GUI.MainUI.result) != null) || ((GUI.MainUI.result.length) == 0)) { updateVar(); file.writeFile(GUI.MainUI.result); javax.swing.JOptionPane.showMessageDialog(null, \"Data telah disimpan!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5693/buggy-version/src.GUI.MainUI.java", "BodyUseAPI": ["GUI.FileRW.writeFile(java.lang.String[][])"], "Fixed commit": "0be7ba1a8f1ddc993637c198bd4c6a2c401c8313", "Url": "https://api.github.com/repos/AhmadRiza/Skill-Mahasiswa-TI", "Date": "2017-05-19T10:01:46Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nextLayer < 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7788/buggy-version/src.main.java.code.sma.thread.SimpleTaskMsgDispatcherImpl.java", "BodyUseAPI": [], "Fixed commit": "ba7caa89699e14bc0e2042445e001da748276c3a", "Url": "https://api.github.com/repos/ldscc/StableMA", "Date": "2017-02-18T15:06:14Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((body.mimeType()) != null) { charset = retrofit.mime.MimeUtil.parseCharset(body.mimeType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1013/buggy-version/retrofit.src.main.java.retrofit.converter.GsonConverter.java", "BodyUseAPI": ["retrofit.mime.TypedInput.mimeType()", "retrofit.mime.MimeUtil.parseCharset(body.mimeType())"], "Fixed commit": "7ca5b518bccbe7c725a2e987887a1624187188be", "Url": "https://api.github.com/repos/conflictpredictor/retrofit", "Date": "2013-05-27T16:02:26Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (seperator != 0) { write(seperator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2389/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeWriter.java", "BodyUseAPI": ["com.alibaba.fastjson.serializer.SerializeWriter.write(char)"], "Fixed commit": "8e1fad39b5ee145fa549ad6ea96e2a74da58562c", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2013-02-27T09:35:05Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.equals(Intent.ACTION_SCREEN_ON)) { if ((BaseActivity.localSharedPreferences.getInt(BaseActivity.PREFS_MODE, 0)) == 3) { if ((camera) != null) { try { camera.startPreview(); } catch (java.lang.Exception e) { e.printStackTrace(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/7940/buggy-version/screenlocker.src.main.java.com.roger.screenlocker.LockScreenService.java", "BodyUseAPI": [], "Fixed commit": "e42e4a91a97206487efc8ac7c04782f3ab0cd69d", "Url": "https://api.github.com/repos/Rogero0o/ScreenLocker", "Date": "2015-12-24T08:15:47Z"},
{"Line": "=>927", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnabled(SerializerFeature.UseSingleQuotes)) { write(seperator); writeFieldName(name); if (value == null) { writeNull(); }else { writeString(value); } }else { if (isEnabled(SerializerFeature.BrowserCompatible)) { write(seperator); writeStringWithDoubleQuote(name); write(':'); writeStringWithDoubleQuote(value); }else { writeFieldValueStringWithDoubleQuote(seperator, name, value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2826/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeWriter.java", "BodyUseAPI": [], "Fixed commit": "9d7f8c564edafcfc49d2705a035112fd3e978721", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2011-12-12T05:50:12Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(run)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2404/buggy-version/kouchat-android-impl.src.main.java.net.usikkert.kouchat.net.ConnectionWorker.java", "BodyUseAPI": [], "Fixed commit": "53d0773e84d1602aae87b597e118e636840f38b8", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2013-10-25T16:11:05Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (worker.isAlive()) { worker.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3281/buggy-version/src.main.java.pw.jor.imgurwallpaper.gui.GUI.java", "BodyUseAPI": ["pw.jor.imgurwallpaper.gui.Worker.stop()"], "Fixed commit": "57f4cd8b280f5ec03038a94393cb025d2e27135b", "Url": "https://api.github.com/repos/justin-robinson/ImgurWallpaper", "Date": "2015-10-28T05:35:50Z"},
{"Line": "=>1634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nuxeo.runtime.transaction.TransactionHelper.isNoTransaction()) { org.nuxeo.runtime.transaction.TransactionHelper.startTransaction(); try { return writeReplace(); } finally { org.nuxeo.runtime.transaction.TransactionHelper.commitOrRollbackTransaction(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1425/buggy-version/nuxeo-core.nuxeo-core-api.src.main.java.org.nuxeo.ecm.core.api.impl.DocumentModelImpl.java", "BodyUseAPI": [], "Fixed commit": "8d4d8c5de9faff4efe9456cf652c440de98b3f0c", "Url": "https://api.github.com/repos/nuxeo/nuxeo", "Date": "2016-02-05T11:10:13Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((loginId) == null) || ((apiKey) == null)) { throw new java.lang.IllegalArgumentException(\"Both loginId and apiKey must be set.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1322/buggy-version/src.main.java.com.currencycloud.client.CurrencyCloudClient.java", "BodyUseAPI": [], "Fixed commit": "b9c9958d51bc96218b6ade3e0ad132e862190c1c", "Url": "https://api.github.com/repos/CurrencyCloud/currencycloud-java", "Date": "2015-05-28T13:22:40Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((antonymTextView.getParent()) != null) && ((synonymTextView.getParent()) != null)) { ((android.view.ViewGroup) (antonymTextView.getParent())).removeView(antonymTextView); ((android.view.ViewGroup) (synonymTextView.getParent())).removeView(synonymTextView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/9121/buggy-version/app.src.main.java.com.solaomi.wordapp.AntonymSynonymFragment.java", "BodyUseAPI": ["((android.view.ViewGroup) (synonymTextView.getParent())).removeView(android.widget.TextView)", "android.widget.TextView.getParent()", "android.widget.TextView.getParent()", "((android.view.ViewGroup) (antonymTextView.getParent())).removeView(android.widget.TextView)"], "Fixed commit": "d619044c565351654b29c4d04ee377070122a70f", "Url": "https://api.github.com/repos/SolaOmi/WordLookup", "Date": "2017-12-12T04:21:14Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.core.PluginManager.getNamedPlugin(java.lang.Class,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (inxwalk == null) { throw new org.dspace.sword2.DSpaceSwordException(\"No IngestionCrosswalk configured for FS\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4525/buggy-version/src.main.java.no.uio.duo.FSBagItIngester.java", "BodyUseAPI": [], "Fixed commit": "440ad55978b1349869e04b4d85ca53ab7acb34c1", "Url": "https://api.github.com/repos/nye-duo/Duo-DSpace", "Date": "2012-05-29T11:25:41Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPullRequest) == null) { menu.removeItem(R.id.share); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8989/buggy-version/src.com.gh4a.fragment.PullRequestFragment.java", "BodyUseAPI": [], "Fixed commit": "c6bcbec10688a3e8d1021e89d1646c78ebf2041f", "Url": "https://api.github.com/repos/maniac103/gh4a", "Date": "2014-09-16T14:23:24Z"},
{"Line": "=>2061", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activeMode.equals(\"sensor\")) { startSensorListeners(); startDataStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3192/buggy-version/src.ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.java", "BodyUseAPI": [], "Fixed commit": "886dc8f8faf4f965808628c98312ea3fe7735678", "Url": "https://api.github.com/repos/Cbsoftware/pressureNET", "Date": "2013-06-27T17:34:18Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((com.udacity.gradle.builditbigger.MainFlavorActivity.EndpointsAsyncTask.context) instanceof com.udacity.gradle.builditbigger.MainFlavorActivity)) intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6815/buggy-version/app.src.main.java.com.udacity.gradle.builditbigger.MainFlavorActivity.java", "BodyUseAPI": [], "Fixed commit": "3549d50ad4395cfba8e9757488280e0ee65238f1", "Url": "https://api.github.com/repos/ojiofong/build-it-bigger", "Date": "2015-10-05T15:32:44Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.getInputBuffer().substring(0, carrageReturnIndex).trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((command.equals(\"\")) || (command.equals(\"\\n\"))) || (command.equals(\"\\n\\r\"))) { session.send(\"\"); }else if ((session.getCurrentState()) == (SocketChannelUserSession.UserSessionState.LOGIN_NEED_USERNAME)) { handleLoginPromptText(session, command); }else { if (expandAliases) { morphy.service.CommandService.getInstance().processCommandAndCheckAliases(command, session); }else { morphy.service.CommandService.getInstance().processCommand(command, session); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/8249/buggy-version/src.morphy.service.SocketConnectionService.java", "BodyUseAPI": ["morphy.service.SocketConnectionService.handleLoginPromptText(morphy.user.SocketChannelUserSession,java.lang.String)", "morphy.service.CommandService.getInstance().processCommand(java.lang.String,morphy.user.SocketChannelUserSession)", "morphy.service.CommandService.getInstance().processCommandAndCheckAliases(java.lang.String,morphy.user.SocketChannelUserSession)"], "Fixed commit": "470cf3434fabe21ad155b2f8a68b48e4e9cab711", "Url": "https://api.github.com/repos/johnthegreat/morphy-chess-server", "Date": "2016-09-23T06:29:20Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((found[a]) * (scores[a])) > largestoverall) { largestoverall = (found[a]) * (scores[a]); overall = a; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6087/buggy-version/Prototype.src.prototype.LyricsAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "1b50927e7398c34415d0b610d45a44a3fdd58a56", "Url": "https://api.github.com/repos/independence2013/msj2013", "Date": "2013-11-23T19:53:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (null != friend) { chatting = org.pushtalk.server.utils.ServiceUtils.getChattingFriend(friend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/2307/buggy-version/server-java.src.org.pushtalk.server.api.TalkServlet.java", "BodyUseAPI": ["org.pushtalk.server.utils.ServiceUtils.getChattingFriend(java.lang.String)"], "Fixed commit": "66c392b75adb66e32907483e0a9b23be0e9a4834", "Url": "https://api.github.com/repos/good-life/PushTalk", "Date": "2012-11-23T07:48:58Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noOfInstancesOfRequiredStatus == (this.inactiveInstancesMap.size())) && (requiredStatus == (GroupStatus.Terminated))) { return true; }else if (noOfInstancesOfRequiredStatus >= minInstances) { return true; }else { if ((requiredStatus == (GroupStatus.Inactive)) && (noOfInstancesOfRequiredStatus >= 1)) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1757/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.monitor.component.GroupMonitor.java", "BodyUseAPI": [], "Fixed commit": "93243b8dd08b2099381f14351d1385dfbe421189", "Url": "https://api.github.com/repos/dakshika/stratos", "Date": "2014-12-18T10:20:35Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((maxPoolSize) > 0) && ((head.size()) < (maxPoolSize))) { final int size = head.size(); if (head.size.compareAndSet(size, (size + 1))) { if ((head.size()) <= (maxPoolSize)) { cas.unlock(); return getProxyLinked(createNew(params, true)); }else { head.size.decrementAndGet(); } } }else if ((maxPoolSize) <= 0) { head.size.incrementAndGet(); cas.unlock(); return getProxyLinked(createNew(params, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/965/buggy-version/resourcepool.src.main.java.org.arivu.pool.AbstractPool.java", "BodyUseAPI": ["org.arivu.pool.LinkedReference<T>.size()", "head.size.decrementAndGet()", "org.arivu.pool.LinkedReference<T>.size()", "head.size.compareAndSet(int,int)", "head.size.incrementAndGet()"], "Fixed commit": "540772288b448460abf33789fbde1641cd3e2edf", "Url": "https://api.github.com/repos/parthipan1/arivu", "Date": "2016-09-28T09:38:37Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (period.equals(\"PM\")) hour += 12;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/3831/buggy-version/hackerrank.algorithms.warmup.time-conversion.java", "BodyUseAPI": [], "Fixed commit": "d2e6f09e71ebbfd096a3d96548bfe529ab05978b", "Url": "https://api.github.com/repos/pasangsherpa/playground", "Date": "2016-05-28T05:28:22Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localMonitor) == null) { return localMonitor.isRunning(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/1325/buggy-version/car.ioMockup.src.car.io.obd.ServiceConnector.java", "BodyUseAPI": [], "Fixed commit": "82c4a4fc974915423a998d95bcce221f59a2948f", "Url": "https://api.github.com/repos/LinkedCitizenScience2013/lcs-app", "Date": "2013-06-14T12:15:29Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.zhan.budget.Util.Util.isNotNullNotEmptyNotWhiteSpaceOnlyByJava(ttList.get(i).getLocation())) { if (!(locationHash.containsKey(ttList.get(i).getLocation()))) { locationHash.put(ttList.get(i).getLocation(), 1); }else { locationHash.put(ttList.get(i).getLocation(), ((locationHash.get(ttList.get(i).getLocation())) + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5453/buggy-version/app.src.main.java.com.zhan.budget.Fragment.LocationFragment.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.containsKey(ttList.get(i).getLocation())", "ttList.get(i).getLocation()", "java.util.List<com.zhan.budget.Model.Realm.Transaction>.get(int)", "java.util.List<com.zhan.budget.Model.Realm.Transaction>.get(int)", "java.util.List<com.zhan.budget.Model.Realm.Transaction>.get(int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.get(ttList.get(i).getLocation())", "java.util.List<com.zhan.budget.Model.Realm.Transaction>.get(int)", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(ttList.get(i).getLocation(),((locationHash.get(ttList.get(i).getLocation())) + 1))", "java.util.HashMap<java.lang.String, java.lang.Integer>.put(ttList.get(i).getLocation(),int)", "ttList.get(i).getLocation()", "ttList.get(i).getLocation()", "ttList.get(i).getLocation()"], "Fixed commit": "2bbe5a496929bb8b8360eb0f400539ccf1de1682", "Url": "https://api.github.com/repos/zhanhui913/Budget", "Date": "2016-05-22T00:38:11Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPrefs.getBoolean(\"status-bar\", false)) { try { java.lang.Thread.sleep(3000); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/4148/buggy-version/src.com.lukekorth.screennotifications.BaseAccessibilityService.java", "BodyUseAPI": [], "Fixed commit": "ffcda413abf8d3f570355c7091502977d4f862dc", "Url": "https://api.github.com/repos/lkorth/screen-notifications", "Date": "2013-02-26T00:33:47Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (vi.hasIssues()) { buildChangelogHeader(vi.getReleaseDate(), vi.getName(), vi.getDescription()); for (java.lang.String issue : vi.getIssueList()) { buildChangelogItem(issue); } finaliseChangelog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/946/buggy-version/src.net.foxopen.jira.changelog.ChangelogBuilder.java", "BodyUseAPI": ["net.foxopen.jira.changelog.ChangelogBuilder.buildChangelogHeader(vi.getReleaseDate(),vi.getName(),vi.getDescription())", "net.foxopen.jira.changelog.VersionInfo.getName()", "net.foxopen.jira.changelog.VersionInfo.getIssueList()", "net.foxopen.jira.changelog.VersionInfo.getDescription()", "net.foxopen.jira.changelog.VersionInfo.getReleaseDate()"], "Fixed commit": "e23dc71f90566f4249b6b54745a2fcd2f537aabc", "Url": "https://api.github.com/repos/mleonard87/JIRAChangelogBuilder", "Date": "2013-03-14T10:33:21Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Gdx.input.isButtonPressed(Buttons.LEFT)) { float dx = (DodgeGame.INPUT.getInputX()) - (owner.getxPos()); float dy = (DodgeGame.INPUT.getInputY()) - (owner.getyPos()); if (((java.lang.Math.abs(dx)) > 0.1F) || ((java.lang.Math.abs(dy)) > 0.1F)) translation.set(dx, dy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/5047/buggy-version/DodgeGame.src.walnoot.stealth.components.PlayerComponent.java", "BodyUseAPI": [], "Fixed commit": "f92f60fdb603ffd8f616437c471988f4ab6b949f", "Url": "https://api.github.com/repos/Walnoot/DodgeGame", "Date": "2012-11-05T15:12:04Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (server != null) { setAllowLinkStealing(server.isAllowLinkStealing()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V109/6925/buggy-version/activemq-broker.src.main.java.org.apache.activemq.broker.TransportConnector.java", "BodyUseAPI": [], "Fixed commit": "11ad9482e452ef3f62224279e927e2010a4a81b7", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2013-11-12T08:08:07Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCount()) == 1) { if (((artist.getGenres()) != null) && ((artist.getGenres().length()) > 45)) { artistGenres.setMinLines(3); }else { artistGenres.setMinLines(2); } }else { artistGenres.setMinLines(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2082/buggy-version/app.src.main.java.com.shambatimes.schedule.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3b500bbe1220fff761923332981805952e9ccef1", "Url": "https://api.github.com/repos/babramovitch/ShambaTimes", "Date": "2016-07-14T01:53:45Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["element.getTags().getOffice()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (office != null) { if (office.equals(com.igorko.accesibleif.utils.GOVERNMENT)) { markerIcon = com.igorko.accesibleif.utils.IconsUtils.setAdministrationIcon(element); }else if (office.equals(com.igorko.accesibleif.utils.ADMINISTRATIVE)) { markerIcon = com.igorko.accesibleif.utils.IconsUtils.setAdministrationIcon(element); }else { markerIcon = com.igorko.accesibleif.utils.IconsUtils.setDefaultIcon(element); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4660/buggy-version/app.src.main.java.com.igorko.accesibleif.utils.MarkerUtils.java", "BodyUseAPI": ["java.lang.String.equals(com.igorko.accesibleif.utils.GOVERNMENT)", "java.lang.String.equals(com.igorko.accesibleif.utils.ADMINISTRATIVE)"], "Fixed commit": "632630b68339510f0ec1025a4e2036bfd40dc1ce", "Url": "https://api.github.com/repos/SoftJourn/friendlyIf_android", "Date": "2017-03-02T15:42:15Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.immotor.controller.PackageRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((package1.getType()) == (com.immotor.utils.Constants.PACKAGE_TYPE_MONTH)) cronTaskRepository.deleteDistinctByUIDAndStatus(userInfo.getId(), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8466/buggy-version/power-station.src.main.java.com.immotor.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "4cbaf611f185940a85f3233e1cac1d61c5ebab54", "Url": "https://api.github.com/repos/immotor-bill/power", "Date": "2017-08-31T07:18:31Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\".$|()[{^?*+\\\\\".contains(delimiter)) { delimiter = \"\\\\\" + delimiter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7947/buggy-version/src.com.apparatus.utils.StringHelper.java", "BodyUseAPI": [], "Fixed commit": "852d4e1f3650992f6c0947bb251ebbe9dcc83f03", "Url": "https://api.github.com/repos/rslakra/Java", "Date": "2016-04-18T21:19:48Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(((com.gpg.planettrade.client.util.GameTime.currentTimeSeconds) - ((o.timePlaced) + (o.length))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (time == 0) o.ended = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2611/buggy-version/src.com.gpg.planettrade.client.menu.Marketplace.java", "BodyUseAPI": [], "Fixed commit": "f3bbd078ce65c5e02ea257037fa44a549463094c", "Url": "https://api.github.com/repos/Emmsii/Planet-Trading-Game", "Date": "2014-12-18T13:28:55Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pathFinder) == null) { wurst.chat.error(\"This mod shouldn't exist. Use .goto instead.\"); setEnabled(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2939/buggy-version/src.tk.wurst_client.mods.GoToCmdMod.java", "BodyUseAPI": [], "Fixed commit": "98f2d878ae44f188917a49a4d473b48f78557a12", "Url": "https://api.github.com/repos/CisBetter/Wurst-MC-1.10", "Date": "2016-11-20T12:46:45Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (callback instanceof alexclin.httplite.DownloadHandler) executable = ((alexclin.httplite.DownloadHandler) (callback)).wrap(executable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2467/buggy-version/httplite.src.main.java.alexclin.httplite.HttpCall.java", "BodyUseAPI": [], "Fixed commit": "2688c68c1d5bdc35f416c67e3ba21fb8ac4bd427", "Url": "https://api.github.com/repos/alexclin0188/httplite", "Date": "2016-05-07T12:55:22Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.pluto.container.om.portlet.impl.ConfigurationHolder.isDebug) { java.lang.StringBuilder txt = new java.lang.StringBuilder(128); txt.append(\"Info about classloaders:\"); java.lang.ClassLoader mycl = this.getClass().getClassLoader(); java.lang.ClassLoader jaxbcl = javax.xml.bind.JAXBContext.class.getClassLoader(); java.lang.ClassLoader ofcl = org.apache.pluto.container.om.portlet20.impl.ObjectFactory.class.getClassLoader(); java.lang.ClassLoader syscl = null; try { syscl = java.lang.ClassLoader.getSystemClassLoader(); } catch (java.lang.Exception e) { } txt.append(\"\\nmy classloader: \").append((mycl != null ? mycl.toString() : \"null\")); txt.append(\"\\njaxb classloader: \").append((jaxbcl != null ? jaxbcl.toString() : \"null\")); txt.append(\"\\nof classloader: \").append((ofcl != null ? ofcl.toString() : \"null\")); txt.append(\"\\nsys classloader: \").append((syscl != null ? syscl.toString() : \"null\")); java.lang.Class<?> myof = null; java.lang.Class<?> jaxbof = null; java.lang.Class<?> ofof = null; java.lang.Class<?> sysof = null; java.lang.String clsName = \"org.apache.pluto.container.om.portlet20.impl.ObjectFactory\"; try { myof = mycl.loadClass(clsName); } catch (java.lang.Exception e) { } try { jaxbof = jaxbcl.loadClass(clsName); } catch (java.lang.Exception e) { } try { ofof = ofcl.loadClass(clsName); } catch (java.lang.Exception e) { } try { sysof = syscl.loadClass(clsName); } catch (java.lang.Exception e) { } txt.append(\"\\nNow attempting to load: \").append(clsName); txt.append(\"\\nMycl loaded: \").append((myof != null)); txt.append(\"\\nJaxbofcl loaded: \").append((jaxbof != null)); txt.append(\"\\nOfcl loaded: \").append((ofof != null)); txt.append(\"\\nSyscl loaded: \").append((sysof != null)); org.apache.pluto.container.om.portlet.impl.ConfigurationHolder.LOG.debug(txt.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/419/buggy-version/pluto-container.src.main.java.org.apache.pluto.container.om.portlet.impl.ConfigurationHolder.java", "BodyUseAPI": [], "Fixed commit": "802dadb4624ab5e0969598c03933f5cc59e65545", "Url": "https://api.github.com/repos/apache/portals-pluto", "Date": "2015-10-27T11:39:51Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((aChassi.getNameShort().equals(\"HBK-4J\")) && (aPart == (Part.RightTorso))) { tube = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2364/buggy-version/src.lisong_mechlab.model.chassi.InternalPart.java", "BodyUseAPI": [], "Fixed commit": "d1ce044006a1b21fbc12c9fe1d93c696b327724c", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-10-26T18:59:14Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((to.getScheduleSnapshots()) != (from.getScheduleSnapshots())) { com.emc.storageos.api.service.impl.resource.FileVirtualPoolService._log.info(\"Schedule snapshot cannot be modified to a vpool with provisioned filessystems \", from.getId()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4794/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.VirtualPool.getId()", "org.slf4j.Logger.info(java.lang.String,from.getId())"], "Fixed commit": "47bd36c4a73c76dabc825475a6da737e220fc159", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-18T09:40:38Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((javaBeanDeser.propertyPreFilters) != null) { for (com.alibaba.fastjson.serializer.PropertyPreFilter filter : javaBeanDeser.propertyPreFilters) { if (!(filter.apply(this, object, key))) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3153/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JSONSerializer.java", "BodyUseAPI": [], "Fixed commit": "c7c4521fc497e5b3f7005be164b3688d2f501a67", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-04-30T02:59:50Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session) != null) sessionID = session.getId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2893/buggy-version/app.src.main.java.com.example.bruno.ajedrezporcorrespondencia.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "317662cfd691d85824dc5e2c2aa11274dd673fc8", "Url": "https://api.github.com/repos/MendezBruno/ajedrezPorCorrespondencia2.0", "Date": "2016-11-18T00:19:54Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2893/buggy-version/app.src.main.java.com.example.bruno.ajedrezporcorrespondencia.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "317662cfd691d85824dc5e2c2aa11274dd673fc8", "Url": "https://api.github.com/repos/MendezBruno/ajedrezPorCorrespondencia2.0", "Date": "2016-11-18T00:19:54Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (request != null) requests.remove(request);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/726/buggy-version/netup.src.main.java.ir.afshin.netup.Requests.RequestQueue.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentLinkedQueue<ir.afshin.netup.Requests.Request>.remove(java.lang.Object)"], "Fixed commit": "f2d6a1b71a0ff4321ba702ec64ef18c4110f9455", "Url": "https://api.github.com/repos/afshin-hoseini/Netup", "Date": "2017-02-10T17:06:03Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (request != null) requests.remove(request);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/726/buggy-version/netup.src.main.java.ir.afshin.netup.Requests.RequestQueue.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentLinkedQueue<ir.afshin.netup.Requests.Request>.remove(java.lang.Object)"], "Fixed commit": "f2d6a1b71a0ff4321ba702ec64ef18c4110f9455", "Url": "https://api.github.com/repos/afshin-hoseini/Netup", "Date": "2017-02-10T17:06:03Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request != null) ((ir.afshin.netup.Requests.Request) (request)).cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/726/buggy-version/netup.src.main.java.ir.afshin.netup.Requests.RequestQueue.java", "BodyUseAPI": [], "Fixed commit": "f2d6a1b71a0ff4321ba702ec64ef18c4110f9455", "Url": "https://api.github.com/repos/afshin-hoseini/Netup", "Date": "2017-02-10T17:06:03Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.taobao.weex.WXEnvironment.isDebugLibExist()) { com.taobao.weex.bridge.WXServiceManager.execAllCacheJsService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5695/buggy-version/android.sdk.src.main.java.com.taobao.weex.WXSDKEngine.java", "BodyUseAPI": [], "Fixed commit": "b1327e6a7ce259d4f380368bfbe414d667a48468", "Url": "https://api.github.com/repos/littleseven/incubator-weex", "Date": "2017-04-13T09:20:04Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (megabyte > 0) { setMaxMemory((megabyte * 1024)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3396/buggy-version/src.com.sheepit.client.Configuration.java", "BodyUseAPI": ["com.sheepit.client.Configuration.setMaxMemory(int)"], "Fixed commit": "eb28ee905322cee7557e4ec147fc89bfee0986c3", "Url": "https://api.github.com/repos/principat/sheepit-client", "Date": "2017-03-31T20:27:29Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val instanceof wyjc.attributes.Value.Tuple) { write(((wyjc.attributes.Value.Tuple) (val)), writer, constantPool); }else if (val instanceof wyjc.attributes.Value.FunctionOrMethodOrMessage) { write(((wyjc.attributes.Value.FunctionOrMethodOrMessage) (val)), writer, constantPool); }else { throw new java.lang.RuntimeException((\"Unknown value encountered - \" + val)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2093/buggy-version/src.wyjc.attributes.WhileyDefine.java", "BodyUseAPI": [], "Fixed commit": "ddfa679076e7057021884e0d03566961c316bb14", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-03-14T02:04:25Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in.startsWith(\"explore\")) return \"civcraft.chat.earnBeaker.explore\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7830/buggy-version/src.main.java.alexiil.mods.civ.tech.BeakerEarningListener.java", "BodyUseAPI": [], "Fixed commit": "9795fdd657f0404754e772febcc716fa27ea2c26", "Url": "https://api.github.com/repos/AlexIIL/CivCraft", "Date": "2015-03-31T18:04:19Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in.startsWith(\"explore\")) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7830/buggy-version/src.main.java.alexiil.mods.civ.tech.BeakerEarningListener.java", "BodyUseAPI": [], "Fixed commit": "9795fdd657f0404754e772febcc716fa27ea2c26", "Url": "https://api.github.com/repos/AlexIIL/CivCraft", "Date": "2015-03-31T18:04:19Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rs.wasNull()) cost = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7440/buggy-version/src.edacc.api.APIImpl.java", "BodyUseAPI": [], "Fixed commit": "9ebc4053a8f770ef30a0536da58b0762a9199f7f", "Url": "https://api.github.com/repos/ceari/edacc_api", "Date": "2011-10-15T17:49:54Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plugin.getServer().getPluginManager().getPlugin(\"Transmission\")) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1946/buggy-version/src.at.junction.tier2.Tier2Listener.java", "BodyUseAPI": [], "Fixed commit": "af7f385fc17e676fb52dd583c84d372168a1a096", "Url": "https://api.github.com/repos/JunctionAt/Tier2", "Date": "2013-12-03T07:22:16Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getMessage().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((args.length) < 1) { mainLogger.debug(\"There is something weird with the args, they are empty\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5783/buggy-version/src.main.java.org.simiancage.bukkit.TheMonkeyPack.listeners.PlayerChatListener.java", "BodyUseAPI": [], "Fixed commit": "933ad0b82c2c9aef85fa0d50201166405805bbe4", "Url": "https://api.github.com/repos/dredhorse/TheMonkeyPack", "Date": "2012-07-26T19:30:31Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) == (org.motechproject.nms.props.domain.DayOfTheWeek.SUNDAY.getValue())) { return org.motechproject.nms.props.domain.DayOfTheWeek.MONDAY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/761/buggy-version/props.src.main.java.org.motechproject.nms.props.domain.DayOfTheWeek.java", "BodyUseAPI": [], "Fixed commit": "a6f2aaa8ad00f10341f085806ce97bb6f7379ec9", "Url": "https://api.github.com/repos/motech-implementations/nms", "Date": "2015-05-12T21:16:29Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((attribute.getType()) instanceof org.opentravel.schemacompiler.model.TLOpenEnumeration) { visitOpenEnumeration(((org.opentravel.schemacompiler.model.TLOpenEnumeration) (attribute.getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/632/buggy-version/schema-compiler.src.main.java.org.opentravel.schemacompiler.codegen.impl.LibraryFilterBuilder.java", "BodyUseAPI": ["org.opentravel.schemacompiler.model.TLAttribute.getType()", "org.opentravel.schemacompiler.codegen.impl.LibraryFilterBuilder.DependencyVisitor.visitOpenEnumeration(((org.opentravel.schemacompiler.model.TLOpenEnumeration) (attribute.getType())))"], "Fixed commit": "14fbb8bb474a3945057aebf5b32c78a26fb014aa", "Url": "https://api.github.com/repos/OpenTravel/OTM-DE-Compiler", "Date": "2015-08-19T16:53:08Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (receivingCmds) outMsg.println(e.getMessage());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/393/buggy-version/homework1.hangman.src.main.java.id1212.wachsler.joel.hangman.client.view.NonBlockingInterpreter.java", "BodyUseAPI": [], "Fixed commit": "c48f32e6bb279dd80228483e3456b287b0a61216", "Url": "https://api.github.com/repos/JoelWachsler/ID1212-Network-Programming", "Date": "2017-11-09T17:06:36Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.worm.runsInto(apple)) { this.worm.grow(); this.apple = RandomAppleCreator(width, height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3690/buggy-version/src.wormgame.game.WormGame.java", "BodyUseAPI": ["wormgame.domain.Worm.grow()"], "Fixed commit": "77b4eb4567cba680f67d5da8a422201fa3f9b545", "Url": "https://api.github.com/repos/azarboon/wormgame", "Date": "2016-12-29T09:54:18Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((planDo.getScoreStatus()) != null) && (planDo.getScoreStatus().equalsIgnoreCase(\"Viewed\"))) { imagePanel.setStyleName(\"empty-plan-collection-selected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5769/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.classpage.studentclassview.learningmap.widgets.StudentClassContentWidget.java", "BodyUseAPI": [], "Fixed commit": "168cbd2f6a57113cd1b5d1cf39ccafa78070d241", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-11-23T10:46:06Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGpsEnabled()) mGoogleApiClient.connect();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8684/buggy-version/app.src.main.java.mobiledoctors.yomna.mobiledoctorstask.Home.java", "BodyUseAPI": [], "Fixed commit": "ea43459152d8cdd0b9777fea319b356555723f0c", "Url": "https://api.github.com/repos/Yomna-Hafez/Mobile-Doctors-Task", "Date": "2016-03-06T03:57:38Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGpsEnabled()) new mobiledoctors.yomna.mobiledoctorstask.Home.LoadMap().execute();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8684/buggy-version/app.src.main.java.mobiledoctors.yomna.mobiledoctorstask.Home.java", "BodyUseAPI": [], "Fixed commit": "ea43459152d8cdd0b9777fea319b356555723f0c", "Url": "https://api.github.com/repos/Yomna-Hafez/Mobile-Doctors-Task", "Date": "2016-03-06T03:57:38Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGpsEnabled()) { if ((mGoogleApiClient) != null) { if (mGoogleApiClient.isConnected()) { mGoogleApiClient.disconnect(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8684/buggy-version/app.src.main.java.mobiledoctors.yomna.mobiledoctorstask.Home.java", "BodyUseAPI": [], "Fixed commit": "ea43459152d8cdd0b9777fea319b356555723f0c", "Url": "https://api.github.com/repos/Yomna-Hafez/Mobile-Doctors-Task", "Date": "2016-03-06T03:57:38Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["value.toString().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(points[j].contains(\",\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8437/buggy-version/src.main.java.edu.umn.cs.sthadoop.operations.STJoin.java", "BodyUseAPI": [], "Fixed commit": "2eb1005d3e7b546b9e07c22dabf7e2cdecab58f3", "Url": "https://api.github.com/repos/lmarabi/st-hadoop", "Date": "2017-04-10T22:09:56Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spongycastle.util.encoders.Hex.decode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.ethereum.util.Utils.isValidAddress(contractAddress))) { alertStatusMsg(\"Not a valid contract address\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/957/buggy-version/ethereumj-studio.src.main.java.org.ethereum.gui.ContractCallDialog.java", "BodyUseAPI": [], "Fixed commit": "028cfe5ca33ea9a7abb846158319f64f9e44fc5e", "Url": "https://api.github.com/repos/ethereum/ethereumj", "Date": "2014-09-20T08:48:53Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWhiteTurn) { result.numBlackCheckers -= 1; }else { result.numWhiteCheckers -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7480/buggy-version/src.com.byer.checkers.Board.java", "BodyUseAPI": [], "Fixed commit": "8337184d0ff11e4fd139c22dc2deb7896a967fb7", "Url": "https://api.github.com/repos/duanebyer/Checkers", "Date": "2015-06-30T02:26:33Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mifosplatform.infrastructure.core.serialization.FromJsonHelper.extractJsonArrayNamed(LoanApiConstants.disbursementDataParameterName,com.google.gson.JsonElement)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (variationArray != null) { for (int i = 0; i < (variationArray.size()); i++) { final com.google.gson.JsonObject jsonObject1 = variationArray.get(i).getAsJsonObject(); org.joda.time.LocalDate date1 = this.fromApiJsonHelper.extractLocalDateNamed(LoanApiConstants.disbursementDateParameterName, jsonObject1, dateFormat, locale); for (int j = i + 1; j < (variationArray.size()); j++) { final com.google.gson.JsonObject jsonObject2 = variationArray.get(j).getAsJsonObject(); org.joda.time.LocalDate date2 = this.fromApiJsonHelper.extractLocalDateNamed(LoanApiConstants.disbursementDateParameterName, jsonObject2, dateFormat, locale); if (date1.isAfter(date2)) { baseDataValidator.reset().parameter(LoanApiConstants.disbursementDataParameterName).failWithCode(LoanApiConstants.DISBURSEMENT_DATES_NOT_IN_ORDER); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/288/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.loanaccount.serialization.LoanApplicationCommandFromApiJsonHelper.java", "BodyUseAPI": ["com.google.gson.JsonArray.size()", "variationArray.get(j).getAsJsonObject()", "com.google.gson.JsonArray.get(int)", "variationArray.get(i).getAsJsonObject()", "com.google.gson.JsonArray.get(int)", "com.google.gson.JsonArray.size()"], "Fixed commit": "e5ccac0ca2a4223e56c4d5d8a881e23b773bce3b", "Url": "https://api.github.com/repos/mssavai/mifosx", "Date": "2015-03-03T12:06:08Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ipAddress == null) { ipAddress = getPrimaryHostSystemIpAddress(hostSystem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6450/buggy-version/integrations.opennms-vmware.src.main.java.org.opennms.protocols.vmware.VmwareViJavaAccess.java", "BodyUseAPI": [], "Fixed commit": "930d329a00b0edb8154e77664e21fda7531eea86", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2013-06-24T19:42:38Z"},
{"Line": "=>1472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mService) != null) { mService.setThreshold(threshold); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4438/buggy-version/src.com.ds.avare.LocationView.java", "BodyUseAPI": [], "Fixed commit": "ade39b0468f6f87db014e747909aa4774b6bf810", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2014-08-02T03:44:40Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof com.midtrans.sdk.uikit.activities.MandiriClickPayActivity) { ((com.midtrans.sdk.uikit.activities.MandiriClickPayActivity) (getActivity())).setResultCode(Activity.RESULT_OK); getActivity().onBackPressed(); }else if ((getActivity()) instanceof com.midtrans.sdk.uikit.activities.GCIActivity) { ((com.midtrans.sdk.uikit.activities.GCIActivity) (getActivity())).setResultCode(Activity.RESULT_OK); getActivity().onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5229/buggy-version/uikit.src.main.java.com.midtrans.sdk.uikit.fragments.PaymentTransactionStatusFragment.java", "BodyUseAPI": [], "Fixed commit": "312e5b3581deebe9ba4a1c404b80c57627a89c24", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2017-04-20T08:35:44Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (len > 0) { byte[] buf = encoding.encode(new java.lang.String(cbuf, 0, len)); cp.writeToCopy(buf, 0, buf.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4932/buggy-version/org.postgresql.copy.CopyManager.java", "BodyUseAPI": ["org.postgresql.core.Encoding.encode(java.lang.String)"], "Fixed commit": "5868e3db41b5e52ee62c7117fa55314718d0b361", "Url": "https://api.github.com/repos/headcrashing/pgjdbc", "Date": "2015-09-17T21:09:28Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (len > 0) { cp.writeToCopy(buf, 0, len); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4932/buggy-version/org.postgresql.copy.CopyManager.java", "BodyUseAPI": ["org.postgresql.copy.CopyIn.writeToCopy(byte[],int,int)"], "Fixed commit": "5868e3db41b5e52ee62c7117fa55314718d0b361", "Url": "https://api.github.com/repos/headcrashing/pgjdbc", "Date": "2015-09-17T21:09:28Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allowAnalysisSelection()) { choiceItem.setChoices(options); }else { choiceItem.setVisibility(ItemVisibility.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1351/buggy-version/src.main.java.cmds.AnalysisCommand.java", "BodyUseAPI": [], "Fixed commit": "451a02d2ce7bc9876ecb5ea5faeb6134770699db", "Url": "https://api.github.com/repos/sageshoyu/pan", "Date": "2017-10-11T02:50:07Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nben.util.Num.eq(pe, peStep0)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4647/buggy-version/src.main.java.nben.mesh.registration.Minimizer.java", "BodyUseAPI": [], "Fixed commit": "6f21fe6a5eae3d09f324bbc18cdeb04644ff6e18", "Url": "https://api.github.com/repos/noahbenson/nben", "Date": "2016-04-26T16:26:34Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activity) != null) { activity.setTitle(getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2850/buggy-version/app.src.main.java.com.tpandroid.cpe.journeydiaries.JourneyViewModel.java", "BodyUseAPI": [], "Fixed commit": "c79b6afdbc63e4ac40375aa52e8b2b026889d563", "Url": "https://api.github.com/repos/Datchik/JourneyDiaries", "Date": "2017-10-10T07:21:22Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andreadec.musicplayer.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (new java.io.File(uri).exists()) { com.andreadec.musicplayer.BrowserSong song = new com.andreadec.musicplayer.BrowserSong(uri, artist, title, trackNumber, hasImage, null); results.add(song); }else { deleteSongFromCache(uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1789/buggy-version/musicPlayer.src.main.java.com.andreadec.musicplayer.SearchActivity.java", "BodyUseAPI": ["com.andreadec.musicplayer.SearchActivity.deleteSongFromCache(java.lang.String)"], "Fixed commit": "c1e82cee8147ed9f42ec8744e0cc6fdf0fefb2b8", "Url": "https://api.github.com/repos/andreadec/MusicPlayer", "Date": "2014-09-29T08:46:06Z"},
{"Line": "=>4251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstName == null) && (secondName == null)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2971/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.MagicController.java", "BodyUseAPI": [], "Fixed commit": "6f1a3daddc9aff3449056c9a0d51d15068a9861f", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-04-04T16:11:45Z"},
{"Line": "=>4252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstName == null) || (secondName == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2971/buggy-version/Magic.src.main.java.com.elmakers.mine.bukkit.magic.MagicController.java", "BodyUseAPI": [], "Fixed commit": "6f1a3daddc9aff3449056c9a0d51d15068a9861f", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2017-04-04T16:11:45Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.RuntimeException.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cause == null) cause = t;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2819/buggy-version/src.main.java.com.agapsys.web.action.dispatcher.ActionServlet.java", "BodyUseAPI": [], "Fixed commit": "0b55339ecbf4a2ee7c1ba01a7b928ed3ace6a628", "Url": "https://api.github.com/repos/agapsys/rcf-core", "Date": "2015-11-14T19:19:44Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == (android.support.v4.view.ViewPager.SCROLL_STATE_DRAGGING)) { scrolled = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6082/buggy-version/src.com.kkbox.toolkit.ui.OnInfiniteViewPagerPageChangeListener.java", "BodyUseAPI": [], "Fixed commit": "4c9a61756da68131578cda2fd972d9c8b62f1002", "Url": "https://api.github.com/repos/KKBOX/android_kktoolkit", "Date": "2013-09-02T08:02:46Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getIntroDate()) != null) { date = simpleDateFormat.format(getIntroDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3930/buggy-version/app.src.main.java.com.giridhari.preachingassistant.model.DevoteeDetailsResponse.java", "BodyUseAPI": [], "Fixed commit": "2ee96a4ef119e3f12b5936302f115ad7d934c694", "Url": "https://api.github.com/repos/hariksetra/ISKCON-PA-Frontend", "Date": "2016-12-21T06:58:56Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 2) { java.lang.System.err.println(\"Invalid command line arguments\\n\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8092/buggy-version/src.problem.a1.java", "BodyUseAPI": [], "Fixed commit": "8cb83d3797dca7f0e22446f5dbdc8b815717fbdb", "Url": "https://api.github.com/repos/ToMMnG/AI_assignment1", "Date": "2015-08-29T14:26:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mColumnNumber) > 1) { int width = getResources().getDimensionPixelSize(R.dimen.dialog_width); int height = getResources().getDimensionPixelSize(R.dimen.dialog_height); getDialog().getWindow().setLayout(width, height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5776/buggy-version/app.src.main.java.com.example.xyzreader.ui.ArticleDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "e778906916cd1c21990731fa471bc2cd5290f25a", "Url": "https://api.github.com/repos/ilyarudyak/XYZReader", "Date": "2015-09-22T19:51:46Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mMusicPlayer.isPlaying())) { mMusicPlayer.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4062/buggy-version/Slavstagram.app.src.main.java.com.babushka.slav_squad.ui.custom_view.VolumeButton.java", "BodyUseAPI": ["com.babushka.slav_squad.MusicPlayer.play()"], "Fixed commit": "500a5de248f4de20558d898c2e72a5df8f8bea9c", "Url": "https://api.github.com/repos/ILIYANGERMANOV/slavstagram-mvp", "Date": "2017-11-11T19:44:15Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["twillRuntimeSpec.getLogLevels().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (defaultLogLevels != null) { logLevels.putAll(defaultLogLevels); }else { defaultLogLevels = com.google.common.collect.ImmutableMap.of(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1860/buggy-version/twill-yarn.src.main.java.org.apache.twill.internal.container.TwillContainerMain.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.putAll(java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "460f55aae422dfb511688c0c5dd538a3eebfd65f", "Url": "https://api.github.com/repos/yaojiefeng/twill", "Date": "2017-03-16T23:57:05Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt((((x - (this.position.x)) * (x - (this.position.x))) + ((y - (this.position.y)) * (y - (this.position.y)))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (d == 0) return 100;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3552/buggy-version/agario.server.src.main.java.server.model.object.MapObject.java", "BodyUseAPI": [], "Fixed commit": "37b4afa5a4fee9ab4a0fde006a133a5bbcd9f06e", "Url": "https://api.github.com/repos/i3ence/projeszk16", "Date": "2016-05-22T21:30:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (part0 > 1) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3552/buggy-version/agario.server.src.main.java.server.model.object.MapObject.java", "BodyUseAPI": [], "Fixed commit": "37b4afa5a4fee9ab4a0fde006a133a5bbcd9f06e", "Url": "https://api.github.com/repos/i3ence/projeszk16", "Date": "2016-05-22T21:30:47Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Yaka.tabIdent.chercherIdent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (a != null) { Compil.IdConst id = new Compil.IdConst(a); Yaka.tabIdent.rangeIdent(nom, id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2267/buggy-version/Compil.Declaration.java", "BodyUseAPI": [], "Fixed commit": "9ea8e5080fceb837fcfbbb9c52b081f010709905", "Url": "https://api.github.com/repos/miuhaki/ProjCompil", "Date": "2014-04-08T18:29:11Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Format.DEFAULT) == acceptable) { format = getDefaultFormat(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/81/buggy-version/intermine.web.main.src.org.intermine.webservice.server.WebService.java", "BodyUseAPI": [], "Fixed commit": "a63110bb3ba4f62443e6041403b95a248463d975", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2013-03-01T18:27:30Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index > 0) { builder.insert(0, \"SELECT COUNT(1) FROM (SELECT 1 \"); builder.append(\") AS temp\"); }else { builder.insert(0, \"SELECT COUNT(1) \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4656/buggy-version/src.main.java.com.mtoolkit.page.mybatis.MysqlDialect.java", "BodyUseAPI": [], "Fixed commit": "b89f30f59fba9c2638fc1f2d7dc4c2c7f607d174", "Url": "https://api.github.com/repos/zhangshixi/m-toolkit", "Date": "2014-04-11T01:31:12Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((join.mJoinType) != null) { builder.append(join.mJoinType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2981/buggy-version/library.src.main.java.com.getbase.android.db.fluentsqlite.query.QueryBuilder.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "35d8bfe280ba8620b45b8bfa45cd43a7d13a9e49", "Url": "https://api.github.com/repos/futuresimple/android-db-commons", "Date": "2014-01-20T23:52:07Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((option) == (axohEngine2.project.OPTION.NEWGAME)) { if ((title.files()) != null) { if (((title.files().length) - 1) < (titleLocation)) { title.enter(); titleX2 += 40; inputWait = 5; } } if ((title.files()) == null) { title.enter(); titleX2 += 40; inputWait = 5; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1337/buggy-version/src.axohEngine2.Judgement.java", "BodyUseAPI": [], "Fixed commit": "69843baf9b3f3e5479aec8e8ce054b14a3ba3cc0", "Url": "https://api.github.com/repos/axoh17/Game2", "Date": "2014-11-24T21:04:36Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files) != null) { if ((location) <= ((files.length) - 1)) { if ((files.length) == 3) return files[location]; if (((files.length) == 2) && ((location) <= 1)) return files[location]; if (((files.length) == 1) && ((location) == 0)) return files[location]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1337/buggy-version/src.axohEngine2.project.TitleMenu.java", "BodyUseAPI": [], "Fixed commit": "69843baf9b3f3e5479aec8e8ce054b14a3ba3cc0", "Url": "https://api.github.com/repos/axoh17/Game2", "Date": "2014-11-24T21:04:36Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir != (com.matthewyao.Tank.Direction.STOP)) { fire(dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7279/buggy-version/src.com.matthewyao.Tank.java", "BodyUseAPI": ["com.matthewyao.Tank.fire(com.matthewyao.Tank.Direction)"], "Fixed commit": "d42995c0f4478ca19ffb4768c8fd42c61c9b3c1c", "Url": "https://api.github.com/repos/matthewyao/TankWar", "Date": "2016-04-27T14:37:21Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.commons.model.TechnologyGroup.getTechInfos()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isEmpty(foundTechInfos)) { foundTechInfos = new java.util.ArrayList<com.photon.phresco.commons.model.TechnologyInfo>(); foundTechInfos.add(info); }else { foundTechInfos.add(info); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3486/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.rest.api.ComponentService.java", "BodyUseAPI": ["java.util.List<com.photon.phresco.commons.model.TechnologyInfo>.add(com.photon.phresco.commons.model.TechnologyInfo)"], "Fixed commit": "135559bb4408ff2a9dbcfbfd3fa6a291bdf38546", "Url": "https://api.github.com/repos/phresco/service", "Date": "2013-01-21T11:23:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(mEmailView.getText().toString().equals(\"\"))) && (!(mPasswordView.getText().toString().equals(\"\")))) signIn(mEmailView.getText().toString(), mPasswordView.getText().toString()); else android.widget.Toast.makeText(getApplicationContext(), \"Please fill all fields\", Toast.LENGTH_LONG).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5553/buggy-version/app.src.main.java.com.example.user.battlesheep.LoginActivity.java", "BodyUseAPI": ["com.example.user.battlesheep.LoginActivity.3.signIn(mEmailView.getText().toString(),mPasswordView.getText().toString())", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "mEmailView.getText().toString()", "mPasswordView.getText().toString()"], "Fixed commit": "05646c0af9cdd873019588496a51d293457d9adc", "Url": "https://api.github.com/repos/adirmatzkin/BattleSheep", "Date": "2017-01-26T13:58:46Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempW % 8) != 0) { imgW = ((float) (tempW * tempW)) / ((float) (((tempW / 8) + 1) * 8)); imgH = imgW / sRatio; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1158/buggy-version/app.src.main.java.com.tencent.qcloud.suixinbo.avcontrollers.GLVideoView.java", "BodyUseAPI": [], "Fixed commit": "c5dac45e64c2762cecd5f7e22994190d6fcde61a", "Url": "https://api.github.com/repos/zhaoyang21cn/Android_Suixinbo", "Date": "2016-10-10T08:44:09Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (processingOrder) numtosend = java.lang.Math.min(numtosend, nextOrder.getValue1().stackSize);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/731/buggy-version/common.logisticspipes.pipes.PipeItemsCraftingLogistics.java", "BodyUseAPI": [], "Fixed commit": "4bb3e180dbf5dbc633719c52b3468e8b6d5c3f45", "Url": "https://api.github.com/repos/RS485/LogisticsPipes-Dev", "Date": "2013-04-07T14:27:08Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 4) { argsOffset = 0; trainFileName = args[0]; testFileName = args[1]; }else if ((args.length) != 4) { usage(); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2428/buggy-version/src.knn.KNN.java", "BodyUseAPI": [], "Fixed commit": "e437bbd7587967767c01e83723f7026c974066ee", "Url": "https://api.github.com/repos/allenlsy/knn", "Date": "2014-07-09T23:15:25Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array == null) || ((array.length) < (numOfDataPoints))) { array = new float[numOfDataPoints]; java.lang.System.arraycopy(rtValues, 0, array, 0, numOfDataPoints); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1122/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLChromatogram.java", "BodyUseAPI": [], "Fixed commit": "96290bbc2f763f2b1b4e9bf15567a834ea68569b", "Url": "https://api.github.com/repos/adhi1419/msdk", "Date": "2017-08-14T16:34:19Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array == null) || ((array.length) < (numOfDataPoints))) { array = new float[numOfDataPoints]; java.lang.System.arraycopy(intensityValues, 0, array, 0, numOfDataPoints); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1122/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLChromatogram.java", "BodyUseAPI": [], "Fixed commit": "96290bbc2f763f2b1b4e9bf15567a834ea68569b", "Url": "https://api.github.com/repos/adhi1419/msdk", "Date": "2017-08-14T16:34:19Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array == null) || ((array.length) < (numOfDataPoints))) { array = new float[numOfDataPoints]; java.lang.System.arraycopy(intensityValues, 0, array, 0, numOfDataPoints); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1122/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLMsScan.java", "BodyUseAPI": [], "Fixed commit": "96290bbc2f763f2b1b4e9bf15567a834ea68569b", "Url": "https://api.github.com/repos/adhi1419/msdk", "Date": "2017-08-14T16:34:19Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array == null) || ((array.length) < (getNumberOfDataPoints()))) { array = new double[getNumberOfDataPoints()]; java.lang.System.arraycopy(mzValues, 0, array, 0, numOfDataPoints); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1122/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLMsScan.java", "BodyUseAPI": [], "Fixed commit": "96290bbc2f763f2b1b4e9bf15567a834ea68569b", "Url": "https://api.github.com/repos/adhi1419/msdk", "Date": "2017-08-14T16:34:19Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (split[0].equalsIgnoreCase(\"\")) { }else { java.lang.System.out.println(\"Unknown Command\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9108/buggy-version/src.tool.Main.java", "BodyUseAPI": [], "Fixed commit": "8c1fa021a799077d46fade249137298fa8537627", "Url": "https://api.github.com/repos/Roedekro/RoutePlanningTool", "Date": "2017-09-06T19:18:01Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ids != null) && ((ids.size()) == 0)) { return new java.util.ArrayList<com.zc.web.data.model.Debt>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5952/buggy-version/src.main.java.com.zc.web.dao.DebtDao.java", "BodyUseAPI": [], "Fixed commit": "1d453df3e749a1f74e47dc9d5382f23b004f0ffa", "Url": "https://api.github.com/repos/danhao/ZCMainServer", "Date": "2015-07-24T03:05:51Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sentence.equals(\"\"))) { lgSupport.handleSentence(sentence); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2713/buggy-version/java.src.com.soartech.bolt.BOLTLGSupport.java", "BodyUseAPI": ["com.soartech.bolt.LGSupport.handleSentence(java.lang.String)"], "Fixed commit": "3dc1919c7ab5660c0077a6b0285bc231707eac08", "Url": "https://api.github.com/repos/SoarGroup/rosie", "Date": "2015-06-10T13:54:26Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isReset)) myView.playEndSignal();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3065/buggy-version/app.src.main.java.com.example.dimuch.mafia_clock.MyPresenter.java", "BodyUseAPI": [], "Fixed commit": "299664c4b3d4438a9aa90828ae48f61721c5beb8", "Url": "https://api.github.com/repos/GooDimuch/Mafia_clock", "Date": "2017-09-24T07:44:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isActiveTimer) { countDownTimerPausableTime.onFinish(); countDownTimerPausableTime.cancel(); if (isPause) myView.changeBtnPause(\"Pause\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3065/buggy-version/app.src.main.java.com.example.dimuch.mafia_clock.MyPresenter.java", "BodyUseAPI": [], "Fixed commit": "299664c4b3d4438a9aa90828ae48f61721c5beb8", "Url": "https://api.github.com/repos/GooDimuch/Mafia_clock", "Date": "2017-09-24T07:44:31Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((((flag_translate_from) == null) || ((flag_translate_to) == null)) || ((connectionManager) == null))) setLanguageFlags();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3373/buggy-version/app.src.main.java.ch.unibe.scg.zeeguu.Search_Fragments.Fragment_Text.java", "BodyUseAPI": [], "Fixed commit": "8c2a7d5ce21ae718d63ae4bc8bd2e89d83e49ceb", "Url": "https://api.github.com/repos/SimpleDay/Zeeguu", "Date": "2015-01-27T13:18:10Z"},
{"Line": "=>864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restlet.engine.header.Header.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((base64hash.length()) == 22) { base64hash += \"==\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6557/buggy-version/modules.org.restlet.src.org.restlet.engine.header.HeaderUtils.java", "BodyUseAPI": [], "Fixed commit": "64cb8af5792432c71315a95b72cdb48219a170a3", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-11-18T16:56:41Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["isti.cnr.sse.rest.data.Allegato.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(path.contains(\"http\"))) { l.add(new org.primefaces.model.DefaultStreamedContent(new java.io.FileInputStream(path), contentType)); }else { java.io.InputStream is = new java.net.URL(path).openStream(); org.primefaces.model.DefaultStreamedContent d = new org.primefaces.model.DefaultStreamedContent(is, contentType); d.setName(a.getNome()); l.add(d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8188/buggy-version/src.main.java.viewProva.java", "BodyUseAPI": ["java.net.URL.openStream()", "java.util.List<org.primefaces.model.StreamedContent>.add(org.primefaces.model.DefaultStreamedContent)"], "Fixed commit": "df1916938e3dadd483713d2f29fcac3f8f7d3214", "Url": "https://api.github.com/repos/imatesiu/UIProveHW", "Date": "2016-12-02T21:30:31Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ds) == null) ds = new isti.cnr.sse.rest.data.FactoryLocal();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8188/buggy-version/src.main.java.SelectProve.java", "BodyUseAPI": [], "Fixed commit": "df1916938e3dadd483713d2f29fcac3f8f7d3214", "Url": "https://api.github.com/repos/imatesiu/UIProveHW", "Date": "2016-12-02T21:30:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((artifact.getLifecycleState()) != null) { webApp.setStatus(org.wso2.carbon.appmgt.impl.utils.AppManagerUtil.getApiStatus(artifact.getLifecycleState().toUpperCase())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4676/buggy-version/components.org.wso2.carbon.appmgt.impl.src.main.java.org.wso2.carbon.appmgt.impl.WebAppFactory.java", "BodyUseAPI": ["org.wso2.carbon.appmgt.impl.utils.AppManagerUtil.getApiStatus(artifact.getLifecycleState().toUpperCase())", "org.wso2.carbon.appmgt.api.model.WebApp.setStatus(org.wso2.carbon.appmgt.impl.utils.AppManagerUtil.getApiStatus(artifact.getLifecycleState().toUpperCase()))", "artifact.getLifecycleState().toUpperCase()", "org.wso2.carbon.governance.api.generic.dataobjects.GenericArtifact.getLifecycleState()"], "Fixed commit": "2749207b0a98fb003f5199aa28673c748f3d5cb0", "Url": "https://api.github.com/repos/lakshani/carbon-appmgt", "Date": "2016-07-07T11:54:23Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((protocol.equals(NetUtils.GRE_PROTO)) || (protocol.equals(NetUtils.ESP_PROTO))) || (protocol.equals(NetUtils.AH_PROTO))) { startPortOrType = 0; endPortOrCode = 0; }else { if ((startPort == null) || (endPort == null)) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port range specified, startPort = \" + startPort) + \", endPort = \") + endPort)); } if ((startPort == 0) && (endPort == 0)) { endPort = 65535; } if (startPort > endPort) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port range \" + startPort) + \":\") + endPort)); } if ((((startPort > 65535) || (endPort > 65535)) || (startPort < (-1))) || (endPort < (-1))) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port numbers \" + startPort) + \":\") + endPort)); } if ((startPort < 0) || (endPort < 0)) { throw new com.cloud.exception.InvalidParameterValueException((((\"Invalid port range \" + startPort) + \":\") + endPort)); } startPortOrType = startPort; endPortOrCode = endPort; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4505/buggy-version/server.src.com.cloud.network.security.SecurityGroupManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "8b6436c2636b794e1cfe56c9afb296d0996f6b36", "Url": "https://api.github.com/repos/exoscale/cloudstack", "Date": "2014-12-18T13:59:04Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((E[k][k]) == 0) { for (int i = 0; i < rows; i++) { if ((E[i][k]) != 0) { R3(k, i); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5781/buggy-version/src.LinearSystem.Solver.java", "BodyUseAPI": ["LinearSystem.Solver.R3(int,int)"], "Fixed commit": "45e2da8f54962d80fe78596b118e2eaa8bb1dde2", "Url": "https://api.github.com/repos/MadProgrammerGR/Linear-System-Solver", "Date": "2016-10-25T07:17:26Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((userNameElements.size()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1073/buggy-version/src.main.java.be.maximvdw.spigotsite.resource.SpigotResourceManager.java", "BodyUseAPI": [], "Fixed commit": "c242ae94a7490a5c9ea3e085c0f02f73381707b3", "Url": "https://api.github.com/repos/Maximvdw/SpigotSite", "Date": "2016-12-02T17:11:34Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextWeaponSyncKey) == 0) { nextWeaponSyncKey = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1821/buggy-version/src.main.java.aphelion.server.game.ClientState.java", "BodyUseAPI": [], "Fixed commit": "de3cdc14c8c06cbd8108452ef9a5fb464b3584ba", "Url": "https://api.github.com/repos/Periapsis/aphelion", "Date": "2014-05-11T13:27:15Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (extra == (Color.NONE)) out = true; else if (c.isColor(extra)) out = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8245/buggy-version/src.game.Player.java", "BodyUseAPI": ["game.Card.isColor(game.Color)"], "Fixed commit": "260c96d7526f188c6385f21eac95a6d06eefe308", "Url": "https://api.github.com/repos/mauro-belgiovine/SD-uno", "Date": "2016-06-12T13:57:18Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.findViewById(R.id.toolbar_layout)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (appBarLayout != null) { appBarLayout.setTitle(mItem.title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6379/buggy-version/android.app.src.main.java.edu.uw.leeds.peregrine.PilotPhysicalDetailFragment.java", "BodyUseAPI": ["android.support.design.widget.CollapsingToolbarLayout.setTitle(mItem.title)"], "Fixed commit": "35cb08176acb1dbbefcfb2ad2d6888fd262abb4b", "Url": "https://api.github.com/repos/leedsjb/aviation-preflight-manager", "Date": "2017-12-04T08:48:06Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.getChildNodes().item(x).getFirstChild()) != null) { s.setName(node.getChildNodes().item(x).getFirstChild().getNodeName()); s.setValue(node.getChildNodes().item(x).getFirstChild().getNodeValue()); }else if ((node.getChildNodes().item(x).getNodeName()) != null) { s.setName(node.getChildNodes().item(x).getNodeName()); s.setValue(node.getChildNodes().item(x).getNodeValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3947/buggy-version/XFA_Parser.src.main.java.org.pdfbox.extension.XFA_Parser.java", "BodyUseAPI": ["org.pdfbox.extension.objects.Field.setName(java.lang.String)", "org.w3c.dom.Node.getFirstChild()", "org.w3c.dom.NodeList.item(int)", "org.w3c.dom.NodeList.item(int)", "org.pdfbox.extension.objects.Field.setValue(java.lang.String)", "org.w3c.dom.Node.getChildNodes()", "org.w3c.dom.Node.getChildNodes()", "org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getNodeName()", "org.w3c.dom.Node.getNodeValue()", "org.w3c.dom.Node.getFirstChild()", "org.w3c.dom.Node.getNodeName()", "org.pdfbox.extension.objects.Field.setValue(java.lang.String)", "org.w3c.dom.NodeList.item(int)", "org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getNodeName()", "org.pdfbox.extension.objects.Field.setName(java.lang.String)", "org.w3c.dom.Node.getChildNodes()", "org.w3c.dom.Node.getChildNodes()", "org.w3c.dom.Node.getNodeValue()", "org.w3c.dom.Node.getChildNodes()"], "Fixed commit": "1ff84b7fe3d89e70d4f192835e8258921b22b9aa", "Url": "https://api.github.com/repos/pink-sh/XFA_Parser", "Date": "2015-04-08T14:26:44Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noOfChildren == 0) { noOfChildren = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6879/buggy-version/src.main.java.org.ivis.layout.LNode.java", "BodyUseAPI": [], "Fixed commit": "ddc5e7dafea5ec262558f63249a2cd3a605858ca", "Url": "https://api.github.com/repos/hasanbalci/chilay-sbgn", "Date": "2017-08-02T19:03:57Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(workspace.mkdirs())) { org.jenkinsci.plugins.gitserver.FileBackedHttpGitRepository.LOGGER.log(java.util.logging.Level.WARNING, \"Cannot create a workspace in {0}\", workspace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5048/buggy-version/src.main.java.org.jenkinsci.plugins.gitserver.FileBackedHttpGitRepository.java", "BodyUseAPI": [], "Fixed commit": "0ba65f572679f0f32503dbf81a2ffd27bc7197e5", "Url": "https://api.github.com/repos/oleg-nenashev/git-server-plugin", "Date": "2015-07-16T18:37:13Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((this) instanceof de.mpa.client.model.dbsearch.MetaProteinHit)) { peptidehit.addProteinHit(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8571/buggy-version/src.de.mpa.client.model.dbsearch.ProteinHit.java", "BodyUseAPI": [], "Fixed commit": "bcf45f5c5be520c2c3790e3a4e070d5d0996c3e2", "Url": "https://api.github.com/repos/compomics/meta-proteome-analyzer", "Date": "2017-03-07T12:56:21Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((work.getCitation().getCitationType()) == null) { work.getCitation().setCitationType(org.orcid.pojo.ajaxForm.Text.valueOf(StringUtils.EMPTY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5091/buggy-version/orcid-web.src.main.java.org.orcid.frontend.web.controllers.WorksController.java", "BodyUseAPI": ["work.getCitation().setCitationType(org.orcid.pojo.ajaxForm.Text.valueOf(StringUtils.EMPTY))", "org.orcid.pojo.ajaxForm.WorkForm.getCitation()"], "Fixed commit": "37e4c60e8a6c05937a545a7553841b359ac71c57", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2015-07-23T16:33:06Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((sd.exists()) && (sd.isDirectory()))) { sourceDir = (android.os.Environment.getExternalStorageDirectory().getPath()) + (GlobalData.EXPORT_PATH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7505/buggy-version/phoneProfiles.src.main.java.sk.henrichg.phoneprofiles.PhoneProfilesHelper.java", "BodyUseAPI": [], "Fixed commit": "db90fba76982e81cdb9d6edb7d285aa57dd16a54", "Url": "https://api.github.com/repos/henrichg/PhoneProfiles", "Date": "2016-03-29T11:34:17Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gamepad2.right_stick_x) > (FTCInterface.DRIVING_THRESHOLD)) if (((gamepad1.right_stick_x) + (gamepad1.right_stick_y)) < (FTCInterface.DRIVING_THRESHOLD)) { double value = (gamepad2.right_stick_x) / (FTCInterface.SENSITIVITY_MOTOR_DIVIDEND); if (value > 0) { robot.leftMotor.setPower(value); robot.rightMotor.setPower((-value)); }else { robot.leftMotor.setPower((-value)); robot.rightMotor.setPower(value); } }else if (this.logDebug) { telemetry.addData(\"Warning\", \"Control request rejected; control locked.\"); updateTelemetry(telemetry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8271/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.FTCTeleopOpMode.java", "BodyUseAPI": [], "Fixed commit": "71a29b5026f5255dc34c3f699963864a67a8c462", "Url": "https://api.github.com/repos/TigardTech/ftc_app", "Date": "2016-10-28T02:54:50Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gamepad2.left_trigger) > (FTCInterface.TREAD_THRESHOLD)) this.motorTread.setPower(gamepad2.left_trigger); else this.motorTread.setPower(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8271/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.FTCTeleopOpMode.java", "BodyUseAPI": [], "Fixed commit": "71a29b5026f5255dc34c3f699963864a67a8c462", "Url": "https://api.github.com/repos/TigardTech/ftc_app", "Date": "2016-10-28T02:54:50Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cameraAdapter.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1273/buggy-version/Android.src.org.droidplanner.android.proxy.mission.item.fragments.MissionSurveyFragment.java", "BodyUseAPI": [], "Fixed commit": "4b0e802cd6c70d8f2265f40a3c4f7d38ccf2cc13", "Url": "https://api.github.com/repos/MaxQu/Tower", "Date": "2015-08-12T06:50:02Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cameraAdapter.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1273/buggy-version/Android.src.org.droidplanner.android.proxy.mission.item.fragments.MissionStructureScannerFragment.java", "BodyUseAPI": [], "Fixed commit": "4b0e802cd6c70d8f2265f40a3c4f7d38ccf2cc13", "Url": "https://api.github.com/repos/MaxQu/Tower", "Date": "2015-08-12T06:50:02Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vn.ael.persistence.manager.ExfeetableManager.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((exfee.getApproved()) != null) { updatedApprove = (exfee.getApproved()) ? false : true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1677/buggy-version/src.main.java.com.vn.ael.webapp.controller.AccountingController.java", "BodyUseAPI": ["com.vn.ael.persistence.entity.Exfeetable.getApproved()"], "Fixed commit": "04e1887c91bfc598603216abe712dacbacc116de", "Url": "https://api.github.com/repos/linhrepo/ael", "Date": "2016-02-17T14:24:14Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rankHelpBubble) != null) { rankHelpBubble.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5343/buggy-version/src.com.fave100.client.pagefragments.favelist.widgets.FavePickWidget.java", "BodyUseAPI": [], "Fixed commit": "8c2a40caf79811df14a8780d97801c1e8a7ff3c6", "Url": "https://api.github.com/repos/yissachar/fave100", "Date": "2013-06-13T17:42:13Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ipims.database.DatabaseManager.getInstance().getUser(user.getUserName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (alreadyExistingUser == null) { com.ipims.usersession.UserSession.getInstance().register(user, password); view.showInfo(\"User registered. Please login again.\"); handleBackButton(); }else { view.showInfo(\"User name already exists. Please use a different username.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2391/buggy-version/src.com.ipims.usersession.RegistrationViewController.java", "BodyUseAPI": [], "Fixed commit": "3d9bb939eb2f69cb8fd12563e922ecf1521f1d8e", "Url": "https://api.github.com/repos/srodewal/Interactive-Patient-Information-Management-System", "Date": "2015-11-03T20:01:20Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (appointment.getTitle().equals(\"\")) { approved = false; java.lang.System.out.println(\"The appointment needs a title.\"); javax.swing.JOptionPane.showMessageDialog(this, \"You must set a title.\", \"Missing title\", javax.swing.JOptionPane.ERROR_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8303/buggy-version/src.gui.EditAppointmentPanel.java", "BodyUseAPI": [], "Fixed commit": "c18bad83056e6d83bd322366fe6040308c55f1a8", "Url": "https://api.github.com/repos/aleksanb/fellesprosjektet", "Date": "2013-03-22T15:47:17Z"},
{"Line": "=>734", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) == (com.engagepoint.university.admincentre.synchronization.SynchMaster.Mode.AUTO)) { pull(); push(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4481/buggy-version/admincentre-core.src.main.java.com.engagepoint.university.admincentre.synchronization.SynchMaster.java", "BodyUseAPI": [], "Fixed commit": "56bc7a95d62b786d8bf4a7baf1446802ca026ad3", "Url": "https://api.github.com/repos/engagepoint/labs-admin-center", "Date": "2014-03-11T16:18:12Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.contains(\";\")) { for (java.lang.String infoPiece : info.split(\";\")) { java.lang.System.out.println((\" Hey \" + infoPiece)); java.lang.String[] infoToUse = infoPiece.split(\" \"); if ((java.lang.Integer.parseInt(infoToUse[1])) == (com.desitum.shveetlife.network.ProcessData.TILE)) { workOnTile(infoToUse); } } }else { java.lang.String[] infoToUse = info.split(\" \"); if ((java.lang.Integer.parseInt(infoToUse[1])) == (com.desitum.shveetlife.network.ProcessData.TILE)) { workOnTile(infoToUse); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8206/buggy-version/core.src.com.desitum.shveetlife.world.GameWorld.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "67a03fa3d5915f3f943d4cdd1ac869ae0408d9ce", "Url": "https://api.github.com/repos/KodyVanRy/ShveetLife", "Date": "2015-04-16T19:42:50Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (DPApiCallback.ACTION_DRONE_CONNECTION_FAILED.equals(action)) { disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9259/buggy-version/Android.src.org.droidplanner.android.api.DroneApi.java", "BodyUseAPI": [], "Fixed commit": "405b4c76ee236b979f5ce0dd1ac2defeeee9d321", "Url": "https://api.github.com/repos/ne0fhyk/droidplanner", "Date": "2014-11-10T15:35:15Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.bukkit.entity.Player) (entity)).getName().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(name.equals(npc.getOwner()))) retrieved = ((get(getByType(PLAYERS), name)) == null) ? groupMap.get(name) : get(getByType(PLAYERS), name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3391/buggy-version/src.guard.net.citizensnpcs.guards.flags.FlagSorter.java", "BodyUseAPI": ["net.citizensnpcs.guards.flags.FlagSorter.get(java.util.Map<java.lang.String, net.citizensnpcs.guards.flags.FlagInfo>,java.lang.String)", "java.util.Map<java.lang.String, net.citizensnpcs.guards.flags.FlagInfo>.get(java.lang.String)", "net.citizensnpcs.guards.flags.FlagSorter.get(java.util.Map<java.lang.String, net.citizensnpcs.guards.flags.FlagInfo>,java.lang.String)"], "Fixed commit": "8279df82a1c6675d642b4f09ead4ccf1cc2d632f", "Url": "https://api.github.com/repos/CitizensDev/Citizens", "Date": "2011-08-31T10:32:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getStatement().executeQuery(\"SELECT name FROM sqlite_master WHERE type='table' AND name='shortcuts'\").next()) { java.sql.ResultSet rs = getStatement().executeQuery(\"SELECT max(id) AS startId FROM shortcuts\"); if (rs.next()) { startId = rs.getLong(\"startId\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8394/buggy-version/src.main.java.cz.certicon.routing.data.ch.sqlite.SqliteContractionHierarchiesDataRW.java", "BodyUseAPI": [], "Fixed commit": "74044740bbab2cdbba50f00964691555b21ba17a", "Url": "https://api.github.com/repos/cc-routing/routing", "Date": "2016-05-12T13:50:13Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListCoupons) != null) { mAdapterSimilarCoupon.updateData(mListCoupons); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/44/buggy-version/Android.PON.app.src.main.java.com.hunters.pon.activities.CouponDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "e2a258313034b662e7af5d8f1cfe60b65a4fc465", "Url": "https://api.github.com/repos/HUNTERS1984/PON_APP", "Date": "2016-10-17T15:30:26Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.services.AchievementTemplateService.getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((templates.size()) == 0) { return \"redirect:/report/current?noTemplates\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1386/buggy-version/src.main.java.app.controllers.ReportController.java", "BodyUseAPI": [], "Fixed commit": "dc919fd4247042f09a27f679f1d2dbabbccd6c15", "Url": "https://api.github.com/repos/aldinaman/SpringBoot", "Date": "2016-04-07T12:54:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (v)).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(text.equals(\"\"))) { android.os.Bundle bundle = new android.os.Bundle(); bundle.putString(\"time\", text); newFragment.setArguments(bundle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3067/buggy-version/app.src.main.java.afcc.taavi.kase.afcc.activity.AverageSpeedActivity.java", "BodyUseAPI": ["android.os.Bundle.putString(java.lang.String,java.lang.String)"], "Fixed commit": "82fbde364cec6cc531b63b07cf04c6fbeff233e0", "Url": "https://api.github.com/repos/DaveKase/AFCC", "Date": "2015-09-09T21:10:03Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { java.lang.String time = savedInstanceState.getString(\"time\"); assert time != null; java.lang.String[] hourAndMinute = time.split(\":\"); hour = java.lang.Integer.parseInt(hourAndMinute[0]); minute = java.lang.Integer.parseInt(hourAndMinute[1]); }else { hour = c.get(java.util.Calendar.HOUR_OF_DAY); minute = c.get(java.util.Calendar.MINUTE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3067/buggy-version/app.src.main.java.afcc.taavi.kase.afcc.activity.TimePickerFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "82fbde364cec6cc531b63b07cf04c6fbeff233e0", "Url": "https://api.github.com/repos/DaveKase/AFCC", "Date": "2015-09-09T21:10:03Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((key == null) || ((key.length()) == 0)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1445/buggy-version/src.TobleMiner.MineFight.Language.Langfile.java", "BodyUseAPI": [], "Fixed commit": "924b1345d01c18a4248ab370c1cf2612293ea83e", "Url": "https://api.github.com/repos/TobleMiner/MineFight", "Date": "2014-07-19T12:44:02Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGoogleApiClient) == null) { initAuthConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1367/buggy-version/app.src.main.java.ch.xero88.alambic.features.login.LoginPresenter.java", "BodyUseAPI": [], "Fixed commit": "191aaa9b5d6c9d0172b3fdfc7f4f3544b213934e", "Url": "https://api.github.com/repos/xero88/alambic-android", "Date": "2017-05-02T15:08:59Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.crate.analyze.expressions.ExpressionAnalyzer.InnerExpressionAnalyzer.process(node.getMin(),io.crate.analyze.expressions.ExpressionAnalysisContext)", "io.crate.analyze.expressions.ExpressionAnalyzer.InnerExpressionAnalyzer.process(node.getValue(),io.crate.analyze.expressions.ExpressionAnalysisContext)", "io.crate.analyze.expressions.ExpressionAnalyzer.InnerExpressionAnalyzer.process(node.getMax(),io.crate.analyze.expressions.ExpressionAnalysisContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((value.valueType()) == (DataTypes.UNDEFINED)) || ((min.valueType()) == (DataTypes.UNDEFINED))) || ((max.valueType()) == (DataTypes.UNDEFINED))) { return io.crate.analyze.symbol.Literal.NULL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7006/buggy-version/sql.src.main.java.io.crate.analyze.expressions.ExpressionAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "9a812d5f3ad3ff97f807c268b298492a7c93ee83", "Url": "https://api.github.com/repos/crate/crate", "Date": "2016-11-15T11:36:28Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.plugin) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3815/buggy-version/petblocks-bukkit-plugin.src.main.java.com.github.shynixn.petblocks.bukkit.logic.business.configuration.SimpleConfig.java", "BodyUseAPI": [], "Fixed commit": "1ef61e9a23ae2fe46b0cbf5474becbd74699410b", "Url": "https://api.github.com/repos/Shynixn/PetBlocks", "Date": "2017-10-11T15:48:29Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.github.shynixn.petblocks.bukkit.logic.business.configuration.ConfigPet.getInstance().getPetNameBlackList()) != null) { for (final java.lang.String blackName : com.github.shynixn.petblocks.bukkit.logic.business.configuration.ConfigPet.getInstance().getPetNameBlackList()) { if (name.toUpperCase().contains(blackName.toUpperCase())) { throw new java.lang.RuntimeException(\"Name is not valid!\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3815/buggy-version/petblocks-bukkit-plugin.src.main.java.com.github.shynixn.petblocks.bukkit.logic.persistence.entity.PetData.java", "BodyUseAPI": [], "Fixed commit": "1ef61e9a23ae2fe46b0cbf5474becbd74699410b", "Url": "https://api.github.com/repos/Shynixn/PetBlocks", "Date": "2017-10-11T15:48:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender.hasPermission((\"doppelganger.\" + topic))) { _help.showHelp(sender, topic, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5968/buggy-version/src.io.github.totemo.doppelganger.Commands.java", "BodyUseAPI": ["io.github.totemo.doppelganger.Help.showHelp(org.bukkit.command.CommandSender,java.lang.String,boolean)"], "Fixed commit": "08bef27b1c0d2b4da0f6e879860d5db6559bcd65", "Url": "https://api.github.com/repos/totemo/Doppelganger", "Date": "2013-05-27T13:34:53Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.cluster) != null) { domainregistry.Metadata metadata = this.cluster.getMetadata(); return metadata.getAllHosts().size(); }else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4304/buggy-version/server.src.main.java.domainregistry.cassandra.CassandraClient.java", "BodyUseAPI": [], "Fixed commit": "699a5fb62a2ea78f15cda50610759f2aaa7184f0", "Url": "https://api.github.com/repos/reTHINK-project/dev-registry-domain", "Date": "2016-03-20T18:42:42Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewPager) == null) { return super.onDown(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7299/buggy-version/library.src.main.java.com.alexvasilkov.gestures.GestureControllerForPager.java", "BodyUseAPI": [], "Fixed commit": "a9d1c72d2a4d133f0b2976f3057c3e5b5eacdf47", "Url": "https://api.github.com/repos/alexvasilkov/GestureViews", "Date": "2016-01-11T10:40:22Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.inRib.containsKey(dest))) { return new java.util.LinkedList<topo.BGPPath>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4532/buggy-version/src.topo.AS.java", "BodyUseAPI": [], "Fixed commit": "d7c899e47cc6197cd6269e86faf62bc4b4eac28c", "Url": "https://api.github.com/repos/pendgaft/nightwing", "Date": "2011-11-23T18:01:19Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (edu.wpi.cs.wpisuitetng.modules.requirementsmanager.models.PermissionModel.getInstance().getUserPermissions().canCreateIteration()) { add(itemCreateIteration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7471/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanager.view.popupmenu.AnywherePopupMenu.java", "BodyUseAPI": [], "Fixed commit": "fa30d1319f1c3a6bd5826e968fdd365cfbc20fe6", "Url": "https://api.github.com/repos/333fred/wpi-suite-tng", "Date": "2013-04-23T21:35:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (edu.wpi.cs.wpisuitetng.modules.requirementsmanager.models.PermissionModel.getInstance().getUserPermissions().canCreateRequirement()) { add(itemCreateRequirement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7471/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanager.view.popupmenu.AnywherePopupMenu.java", "BodyUseAPI": [], "Fixed commit": "fa30d1319f1c3a6bd5826e968fdd365cfbc20fe6", "Url": "https://api.github.com/repos/333fred/wpi-suite-tng", "Date": "2013-04-23T21:35:18Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (edu.wpi.cs.wpisuitetng.modules.requirementsmanager.models.PermissionModel.getInstance().getUserPermissions().canCreateIteration()) { add(menuNewIteration); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7471/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanager.view.popupmenu.RootPopupMenu.java", "BodyUseAPI": [], "Fixed commit": "fa30d1319f1c3a6bd5826e968fdd365cfbc20fe6", "Url": "https://api.github.com/repos/333fred/wpi-suite-tng", "Date": "2013-04-23T21:35:18Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((side) == 4) { renderModelNS(wireMap.get(\"center_X\")); }else { renderModelWE(wireMap.get(\"center_X\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8037/buggy-version/common.mrtjp.projectred.renderstuffs.WireRenderAssistant.java", "BodyUseAPI": [], "Fixed commit": "f2e184efe4b8612111d4dc2a90a5e4c8ac666785", "Url": "https://api.github.com/repos/MrTJP/ProjectRed", "Date": "2013-07-21T18:30:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getResponseClient()) == null) { event.getView().showErrorMessage(event.getMessage()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3889/buggy-version/app.src.main.java.com.goforer.github_clean_architecture_mvp.presentation.presenter.SplashPresenter.java", "BodyUseAPI": ["event.getView().showErrorMessage(event.getMessage())", "com.goforer.github_clean_architecture_mvp.presentation.model.event.UserProfileEvent.getView()", "com.goforer.github_clean_architecture_mvp.presentation.model.event.UserProfileEvent.getMessage()"], "Fixed commit": "8f912695baed65c21e2ed0fc55897063e6192eee", "Url": "https://api.github.com/repos/Lukoh/CleanArchitecture_Example", "Date": "2017-03-01T09:49:50Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getResponseClient()) == null) { event.getView().showErrorMessage(event.getMessage()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3889/buggy-version/app.src.main.java.com.goforer.github_clean_architecture_mvp.presentation.presenter.RepositoryPresenter.java", "BodyUseAPI": ["com.goforer.github_clean_architecture_mvp.presentation.model.event.RepositoryEvent.getMessage()", "com.goforer.github_clean_architecture_mvp.presentation.model.event.RepositoryEvent.getView()", "event.getView().showErrorMessage(event.getMessage())"], "Fixed commit": "8f912695baed65c21e2ed0fc55897063e6192eee", "Url": "https://api.github.com/repos/Lukoh/CleanArchitecture_Example", "Date": "2017-03-01T09:49:50Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.diana.StaffDaoImp.findStaffByName(staff.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (s.isEmpty()) { java.lang.System.out.println(\"There is no such a person!\"); }else em.remove(s.get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8674/buggy-version/restproject.src.main.java.org.diana.StaffDaoImp.java", "BodyUseAPI": ["javax.persistence.EntityManager.remove(s.get(0))", "java.util.List<org.jboss.tools.examples.model.Staff>.get(int)"], "Fixed commit": "a42f96030075910c821446ba48a5cc7e18d5d43d", "Url": "https://api.github.com/repos/gabriella333/RESTproject", "Date": "2017-10-02T11:37:14Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(canceled)) { notificationManager.cancel(notificationId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8510/buggy-version/src.com.arcao.geocaching4locus.service.AbstractService.java", "BodyUseAPI": [], "Fixed commit": "c0def0f55c80eab211570b60a1830b6b95ebc972", "Url": "https://api.github.com/repos/arcao/Geocaching4Locus", "Date": "2013-07-11T12:18:16Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t > (java.lang.Short.MAX_VALUE)) sound[j] = java.lang.Short.MAX_VALUE; else if (t < (-(java.lang.Short.MAX_VALUE))) sound[j] = -(java.lang.Short.MAX_VALUE); else sound[j] += s[j];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8239/buggy-version/src.synth.SimpleSoundSourceMix.java", "BodyUseAPI": [], "Fixed commit": "4bbdae7d463ca7b3a83d14464dca3ea0ef310ff7", "Url": "https://api.github.com/repos/sitronTe/TinySynth", "Date": "2013-01-05T12:50:38Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t > (java.lang.Short.MAX_VALUE)) sound[j] = java.lang.Short.MAX_VALUE; else if (t < (-(java.lang.Short.MAX_VALUE))) sound[j] = -(java.lang.Short.MAX_VALUE); else sound[j] += temp[j];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8239/buggy-version/src.synth.SimpleSoundChannelMix.java", "BodyUseAPI": [], "Fixed commit": "4bbdae7d463ca7b3a83d14464dca3ea0ef310ff7", "Url": "https://api.github.com/repos/sitronTe/TinySynth", "Date": "2013-01-05T12:50:38Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getXCord()) + 1) <= 9) { displayUnitMovement(movableSpaceIcon, gbp.getCurrentUnit().getMobility(), ((getXCord()) + i), getYCord()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9245/buggy-version/src.teamgameproject.GameBoardSpace.java", "BodyUseAPI": [], "Fixed commit": "d5e4f629ce4d5a434d30bd2cb6921caab10ca2af", "Url": "https://api.github.com/repos/ryanwbass/Team05GameProject", "Date": "2016-03-03T19:41:28Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getYCord()) + 1) <= 9) { displayUnitMovement(movableSpaceIcon, gbp.getCurrentUnit().getMobility(), getXCord(), ((getYCord()) + i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9245/buggy-version/src.teamgameproject.GameBoardSpace.java", "BodyUseAPI": [], "Fixed commit": "d5e4f629ce4d5a434d30bd2cb6921caab10ca2af", "Url": "https://api.github.com/repos/ryanwbass/Team05GameProject", "Date": "2016-03-03T19:41:28Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getXCord()) - 1) >= 0) { displayUnitMovement(movableSpaceIcon, gbp.getCurrentUnit().getMobility(), ((getXCord()) - i), getYCord()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9245/buggy-version/src.teamgameproject.GameBoardSpace.java", "BodyUseAPI": [], "Fixed commit": "d5e4f629ce4d5a434d30bd2cb6921caab10ca2af", "Url": "https://api.github.com/repos/ryanwbass/Team05GameProject", "Date": "2016-03-03T19:41:28Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getYCord()) - 1) >= 0) { displayUnitMovement(movableSpaceIcon, gbp.getCurrentUnit().getMobility(), getXCord(), ((getYCord()) - i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9245/buggy-version/src.teamgameproject.GameBoardSpace.java", "BodyUseAPI": [], "Fixed commit": "d5e4f629ce4d5a434d30bd2cb6921caab10ca2af", "Url": "https://api.github.com/repos/ryanwbass/Team05GameProject", "Date": "2016-03-03T19:41:28Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.randude14.hungergames.Files.getFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(file.exists())) { if (hasDefault) { if (!(file.exists())) com.randude14.hungergames.HungerGames.getInstance().saveResource(path, false); }else { file.createNewFile(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3413/buggy-version/src.main.java.com.randude14.hungergames.Files.java", "BodyUseAPI": ["java.io.File.exists()", "java.io.File.createNewFile()"], "Fixed commit": "be9f8be59fa2d41876b56d16749b0374555c481d", "Url": "https://api.github.com/repos/kitskub/MyHungerGames", "Date": "2012-07-15T21:11:57Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((intent.getExtras().getString(\"do\")) == \"stop\") && (mp.isPlaying())) { mp.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1058/buggy-version/src.android.SoundPlayerService.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()"], "Fixed commit": "6b76ae80040a0394ae8bdc2cf05e473cb4b7657e", "Url": "https://api.github.com/repos/kd-code/cordova-plugin-hello", "Date": "2016-09-12T00:44:53Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((d.getDate()) == (parties.get(i).d.getDate())) { this.add(new com.GGI.uParty.Objects.PartyModule(u, parties.get(i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2728/buggy-version/core.src.com.GGI.uParty.Objects.PartyList.java", "BodyUseAPI": ["java.util.ArrayList<com.GGI.uParty.Network.Party>.get(int)", "com.GGI.uParty.Objects.PartyList.add(com.GGI.uParty.Objects.PartyModule)"], "Fixed commit": "4a7d8dea743dff265a5c41f8853eda1f7ce1a015", "Url": "https://api.github.com/repos/GoodGameIndustries/uParty-App", "Date": "2016-01-27T19:52:53Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parties.height) > (0.825F * (h))) { scrolled -= screenY - (touchY); if ((scrolled) < 0) { scrolled = 0; } if (((parties.height) - (scrolled)) <= (0.825F * (h))) { scrolled = ((int) ((parties.height) - (0.825 * (h)))); } touchY = screenY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2728/buggy-version/core.src.com.GGI.uParty.Screens.MainScreen.java", "BodyUseAPI": [], "Fixed commit": "4a7d8dea743dff265a5c41f8853eda1f7ce1a015", "Url": "https://api.github.com/repos/GoodGameIndustries/uParty-App", "Date": "2016-01-27T19:52:53Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pbCtx.current.gotoValue) == (org.beetl.core.statement.IGoto.RETURN)) || ((pbCtx.current.gotoValue) == (org.beetl.core.statement.IGoto.BREAK))) { data.hasGoto = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2856/buggy-version/beetl-core.src.main.java.org.beetl.core.AntlrProgramBuilder.java", "BodyUseAPI": [], "Fixed commit": "6d21a280d2440e69c221333ada1b3ea74446f2f4", "Url": "https://api.github.com/repos/javamonkey/beetl2.0", "Date": "2014-10-23T02:24:58Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { try { table.put(put); java.lang.System.out.println(\"data inserted\"); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2180/buggy-version/src.main.java.HBase.java", "BodyUseAPI": [], "Fixed commit": "49bc8b8835c6b05048370cf9058648c456fa1101", "Url": "https://api.github.com/repos/Ahmad535353/NimboSearchEngine", "Date": "2017-08-23T08:45:02Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((url.length()) < 1) || ((url.length()) > 500)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2180/buggy-version/src.main.java.HBase.java", "BodyUseAPI": [], "Fixed commit": "49bc8b8835c6b05048370cf9058648c456fa1101", "Url": "https://api.github.com/repos/Ahmad535353/NimboSearchEngine", "Date": "2017-08-23T08:45:02Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getRectangle().getY()) > (blockBottom - 2.0F)) { setYPosition((blockBottom - (rectOffsetY()))); }else { leftCollision(state, info); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2646/buggy-version/core.src.com.plumbers.game.Player.java", "BodyUseAPI": ["com.plumbers.game.Player.setYPosition((blockBottom - (rectOffsetY())))"], "Fixed commit": "a60a048c24982a15f7b0711c1119224ee67c3442", "Url": "https://api.github.com/repos/dskluzacek/plumbers-on-ice", "Date": "2017-02-08T09:55:21Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSingleFileTotalSize) == (-1)) { mFileSizeBar.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7092/buggy-version/JuYou.src.com.zhaoyan.juyou.dialog.CopyMoveDialog.java", "BodyUseAPI": [], "Fixed commit": "b3e470a50d6dbec0f3f7901c762a441cf4e20582", "Url": "https://api.github.com/repos/liangPATHofei1100/ZhaoYanJuYou", "Date": "2014-05-05T02:13:53Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["skill.aiml.IntegratedAIMLInterpreter.process(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(trainOfThought.get(((trainOfThought.size()) - 1)).getInput().equals(out))) trainOfThought.add(new bot.Thought(out, this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/507/buggy-version/src.main.java.skill.aiml.AIMLSkill.java", "BodyUseAPI": ["java.util.List<bot.Thought>.add(bot.Thought)"], "Fixed commit": "bc682513a9b5091e66578cc8a1685cdfe816250e", "Url": "https://api.github.com/repos/jorisschellekens/experienced-elephant", "Date": "2017-11-26T12:37:49Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["regionNameElem.text().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((regionNameParts[1].length()) != 0) { regionName += \",\" + (regionNameParts[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3676/buggy-version/src.main.java.tw.com.mitake.hbase.io.request.Main.java", "BodyUseAPI": [], "Fixed commit": "d87a004bd782d5915b26accbae234afc3e29af87", "Url": "https://api.github.com/repos/mitaketw/hbase-io-request", "Date": "2017-12-14T07:49:15Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((square) != null) { if (b.addPiece(editorscreen.getDraggingPiece().getPiece(), square.getCoordinates())) { editorscreen.setDraggingPiece(((views.PieceView) (null))); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3780/buggy-version/src.controllers.EditorSquareController.java", "BodyUseAPI": [], "Fixed commit": "a2ae4aefdb96e0e9c9c85b92af44504fa54ffdd4", "Url": "https://api.github.com/repos/BritCoder96/CS3733Kabasuji", "Date": "2016-05-04T07:00:25Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == ((begins.size()) - 1)) || ((k < ((ends.size()) - 1)) && ((begins.get((i + 1)).getBegin()) > (ends.get((k + 1)).getEnd())))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/409/buggy-version/src.main.java.edu.utah.bmi.nlp.rush.core.RuSH.java", "BodyUseAPI": [], "Fixed commit": "f086d76d37ad1470b684707a46eb7359e1ae7066", "Url": "https://api.github.com/repos/jianlins/RuSH", "Date": "2017-07-28T23:24:37Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((i < ((begins.size()) - 1)) && (k < ((ends.size()) - 1))) && ((begins.get((i + 1)).getBegin()) < ((ends.get(k).begin) + 1))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/409/buggy-version/src.main.java.edu.utah.bmi.nlp.rush.core.RuSH.java", "BodyUseAPI": [], "Fixed commit": "f086d76d37ad1470b684707a46eb7359e1ae7066", "Url": "https://api.github.com/repos/jianlins/RuSH", "Date": "2017-07-28T23:24:37Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.poznan.put.cs.ify.webify.service.IEventQueueService.pull(pl.poznan.put.cs.ify.webify.data.entity.user.UserEntity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (element == null) { return new pl.poznan.put.cs.ify.webify.rest.model.Message(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4066/buggy-version/src.main.java.pl.poznan.put.cs.ify.webify.rest.service.impl.MessageService.java", "BodyUseAPI": [], "Fixed commit": "c4c23f0fe4b4b62e6e55da3d6692a0cc136d897b", "Url": "https://api.github.com/repos/patdab90/ServerIfy", "Date": "2014-01-15T14:06:22Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn) == null) { return \"null connection\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4990/buggy-version/cardshifter-server.src.main.java.com.cardshifter.server.clients.ClientWebSocket.java", "BodyUseAPI": [], "Fixed commit": "d75296644761bd4a0685875863723df3dd3e7ecb", "Url": "https://api.github.com/repos/Cardshifter/Cardshifter", "Date": "2015-08-25T14:10:12Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conn.isOpen()) { return \"connection not open\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4990/buggy-version/cardshifter-server.src.main.java.com.cardshifter.server.clients.ClientWebSocket.java", "BodyUseAPI": [], "Fixed commit": "d75296644761bd4a0685875863723df3dd3e7ecb", "Url": "https://api.github.com/repos/Cardshifter/Cardshifter", "Date": "2015-08-25T14:10:12Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn.getRemoteSocketAddress()) == null) { return \"null address\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4990/buggy-version/cardshifter-server.src.main.java.com.cardshifter.server.clients.ClientWebSocket.java", "BodyUseAPI": [], "Fixed commit": "d75296644761bd4a0685875863723df3dd3e7ecb", "Url": "https://api.github.com/repos/Cardshifter/Cardshifter", "Date": "2015-08-25T14:10:12Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isLeaf(currentNode.left)) == true) { currentNode.left = null; }else { delete(currentNode.left, maxOnLeft); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1016/buggy-version/DataStructures.BinarySearchTree.BinarySearchTree.java", "BodyUseAPI": ["BinarySearchTree<T>.delete(BinarySearchTree<T>.Node<T>,T)"], "Fixed commit": "bc173a44eecee1f81c5075e3bf22661a9a12a6b4", "Url": "https://api.github.com/repos/kadirsekha/Java", "Date": "2016-01-25T21:56:13Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isLeaf(currentNode.right)) == true) { currentNode.right = null; }else { delete(currentNode.right, minOnRight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1016/buggy-version/DataStructures.BinarySearchTree.BinarySearchTree.java", "BodyUseAPI": ["BinarySearchTree<T>.delete(BinarySearchTree<T>.Node<T>,T)"], "Fixed commit": "bc173a44eecee1f81c5075e3bf22661a9a12a6b4", "Url": "https://api.github.com/repos/kadirsekha/Java", "Date": "2016-01-25T21:56:13Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((coordX < 0) || (coordY < 0)) || (id < 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/909/buggy-version/titan-shippment.src.model.agglomeration.Plan.java", "BodyUseAPI": [], "Fixed commit": "294c1aedbe26ea4e7ad9af8896c0f2b0d070a8b3", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-12T10:38:50Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "model.agglomeration.InterfaceAgglo.getPlan()", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(plan.addNoeud(x, y, idNoeud))) { intf.resetPlan(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/909/buggy-version/titan-shippment.src.utils.XMLBuilder.java", "BodyUseAPI": [], "Fixed commit": "294c1aedbe26ea4e7ad9af8896c0f2b0d070a8b3", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-12T10:38:50Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.agglomeration.InterfaceAgglo.getPlan()", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.Float.parseFloat(java.lang.String)", "java.lang.Float.parseFloat(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(plan.addTronconToNoeud(idNoeud, rue, vitesse, longueur, idDestination))) { intf.resetPlan(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/909/buggy-version/titan-shippment.src.utils.XMLBuilder.java", "BodyUseAPI": [], "Fixed commit": "294c1aedbe26ea4e7ad9af8896c0f2b0d070a8b3", "Url": "https://api.github.com/repos/LeonardA-L/hm-devOO", "Date": "2014-11-12T10:38:50Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(qualityCollection.getCollectId())) { qualityCollectVo.setCollectId(qualityCollection.getCollectId()); }else { java.lang.String collectId = org.igeek.common.TokenCache.getValue(java.lang.String.valueOf(qualityCollection.getUserId())); qualityCollectVo.setCollectId(collectId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/941/buggy-version/src.main.java.org.igeek.service.impl.IQualityCollectServiceImpl.java", "BodyUseAPI": ["org.igeek.service.impl.QualityCollection.getUserId()", "org.igeek.service.impl.QualityCollection.getCollectId()", "org.igeek.common.TokenCache.getValue(java.lang.String)", "java.lang.String.valueOf(qualityCollection.getUserId())", "org.igeek.service.impl.QualityCollectVo.setCollectId(qualityCollection.getCollectId())"], "Fixed commit": "5a53cecde4bd978462b6077b93c6bf0427a99a76", "Url": "https://api.github.com/repos/gygesM/yellowChicken", "Date": "2017-07-09T11:18:09Z"},
{"Line": "=>830", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((activeSetting.getLaf().contains(\"com.jtattoo.plaf\")) || (activeSetting.getLaf().contains(\"com.seaglasslookandfeel\")))) im.setPanelColor(im.getFrame(), activeSetting.getBgColor(), activeSetting.getFontColor());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1434/buggy-version/src.Controller.java", "BodyUseAPI": ["Settings.getBgColor()", "InputMask.setPanelColor(im.getFrame(),activeSetting.getBgColor(),activeSetting.getFontColor())", "Settings.getFontColor()"], "Fixed commit": "e90717bee26a02a4b5370eee7c6d1d26b24b74d4", "Url": "https://api.github.com/repos/Fynloh/Adressbuch", "Date": "2017-01-10T13:31:23Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["a4.domain.BoardSpace.getProperty()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (currentProperty.getOwner().equals(currentPlayer)) { model.landedOnOwnedProperty(currentProperty.toString(), currentPlayer.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4180/buggy-version/src.a4.domain.MonopolyGame.java", "BodyUseAPI": ["a4.domain.Property.toString()", "a4.gui.IModel.landedOnOwnedProperty(currentProperty.toString(),currentPlayer.toString())", "a4.domain.Player.toString()"], "Fixed commit": "28cfa0150a38dadc9eaa0007fbbbc341f33cb3d0", "Url": "https://api.github.com/repos/sadielise/CS414Project", "Date": "2016-11-17T04:40:21Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.plugin.RegisteredListener.getPlugin()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((plugin.getDescription().getAuthors().size()) > 0) { author = plugin.getDescription().getAuthors().get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5430/buggy-version/src.main.java.org.bukkit.plugin.SimplePluginManager.java", "BodyUseAPI": ["plugin.getDescription().getAuthors()", "org.bukkit.plugin.Plugin.getDescription()", "plugin.getDescription().getAuthors().get(int)"], "Fixed commit": "d9c309d82c0ae36e03699fed30aae8ca04301226", "Url": "https://api.github.com/repos/yetanotherx/Bukkit", "Date": "2011-04-01T08:24:48Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((error) != null) return java.lang.Integer.valueOf(error.code); else return -666;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6018/buggy-version/src.main.java.com.ushahidi.java.sdk.api.json.Response.java", "BodyUseAPI": [], "Fixed commit": "9d6e5b0778aadf8d90db22418bc02690dd0f7bf6", "Url": "https://api.github.com/repos/geoavalanche/Ushahidi_Java", "Date": "2013-11-04T09:12:12Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((error) != null) return error.message; else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6018/buggy-version/src.main.java.com.ushahidi.java.sdk.api.json.Response.java", "BodyUseAPI": [], "Fixed commit": "9d6e5b0778aadf8d90db22418bc02690dd0f7bf6", "Url": "https://api.github.com/repos/geoavalanche/Ushahidi_Java", "Date": "2013-11-04T09:12:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.equals(\"Class\")) || (in.equals(\"java.lang.Class\"))) { return \"any\"; }else if ((in.equals(\"Object\")) || (in.equals(\"java.lang.Object\"))) { return \"any\"; }else { return reflector.utils.ReflectUtils.reduceClassName(in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6322/buggy-version/codegen.src.main.java.reflector.utils.TypescriptTypeMapper.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "reflector.utils.ReflectUtils.reduceClassName(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "9193f50093b6273b776a7058a7739946933a3c63", "Url": "https://api.github.com/repos/werpu/tinydecscodegen", "Date": "2017-10-19T12:47:55Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.beans.PropertyDescriptor.getReadMethod()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.reflect.Modifier.isTransient(readMethod.getModifiers())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1340/buggy-version/grails-datastore-core.src.main.groovy.org.grails.datastore.mapping.model.config.GormMappingConfigurationStrategy.java", "BodyUseAPI": [], "Fixed commit": "343c2c38486180b148741f6af87b22d630170d18", "Url": "https://api.github.com/repos/hakanernam/grails-data-mapping", "Date": "2017-02-02T17:15:58Z"},
{"Line": "=>754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seconds == 0) { this.m_timeout = java.lang.Integer.MAX_VALUE; }else { this.m_timeout = seconds; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2667/buggy-version/src.frontend.org.voltdb.jdbc.JDBC4Statement.java", "BodyUseAPI": [], "Fixed commit": "b2dfd0aede7b3119e80c92791ca2d7aa48d9e364", "Url": "https://api.github.com/repos/deerwalk/voltdb", "Date": "2015-05-15T17:51:05Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.hangum.tadpole.commons.util.ApplicationArgumentUtils.isOnlineServer())) { com.hangum.tadpole.engine.define.DBDefine dbDefine = ((com.hangum.tadpole.engine.define.DBDefine) (comboDBList.getData(comboDBList.getText()))); if (((((((((dbDefine == (com.hangum.tadpole.engine.define.DBDefine.ALTIBASE_DEFAULT)) | (dbDefine == (com.hangum.tadpole.engine.define.DBDefine.CUBRID_DEFAULT))) | (dbDefine == (com.hangum.tadpole.engine.define.DBDefine.MYSQL_DEFAULT))) | (dbDefine == (com.hangum.tadpole.engine.define.DBDefine.MARIADB_DEFAULT))) | (dbDefine == (com.hangum.tadpole.engine.define.DBDefine.MSSQL_DEFAULT))) | (dbDefine == (com.hangum.tadpole.engine.define.DBDefine.ORACLE_DEFAULT))) | (dbDefine == (com.hangum.tadpole.engine.define.DBDefine.SQLite_DEFAULT))) | (dbDefine == (com.hangum.tadpole.engine.define.DBDefine.TIBERO_DEFAULT))) | (dbDefine == (com.hangum.tadpole.engine.define.DBDefine.POSTGRE_DEFAULT))) { try { org.apache.commons.lang.ClassUtils.getClass(dbDefine.getDriverClass()); } catch (java.lang.ClassNotFoundException e) { if (org.eclipse.jface.dialogs.MessageDialog.openConfirm(null, com.hangum.tadpole.rdb.core.Messages.get().DriverNotFound, com.hangum.tadpole.rdb.core.Messages.get().DriverNotFoundMSG)) { com.hangum.tadpole.rdb.core.dialog.driver.JDBCDriverManageDialog dialog = new com.hangum.tadpole.rdb.core.dialog.driver.JDBCDriverManageDialog(org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell()); if ((org.eclipse.jface.dialogs.Dialog.OK) == (dialog.open())) { if (dialog.isUploaded()) { org.eclipse.jface.dialogs.MessageDialog.openInformation(null, com.hangum.tadpole.rdb.core.Messages.get().Information, com.hangum.tadpole.rdb.core.Messages.get().jdbcdriver); } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5698/buggy-version/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.dialog.dbconnect.DBLoginDialog.java", "BodyUseAPI": [], "Fixed commit": "0a482cf90cc6f6e67d533d9bdd0f967c052faeee", "Url": "https://api.github.com/repos/hangum/TadpoleForDBTools", "Date": "2016-05-27T01:59:09Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.exists()) { return application.Main.defaultDirectory; }else { application.Main.defaultDirectory = (java.lang.System.getProperty(\"user.home\")) + \"/Desktop\"; return application.Main.defaultDirectory; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/882/buggy-version/Flashcards.src.application.Main.java", "BodyUseAPI": [], "Fixed commit": "d3d5fe8279bbd502ffe268cdc4e7eb681d7bbd97", "Url": "https://api.github.com/repos/jdet1/Flashcard-App", "Date": "2016-01-05T16:44:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (idPassed != null) { java.lang.Long proposalId = java.lang.Long.parseLong(idPassed); com.mdsgpp.cidadedemocratica.model.Proposal proposal = dataContainer.getProposalForId(proposalId); return proposal.getTags(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8688/buggy-version/app.src.main.java.com.mdsgpp.cidadedemocratica.controller.TagginsList.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "bb0af7fdae229a0bc485ff2ba2f55edf6aa19a1a", "Url": "https://api.github.com/repos/GPP-MDS-2016/2016.2-Time08-CidadeDemocratica", "Date": "2016-09-20T18:11:53Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 1) { startActivity(new android.content.Intent(this, com.grosner.sample.ActionBarTransformationActivity.class)); }else if (position == 2) { startActivity(new android.content.Intent(this, com.grosner.sample.colorfulgrid.ColorfulGridActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5007/buggy-version/sample.src.main.java.com.grosner.sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a8a8638c0e337c1f191cd3475beec00436616bad", "Url": "https://api.github.com/repos/agrosner/Painter", "Date": "2014-07-21T15:52:39Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((isSimple(element1)) && (element2 == null)) { return calculate(new com.crypto.factorise.ValueElement(element1, valueMap), null, operator); }else if ((!(isSimple(element1))) && (element2 == null)) { return applyOperator(applyOperator(element1.a, element1.b, element1.operator, valueMap), null, operator, valueMap); }else if ((isSimple(element1)) && (isSimple(element2))) { return calculate(new com.crypto.factorise.ValueElement(element1, valueMap), new com.crypto.factorise.ValueElement(element2, valueMap), operator); }else if ((isSimple(element1)) && (!(isSimple(element2)))) { return applyOperator(new com.crypto.factorise.ValueElement(element1, valueMap), applyOperator(element2.a, element2.b, element2.operator, valueMap), operator, valueMap); }else if ((!(isSimple(element1))) && (isSimple(element2))) { return applyOperator(applyOperator(element1.a, element1.b, element1.operator, valueMap), new com.crypto.factorise.ValueElement(element2, valueMap), operator, valueMap); }else { return applyOperator(applyOperator(element1.a, element1.b, element1.operator, valueMap), applyOperator(element2.a, element2.b, element2.operator, valueMap), operator, valueMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4738/buggy-version/src.com.crypto.factorise.Element.java", "BodyUseAPI": ["com.crypto.factorise.Element.applyOperator(com.crypto.factorise.Element,com.crypto.factorise.Element,java.lang.String,java.util.Map)", "com.crypto.factorise.Element.applyOperator(com.crypto.factorise.Element,<nulltype>,java.lang.String,java.util.Map)", "com.crypto.factorise.Element.applyOperator(com.crypto.factorise.Element,com.crypto.factorise.Element,java.lang.String,java.util.Map)", "com.crypto.factorise.Element.applyOperator(com.crypto.factorise.Element,com.crypto.factorise.ValueElement,java.lang.String,java.util.Map)", "com.crypto.factorise.Element.isSimple(com.crypto.factorise.Element)", "com.crypto.factorise.Element.applyOperator(com.crypto.factorise.Element,com.crypto.factorise.Element,java.lang.String,java.util.Map)", "com.crypto.factorise.Element.applyOperator(com.crypto.factorise.Element,com.crypto.factorise.Element,java.lang.String,java.util.Map)", "com.crypto.factorise.Element.isSimple(com.crypto.factorise.Element)", "com.crypto.factorise.Element.isSimple(com.crypto.factorise.Element)", "com.crypto.factorise.Element.applyOperator(com.crypto.factorise.Element,com.crypto.factorise.Element,java.lang.String,java.util.Map)", "com.crypto.factorise.Element.isSimple(com.crypto.factorise.Element)", "com.crypto.factorise.Element.applyOperator(com.crypto.factorise.Element,com.crypto.factorise.Element,java.lang.String,java.util.Map)", "com.crypto.factorise.Element.isSimple(com.crypto.factorise.Element)", "com.crypto.factorise.Element.applyOperator(com.crypto.factorise.ValueElement,com.crypto.factorise.Element,java.lang.String,java.util.Map)", "com.crypto.factorise.Element.calculate(com.crypto.factorise.ValueElement,<nulltype>,java.lang.String)", "com.crypto.factorise.Element.isSimple(com.crypto.factorise.Element)", "com.crypto.factorise.Element.calculate(com.crypto.factorise.ValueElement,com.crypto.factorise.ValueElement,java.lang.String)", "com.crypto.factorise.Element.isSimple(com.crypto.factorise.Element)"], "Fixed commit": "55499ff67148936af3b69ff56b6aa48fc7de922d", "Url": "https://api.github.com/repos/9rajeesh/crypto1", "Date": "2017-02-25T13:07:57Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAnchor) instanceof android.view.ViewGroup) { try { ((android.view.ViewGroup) (mAnchor)).removeView(this); mHandler.removeMessages(com.wb.nextgenlibrary.widget.CustomMediaController.SHOW_PROGRESS); } catch (java.lang.IllegalArgumentException ex) { android.util.Log.w(\"MediaController\", \"already removed\"); } }else if ((mAnchor.getParent()) != null) { try { ((android.view.ViewGroup) (mAnchor.getParent())).removeView(this); mHandler.removeMessages(com.wb.nextgenlibrary.widget.CustomMediaController.SHOW_PROGRESS); } catch (java.lang.IllegalArgumentException ex) { android.util.Log.w(\"MediaController\", \"already removed\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2803/buggy-version/src.com.wb.nextgenlibrary.widget.CustomMediaController.java", "BodyUseAPI": [], "Fixed commit": "a9e9fdb48d83aa73a660588abca999f8b2b1f6c5", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-11-17T23:37:44Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mAnchor) != null) && ((mAnchor) instanceof android.view.ViewGroup)) { ((android.view.ViewGroup) (mAnchor)).addView(this, tlp); }else { if (((this.getParent()) == null) && ((mAnchor.getParent()) != null)) ((android.view.ViewGroup) (mAnchor.getParent())).addView(this, tlp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2803/buggy-version/src.com.wb.nextgenlibrary.widget.CustomMediaController.java", "BodyUseAPI": [], "Fixed commit": "a9e9fdb48d83aa73a660588abca999f8b2b1f6c5", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2016-11-17T23:37:44Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nameArr.length) > 1) { lastName = nameArr[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/967/buggy-version/app.src.main.java.com.example.alcar.callyourmother.AddNewContactActivity.java", "BodyUseAPI": [], "Fixed commit": "b93de9e3806a83ccd172f10588a200ddcb5c0683", "Url": "https://api.github.com/repos/aarya1995/CallYourMother", "Date": "2017-12-04T21:04:32Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paint.getColor()) == (android.graphics.Color.TRANSPARENT)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8515/buggy-version/lottie.src.main.java.com.airbnb.lottie.model.layer.TextLayer.java", "BodyUseAPI": [], "Fixed commit": "91103eb241ba46a8534c7ce41bec312131af584a", "Url": "https://api.github.com/repos/airbnb/lottie-android", "Date": "2017-09-06T15:08:37Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((paint.getStyle()) == (Paint.Style.STROKE)) && ((paint.getStrokeWidth()) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8515/buggy-version/lottie.src.main.java.com.airbnb.lottie.model.layer.TextLayer.java", "BodyUseAPI": [], "Fixed commit": "91103eb241ba46a8534c7ce41bec312131af584a", "Url": "https://api.github.com/repos/airbnb/lottie-android", "Date": "2017-09-06T15:08:37Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tma.getCompletionDate()) != null) if (tma.getCompletionDate().after(milestone.getActivities().get(count).getScheduleEndDate())) { jsonObject.addProperty((\"reasonForDelay_\" + count), messageSource.getMessage(\"error.trackmilestone.reasonfordelay.mandatory\", new java.lang.String[]{ }, null)); flag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4988/buggy-version/egov.egov-worksweb.src.main.java.org.egov.works.web.controller.milestone.TrackMilestoneController.java", "BodyUseAPI": ["org.egov.works.milestone.entity.TrackMilestoneActivity.getCompletionDate()", "tma.getCompletionDate().after(milestone.getActivities().get(count).getScheduleEndDate())"], "Fixed commit": "7db57985644b984dd386dc83bff13e5d1cd071d0", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-05-20T12:19:38Z"},
{"Line": "=>1226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"4\".equalsIgnoreCase(billTypeId)) { queryupdate = \"update HotelBooking hotel set hotel.isBill = 0 where hotel.id = :refid\"; }else if (\"6\".equalsIgnoreCase(billTypeId)) { queryupdate = \"update DaytourBooking tour set tour.isBill = 0 where tour.id = :refid\"; }else if (\"7\".equalsIgnoreCase(billTypeId)) { queryupdate = \"update AirticketDesc ad set ad.isBill = 0 where ad.id = :refid \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1217/buggy-version/src.java.com.smi.travel.datalayer.dao.impl.BillableImpl.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "07a1be3636e96389efaa1ec95c607bf5c8d9b881", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-05-11T08:01:44Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { map.get(node).setProperty(name, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4475/buggy-version/src.ast.StoreVisitor.java", "BodyUseAPI": ["map.get(node).setProperty(java.lang.String,java.lang.Object)"], "Fixed commit": "c6b82d668a872094a7651bddb56e08ca4d4bdfcf", "Url": "https://api.github.com/repos/checkyh/Neo4jGraph", "Date": "2015-07-15T09:12:11Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos != (part.length())) { java.lang.String original = part.substring(pos); java.lang.String encoded = java.net.URLEncoder.encode(original, io.undertow.server.handlers.proxy.ProxyHandler.UTF_8); if (!(encoded.equals(original))) { return io.undertow.server.handlers.proxy.ProxyHandler.realEncode(part, pos); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8326/buggy-version/core.src.main.java.io.undertow.server.handlers.proxy.ProxyHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)", "io.undertow.server.handlers.proxy.ProxyHandler.realEncode(java.lang.String,int)"], "Fixed commit": "d68e2ee391b170b60f00af8bbb929f67e55a15b6", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2014-04-30T22:03:10Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fiivt.ps31.callfriend.Activities.PersonActivity.BitmapWorkerTask.decodeSampledBitmapFromStream(java.lang.String,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bitmap != null) { addBitmapToMemoryCache(data, bitmap); }else { android.widget.Toast.makeText(getApplicationContext(), \"Decode failed\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5788/buggy-version/app.src.main.java.com.fiivt.ps31.callfriend.Activities.PersonActivity.java", "BodyUseAPI": ["com.fiivt.ps31.callfriend.Activities.PersonActivity.BitmapWorkerTask.addBitmapToMemoryCache(java.lang.String,android.graphics.Bitmap)"], "Fixed commit": "a8abcf4aa57e461f777f01af4144f48d1610a215", "Url": "https://api.github.com/repos/wolfrace/CallFriend", "Date": "2015-06-03T17:57:58Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((result != null) && ((result.getToAdd()) != null)) && (!(result.getToAdd().isEmpty()))) { initializeConversion(result); }else if (((result != null) && ((result.getItems()) != null)) && (!(result.getItems().isEmpty()))) { doTheRest(result.getItems()); }else { cz.mzk.editor.client.view.window.EditorSC.operationFailed(lang, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2271/buggy-version/editor-creation.src.main.java.cz.mzk.editor.client.presenter.CreateStructurePresenter.java", "BodyUseAPI": ["cz.mzk.editor.shared.rpc.action.ScanFolderResult.getItems()", "cz.mzk.editor.client.presenter.CreateStructurePresenter.5.initializeConversion(cz.mzk.editor.shared.rpc.action.ScanFolderResult)", "result.getItems().isEmpty()", "cz.mzk.editor.shared.rpc.action.ScanFolderResult.getItems()", "cz.mzk.editor.shared.rpc.action.ScanFolderResult.getItems()", "cz.mzk.editor.client.presenter.CreateStructurePresenter.5.doTheRest(result.getItems())"], "Fixed commit": "40a80b4854b395fb3359d98faf84d20091165a13", "Url": "https://api.github.com/repos/MatousJobanek/MEditor", "Date": "2012-05-03T09:17:14Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sprite1 == null) { core.logging.Logger.getInstance().addMessage(new core.logging.Message(core.logging.Message.WARNING, ((sprite1.name) + \" can't be null.\"))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7360/buggy-version/src.ontology.effects.unary.WrapAround.java", "BodyUseAPI": ["core.logging.Logger.getInstance().addMessage(core.logging.Message)"], "Fixed commit": "d67f6557a53f360e55f614e2778a7586cffcaa84", "Url": "https://api.github.com/repos/mcgreentn/gvgai-myFork", "Date": "2017-03-30T23:58:32Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tag) != null) return tag.trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7698/buggy-version/app.src.main.java.org.votingsystem.model.Currency.java", "BodyUseAPI": [], "Fixed commit": "3b70bda082f53726a2c970d8a8a96a5c3350819b", "Url": "https://api.github.com/repos/votingsystem/votingsystem-android-client", "Date": "2015-06-10T17:13:26Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) != null) return name.trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7698/buggy-version/app.src.main.java.org.votingsystem.dto.TagVSDto.java", "BodyUseAPI": [], "Fixed commit": "3b70bda082f53726a2c970d8a8a96a5c3350819b", "Url": "https://api.github.com/repos/votingsystem/votingsystem-android-client", "Date": "2015-06-10T17:13:26Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.cqframework.cql.cql2elm.model.Signature, org.cqframework.cql.cql2elm.model.OperatorEntry.SignatureNode>.containsKey(operator.getSignature())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!result) { for (org.cqframework.cql.cql2elm.model.OperatorEntry.SignatureNode n : signatures.values()) { result = n.subSignatures.contains(operator); if (result) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5641/buggy-version/Src.java.cql-to-elm.src.main.java.org.cqframework.cql.cql2elm.model.OperatorEntry.java", "BodyUseAPI": [], "Fixed commit": "d99d0f8477ba5216f2add60929dc7328552fefba", "Url": "https://api.github.com/repos/cqframework/clinical_quality_language", "Date": "2016-12-30T22:04:08Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != tag) { synchronized(taggedJobs) { taggedJobs.remove(tag); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/461/buggy-version/HttpClient-Async.src.com.levelup.http.async.AsyncHttpClient.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.concurrent.Future<?>>.remove(java.lang.String)"], "Fixed commit": "ce931b7b1edefb90d919b330fed7d5a1a5784191", "Url": "https://api.github.com/repos/debuggerUA/Android-HttpClient", "Date": "2014-04-07T14:25:35Z"},
{"Line": "=>1982", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((functionManager.FMrole.equals(\"Level2_TCDSLPM\")) || (functionManager.FMrole.contains(\"TTCci\"))) { functionManager.fireEvent(HCALInputs.SETCONFIGURE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6530/buggy-version/src.rcms.fm.app.level1.HCALlevelTwoEventHandler.java", "BodyUseAPI": [], "Fixed commit": "f2c29de543955c75a6c5f121881af4338247eea4", "Url": "https://api.github.com/repos/HCALRunControl/levelOneHCALFM", "Date": "2016-08-23T10:02:56Z"},
{"Line": "=>1353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((functionManager.FMrole.equals(\"Level2_TCDSLPM\")) || (functionManager.FMrole.contains(\"TTCci\"))) { functionManager.fireEvent(HCALInputs.SETSTART); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6530/buggy-version/src.rcms.fm.app.level1.HCALlevelTwoEventHandler.java", "BodyUseAPI": [], "Fixed commit": "f2c29de543955c75a6c5f121881af4338247eea4", "Url": "https://api.github.com/repos/HCALRunControl/levelOneHCALFM", "Date": "2016-08-23T10:02:56Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((columnNames.size()) < 3) && ((columnNames.size()) >= 1)) { warnings.add((\"Niestandardowe nazwy kolumn. Sprawd\u017a przystanek \" + (this.innerHtml))); }else if ((((columnNames.size()) == 2) && (columnNames.get(0).equals(\"Dzie\u0144 Powszedni\"))) && (columnNames.get(1).equals(\"\u015awi\u0119to\"))) { this.setSundayList(this.getSaturdayList()); warnings.add(\"Dwie kolumny: \\\"Dzie\\u0144 Powszedni\\\" i \\\"\\u015awi\\u0119to\\\". Rozk\\u0142ad z kolumny \\\"\\u015awi\\u0119to\\\" przepisano dla sob\\u00f3t i niedziel\"); return true; }else if (((((columnNames.size()) == 3) && (columnNames.get(0).equals(\"Dzie\u0144 Powszedni\"))) && (columnNames.get(1).equals(\"Sobota\"))) && (columnNames.get(2).equals(\"\u015awi\u0119to\"))) { return true; }else if (((columnNames.size()) == 1) && (columnNames.get(0).equals(\"Dzie\u0144 powszedni\"))) { return true; }else if ((columnNames.size()) != 3) { warnings.add((\"Niestandardowe nazwy kolumn. Sprawd\u017a przystanek \" + (this.innerHtml))); return false; }else { warnings.add((\"Niestandardowe roz\u0142o\u017cenie kolumn. Sprawd\u017a przystanek \" + (this.innerHtml))); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9002/buggy-version/src.businfo.busstop.ZTMinfo.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.equals(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.util.ArrayList<java.lang.String>.size()"], "Fixed commit": "53da9053bdf05c4fbfd8b8e6175aff4dc3af80cd", "Url": "https://api.github.com/repos/MIachaI/MPK_Crawler", "Date": "2017-05-11T15:41:28Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jreframeworker.Activator.getDefault().getPreferenceStore().getBoolean(PreferencesPage.ALLOW_PHANTOM_REFERENCES_BOOLEAN)) { argList.add(\"-allow-phantom-refs\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6881/buggy-version/jreframeworker.src.jreframeworker.common.JimpleUtils.java", "BodyUseAPI": [], "Fixed commit": "eaf3357de0c1c841ddd4064e298c31ad94ef50ee", "Url": "https://api.github.com/repos/JReFrameworker/JReFrameworker", "Date": "2015-10-11T18:27:10Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ceylonRunnableName.startsWith(\"default::\")) { ceylonRunnableName = ceylonRunnableName.substring(9); }else { ceylonRunnableName = ceylonRunnableName.replace(\"::\", \".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5242/buggy-version/common.src.com.redhat.ceylon.common.JVMModuleUtil.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "984e7563f137dfb6c69ee3036038201d4b843f40", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2017-07-26T10:58:09Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((menuDefinition.getProperty()) != null) { chartData.setChartSource(menuDefinition.getProperty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6864/buggy-version/src.main.java.com.haskins.jcloudtrailerviewer.panel.CombinedPanel.java", "BodyUseAPI": [], "Fixed commit": "923733e6e49995d410537afdf84649e8e68c7225", "Url": "https://api.github.com/repos/githublemming/CloudTrailViewer", "Date": "2015-03-29T09:26:47Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getCanonicalFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(canonical.exists())) { if (!(canonical.createNewFile())) { throw new java.io.IOException((\"Failed to create new file \" + canonical)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4510/buggy-version/src.main.java.io.bitsquare.storage.Storage.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "955c2ba4d4f04cfbccb0714f6250776791e4d370", "Url": "https://api.github.com/repos/bitsquare/bitsquare", "Date": "2014-07-08T22:50:50Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (LogisticRegression.WRITE) { try (java.io.PrintWriter writer = new java.io.PrintWriter(new java.io.BufferedWriter(new java.io.FileWriter(\"./convergenceCurve\", true)))) { writer.printf(\"%f\\n\", newObj); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/238/buggy-version/hw4.src.LogisticRegression.LogisticRegression.java", "BodyUseAPI": [], "Fixed commit": "c1b06f65172d1d7b1cbce67fbdbd1e009617c6e3", "Url": "https://api.github.com/repos/YpGu/ML", "Date": "2015-03-29T01:39:01Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((tweetList != null) && ((tweetList.size()) > 0)) { jsonTweetList = mapper.writeValueAsString(tweetList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5738/buggy-version/docroot.WEB-INF.src.com.rcs.portlet.DisplayTweets.java", "BodyUseAPI": ["org.codehaus.jackson.map.ObjectMapper.writeValueAsString(java.util.List<java.lang.String>)"], "Fixed commit": "6253768089e11daec162d1392019836d77d92ff9", "Url": "https://api.github.com/repos/rotterdam-cs/RCS-twitter-portlet", "Date": "2015-04-08T13:14:16Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ping < (20 * 60)) ping = 20 * 60;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3029/buggy-version/src.com.wolvencraft.yasp.Statistics.java", "BodyUseAPI": [], "Fixed commit": "f385ca9481a0fa91765614bc0ef1c85b9194114d", "Url": "https://api.github.com/repos/BukkitStatistics/Plugin", "Date": "2013-07-10T18:10:52Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d.empty()) d = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4389/buggy-version/persistent_deque.src.PersistentDeque.java", "BodyUseAPI": [], "Fixed commit": "787a616c6e642631ead08deedc317fd3b4a0790d", "Url": "https://api.github.com/repos/happanda/adv_algo", "Date": "2013-04-15T21:14:13Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d.empty()) d = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4389/buggy-version/persistent_deque.src.PersistentDeque.java", "BodyUseAPI": [], "Fixed commit": "787a616c6e642631ead08deedc317fd3b4a0790d", "Url": "https://api.github.com/repos/happanda/adv_algo", "Date": "2013-04-15T21:14:13Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((module == null) || (mavenModuleSet == null)) || ((mavenModuleSet.getRootModule()) == null)) { return com.google.common.base.Optional.absent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4860/buggy-version/src.main.java.com.itemis.jenkins.plugins.unleash.util.MavenUtil.java", "BodyUseAPI": [], "Fixed commit": "1cea611021f74ee10b485cb6d34ffbdf374975e1", "Url": "https://api.github.com/repos/jenkinsci/unleash-plugin", "Date": "2017-04-24T06:49:33Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simplePastr.PathFinder.getNextDirection(java.util.HashMap<battlecode.common.MapLocation, java.lang.Integer>,battlecode.common.MapLocation,battlecode.common.MapLocation)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rc.canMove(dir)) { rc.move(dir); }else { dir = C.DIRECTIONS[randall.nextInt(C.DIRECTIONS.length)]; if (rc.canMove(dir)) { rc.move(dir); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8487/buggy-version/simplePastr.Soldier.java", "BodyUseAPI": ["simplePastr.Soldier.move(battlecode.common.Direction)", "simplePastr.Soldier.move(battlecode.common.Direction)", "simplePastr.Soldier.canMove(battlecode.common.Direction)"], "Fixed commit": "8c46a80c0eaf364105f439dc8cf069a07e09e27e", "Url": "https://api.github.com/repos/fabian-braun/reignOfDke", "Date": "2014-10-06T13:54:39Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exception.getCause()) != null) { this.lastError += \"; \" + (exception.getCause().getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5087/buggy-version/docx4j.src.docx4j.TextSubstitution.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()", "java.lang.Exception.getCause()"], "Fixed commit": "8115a59264d706f9a0248390b1df0ca869c4392c", "Url": "https://api.github.com/repos/sylnsr/jesign-ws", "Date": "2014-09-19T22:34:17Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Integer, java.util.List<java.lang.String>>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (categories != null) { fos.writeInt(entry.getKey()); fos.writeInt(categories.size()); for (java.lang.String category : categories) { fos.writeUTF(category); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1433/buggy-version/src.main.java.ml.shifu.shifu.core.dtrain.dt.DTOutput.java", "BodyUseAPI": ["org.apache.hadoop.fs.FSDataOutputStream.writeInt(int)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "d6000b70b201cec4c18829921efb69335edbb448", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2016-12-06T07:05:54Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((message.getStatus()) == (javax.sound.midi.ShortMessage.NOTE_ON)) && ((message.getMessage()[2]) == 0)) { try { sm.setMessage(javax.sound.midi.ShortMessage.NOTE_OFF, sm.getChannel(), sm.getData1(), sm.getData2()); } catch (javax.sound.midi.InvalidMidiDataException e) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2442/buggy-version/src.main.java.de.synesthesy.midi.MidiReceiver.java", "BodyUseAPI": [], "Fixed commit": "05f97b5c59c1c0a1d96421f706a2c05315247ea8", "Url": "https://api.github.com/repos/DreamRocker/synesthesy-core", "Date": "2013-06-24T17:51:08Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentStudentHomeworks.size()) != 0) { percentageHomeworks = acumHomeworks / (currentStudentHomeworks.size()); }else { percentageHomeworks = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6048/buggy-version/Class_Participation.App.src.main.java.edu.unitec.app.StudentItemAdapter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()"], "Fixed commit": "4d3ddd1d4b3dd21cb30bc1b10f25e62c84243e47", "Url": "https://api.github.com/repos/NivxB/ClassParticipation2", "Date": "2015-04-14T02:16:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dims == null) { if (((dimensions) != null) && ((dimensions.length) > 0)) { dims = dimensions[0]; }else { dims = \"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1880/buggy-version/org.carewebframework.ui.src.main.java.org.carewebframework.ui.icons.IconLibraryBase.java", "BodyUseAPI": [], "Fixed commit": "a035ff07e40d05a102d9e1f9564cf4cc0cf4829c", "Url": "https://api.github.com/repos/carewebframework/carewebframework-core", "Date": "2013-12-30T19:16:25Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (recommenderName.equals(\"lda\")) { try { if (!(scheduler.checkExists(key(recommenderName)))) { scheduler.addJob(job, true); } } catch (org.plista.kornakapi.core.training.SchedulerException e) { throw new java.lang.RuntimeException(e); } }else { try { scheduler.addJob(job, true); } catch (org.plista.kornakapi.core.training.SchedulerException e) { throw new java.lang.RuntimeException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/316/buggy-version/src.main.java.org.plista.kornakapi.core.training.TaskScheduler.java", "BodyUseAPI": ["org.plista.kornakapi.core.training.TaskScheduler.key(java.lang.String)", "org.plista.kornakapi.core.training.Scheduler.checkExists(org.plista.kornakapi.core.training.JobKey)"], "Fixed commit": "8953373e8189caf66411ef3a3019aee2b45968b0", "Url": "https://api.github.com/repos/KukumavMozolo/kornakapi", "Date": "2015-04-17T10:09:29Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((example.com.memkeeper.Utils.PhotoUtils.getSelectedPhotos()) != null) { for (example.com.memkeeper.POJO.Photo photo : example.com.memkeeper.Utils.PhotoUtils.getSelectedPhotos()) { photo.setSelected(false); } example.com.memkeeper.Utils.PhotoUtils.getSelectedPhotos().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6933/buggy-version/app.src.main.java.example.com.memkeeper.Layouts.NewMemoryFragLayout.java", "BodyUseAPI": [], "Fixed commit": "8b67f10890f3947368fca905b043068c33e9e7b3", "Url": "https://api.github.com/repos/alexbuicescu/Mem-keeper", "Date": "2015-04-04T10:33:11Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (supported) { if (com.github.kubatatami.richedittext.modules.HtmlImportModule.endingMode) { throw new org.xml.sax.SAXException(((((\"Start new tag(\" + tag) + \" \") + (attrToString(attributes))) + \") before end previous\")); } (com.github.kubatatami.richedittext.modules.HtmlImportModule.tagCounter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7161/buggy-version/lib.src.main.java.com.github.kubatatami.richedittext.modules.HtmlImportModule.java", "BodyUseAPI": [], "Fixed commit": "f1effe126b1856656bd74e43a08174294f5b11a7", "Url": "https://api.github.com/repos/kubatatami/RichEditText", "Date": "2016-02-27T19:45:27Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isUnSources) { if ((null == (partSales.getCashierModelList())) || ((partSales.getCashierModelList().size()) == 0)) { partSales.setCashierModelList(returnedService.getAllCashierMode().getCashierModeList()); } }else { partSales.setCashierModelList(returnedService.getAllCashierMode().getCashierModeList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5815/buggy-version/com.topsun.posclient.sales.ui.src.com.topsun.posclient.sales.ui.view.ReturnedView.java", "BodyUseAPI": [], "Fixed commit": "9c20e8f8c467474a763477fee255a13f5afc7959", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-11-19T04:25:19Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remainingStatPoints <= 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6532/buggy-version/src.DragonCreator.java", "BodyUseAPI": [], "Fixed commit": "abbea3cff94df2733c17c4eb36a8e8e8e4e43bb2", "Url": "https://api.github.com/repos/Tiiduke/DragonsAndDragons", "Date": "2016-03-16T14:36:36Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hdfs.DistributedFileSystem.getErasureCodingZoneInfo(item.path)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ecZoneInfo != null) { out.println(ecZoneInfo.toString()); }else { out.println(((\"Path \" + (item.path)) + \" is not in EC zone\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4911/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.org.apache.hadoop.hdfs.tools.erasurecode.ECCommand.java", "BodyUseAPI": ["org.apache.hadoop.hdfs.protocol.ErasureCodingZoneInfo.toString()", "org.apache.hadoop.hdfs.tools.erasurecode.ECCommand.GetECZoneInfoCommand.println(ecZoneInfo.toString())"], "Fixed commit": "041c936e3b677f9d61e8a2c5deb20e7b2dd8292a", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2015-05-13T07:13:39Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mTableInfos.containsKey(type))) { mTableInfos.put(type, new com.activeandroid.TableInfo(type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2058/buggy-version/src.com.activeandroid.ModelInfo.java", "BodyUseAPI": ["java.util.Map<java.lang.Class<? extends com.activeandroid.Model>, com.activeandroid.TableInfo>.put(java.lang.Class<? extends com.activeandroid.Model>,com.activeandroid.TableInfo)"], "Fixed commit": "8664b46441a5bb61f6cceb73fc7bea0ca7a6ce96", "Url": "https://api.github.com/repos/svendvd/ActiveAndroid", "Date": "2016-03-22T17:59:56Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.csstudio.swt.rtplot.Trace<java.lang.Double>.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dataProvider instanceof org.csstudio.trends.databrowser2.waveformview.WaveformValueDataProvider) { boolean resize = (dataProvider.size()) == 0; ((org.csstudio.trends.databrowser2.waveformview.WaveformValueDataProvider) (dataProvider)).setValue(data); if (resize && (data instanceof org.csstudio.archive.vtype.ArchiveVNumberArray)) { plot.getXAxis().setValueRange(0.0, java.lang.Double.valueOf(((org.csstudio.archive.vtype.ArchiveVNumberArray) (data)).getData().size())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4009/buggy-version/applications.plugins.org.csstudio.trends.databrowser2.src.org.csstudio.trends.databrowser2.editor.WaveformSnapshotViewer.java", "BodyUseAPI": ["org.csstudio.swt.rtplot.data.PlotDataProvider<java.lang.Double>.size()"], "Fixed commit": "e659e7450f1768e5ea08e55eaedd3698e5bd4dd7", "Url": "https://api.github.com/repos/Cosylab/cs-studio", "Date": "2015-03-27T21:34:39Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canOpenUrl) { canOpenUrl = false; try { java.awt.Desktop.getDesktop().browse(mod_LibShapeDrawDemos.SOURCE_URI); } catch (java.lang.Throwable t) { chatText(\"Unable to open URL directly. Please use a web browser to visit\"); chatText((\" \" + (mod_LibShapeDrawDemos.SOURCE_URI_DISPLAY))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1102/buggy-version/projects.demos.src.main.java.mod_LibShapeDrawDemos.java", "BodyUseAPI": [], "Fixed commit": "80cd88d0acc8f0e9b74bad09d9126fe0f02b6df0", "Url": "https://api.github.com/repos/bencvt/LibShapeDraw", "Date": "2012-11-19T09:09:11Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((habitsList.getVisibility()) == (android.view.View.VISIBLE)) { if ((habitsList.getChildCount()) == 0) android.widget.Toast.makeText(this, \"No habits found.\", Toast.LENGTH_SHORT).show(); }else { if ((eventsList.getChildCount()) == 0) android.widget.Toast.makeText(this, \"No events found.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3118/buggy-version/app.src.main.java.com.cmput301.cia.activities.users.ViewFollowedUsersActivity.java", "BodyUseAPI": ["android.widget.ListView.getChildCount()"], "Fixed commit": "109b0c455065f7ff12641e1bd3bad687c0b91ccb", "Url": "https://api.github.com/repos/CMPUT301F17T15/CIA", "Date": "2017-11-30T05:26:39Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((habitsList.getVisibility()) == (android.view.View.VISIBLE)) { if ((habitsList.getChildCount()) == 0) android.widget.Toast.makeText(this, \"No habits found.\", Toast.LENGTH_SHORT).show(); }else { if ((eventsList.getChildCount()) == 0) android.widget.Toast.makeText(this, \"No events found.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3118/buggy-version/app.src.main.java.com.cmput301.cia.activities.users.ViewFollowedUsersActivity.java", "BodyUseAPI": ["android.widget.ListView.getChildCount()"], "Fixed commit": "109b0c455065f7ff12641e1bd3bad687c0b91ccb", "Url": "https://api.github.com/repos/CMPUT301F17T15/CIA", "Date": "2017-11-30T05:26:39Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (index > (-1)) { s1 = str.substring(0, index); s2 = str.substring((index + 1), str.length()); }else { java.lang.System.out.println(((str + \",\") + sep)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2602/buggy-version/src.basic.TPair.java", "BodyUseAPI": [], "Fixed commit": "44dd90cc466c0e6cfa1e1b87f76029909b0cb55a", "Url": "https://api.github.com/repos/RongQiao/nlp", "Date": "2014-10-05T20:09:48Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dbObject.containsField(org.atlasapi.persistence.media.entity.PriorityTranslator.ITEM_PRIORITY_KEY)) { score = java.lang.Double.parseDouble(com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(dbObject, org.atlasapi.persistence.media.entity.PriorityTranslator.ITEM_PRIORITY_KEY)); }else { if (dbObject.containsField(org.atlasapi.persistence.media.entity.PriorityTranslator.SCORE_KEY)) { score = com.metabroadcast.common.persistence.translator.TranslatorUtils.toDouble(dbObject, org.atlasapi.persistence.media.entity.PriorityTranslator.SCORE_KEY); } if (dbObject.containsField(org.atlasapi.persistence.media.entity.PriorityTranslator.REASONS_KEY)) { priorityScoreReasons = com.metabroadcast.common.persistence.translator.TranslatorUtils.toList(dbObject, org.atlasapi.persistence.media.entity.PriorityTranslator.REASONS_KEY); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1270/buggy-version/src.main.java.org.atlasapi.persistence.media.entity.PriorityTranslator.java", "BodyUseAPI": ["com.metabroadcast.common.persistence.translator.TranslatorUtils.toList(com.mongodb.DBObject,java.lang.String)", "com.mongodb.DBObject.containsField(java.lang.String)", "com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(com.mongodb.DBObject,java.lang.String)", "java.lang.Double.parseDouble(com.metabroadcast.common.persistence.translator.TranslatorUtils.toString(dbObject, org.atlasapi.persistence.media.entity.PriorityTranslator.ITEM_PRIORITY_KEY))", "com.mongodb.DBObject.containsField(java.lang.String)", "com.metabroadcast.common.persistence.translator.TranslatorUtils.toDouble(com.mongodb.DBObject,java.lang.String)"], "Fixed commit": "baf3d55e63cc3c6f22214d7cb0052ab7b5703830", "Url": "https://api.github.com/repos/atlasapi/atlas-persistence", "Date": "2015-08-25T17:04:07Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kaltura.netkit.services.api.ott.phoenix.services.OttPushNotificationProvider.validateSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(ks)) { ks = getSessionToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4650/buggy-version/services.src.main.java.com.kaltura.netkit.services.api.ott.phoenix.services.OttPushNotificationProvider.java", "BodyUseAPI": [], "Fixed commit": "dafb2f2f058b116b99d3648ad03554c5d0006aff", "Url": "https://api.github.com/repos/kaltura/netkit-android", "Date": "2017-05-08T17:08:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentNode.isEow()) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3431/buggy-version/src.dictionary.Dawg.java", "BodyUseAPI": [], "Fixed commit": "c212189590754c4fcfcf97560f0c1ad4503218a4", "Url": "https://api.github.com/repos/dianagr/Scrabble", "Date": "2012-04-06T12:46:04Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getStringSet(context.getString(R.string.wifiOK),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ssdiListFav != null) { wifiSelected.addAll(ssdiListFav); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/498/buggy-version/app.src.main.java.com.ar.gab.switchwifi.WifiListAdapter.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "22337d64115c478edf42c5f10c09fb0a361a6984", "Url": "https://api.github.com/repos/GuilleBur/SwithWifi", "Date": "2017-07-03T15:02:51Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ok) { map.put(fieldName, fieldValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5851/buggy-version/src.main.java.com.textquo.twist.gae.GaeUnmarshaller.java", "BodyUseAPI": [], "Fixed commit": "a6fad3d23d8853a46ad6edec1f9cadc8b1052b8e", "Url": "https://api.github.com/repos/dotweblabs/twirl", "Date": "2015-01-12T23:48:56Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stationmillenium.android.services.AlarmService.convertCalendarDayIndexToArrayIndex(java.util.Calendar)", "com.stationmillenium.android.services.AlarmService.getAlarmTimeCalendar(android.content.SharedPreferences)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((nextRepeatDay == dayIndex) && (java.util.Calendar.getInstance().after(alarmTime))) { if (com.stationmillenium.android.BuildConfig.DEBUG) android.util.Log.d(com.stationmillenium.android.services.AlarmService.TAG, \"Repeat day is the same day as today - repeat in one week\"); alarmTime.add(java.util.Calendar.DATE, 7); }else if (nextRepeatDay != dayIndex) { if (com.stationmillenium.android.BuildConfig.DEBUG) android.util.Log.d(com.stationmillenium.android.services.AlarmService.TAG, \"Repeat day is not today : add some delay\"); alarmTime.setFirstDayOfWeek(java.util.Calendar.SUNDAY); nextRepeatDay += 2; if (nextRepeatDay > 7) nextRepeatDay -= 7; if (nextRepeatDay < (java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_WEEK))) alarmTime.add(java.util.Calendar.DATE, 7); else if ((java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.SUNDAY)) alarmTime.add(java.util.Calendar.DATE, 1); alarmTime.set(java.util.Calendar.DAY_OF_WEEK, nextRepeatDay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8126/buggy-version/StationMillenium.src.com.stationmillenium.android.services.AlarmService.java", "BodyUseAPI": ["java.util.Calendar.set(int,int)", "java.util.Calendar.add(int,int)", "java.util.Calendar.setFirstDayOfWeek(int)", "java.util.Calendar.add(int,int)", "java.util.Calendar.add(int,int)"], "Fixed commit": "e74eefafa5e28ff55ce1a478172e344b9774074b", "Url": "https://api.github.com/repos/vdavy/android", "Date": "2013-10-14T17:20:52Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.playposse.egoeater.storage.EgoEaterPreferences.getUser(com.playposse.egoeater.activity.ParentActivity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userBean == null) { com.playposse.egoeater.GlobalRouting.onSessionExpired(this); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/326/buggy-version/app.src.main.java.com.playposse.egoeater.activity.ParentActivity.java", "BodyUseAPI": [], "Fixed commit": "c3e94ca62d8ebda522ce571c3cde53ecc83afe15", "Url": "https://api.github.com/repos/thomasfischersm/EgoEater", "Date": "2017-12-09T20:16:07Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((weldMethodsAll.length()) > 0) weldMethodsAll.deleteCharAt(weldMethodsAll.lastIndexOf(\";\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3193/buggy-version/src.main.java.com.lvg.weldercenter.ui.control.ReportViewController.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.lastIndexOf(java.lang.String)"], "Fixed commit": "940217136abe47a1967eb527f8c8cb0683853f70", "Url": "https://api.github.com/repos/levicont/weldercenter", "Date": "2015-05-24T07:18:52Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ndtDocsAll.length()) > 0) ndtDocsAll.deleteCharAt(ndtDocsAll.lastIndexOf(\";\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3193/buggy-version/src.main.java.com.lvg.weldercenter.ui.control.ReportViewController.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.lastIndexOf(java.lang.String)"], "Fixed commit": "940217136abe47a1967eb527f8c8cb0683853f70", "Url": "https://api.github.com/repos/levicont/weldercenter", "Date": "2015-05-24T07:18:52Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (req.isSetFeatureOfInterestIdentifiers()) { c.add(org.hibernate.criterion.Restrictions.in(FeatureOfInterest.IDENTIFIER, req.getFeatureIdentifiers())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3636/buggy-version/hibernate.dao.src.main.java.org.n52.sos.ds.hibernate.GetFeatureOfInterestDAO.java", "BodyUseAPI": ["org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.in(FeatureOfInterest.IDENTIFIER, req.getFeatureIdentifiers()))", "org.n52.sos.request.GetFeatureOfInterestRequest.getFeatureIdentifiers()", "org.hibernate.criterion.Restrictions.in(FeatureOfInterest.IDENTIFIER,req.getFeatureIdentifiers())"], "Fixed commit": "e8b7a2830ddb8d5052f6fde28902e906981fe77e", "Url": "https://api.github.com/repos/EHJ-52n/SOS", "Date": "2014-10-15T07:42:13Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (req.isSetFeatureOfInterestIdentifiers()) { c.add(org.hibernate.criterion.Restrictions.in(FeatureOfInterest.IDENTIFIER, req.getFeatureIdentifiers())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3636/buggy-version/hibernate.dao.src.main.java.org.n52.sos.ds.hibernate.GetFeatureOfInterestDAO.java", "BodyUseAPI": ["org.n52.sos.request.GetFeatureOfInterestRequest.getFeatureIdentifiers()", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.in(FeatureOfInterest.IDENTIFIER, req.getFeatureIdentifiers()))", "org.hibernate.criterion.Restrictions.in(FeatureOfInterest.IDENTIFIER,req.getFeatureIdentifiers())"], "Fixed commit": "e8b7a2830ddb8d5052f6fde28902e906981fe77e", "Url": "https://api.github.com/repos/EHJ-52n/SOS", "Date": "2014-10-15T07:42:13Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDirectory) { response = ResponseBody(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5454/buggy-version/src.main.java.ResponseGenerator.java", "BodyUseAPI": [], "Fixed commit": "17d7ae7000d22aaaa25b058c21a0ec04a1219103", "Url": "https://api.github.com/repos/bushize/empty-webserver", "Date": "2014-11-20T21:27:03Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (waitMillis < 0) added.await(); else added.await(waitMillis, java.util.concurrent.TimeUnit.MILLISECONDS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4282/buggy-version/src.net.xy.codebase.collection.ParkingArrayQueue.java", "BodyUseAPI": ["java.util.concurrent.locks.Condition.await(long,java.util.concurrent.TimeUnit)"], "Fixed commit": "ef41ecad3b43705b53fd79f7f306dff871fb6f78", "Url": "https://api.github.com/repos/Nyanna/XY.CodebaseL", "Date": "2015-06-02T20:18:01Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (output.exists()) { output.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3545/buggy-version/src.main.java.org.lxp.converter.impl.JacobPDFConverter.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "045ad87154e2079b3e0710a27ab9997f557cadae", "Url": "https://api.github.com/repos/hivsuper/document-converter", "Date": "2016-08-27T17:48:16Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) == null) { android.util.Log.d(com.eyecall.vip.MainActivity.TAG, \"No last location known!\"); }else { android.util.Log.d(com.eyecall.vip.MainActivity.TAG, (((\"Location found: lat:\" + (location.getLatitude())) + \" long:\") + (location.getLongitude()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4952/buggy-version/vip.src.com.eyecall.vip.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "af7c57bb2eddb8d4437fe629f774a272988ef8e7", "Url": "https://api.github.com/repos/besuikerd/vip", "Date": "2013-10-24T11:41:02Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (humanAge == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9058/buggy-version/app.src.main.java.com.softwarebloat.petagecalculator.cowYearsCalculator.java", "BodyUseAPI": [], "Fixed commit": "12d2a12dbeb789609907f52bbf1c2b93cc2335eb", "Url": "https://api.github.com/repos/softwarebloat/PetAgeCalculator", "Date": "2016-05-01T17:04:31Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (humanAge == 1) { return cowAge; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9058/buggy-version/app.src.main.java.com.softwarebloat.petagecalculator.cowYearsCalculator.java", "BodyUseAPI": [], "Fixed commit": "12d2a12dbeb789609907f52bbf1c2b93cc2335eb", "Url": "https://api.github.com/repos/softwarebloat/PetAgeCalculator", "Date": "2016-05-01T17:04:31Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((undeliveredPushes.length()) > 2048) undeliveredPushes = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2613/buggy-version/sdk.src.main.java.ir.mbaas.sdk.helper.StaticMethods.java", "BodyUseAPI": [], "Fixed commit": "8c71e9367ec8d996b207354b580ea8888cd771b6", "Url": "https://api.github.com/repos/irmbaas/PushNotification", "Date": "2016-09-05T08:23:01Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (recv instanceof java.lang.String) { java.lang.System.out.println((((((\"Message received from \" + (getIP())) + \"\\nSender\\'s Port: \") + (getPort())) + \"\\nMessage: \") + ((java.lang.String) (recv)))); }else if (recv instanceof chatroom.Disconnect) { java.lang.System.out.println(((chatroom.Disconnect) (recv))); removeClient(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1342/buggy-version/src.chatroom.ClientHandler.java", "BodyUseAPI": [], "Fixed commit": "22cd2ba8fead927bbcbd25a5917c9292ab985f94", "Url": "https://api.github.com/repos/cgaldamez14/chat-room", "Date": "2016-04-23T18:33:37Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (consumer.isSubscribed()) { consumer.removeMessageListener(messageListener); consumer.unsubscribe(unsubscriptionListener); serverSession.checkWaitForLogout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7181/buggy-version/src.org.granite.client.tide.data.DataObserver.java", "BodyUseAPI": ["org.granite.client.messaging.Consumer.removeMessageListener(javax.jms.MessageListener)", "org.granite.client.messaging.Consumer.unsubscribe(org.granite.client.messaging.ResponseListener)"], "Fixed commit": "d697726cbca54cc4003f93a4e76e4f6eb51ed20f", "Url": "https://api.github.com/repos/graniteds/graniteds_java_client", "Date": "2012-08-01T14:17:05Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["side.yawClockwise(3).getVector3i()", "org.terasology.world.block.Block.getBlockFamily()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(worldProvider.getBlock(digCenter.add(left)).getBlockFamily().equals(ruFamily))) worldProvider.setBlock(digCenter, air);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2481/buggy-version/src.main.java.org.terasology.additionalRails.action.TunnelBoreCartAction.java", "BodyUseAPI": ["org.terasology.world.WorldProvider.setBlock(org.terasology.math.geom.Vector3i,org.terasology.world.block.Block)"], "Fixed commit": "232ad5775f20adaf5cec4074efcb3035aeef8eb6", "Url": "https://api.github.com/repos/PAndaContron/AdditionalRails", "Date": "2017-12-31T03:43:06Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mUidToMove) != null) && (mUidToMove.equals(model.uid))) { mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(model.latLng, 15)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5993/buggy-version/app.src.main.java.com.example.alex.motoproject.screenMap.MapFragment.java", "BodyUseAPI": ["com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(model.latLng,int)", "com.google.android.gms.maps.GoogleMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(model.latLng, 15))"], "Fixed commit": "b4c6591aae7f0b787004f4e37054e913806fd66d", "Url": "https://api.github.com/repos/new15/MotoProject", "Date": "2017-04-11T18:45:53Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectedThread) != null) connectedThread.write(inputString.getBytes());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8641/buggy-version/src.com.marakana.android.bluetoothscanner.Chat.java", "BodyUseAPI": [], "Fixed commit": "2d1363fbedd36f2e63e8cd6ee7dee4a81810ddf4", "Url": "https://api.github.com/repos/marakana/BluetoothScanner", "Date": "2012-10-31T21:42:36Z"},
{"Line": "=>1198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buttonProps.description) != \"\") { buttonDescription = buttonProps.description; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1163/buggy-version/src.android.ThemeableBrowser.java", "BodyUseAPI": [], "Fixed commit": "141021f4318ff0dbd7a92aef7224170defe12c5d", "Url": "https://api.github.com/repos/Deakin/cordova-plugin-themeablebrowser", "Date": "2017-11-27T00:47:24Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((update.getPassword()) != null) && ((update.getPassword().length()) >= 6)) { preparedStmt.setString(1, update.getPassword()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7808/buggy-version/src.main.java.UserManager.java", "BodyUseAPI": ["User.getPassword()", "java.sql.PreparedStatement.setString(int,update.getPassword())"], "Fixed commit": "bebf76d7198e7568f3b6fa78ba400a76d6d78e6b", "Url": "https://api.github.com/repos/jschmidt38/Repository", "Date": "2015-06-24T18:01:57Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activite.getProfesseur().equals(activite2.getProfesseur())) { if (!(activite.getType().equals(activite2.getType()))) { listeCoursMemeProf.addPaire(activite, activite2); reponse = false; }else if (!(activite.getSection().equals(activite2.getSection()))) { listeCoursMemeProf.addPaire(activite, activite2); reponse = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5705/buggy-version/PlanIFTicateur.src.planifticateur.domain.Horaire.java", "BodyUseAPI": ["planifticateur.domain.Activite.getType()", "planifticateur.domain.Activite.getType()", "planifticateur.domain.Activite.getSection()", "planifticateur.domain.Activite.getSection()", "activite.getSection().equals(activite2.getSection())", "planifticateur.domain.ListePairesDActivites.addPaire(planifticateur.domain.Activite,planifticateur.domain.Activite)", "activite.getType().equals(activite2.getType())", "planifticateur.domain.ListePairesDActivites.addPaire(planifticateur.domain.Activite,planifticateur.domain.Activite)"], "Fixed commit": "2e25777d3aab59c998e61580f225f36893b89fed", "Url": "https://api.github.com/repos/GLO2004-H15/planIFTicateur", "Date": "2015-04-20T21:12:43Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.SettingsPanel.doesUserStarts()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!userStarts) { model.Move AImove = logicAI.AIgenerateMove(controller.getBoard(), controller.getMovesDone(), controller.getUserSign(), controller.getCurrentMoveSign()); AImoves(AImove); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3544/buggy-version/src.view.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "d1820da48caa6bfc8e44e2a330952aa94c4fda8b", "Url": "https://api.github.com/repos/kolboch/TicTacToe", "Date": "2016-11-11T21:03:03Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (controller.hasGameWinner()) { showWinMessage(controller.getCurrentMoveSign()); if ((controller.getCurrentMoveSign()) == (controller.getUserSign())) { resultPanel.incrementUserWinsScore(); }else { resultPanel.incrementAIWinsScore(); } resetDataAndUpdate(); }else if ((controller.getMovesDone()) == 8) { showDrawMessage(); resultPanel.incrementDrawsScore(); resetDataAndUpdate(); }else { controller.moveDone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3544/buggy-version/src.view.MainFrame.java", "BodyUseAPI": ["controler.Controller.getMovesDone()", "view.MainFrame.showWinMessage(controller.getCurrentMoveSign())", "controler.Controller.moveDone()", "controler.Controller.getCurrentMoveSign()", "controler.Controller.getUserSign()", "controler.Controller.getCurrentMoveSign()"], "Fixed commit": "d1820da48caa6bfc8e44e2a330952aa94c4fda8b", "Url": "https://api.github.com/repos/kolboch/TicTacToe", "Date": "2016-11-11T21:03:03Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastUpdate) != null) return lastUpdate.getTime(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7316/buggy-version/src.main.java.de.fau.cs.mad.fablab.rest.server.core.drupal.NewsFeedClient.java", "BodyUseAPI": [], "Fixed commit": "dbbf5bc2551991d5bb5f4874c5182f95711acc94", "Url": "https://api.github.com/repos/FAU-Inf2/fablab-server", "Date": "2015-07-05T14:35:34Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastUpdate) != null) return lastUpdate.getTime(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7316/buggy-version/src.main.java.de.fau.cs.mad.fablab.rest.server.core.drupal.ICalClient.java", "BodyUseAPI": [], "Fixed commit": "dbbf5bc2551991d5bb5f4874c5182f95711acc94", "Url": "https://api.github.com/repos/FAU-Inf2/fablab-server", "Date": "2015-07-05T14:35:34Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentList.getItems().size()) == 0) { return; }else if ((shuffleMode) == (net.joshuad.hypnos.audio.AudioSystem.ShuffleMode.SEQUENTIAL)) { java.util.ListIterator<net.joshuad.hypnos.CurrentListTrack> iterator = currentList.getItems().listIterator(); boolean didSomething = false; while (iterator.hasNext()) { if (iterator.next().getIsCurrentTrack()) { if (iterator.hasNext()) { playTrack(iterator.next(), startPaused); didSomething = true; }else if ((repeatMode) == (net.joshuad.hypnos.audio.AudioSystem.RepeatMode.PLAY_ONCE)) { shuffleTracksPlayedCounter = 1; stop(false); didSomething = true; }else if (((repeatMode) == (net.joshuad.hypnos.audio.AudioSystem.RepeatMode.REPEAT)) && ((currentList.getItems().size()) > 0)) { playTrack(currentList.getItems().get(0), startPaused); didSomething = true; }else { stop(false); didSomething = true; } break; } } if (!didSomething) { if ((currentList.getItems().size()) > 0) { playTrack(currentList.getItems().get(0), startPaused); } } }else if ((shuffleMode) == (net.joshuad.hypnos.audio.AudioSystem.ShuffleMode.SHUFFLE)) { if ((repeatMode) == (net.joshuad.hypnos.audio.AudioSystem.RepeatMode.REPEAT)) { shuffleTracksPlayedCounter = 1; int currentListSize = currentList.getItems().size(); int collisionWindowSize = currentListSize / 3; int permittedRetries = 3; boolean foundMatch = false; int retryCount = 0; net.joshuad.hypnos.Track playMe; java.util.List<net.joshuad.hypnos.Track> collisionWindow; if ((previousStack.size()) >= collisionWindowSize) { collisionWindow = previousStack.subList(0, collisionWindowSize); }else { collisionWindow = previousStack.getData(); } do { playMe = currentList.getItems().get(randomGenerator.nextInt(currentList.getItems().size())); if (!(collisionWindow.contains(playMe))) { foundMatch = true; }else { ++retryCount; } } while ((!foundMatch) && (retryCount < permittedRetries) ); playTrack(playMe, startPaused); }else { if ((shuffleTracksPlayedCounter) < (currentList.getItems().size())) { java.util.List<net.joshuad.hypnos.Track> alreadyPlayed = previousStack.subList(0, shuffleTracksPlayedCounter); java.util.ArrayList<net.joshuad.hypnos.Track> viableTracks = new java.util.ArrayList<net.joshuad.hypnos.Track>(currentList.getItems()); viableTracks.removeAll(alreadyPlayed); net.joshuad.hypnos.Track playMe = viableTracks.get(randomGenerator.nextInt(viableTracks.size())); playTrack(playMe, startPaused); ++(shuffleTracksPlayedCounter); }else { stop(false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9151/buggy-version/src.net.joshuad.hypnos.audio.AudioSystem.java", "BodyUseAPI": ["currentList.getItems().get(int)", "net.joshuad.hypnos.audio.AudioSystem.playTrack(currentList.getItems().get(0),boolean)", "currentList.getItems().size()", "net.joshuad.hypnos.CurrentList.getItems()", "java.util.Random.nextInt(currentList.getItems().size())", "currentList.getItems().size()", "net.joshuad.hypnos.CurrentList.getItems()", "currentList.getItems().size()", "net.joshuad.hypnos.audio.AudioSystem.playTrack(currentList.getItems().get(0),boolean)", "net.joshuad.hypnos.CurrentList.getItems()", "net.joshuad.hypnos.CurrentList.getItems()", "currentList.getItems().size()", "net.joshuad.hypnos.CurrentList.getItems()", "net.joshuad.hypnos.CurrentList.getItems()", "currentList.getItems().get(int)", "currentList.getItems().size()", "currentList.getItems().listIterator()", "net.joshuad.hypnos.CurrentList.getItems()", "net.joshuad.hypnos.CurrentList.getItems()", "net.joshuad.hypnos.CurrentList.getItems()", "currentList.getItems().get(int)", "net.joshuad.hypnos.CurrentList.getItems()"], "Fixed commit": "9380141180648ca10f7328fb5503ba0ef459ef3b", "Url": "https://api.github.com/repos/JoshuaD84/HypnosMusicPlayer", "Date": "2017-07-23T09:18:27Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((processingRequest) != _requestImpl) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6169/buggy-version/jactor2-coreSt.src.main.java.org.agilewiki.jactor2.core.impl.stReactors.IsolationInbox.java", "BodyUseAPI": [], "Fixed commit": "c652171d17cb32b8016e16f0db1c729cf0da3a0f", "Url": "https://api.github.com/repos/skunkiferous/Util", "Date": "2014-08-20T16:59:26Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(text.getText().toString().equals(\"\"))) && (!(phone.getText().toString().equals(\"\")))) { contacts.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7883/buggy-version/app.src.main.java.com.theironyard.contactandroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "213196bdde9b8c21d1072bed3e4699bd82bfbfa8", "Url": "https://api.github.com/repos/mfahrner/ContactsAndroid", "Date": "2016-08-18T01:32:48Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ownFileName == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5240/buggy-version/src.main.java.dk.frv.eavdam.io.FTPHandler.java", "BodyUseAPI": [], "Fixed commit": "2f2346eb2d830ccd4a870d8aa51314433c24a015", "Url": "https://api.github.com/repos/dma-graveyard/EAVDAM", "Date": "2011-12-20T11:56:59Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["efimovich.bsu.by.tableofcheats.AddActivity.1.findViewById(R.id.yearEdit)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isValideInput(yearEdit)) { sendGame(nameEdit, yearEdit, cheatsEdit); android.widget.Toast toast = android.widget.Toast.makeText(getBaseContext(), R.string.adding_cheats, Toast.LENGTH_SHORT); toast.show(); }else { android.widget.Toast toast = android.widget.Toast.makeText(getBaseContext(), R.string.unvalide_game, Toast.LENGTH_SHORT); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6906/buggy-version/app.src.main.java.efimovich.bsu.by.tableofcheats.AddActivity.java", "BodyUseAPI": ["efimovich.bsu.by.tableofcheats.AddActivity.1.sendGame(android.widget.EditText,android.widget.EditText,android.widget.EditText)"], "Fixed commit": "9ac103fa94897460e50f116b87a21251f08d4192", "Url": "https://api.github.com/repos/xim97/TableOfCheats", "Date": "2017-12-13T13:21:39Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (holder.image.getTag().equals(mUrl)) { holder.image.setImageBitmap(bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6984/buggy-version/app.src.main.java.com.thoughtworks.android.startkit.BooklistFragment.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "dad4d31cd59f0d8845d2c744be79604661ad98f4", "Url": "https://api.github.com/repos/wesleyxie/Startkit", "Date": "2017-03-03T17:17:11Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["upfile.getOriginalFilename().substring(((upfile.getOriginalFilename().lastIndexOf(\".\")) + 1)).toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(imageType.equals(\"jpg\"))) && (!(imageType.equals(\"png\")))) { bean.failure(ErrorCodeEnums.image_upload_failed.getErrorCode(), \"\u56fe\u7247\u652f\u6301jpg\u548cpng\u683c\u5f0f\"); }else { long fileSize = upfile.getSize(); if (fileSize > ((1024 * 1024) * 10)) { bean.failure(ErrorCodeEnums.image_upload_failed.getErrorCode(), \"\u56fe\u7247\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc710M\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5033/buggy-version/servers.src.main.java.com.dreamy.service.impl.upload.ImgUploadServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "4b6a2b34a6548b567317efb1582201708a4399d5", "Url": "https://api.github.com/repos/dreamyteam/dreamy_ip", "Date": "2016-05-12T10:31:36Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.github.nilscoding.mailbuilder.utils.StringUtils.isEmpty(htmlContentCharset)) == false) { htmlType = (htmlType + \"; charset=\") + htmlContentCharset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9247/buggy-version/src.main.java.com.github.nilscoding.mailbuilder.MailBuilder.java", "BodyUseAPI": [], "Fixed commit": "4c3d1e04b26ba88128591e4a912fd52a613ff7d7", "Url": "https://api.github.com/repos/NilsCoding/mailbuilder", "Date": "2016-03-21T21:50:26Z"},
{"Line": "=>1214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o1.getScoring()) == (o2.getScoring())) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5121/buggy-version/enzyme-portal.ep-core.src.main.java.uk.ac.ebi.ep.core.search.EnzymeFinder.java", "BodyUseAPI": [], "Fixed commit": "4dda0f232d9cdc43a70411dc57861a6f13a77840", "Url": "https://api.github.com/repos/ebi-cheminf/enzymeportal", "Date": "2013-01-15T11:29:06Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curTrack) instanceof simulation.Drawable.tracks.JunctionTrack) { this.setJunctionTrack(connectedToMovable.getJunctionTrack()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5905/buggy-version/src.simulation.Drawable.DrawableRollingStock.java", "BodyUseAPI": [], "Fixed commit": "5021453de27aa134289680ed09b20428dfff57f9", "Url": "https://api.github.com/repos/vanhunick/Train-Simulator", "Date": "2016-10-04T01:14:42Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, me.minidigger.voxelgameslib.api.map.MapInfo>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (winner == null) { winner = availableMaps.values().iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1965/buggy-version/api.src.main.java.me.minidigger.voxelgameslib.api.feature.features.VoteFeature.java", "BodyUseAPI": [], "Fixed commit": "383c48f869a4d76f05df8f95f00f6c28352e6fec", "Url": "https://api.github.com/repos/VoxelGamesLib/VoxelGamesLib", "Date": "2016-11-21T16:52:18Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((availableMaps.size()) == 0) { getPhase().getGame().broadcastMessage(LangKey.VOTE_NO_MAPS_FOUND); getPhase().getGame().endGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1965/buggy-version/api.src.main.java.me.minidigger.voxelgameslib.api.feature.features.VoteFeature.java", "BodyUseAPI": [], "Fixed commit": "383c48f869a4d76f05df8f95f00f6c28352e6fec", "Url": "https://api.github.com/repos/VoxelGamesLib/VoxelGamesLib", "Date": "2016-11-21T16:52:18Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o.isDirty()) { if (o.isSparse()) { org.apache.sysml.runtime.instructions.gpu.context.CSRPointer p = o.getSparseMatrixCudaPointer(); if (p == null) throw new java.lang.RuntimeException(\"CSRPointer is null in clearTemporaryMemory\"); if (((p.rowPtr) != null) && (cudaBlockSizeMap.containsKey(p.rowPtr))) { tmpCudaBlockSizeMap.put(p.rowPtr, cudaBlockSizeMap.get(p.rowPtr)); } if (((p.colInd) != null) && (cudaBlockSizeMap.containsKey(p.colInd))) { tmpCudaBlockSizeMap.put(p.colInd, cudaBlockSizeMap.get(p.colInd)); } if (((p.val) != null) && (cudaBlockSizeMap.containsKey(p.val))) { tmpCudaBlockSizeMap.put(p.val, cudaBlockSizeMap.get(p.val)); } }else { jcuda.Pointer p = o.getJcudaDenseMatrixPtr(); if (p == null) throw new java.lang.RuntimeException(\"Pointer is null in clearTemporaryMemory\"); tmpCudaBlockSizeMap.put(p, cudaBlockSizeMap.get(p)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1689/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getSparseMatrixCudaPointer()", "org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getJcudaDenseMatrixPtr()", "org.apache.sysml.runtime.instructions.gpu.context.GPUObject.isSparse()"], "Fixed commit": "750c93f7fb666b8ac1d9fdcd6f26671dd2333489", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>741", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getSparseMatrixCudaPointer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new java.lang.RuntimeException(\"CSRPointer is null in clearTemporaryMemory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1689/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": [], "Fixed commit": "750c93f7fb666b8ac1d9fdcd6f26671dd2333489", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getJcudaDenseMatrixPtr()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new java.lang.RuntimeException(\"Pointer is null in clearTemporaryMemory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1689/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": [], "Fixed commit": "750c93f7fb666b8ac1d9fdcd6f26671dd2333489", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(ItemTagsOpenHelper.COLUMN_NAME))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(items.contains(itemName))) { items.add(itemName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6983/buggy-version/WeAreAllTheSame.src.weareallthesame.factories.ItemFactory.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "fc7d206230eb1b986ca50e31ffb02794c7ce0006", "Url": "https://api.github.com/repos/Timska/WeAreAllTheSame", "Date": "2015-07-24T16:54:05Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (readUntilMatch(dataIn, startTag, (i > 0))) { if (readUntilMatch(dataIn, endTag, true)) { value.append(buffer.getData(), 0, buffer.getLength()); i = i + 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6270/buggy-version/bdap-engine.src.main.java.etl.util.XmlRecordReader.java", "BodyUseAPI": ["etl.util.XmlRecordReader.readUntilMatch(etl.util.XmlInputStream,byte[],boolean)"], "Fixed commit": "6826488616ed043bc2fc19738a66af7caed4d568", "Url": "https://api.github.com/repos/huangpeng0426/log.analysis", "Date": "2016-12-06T14:53:59Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.openhack.jobsweeper.recommendation.database.Session.run(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.hasNext()) { se.openhack.jobsweeper.recommendation.database.Record record = result.next(); int counter = record.get(\"counter\").asInt(); counter += delta; session.run((((((\"MATCH (c:Tag {name:'\" + tagName) + \"'})<-[d:interested]-(e:User) WHERE e.id = '\") + userId) + \"' SET d.counter=\") + counter)); }else { se.openhack.jobsweeper.recommendation.database.StatementResult createResult = session.run(((((\"CREATE (u:User {id: '\" + userId) + \"'})-[r:interested {counter : 1}]->(c:Tag {name:'\") + tagName) + \"'}) \")); java.lang.System.out.println(\"asd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3160/buggy-version/src.main.java.se.openhack.jobsweeper.recommendation.database.DatabaseClient.java", "BodyUseAPI": ["se.openhack.jobsweeper.recommendation.database.StatementResult.next()"], "Fixed commit": "5b72500a0e264418870623854f8c3976cea52065", "Url": "https://api.github.com/repos/RubbyRedson/jobsweeper-recommendation-engine", "Date": "2017-04-01T20:16:44Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newPhysician) { createEdge(carrierVertex, physicianVertex, EdgeType.DIRECTED, \"attending\", graphId); createEdge(patientVertex, physicianVertex, EdgeType.DIRECTED, ((\"visit-\" + (visitCount)) + \"-attended-by\"), graphId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7833/buggy-version/src.main.java.org.niraj.stream.parser.domain.medicare.claim.ClaimGraphGenerator.java", "BodyUseAPI": [], "Fixed commit": "db1186601a25ae7a342016d8e7b0e2bc0b92fb97", "Url": "https://api.github.com/repos/niraj-rajbhandari/stream-generation-configurator", "Date": "2017-12-07T17:33:46Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((criticsRating.trim().length()) == 0) { return \"No rating yet\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2735/buggy-version/app.src.main.java.javathehutt.buzz_movieselector.movie.Movie.java", "BodyUseAPI": [], "Fixed commit": "1c401d57a5a32ea5bc1a5137a1fcd72136f1522d", "Url": "https://api.github.com/repos/JavaTheHutt2340/MovieSelector", "Date": "2016-02-20T21:46:21Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(st.hasMoreTokens())) { throw new java.lang.IllegalArgumentException(\"Attempting to parse invalid header\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8704/buggy-version/src.com.meterware.httpunit.HttpUnitUtils.java", "BodyUseAPI": [], "Fixed commit": "1a2a5d504c912c3a769a9b437785166e832ff990", "Url": "https://api.github.com/repos/emopers/httpunit", "Date": "2015-11-25T23:50:34Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.scijava.util.ConversionUtils.getClass(java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((c != null) && (org.scijava.util.ConversionUtils.canCast(value, c))) return org.scijava.util.ConversionUtils.convert(value, c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5180/buggy-version/src.main.java.org.scijava.util.ConversionUtils.java", "BodyUseAPI": ["org.scijava.util.ConversionUtils.convert(java.lang.Object,java.lang.Class<?>)"], "Fixed commit": "4ab31eb5e25ee087f685ec3b373ca3a0844dc70e", "Url": "https://api.github.com/repos/scijava/scijava-common", "Date": "2013-10-21T22:28:21Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wall_messes.size) > 40) wall_messes.removeIndex(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4641/buggy-version/core.src.com.blobb.game.BlopGame.java", "BodyUseAPI": ["com.badlogic.gdx.utils.Array<com.blobb.game.WallMess>.removeIndex(int)"], "Fixed commit": "f6df47e4dbdc45f39c5d6cef10392572cf928aff", "Url": "https://api.github.com/repos/kekenin/Blop", "Date": "2017-06-29T15:51:07Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((messes.size) > 40) messes.removeIndex(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4641/buggy-version/core.src.com.blobb.game.BlopGame.java", "BodyUseAPI": ["com.badlogic.gdx.utils.Array<com.blobb.game.Mess>.removeIndex(int)"], "Fixed commit": "f6df47e4dbdc45f39c5d6cef10392572cf928aff", "Url": "https://api.github.com/repos/kekenin/Blop", "Date": "2017-06-29T15:51:07Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item instanceof hudson.model.AbstractProject) { if (isSystemExitInPublisher(((hudson.model.AbstractProject) (item)).getPublishersList())) { found = true; } if ((((hudson.model.AbstractProject) (item)).getProperty(hudson.model.ParametersDefinitionProperty.class)) != null) { if (isSystemExitInParameters(((hudson.model.ParametersDefinitionProperty) (((hudson.model.AbstractProject) (item)).getProperty(hudson.model.ParametersDefinitionProperty.class))).getParameterDefinitions())) { found = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/959/buggy-version/src.main.java.org.jenkins.ci.plugins.jenkinslint.check.GroovySystemExitChecker.java", "BodyUseAPI": [], "Fixed commit": "f63b3d1dc2c88c6c55d0a219033eacaaf24c971f", "Url": "https://api.github.com/repos/jenkinsci/jenkinslint-plugin", "Date": "2017-08-12T22:04:55Z"},
{"Line": "=>895", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["valuePorts.next().getResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((valuePort.hasProperty(E3value.vp_in_connects_ve)) && outer) { com.hp.hpl.jena.rdf.model.StmtIterator valueExchanges = valuePort.listProperties(E3value.vp_in_connects_ve); while (valueExchanges.hasNext()) { com.hp.hpl.jena.rdf.model.Resource valueExchange = valueExchanges.next().getResource(); com.hp.hpl.jena.rdf.model.Resource reciprocalValuePort = valueExchange.getProperty(E3value.ve_has_out_po).getResource(); com.hp.hpl.jena.rdf.model.Resource reciprocalValueOffering = reciprocalValuePort.getProperty(E3value.vp_in_vo).getResource(); com.hp.hpl.jena.rdf.model.Resource reciprocalValueInterface = reciprocalValueOffering.getProperty(E3value.vo_in_vi).getResource(); connectedValueInterfaces.add(reciprocalValueInterface); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5000/buggy-version/src.main.java.e3fraud.model.E3Model.java", "BodyUseAPI": ["com.hp.hpl.jena.rdf.model.Resource.listProperties(E3value.vp_in_connects_ve)"], "Fixed commit": "da3ca60b8699406ec6febc18f5494d486902cd4a", "Url": "https://api.github.com/repos/danionita/e3tools", "Date": "2017-01-24T13:52:27Z"},
{"Line": "=>905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["valuePorts.next().getResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((valuePort.hasProperty(E3value.vp_out_connects_ve)) && outer) { com.hp.hpl.jena.rdf.model.StmtIterator valueExchanges = valuePort.listProperties(E3value.vp_out_connects_ve); while (valueExchanges.hasNext()) { com.hp.hpl.jena.rdf.model.Resource valueExchange = valueExchanges.next().getResource(); com.hp.hpl.jena.rdf.model.Resource reciprocalValuePort = valueExchange.getProperty(E3value.ve_has_in_po).getResource(); com.hp.hpl.jena.rdf.model.Resource reciprocalValueOffering = reciprocalValuePort.getProperty(E3value.vp_in_vo).getResource(); com.hp.hpl.jena.rdf.model.Resource reciprocalValueInterface = reciprocalValueOffering.getProperty(E3value.vo_in_vi).getResource(); connectedValueInterfaces.add(reciprocalValueInterface); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5000/buggy-version/src.main.java.e3fraud.model.E3Model.java", "BodyUseAPI": ["com.hp.hpl.jena.rdf.model.Resource.listProperties(E3value.vp_out_connects_ve)"], "Fixed commit": "da3ca60b8699406ec6febc18f5494d486902cd4a", "Url": "https://api.github.com/repos/danionita/e3tools", "Date": "2017-01-24T13:52:27Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gigigo.orchextra.core.domain.entities.ocm.OxSession.getAccessToken()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (accessToken != null) { builder = builder.header(com.gigigo.orchextra.core.data.services.OkHttpHeadersInterceptorOcm.AUTHORIZATION, accessToken); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1608/buggy-version/ocmsdk.src.main.java.com.gigigo.orchextra.core.data.services.OkHttpHeadersInterceptorOcm.java", "BodyUseAPI": ["Request.Builder.header(java.lang.String,java.lang.String)"], "Fixed commit": "01f0f93c07874fc21d90a23df4aee66fff0817fd", "Url": "https://api.github.com/repos/Orchextra/orchextra-content-android-sdk", "Date": "2017-03-07T15:20:16Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (appReports == null) { return allApps; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7395/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-common.src.main.java.org.apache.hadoop.yarn.server.webapp.WebServices.java", "BodyUseAPI": [], "Fixed commit": "e2a02702178db60150cc0c2253d48b8532a474c2", "Url": "https://api.github.com/repos/cnauroth/hadoop-1", "Date": "2015-09-14T23:00:35Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (containerReports == null) { return containersInfo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7395/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-common.src.main.java.org.apache.hadoop.yarn.server.webapp.WebServices.java", "BodyUseAPI": [], "Fixed commit": "e2a02702178db60150cc0c2253d48b8532a474c2", "Url": "https://api.github.com/repos/cnauroth/hadoop-1", "Date": "2015-09-14T23:00:35Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (appAttemptReports == null) { return appAttemptsInfo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7395/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-common.src.main.java.org.apache.hadoop.yarn.server.webapp.WebServices.java", "BodyUseAPI": [], "Fixed commit": "e2a02702178db60150cc0c2253d48b8532a474c2", "Url": "https://api.github.com/repos/cnauroth/hadoop-1", "Date": "2015-09-14T23:00:35Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.reflect.Modifier.isStatic(f.getModifiers())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4747/buggy-version/wattsup-jsdk-core.src.main.java.wattsup.jsdk.core.convert.WattsUpPacketToMeasurementConverter.java", "BodyUseAPI": [], "Fixed commit": "9ad78923c1b3004052e0e35a71665dcabfafeb86", "Url": "https://api.github.com/repos/alessandroleite/wattsup-java-sdk", "Date": "2013-12-27T11:44:26Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (link instanceof dist.esper.core.comm.rawsocket.async.AsyncRawSocketLink) { ((dist.esper.core.comm.rawsocket.async.AsyncRawSocketLink) (link)).flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7581/buggy-version/EsperDist2.core.dist.esper.core.comm.rawsocket.async.AsyncRawSocketLinkManager.java", "BodyUseAPI": [], "Fixed commit": "bfe49442386bfdd1dcbd3f45001e241ef9c3e72e", "Url": "https://api.github.com/repos/HoratiusTang/EsperDist", "Date": "2015-04-21T14:13:00Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (link instanceof dist.esper.core.comm.rawsocket.async.AsyncRawSocketLink) { ((dist.esper.core.comm.rawsocket.async.AsyncRawSocketLink) (link)).flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7581/buggy-version/EsperDist2.core.dist.esper.core.comm.rawsocket.async.AsyncRawSocketLinkManager.java", "BodyUseAPI": [], "Fixed commit": "bfe49442386bfdd1dcbd3f45001e241ef9c3e72e", "Url": "https://api.github.com/repos/HoratiusTang/EsperDist", "Date": "2015-04-21T14:13:00Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(recipientVerified)) { displayErrorAtMessageFragment(getString(R.string.user_notextisting)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2163/buggy-version/src.net.placelet.IOMessageActivity.java", "BodyUseAPI": [], "Fixed commit": "ea8fdce8faa4e169774c463368f7d808962a749e", "Url": "https://api.github.com/repos/JohnAZoidberg/Placelet", "Date": "2014-07-05T10:52:15Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasHeaderRow) { fieldNames = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5004/buggy-version/java-util.src.main.java.io.druid.java.util.common.parsers.CSVParser.java", "BodyUseAPI": [], "Fixed commit": "375f8a77d0c8452bec67390a6e3f11f67126bff8", "Url": "https://api.github.com/repos/implydata/druid", "Date": "2017-06-22T17:10:13Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getPathInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (uri == null) throw new java.lang.IllegalArgumentException(\"Invalid path for post method\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4781/buggy-version/src.main.java.schedulingServer.ApiServlet.java", "BodyUseAPI": [], "Fixed commit": "29ea6cc6ff1ae268038c5dff619e746e787bf10d", "Url": "https://api.github.com/repos/kairos-scheduling-software/scheduling-core-service", "Date": "2014-12-07T22:40:02Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(is_debug)) { HandleLejos(com.tau.dtr.cim_application.Game.myTile, position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2519/buggy-version/app.src.main.java.com.tau.dtr.cim_application.Game.java", "BodyUseAPI": [], "Fixed commit": "f5f6b0cf9c6f865f7fcfda1e5ee923f60a0afbcb", "Url": "https://api.github.com/repos/danlinenberg/cim-android", "Date": "2017-06-17T16:52:41Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(part5.equals(todaycheck))) { s = connectionstatus1; }else { s = part4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2827/buggy-version/app.src.main.java.com.vedant.hereami.chatfolder.chatactivity.java", "BodyUseAPI": [], "Fixed commit": "e56aff062d232a02816a91f1d2fffa4f8869ff1a", "Url": "https://api.github.com/repos/sunnybedi990/Hereami", "Date": "2017-04-05T07:20:33Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cb.isChecked()) { user.setIsStudent(true); user.setId(java.lang.Integer.parseInt(idET.getText().toString())); }else if (!(cb.isChecked())) { user.setIsStudent(false); user.setId(user.getpKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1994/buggy-version/app.src.main.java.edu.uco.schambers.classmate.Fragments.Login.java", "BodyUseAPI": ["android.widget.CheckBox.isChecked()"], "Fixed commit": "b2e3fdbbee57838273c6cf61393e3e8f7e085e56", "Url": "https://api.github.com/repos/colegarien/SDDTermProject", "Date": "2015-10-08T07:37:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (min > max) { passwordOutputField.setText(\"min can not be greater than max!\"); }else { passwordOutputField.setText(p.generate(b, min, max)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5450/buggy-version/src.PasswordGUI.java", "BodyUseAPI": ["javax.swing.JTextField.setText(p.generate(b, min, max))", "Password.generate(java.lang.String,int,int)"], "Fixed commit": "f75c6bb02247e3d24232cdfee137101d1c9b29ac", "Url": "https://api.github.com/repos/UCSB-CS56-Projects/cs56-utilities-password-generator", "Date": "2014-03-12T20:03:15Z"},
{"Line": "=>846", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mLastMotionX) != null) && ((mLastMotionY) != null)) { mLastMotionX[pointerId] = x; mLastMotionY[pointerId] = y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3306/buggy-version/library.src.com.sothree.slidinguppanel.ViewDragHelper.java", "BodyUseAPI": [], "Fixed commit": "d4068d6256299040a93667cbe9be3244ebc04940", "Url": "https://api.github.com/repos/davidgarciaanton/AndroidSlidingUpPanel", "Date": "2014-11-01T22:49:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dayNumber == 0) { dayNumber = 7; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1500/buggy-version/app.src.main.java.com.agrass.coffeemap.OpenHourParser.java", "BodyUseAPI": [], "Fixed commit": "dfec8e95c7142ed6debc9726fe9c3c1adaabaf0e", "Url": "https://api.github.com/repos/Agrassx/CoffeeMap", "Date": "2015-12-10T15:32:54Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fixedBandWidth) { if ((mBands.size()) > 0) { int dividerCount = 0; if (hasDividerBegin) dividerCount++; if (hasDividerEnd) dividerCount++; if (hasDividerMiddle) dividerCount += (mBands.size()) - 1; height += ((mDividerWidth) * dividerCount) + ((mBandWidth) * (mBands.size())); } }else { height += contentHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3354/buggy-version/library.src.main.java.cn.okayj.axui.FlowLayout.java", "BodyUseAPI": [], "Fixed commit": "b9fa39ae3e9dfd717dfa1e16ce085a66f3c4e125", "Url": "https://api.github.com/repos/jack-cook/axUI", "Date": "2016-08-31T17:02:36Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opdId) != 0) uploadRequest.addHeader(\"opdId\", java.lang.String.valueOf(opdId));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1343/buggy-version/app.src.main.java.com.rescribe.ui.activities.SelectedRecordsGroupActivity.java", "BodyUseAPI": [], "Fixed commit": "023205e4a8a4791f78a2d466c57a018c80620dc9", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2017-09-05T09:04:22Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((Channels.ControlChannel.getReceivedStores().get(fileName)) == null) || ((Channels.ControlChannel.getReceivedStores().get(fileName).get(chunkCounter)) == null)) receivedSize = 0; else receivedSize = Channels.ControlChannel.getReceivedStores().get(fileName).get(chunkCounter).size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8821/buggy-version/project_1.src.fileManage.SplitFile.java", "BodyUseAPI": ["Channels.ControlChannel.getReceivedStores().get(fileName).get(chunkCounter).size()", "Channels.ControlChannel.getReceivedStores().get(fileName).get(int)", "Channels.ControlChannel.getReceivedStores().get(java.lang.String)"], "Fixed commit": "fdccf9067a77a12ff9b6607561394a9bdbbcea58", "Url": "https://api.github.com/repos/tomasvcaldas/FEUP-SDIS", "Date": "2017-04-10T01:24:11Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"EQUIPMENT\".equalsIgnoreCase(mTestBasedOn)) { rows = (rows) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/931/buggy-version/VALDOC.app.src.main.java.com.project.valdoc.RDPCTUserEntryActivity.java", "BodyUseAPI": [], "Fixed commit": "24968a769d809c1c4c5ee64cedf7ed91ef84f584", "Url": "https://api.github.com/repos/avinashtiwari87/HelloAcTest", "Date": "2017-05-14T10:39:07Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (closingIndex == (rule.length())) { throw new java.lang.Exception((((\"Unbalanced brackets in Ruins template \" + r) + \", offending rule: \") + rule)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2976/buggy-version/Ruins.src.main.java.atomicstryker.ruins.common.RuinTemplateRule.java", "BodyUseAPI": [], "Fixed commit": "3fa81c841ab7d64092f0b7d968d09b9fdd0b2423", "Url": "https://api.github.com/repos/AtomicStryker/atomicstrykers-minecraft-mods", "Date": "2015-08-05T13:38:05Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (system.isRescale()) system.autoscaleAxes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4052/buggy-version/org.dawnsci.spectrum.ui.src.org.dawnsci.spectrum.ui.file.AbstractSpectrumFile.java", "BodyUseAPI": ["org.eclipse.dawnsci.plotting.api.IPlottingSystem.autoscaleAxes()"], "Fixed commit": "eb072660f1034e545bf6893b0dfe5d3ea536e7b1", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2015-09-14T13:10:00Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (system.isRescale()) system.autoscaleAxes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4052/buggy-version/org.dawnsci.spectrum.ui.src.org.dawnsci.spectrum.ui.file.AbstractSpectrumFile.java", "BodyUseAPI": ["org.eclipse.dawnsci.plotting.api.IPlottingSystem.autoscaleAxes()"], "Fixed commit": "eb072660f1034e545bf6893b0dfe5d3ea536e7b1", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2015-09-14T13:10:00Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (system.isRescale()) system.autoscaleAxes();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4052/buggy-version/org.dawnsci.spectrum.ui.src.org.dawnsci.spectrum.ui.views.TraceProcessPage.java", "BodyUseAPI": ["org.eclipse.dawnsci.plotting.api.IPlottingSystem.autoscaleAxes()"], "Fixed commit": "eb072660f1034e545bf6893b0dfe5d3ea536e7b1", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2015-09-14T13:10:00Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level instanceof java.lang.String) { switch (level) { case \"NORMAL\" : return model.UserLevel.NORMAL; case \"WORKER\" : return model.UserLevel.WORKER; case \"MANAGER\" : return model.UserLevel.MANAGER; case \"ADMIN\" : return model.UserLevel.ADMIN; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2573/buggy-version/src.model.UserLevel.java", "BodyUseAPI": [], "Fixed commit": "5a3ca37884f38881b3e2d5d0e05e102920b8a7f4", "Url": "https://api.github.com/repos/code-bot/CS2340Project", "Date": "2016-11-16T17:39:18Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next < now) { next = now; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3371/buggy-version/src.main.java.org.wilson.world.manager.WebManager.java", "BodyUseAPI": [], "Fixed commit": "531c5c9d8805a6e895439904d47c4960fbc4ab09", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-12-06T09:18:38Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["te.getMirrorState().getBlock().getActualState(te.getMirrorState(),te.getWorld(),te.getPos())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (renderState.isOpaqueCube()) { net.minecraft.client.renderer.GlStateManager.disableCull(); net.minecraft.client.renderer.GlStateManager.shadeModel((net.minecraft.client.Minecraft.isAmbientOcclusionEnabled() ? 7425 : 7424)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7373/buggy-version/src.main.java.com.wynprice.secretroomsmod.render.TileEntityInfomationHolderRenderer.java", "BodyUseAPI": [], "Fixed commit": "b7cb84c828ed29857dc1c2e6da540545504ddd25", "Url": "https://api.github.com/repos/AbrarSyed/SecretRoomsMod-forge", "Date": "2017-11-01T22:12:01Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value == (entry.getKey())) { sb = new java.lang.StringBuilder(((entry.getValue()) + \"|\")); break; }else if ((value & (entry.getKey())) == (entry.getKey())) { sb.append(entry.getValue()).append('|'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5425/buggy-version/jadx-core.src.main.java.jadx.core.xmlgen.ManifestAttributes.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.util.Map.Entry<java.lang.Long, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.Long, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.Long, java.lang.String>.getKey()", "java.lang.StringBuilder.append(java.lang.String)", "java.util.Map.Entry<java.lang.Long, java.lang.String>.getValue()"], "Fixed commit": "13733eca850aa3bbffbffeadc217f94c28e64af1", "Url": "https://api.github.com/repos/friederbluemle/jadx", "Date": "2016-12-04T03:45:45Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profile == null) && readFromSession) { final java.lang.Object objRequest = this.context.getSessionAttribute(Pac4jConstants.USER_PROFILE); if ((objRequest != null) && (objRequest instanceof org.pac4j.core.profile.UserProfile)) { profile = ((U) (objRequest)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/676/buggy-version/pac4j-core.src.main.java.org.pac4j.core.profile.ProfileManager.java", "BodyUseAPI": [], "Fixed commit": "ad96f73c20ae64d1d2adc1c9f70998c54fedee67", "Url": "https://api.github.com/repos/pac4j/pac4j", "Date": "2016-01-05T16:15:01Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drone.GPS.isPositionValid()) { mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(drone.GPS.getPosition(), 16)); }else { android.widget.Toast.makeText(getActivity(), \"There is no valid location for the Drone\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4659/buggy-version/DroidPlanner.src.com.droidplanner.fragments.FlightMapFragment.java", "BodyUseAPI": ["com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(drone.GPS.getPosition(),int)", "com.google.android.gms.maps.GoogleMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(drone.GPS.getPosition(), 16))", "drone.GPS.getPosition()"], "Fixed commit": "3c877d44a691bf5411eb41247f77315ee17bbdd9", "Url": "https://api.github.com/repos/arthurbenemann/droidplanner", "Date": "2013-07-19T19:45:05Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((documentId != null) && (principalId != null)) { if (!(org.kuali.kpme.core.util.HrContext.getPrincipalId().equals(principalId))) { org.kuali.rice.kew.api.note.Note.Builder builder = Note.Builder.create(documentId, principalId); builder.setCreateDate(new org.kuali.kpme.tklm.leave.block.service.DateTime()); builder.setText(note); org.kuali.rice.kew.api.KewApiServiceLocator.getNoteService().createNote(builder.build()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/821/buggy-version/tk-lm.impl.src.main.java.org.kuali.kpme.tklm.leave.block.service.LeaveBlockServiceImpl.java", "BodyUseAPI": ["Note.Builder.create(java.lang.String,java.lang.String)", "org.kuali.kpme.core.util.HrContext.getPrincipalId().equals(java.lang.String)"], "Fixed commit": "dfc6866dda252617b15fa757ba6dcf25b18b1371", "Url": "https://api.github.com/repos/kuali/kpme", "Date": "2014-07-30T11:03:58Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (downloadStrings == null) { android.util.Log.e(com.wbrenna.gtfsoffline.UpdateActivity.TAG, \"No files returned by downloadFolder.listFiles\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3523/buggy-version/GTFSOffline.src.com.wbrenna.gtfsoffline.UpdateActivity.java", "BodyUseAPI": [], "Fixed commit": "32a2543aa7b7eb9987da588324759e6f346609fb", "Url": "https://api.github.com/repos/wbrenna/GTFSOffline", "Date": "2016-01-24T00:18:58Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled) { stream.printf(\"%s finished in %.3f ms\\n\", operation, (((java.lang.System.nanoTime()) - (startTime)) / 1000000.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8454/buggy-version/src.org.javarosa.core.util.CodeTimer.java", "BodyUseAPI": [], "Fixed commit": "ddfcc3e3e9266ce2269c3a940e16284fd0adf03f", "Url": "https://api.github.com/repos/mdudzinski/javarosa", "Date": "2017-12-12T02:53:35Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pointValue > nodeValue) { node.right = put(node.right, point, node); }else { if (node.value.equals(point)) { node.value = point; }else { node.right = put(node.right, point, node); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6803/buggy-version/algo.src.main.java.KdTree.java", "BodyUseAPI": [], "Fixed commit": "02dcfc2918cdc9b90c7579f91f176f4aa4620746", "Url": "https://api.github.com/repos/baboune/algo", "Date": "2013-10-07T11:53:51Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cdoIndex > (-1)) { tmpCDO = new com.cdoframework.cdolib.data.cdo.CDO(); list.add(tmpCDO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3022/buggy-version/CDOLib.src.main.java.com.cdoframework.cdolib.data.cdo.ParseCDOBuffer.java", "BodyUseAPI": [], "Fixed commit": "740993a20529e23d05b1b24209ef599f45705487", "Url": "https://api.github.com/repos/KenelLiu/CDO", "Date": "2017-02-22T01:48:51Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chess.controller.GameController.containerForTheGame.getFunctionalBoard()[(startY - 1)][(startX - 1)]) == null) { return chess.controller.ChessHelp.pathIsClear(nextSquareOnPath, destination); }else if ((chess.controller.GameController.containerForTheGame.getFunctionalBoard()[(destY - 1)][(destX - 1)]) == null) { return chess.controller.ChessHelp.pathIsClear(start, squareBeforeDest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9244/buggy-version/chess.controller.ChessHelp.java", "BodyUseAPI": ["chess.controller.ChessHelp.getFunctionalBoard()"], "Fixed commit": "d24f88afb22d93c132474b1085cf8756ec67a377", "Url": "https://api.github.com/repos/stevemasta34/MyChess", "Date": "2014-06-03T19:26:07Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typeMixin.getType()) != null) { applyType(typeMixin.getType().getCssName(), getElement()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8456/buggy-version/gwt-material.src.main.java.gwt.material.design.client.ui.MaterialNavBar.java", "BodyUseAPI": ["gwt.material.design.client.ui.MaterialNavBar.applyType(typeMixin.getType().getCssName(),getElement())", "typeMixin.getType().getCssName()", "gwt.material.design.client.base.mixin.CssTypeMixin<gwt.material.design.client.ui.NavBarType, gwt.material.design.client.ui.MaterialNavBar>.getType()"], "Fixed commit": "0043804371a290ea24151b43647ba79f6893c590", "Url": "https://api.github.com/repos/gilberto-torrezan/gwt-material", "Date": "2015-12-30T08:25:59Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((req.getParameter(\"agentId\")) != null) { agentId = req.getParameter(\"agentId\"); }else { agentId = agentId2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/767/buggy-version/src.main.java.com.quix.aia.cn.imo.mapper.EopAttendanceMaintenance.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Fixed commit": "9bbcc4244050be7a236025523faa874a63654e4f", "Url": "https://api.github.com/repos/aiacncitaps/ERecruitCMS", "Date": "2016-03-21T07:41:51Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (values == null) { bindArgs = new java.lang.Object[0]; return; }else { bindArgs = values.toArray(new java.lang.Object[values.size()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5891/buggy-version/androidlibrary_lib.src.main.java.org.opendatakit.database.queries.BindArgs.java", "BodyUseAPI": [], "Fixed commit": "e1b8beed5c22e1ec433562e08afe8a1268297ce4", "Url": "https://api.github.com/repos/opendatakit/androidlibrary", "Date": "2017-06-20T17:12:00Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Nonplayer.getHealth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (otherHealth < 0) { otherHealth = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1336/buggy-version/Stuyablo.2.groupTEEV.Player.java", "BodyUseAPI": [], "Fixed commit": "e0fb2dd44c72e9086bdc229da9763ca9554dbf27", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-06T04:06:05Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((health) < 0) { health = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1336/buggy-version/Stuyablo.2.groupTEEV.Player.java", "BodyUseAPI": [], "Fixed commit": "e0fb2dd44c72e9086bdc229da9763ca9554dbf27", "Url": "https://api.github.com/repos/stuycs-apcs-z/classwork", "Date": "2013-11-06T04:06:05Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start == null) || (end == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5970/buggy-version/src.main.java.pathfinding.ConcreteGraph.java", "BodyUseAPI": [], "Fixed commit": "724f675156b6db964ba7c4bdf2aa9e803e2f0c95", "Url": "https://api.github.com/repos/CS3733-TeamAlpha/Project", "Date": "2017-02-04T22:52:23Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["functionBody.getStart().getStartIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (functionStartIndex < functionEndIndex) { org.netbeans.modules.csl.api.OffsetRange functionLocation = new org.netbeans.modules.csl.api.OffsetRange(functionStartIndex, functionEndIndex); result.add(functionLocation); return aggregateResult(result, visitChildren(functionBody)); }else { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3527/buggy-version/src.main.java.com.github.drrb.rust.netbeans.RustFoldManager.java", "BodyUseAPI": [], "Fixed commit": "9900f1bd73cbeb6976f1b2aacceece16db50355d", "Url": "https://api.github.com/repos/drrb/rust-netbeans", "Date": "2013-08-20T08:44:38Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.edu.unifei.cookyourself.dao.SearchRecordsDAO.findMostSearchRecs(userSession.getUser())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (ingredientsToSearch == null) { result.redirectTo(br.edu.unifei.cookyourself.controller.IndexController.class).destaques(); }else { result.redirectTo(br.edu.unifei.cookyourself.controller.IndexController.class).search(ingredientsToSearch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3129/buggy-version/cookyourself.src.main.java.br.edu.unifei.cookyourself.controller.IndexController.java", "BodyUseAPI": ["result.redirectTo(br.edu.unifei.cookyourself.controller.IndexController.class).search(java.util.List<java.lang.String>)"], "Fixed commit": "3f632e1008d035b654570ae97318229b95332d6f", "Url": "https://api.github.com/repos/gnmfcastro/cookyourself", "Date": "2014-05-26T16:33:19Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((body.getContactList()) != null) { if (org.lwjgl.input.Keyboard.isKeyDown(Keyboard.KEY_LEFT)) moveLeft(); if (org.lwjgl.input.Keyboard.isKeyDown(Keyboard.KEY_RIGHT)) moveRight(); if (org.lwjgl.input.Keyboard.isKeyDown(Keyboard.KEY_SPACE)) jump(); if (!(((org.lwjgl.input.Keyboard.isKeyDown(Keyboard.KEY_SPACE)) || (org.lwjgl.input.Keyboard.isKeyDown(Keyboard.KEY_RIGHT))) || (org.lwjgl.input.Keyboard.isKeyDown(Keyboard.KEY_LEFT)))) body.setLinearVelocity(new org.jbox2d.common.Vec2(0, body.getLinearVelocity().y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4621/buggy-version/2dShooter.src.ng.tim.game.entities.Player.java", "BodyUseAPI": ["org.jbox2d.dynamics.Body.getLinearVelocity()", "org.jbox2d.dynamics.Body.setLinearVelocity(org.jbox2d.common.Vec2)"], "Fixed commit": "30837cb0f15bb59dc18c6a8217cb5b9c7e322bae", "Url": "https://api.github.com/repos/hawmalt/Java2DGame_CS_rap", "Date": "2013-10-27T15:41:14Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (response != null) { if (response.has(\"errorCode\")) { handler.onLEServiceFailure(response); }else { handler.onLEServiceSuccess(response); } }else { try { org.json.JSONObject errObject = new org.json.JSONObject(); errObject.put(\"errorCode\", \"Null or Empty Response from Policy Checker Server\"); handler.onLEServiceFailure(errObject); } catch (org.json.JSONException ex) { android.util.Log.e(com.janrain.android.logineligibility.LEService.LOG_TAG, \"Error Creating checkLogin Error JSON\"); throw new com.janrain.android.logineligibility.LEServiceException(\"Error Creating checkLogin Error JSON\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2501/buggy-version/LoginEligibility.library.src.main.java.com.janrain.android.logineligibility.LEService.java", "BodyUseAPI": ["com.janrain.android.logineligibility.LEService.LoginEligibilityResultHandler.onLEServiceSuccess(org.json.JSONObject)", "com.janrain.android.logineligibility.LEService.LoginEligibilityResultHandler.onLEServiceFailure(org.json.JSONObject)", "org.json.JSONObject.has(java.lang.String)"], "Fixed commit": "c071f6f9da827d1714a17d3fee54de810366ec4b", "Url": "https://api.github.com/repos/janrain/LoginEligibility.Android", "Date": "2017-02-27T15:29:57Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(result.toString()))) { policyCheckerData = new org.json.JSONObject(result.toString()); }else { policyCheckerData.put(\"errorCode\", \"Null or Empty Response from Policy Checker Server\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2501/buggy-version/LoginEligibility.library.src.main.java.com.janrain.android.logineligibility.PolicyCheckerTask.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()"], "Fixed commit": "c071f6f9da827d1714a17d3fee54de810366ec4b", "Url": "https://api.github.com/repos/janrain/LoginEligibility.Android", "Date": "2017-02-27T15:29:57Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTagShow) { onFinish(author_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2435/buggy-version/samlib-android.src.main.java.monakhv.android.samlib.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4609b4cc30ddcd7cc3654a5214f456f1ef1498fa", "Url": "https://api.github.com/repos/monakhv/samlib-Info", "Date": "2015-04-10T12:22:06Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sOther.indexOf(\".\")) != (-1)) { number = java.lang.Double.parseDouble(sOther); }else { java.text.NumberFormat nf = java.text.NumberFormat.getInstance(); number = nf.parse(((java.lang.String) (sOther))).doubleValue(); return number; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6265/buggy-version/com.opendoorlogistics.core.src.com.opendoorlogistics.core.tables.ColumnValueProcessor.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "8e0b82dca8203f32162405ad88ca2f71d8302ea8", "Url": "https://api.github.com/repos/PGWelch/com.opendoorlogistics", "Date": "2015-02-12T10:16:08Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.ei.opensrp.Context.context) == null) { org.ei.opensrp.Context.context = new org.ei.opensrp.Context(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7631/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.Context.java", "BodyUseAPI": [], "Fixed commit": "fa8a3e7f7d71dfd8d268e6b8ce96a891b4ba5ee6", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2016-01-20T15:14:25Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.ei.opensrp.indonesia.Context.context) == null) { org.ei.opensrp.indonesia.Context.context = new org.ei.opensrp.indonesia.Context(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7631/buggy-version/opensrp-indonesia.src.main.java.org.ei.opensrp.indonesia.Context.java", "BodyUseAPI": [], "Fixed commit": "fa8a3e7f7d71dfd8d268e6b8ce96a891b4ba5ee6", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2016-01-20T15:14:25Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5360/buggy-version/src.main.java.com.spotify.docker.client.messages.RegistryConfigs.java", "BodyUseAPI": [], "Fixed commit": "c5c2236b478d0a53214bd9e93206180c0bdd2fae", "Url": "https://api.github.com/repos/spotify/docker-client", "Date": "2017-05-22T20:52:54Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getLog().isDebugEnabled()) { for (java.lang.String directory : getSourceDirectories()) { getLog().debug(directory); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1552/buggy-version/src.main.java.org.scala_tools.maven.ScalaCompilerSupport.java", "BodyUseAPI": [], "Fixed commit": "5b9e2650157b3465c0f68393227d934a90653502", "Url": "https://api.github.com/repos/abailly/maven-scala-plugin", "Date": "2009-01-14T20:57:38Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.droptilllate.cloudprovider.api.IFileSystemCom.encryptFile(java.util.List<ch.droptilllate.application.model.EncryptedFileDob>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(result.getEncryptedFileListError().isEmpty())) { database.deleteElement(result.getEncryptedFileListError()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5589/buggy-version/ch.droptilllate.application.src.ch.droptilllate.application.controller.ViewController.java", "BodyUseAPI": ["ch.droptilllate.database.api.IDatabase.deleteElement(result.getEncryptedFileListError())", "ch.droptilllate.application.info.CRUDCryptedFileInfo.getEncryptedFileListError()"], "Fixed commit": "87dd58ce82edf86d87ffa72fb99ddf71b47560ea", "Url": "https://api.github.com/repos/dev131/DropTillLate_Application", "Date": "2014-04-30T02:12:56Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitbucket.ucchy.sl.LockDataManager.getLockDataByArmorStand(org.bukkit.entity.ArmorStand)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((ld == null) && (!(event.getPlayer().hasPermission(((StandLock.PERMISSION_ENTITY) + \".interact\"))))) { event.getPlayer().sendMessage(org.bitbucket.ucchy.sl.Messages.get(\"PermissionDeniedInteract\")); event.setCancelled(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2926/buggy-version/src.main.java.org.bitbucket.ucchy.sl.StandLockListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerArmorStandManipulateEvent.getPlayer()", "org.bukkit.event.player.PlayerArmorStandManipulateEvent.setCancelled(boolean)", "event.getPlayer().sendMessage(org.bitbucket.ucchy.sl.Messages.get(\"PermissionDeniedInteract\"))"], "Fixed commit": "0952e507bb7443d490c9c1285add2de2f6c35cf2", "Url": "https://api.github.com/repos/ucchyocean/StandLock", "Date": "2015-12-28T09:01:47Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit.RetrofitError.getResponse()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((r == null) && ((cause.getCause()) instanceof java.net.ConnectException)) { return new org.openlmis.core.exceptions.NetWorkException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1525/buggy-version/app.src.main.java.org.openlmis.core.network.LMISRestManager.java", "BodyUseAPI": [], "Fixed commit": "5b3c32b4c55d53e6725ec458b08ac5ccb1af77f3", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-01-05T06:46:18Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.getName()) == \"D\") firstFit.removeProcess(\"D\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1871/buggy-version/src.com.company.DynamicMemory.java", "BodyUseAPI": [], "Fixed commit": "901d5c9f2f8c2c18ea216839a109143f858e5cd4", "Url": "https://api.github.com/repos/ethanbin/Memory-Simulation", "Date": "2017-12-06T21:23:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContent.getDeleteIntent()) != null) { setDeleteContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5084/buggy-version/src.open.java.notification.builder.NotificationBuilder.java", "BodyUseAPI": [], "Fixed commit": "d5e630bfd9163a5d92e5f8e0b7057a918331b7ea", "Url": "https://api.github.com/repos/ssumit/notifications", "Date": "2013-10-08T10:06:33Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerName) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6649/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.FloatingBlockBehavior.java", "BodyUseAPI": [], "Fixed commit": "d53066371d30612c8d6f4330c574afe5072ee024", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2016-10-11T01:05:42Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxY < 100) { roundUp = ((((int) (maxY)) + 99) / 100) * 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4736/buggy-version/app.src.main.java.com.mushroomrobot.finwiz.budget.DisplayBudgetFragment.java", "BodyUseAPI": [], "Fixed commit": "c4b88129b6a355ec96630afe9b45db202336dd02", "Url": "https://api.github.com/repos/yaynick/Everything", "Date": "2015-05-26T20:57:02Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (roundUp == 0) { roundUp = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4736/buggy-version/app.src.main.java.com.mushroomrobot.finwiz.budget.DisplayBudgetFragment.java", "BodyUseAPI": [], "Fixed commit": "c4b88129b6a355ec96630afe9b45db202336dd02", "Url": "https://api.github.com/repos/yaynick/Everything", "Date": "2015-05-26T20:57:02Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((seg.jUCMNav.model.util.MetadataHelper.getMetaDataObj(link, \"FeatureModel\")) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4047/buggy-version/src.seg.jUCMNav.strategies.util.IntentionalElementUtil.java", "BodyUseAPI": [], "Fixed commit": "00b2f1524a62d7d4bac5bf5cccd497a1aff8461a", "Url": "https://api.github.com/repos/headyin/seg.jUCMNav", "Date": "2014-03-30T16:06:57Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (returnSuperClass) { override = ((((\"{\" + statement) + \"return super.\") + (method.getName())) + \"($$);\") + \"}\"; }else { override = ((((\"{\" + statement) + \"super.\") + (method.getName())) + \"($$);\") + \"}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4970/buggy-version/easymvp-weaver.src.main.java.easymvp.weaver.ViewDelegateBinder.java", "BodyUseAPI": [], "Fixed commit": "616986dce70699b297395580f2388e7619004004", "Url": "https://api.github.com/repos/6thsolution/EasyMVP", "Date": "2017-05-10T13:47:16Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCascadeDetach()) != null) { sb.append(\"javax.persistence.CascadeType.DETACH\"); addComma = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6377/buggy-version/generator.org.eclipse.emf.texo.orm.src.org.eclipse.emf.texo.orm.annotations.model.orm.impl.CascadeTypeImpl.java", "BodyUseAPI": [], "Fixed commit": "43dc2bac2647fd9af9441e981de584ae606515d3", "Url": "https://api.github.com/repos/eclipse/emf.texo", "Date": "2015-08-03T14:24:21Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fedorahosted.tennera.jgettext.Catalog.locateMessage(firstMessage.getMsgctxt(),firstMessage.getMsgid())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((firstMessage.isPlural()) != (secondMessage.isPlural())) || ((firstMessage.isPlural()) && (!(firstMessage.getMsgidPlural().equals(secondMessage.getMsgidPlural()))))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5505/buggy-version/core.src.main.java.de.cubeisland.messageextractor.format.gettext.PlaintextGettextCatalogFormat.java", "BodyUseAPI": [], "Fixed commit": "5d5a4e7fc8a1695d54b1060a7b46fa04ccd6eb69", "Url": "https://api.github.com/repos/CubeEngineDev/messageextractor", "Date": "2014-03-31T16:56:24Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fedorahosted.tennera.jgettext.Catalog.locateMessage(message.getMsgctxt(),message.getMsgid())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((message.isPlural()) && (!(message.getMsgidPlural().equals(obsoleteMessage.getMsgidPlural())))) { message.setPrevMsgidPlural(obsoleteMessage.getMsgidPlural()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5505/buggy-version/core.src.main.java.de.cubeisland.messageextractor.format.gettext.PlaintextGettextCatalogFormat.java", "BodyUseAPI": ["org.fedorahosted.tennera.jgettext.Message.setPrevMsgidPlural(obsoleteMessage.getMsgidPlural())", "org.fedorahosted.tennera.jgettext.Message.getMsgidPlural()"], "Fixed commit": "5d5a4e7fc8a1695d54b1060a7b46fa04ccd6eb69", "Url": "https://api.github.com/repos/CubeEngineDev/messageextractor", "Date": "2014-03-31T16:56:24Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((branchViews) != null) && (!(branchViews.isEmpty()))) { for (java.util.Map.Entry<java.lang.Long, java.lang.String> entry : branchViews.entrySet()) { if (entry.getValue().equals(view)) { viewId = org.eclipse.osee.framework.core.data.ArtifactId.valueOf(entry.getKey()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/421/buggy-version/plugins.org.eclipse.osee.define.src.org.eclipse.osee.define.blam.operation.PublishWithSpecifiedTemplate.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, java.lang.String>.entrySet()"], "Fixed commit": "3e0364c060b4b366217dd2b39e9f3c270f8732c0", "Url": "https://api.github.com/repos/eclipse/osee", "Date": "2017-08-03T16:15:39Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hudson.Util.fixEmpty(region)) == null) { region = DEFAULT_EC2_HOST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5078/buggy-version/src.main.java.hudson.plugins.ec2.AmazonEC2Cloud.java", "BodyUseAPI": [], "Fixed commit": "954f599463dac1b5a4c52f8256c7188e12691d4d", "Url": "https://api.github.com/repos/bkmeneguello/ec2-plugin", "Date": "2014-09-12T16:29:19Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_Skew) == 0) { k = z1; }else { k = (2 / (_Skew)) * ((java.lang.Math.pow(((((z1 - ((_Skew) / 6.0)) * (_Skew)) / 6.0) + 1), 3)) - 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2977/buggy-version/src.Distributions.LogPearsonIII.java", "BodyUseAPI": ["java.lang.Math.pow(double,int)"], "Fixed commit": "947c66202255e7d8dcffe92a0647ff38fbbb95b9", "Url": "https://api.github.com/repos/USACE-MMC/statistics", "Date": "2015-12-10T21:22:18Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["testOutcome[i].get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (outcomeClass == 0) { if (prediction == 0) { (result.trueNegative)++; }else { (result.falsePositive)++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5298/buggy-version/src.de.jungblut.classification.Evaluator.java", "BodyUseAPI": [], "Fixed commit": "20e25592efc06148222686398ed508b098c5162c", "Url": "https://api.github.com/repos/thomasjungblut/thomasjungblut-common", "Date": "2013-01-01T20:17:45Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(feature.isPresent())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6387/buggy-version/api.src.main.java.org.phenotips.mendelianSearch.DefaultMendelianSearch.java", "BodyUseAPI": [], "Fixed commit": "fa56f8eaa8985fe815808c06b84c7f90f43ccecc", "Url": "https://api.github.com/repos/phenotips/mendelian-search-application", "Date": "2015-04-17T19:41:36Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (directory != null) { android.content.SharedPreferences.Editor edit = preferences.edit(); edit.putString(Constants.PREF_STORAGE_DIR, directory); edit.commit(); if (!(new java.io.File(directory).canWrite())) { android.widget.Toast.makeText(activity, R.string.warning_dir_not_writable, Toast.LENGTH_LONG).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8256/buggy-version/src.de.fun2code.android.piratebox.PreferencesActivity.java", "BodyUseAPI": ["java.io.File.canWrite()", "android.content.SharedPreferences.Editor.putString(Constants.PREF_STORAGE_DIR,java.lang.String)"], "Fixed commit": "6b149d344db16208cd87c7bc4d3b42c5a29fd4bb", "Url": "https://api.github.com/repos/joschi70/AndroidPirateBox", "Date": "2014-07-10T06:25:20Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (view != null) { id = view.getId(); if (id == (R.id.play_style_spinner)) playStyle = ((java.lang.String) (parent.getItemAtPosition(pos))); if (id == (R.id.self_rank_spinner)) skill = ((java.lang.String) (parent.getItemAtPosition(pos))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6057/buggy-version/SwoleMates.app.src.main.java.com.example.swolemates.EnterSportAbility.java", "BodyUseAPI": ["android.view.View.getId()"], "Fixed commit": "fc821ab616975501b78acd0987556d27a7fbfd26", "Url": "https://api.github.com/repos/NicoleMuzquiz/461L-Project", "Date": "2017-05-01T20:57:20Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (results.isEmpty()) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3558/buggy-version/query-logs-analysis.src.main.java.eu.europeana.querylog.learn.measure.Precision.java", "BodyUseAPI": [], "Fixed commit": "3e69c424e25dc1f236ea8f53860ebd7d4b4c8d87", "Url": "https://api.github.com/repos/diegoceccarelli/contrib", "Date": "2014-04-08T09:28:39Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (relevant.isEmpty()) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3558/buggy-version/query-logs-analysis.src.main.java.eu.europeana.querylog.learn.measure.Recall.java", "BodyUseAPI": [], "Fixed commit": "3e69c424e25dc1f236ea8f53860ebd7d4b4c8d87", "Url": "https://api.github.com/repos/diegoceccarelli/contrib", "Date": "2014-04-08T09:28:39Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authors == null) authors = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7401/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": [], "Fixed commit": "e4a8cc987e3a7568b5f2a6c15af68d53df50fbd0", "Url": "https://api.github.com/repos/smasini/Super-Duo", "Date": "2015-08-23T09:19:33Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authors == null) authors = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7401/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "e4a8cc987e3a7568b5f2a6c15af68d53df50fbd0", "Url": "https://api.github.com/repos/smasini/Super-Duo", "Date": "2015-08-23T09:19:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Robots.Tank.rc.getLocation().directionTo(Robots.MapLocation)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (enemyDir == null) { Robots.Tank.helpers.tryMove(enemyDir); }else { Robots.Tank.helpers.tryMove(Robots.Tank.helpers.randomDirection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2173/buggy-version/src.Robots.Tank.java", "BodyUseAPI": ["Helpers.HelperMethods.tryMove(Robots.Direction)"], "Fixed commit": "97dd2612b95c660b3ae89fed685c1f51bb6416be", "Url": "https://api.github.com/repos/austenke/battlecode2017", "Date": "2017-01-12T19:21:35Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sound.exists())) return identifier;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9232/buggy-version/src.main.java.com.zoonie.custominteractionsounds.sound.SoundPlayer.java", "BodyUseAPI": [], "Fixed commit": "c20bccd7110ae450c0dea4706de419ff5f06908a", "Url": "https://api.github.com/repos/zoonie/CustomInteractionSounds", "Date": "2015-03-04T02:56:16Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tokens.length) == 2) return tokens[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1109/buggy-version/xap-core.xap-datagrid.src.main.java.com.gigaspaces.internal.server.space.ZookeeperLastPrimaryHandler.java", "BodyUseAPI": [], "Fixed commit": "f14c550c213a87a8626d3a03da78ced7168cbee7", "Url": "https://api.github.com/repos/xap/xap", "Date": "2017-05-29T06:10:05Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gigaspaces.attribute_store.AttributeStore.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lastPrimary == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1109/buggy-version/xap-core.xap-datagrid.src.main.java.com.gigaspaces.internal.server.space.ZookeeperLastPrimaryHandler.java", "BodyUseAPI": [], "Fixed commit": "f14c550c213a87a8626d3a03da78ced7168cbee7", "Url": "https://api.github.com/repos/xap/xap", "Date": "2017-05-29T06:10:05Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) mMyLibraryAdapter.showHideDownloadStatus(pratilipi);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1107/buggy-version/app.src.main.java.com.pratilipi.mobile.android.homescreen.library.LibraryFragment.java", "BodyUseAPI": [], "Fixed commit": "8dd6d366530d7f2c8cf67af55647cb415c41a03a", "Url": "https://api.github.com/repos/Pratilipi/android", "Date": "2016-10-21T09:07:29Z"},
{"Line": "=>931", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (result != null) { result.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/869/buggy-version/source.net.yacy.http.servlets.YaCyDefaultServlet.java", "BodyUseAPI": ["net.yacy.cora.util.ByteBuffer.close()"], "Fixed commit": "34ca73d61b59b56a0654b9c948cdf597e1013c9e", "Url": "https://api.github.com/repos/yacy/yacy_search_server", "Date": "2017-10-16T17:47:18Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((verb == (verb.POST)) && (object == null)) { connection.addRequestProperty(\"Content-Length\", \"0\"); java.io.OutputStreamWriter osw = new java.io.OutputStreamWriter(connection.getOutputStream()); osw.write(\"\"); osw.flush(); osw.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6853/buggy-version/fi.cosky.sdk.API.java", "BodyUseAPI": [], "Fixed commit": "d5b0709495ad331e6d25719325800af77c51db81", "Url": "https://api.github.com/repos/nfleet/java-sdk", "Date": "2014-04-16T06:44:02Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((realm) != null) { io.realm.RealmResults<com.simopuve.model.PDVRow> all = realm.where(com.simopuve.model.PDVRow.class).equalTo(\"rowNumber\", position).findAll(); if (!(all.isEmpty())) { survey.getRows().clear(); io.realm.RealmList rows = survey.getRows(); rows.addAll(all); survey.setRows(rows); } adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9068/buggy-version/SiMoPuVe.app.src.main.java.com.simopuve.activity.PDVRowListActivity.java", "BodyUseAPI": [], "Fixed commit": "01a130d7e64abd397536b592d878c4a5f89495b4", "Url": "https://api.github.com/repos/aldoram5/simopuve", "Date": "2017-06-18T02:50:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNew) { title.append(\"Create \"); }else { title.append(\"Edit \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7603/buggy-version/src.main.java.org.sagebionetworks.web.client.widget.entity.EntityEditor.java", "BodyUseAPI": [], "Fixed commit": "906cc0712e9639f4153817a04ba3bfed4f5907bb", "Url": "https://api.github.com/repos/Sage-Bionetworks/SynapseWebClient", "Date": "2012-06-04T22:09:08Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.val.floorEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((entry != null) && (path.startsWith(entry.getKey()))) { return entry.getValue(); }else if ((defaultRoute) != null) { return defaultRoute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4102/buggy-version/src.main.java.net.talpidae.viceroy.proxy.ProxyConfig.java", "BodyUseAPI": ["lombok.val.getValue()"], "Fixed commit": "09462666b35d23e4acb47a68809face6689d881e", "Url": "https://api.github.com/repos/lyind/viceroy", "Date": "2017-05-15T06:31:04Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(skipListeners)) { for (net.parostroj.timetable.model.events.AttributesListener l : listeners) { l.attributeChanged(this, change); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5728/buggy-version/grafikon-model.src.main.java.net.parostroj.timetable.model.Attributes.java", "BodyUseAPI": [], "Fixed commit": "3247eba003f4538251860e63eb6822198782ec6e", "Url": "https://api.github.com/repos/jub77/grafikon", "Date": "2016-12-16T21:04:50Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tiles[row][col]) != (Tile.EMPTY)) { redPieces.put(pos, new CheckerPiece(pos, _tileWidth, GameBoard.RED_PIECE, tiles[row][col], this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1599/buggy-version/DraughtKings.src.GameBoard.java", "BodyUseAPI": ["java.util.HashMap<Location, GamePiece>.put(Location,CheckerPiece)"], "Fixed commit": "cec4e784a9a2f189cd564e4857b339cf8c39761f", "Url": "https://api.github.com/repos/jlbo/CS451-Checkers", "Date": "2017-03-12T20:32:35Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tiles[row][col]) != (Tile.EMPTY)) { blackPieces.put(pos, new CheckerPiece(pos, _tileWidth, GameBoard.BLACK_PIECE, tiles[row][col], this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1599/buggy-version/DraughtKings.src.GameBoard.java", "BodyUseAPI": ["java.util.HashMap<Location, GamePiece>.put(Location,CheckerPiece)"], "Fixed commit": "cec4e784a9a2f189cd564e4857b339cf8c39761f", "Url": "https://api.github.com/repos/jlbo/CS451-Checkers", "Date": "2017-03-12T20:32:35Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.mail.Message.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (msgContent instanceof javax.mail.Multipart) { javax.mail.Multipart multipart = ((javax.mail.Multipart) (msgContent)); for (int j = 0; j < (multipart.getCount()); j++) { javax.mail.BodyPart bodyPart = multipart.getBodyPart(j); java.lang.String disposition = bodyPart.getDisposition(); content = bodyPart.getContent().toString(); java.lang.System.out.println(content); content = content.replaceAll(\"</span>\", \"\\n\"); content = content.replaceAll(\"<div>\", \"\\n\"); content = content.replaceAll(\"</div>\", \"\\n\"); content = content.replaceAll(\"\\\\<[^>]*>\", \"\"); content += \"\\n\"; } }else content = message.getContent().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8418/buggy-version/src.gess.EmailConnectionService.java", "BodyUseAPI": [], "Fixed commit": "2b8cc173f5d87734b9d9e229316bb56d998db1b1", "Url": "https://api.github.com/repos/edmilsonrobson/GESS", "Date": "2016-12-15T17:03:46Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.canJumpTo()) { try { mainWindow.getCalendarPanel().selection(event.targetTask); } catch (seedu.address.commons.exceptions.CalendarUnsyncException e) { seedu.address.ui.UiManager.logger.severe(seedu.address.commons.util.StringUtil.getDetails(e)); showFatalErrorDialogAndShutdown(\"Fatal error unsycn calendar:\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/240/buggy-version/src.main.java.seedu.address.ui.UiManager.java", "BodyUseAPI": ["mainWindow.getCalendarPanel().selection(event.targetTask)"], "Fixed commit": "1f43b5a9e81f1c7d5995d41cbbe70cfba6eadb8f", "Url": "https://api.github.com/repos/CS2103JAN2017-W10-B4/main", "Date": "2017-03-31T08:08:06Z"},
{"Line": "=>685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.getRelations()) != null) { patient.setRelations(relationsJson); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3182/buggy-version/mci-api.src.main.java.org.sharedhealth.mci.web.infrastructure.persistence.PatientRepository.java", "BodyUseAPI": [], "Fixed commit": "a2ab5b9d0f524e33c2146c52f7e384dd29a367ef", "Url": "https://api.github.com/repos/SharedHealth/MCI-Resigtry", "Date": "2014-11-02T05:44:27Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(my_msg.getText().toString().equals(\"\"))) { temp_message = my_msg.getText().toString(); my_msg.setText(\"\"); new com.example.weunion.Msgbox.AttemptPost().execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9054/buggy-version/WeUnion.src.com.example.weunion.Msgbox.java", "BodyUseAPI": ["my_msg.getText().toString()", "android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.getText()"], "Fixed commit": "1cbe291283d7fae04c463f6a0c777c4af61629b1", "Url": "https://api.github.com/repos/ustcomp3111/comp3111project", "Date": "2014-04-23T16:05:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((id.getText().toString().length()) > 15) || ((pass.getText().toString().length()) > 15)) { android.widget.Toast.makeText(this, \"ID and Password are limited to 15 char only!\", Toast.LENGTH_LONG).show(); }else if (((id.getText().toString().length()) < 7) || ((pass.getText().toString().length()) < 7)) { android.widget.Toast.makeText(this, \"ID and Password should be longer than 6 char!\", Toast.LENGTH_LONG).show(); }else new com.example.weunion.Login.AttemptRegister().execute();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9054/buggy-version/WeUnion.src.com.example.weunion.Login.java", "BodyUseAPI": ["id.getText().toString().length()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "pass.getText().toString().length()", "pass.getText().toString()", "id.getText().toString()"], "Fixed commit": "1cbe291283d7fae04c463f6a0c777c4af61629b1", "Url": "https://api.github.com/repos/ustcomp3111/comp3111project", "Date": "2014-04-23T16:05:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.startsWith(endLine)) { return input.substring(((openCloseEndIndex(input)) + (com.devbugger.pagery.transform.fontmatter.OPEN_CLOSE.length())), input.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3886/buggy-version/src.main.java.com.devbugger.pagery.transform.fontmatter.TransformFontMatter.java", "BodyUseAPI": ["com.devbugger.pagery.transform.fontmatter.TransformFontMatter.openCloseEndIndex(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(((openCloseEndIndex(input)) + (com.devbugger.pagery.transform.fontmatter.OPEN_CLOSE.length())),int)"], "Fixed commit": "43a1381d439513c0e8238a33f3b988eae5a347fb", "Url": "https://api.github.com/repos/scav/pagery", "Date": "2016-07-20T23:17:04Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["queue.getSummaryList().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 0) { if (pauseWhenQueueEmpty) { this.state = STATE.WAITING_START; commandToBeProcessed = gda.commandqueue.FindableProcessorQueue.COMMAND.PAUSE; }else { this.state = STATE.WAITING_START; commandToBeProcessed = gda.commandqueue.FindableProcessorQueue.COMMAND.START; } }else { if ((skip) || (argState.equals(Command.STATE.COMPLETED))) { this.state = STATE.WAITING_START; commandToBeProcessed = gda.commandqueue.FindableProcessorQueue.COMMAND.START; skip = false; }else { this.state = STATE.WAITING_START; commandToBeProcessed = gda.commandqueue.FindableProcessorQueue.COMMAND.PAUSE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6936/buggy-version/uk.ac.gda.core.src.gda.commandqueue.FindableProcessorQueue.java", "BodyUseAPI": [], "Fixed commit": "c05708d4872988113647a74c5416ed07958cfc1f", "Url": "https://api.github.com/repos/openGDA/gda-core", "Date": "2014-10-07T16:01:06Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5849/buggy-version/app.src.main.java.it.unina.is2project.sensorgames.pong.GamePongTwoPlayer.java", "BodyUseAPI": [], "Fixed commit": "00cfe62fab216361f79e24710a22430ff7a83b0f", "Url": "https://api.github.com/repos/Androidiani/Sensor-Ball", "Date": "2015-04-03T14:50:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(containsHat(hat))) { hats.add(hat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1350/buggy-version/app.src.main.java.com.idgi.core.StudentUser.java", "BodyUseAPI": ["java.util.List<com.idgi.core.Hat>.add(com.idgi.core.Hat)"], "Fixed commit": "a2e95391b2a5456e9b132040aaed8fae6ff45533", "Url": "https://api.github.com/repos/elizaII/idgi", "Date": "2016-05-17T22:06:08Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results.getPeriod()) == 1) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1827/buggy-version/src.main.java.de.hska.centurion.util.OrderInwardCalculator.java", "BodyUseAPI": [], "Fixed commit": "966c702244b7c8fe40aae1b38541047f0cd79148", "Url": "https://api.github.com/repos/guan1013/ibsys2", "Date": "2015-06-15T15:54:05Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (RobotMap.shooterlimitswitch1.get()) { Robot.shooter.ballPickup(); edu.wpi.first.wpilibj.Timer.delay(0.1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9017/buggy-version/Dragonsfordayssss.src.org.usfirst.frc1332.Robot2016.commands.ballPickup.java", "BodyUseAPI": [], "Fixed commit": "81aebd6f967eee14b34e4544b16f2e62a68a8a5f", "Url": "https://api.github.com/repos/Swift1332/2016-RC", "Date": "2016-02-19T07:19:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((container.getComponentCount()) > 3) container.remove(authorPanel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3860/buggy-version/Universe.java", "BodyUseAPI": ["javax.swing.JPanel.remove(javax.swing.JPanel)"], "Fixed commit": "9ba856dcb357c59e1a35d8ec824a73e6ed64a09a", "Url": "https://api.github.com/repos/ttkimbal/CSE360Project1", "Date": "2017-09-02T00:55:39Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isBlank(r))) { ranges.add(new org.iplantc.de.server.IpRange(r)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7553/buggy-version/ui.de-webapp.src.main.java.org.iplantc.de.server.IpRanges.java", "BodyUseAPI": [], "Fixed commit": "889bdd71e22940efd7f6910d64ce8d92749bdde8", "Url": "https://api.github.com/repos/cyverse-archive/DE", "Date": "2016-07-06T01:21:03Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((station.getNumberOfStates()) == 0) { java.lang.System.out.println(\"empty states!!!!!!!!!!!!!!!!!!!!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2540/buggy-version/src.Evaluation.EvaluatorStation.java", "BodyUseAPI": [], "Fixed commit": "103cbbe15e4c7e9b83e48818790ecbafd28bed7e", "Url": "https://api.github.com/repos/amaral-daniel/Velib", "Date": "2017-12-14T19:58:41Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.google.firebase.auth.FirebaseAuth.getInstance().getUid()) != null) isUserRegistered(com.google.firebase.auth.FirebaseAuth.getInstance().getUid());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3351/buggy-version/app.src.main.java.in.avimarine.boatangels.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7bb59fda4767641a9186570189e241e40325c0d3", "Url": "https://api.github.com/repos/AviMarineInnovatons/BoatAngels", "Date": "2017-12-30T20:51:12Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jgit.lib.Repository.resolve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (treeId == null) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7535/buggy-version/src.main.java.com.gitblit.tickets.BranchTicketService.java", "BodyUseAPI": [], "Fixed commit": "d402f4ef29fc4b2b6a6376d03211b2941b77d72d", "Url": "https://api.github.com/repos/gitblit/gitblit", "Date": "2014-09-17T20:16:16Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cmd.trim().isEmpty()) throw new org.araqne.logdb.LogQueryParseException(\"empty-command\", (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8333/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.parser.QueryTokenizer.java", "BodyUseAPI": [], "Fixed commit": "7bd35748309e8fa885919e50f2c17b6c6a57088e", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-12-08T15:25:10Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cmd.trim().isEmpty()) throw new org.araqne.logdb.LogQueryParseException(\"empty-command\", (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8333/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.parser.QueryTokenizer.java", "BodyUseAPI": [], "Fixed commit": "7bd35748309e8fa885919e50f2c17b6c6a57088e", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-12-08T15:25:10Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showDebug) { mage.sendDebugMessage((((((((((org.bukkit.ChatColor.RED) + (com.elmakers.mine.bukkit.action.ActionHandler.debugIndent)) + \"Action \") + (org.bukkit.ChatColor.GOLD)) + (action.getAction().getClass().getSimpleName())) + (org.bukkit.ChatColor.WHITE)) + \": \") + (org.bukkit.ChatColor.AQUA)) + actionResult)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7545/buggy-version/src.main.java.com.elmakers.mine.bukkit.action.ActionHandler.java", "BodyUseAPI": [], "Fixed commit": "3819026cbb81e361d8e04977115bf7e6e8c75ccb", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2015-10-22T21:02:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (metric.containsKey(\"periods\")) { java.util.List<java.util.Map<java.lang.String, java.lang.Object>> periods = net.sf.json.JSONArray.fromObject(metric.get(\"periods\")); values[1] = periods.get(1).get(\"value\").toString(); }else { values[1] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6581/buggy-version/src.main.java.status.SonarProjStatImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "net.sf.json.JSONArray.fromObject(java.lang.Object)"], "Fixed commit": "9064c8cecd1320439cca666cb515223cd76295bc", "Url": "https://api.github.com/repos/GuardOfDawn/DevOps-environment", "Date": "2017-05-02T14:40:47Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t[0]) > 0) { return java.lang.String.format(\"%d days %02d:%02d:%02d\", t[0], t[1], t[2], t[3]); }else { return java.lang.String.format(\"%d day %02d:%02d:%02d\", t[0], t[1], t[2], t[3]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6581/buggy-version/src.main.java.tool.TimeTransformer.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,long,long,long,long)", "java.lang.String.format(java.lang.String,long,long,long,long)"], "Fixed commit": "9064c8cecd1320439cca666cb515223cd76295bc", "Url": "https://api.github.com/repos/GuardOfDawn/DevOps-environment", "Date": "2017-05-02T14:40:47Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tyr.disruptor.writer.StreamWriter.syncRound) < 1) { tyr.disruptor.writer.StreamWriter.syncRound = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/123/buggy-version/src.main.java.tyr.disruptor.writer.StreamWriter.java", "BodyUseAPI": [], "Fixed commit": "369d75397f141eb6f93013e0e65c5412c75aedcd", "Url": "https://api.github.com/repos/tongyingrui/tyr-jvm", "Date": "2017-04-01T10:32:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getExternalFilesDirs(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((files[i]) != null) { if ((files[i].getParentFile()) != null) { if ((files[i].getParentFile().getParentFile()) != null) { if ((files[i].getParentFile().getParentFile().getParentFile()) != null) { LocalConst.roots.add(new com.maxproj.android.dirplayer.LocalConst.RootsVirName(files[i].getParentFile().getParentFile().getParentFile().getParentFile(), ((getResources().getString(R.string.sys_sdcard)) + i))); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4746/buggy-version/src.com.maxproj.android.dirplayer.MyApplication.java", "BodyUseAPI": ["LocalConst.roots.add(com.maxproj.android.dirplayer.LocalConst.RootsVirName)", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()"], "Fixed commit": "2093597cb2059fec2ed290b145f72cc547e5b681", "Url": "https://api.github.com/repos/maxyou/DirPlayer", "Date": "2017-09-26T14:19:46Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3585/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "4ab85314cd50ed0b89c938e2e2a7f5d32b287f17", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (col < (scene.PartyCreationScene.NUM_PEOPLE)) { personNameTextFields[(col + 1)].setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8284/buggy-version/src.scene.PartyCreationScene.java", "BodyUseAPI": ["personNameTextFields[(col + 1)].setVisible(boolean)"], "Fixed commit": "d5fdcab9282c4f7431f36cae8f87f7677d3d85e6", "Url": "https://api.github.com/repos/Tanner/Oregon-Trail", "Date": "2011-10-05T23:02:47Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((streamSource.getPort()) != (org.gdms.data.stream.WMSStreamSource.DEFAULT_PORT)) { sb.append(\":\").append(streamSource.getPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2782/buggy-version/gdms.src.main.java.org.gdms.driver.wms.SimpleWMSDriver.java", "BodyUseAPI": ["org.gdms.data.stream.WMSStreamSource.getPort()", "java.lang.StringBuilder.append(streamSource.getPort())"], "Fixed commit": "e350e066e342631aaa683372007e18afbd5b6a40", "Url": "https://api.github.com/repos/agouge/orbisgis", "Date": "2013-07-05T13:07:30Z"},
{"Line": "=>1126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.karlmartens.ui.widget.Table.1.computeRow(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((rIndex < 0) || (rIndex >= (_itemCount))) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7478/buggy-version/net.karlmartens.ui.src.net.karlmartens.ui.widget.Table.java", "BodyUseAPI": [], "Fixed commit": "815d7d08b488fda761bf04b9de8390a32d90fa87", "Url": "https://api.github.com/repos/karlmartens/incubator", "Date": "2012-09-06T05:45:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { return text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3177/buggy-version/sample-spring-boot-kitchensink.src.main.java.com.example.bot.spring.SQLDatabaseEngine.java", "BodyUseAPI": [], "Fixed commit": "a0335fc37eaf3773b6b1a7f841f2f1e74cb61e78", "Url": "https://api.github.com/repos/MiG98789/Line-chatbot-for-COMP3111", "Date": "2017-09-25T15:57:12Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.getParent().getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (svrType == null) { svrType = node.getCategory().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5667/buggy-version/src.main.java.jp.co.tabocom.teratermstation.ui.EnvTabItem.java", "BodyUseAPI": [], "Fixed commit": "9716a13f692ad7061897e10ef107d0451c06353a", "Url": "https://api.github.com/repos/turbou/TeratermStation", "Date": "2015-11-06T06:29:53Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rx < 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2141/buggy-version/src.org.msk86.ygoroid.newcore.impl.layout.LinerLayout.java", "BodyUseAPI": [], "Fixed commit": "949bd63df234cfea2215456262d892fadc6e79f2", "Url": "https://api.github.com/repos/msk86/YGORoid", "Date": "2014-03-20T08:00:34Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((valueStr.length()) > 200) { valueStr = (valueStr.substring(0, java.lang.Math.min(200, valueStr.length()))) + \"...\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8941/buggy-version/client-ui.src.main.java.io.djigger.ui.connectiondialog.AttachConnectionParameters.java", "BodyUseAPI": ["java.lang.Math.min(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "01e30d5f3518ecb7be5c3570c2ea78450fd6bb54", "Url": "https://api.github.com/repos/exense/djigger", "Date": "2017-02-21T11:14:30Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (user == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2945/buggy-version/src.main.java.twitter.dao.user.UserDAOJdbcImpl.java", "BodyUseAPI": [], "Fixed commit": "01cde6b8a986a74e5b735be836f20f8b09f0481c", "Url": "https://api.github.com/repos/studentgroupCracker/LikeTwitter", "Date": "2017-04-11T12:27:41Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (user == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2945/buggy-version/src.main.java.twitter.dao.user.UserDAOJdbcImpl.java", "BodyUseAPI": [], "Fixed commit": "01cde6b8a986a74e5b735be836f20f8b09f0481c", "Url": "https://api.github.com/repos/studentgroupCracker/LikeTwitter", "Date": "2017-04-11T12:27:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((note) != null) { syncNote(note); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8460/buggy-version/src.main.java.dmh.kuebiko.view.NotePanel.java", "BodyUseAPI": [], "Fixed commit": "af1ab40e21215c15df26dcaca5a6bc0b2d61b6f1", "Url": "https://api.github.com/repos/dmhuff/Kuebiko", "Date": "2012-04-08T00:02:22Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(it.sephiroth.android.library.widget.AdapterView.isInEditMode())) { mAccessibilityManager = ((android.view.accessibility.AccessibilityManager) (it.sephiroth.android.library.widget.AdapterView.getContext().getSystemService(Context.ACCESSIBILITY_SERVICE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8066/buggy-version/library.src.it.sephiroth.android.library.widget.AdapterView.java", "BodyUseAPI": [], "Fixed commit": "ed5ca47aa654c9e0301ca50d02355ab1266f0e18", "Url": "https://api.github.com/repos/lassic/HorizontalVariableListView", "Date": "2014-02-19T09:39:40Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(RaftNode.state.State.equals(\"Follower\"))) { RaftNode.state = new state.Follower(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1997/buggy-version/raft-da.src.raft.ReceiveMessage.java", "BodyUseAPI": [], "Fixed commit": "9f74e812a4a3fe5370df68aa724421be72afa70c", "Url": "https://api.github.com/repos/dteh/raft-da", "Date": "2015-05-14T11:23:57Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.aksw.gerbil.evaluate.impl.ConfidenceBasedFMeasureCalculator<T>.generateMatchingCounts(java.util.List<java.util.List<T>>,java.util.List<java.util.List<T>>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((counts.truePositiveSums.length) > 0) && ((counts.falseNegativeSums.length) > 0)) && ((counts.falsePositiveSums.length) > 0)) { double threshold = calculateMicroFMeasure(counts, results); calculateMacroFMeasure(counts, results, threshold); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/724/buggy-version/src.main.java.org.aksw.gerbil.evaluate.impl.ConfidenceBasedFMeasureCalculator.java", "BodyUseAPI": ["org.aksw.gerbil.evaluate.impl.ConfidenceBasedFMeasureCalculator<T>.calculateMacroFMeasure(org.aksw.gerbil.matching.scored.ScoredEvaluationCountsArray,org.aksw.gerbil.evaluate.EvaluationResultContainer,double)", "org.aksw.gerbil.evaluate.impl.ConfidenceBasedFMeasureCalculator<T>.calculateMicroFMeasure(org.aksw.gerbil.matching.scored.ScoredEvaluationCountsArray,org.aksw.gerbil.evaluate.EvaluationResultContainer)"], "Fixed commit": "9df7970b6dc216d4856afb551787b8e1fbf84ae4", "Url": "https://api.github.com/repos/dice-group/gerbil", "Date": "2016-04-29T16:19:28Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.exists()) record.getValues().put(\"image_encoded\", imageFileToString(imagepath)); else record.getValues().put(\"image_encoded\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/677/buggy-version/src.apis.android.AndroidUploadApi.java", "BodyUseAPI": [], "Fixed commit": "2319a8ab9334e534296db621d1739f314bbbad54", "Url": "https://api.github.com/repos/jaspertomas/AttendanceAndroidClientApp", "Date": "2016-03-17T07:39:43Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewWidth) == 0) { viewInitialX = view.getX(); viewInitialY = view.getY(); delButtonInitialX = delButton.getX(); delButtonInitialY = delButton.getY(); viewWidth = view.getWidth(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/151/buggy-version/app.src.main.java.ru.yandex.yamblz.ui.other.OnSwipeTouchListener.java", "BodyUseAPI": [], "Fixed commit": "9c9e8e7264eb6423c2486d6bb8a2cc176a5ccb02", "Url": "https://api.github.com/repos/shmakova/touch-events", "Date": "2016-07-25T12:57:44Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) { g.clickedObject = obj; g.previousPosition = obj.getPos(); g.removeObjToTrash(obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5276/buggy-version/src.swampgod.MouseMovement.java", "BodyUseAPI": [], "Fixed commit": "fa593ca650d86ee7b53e6b1a83bb729444fb8186", "Url": "https://api.github.com/repos/seanclen/SwampGod", "Date": "2015-11-19T20:16:35Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getSerializable(RssService.ITEMS)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (items != null) { items.remove(0); items.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4522/buggy-version/app.src.main.java.news.demosisto.demosistonews.RssFragment.java", "BodyUseAPI": ["java.util.List<news.demosisto.demosistonews.RssItem>.remove(int)", "java.util.List<news.demosisto.demosistonews.RssItem>.remove(int)"], "Fixed commit": "3756a91edd2bdfb864fa09a01da871d2bba5c645", "Url": "https://api.github.com/repos/lenchan139/DemosistoNews", "Date": "2016-05-29T12:07:44Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((java.lang.Integer.parseInt(tables.getText())) < 0)) { main.newTables(java.lang.Integer.parseInt(tables.getText())); }else { javax.swing.JOptionPane.showMessageDialog(this, \"Number of tables must be positive.\"); success = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4788/buggy-version/src.snookerTables.Settings.java", "BodyUseAPI": ["snookerTables.Main.newTables(int)", "javax.swing.JTextField.getText()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "349271779939fd7f54516db424c277a8e5ac7c28", "Url": "https://api.github.com/repos/adam0292/snookerTables", "Date": "2013-06-01T13:32:36Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataSnapshot.getValue()) != null) { java.lang.String theUID = dataSnapshot.getValue().toString(); int index = facebookFriendIDs.indexOf(dataSnapshot.getKey()); friendFirebaseIDsOnly.set(index, theUID); friendFirebaseIDs.put(theUID, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2399/buggy-version/app.src.main.java.com.auton.bradley.myfe.LoginActivity.java", "BodyUseAPI": ["dataSnapshot.getValue().toString()", "com.google.firebase.database.DataSnapshot.getKey()", "com.google.firebase.database.DataSnapshot.getValue()", "java.util.ArrayList<java.lang.String>.indexOf(dataSnapshot.getKey())"], "Fixed commit": "27a852d8bcaa9b4b6850d77d9c5f2d14df12577e", "Url": "https://api.github.com/repos/bradleyfowler123/gecko", "Date": "2017-10-12T16:38:09Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startLineRemove.equals(\"last_mods\")) { noLast_Mods = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3653/buggy-version/ParadoxGameModManager.src.application.ListManager.java", "BodyUseAPI": [], "Fixed commit": "516bdd246c5074d97ff3bd0f2c158dd5e900dac4", "Url": "https://api.github.com/repos/ThibautSF/ParadoxosModManager", "Date": "2017-04-30T11:56:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.aesh.mterm.action.RunAction.getCommand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(command.isEmpty())) { java.lang.System.out.print(((aesh.getResult()) + (MtermUtil.INSTANCE.getPs1()))); }else { java.lang.System.out.print((\"\\n\" + (MtermUtil.INSTANCE.getPs1()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4876/buggy-version/src.main.java.org.jboss.aesh.mterm.action.RunAction.java", "BodyUseAPI": [], "Fixed commit": "ec5ddf45c81f449e5625810f0ce26075177483f8", "Url": "https://api.github.com/repos/aeshell/mterm", "Date": "2014-11-05T10:03:26Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.aesh.mterm.action.RunAction.getCommand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(command.isEmpty())) { aesh.run(command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4876/buggy-version/src.main.java.org.jboss.aesh.mterm.action.RunAction.java", "BodyUseAPI": ["org.jboss.aesh.mterm.action.RunAction.run(java.lang.String)"], "Fixed commit": "ec5ddf45c81f449e5625810f0ce26075177483f8", "Url": "https://api.github.com/repos/aeshell/mterm", "Date": "2014-11-05T10:03:26Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index.compareTo(gridFactor)) == 0) { startIndex = java.math.BigInteger.ONE; endIndex = totalSequenceCount; partitionRangeList.push(new java.math.BigInteger[]{ startIndex, endIndex }); }else { while ((index.compareTo(gridFactor)) < 1) { if ((index.compareTo(gridFactor)) == 0) { endIndex = totalSequenceCount; }else { endIndex = endIndex.add(partitionSize); } partitionRangeList.push(new java.math.BigInteger[]{ startIndex, endIndex }); startIndex = endIndex.add(java.math.BigInteger.ONE); index = index.add(java.math.BigInteger.ONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1286/buggy-version/utility.generateDistributionRange.java", "BodyUseAPI": ["java.math.BigInteger.add(java.math.BigInteger)", "java.math.BigInteger.compareTo(java.math.BigInteger)", "java.math.BigInteger.compareTo(java.math.BigInteger)"], "Fixed commit": "3325317376ecb0b7c50a8b74cd44bd208105cd6c", "Url": "https://api.github.com/repos/volkovasystems/burrow-app", "Date": "2015-03-01T08:56:32Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.enabled) { whitelist.addAll(this.stylings.keySet()); whitelist.addAll(this.subtexts.keySet()); for (data.api.Cluster c : this.clusters) { whitelist.addAll(c.getClasses()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5921/buggy-version/src.data.impl.UMLModifier.java", "BodyUseAPI": [], "Fixed commit": "66dce42fb1a2b975f6f4e6fa5c882b5bbd127b0d", "Url": "https://api.github.com/repos/mpersing/CSSE374-Final-Project", "Date": "2016-02-18T02:25:13Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tileEntity) != null) && ((slot.getSlotIndex()) < (ModularStorageContainer.SLOT_STORAGE))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2430/buggy-version/src.main.java.mcjty.rftools.blocks.storage.GuiModularStorage.java", "BodyUseAPI": [], "Fixed commit": "5c34efd8ecb53b5d348f9cf7c4b1deb9c6521097", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-05-20T12:01:56Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TopText) != null) { canvas.drawText(TopText, ((mWidth) / 2), (((mHeight) / 2) - ((mHeight) / 5)), TopTextPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7403/buggy-version/circleprogresslibrary.src.main.java.com.custom.sun.circleprogresslibrary.CircleProgressView.java", "BodyUseAPI": [], "Fixed commit": "d5d9237f53633b70684d563905a8df78efeea8d6", "Url": "https://api.github.com/repos/sunheihei/CircleProgress", "Date": "2017-08-21T07:58:11Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((BottomText) != null) { canvas.drawText(BottomText, ((mWidth) / 2), (((mHeight) / 2) + ((mHeight) / 5)), BottomTextPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7403/buggy-version/circleprogresslibrary.src.main.java.com.custom.sun.circleprogresslibrary.CircleProgressView.java", "BodyUseAPI": [], "Fixed commit": "d5d9237f53633b70684d563905a8df78efeea8d6", "Url": "https://api.github.com/repos/sunheihei/CircleProgress", "Date": "2017-08-21T07:58:11Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uri.contains(\"\\\\\")) { endslash2 = uri.lastIndexOf(\"\\\\\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2426/buggy-version/core.src.com.lostagain.nl.LocationGUI.EmailScreen.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "6d3ec01e0ec6e6daa64d59a6995d4ad124b885be", "Url": "https://api.github.com/repos/ThomasWrobel/MeshExplorerGDX", "Date": "2014-10-15T20:33:08Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uri.contains(\"/\")) { endslash = uri.lastIndexOf(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2426/buggy-version/core.src.com.lostagain.nl.LocationGUI.EmailScreen.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "6d3ec01e0ec6e6daa64d59a6995d4ad124b885be", "Url": "https://api.github.com/repos/ThomasWrobel/MeshExplorerGDX", "Date": "2014-10-15T20:33:08Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.darkflame.client.semantic.SSSNode.getPURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (uri.contains(\"#\")) { uri = uri.substring(0, uri.indexOf(\"#\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2426/buggy-version/core.src.com.lostagain.nl.LocationGUI.EmailScreen.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "6d3ec01e0ec6e6daa64d59a6995d4ad124b885be", "Url": "https://api.github.com/repos/ThomasWrobel/MeshExplorerGDX", "Date": "2014-10-15T20:33:08Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getContentResolver().query(RecappContract.CommentEntry.buildCommentPlaceUri(id),java.lang.String[],(((RecappContract.PlaceEntry.TABLE_NAME) + \".\") + (RecappContract.PlaceEntry._ID)),<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cursorRating.moveToFirst()) { newRating = cursorRating.getDouble(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1380/buggy-version/app.src.main.java.com.unal.tuapp.recapp.fragments.DetailFragment.java", "BodyUseAPI": ["android.database.Cursor.getDouble(int)"], "Fixed commit": "bceb07eb1e84845ea0416e988b69a78a7583957e", "Url": "https://api.github.com/repos/TuApp/Recapp", "Date": "2015-11-22T00:38:21Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((boost) == (Stats.HEALTH)) target.gainHealth(((cost) / 100)); else target.modifyStats(boost, ((cost) / 100));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3326/buggy-version/src.corruptiongame.character.Defense.java", "BodyUseAPI": [], "Fixed commit": "07e7d529bf8be3b4490e2c0448452ba07d912d3e", "Url": "https://api.github.com/repos/Andzura/Corruption-Game", "Date": "2016-01-20T00:38:36Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeStamp) == null) timeStamp = new java.util.GregorianCalendar();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2383/buggy-version/src.exchange.InternalMessage.java", "BodyUseAPI": [], "Fixed commit": "a44f493583e090bd4d5927bdcf84452a5bca891a", "Url": "https://api.github.com/repos/Polymehr/Messenger", "Date": "2015-07-06T16:16:39Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.simplon.kif.core.service.UserService.findOneByUsername(auth.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((id != null) && (((currentUser.getRole()) == admin) || (id.equals(currentUser.getId())))) { co.simplon.kif.core.model.User user = userService.findById(id); user.setDisable(); userService.addOrUpdate(user); if (id.equals(currentUser.getId())) new org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler().logout(request, response, auth); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6848/buggy-version/src.main.java.co.simplon.kif.web.UserController.java", "BodyUseAPI": ["java.lang.Integer.equals(currentUser.getId())", "co.simplon.kif.core.model.User.getId()", "co.simplon.kif.core.service.UserService.findById(java.lang.Integer)"], "Fixed commit": "cbe7572e8866128095e4fd796f8dec99b244ef1c", "Url": "https://api.github.com/repos/simplon-CQP-Java/kif", "Date": "2016-12-07T15:30:51Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isGameLoaded()) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5412/buggy-version/MainActivity.java", "BodyUseAPI": [], "Fixed commit": "53510ee6c9f49ee8d64713e558594870123fa80d", "Url": "https://api.github.com/repos/ralibi/dodombaan_src", "Date": "2013-04-24T04:24:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (questionsMap.containsKey(data[0])) { questionsMap.get(data[0]).addAll(answers); }else { questionsMap.put(data[0], answers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8634/buggy-version/src.main.java.edu.slcc.music.HomeController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "50a678f26f0164e980b6ce472073b38d34664378", "Url": "https://api.github.com/repos/SonOfLysander/SpringMVC-AngularJS-Music1010", "Date": "2014-04-21T09:38:03Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newItem) { item.getParent().getItems().add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3314/buggy-version/src.main.java.com.pj.magic.gui.tables.models.SalesRequisitionItemsTableModel.java", "BodyUseAPI": [], "Fixed commit": "57f6bb33a9baf44dc9f9b3f9a60a44a737a297c2", "Url": "https://api.github.com/repos/pendelhaven3/magic", "Date": "2014-12-07T08:26:23Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getIntExtra(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newBookId != (de.ph1b.audiobook.service.AudioPlayerService.bookId)) { de.ph1b.audiobook.service.AudioPlayerService.bookId = newBookId; de.ph1b.audiobook.service.AudioPlayerService.book = db.getBook(de.ph1b.audiobook.service.AudioPlayerService.bookId); if ((de.ph1b.audiobook.service.AudioPlayerService.book) != null) { if (de.ph1b.audiobook.BuildConfig.DEBUG) android.util.Log.d(de.ph1b.audiobook.service.AudioPlayerService.TAG, (\"book with id is != null:\" + (de.ph1b.audiobook.service.AudioPlayerService.bookId))); de.ph1b.audiobook.helper.MediaDetail[] allMedia = db.getMediaFromBook(de.ph1b.audiobook.service.AudioPlayerService.bookId); de.ph1b.audiobook.service.AudioPlayerService.playbackService.initBook(de.ph1b.audiobook.service.AudioPlayerService.book, allMedia); de.ph1b.audiobook.service.AudioPlayerService.playbackService.prepare(de.ph1b.audiobook.service.AudioPlayerService.book.getPosition()); }else if (de.ph1b.audiobook.BuildConfig.DEBUG) { android.util.Log.d(de.ph1b.audiobook.service.AudioPlayerService.TAG, ((\"Book of bookId \" + (de.ph1b.audiobook.service.AudioPlayerService.bookId)) + \" is null\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/452/buggy-version/src.main.java.de.ph1b.audiobook.service.AudioPlayerService.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "d809ba8e5097ff4d4aeb4132315fdbc39fb9f263", "Url": "https://api.github.com/repos/Ph1b/MaterialAudiobookPlayer", "Date": "2014-08-05T21:37:45Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTree.getSelectionPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selectionPath.getLastPathComponent()) instanceof org.orbisgis.view.toc.wrapper.RuleWrapper) { parent = selectionPath; }else { parent = selectionPath.getParentPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4325/buggy-version/orbisgis-view.src.main.java.org.orbisgis.view.toc.actions.cui.LegendTree.java", "BodyUseAPI": ["javax.swing.tree.TreePath.getParentPath()"], "Fixed commit": "81ae47bb8207fe1ed5e2639af26d1d336ba87a3f", "Url": "https://api.github.com/repos/agueganno/orbisgis", "Date": "2013-06-19T13:11:18Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nSigs.size()) > 0) { signatures.add(nSigs.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1198/buggy-version/grok.src.main.java.com.redygest.redundancy.similarity.score.NearDupSimScore.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.add(java.lang.Integer)"], "Fixed commit": "08116ce5a7365219736336a19483d3d81e5a26cb", "Url": "https://api.github.com/repos/semanticvoid/reDygest", "Date": "2012-03-12T03:53:34Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (randomNumber == 3) java.lang.System.out.println(((\"Rando choses\" + (Roshambo.SCISSORS)) + \".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3898/buggy-version/Player2.java", "BodyUseAPI": [], "Fixed commit": "b7cb2b14ccf8f035cbb28e2fa1b41c764b85c358", "Url": "https://api.github.com/repos/Prizzlesticks/RockPaperScissors", "Date": "2016-11-06T18:31:17Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (randomNumber == 1) java.lang.System.out.println(((\"Rando choses\" + (Roshambo.ROCK)) + \".\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3898/buggy-version/Player2.java", "BodyUseAPI": [], "Fixed commit": "b7cb2b14ccf8f035cbb28e2fa1b41c764b85c358", "Url": "https://api.github.com/repos/Prizzlesticks/RockPaperScissors", "Date": "2016-11-06T18:31:17Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(element.isEmpty())) { readable.add(converter.DatabaseToHTMLConverter.convertToHTML(element)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8850/buggy-version/src.java.helper.DragAndDropWrapper.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(converter.DatabaseToHTMLConverter.convertToHTML(element))", "converter.DatabaseToHTMLConverter.convertToHTML(java.lang.String)"], "Fixed commit": "87997ae9a58da5dd733f20fef9beb255d109cd38", "Url": "https://api.github.com/repos/JValck/Chemiebox", "Date": "2015-08-08T14:36:01Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(element.isEmpty())) { readable.add(converter.DatabaseToHTMLConverter.convertToHTML(element)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8850/buggy-version/src.java.helper.DragAndDropWrapper.java", "BodyUseAPI": ["converter.DatabaseToHTMLConverter.convertToHTML(java.lang.String)", "java.util.List<java.lang.String>.add(converter.DatabaseToHTMLConverter.convertToHTML(element))"], "Fixed commit": "87997ae9a58da5dd733f20fef9beb255d109cd38", "Url": "https://api.github.com/repos/JValck/Chemiebox", "Date": "2015-08-08T14:36:01Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((api == (Api.Keywords)) && ((extraParams.get(\"language\")) != null)) && ((extraParams.get(\"language\")) != \"english\")) { version = \"1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6238/buggy-version/src.io.indico.api.ApiClient.java", "BodyUseAPI": [], "Fixed commit": "5111c08e7983e5b275b0353081fca1d9a833339e", "Url": "https://api.github.com/repos/IndicoDataSolutions/IndicoIo-Java", "Date": "2016-03-07T19:20:20Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endCount) == (gameClients.size())) { setCurrentPlayerID(); }else { (endCount)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6508/buggy-version/src.Networking.Server.java", "BodyUseAPI": [], "Fixed commit": "9c1343b56071abd97908b195106d53eba8cab518", "Url": "https://api.github.com/repos/slivka-/JavaHOMMIII", "Date": "2016-02-11T16:06:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (effectMultiplier < 0) { healableEntities.get(index).attackEntityFrom(DamageSource.magic, ((int) ((-1) * effectMultiplier))); }else { healableEntities.get(index).heal(((int) (1 * effectMultiplier))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4208/buggy-version/inevera_common.com.ggollmer.inevera.greatward.attribute.GreatwardAttributeHealth.java", "BodyUseAPI": ["healableEntities.get(index).heal(float)", "healableEntities.get(index).attackEntityFrom(DamageSource.magic,float)"], "Fixed commit": "0cf783ef2f53348b3658b03146d77eae97074293", "Url": "https://api.github.com/repos/Gomer3261/IneveraCraft", "Date": "2013-05-28T17:43:24Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (quantity > 0) { foodList.add(new com.example.sextoncalculator.FoodItem(name, price, quantity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/325/buggy-version/SextonCalculator.src.com.example.sextoncalculator.BrowseActivity.java", "BodyUseAPI": ["java.util.List<com.example.sextoncalculator.FoodItem>.add(com.example.sextoncalculator.FoodItem)"], "Fixed commit": "af2fed2961a95d62d64f3bb7ea006e2aa7fca386", "Url": "https://api.github.com/repos/TeamSuperion/TeamSuperionSextonCalculator", "Date": "2012-11-10T02:03:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtrfp.trcl.obj.WorldObject.getTr()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tr.getGame().getCurrentMission().getOverworldSystem().isTunnelMode()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3094/buggy-version/src.main.java.org.jtrfp.trcl.beh.CollidesWithTerrain.java", "BodyUseAPI": [], "Fixed commit": "9f0e2193a60dde12bc02c42691088c12b2933c29", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-10-07T08:52:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(resizedItem.getStorage().equals(item.getStorage()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1390/buggy-version/util.src.main.java.com.psddev.dari.util.ImageResizeStorageItemListener.java", "BodyUseAPI": [], "Fixed commit": "154192a08aad9def416a1804d84b6e2985e4d986", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-10-31T11:37:38Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (section.equals(\"ideas\")) { bodyTextView.setText(ideaDetails.getBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2015/buggy-version/app.src.main.java.com.lbcinternal.sensemble.activities.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "4f4865ad4040d3468a58d207e879ea0cec4b07d3", "Url": "https://api.github.com/repos/AlexSheiko/Our-Croydon", "Date": "2015-03-30T20:59:57Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((discoverForm) != null) { discoverForm.refreshSearch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6901/buggy-version/dbproject.src.my.triviagame.gui.AddUpdate.java", "BodyUseAPI": [], "Fixed commit": "0711d6227db991e7e502f61c12f4a6a99b6b336b", "Url": "https://api.github.com/repos/grzn/dbc", "Date": "2012-06-16T13:21:28Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((resultCode == (android.app.Activity.RESULT_OK)) && (data != null)) { java.util.ArrayList<java.lang.String> matches = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS); useData(matches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8121/buggy-version/workspace.DrachenMobile.src.com.vsis.drachenmobile.sensor.SpeechSensor.java", "BodyUseAPI": ["android.content.Intent.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS)"], "Fixed commit": "cf86dd59e426455d9a428306dd6707b0cefa29a0", "Url": "https://api.github.com/repos/IllbMax/Drachen_Client", "Date": "2015-01-23T09:13:38Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loading) { if ((firstVisibleItem + visibleItemCount) < totalItemCount) { loading = false; } }else { if ((firstVisibleItem + visibleItemCount) >= totalItemCount) { new conor.navigationdrawer.DiscoverActivity.RestGetTask().execute(\"https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/random?limitLicense=false&number=10\"); loading = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/216/buggy-version/app.src.main.java.conor.navigationdrawer.DiscoverActivity.java", "BodyUseAPI": [], "Fixed commit": "677ff2af150faf2c9e266c4319ebfbf5beceeb84", "Url": "https://api.github.com/repos/mecolmg/MobileRecipEasy", "Date": "2016-12-02T16:32:55Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((images.length) > 0) { viewHolder.timelineImage.setImageBitmap(com.remember.alpha.adapters.CardViewAdapter.decodeUri(com.remember.alpha.adapters.CardViewAdapter.mContext, android.net.Uri.fromFile(images[image1]), 100)); viewHolder.timelineImage2.setImageBitmap(com.remember.alpha.adapters.CardViewAdapter.decodeUri(com.remember.alpha.adapters.CardViewAdapter.mContext, android.net.Uri.fromFile(images[image2]), 100)); viewHolder.timelineImage3.setImageBitmap(com.remember.alpha.adapters.CardViewAdapter.decodeUri(com.remember.alpha.adapters.CardViewAdapter.mContext, android.net.Uri.fromFile(images[image3]), 100)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4783/buggy-version/app.src.main.java.com.remember.alpha.adapters.CardViewAdapter.java", "BodyUseAPI": ["com.remember.alpha.adapters.CardViewAdapter.decodeUri(android.content.Context,android.net.Uri.fromFile(images[image1]),int)", "com.remember.alpha.adapters.SquareImageView.setImageBitmap(android.graphics.Bitmap)", "com.remember.alpha.adapters.CardViewAdapter.decodeUri(android.content.Context,android.net.Uri.fromFile(images[image2]),int)", "android.net.Uri.fromFile(java.io.File)", "android.net.Uri.fromFile(java.io.File)", "com.remember.alpha.adapters.SquareImageView.setImageBitmap(android.graphics.Bitmap)", "com.remember.alpha.adapters.CardViewAdapter.decodeUri(android.content.Context,android.net.Uri.fromFile(images[image3]),int)", "android.net.Uri.fromFile(java.io.File)", "com.remember.alpha.adapters.SquareImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "729353c943e6e40e5b33fce0c90f08d508b2131e", "Url": "https://api.github.com/repos/cnnr-adams/Remember", "Date": "2016-01-16T02:59:31Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((packet.getCode()) == (org.apache.niolex.network.Config.CODE_HEART_BEAT)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/229/buggy-version/rpc-core.src.main.java.org.apache.niolex.rpc.client.ClientCore.java", "BodyUseAPI": [], "Fixed commit": "02352a6b65c975153ae796f11978938a95388a0b", "Url": "https://api.github.com/repos/pftx/niolex-network-nio", "Date": "2012-12-05T08:03:50Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch.claimer.client.util.AuthenticationUtil.getLogin().getRole().getValue()) != 15) { dropdownFunction.getItems().add(\"Sachbearbeiter\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6385/buggy-version/client.src.main.java.ch.claimer.client.gui.controller.UserAddController.java", "BodyUseAPI": [], "Fixed commit": "02469dde06890ef28462f454bf2611a4b627cb56", "Url": "https://api.github.com/repos/stephledev/claimer", "Date": "2015-05-19T12:39:02Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinfoil.sms.dataStructures.TrustedContact.getNumber(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(MessageService.dba.inDatabase(number))) { MessageService.dba.addRow(new com.tinfoil.sms.dataStructures.TrustedContact(new java.lang.Number(number))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1859/buggy-version/branches.tinfoil-sms.src.com.tinfoil.sms.sms.SendMessageActivity.java", "BodyUseAPI": ["MessageService.dba.addRow(com.tinfoil.sms.dataStructures.TrustedContact)"], "Fixed commit": "ee48416888f4ebcd8b82f18872b3f031cf03b590", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2013-07-30T13:48:48Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinfoil.sms.dataStructures.TrustedContact.getNumber(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (MessageService.dba.isTrustedContact(number)) { MessageService.dba.addNewMessage(new com.tinfoil.sms.dataStructures.Message(text, true, com.tinfoil.sms.dataStructures.Message.SENT_ENCRYPTED), number, true); }else { MessageService.dba.addNewMessage(new com.tinfoil.sms.dataStructures.Message(text, true, com.tinfoil.sms.dataStructures.Message.SENT_DEFAULT), number, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1859/buggy-version/branches.tinfoil-sms.src.com.tinfoil.sms.sms.SendMessageActivity.java", "BodyUseAPI": ["MessageService.dba.addNewMessage(com.tinfoil.sms.dataStructures.Message,java.lang.String,boolean)", "MessageService.dba.addNewMessage(com.tinfoil.sms.dataStructures.Message,java.lang.String,boolean)"], "Fixed commit": "ee48416888f4ebcd8b82f18872b3f031cf03b590", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2013-07-30T13:48:48Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.powsybl.commons.concurrent.CleanableExecutors.LOGGER.isErrorEnabled()) { com.powsybl.commons.concurrent.CleanableExecutors.LOGGER.error(t.toString(), t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1468/buggy-version/commons.src.main.java.com.powsybl.commons.concurrent.CleanableExecutors.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.Throwable)"], "Fixed commit": "16ad623ee9b65d4552f8de5c784ea71137764783", "Url": "https://api.github.com/repos/powsybl/powsybl-core", "Date": "2017-10-08T17:55:27Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateCountFeteched) { return -1; }else { updateCountFeteched = true; return updateCount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3249/buggy-version/src.main.java.com.aliyun.odps.jdbc.OdpsStatement.java", "BodyUseAPI": [], "Fixed commit": "8398bc87a1ccdcead84c152508526177d6ecf574", "Url": "https://api.github.com/repos/aliyun/aliyun-odps-jdbc", "Date": "2015-12-07T03:02:46Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resourceURL == null) { throw new java.lang.RuntimeException((((\"File \" + filename) + \" does not exist in directory \") + (CLDR.getResource(\".\").getFile()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6657/buggy-version/src.edu.brown.cs.h2r.baking.Knowledgebase.TraitParser.java", "BodyUseAPI": [], "Fixed commit": "f65d88cfd88a31a1d4c99af0ff1965badd96b338", "Url": "https://api.github.com/repos/h2r/baking", "Date": "2014-07-03T18:51:30Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (in == null) { throw new java.lang.RuntimeException((((\"File \" + filename) + \" does not exist in directory \") + (CLDR.getResource(\".\").getFile()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6657/buggy-version/src.edu.brown.cs.h2r.baking.Knowledgebase.TraitParser.java", "BodyUseAPI": [], "Fixed commit": "f65d88cfd88a31a1d4c99af0ff1965badd96b338", "Url": "https://api.github.com/repos/h2r/baking", "Date": "2014-07-03T18:51:30Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (in == null) { throw new java.lang.RuntimeException((((\"File \" + filename) + \" does not exist in directory \") + (CLDR.getResource(\".\").getFile()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6657/buggy-version/src.edu.brown.cs.h2r.baking.Knowledgebase.CombinationParser.java", "BodyUseAPI": [], "Fixed commit": "f65d88cfd88a31a1d4c99af0ff1965badd96b338", "Url": "https://api.github.com/repos/h2r/baking", "Date": "2014-07-03T18:51:30Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resourceURL == null) { throw new java.lang.RuntimeException((((\"File \" + filename) + \" does not exist in directory \") + (CLDR.getResource(\".\").getFile()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6657/buggy-version/src.edu.brown.cs.h2r.baking.Knowledgebase.CombinationParser.java", "BodyUseAPI": [], "Fixed commit": "f65d88cfd88a31a1d4c99af0ff1965badd96b338", "Url": "https://api.github.com/repos/h2r/baking", "Date": "2014-07-03T18:51:30Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lectureId.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(input.equals(\"\"))) { getLectureQuestion(input); }else { android.widget.Toast toast = android.widget.Toast.makeText(a.getApplicationContext(), \"Sorry! Empty value is not allowed\", Toast.LENGTH_LONG); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/10/buggy-version/app.src.main.java.com.example.instantify.instantify.LoginFragment.java", "BodyUseAPI": ["com.example.instantify.instantify.LoginFragment.1.getLectureQuestion(java.lang.String)"], "Fixed commit": "8d1fed1dde95daf272069dbf7e94e6aab216926b", "Url": "https://api.github.com/repos/Notika/Instantify", "Date": "2015-10-29T16:55:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(np.getText().toString().isEmpty())) { price = java.lang.Double.valueOf(np.getText().toString()); activity.onFinishEditDialog(price, address.getText().toString(), ((com.nodoubts.core.User) (getArguments().get(\"user\")))); dismiss(); }else { android.widget.Toast.makeText(getActivity().getApplicationContext(), \"The price is invalid\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/552/buggy-version/src.com.nodoubts.ui.lecture.LectureCreationDialog.java", "BodyUseAPI": ["java.lang.Double.valueOf(np.getText().toString())", "android.widget.EditText.getText()", "np.getText().toString()"], "Fixed commit": "d1282a129b23470a2b3e59e4a0f3cff41b5ffdae", "Url": "https://api.github.com/repos/NoDoubtsEnterpriseCompany/100duvidas", "Date": "2015-02-21T20:30:51Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CommonLibs.DataStructure.IPAddress.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (secureConList.containsKey(key)) { connection = new CommonLibs.DataStructure.Connection(address, false); connectionList.put(key, connection); java.lang.Thread thread = new java.lang.Thread(connection); thread.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3280/buggy-version/src.CommonLibs.DataStructure.ConnectionListManager.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, CommonLibs.DataStructure.Connection>.put(java.lang.String,CommonLibs.DataStructure.Connection)"], "Fixed commit": "84b2b6f49835559cf7b6acedc80ff02ead4d9c90", "Url": "https://api.github.com/repos/AlonikiX/EZShareSystem", "Date": "2017-05-27T05:35:17Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mapping) != null) && ((mapping.get(input)) != null)) return java.util.Arrays.asList(new com.github.TKnudsen.ComplexDataObject.data.features.numericalData.NumericalFeatureVector[]{ mapping.get(input) }); else { java.util.List<com.github.TKnudsen.ComplexDataObject.data.features.numericalData.NumericalFeatureVector> lst = new java.util.ArrayList<>(); lst.add(input); return transform(lst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8893/buggy-version/src.main.java.com.github.TKnudsen.ComplexDataObject.model.transformations.dimensionReduction.features.numeric.MultiDimensionalScaling.java", "BodyUseAPI": ["java.util.List<com.github.TKnudsen.ComplexDataObject.data.features.numericalData.NumericalFeatureVector>.add(com.github.TKnudsen.ComplexDataObject.data.features.numericalData.NumericalFeatureVector)", "java.util.Map<com.github.TKnudsen.ComplexDataObject.data.features.numericalData.NumericalFeatureVector, com.github.TKnudsen.ComplexDataObject.data.features.numericalData.NumericalFeatureVector>.get(com.github.TKnudsen.ComplexDataObject.data.features.numericalData.NumericalFeatureVector)", "java.util.Arrays.asList(com.github.TKnudsen.ComplexDataObject.data.features.numericalData.NumericalFeatureVector[])"], "Fixed commit": "f450f4fbb071e867ac8b81bfe95a79c9d6ff225e", "Url": "https://api.github.com/repos/TKnudsen/ComplexDataObject", "Date": "2017-06-14T10:51:45Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[0].equalsIgnoreCase(\"join\")) { if (args[0].equalsIgnoreCase(\"leave\")) { if (args[0].equalsIgnoreCase(\"members\")) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7954/buggy-version/src.com.zavcoding.narutorpg.commands.NarutoRPGCommands.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "790716579ad0f1d697387560b7c8b8180fa452a4", "Url": "https://api.github.com/repos/ZavCoding/NarutoRPG", "Date": "2012-08-19T14:33:49Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hashPrefixed) { return eppic.MolViewersHelper.toHexHash(color); }else { return eppic.MolViewersHelper.toHex0x(color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/917/buggy-version/eppic-cli.src.main.java.eppic.MolViewersHelper.java", "BodyUseAPI": [], "Fixed commit": "35fd507d07ed95d9651b8b55dee43df579faab51", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2016-03-12T03:21:58Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nivida.com.amulyamica.MainActivity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (intent.getBooleanExtra(\"fromNotification\", false)) { android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(this); builder.setTitle(intent.getStringExtra(\"title\")); builder.setMessage(intent.getStringExtra(\"message\")); builder.setPositiveButton(\"CLOSE\", null); android.support.v7.app.AlertDialog dialog = builder.create(); dialog.show(); intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5796/buggy-version/app.src.main.java.nivida.com.amulyamica.MainActivity.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(java.lang.String)", "android.support.v7.app.AlertDialog.Builder.setMessage(intent.getStringExtra(\"message\"))", "android.content.Intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)", "android.support.v7.app.AlertDialog.Builder.setTitle(intent.getStringExtra(\"title\"))", "android.content.Intent.getStringExtra(java.lang.String)"], "Fixed commit": "a0d43e357832c3991f1f94804959a3d4d35315e8", "Url": "https://api.github.com/repos/chintan369/AmulyaMica", "Date": "2017-05-03T12:21:23Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (jsonDisplayList.equals(\"\")) { filteredList = new java.util.ArrayList(); }else { filteredList = gson.fromJson(jsonDisplayList, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2331/buggy-version/app.src.main.java.com.example.djurus.netwrkit.ListActivity.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Fixed commit": "82bcbe7f06784249d88f7712d71410f0ccc7eb23", "Url": "https://api.github.com/repos/greeddiscient/netwrkit", "Date": "2016-12-07T22:56:09Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((npc.getNavigator().getTargetType()) == (net.citizensnpcs.api.ai.TargetType.LOCATION)) && ((npc.getNavigator().getTargetAsLocation()) != null)) && (npc.getNavigator().getTargetAsLocation().getWorld().equals(entity.getWorld()))) && ((npc.getNavigator().getTargetAsLocation().distanceSquared(entity.getLocation())) < (2 * 2))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2690/buggy-version/src.main.java.org.mcmonkey.sentinel.SentinelTrait.java", "BodyUseAPI": [], "Fixed commit": "8dc1f80b896ee53ff22bea3239517872d9b59ae0", "Url": "https://api.github.com/repos/mcmonkey4eva/Sentinel", "Date": "2016-04-23T20:56:08Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (callsLeft == 1) { holder.numCalls.setText(java.lang.String.format(getResources().getString(R.string.call_count_remaining_one), totalCalls)); }else { holder.numCalls.setText(java.lang.String.format(getResources().getString(R.string.call_count_remaining), callsLeft, totalCalls)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/200/buggy-version/5calls.app.src.main.java.org.a5calls.android.a5calls.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.String.format(getResources().getString(R.string.call_count_remaining),int,int)"], "Fixed commit": "91ce6e72ec5b6c4ac85d35a2e4836bf0fad92b67", "Url": "https://api.github.com/repos/5calls/android", "Date": "2017-02-01T01:16:26Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) { return true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3387/buggy-version/src.ArrayDeque.java", "BodyUseAPI": [], "Fixed commit": "35425bb5c0d06cdb13eeba14f05501b54a52cfd0", "Url": "https://api.github.com/repos/sluo6/Double_Ended_Queue", "Date": "2017-04-14T23:55:03Z"},
{"Line": "=>913", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ncons.getObject().isLiteral()) { engine.replaceObjectInConstraints(cons.getObject(), ncons.getObject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6895/buggy-version/planner.src.main.java.edu.isi.wings.planner.api.impl.kb.WorkflowGenerationKB.java", "BodyUseAPI": ["edu.isi.wings.workflow.template.api.ConstraintEngine.replaceObjectInConstraints(cons.getObject(),ncons.getObject())", "edu.isi.wings.ontapi.KBTriple.getObject()"], "Fixed commit": "7e2d51534fd3053488ba47770e3c86d969682502", "Url": "https://api.github.com/repos/varunratnakar/wings", "Date": "2013-11-27T01:02:25Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((this.comments) == null) || (this.comments.equals(\"\"))) { myTokens.add((\"COMMENTS: \" + (this.comments))); }else { myTokens.add((\"COMMENTS:\" + (this.comments))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7814/buggy-version/scaha.src.com.scaha.beans.releaseBean.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "619af2f6ae712e00ccf61865e4bbe0f431a2670a", "Url": "https://api.github.com/repos/dbigelow25/scaha", "Date": "2014-05-25T20:12:28Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.flink.runtime.jobgraph.JobEdge.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(remaining.contains(v))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/8897/buggy-version/flink-runtime.src.main.java.org.apache.flink.runtime.jobgraph.JobGraph.java", "BodyUseAPI": [], "Fixed commit": "51ac4cda7a014f848c868fc81c8eec6afae2a012", "Url": "https://api.github.com/repos/StephanEwen/incubator-flink", "Date": "2014-09-16T17:48:02Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetCue) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/4412/buggy-version/src.jcue.domain.fadecue.ParameterEnvelope.java", "BodyUseAPI": [], "Fixed commit": "4f8e0703b676b4badd5aae72c02ae48b1742977c", "Url": "https://api.github.com/repos/SlyJack0/JCue", "Date": "2013-03-16T14:04:47Z"},
{"Line": "=>1199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mediaTitle) == null) && ((mediaArtist) == null)) { metadataBuilder.putString(MediaMetadata.METADATA_KEY_ARTIST, \"No info\"); }else { metadataBuilder.putString(MediaMetadata.METADATA_KEY_TITLE, mediaTitle); metadataBuilder.putString(MediaMetadata.METADATA_KEY_ARTIST, mediaArtist); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/915/buggy-version/wear.src.main.java.com.codegy.ioswearconnect.BLEService.java", "BodyUseAPI": [], "Fixed commit": "4e3660c39473fe6dfcd80d941ba7a518186df940", "Url": "https://api.github.com/repos/GuiyeC/Aerlink-for-Android", "Date": "2015-04-21T02:03:18Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (core.isAlive()) tasks.put(com.github.zhongl.ipage.Engine.SHUTDOWN);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/3225/buggy-version/src.main.java.com.github.zhongl.ipage.Engine.java", "BodyUseAPI": [], "Fixed commit": "9401cc5f8c394041176bda768d94cd0eb5e9dc92", "Url": "https://api.github.com/repos/zhongl/iPage", "Date": "2011-12-04T17:04:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gammf.collabora_android.utils.LocalStorageUtils.readCollaborationFromFile(getActivity().getApplicationContext(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (collaboration.getCollaborationType().equals(CollaborationType.PROJECT)) { allNotes.addAll(((org.gammf.collabora_android.collaborations.shared_collaborations.Project) (collaboration)).getAllNoteNotInModules()); }else { allNotes.addAll(collaboration.getAllNotes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7972/buggy-version/app.src.main.java.org.gammf.collabora_android.app.gui.note.ChoosePreviousNotesDialogFragment.java", "BodyUseAPI": ["org.gammf.collabora_android.collaborations.general.Collaboration.getAllNotes()", "java.util.List<org.gammf.collabora_android.notes.Note>.addAll(collaboration.getAllNotes())"], "Fixed commit": "abecedcbd56e873c120f8a8b5063ef67198b0ac0", "Url": "https://api.github.com/repos/manuelperuzzi/Collabora-android-app", "Date": "2017-09-13T22:18:44Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["output.RDFLinkInfo.getStreetName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (streetName.contains(\"&\")) streetName = streetName.replaceAll(\"&\", \" and \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7619/buggy-version/PatternGeneration.src.output.RDFOutputKMLGeneration.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "1ce75383bb6fd47d6853ff4d0ab2b9238bb57fdb", "Url": "https://api.github.com/repos/usunyu/CleanPath", "Date": "2013-09-19T20:52:37Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sinolight.cn.qgapp.data.http.entity.BookInfoEntity.getVersionprint()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (str.contains(\";\")) { arr = str.split(\";\"); }else { arr = str.split(\":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6781/buggy-version/app.src.main.java.sinolight.cn.qgapp.views.fragment.BookInfoFragment.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "99707163c6bc4c7d6ff61e89672ce473a35f9ab5", "Url": "https://api.github.com/repos/xunuosi/QGApp", "Date": "2017-08-16T06:10:08Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sinolight.cn.qgapp.data.http.entity.BookInfoEntity.getVersionprint()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (str.contains(\";\")) { arr = str.split(\";\"); }else { arr = str.split(\":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6781/buggy-version/app.src.main.java.sinolight.cn.qgapp.views.fragment.BookInfoFragment.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "99707163c6bc4c7d6ff61e89672ce473a35f9ab5", "Url": "https://api.github.com/repos/xunuosi/QGApp", "Date": "2017-08-16T06:10:08Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.isOpenCmsPluginEnabled()) { if ((plugin.getConsole()) != null) { plugin.getConsole().clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9070/buggy-version/plugin.src.com.mediaworx.intellij.opencmsplugin.actions.OpenCmsPluginAction.java", "BodyUseAPI": [], "Fixed commit": "dc129601e377212f34c1cce3096e607b64c62105", "Url": "https://api.github.com/repos/mediaworx/opencms-intellij-plugin", "Date": "2014-01-15T13:21:47Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toolWindow) == null) { toolWindow = toolWindowManager.registerToolWindow(com.mediaworx.intellij.opencmsplugin.OpenCmsPlugin.TOOLWINDOW_ID, false, ToolWindowAnchor.BOTTOM); toolWindow.setIcon(new javax.swing.ImageIcon(this.getClass().getResource(\"/icons/opencms_13.png\"))); toolWindow.setAvailable(config.isOpenCmsPluginEnabled(), null); com.mediaworx.intellij.opencmsplugin.toolwindow.OpenCmsPluginToolWindowFactory toolWindowFactory = new com.mediaworx.intellij.opencmsplugin.toolwindow.OpenCmsPluginToolWindowFactory(); toolWindowFactory.createToolWindowContent(project, toolWindow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9070/buggy-version/plugin.src.com.mediaworx.intellij.opencmsplugin.OpenCmsPlugin.java", "BodyUseAPI": [], "Fixed commit": "dc129601e377212f34c1cce3096e607b64c62105", "Url": "https://api.github.com/repos/mediaworx/opencms-intellij-plugin", "Date": "2014-01-15T13:21:47Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (indexAccount != (-1)) { this.linkedBroker.getAccounts().remove(indexAccount); this.linkedBroker.getAccounts().add(indexAccount, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5100/buggy-version/tradeit-android-sdk.src.main.java.it.trade.android.sdk.model.TradeItLinkedBrokerAccountParcelable.java", "BodyUseAPI": [], "Fixed commit": "0bb12f70d06f5b1a31016ffacfe4ecf6ebb5948c", "Url": "https://api.github.com/repos/tradingticket/AndroidSDK", "Date": "2017-08-24T21:39:07Z"},
{"Line": "=>3011", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(lv.y)) { lv = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/124/buggy-version/src.fr.esrf.tangoatk.widget.util.chart.JLChart.java", "BodyUseAPI": [], "Fixed commit": "aeeda029a6c493baf798309b21e43b1bc9c073ce", "Url": "https://api.github.com/repos/tango-controls/atk", "Date": "2011-05-12T13:49:32Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ActionKeys.ADD_FOLDER.equals(actionId)) { actionId = com.liferay.portal.security.permission.ActionKeys.ADD_SUBFOLDER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/560/buggy-version/fsrepo.src.main.java.cz.topolik.fsrepo.model.FileSystemModel.java", "BodyUseAPI": [], "Fixed commit": "afade5ddb0adee55c21e2d1a33bcab46361cc4a2", "Url": "https://api.github.com/repos/topolik/FSRepo", "Date": "2013-05-13T12:41:03Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((formattedTextField.isEditable()) && ((evt.getNewValue()) == null)) && (ignoreFurtherPropertyEvents.compareAndSet(false, true))) { getModel().setValue(null); javax.swing.SwingUtilities.invokeLater(new java.lang.Runnable() { public void run() { ignoreFurtherPropertyEvents.set(false); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/9009/buggy-version/src.main.java.org.jdatepicker.impl.JDatePickerImpl.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicBoolean.set(boolean)", "javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)"], "Fixed commit": "d2ea0cf52982f83934991ca0f5912da922df1f7a", "Url": "https://api.github.com/repos/JDatePicker/JDatePicker", "Date": "2014-10-17T07:15:51Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (title == null) { escapedTitle = \"\"; }else { escapedTitle = org.opencms.i18n.CmsEncoder.escapeHtml(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/7881/buggy-version/src.org.opencms.workplace.CmsDialog.java", "BodyUseAPI": ["org.opencms.i18n.CmsEncoder.escapeHtml(java.lang.String)"], "Fixed commit": "72a05e3ea1cf692e2efce002687272e63f98c14a", "Url": "https://api.github.com/repos/inerasrl/opencms-core", "Date": "2013-06-20T13:27:43Z"},
{"Line": "=>1991", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.tajo.plan.util.PlannerUtil.isOuterJoin(node.getJoinType())) && (!isOnPredicate)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5060/buggy-version/tajo-plan.src.main.java.org.apache.tajo.plan.LogicalPlanner.java", "BodyUseAPI": [], "Fixed commit": "f3f128a21e7a5c492c8f163d542a1d3a63f04368", "Url": "https://api.github.com/repos/jihoonson/tajo", "Date": "2015-03-15T21:40:22Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_firstInsertion) != null) { org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(_firstInsertion, _previousInsertion); org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(_nextInsertion, _lastInsertion); }else { org.zkoss.zk.ui.HtmlShadowElement.setPrevInsertion(_nextInsertion, _previousInsertion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/5167/buggy-version/zk.src.org.zkoss.zk.ui.HtmlShadowElement.java", "BodyUseAPI": [], "Fixed commit": "7b3c009e36ab4635fc7bfe4b24a82732b9e27982", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2014-12-12T06:02:26Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pendingDeploy.getLoadBalancerState().isPresent()) { return com.hubspot.singularity.scheduler.SingularityDeployChecker.DeployState.WAITING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6260/buggy-version/SingularityService.src.main.java.com.hubspot.singularity.scheduler.SingularityDeployChecker.java", "BodyUseAPI": [], "Fixed commit": "da769a5a4777504f29b2f856e3fa76c2bede31c6", "Url": "https://api.github.com/repos/HubSpot/Singularity", "Date": "2014-04-01T18:11:51Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hubspot.singularity.hooks.LoadBalancerClient.cancel(pendingDeploy.getDeployMarker().getLoadBalancerRequestId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lbState.isPresent()) { updatePendingDeploy(new com.hubspot.singularity.SingularityPendingDeploy(pendingDeploy.getDeployMarker(), lbState)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/6260/buggy-version/SingularityService.src.main.java.com.hubspot.singularity.scheduler.SingularityDeployChecker.java", "BodyUseAPI": ["com.hubspot.singularity.scheduler.SingularityDeployChecker.updatePendingDeploy(com.hubspot.singularity.SingularityPendingDeploy)"], "Fixed commit": "da769a5a4777504f29b2f856e3fa76c2bede31c6", "Url": "https://api.github.com/repos/HubSpot/Singularity", "Date": "2014-04-01T18:11:51Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/2268/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "5da6ddf127de47bf7255e9876784e041aae81f1a", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-20T19:37:12Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getPathInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.equals(\"/create\")) { if (errorFlag = true) { javax.servlet.ServletContext context = getServletContext(); java.lang.String url = \"/create_candidate.jsp\"; javax.servlet.RequestDispatcher dispatcher = context.getRequestDispatcher(url); dispatcher.forward(request, response); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V110/1786/buggy-version/NetBeansProject.src.java.Controllers.CandidatesController.java", "BodyUseAPI": [], "Fixed commit": "5462b54c55b21bf9fa09ef1294fe7d305b0b77b7", "Url": "https://api.github.com/repos/elaelaa/DAW-Proyecto-JAVA", "Date": "2015-10-25T14:55:31Z"}]}
