{"UNKNOWN to If":[{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fromTimeHour > toTimeHour) { if (fromTimeMin > toTimeMin) { fromField.setText(getRoundHalfHour(toTimeHour, (toTimeMin - 60))); }else fromField.setText(getRoundHalfHour(toTimeHour, (toTimeMin - 60))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/821/buggy-version/src.newAppointment.NewAppointmentController.java", "BodyUseAPI": ["javafx.scene.control.TextField.setText(java.lang.String)", "newAppointment.NewAppointmentController.getRoundHalfHour(int,int)", "javafx.scene.control.TextField.setText(java.lang.String)", "newAppointment.NewAppointmentController.getRoundHalfHour(int,int)"], "Fixed commit": "7f1a1d9a594d39b7db7b1783727ad7e5dcc4f1b6", "Url": "https://api.github.com/repos/johansme/Fellesprosjektet", "Date": "2015-03-20T10:26:43Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ingredients.size()) == 0) { cooking = false; markDirty(); }else if ((cookTimer) >= (getCookingTime())) { result.addAll(HFApi.cooking.getCookingResult(getUtensil(), ingredients)); cooking = false; ingredients = new java.util.ArrayList(); cookTimer = 0; markDirty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5397/buggy-version/src.main.java.joshie.harvest.cooking.tile.TileCooking.java", "BodyUseAPI": ["java.util.List<net.minecraft.item.ItemStack>.addAll(HFApi.cooking.getCookingResult(getUtensil(), ingredients))", "HFApi.cooking.getCookingResult(joshie.harvest.api.cooking.Utensil,java.util.ArrayList<net.minecraft.item.ItemStack>)"], "Fixed commit": "a79226a9d553604cca417e7e535bba03445fff7a", "Url": "https://api.github.com/repos/PenguinSquad/Harvest-Festival", "Date": "2017-02-26T10:50:10Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.minecraft.item.ItemStack>.get(((ingredients.size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((stack.hasTagCompound()) && (stack.getTagCompound().hasNoTags())) { stack.setTagCompound(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5397/buggy-version/src.main.java.joshie.harvest.cooking.tile.TileCooking.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.setTagCompound(<nulltype>)"], "Fixed commit": "a79226a9d553604cca417e7e535bba03445fff7a", "Url": "https://api.github.com/repos/PenguinSquad/Harvest-Festival", "Date": "2017-02-26T10:50:10Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((food) < 0) { food = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7861/buggy-version/src.model.sprites.Player.java", "BodyUseAPI": [], "Fixed commit": "bdcddf183e4098bbb989137fd87b0695416747f7", "Url": "https://api.github.com/repos/Calleberg/Operation_5A", "Date": "2013-05-20T10:10:00Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Integer.MIN_VALUE) <= d) && (d <= (java.lang.Integer.MAX_VALUE))) { timestampBitsAdded = appendTimestampDelta(bitOffset, 32, 30, d); }else { throw new java.lang.IllegalArgumentException((\"Timestamp delta out of range: \" + d)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8787/buggy-version/src.main.java.com.lmax.utan.store.Block.java", "BodyUseAPI": ["com.lmax.utan.store.Block.appendTimestampDelta(int,int,int,long)"], "Fixed commit": "3aa51b49e1f49a0359042dcb952247d2500d10b3", "Url": "https://api.github.com/repos/mikeb01/utan", "Date": "2016-08-11T10:51:34Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.Tweet.session(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (owner_id == null) { tweetResult = new controllers.TweetResult((-1), null); return ok(play.libs.Json.toJson(tweetResult)); }else { return controllers.Tweet.publishTweet(owner_id, content, device); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7917/buggy-version/app.controllers.Tweet.java", "BodyUseAPI": ["controllers.Tweet.publishTweet(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "bbd38b5d3b4a5e8365279fd3054a530c8683ca27", "Url": "https://api.github.com/repos/jiangecho/maopao_server", "Date": "2015-08-01T07:53:43Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.getHttpCode()) >= 400) { android.widget.Toast.makeText(getActivity(), \"Error occurred\", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getActivity(), \"Enrollment was Successful \", Toast.LENGTH_LONG).show(); c2.setEnabled(false); c2.setText(\"Enrolled\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2498/buggy-version/app.src.main.java.edu.uco.schambers.classmate.Fragments.StudentEnrollment.java", "BodyUseAPI": [], "Fixed commit": "22c460f41b5ac334f2e4f590aea42075dca1f9a6", "Url": "https://api.github.com/repos/colegarien/SDDTermProject", "Date": "2015-10-28T22:09:57Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.devsmart.microdb.Driver.queryIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (iterator != null) { mIterators.add(new java.lang.ref.WeakReference<com.devsmart.microdb.DBIterator>(iterator, mItQueue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7370/buggy-version/java.binding.microdb-runtime.src.main.java.com.devsmart.microdb.MicroDB.java", "BodyUseAPI": ["java.util.Set<java.lang.ref.WeakReference<com.devsmart.microdb.DBIterator>>.add(java.lang.ref.WeakReference<com.devsmart.microdb.DBIterator>)"], "Fixed commit": "f91f99cab92cd125a322b75ef0e221399246e425", "Url": "https://api.github.com/repos/dinocore1/MicroDb", "Date": "2015-09-23T04:33:46Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (queryIndex(indexName, retval)) { return retval; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7370/buggy-version/java.binding.microdb-android.src.main.java.com.devsmart.microdb.NativeDriver.java", "BodyUseAPI": [], "Fixed commit": "f91f99cab92cd125a322b75ef0e221399246e425", "Url": "https://api.github.com/repos/dinocore1/MicroDb", "Date": "2015-09-23T04:33:46Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((carriages.size()) == 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5934/buggy-version/assign2.src.asgn2Train.DepartingTrain.java", "BodyUseAPI": [], "Fixed commit": "8a40d02acbd2ad14acbe737f824c25ac0d8800ba", "Url": "https://api.github.com/repos/charlestontelles/INN370", "Date": "2013-05-10T15:29:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((next) != null) super.complete(previous);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/281/buggy-version/src.hadoop.cascading.flow.hadoop.HadoopGroupGate.java", "BodyUseAPI": [], "Fixed commit": "7d0309f2508b658a68ff2274a330243684c59a81", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2011-11-08T21:34:53Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((next) != null) super.start(previous);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/281/buggy-version/src.hadoop.cascading.flow.hadoop.HadoopGroupGate.java", "BodyUseAPI": [], "Fixed commit": "7d0309f2508b658a68ff2274a330243684c59a81", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2011-11-08T21:34:53Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parsedChannel.length) == 1) { edu.sfsu.csc780.chathub.ui.utils.MessageUtil.sFirebaseDatabaseReference.child(edu.sfsu.csc780.chathub.ui.utils.MessageUtil.MESSAGES_CHILD).child(channelName).push().setValue(chatMessage); }else if (parsedChannel[0].equals(parsedChannel[1])) { edu.sfsu.csc780.chathub.ui.utils.MessageUtil.sFirebaseDatabaseReference.child(edu.sfsu.csc780.chathub.ui.utils.MessageUtil.MESSAGES_CHILD).child(channelName).push().setValue(chatMessage); }else { edu.sfsu.csc780.chathub.ui.utils.MessageUtil.sFirebaseDatabaseReference.child(edu.sfsu.csc780.chathub.ui.utils.MessageUtil.MESSAGES_CHILD).child((((parsedChannel[0]) + \"=\") + (parsedChannel[1]))).push().setValue(chatMessage); edu.sfsu.csc780.chathub.ui.utils.MessageUtil.sFirebaseDatabaseReference.child(edu.sfsu.csc780.chathub.ui.utils.MessageUtil.MESSAGES_CHILD).child((((parsedChannel[1]) + \"=\") + (parsedChannel[0]))).push().setValue(chatMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6808/buggy-version/app.src.main.java.edu.sfsu.csc780.chathub.ui.utils.MessageUtil.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "edu.sfsu.csc780.chathub.ui.utils.MessageUtil.sFirebaseDatabaseReference.child(edu.sfsu.csc780.chathub.ui.utils.MessageUtil.MESSAGES_CHILD).child((((parsedChannel[1]) + \"=\") + (parsedChannel[0]))).push().setValue(edu.sfsu.csc780.chathub.model.ChatMessage)", "edu.sfsu.csc780.chathub.ui.utils.MessageUtil.sFirebaseDatabaseReference.child(edu.sfsu.csc780.chathub.ui.utils.MessageUtil.MESSAGES_CHILD).child((((parsedChannel[1]) + \"=\") + (parsedChannel[0]))).push()", "edu.sfsu.csc780.chathub.ui.utils.MessageUtil.sFirebaseDatabaseReference.child(edu.sfsu.csc780.chathub.ui.utils.MessageUtil.MESSAGES_CHILD).child((((parsedChannel[0]) + \"=\") + (parsedChannel[1]))).push()", "edu.sfsu.csc780.chathub.ui.utils.MessageUtil.sFirebaseDatabaseReference.child(edu.sfsu.csc780.chathub.ui.utils.MessageUtil.MESSAGES_CHILD).child(java.lang.String)", "edu.sfsu.csc780.chathub.ui.utils.MessageUtil.sFirebaseDatabaseReference.child(edu.sfsu.csc780.chathub.ui.utils.MessageUtil.MESSAGES_CHILD).child((((parsedChannel[0]) + \"=\") + (parsedChannel[1]))).push().setValue(edu.sfsu.csc780.chathub.model.ChatMessage)", "edu.sfsu.csc780.chathub.ui.utils.MessageUtil.sFirebaseDatabaseReference.child(edu.sfsu.csc780.chathub.ui.utils.MessageUtil.MESSAGES_CHILD).child(java.lang.String)"], "Fixed commit": "dc10cf8336fbb8d819ff9238efee6ca327992867", "Url": "https://api.github.com/repos/tntse/chathub-final", "Date": "2016-12-05T06:15:51Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eduze.livestream.exchange.client.FramePullResult.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((data != null) && ((data.length) > 0)) { for (byte[] b : data) { if (isPlayReceived()) { sourceline.write(b, 0, b.length); } java.lang.System.out.println(((java.lang.String.valueOf(b.length)) + \" bytes sent to audio out.\")); notifyAudioReceived(b); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9192/buggy-version/livestream.src.eduze.livestream.AudioReceiver.java", "BodyUseAPI": [], "Fixed commit": "d83f80a54be4a45fe44bc0b3dd9c792511c21b8c", "Url": "https://api.github.com/repos/madhawav/livestream", "Date": "2016-04-15T07:57:31Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(allSpeakers.containsKey(trimmedSpeaker))) { crawlers.impl.Speaker stdSpeaker = ((crawlers.impl.Speaker) (new crawlers.impl.Speaker().setName(trimmedSpeaker).setKey(new org.bson.types.ObjectId().toString()))); allSpeakers.put(trimmedSpeaker, stdSpeaker); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8309/buggy-version/crawlers.src.main.java.crawlers.impl.CfpIOCrawler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, crawlers.impl.Speaker>.put(java.lang.String,crawlers.impl.Speaker)", "new crawlers.impl.Speaker().setName(trimmedSpeaker).setKey(new org.bson.types.ObjectId().toString())", "crawlers.impl.Speaker.setName(java.lang.String)"], "Fixed commit": "d6cfde1899b63b2435d7f1f237d8828ca0b831c7", "Url": "https://api.github.com/repos/anthonny/voxxrin2", "Date": "2017-04-17T11:53:18Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.getExtras().getString(java.lang.String)", "data.getExtras().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((date != null) && (time != null)) { android.util.Log.d(\"STAR\", \"XXX\"); createAlarm(id, date, time, title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5211/buggy-version/app.src.main.java.com.mmsamiei.keeps.MainActivity.java", "BodyUseAPI": ["com.mmsamiei.keeps.MainActivity.createAlarm(int,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "38cfdcd4226992d4a3511ebe9a78be5f505aef6c", "Url": "https://api.github.com/repos/mmsamiei/keeps", "Date": "2016-07-08T13:50:53Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.intellij.openapi.util.text.StringUtil.endsWith(directoryPath, \"/\")) { directoryPath = directoryPath.substring(0, ((directoryPath.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1004/buggy-version/platform.platform-api.src.com.intellij.openapi.vfs.VfsUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "46737ef2592976d28ee42b11ff232e02547e2d71", "Url": "https://api.github.com/repos/consulo/consulo", "Date": "2013-08-24T20:02:33Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(response.body().has(\"endagered\"))) { android.widget.Toast.makeText(this, java.lang.String.format(\"Update failed\"), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5876/buggy-version/app.src.main.java.hfs.de.rhinov2.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2dadb138f922fe53922bf2aad3511047419fc78b", "Url": "https://api.github.com/repos/chrisonntag/rhino", "Date": "2017-09-17T05:10:10Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.replaceAll(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (eus.ixa.ixa.pipe.tok.NonPeriodBreaker.hasInitPct.matcher(curWord.substring(0, 1)).find()) { curWord = curWord.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3527/buggy-version/src.main.java.eus.ixa.ixa.pipe.tok.NonPeriodBreaker.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "bc0af5bb25519fa668fcbf9a56b6db6c2bc98d69", "Url": "https://api.github.com/repos/mustaszewski/ixa-pipe-tok", "Date": "2016-06-05T00:42:39Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newUser.getType()) == 2) { throw new com.ws1001.services.exceptions.ServiceException(\"Ne moze se kreirati korisnik sa rolom admina.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7321/buggy-version/src.main.java.com.ws1001.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "010ccf979a951a589f9b041ee8c0b811b5ce072d", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2016_TIM9", "Date": "2017-06-09T19:57:50Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.dzhey.flow_frames.traversal.SimpleTraversalFrameChanger.getRemovedViews(com.github.dzhey.flow_frames.traversal.TransitionSpec)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (viewsToRemove.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/59/buggy-version/app.src.main.java.com.github.dzhey.flow_frames.traversal.SimpleTraversalFrameChanger.java", "BodyUseAPI": [], "Fixed commit": "6ffa5935e590d09e848beb486bc6512d8003c34c", "Url": "https://api.github.com/repos/Dzhey/Flow-Frames", "Date": "2017-10-09T23:57:33Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.dzhey.flow_frames.traversal.SimpleTraversalFrameChanger.tryFindContainerView(android.view.ViewGroup,spec.containerId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (containerView == null) { for (android.view.View removedView : removedViews) { if ((removedView.getId()) == (spec.containerId())) { continue outer; } if ((removedView.findViewById(spec.containerId())) == null) { continue outer; } } final android.view.View[] viewsArray = new android.view.View[viewsToRemove.size()]; viewsToRemove.toArray(viewsArray); throw new java.lang.IllegalStateException(java.lang.String.format(java.util.Locale.US, \"unable to find container to remove view %s from\", viewsArray[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/59/buggy-version/app.src.main.java.com.github.dzhey.flow_frames.traversal.SimpleTraversalFrameChanger.java", "BodyUseAPI": [], "Fixed commit": "6ffa5935e590d09e848beb486bc6512d8003c34c", "Url": "https://api.github.com/repos/Dzhey/Flow-Frames", "Date": "2017-10-09T23:57:33Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((autonomousCommand) != null) autonomousCommand.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5256/buggy-version/src.org.usfirst.frc.team2473.robot.Robot.java", "BodyUseAPI": [], "Fixed commit": "e8b5b3e3310ee1d6af08256b917f54d15bf51144", "Url": "https://api.github.com/repos/Tino-FRC-2473/Calgames2016", "Date": "2016-09-17T18:07:05Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations.getTarget(org.jetbrains.mps.openapi.model.SNode,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (classifier == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3518/buggy-version/languages.baseLanguage.baseLanguage.source_gen.jetbrains.mps.baseLanguage.typesystem.CheckExtendedClassIsImported_NonTypesystemRule.java", "BodyUseAPI": [], "Fixed commit": "eadc2e8d068d995d2d6add79d6dcf8ce24eb6442", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2014-07-16T07:56:51Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.length) == 1) { return data[0].equals(\"#\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7566/buggy-version/src.com.martin.tree.VerifyPreOrderSerial.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "13741d6e366e36954373f82f59d1a3a4499f425f", "Url": "https://api.github.com/repos/hyacinth0428/algorithm", "Date": "2016-02-11T21:20:17Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data == null) || ((data.length) == 0)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7566/buggy-version/src.com.martin.tree.VerifyPreOrderSerial.java", "BodyUseAPI": [], "Fixed commit": "13741d6e366e36954373f82f59d1a3a4499f425f", "Url": "https://api.github.com/repos/hyacinth0428/algorithm", "Date": "2016-02-11T21:20:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stk.isEmpty()) && (i != 0)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7566/buggy-version/src.com.martin.tree.VerifyPreOrderSerial.java", "BodyUseAPI": [], "Fixed commit": "13741d6e366e36954373f82f59d1a3a4499f425f", "Url": "https://api.github.com/repos/hyacinth0428/algorithm", "Date": "2016-02-11T21:20:17Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.appiphany.nacc.screens.LoginActivity.getCurrentFocus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (view != null) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(view.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7123/buggy-version/AndroidStudio.NACC.app.src.main.java.com.appiphany.nacc.screens.LoginActivity.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(view.getWindowToken(),int)", "android.view.View.getWindowToken()"], "Fixed commit": "9117e2c8925458b45658ddc065533dc9a8f860ba", "Url": "https://api.github.com/repos/NACC-Aus/Photomon-Android", "Date": "2016-12-04T13:52:20Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.nuclearthinking.myheroagency.utils.Constants.DEBUG) stage.addActor(utilsLayer.getTable());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6533/buggy-version/core.src.com.nuclearthinking.myheroagency.ui.hud.HudGame.java", "BodyUseAPI": [], "Fixed commit": "1867cdd459122695430842af1bf4a85a378dcc70", "Url": "https://api.github.com/repos/nuclearthinkinglab/myheroagency", "Date": "2016-08-02T09:37:34Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iObject instanceof com.orientechnologies.orient.core.sql.query.OLiveQuery<?>) className = iObject.getClass().getName().getBytes(\"UTF-8\"); else if (iObject instanceof com.orientechnologies.orient.core.sql.query.OSQLSynchQuery<?>) className = com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.QUERY_COMMAND_CLASS_ASBYTES; else if (iObject instanceof com.orientechnologies.orient.core.sql.OCommandSQL) className = com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.SQL_COMMAND_CLASS_ASBYTES; else if (iObject instanceof com.orientechnologies.orient.core.command.script.OCommandScript) className = com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.SCRIPT_COMMAND_CLASS_ASBYTES; else { if (iObject == null) className = null; else className = iObject.getClass().getName().getBytes(\"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7286/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.stream.OStreamSerializerAnyStreamable.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getName()", "java.lang.Object.getClass()", "java.lang.String.getBytes(java.lang.String)", "java.lang.String.getBytes(java.lang.String)", "java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()"], "Fixed commit": "63f90ddaed8e0aa7e51f5d0111b6ad3ec4c59519", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-08-08T16:27:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ngspring.dao.ProductDao.findByBarCode(product.getBarCode())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existingBarCode != null) { throw new com.ngspring.exception.StoreValidationException((\"Ya existe el codigo de barras: \" + (product.getBarCode()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6603/buggy-version/src.main.java.com.ngspring.service.InventoryService.java", "BodyUseAPI": [], "Fixed commit": "4828fcde924e1c8321dc3ee086f7297cb11d7863", "Url": "https://api.github.com/repos/warxe007/crossfitlan", "Date": "2017-11-25T03:23:06Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.equals(\"\")) name = \"{no name}\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8415/buggy-version/QuizSite.src.quiz.QuizCreationServlet.java", "BodyUseAPI": [], "Fixed commit": "2a31eea1ef5c2857fcced7cd25f3579e1d2c0ab6", "Url": "https://api.github.com/repos/mrg1/QuizProject", "Date": "2013-03-15T22:44:20Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getArchType(y).compareTo(\"turtle\")) == 0) enemySprites[y] = new com.brackeen.javagamebook.tilegame.Turtle(enemyAnim[y][0], enemyAnim[y][1], enemyAnim[y][2], enemyAnim[y][3]); else if ((s.getArchType(y).compareTo(\"bird\")) == 0) enemySprites[y] = new com.brackeen.javagamebook.tilegame.Bird(enemyAnim[y][0], enemyAnim[y][1], enemyAnim[y][2], enemyAnim[y][3]); else if ((s.getArchType(y).compareTo(\"spinner\")) == 0) enemySprites[y] = new com.brackeen.javagamebook.tilegame.MobileHazard(enemyAnim[y][0], enemyAnim[y][1], enemyAnim[y][2], enemyAnim[y][3]); else if ((s.getArchType(y).compareTo(\"hidingWall\")) == 0) enemySprites[y] = new com.brackeen.javagamebook.tilegame.Decoration(enemyAnim[y][0], enemyAnim[y][1], enemyAnim[y][2], enemyAnim[y][3]); else if ((s.getArchType(y).compareTo(\"lava\")) == 0) enemySprites[y] = new com.brackeen.javagamebook.tilegame.Hazard(enemyAnim[y][0], enemyAnim[y][1], enemyAnim[y][2], enemyAnim[y][3]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7387/buggy-version/src.com.brackeen.javagamebook.tilegame.ResourceManager.java", "BodyUseAPI": ["s.getArchType(y).compareTo(java.lang.String)", "com.brackeen.javagamebook.tilegame.ScriptManager.getArchType(int)", "s.getArchType(y).compareTo(java.lang.String)", "com.brackeen.javagamebook.tilegame.ScriptManager.getArchType(int)", "s.getArchType(y).compareTo(java.lang.String)", "s.getArchType(y).compareTo(java.lang.String)", "com.brackeen.javagamebook.tilegame.ScriptManager.getArchType(int)", "com.brackeen.javagamebook.tilegame.ScriptManager.getArchType(int)"], "Fixed commit": "da5c53fd7ca916b26435087009083e2482b58d01", "Url": "https://api.github.com/repos/UmassD181Project/MarioProject", "Date": "2017-05-01T00:35:37Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getArchType(x).compareTo(\"turtle\")) == 0) enemyAnim[x][i] = createColdAnim(images[i][(imageIndex++)]); else if ((s.getArchType(x).compareTo(\"bird\")) == 0) enemyAnim[x][i] = createFlyAnim(images[i][(imageIndex++)], images[i][(imageIndex++)], images[i][(imageIndex++)]); else if ((s.getArchType(x).compareTo(\"spinner\")) == 0) enemyAnim[x][i] = createDecoAnim(images[i][(imageIndex++)], images[i][(imageIndex++)]); else if ((s.getArchType(x).compareTo(\"hidingWall\")) == 0) enemyAnim[x][i] = createDecoAnim(images[i][(imageIndex++)], images[i][(imageIndex++)]); else if ((s.getArchType(x).compareTo(\"lava\")) == 0) enemyAnim[x][i] = createDecoAnim(images[i][(imageIndex++)], images[i][(imageIndex++)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7387/buggy-version/src.com.brackeen.javagamebook.tilegame.ResourceManager.java", "BodyUseAPI": ["s.getArchType(x).compareTo(java.lang.String)", "com.brackeen.javagamebook.tilegame.ScriptManager.getArchType(int)", "s.getArchType(x).compareTo(java.lang.String)", "s.getArchType(x).compareTo(java.lang.String)", "com.brackeen.javagamebook.tilegame.ScriptManager.getArchType(int)", "com.brackeen.javagamebook.tilegame.ScriptManager.getArchType(int)", "s.getArchType(x).compareTo(java.lang.String)", "com.brackeen.javagamebook.tilegame.ScriptManager.getArchType(int)"], "Fixed commit": "da5c53fd7ca916b26435087009083e2482b58d01", "Url": "https://api.github.com/repos/UmassD181Project/MarioProject", "Date": "2017-05-01T00:35:37Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getShoppingItem().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (item.containsField(DBConstants.F_MAX_PRICE)) { maxPrice = item.getDouble(DBConstants.F_MAX_PRICE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4511/buggy-version/src.com.orange.groupbuy.recommendserver.RecommendRequest.java", "BodyUseAPI": ["com.mongodb.BasicDBObject.getDouble(DBConstants.F_MAX_PRICE)"], "Fixed commit": "cf1bb7f48bdba3795233e6e8c59846cf2eaab091", "Url": "https://api.github.com/repos/gckjdev/GroupBuy_Recommend_Server", "Date": "2011-11-18T09:14:51Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.dundee.computing.aec.instagrim.models.User.RegisterUser(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result) { response.sendRedirect(\"/Instagrim\"); }else { response.sendRedirect(\"register.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8009/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.servlets.Register.java", "BodyUseAPI": [], "Fixed commit": "16cafbdd1ea9157f7e17e2f4709a8974740db7bb", "Url": "https://api.github.com/repos/JavvaTheHutt/instagrim", "Date": "2015-10-02T14:16:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (rs == null) { ps = session.prepare(\"insert into userprofiles (login,password) Values(?,?)\"); boundStatement = new com.datastax.driver.core.BoundStatement(ps); session.execute(boundStatement.bind(username, EncodedPassword)); return true; }else { java.lang.System.out.println(\"Username has already been taken\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8009/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.models.User.java", "BodyUseAPI": [], "Fixed commit": "16cafbdd1ea9157f7e17e2f4709a8974740db7bb", "Url": "https://api.github.com/repos/JavvaTheHutt/instagrim", "Date": "2015-10-02T14:16:43Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(org.freeplane.core.resources.ResourceController.getResourceController().getProperty(TABBEDPANE_VIEW_WIDTH, \"350\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (width <= 10) { width = 350; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3752/buggy-version/freeplane.src.org.freeplane.main.mindmapmode.MModeControllerFactory.java", "BodyUseAPI": [], "Fixed commit": "fb91ab7377dab8c1353c17cbd32558f8e071522c", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-09-23T12:09:23Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((latestVersion) != null) { for (int versions : latestVersion.values()) { counter += versions; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1162/buggy-version/src.main.java.net.tomp2p.vdht.put.Result.java", "BodyUseAPI": [], "Fixed commit": "1ed141182f863d2d2dbc5066fb89dc719dcd90b0", "Url": "https://api.github.com/repos/ippes/vDHTNetworkSimulator", "Date": "2014-08-30T14:30:38Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((frames) > 0) lastSleepTime = (sleepTimes) / (frames);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2370/buggy-version/Astermonamia.src.de.jgroehl.asteromania.utils.FpsMeter.java", "BodyUseAPI": [], "Fixed commit": "0d908941c37b3735ded9b63d5be9df5cb0f56695", "Url": "https://api.github.com/repos/Asteromania/Asteromania", "Date": "2014-06-19T09:44:35Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstWord.equals(itinerary.parser.Parser.COMMAND_HELP_QUESTIONMARK)) { firstWord = \"\\\\\" + (itinerary.parser.Parser.COMMAND_HELP_QUESTIONMARK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6092/buggy-version/ProjectItinerary.src.itinerary.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "14de08c7cdac4f149d798509cf12d8bb0e18965a", "Url": "https://api.github.com/repos/cs2103jan2015-w14-2j/main", "Date": "2015-04-05T06:40:30Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((gui.WeeklyCalendarPanel.daynum) + 6) == 30) && (((((gui.WeeklyCalendarPanel.monthnum) == 4) || ((gui.WeeklyCalendarPanel.monthnum) == 6)) || ((gui.WeeklyCalendarPanel.monthnum) == 9)) || ((gui.WeeklyCalendarPanel.monthnum) == 11))) { gui.WeeklyCalendarPanel.daynum = 1; gui.WeeklyCalendarPanel.monthnum = (gui.WeeklyCalendarPanel.monthnum) + 1; }else if ((((gui.WeeklyCalendarPanel.daynum) + 7) == 30) && (((((gui.WeeklyCalendarPanel.monthnum) == 4) || ((gui.WeeklyCalendarPanel.monthnum) == 6)) || ((gui.WeeklyCalendarPanel.monthnum) == 9)) || ((gui.WeeklyCalendarPanel.monthnum) == 11))) { gui.WeeklyCalendarPanel.daynum = 30; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6086/buggy-version/src.gui.WeeklyCalendarPanel.java", "BodyUseAPI": [], "Fixed commit": "d1aecdd1af999e4f8408c6817bd214a0c1f5a552", "Url": "https://api.github.com/repos/Sindrus/FellesProsjekt", "Date": "2012-03-22T09:09:08Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((gui.WeeklyCalendarPanel.daynum) + 6) == 28) && ((gui.WeeklyCalendarPanel.monthnum) == 2)) { gui.WeeklyCalendarPanel.daynum = 1; gui.WeeklyCalendarPanel.monthnum = (gui.WeeklyCalendarPanel.monthnum) + 1; }else if ((((gui.WeeklyCalendarPanel.daynum) + 7) == 28) && ((gui.WeeklyCalendarPanel.monthnum) == 2)) { gui.WeeklyCalendarPanel.daynum = 28; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6086/buggy-version/src.gui.WeeklyCalendarPanel.java", "BodyUseAPI": [], "Fixed commit": "d1aecdd1af999e4f8408c6817bd214a0c1f5a552", "Url": "https://api.github.com/repos/Sindrus/FellesProsjekt", "Date": "2012-03-22T09:09:08Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.pmd.lang.apex.ast.ASTBinaryExpression.getFirstChildOfType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (methodCall != null) { if (net.sourceforge.pmd.lang.apex.rule.security.Helper.isMethodName(methodCall, net.sourceforge.pmd.lang.apex.rule.security.ApexSOQLInjectionRule.STRING, net.sourceforge.pmd.lang.apex.rule.security.ApexSOQLInjectionRule.ESCAPE_SINGLE_QUOTES)) { isSafeVariable = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4801/buggy-version/pmd-apex.src.main.java.net.sourceforge.pmd.lang.apex.rule.security.ApexSOQLInjectionRule.java", "BodyUseAPI": ["net.sourceforge.pmd.lang.apex.rule.security.Helper.isMethodName(net.sourceforge.pmd.lang.apex.ast.ASTMethodCallExpression,java.lang.String,java.lang.String)"], "Fixed commit": "c9bf13d5e0d3be6ba867849beeb624daca51ded8", "Url": "https://api.github.com/repos/oowekyala/pmd", "Date": "2017-04-05T18:34:52Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nickText.getText().toString().contains(\",\")) { android.view.animation.Animation shake = android.view.animation.AnimationUtils.loadAnimation(v.getContext(), R.anim.shake); nickText.startAnimation(shake); android.widget.Toast.makeText(v.getContext(), \"Nickname cannot contain \\\",\\\"\", Toast.LENGTH_SHORT).show(); }else { if (((nickText.getText().toString()) == null) || ((nickText.getText().toString().length()) == 0)) { nickText.setText(\"Stuur buddy\"); } if (!(keyText.getText().toString().equals(selected_key))) { java.lang.String[] params = new java.lang.String[]{ com.stuur.stuur.MainActivity.user_id, keyText.getText().toString() }; com.stuur.stuur.NetworkTask network_task = new com.stuur.stuur.NetworkTask(\"add_friend\", params); java.lang.String[] resp_status = new java.lang.String[0]; try { resp_status = network_task.execute().get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } if (com.stuur.stuur.MainActivity.friend_added.equals(\"1\")) { com.stuur.stuur.MainActivity.deleteFriendLocally(v, final_position); com.stuur.stuur.MainActivity.addFriendLocally(v, nickText.getText().toString(), final_position); com.stuur.stuur.MainActivity.setFriendsLocally(v); if (!(selected_key.equals(keyText.getText().toString()))) { java.lang.String[] params_3 = new java.lang.String[]{ com.stuur.stuur.MainActivity.user_id, selected_key }; com.stuur.stuur.NetworkTask network_task_3 = new com.stuur.stuur.NetworkTask(\"delete_friend\", params_3); java.lang.String[] resp_status_3 = new java.lang.String[0]; try { resp_status_3 = network_task_3.execute().get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } } java.lang.String[] params_2 = new java.lang.String[]{ com.stuur.stuur.MainActivity.user_id }; com.stuur.stuur.NetworkTask network_task_2 = new com.stuur.stuur.NetworkTask(\"get_friends\", params_2); java.lang.String[] resp_status_2 = new java.lang.String[0]; try { resp_status_2 = network_task_2.execute().get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } android.view.View activeView = ((android.view.View) (com.stuur.stuur.MainActivity.mViewPager.findViewWithTag((\"view\" + (com.stuur.stuur.MainActivity.mViewPager.getCurrentItem()))))); android.app.Activity host = ((android.app.Activity) (activeView.getContext())); com.stuur.stuur.MainActivity.refreshFriendsList(activeView, host); android.widget.Toast toast = android.widget.Toast.makeText(v.getContext(), ((\"Congrats! \" + (nickText.getText().toString())) + \" will make a great friend.\"), Toast.LENGTH_SHORT); toast.show(); dialog.dismiss(); }else { android.view.animation.Animation shake = android.view.animation.AnimationUtils.loadAnimation(v.getContext(), R.anim.shake); keyText.startAnimation(shake); keyText.setText(\"\"); android.widget.Toast toast = android.widget.Toast.makeText(v.getContext(), \"Friend not found :/\", Toast.LENGTH_SHORT); toast.show(); } com.stuur.stuur.MainActivity.friend_added = \"0\"; }else { com.stuur.stuur.MainActivity.deleteFriendLocally(v, final_position); com.stuur.stuur.MainActivity.addFriendLocally(v, nickText.getText().toString(), final_position); com.stuur.stuur.MainActivity.setFriendsLocally(v); android.widget.Toast toast = android.widget.Toast.makeText(v.getContext(), ((\"Congrats! \" + (nickText.getText().toString())) + \" will make a great friend.\"), Toast.LENGTH_SHORT); toast.show(); java.lang.String[] params_2 = new java.lang.String[]{ com.stuur.stuur.MainActivity.user_id }; com.stuur.stuur.NetworkTask network_task_2 = new com.stuur.stuur.NetworkTask(\"get_friends\", params_2); java.lang.String[] resp_status_2 = new java.lang.String[0]; try { resp_status_2 = network_task_2.execute().get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } android.view.View activeView = ((android.view.View) (com.stuur.stuur.MainActivity.mViewPager.findViewWithTag((\"view\" + (com.stuur.stuur.MainActivity.mViewPager.getCurrentItem()))))); android.app.Activity host = ((android.app.Activity) (activeView.getContext())); com.stuur.stuur.MainActivity.refreshFriendsList(activeView, host); dialog.dismiss(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1719/buggy-version/Stuur.app.src.main.java.com.stuur.stuur.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)", "nickText.getText().toString()", "android.widget.EditText.getText()", "nickText.getText().toString()", "com.stuur.stuur.MainActivity.addFriendLocally(android.view.View,nickText.getText().toString(),int)", "nickText.getText().toString()", "nickText.getText().toString().length()", "android.widget.EditText.getText()", "android.widget.Toast.makeText(v.getContext(),((\"Congrats! \" + (nickText.getText().toString())) + \" will make a great friend.\"),Toast.LENGTH_SHORT)", "android.widget.EditText.getText()", "nickText.getText().toString()", "android.widget.EditText.startAnimation(android.view.animation.Animation)", "com.stuur.stuur.MainActivity.addFriendLocally(android.view.View,nickText.getText().toString(),int)", "android.widget.EditText.getText()", "android.widget.Toast.makeText(v.getContext(),((\"Congrats! \" + (nickText.getText().toString())) + \" will make a great friend.\"),Toast.LENGTH_SHORT)", "nickText.getText().toString()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "nickText.getText().toString()"], "Fixed commit": "d4802ddeb504b63d6c7b4e9ecab1bde0769b27b5", "Url": "https://api.github.com/repos/beefy/Stuur", "Date": "2016-03-15T22:21:57Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nickText.getText().toString().contains(\",\")) { android.view.animation.Animation shake = android.view.animation.AnimationUtils.loadAnimation(v.getContext(), R.anim.shake); nickText.startAnimation(shake); android.widget.Toast.makeText(v.getContext(), \"Nickname cannot contain \\\",\\\"\", Toast.LENGTH_SHORT).show(); }else { if (((nickText.getText().toString()) == null) || ((nickText.getText().toString().length()) == 0)) { nickText.setText(\"Stuur buddy\"); } java.lang.String[] params = new java.lang.String[]{ com.stuur.stuur.MainActivity.user_id, keyText.getText().toString() }; com.stuur.stuur.NetworkTask network_task = new com.stuur.stuur.NetworkTask(\"add_friend\", params); java.lang.String[] resp_status = new java.lang.String[0]; try { resp_status = network_task.execute().get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } if (com.stuur.stuur.MainActivity.friend_added.equals(\"1\")) { com.stuur.stuur.MainActivity.addFriendLocally(v, nickText.getText().toString(), com.stuur.stuur.MainActivity.friend_nicks.length); com.stuur.stuur.MainActivity.setFriendsLocally(v); java.lang.String[] params_2 = new java.lang.String[]{ com.stuur.stuur.MainActivity.user_id }; com.stuur.stuur.NetworkTask network_task_2 = new com.stuur.stuur.NetworkTask(\"get_friends\", params_2); java.lang.String[] resp_status_2 = new java.lang.String[0]; try { resp_status_2 = network_task_2.execute().get(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } catch (java.util.concurrent.ExecutionException e) { e.printStackTrace(); } android.view.View activeView = ((android.view.View) (com.stuur.stuur.MainActivity.mViewPager.findViewWithTag((\"view\" + (com.stuur.stuur.MainActivity.mViewPager.getCurrentItem()))))); android.app.Activity host = ((android.app.Activity) (activeView.getContext())); com.stuur.stuur.MainActivity.refreshFriendsList(activeView, host); android.widget.Toast toast = android.widget.Toast.makeText(v.getContext(), ((\"Congrats! \" + (nickText.getText().toString())) + \" will make a great friend.\"), Toast.LENGTH_SHORT); toast.show(); dialog.dismiss(); }else { android.view.animation.Animation shake = android.view.animation.AnimationUtils.loadAnimation(v.getContext(), R.anim.shake); keyText.startAnimation(shake); keyText.setText(\"\"); android.widget.Toast toast = android.widget.Toast.makeText(v.getContext(), \"Friend not found :/\", Toast.LENGTH_SHORT); toast.show(); } com.stuur.stuur.MainActivity.friend_added = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1719/buggy-version/Stuur.app.src.main.java.com.stuur.stuur.MainActivity.java", "BodyUseAPI": ["nickText.getText().toString()", "android.widget.EditText.startAnimation(android.view.animation.Animation)", "android.widget.EditText.getText()", "nickText.getText().toString()", "nickText.getText().toString().length()", "nickText.getText().toString()", "nickText.getText().toString()", "android.widget.Toast.makeText(v.getContext(),((\"Congrats! \" + (nickText.getText().toString())) + \" will make a great friend.\"),Toast.LENGTH_SHORT)", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "android.widget.EditText.setText(java.lang.String)", "com.stuur.stuur.MainActivity.addFriendLocally(android.view.View,nickText.getText().toString(),int)"], "Fixed commit": "d4802ddeb504b63d6c7b4e9ecab1bde0769b27b5", "Url": "https://api.github.com/repos/beefy/Stuur", "Date": "2016-03-15T22:21:57Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { user = new battleships.model.User(session.getId(), name); session.setAttribute(\"user\", user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1377/buggy-version/src.main.java.battleships.controller.InitController.java", "BodyUseAPI": [], "Fixed commit": "c2a585011c291dd84aac8f821ad32c2b50157282", "Url": "https://api.github.com/repos/ikomissarov/battleships", "Date": "2017-04-24T09:12:14Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (worker != null) { worker.tell(new com.intel.distml.platform.MonitorActor.VariableChange(name, value), getSelf()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7766/buggy-version/src.main.java.com.intel.distml.platform.MonitorActor.java", "BodyUseAPI": ["com.intel.distml.platform.ActorRef.tell(com.intel.distml.platform.MonitorActor.VariableChange,getSelf())"], "Fixed commit": "afa487b9869b2b1323b83e897a8366125c6fb2ca", "Url": "https://api.github.com/repos/intel-machine-learning/DistML", "Date": "2015-08-27T21:32:37Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (set == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7766/buggy-version/src.main.java.com.intel.distml.model.sparselr.SparseLRModel.java", "BodyUseAPI": [], "Fixed commit": "afa487b9869b2b1323b83e897a8366125c6fb2ca", "Url": "https://api.github.com/repos/intel-machine-learning/DistML", "Date": "2015-08-27T21:32:37Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pref.getBoolean(com.germainz.hodor.Hodor.HODOOOR, false)) { java.lang.CharSequence hodorHodorHodor = ((java.lang.CharSequence) (hodorHodorHODOR.args[com.germainz.hodor.Hodor.HOOODOOOR])); if (hodorHodorHodor != null) { java.lang.String hodor = hodorHodorHodor.toString().replaceAll(com.germainz.hodor.Hodor.HODOR_HODOR, com.germainz.hodor.Hodor.HODOR); hodorHodorHODOR.args[com.germainz.hodor.Hodor.HOOODOOOR] = hodor; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2727/buggy-version/src.com.germainz.hodor.Hodor.java", "BodyUseAPI": [], "Fixed commit": "943edca08ce551981a8aeff3a58caadd2fd84f40", "Url": "https://api.github.com/repos/hamzahrmalik/Hodor", "Date": "2014-07-09T17:27:36Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.construction.pm.models.ProjectStageModel.getStageFromCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (stageFromCode != null) { if (stageFromCode.isEmpty()) stageFromCode = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7669/buggy-version/app.src.main.java.com.construction.pm.views.project_stage.ProjectStageListView.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "6eed1a96ebbfb2caa630f499d7f489d997c664e0", "Url": "https://api.github.com/repos/firmandata/android-project_management", "Date": "2017-04-02T08:14:09Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (stageFromCodeRef != null) { if (stageFromCodeRef.isEmpty()) stageFromCodeRef = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7669/buggy-version/app.src.main.java.com.construction.pm.views.project_stage.ProjectStageListView.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "6eed1a96ebbfb2caa630f499d7f489d997c664e0", "Url": "https://api.github.com/repos/firmandata/android-project_management", "Date": "2017-04-02T08:14:09Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (statusCode < 400) { is = urlConnection.getInputStream(); }else { is = urlConnection.getErrorStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6433/buggy-version/src.main.java.com.pipl.api.search.SearchAPIRequest.java", "BodyUseAPI": [], "Fixed commit": "4ca07a17eece569d09902a25592a95c513529312", "Url": "https://api.github.com/repos/piplcom/piplapis-java", "Date": "2016-12-14T13:38:38Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.rstudio.studio.client.application.Desktop.isDesktop()) return org.rstudio.core.client.StringUtil.notNull(fixedWidthFont).equals(\"\\\"Ubuntu Mono\\\"\"); else return org.rstudio.core.client.widget.FontDetector.isFontSupported(\"Ubuntu Mono\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8678/buggy-version/src.gwt.src.org.rstudio.core.client.BrowseCap.java", "BodyUseAPI": [], "Fixed commit": "144985e2b9b22e18d86b1d2c116ee46104ca5174", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2012-03-13T22:56:06Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetEnemy == null) targetEnemy = e;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3651/buggy-version/src.tower.Tower.java", "BodyUseAPI": [], "Fixed commit": "3a8aae03abdcc97de59f4476f3162aadd4487337", "Url": "https://api.github.com/repos/JoschkaSchulz/colordefense", "Date": "2012-12-11T22:10:41Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slot == 4) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3239/buggy-version/src.main.java.com.iconmaster.aec2.gui.ContainerForge.java", "BodyUseAPI": [], "Fixed commit": "36a6fab3fbaf5707d83d7462d395c6f07b34d575", "Url": "https://api.github.com/repos/iconmaster5326/AetherCraft2", "Date": "2015-02-27T18:43:44Z"},
{"Line": "=>777", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (k != null) { hex.gbm.UKV.put(k, ts[j], fs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5898/buggy-version/src.main.java.hex.gbm.DTree.java", "BodyUseAPI": ["hex.gbm.UKV.put(hex.gbm.Key,hex.gbm.DTree.TreeModel.CompressedTree,hex.gbm.Futures)"], "Fixed commit": "f8551ea996ba968dda284612a6d912f1d2f67c72", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-07-22T22:39:33Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ProgTexto.inserirManual(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sucesso) total = mostrarConta();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7182/buggy-version/ProgTexto.java", "BodyUseAPI": [], "Fixed commit": "f31256bcf15f0aaeecdb6fba20bac7a4ef4f4d9f", "Url": "https://api.github.com/repos/alexandre1985/lista-precos", "Date": "2015-12-05T15:02:05Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flags & ((((abstractgame.io.user.PerfIO.BUTTON_UP) | (abstractgame.io.user.PerfIO.BUTTON_DOWN)) | (abstractgame.io.user.PerfIO.BUTTON_RELEASED)) | (abstractgame.io.user.PerfIO.BUTTON_PRESSED))) == 0) throw new abstractgame.util.ApplicationException(\"Invalid Flag\", \"KEYBINDS\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5003/buggy-version/client.abstractgame.io.user.PerfIO.java", "BodyUseAPI": [], "Fixed commit": "2b3ac8fcee16ce64695e5d83c86bd17c0db0b368", "Url": "https://api.github.com/repos/Brownshome/Abstract", "Date": "2016-03-14T07:20:24Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flags & ((((abstractgame.io.user.PerfIO.BUTTON_UP) | (abstractgame.io.user.PerfIO.BUTTON_DOWN)) | (abstractgame.io.user.PerfIO.BUTTON_RELEASED)) | (abstractgame.io.user.PerfIO.BUTTON_PRESSED))) == 0) throw new abstractgame.util.ApplicationException(\"Invalid Flag\", \"KEYBINDS\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5003/buggy-version/client.abstractgame.io.user.PerfIO.java", "BodyUseAPI": [], "Fixed commit": "2b3ac8fcee16ce64695e5d83c86bd17c0db0b368", "Url": "https://api.github.com/repos/Brownshome/Abstract", "Date": "2016-03-14T07:20:24Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6739/buggy-version/src.ch.unibas.cs.dbis.cineast.core.runtime.ContinousQueryDispatcher.java", "BodyUseAPI": [], "Fixed commit": "5c6f5afe20094829a3e0e092527bac9461925031", "Url": "https://api.github.com/repos/vitrivr/cineast", "Date": "2016-05-17T09:19:19Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((humanSample.getMolecularCharacterizations()) == null) { mc = new org.pdxfinder.commands.MolecularCharacterization(mutation.getPlatform()); mas.add(ma); mc.setMarkerAssociations(mas); java.util.Set<org.pdxfinder.commands.MolecularCharacterization> mcs = new java.util.HashSet<>(); mcs.add(mc); humanSample.setMolecularCharacterizations(mcs); }else { for (org.pdxfinder.commands.MolecularCharacterization mc2 : humanSample.getMolecularCharacterizations()) { if (mc2.getTechnology().equals(mutation.getPlatform())) { mc = mc2; break; } } if (mc == null) { mc = new org.pdxfinder.commands.MolecularCharacterization(mutation.getPlatform()); } mc.getMarkerAssociations().add(ma); java.util.Set<org.pdxfinder.commands.MolecularCharacterization> mcs = new java.util.HashSet<>(); mcs.add(mc); humanSample.setMolecularCharacterizations(mcs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9029/buggy-version/indexer.src.main.java.org.pdxfinder.commands.LoadIRCCData.java", "BodyUseAPI": ["org.pdxfinder.commands.Sample.setMolecularCharacterizations(java.util.Set<org.pdxfinder.commands.MolecularCharacterization>)", "org.pdxfinder.commands.Sample.getMolecularCharacterizations()", "org.pdxfinder.commands.Sample.setMolecularCharacterizations(java.util.Set<org.pdxfinder.commands.MolecularCharacterization>)"], "Fixed commit": "cb3ccf3868395f04245427a3720ba5693de69e08", "Url": "https://api.github.com/repos/PDXFinder/pdxfinder", "Date": "2017-09-08T10:17:15Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.phillm.irctots3chat.IRCListener.getTS3()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ts3Bot != null) { com.github.theholywaffle.teamspeak3.TS3Api api = ts3Bot.getAPI(); if (api != null) { api.sendChannelMessage(((nickname + \" : \") + message)); }else { java.lang.System.out.println(\"Can't send to TS3: got null api ref.\"); } }else { java.lang.System.out.println(\"Can't send to TS3: bot not initalsed yet.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/869/buggy-version/src.main.java.net.phillm.irctots3chat.IRCListener.java", "BodyUseAPI": ["net.phillm.irctots3chat.TS3Bot.getAPI()"], "Fixed commit": "279966da15c22c680f405e52da271b73d1ee709b", "Url": "https://api.github.com/repos/phillmac/ChatBridge", "Date": "2015-12-08T02:52:03Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sx.blah.discord.handle.impl.events.MessageReceivedEvent.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (msg.getContent().startsWith(\"%dc\")) { if ((msg.getContent().split(\" \").length) > 1) { if (msg.getContent().substring(4).equals(\"quit\")) { db.excluirInstancia(playerId, guildaId, \"descubraLol_instancias\"); return; }else { BarrosCompany.ModestoDiscord.Handlers.MensageHandler.erroComandoInvalido(msg); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6187/buggy-version/src.main.java.BarrosCompany.ModestoDiscord.Jogos.jDescubraLol.java", "BodyUseAPI": ["BarrosCompany.ModestoDiscord.Handlers.MensageHandler.erroComandoInvalido(sx.blah.discord.handle.obj.IMessage)", "sx.blah.discord.handle.obj.IMessage.getContent()", "msg.getContent().substring(int)", "msg.getContent().split(java.lang.String)", "sx.blah.discord.handle.obj.IMessage.getContent()", "msg.getContent().substring(4).equals(java.lang.String)"], "Fixed commit": "bdc35e7d5b6655a97c7d977634ffd71135aae12f", "Url": "https://api.github.com/repos/lucasbam/Modesto_bot", "Date": "2017-03-06T00:15:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.app.ui.entities.MetadataValueVO.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (keywords != null) { for (java.lang.String keyword : keywords) { if ((sb.length()) > 0) { sb.append(\", \"); } sb.append(keyword); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7660/buggy-version/app.src.com.constellio.app.modules.rm.ui.components.RMMetadataDisplayFactory.java", "BodyUseAPI": [], "Fixed commit": "398c16df116dbdd194f686475d2b7a712f8c835c", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2016-11-24T17:20:10Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isBlank(month)) && (org.apache.commons.lang3.StringUtils.isNotBlank(day))) { return org.gbif.common.parsers.core.ParseResult.fail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7913/buggy-version/src.main.java.org.gbif.common.parsers.date.threeten.ThreeTenNumericalDateParser.java", "BodyUseAPI": [], "Fixed commit": "357c25c442276e16d45c62000abaa5a24481739b", "Url": "https://api.github.com/repos/gbif/parsers", "Date": "2016-05-10T14:56:20Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((month == null) && (day != null)) { return org.gbif.common.parsers.core.ParseResult.fail(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7913/buggy-version/src.main.java.org.gbif.common.parsers.date.threeten.ThreeTenNumericalDateParser.java", "BodyUseAPI": [], "Fixed commit": "357c25c442276e16d45c62000abaa5a24481739b", "Url": "https://api.github.com/repos/gbif/parsers", "Date": "2016-05-10T14:56:20Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.getServletContext().getRealPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(appDir.endsWith(java.io.File.separator))) { appDir += java.io.File.separator; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7282/buggy-version/src.org.iweb.sys.IWebConfig.java", "BodyUseAPI": [], "Fixed commit": "2744a5ac1ad79667d60a164aff58113ae77c9174", "Url": "https://api.github.com/repos/TYD-QKJ/qkjebiz", "Date": "2014-12-20T11:32:12Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mcjty.rftools.items.dimlets.KnownDimletConfiguration.getEntry(mcjty.rftools.items.dimlets.DimletKey)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (entry != null) { return (((mcjty.rftools.items.storage.DimletTypeItem.PATTERN.matcher(stack.getDisplayName()).replaceAll(\"\")) + \" (R\") + (entry.getRarity())) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8418/buggy-version/src.main.java.mcjty.rftools.items.storage.DimletTypeItem.java", "BodyUseAPI": ["mcjty.rftools.items.dimlets.DimletEntry.getRarity()"], "Fixed commit": "ff8a6cf5bbc4f55b0a9cf3b542796201f10e3b47", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-05-24T17:29:03Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(naniteGroup.getPosition().getEnvironment().needsPassivation())) { content.returnToPreviousState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4690/buggy-version/webapp.src.main.java.net.micwin.elysium.bpo.NaniteBPO.java", "BodyUseAPI": [], "Fixed commit": "edc14eabc84db18abb8e710c68b4e7314b102595", "Url": "https://api.github.com/repos/micwin/open-space", "Date": "2012-09-01T10:18:09Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getPackageManager().hasSystemFeature(PackageManager.FEATURE_BLUETOOTH_LE)) { android.util.Log.i(org.doubango.imsdroid.Screens.ScreenDirection.TAG, \"support BT 4.0\"); BLEActivity = new org.doubango.imsdroid.BLE.BLEDeviceScanActivity(); BLEActivity.BLEDeviceScanStart(this); }else android.util.Log.i(org.doubango.imsdroid.Screens.ScreenDirection.TAG, \"not support BT 4.0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5409/buggy-version/src.org.doubango.imsdroid.Screens.ScreenDirection.java", "BodyUseAPI": [], "Fixed commit": "a039f779e26092c5d34766535ff1d6ec5b27f1b3", "Url": "https://api.github.com/repos/william30101/IMSdroid", "Date": "2014-12-08T13:37:51Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.Activity.getSystemService(v.BLUETOOTH_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bluetoothManager == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5409/buggy-version/src.org.doubango.imsdroid.BLE.BLEDeviceScanActivity.java", "BodyUseAPI": [], "Fixed commit": "a039f779e26092c5d34766535ff1d6ec5b27f1b3", "Url": "https://api.github.com/repos/william30101/IMSdroid", "Date": "2014-12-08T13:37:51Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.silentchaos512.gems.api.tool.part.ToolPartRegistry.fromStack(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((part == null) || (part.isBlacklisted(stack))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3251/buggy-version/common.net.silentchaos512.gems.recipe.RecipeMultiGemBow.java", "BodyUseAPI": [], "Fixed commit": "9082c38c1af92787c97b19b2c99e3115cabd64b1", "Url": "https://api.github.com/repos/SilentChaos512/SilentGems", "Date": "2016-11-29T04:31:53Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) getActivity().runOnUiThread(() -> mPresenter.loadTranslation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1846/buggy-version/app.src.main.java.com.example.kimichael.yandextranslate.sections.translate.TranslateFragment.java", "BodyUseAPI": [], "Fixed commit": "8270baca6e5100b7f1f3c66464047c60a4ab5fb8", "Url": "https://api.github.com/repos/kimichael/mobilization-translator", "Date": "2017-04-29T09:11:58Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTranslatorBlockAtSocketNull((i + 1))) { ret += \";\"; i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8781/buggy-version/ardublock-master.src.main.java.com.ardublock.translator.block.SwitchBlock.java", "BodyUseAPI": [], "Fixed commit": "772cfccdac6774abf44268a7cfdf0272c2679435", "Url": "https://api.github.com/repos/rk-lakshmanan/fiveBlocks", "Date": "2015-07-17T04:49:08Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getSession().getPlayer()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1411/buggy-version/src.main.java.org.dragonet.net.translator.tope.EntityEquipmentMessageTranslator.java", "BodyUseAPI": [], "Fixed commit": "11cdf4390eb085071bc8d5ed6037ec46f83c0fa4", "Url": "https://api.github.com/repos/DragonetMC/Dragonet-Legacy", "Date": "2015-05-23T07:13:16Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(sentence.matches(\"\\\\s*\"))) { Sentence s = new Sentence(sentence); sentenceList.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7226/buggy-version/src.main.java.Passage.java", "BodyUseAPI": [], "Fixed commit": "37ad053049d4790e32d17370627b4b1370387bbb", "Url": "https://api.github.com/repos/leahrnh/727", "Date": "2016-04-19T04:15:39Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yCoordinate > (maxHeight)) { maxHeight = yCoordinate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1350/buggy-version/src.main.java.application.fxobjects.layout.GraphLayout.java", "BodyUseAPI": [], "Fixed commit": "9afbc0d232f357ea09ccdbd5b43aede9ad2170be", "Url": "https://api.github.com/repos/ProgrammingLife2016/PL4-2016", "Date": "2016-06-15T14:21:46Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yCoordinate > (maxHeight)) { maxHeight = yCoordinate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1350/buggy-version/src.main.java.application.fxobjects.layout.GraphLayout.java", "BodyUseAPI": [], "Fixed commit": "9afbc0d232f357ea09ccdbd5b43aede9ad2170be", "Url": "https://api.github.com/repos/ProgrammingLife2016/PL4-2016", "Date": "2016-06-15T14:21:46Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (context != null) { android.widget.Toast.makeText(context, text, duration).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6181/buggy-version/app.src.main.java.com.gcw.sapienza.places.utils.PlacesUtils.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,java.lang.String,int)", "android.widget.Toast.makeText(context, text, duration).show()"], "Fixed commit": "a6de2de813935cf2f2465fabf0f177fefe15f8e6", "Url": "https://api.github.com/repos/Natio/Places", "Date": "2015-04-23T13:35:28Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newVisitor.getColumns().isEmpty())) { for (com.alibaba.druid.stat.TableStat.Column col : newVisitor.getColumns()) { java.lang.String newTableName = col.getTable(); java.lang.String newColName = col.getName(); if (!(newColName.equalsIgnoreCase(colName_lcase))) { toRealColumn(expr, fromVisitor, targetCols, newTableName, newColName, aliMap); }else { concatColumn(fromVisitor, targetCols, newTableName, newColName, aliMap); } } }else { concatColumn(fromVisitor, targetCols, tbName_lcase, colName_lcase, aliMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3826/buggy-version/src.main.java.com.ebay.dss.druidapp.ColumnImpact.java", "BodyUseAPI": ["com.alibaba.druid.sql.dialect.teradata.visitor.TeradataSchemaStatVisitor.getColumns()"], "Fixed commit": "6be41725c7da1464ba5c65a71e734a5862e6c8e3", "Url": "https://api.github.com/repos/usakey/druidapp", "Date": "2016-04-19T11:27:14Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((locator.length) < 2) { return new com.synaptix.toast.core.report.TestResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/698/buggy-version/src.main.java.com.synaptix.toast.adapter.swing.AbstractSwingActionAdapter.java", "BodyUseAPI": [], "Fixed commit": "df552415c04466ee4227ff6a522b0e4553850d5a", "Url": "https://api.github.com/repos/toast-tk/toast-tk-fest-plugin", "Date": "2016-05-23T17:30:25Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doError) { message += new java.lang.StringBuilder(((\"<br/>Invalid User Command '\" + message) + \"'.\")).append(\"<br/>List of commands:\").append(\"<br/>\\\\history or \\\\h [username] - shows the history of a player\").append(\"<br/>\\\\list or \\\\l - Show a list of commands\").append(\"<br/>\\\\whisper or \\\\w [player name] [text] - whisper to the player with the given name\").toString(); chatSessions.get(chatId).broadcastInfoToUser(user, message); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/663/buggy-version/Mage.Server.src.main.java.mage.server.ChatManager.java", "BodyUseAPI": [], "Fixed commit": "81e5c2b50e1b5326ebb55fe08e4ec354506128ff", "Url": "https://api.github.com/repos/drmDev/mage", "Date": "2016-03-06T13:13:31Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isNotDestroyed())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3289/buggy-version/jsettlers.logic.src.main.java.jsettlers.logic.buildings.military.OccupyingBuilding.java", "BodyUseAPI": [], "Fixed commit": "1e5ed08fd24453e0f809514e3318ff1627dbba9f", "Url": "https://api.github.com/repos/andreas-eberle/settlers-remake", "Date": "2016-05-23T16:48:46Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progress.getLastItem()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6240/buggy-version/src.quester.net.citizensnpcs.questers.quests.types.DeliveryQuest.java", "BodyUseAPI": [], "Fixed commit": "9140608b68697c9bfd3c2d933ec9c8a3d3ef5aac", "Url": "https://api.github.com/repos/CitizensDev/Citizens", "Date": "2011-08-25T15:18:37Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.renderBuffer) != null) c.renderBuffer.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6129/buggy-version/src.com.nilunder.bdx.Scene.java", "BodyUseAPI": ["c.renderBuffer.dispose()"], "Fixed commit": "03a17e27fa2675ca6bed3ab2bc1f7871d168dc46", "Url": "https://api.github.com/repos/SolarLune/bdx", "Date": "2016-05-13T23:08:22Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enableIndex) { saveIndex(record); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8916/buggy-version/hazelcast.src.main.java.com.hazelcast.map.DefaultRecordStore.java", "BodyUseAPI": [], "Fixed commit": "0379ec436d64fd6e698a5bf97c5e04158c06db87", "Url": "https://api.github.com/repos/ahmetmircik/hazelcast", "Date": "2013-11-21T19:34:57Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, core.metamodel.value.categoric.NominalValue>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (nv == null) nv = new core.metamodel.value.categoric.NominalValue(this, val);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1493/buggy-version/core.src.main.java.core.metamodel.value.categoric.NominalSpace.java", "BodyUseAPI": [], "Fixed commit": "9298527cbda4a27afd603046988804c870c5e27e", "Url": "https://api.github.com/repos/ANRGenstar/genstar", "Date": "2017-12-04T09:40:30Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object instanceof Network.getLobbyRequest) { connection.sendTCP(new com.mygdx.game.Networking.Network.CreateLobbyResponse(com.mygdx.game.Networking.Server.LobbyServer.lobbyList)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2021/buggy-version/core.src.com.mygdx.game.Networking.Server.LobbyServer.java", "BodyUseAPI": [], "Fixed commit": "4a4428176d96906b070ffff8bb8d22896631f8e7", "Url": "https://api.github.com/repos/drokii/SKRRRT", "Date": "2017-12-05T23:29:04Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["descriptorSetFile.value.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (descriptorSetDir != null) { descriptorSetDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5759/buggy-version/src.main.java.com.google.common.html.plugin.proto.RunProtoc.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "0500a214bf5b41248eb092031ad05b860bddf54f", "Url": "https://api.github.com/repos/mikesamuel/closure-maven-plugin", "Date": "2016-08-11T16:29:15Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapterWrapper) != null) getInputAdapter().unregisterDataSetObserver(mObserver);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8505/buggy-version/app.src.main.java.com.mobeta.android.dslv.DragSortListView.java", "BodyUseAPI": [], "Fixed commit": "047000d9e69c746926f5df70997368a09585c9bb", "Url": "https://api.github.com/repos/mrichards42/fasola_android", "Date": "2015-05-11T04:12:05Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choice.equals(\"r\")) { if ((player.attackSpeed) >= (enemy.attackSpeed)) { java.lang.System.out.println(\"You choose the coward way and you fleed.\"); return java.lang.Boolean.FALSE; }else { java.lang.System.out.println(\"Your enemy is faster than you. You couldn't run away from him.\"); } }else { player.attack_to(enemy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1480/buggy-version/koc.Fight.java", "BodyUseAPI": [], "Fixed commit": "5332349f11341e8f01064a80eeb9cb92cbaf2222", "Url": "https://api.github.com/repos/buzcu/KoC", "Date": "2016-01-11T09:12:01Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResult) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6485/buggy-version/src.de.htwsaar.chessbot.engine.util.Perft.java", "BodyUseAPI": [], "Fixed commit": "93de63bbf0eac0058113d9c171b007865b676268", "Url": "https://api.github.com/repos/johnniegf/chessbot", "Date": "2015-10-09T11:41:51Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!selected) { cl.highlightingChange(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6711/buggy-version/src.main.java.org.openshapa.models.db.MongoCell.java", "BodyUseAPI": [], "Fixed commit": "6ff6f688f0a586cb9c88d707aa82a9c40cc3ad74", "Url": "https://api.github.com/repos/OpenSHAPA/openshapa", "Date": "2013-01-11T21:40:32Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(addHitToBuffer(subHit))) { alreadyprocessed++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6572/buggy-version/external.elasticsearch.src.main.java.com.digitalpebble.stormcrawler.elasticsearch.persistence.CollapsingSpout.java", "BodyUseAPI": [], "Fixed commit": "27b0d101713db01ee09b9a7989ae355fd8cde9ce", "Url": "https://api.github.com/repos/DigitalPebble/storm-crawler", "Date": "2017-03-30T14:53:55Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(addHitToBuffer(hit))) { alreadyprocessed++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6572/buggy-version/external.elasticsearch.src.main.java.com.digitalpebble.stormcrawler.elasticsearch.persistence.CollapsingSpout.java", "BodyUseAPI": [], "Fixed commit": "27b0d101713db01ee09b9a7989ae355fd8cde9ce", "Url": "https://api.github.com/repos/DigitalPebble/storm-crawler", "Date": "2017-03-30T14:53:55Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((save.getFirstComponentByName(\"dayTimeMod\")) != null) { dayTimeMod = engine.save.SaveData.loadFloat(save, \"dayTimeMod\", dayTimeMod); nightTimeMod = engine.save.SaveData.loadFloat(save, \"nightTimeMod\", nightTimeMod); dayTimeMod = java.lang.Math.min(java.lang.Math.max(0, dayTimeMod), 5.0F); nightTimeMod = java.lang.Math.min(java.lang.Math.max(0, nightTimeMod), 5.0F); dayTimeMod = ((int) ((dayTimeMod) * 10)) / 10.0F; nightTimeMod = ((int) ((nightTimeMod) * 10)) / 10.0F; if (((dayTimeMod) == 0.0F) && ((nightTimeMod) == 0.0F)) dayTimeMod = 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3895/buggy-version/src.engine.world.WorldSettings.java", "BodyUseAPI": ["engine.save.SaveData.loadFloat(engine.save.SaveComponent,java.lang.String,float)", "engine.save.SaveData.loadFloat(engine.save.SaveComponent,java.lang.String,float)"], "Fixed commit": "6fe58342cbc7b73afb53fb137a0d94f3bda5b13f", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-05-01T00:43:27Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.exists()) { java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/505/buggy-version/app.sav.commons.src.main.java.sav.strategies.junit.SavJunitRunner.java", "BodyUseAPI": [], "Fixed commit": "3b1f8e07019580a9b4b3a6649d1592bc82ad8266", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-10-23T09:29:35Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((event.getExtendedProperties()) != null) && ((event.getExtendedProperties().getPrivate()) != null)) { result.setExchangeId(event.getExtendedProperties().getPrivate().get(com.zerodes.exchangesync.calendarsource.google.GoogleCalendarSourceImpl.EXT_PROPERTY_EXCHANGE_ID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5827/buggy-version/src.main.java.com.zerodes.exchangesync.calendarsource.google.GoogleCalendarSourceImpl.java", "BodyUseAPI": ["com.zerodes.exchangesync.calendarsource.google.GoogleAppointmentDto.setExchangeId(event.getExtendedProperties().getPrivate().get(com.zerodes.exchangesync.calendarsource.google.GoogleCalendarSourceImpl.EXT_PROPERTY_EXCHANGE_ID))", "event.getExtendedProperties().getPrivate().get(java.lang.String)", "com.google.api.services.calendar.model.Event.getExtendedProperties()", "event.getExtendedProperties().getPrivate()"], "Fixed commit": "bb1b812c7afd4ff42c4dbd4a58b5095a091d5d57", "Url": "https://api.github.com/repos/gdenning/exchange-sync", "Date": "2017-04-08T20:23:23Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(mExplain)) { requestPermission(); }else { showExplainDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6495/buggy-version/permissionslib.src.main.java.com.kcode.permissionslib.main.RequestActivity.java", "BodyUseAPI": [], "Fixed commit": "936a9b2ba9b280a833c0403dcf1567cd9e9598a7", "Url": "https://api.github.com/repos/fccaikai/AndroidPermissionX", "Date": "2017-02-21T02:18:18Z"},
{"Line": "=>754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["conn.getContext().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((httpRequest != null) && (NhttpConstants.HTTP_HEAD.equalsIgnoreCase(httpRequest.getRequestLine().getMethod()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4886/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.nhttp.ServerHandler.java", "BodyUseAPI": [], "Fixed commit": "577f6afb76441c672232d3bc33ed796b38660941", "Url": "https://api.github.com/repos/VijithaEkanayake/wso2-synapse", "Date": "2015-06-11T16:54:50Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((evaluator.getLocalEvaluationResult(vertex)) == null) { evaluator.setLocalEvaluationResult(vertex, createdNFA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7277/buggy-version/src.de.uni_koblenz.jgralab.greql2.evaluator.vertexeval.PathDescriptionEvaluator.java", "BodyUseAPI": ["de.uni_koblenz.jgralab.greql2.evaluator.InternalGreqlEvaluator.setLocalEvaluationResult(de.uni_koblenz.jgralab.greql2.evaluator.vertexeval.PathDescriptionEvaluator,de.uni_koblenz.jgralab.greql2.evaluator.fa.NFA)"], "Fixed commit": "16bc36da98cf14e7daea7f0beb11e2830b2d31c3", "Url": "https://api.github.com/repos/jgralab/jgralab", "Date": "2012-05-03T15:24:23Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEditId) != null) outState.putLong(\"editId\", mEditId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1104/buggy-version/myHoard.src.main.java.com.myhoard.app.fragments.CollectionFragment.java", "BodyUseAPI": [], "Fixed commit": "751a7d73e6ba62ba2437be77e13322d1953a9cad", "Url": "https://api.github.com/repos/blstream/myHoard_Android", "Date": "2014-03-01T10:55:20Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codenvy.ide.api.app.AppContext.getCurrentProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentProject == null) { totalActiveTimeTimer.cancel(); isAnyAppRunning = false; isLastAppHealthOk = false; stopCheckingAppStatus(descriptor); stopCheckingAppOutput(descriptor); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9016/buggy-version/codenvy-ext-runner.src.main.java.com.codenvy.ide.extension.runner.client.run.RunnerController.java", "BodyUseAPI": [], "Fixed commit": "3c38bbd04e5d93350c807bfec0275fd6e575074a", "Url": "https://api.github.com/repos/codenvy/ide", "Date": "2014-09-11T14:22:32Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ae.getLength()) == 10) { inc.setEnabled(false); dec.setEnabled(true); }else if ((ae.getLength()) == 1000) { inc.setEnabled(true); dec.setEnabled(false); }else { inc.setEnabled(true); dec.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2718/buggy-version/src.sortvisualization.Window.java", "BodyUseAPI": ["sortvisualization.AudioEngine.getLength()"], "Fixed commit": "4fc2add61ccc072344a87216a220b59242c30108", "Url": "https://api.github.com/repos/KovuTheHusky/SortVisualization", "Date": "2013-04-27T23:38:40Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.equals(profile, \"FieldTrip\")) { offset++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/661/buggy-version/api2-war.src.main.java.eu.europeana.api2.v2.web.controller.SearchController.java", "BodyUseAPI": [], "Fixed commit": "dc5bc3e101b2c96752edf556ab15eb19e57e7547", "Url": "https://api.github.com/repos/europeana/api2", "Date": "2014-05-14T14:23:56Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isJobInterruptible()) jobInterrupted = true; else throw new org.quartz.UnableToInterruptJobException(((\"The job \" + (getJobDescription().name())) + \" can't be interrupted.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5276/buggy-version/Frameworks.Misc.ERQuartzScheduler.Sources.main.er.quartzscheduler.foundation.ERQSJob.java", "BodyUseAPI": [], "Fixed commit": "bd3000a023aa21ca9b3c5cb1fd8e924ddc6833c9", "Url": "https://api.github.com/repos/Sophiacom/wonder", "Date": "2013-05-02T08:23:57Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { android.content.Intent shareIntent = new android.content.Intent(android.content.Intent.ACTION_SEND); shareIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT); shareIntent.setType(\"text/plain\"); shareIntent.putExtra(Intent.EXTRA_TEXT, ((getString(R.string.share_text)) + (bookTitle))); shareActionProvider.setShareIntent(shareIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8486/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "76090ecb7c4b91194fd340581223da3cf89429b8", "Url": "https://api.github.com/repos/pdrogfer/P3-Udacity", "Date": "2016-02-28T19:00:07Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ricoh.pos.model.RegisterManager.findOrderOfTheProduct(com.ricoh.pos.data.Product)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (order == null) { return 0; }else { return order.getNumberOfOrder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1518/buggy-version/AndroidPOS.src.com.ricoh.pos.model.RegisterManager.java", "BodyUseAPI": ["com.ricoh.pos.data.Order.getNumberOfOrder()"], "Fixed commit": "f02ce2ac81968e2f5d0dea7171e9f0fd4537b6bb", "Url": "https://api.github.com/repos/tkutsuwada/AndroidPOS", "Date": "2014-06-11T14:45:04Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (num == 0) { if (orderOfTheProduct == null) { return; }else { orderList.remove(orderOfTheProduct); } }else if (orderOfTheProduct == null) { com.ricoh.pos.data.Order newOrder = new com.ricoh.pos.data.Order(product, num); orderList.add(newOrder); }else { orderOfTheProduct.setNumberOfOrder(num); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1518/buggy-version/AndroidPOS.src.com.ricoh.pos.model.RegisterManager.java", "BodyUseAPI": ["com.ricoh.pos.data.Order.setNumberOfOrder(int)"], "Fixed commit": "f02ce2ac81968e2f5d0dea7171e9f0fd4537b6bb", "Url": "https://api.github.com/repos/tkutsuwada/AndroidPOS", "Date": "2014-06-11T14:45:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ricoh.pos.model.RegisterManager.findOrderOfTheProduct(com.ricoh.pos.data.Product)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((orderOfTheProduct.getNumberOfOrder()) == 0) { orderList.remove(orderOfTheProduct); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1518/buggy-version/AndroidPOS.src.com.ricoh.pos.model.RegisterManager.java", "BodyUseAPI": ["java.util.ArrayList<com.ricoh.pos.data.Order>.remove(com.ricoh.pos.data.Order)"], "Fixed commit": "f02ce2ac81968e2f5d0dea7171e9f0fd4537b6bb", "Url": "https://api.github.com/repos/tkutsuwada/AndroidPOS", "Date": "2014-06-11T14:45:04Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fastestListener) != null) { fastestListener.submitLastSensorData(); sensorManager.unregisterListener(fastestListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6418/buggy-version/OsmAnd.src.org.hva.cityrunner.plus.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "ad42a41149f87953c5ac33161287d891631ba5d9", "Url": "https://api.github.com/repos/joeyvanderbie/Osmand", "Date": "2014-01-27T12:33:30Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fastestListener) != null) { fastestListener.submitLastSensorData(); sensorManager.unregisterListener(fastestListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6418/buggy-version/OsmAnd.src.org.hva.cityrunner.plus.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "ad42a41149f87953c5ac33161287d891631ba5d9", "Url": "https://api.github.com/repos/joeyvanderbie/Osmand", "Date": "2014-01-27T12:33:30Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getErrorStream()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (orig == null) { return \"No error message\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1743/buggy-version/src.main.java.com.treasure_data.client.HttpConnectionImpl.java", "BodyUseAPI": [], "Fixed commit": "aad2b933a68aaf579552ae107933653c2f0d51f7", "Url": "https://api.github.com/repos/treasure-data/td-client-java", "Date": "2013-10-14T04:02:40Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cloneAgent != null) { otherAgents.remove(cloneAgent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1251/buggy-version/src.core.Algorithms.BES.BES.java", "BodyUseAPI": ["java.util.Collection<dataContainer.Coordinate>.remove(dataContainer.Coordinate)"], "Fixed commit": "2bbac7adb63a68a1dc593d138247e05796f05be4", "Url": "https://api.github.com/repos/probject22/SneakyThief4", "Date": "2015-06-17T10:40:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Character.isLetter(letter)) { return (letter) + (java.lang.String.format(\"%02d\", number)); }else { return java.lang.String.format(\"%02d\", number); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7403/buggy-version/TimeTableApp.src.timetableapp.models.ClassRoom.java", "BodyUseAPI": [], "Fixed commit": "cdbcc7ac50fbbea54365bce248ef9f854e7e9388", "Url": "https://api.github.com/repos/dolstrm001/ComputationalApps", "Date": "2015-10-13T10:49:13Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((droneToAdd.getSearchedArea()) == null) { droneToAdd.setSearchedArea(new java.util.ArrayList<org.osmdroid.util.GeoPoint>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4568/buggy-version/DronVision.app.src.main.java.dron.mkapiczynski.pl.dronvision.utils.DroneUtils.java", "BodyUseAPI": ["dron.mkapiczynski.pl.dronvision.domain.Drone.setSearchedArea(java.util.ArrayList<org.osmdroid.util.GeoPoint>)"], "Fixed commit": "94c9d884b7fa6ec2957f7cb03abd0cf9c1733f93", "Url": "https://api.github.com/repos/mkapiczy/DronVision", "Date": "2016-02-11T20:26:45Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((droneToAdd.getLastSearchedArea()) == null) { droneToAdd.setLastSearchedArea(new java.util.ArrayList<org.osmdroid.util.GeoPoint>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4568/buggy-version/DronVision.app.src.main.java.dron.mkapiczynski.pl.dronvision.utils.DroneUtils.java", "BodyUseAPI": ["dron.mkapiczynski.pl.dronvision.domain.Drone.setLastSearchedArea(java.util.ArrayList<org.osmdroid.util.GeoPoint>)"], "Fixed commit": "94c9d884b7fa6ec2957f7cb03abd0cf9c1733f93", "Url": "https://api.github.com/repos/mkapiczy/DronVision", "Date": "2016-02-11T20:26:45Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hshannover.f4.trust.visitmeta.dataservice.internalDatatypes.InternalIdentifierGraph.getStartIdentifier()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (start != null) { de.hshannover.f4.trust.visitmeta.dataservice.util.GraphHelper.recurse(start, copy, new java.util.HashSet<de.hshannover.f4.trust.visitmeta.dataservice.internalDatatypes.InternalIdentifier>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8633/buggy-version/dataservice.src.main.java.de.hshannover.f4.trust.visitmeta.dataservice.util.GraphHelper.java", "BodyUseAPI": ["de.hshannover.f4.trust.visitmeta.dataservice.util.GraphHelper.recurse(de.hshannover.f4.trust.visitmeta.dataservice.internalDatatypes.InternalIdentifier,de.hshannover.f4.trust.visitmeta.dataservice.graphservice.IdentifierGraphImpl,java.util.HashSet<de.hshannover.f4.trust.visitmeta.dataservice.internalDatatypes.InternalIdentifier>)"], "Fixed commit": "5a15cea3d606a3a9f27654a5715252b40352b0c7", "Url": "https://api.github.com/repos/trustathsh/visitmeta", "Date": "2014-04-24T14:15:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files != null) { for (java.io.File f : files) { if (fileNamePattern.matcher(f.getName()).matches()) logFiles.add(f.getAbsolutePath()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2877/buggy-version/araqne-log-api.src.main.java.org.araqne.log.api.impl.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "fcebb2a099af264497edf7616e98173d1029e0b1", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-06-20T06:40:49Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attributes) == null) { return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6835/buggy-version/model.src.main.java.com.hellblazer.CoRE.event.Protocol.java", "BodyUseAPI": [], "Fixed commit": "7db5db4188bbef34ec0a56035e7f7a439d738866", "Url": "https://api.github.com/repos/Hellblazer/Ultrastructure", "Date": "2013-07-12T17:50:16Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(code.contains(this.key))) { return code; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7964/buggy-version/workspace.at.jku.weiner.cpreprocess.src.at.jku.weiner.cpreprocess.utils.macros.DefinitionObjectMacro.java", "BodyUseAPI": [], "Fixed commit": "27a48e98b1a2c8763c33d2585e01f15546268860", "Url": "https://api.github.com/repos/timeraider4u/kefax", "Date": "2015-11-24T20:16:40Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getSecurityManager()) == null) { classLoader = module.getClassLoader(); }else { classLoader = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.lang.ClassLoader>() { @java.lang.Override public java.lang.ClassLoader run() { return module.getClassLoader(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5421/buggy-version/api.src.main.java.org.jboss.marshalling.ModularClassResolver.java", "BodyUseAPI": [], "Fixed commit": "496cdbfcb52da09468a03f40003d128e0e457fb0", "Url": "https://api.github.com/repos/jboss-remoting/jboss-marshalling", "Date": "2016-01-11T00:57:00Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getSecurityManager()) == null) { classLoader = java.lang.Module.class.getClassLoader(); }else { classLoader = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.lang.ClassLoader>() { @java.lang.Override public java.lang.ClassLoader run() { return java.lang.Module.class.getClassLoader(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5421/buggy-version/api.src.main.java.org.jboss.marshalling.ModularClassResolver.java", "BodyUseAPI": [], "Fixed commit": "496cdbfcb52da09468a03f40003d128e0e457fb0", "Url": "https://api.github.com/repos/jboss-remoting/jboss-marshalling", "Date": "2016-01-11T00:57:00Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getSecurityManager()) == null) { classLoader = java.lang.Module.class.getClassLoader(); }else { classLoader = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.lang.ClassLoader>() { @java.lang.Override public java.lang.ClassLoader run() { return java.lang.Module.class.getClassLoader(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5421/buggy-version/api.src.main.java.org.jboss.marshalling.ModularClassResolver.java", "BodyUseAPI": [], "Fixed commit": "496cdbfcb52da09468a03f40003d128e0e457fb0", "Url": "https://api.github.com/repos/jboss-remoting/jboss-marshalling", "Date": "2016-01-11T00:57:00Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(model.containsAttribute(\"storyContributorForm\"))) { com.fikky.commands.StoryContributorForm storyContributorForm = new com.fikky.commands.StoryContributorForm(); storyContributorForm.setStoryId(id); model.addAttribute(\"storyContributorForm\", storyContributorForm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9086/buggy-version/src.main.java.com.fikky.controllers.StoryContributorController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,com.fikky.commands.StoryContributorForm)"], "Fixed commit": "92f1e86ae43b800fc380134a43f1262478c83d45", "Url": "https://api.github.com/repos/nihalpd/Fikky", "Date": "2017-02-08T00:34:06Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["commonStockouts.get((requestMedicine - 1)).getProduct()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (selectedProduct != null) { displayText = selectedProduct.getName(); keyValueStore.put((\"productName.\" + sessionId), selectedProduct); displayText += \" \" + (stockoutDao.getMenu(4)); menuRequest += 2; }else { throw new java.lang.NumberFormatException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8134/buggy-version/OpenGov.src.main.java.za.org.opengov.ussd.service.stockout.cm.CMUssdStockoutServiceImpl.java", "BodyUseAPI": ["za.org.opengov.stockout.entity.medical.Product.getName()", "za.org.opengov.ussd.util.KeyValueStore.put(java.lang.String,za.org.opengov.stockout.entity.medical.Product)"], "Fixed commit": "a560bce71e92bc48d18664745150907d5c71a581", "Url": "https://api.github.com/repos/JamesWillLewis/opengov", "Date": "2013-10-03T10:49:31Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shop.getValue()) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3346/buggy-version/MobileBuy.demo.src.main.java.com.shopify.buy3.sample.ui.home.HomeViewModel.java", "BodyUseAPI": [], "Fixed commit": "29a492cec56874e3a781fb1c8be529a8e3b526bd", "Url": "https://api.github.com/repos/Shopify/mobile-buy-sdk-android", "Date": "2017-09-08T10:26:34Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (candidate > target) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6698/buggy-version/src.LeetCode.Algorithm.DepthFirstSearch.BackTracking.java", "BodyUseAPI": [], "Fixed commit": "01554ca78fd36eac804d915d6fb458bc43249fb6", "Url": "https://api.github.com/repos/wangyouan/LearnJava", "Date": "2016-08-22T03:02:53Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7543/buggy-version/src.main.java.com.mridang.location.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "5748a22b9f971be613f5740e7b03e02f0f0861d7", "Url": "https://api.github.com/repos/mridang/dashclock-location", "Date": "2015-03-29T09:10:45Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (os != null) { try { os.close(); } catch (java.io.IOException e) { Reflector.LOGGER.log(java.util.logging.Level.WARNING, e.getLocalizedMessage(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8102/buggy-version/core.src.main.java.de.cubeisland.engine.reflect.ReflectedFile.java", "BodyUseAPI": ["java.io.FileOutputStream.close()"], "Fixed commit": "8a9aa212650eaeb863182c47280883bcbce43a50", "Url": "https://api.github.com/repos/CubeEngine/ReflecT", "Date": "2015-03-15T14:37:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((main.Main.parseList[y]) != \"[\") && ((main.Main.parseList[y]) != \"]\")) { java.lang.String[] A = B.split(main.Main.parseList[y]); B = A[0]; for (int x = 1; x < (A.length); x++) { B += main.Main.unParseList[y]; B += A[x]; } }else { java.lang.String[] A = B.split((\"\\\\\" + (main.Main.parseList[y]))); B = A[0]; for (int x = 1; x < (A.length); x++) { B += main.Main.unParseList[y]; B += A[x]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/445/buggy-version/main.ToS_Fourm_Mafia_Note_Taker.src.assets.SavingHandler.java", "BodyUseAPI": ["java.lang.String.split((\"\\\\\" + (main.Main.parseList[y])))", "java.lang.String.split(main.Main.parseList[y])"], "Fixed commit": "e579f9848b0c450ea878ca51ed86737acd886f00", "Url": "https://api.github.com/repos/Coolway99/ToS_Forum_Mafia_Note_Taker", "Date": "2014-08-17T01:08:17Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openhab.model.sitemap.Widget.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (itemName != null) { itemNames.add(itemName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2480/buggy-version/bundles.io.org.openhab.io.rest.src.main.java.org.openhab.io.rest.internal.listeners.SitemapStateChangeListener.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "f47ec34b3ad6accce74eca8e02933ff946c9d536", "Url": "https://api.github.com/repos/openhab/openhab", "Date": "2014-05-25T01:40:20Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isBuyPhase)) && (c.isEvent())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/373/buggy-version/vdom.src.com.vdom.comms.SelectCardOptions.java", "BodyUseAPI": [], "Fixed commit": "a276caa5d6b57adf1575eb0e0cbbd8ed918de114", "Url": "https://api.github.com/repos/dominionator/androminion", "Date": "2016-02-03T06:36:06Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.canvas.isDisposed())) this.canvas.redraw();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1610/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.define.ViewCodingModel.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Canvas.redraw()"], "Fixed commit": "e39db62cdf2c6f99141db209d30c9f6f351dd053", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-05T23:35:33Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.slider.isDisposed())) this.slider.setSelection(value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1610/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.define.ViewCodingModel.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Scale.setSelection(int)"], "Fixed commit": "e39db62cdf2c6f99141db209d30c9f6f351dd053", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-08-05T23:35:33Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (imgUrl != null) { imgUrl = com.fallgamlet.dnestrcinema.network.HttpUtils.getAbsoluteUrl(KinoTir.BASE_URL, imgUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8736/buggy-version/app.src.main.java.com.fallgamlet.dnestrcinema.NewsFragment.java", "BodyUseAPI": ["com.fallgamlet.dnestrcinema.network.HttpUtils.getAbsoluteUrl(KinoTir.BASE_URL,java.lang.String)"], "Fixed commit": "daa7aa951650d97bc320e97289af04fbf4765d7c", "Url": "https://api.github.com/repos/fallGamlet/DnestrCinema", "Date": "2017-03-24T15:01:18Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (closingTime > 12) { t = \"\" + (closingTime - 12); }else { t = \"\" + closingTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5002/buggy-version/src.RestaurantList.GuiUserInput.java", "BodyUseAPI": [], "Fixed commit": "35a4a7ce3b10dafb0ac916166387b6f433f929ad", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-restaurant-list", "Date": "2016-11-06T01:29:19Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.ITreeSelection.getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (obj == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1854/buggy-version/org.erlide.cover.ui.src.org.erlide.cover.ui.views.CoverStatsView.java", "BodyUseAPI": [], "Fixed commit": "4915bd303ac546cbf12c990533c72454fb886459", "Url": "https://api.github.com/repos/goj/erlide", "Date": "2011-04-01T15:38:29Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(translationsByLangCode.isEmpty())) { keyOut.set(parsedPage.getId()); context.write(keyOut, new org.wikipedia.miner.db.struct.DbTranslations(translationsByLangCode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2028/buggy-version/wikipedia-miner-extract.src.main.java.org.wikipedia.miner.extract.steps.transstats.MyMapper.java", "BodyUseAPI": ["org.wikipedia.miner.extract.steps.transstats.Context.write(org.apache.hadoop.io.IntWritable,org.wikipedia.miner.db.struct.DbTranslations)"], "Fixed commit": "e82eaa123bc5a558a8be0851c66c55151bdcf972", "Url": "https://api.github.com/repos/namkhanhtran/wikipediaminer", "Date": "2014-10-24T13:55:46Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dataSnapshot.child(\"-1\").child(\"Campus_Image\").getValue().toString().equals(\"\"))) { com.google.firebase.storage.StorageReference remove = storageReference.child(dataSnapshot.child(\"-1\").child(\"Campus_Image\").getValue().toString()); remove.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4710/buggy-version/app.src.main.java.com.venkibellu.myapplication.Campus_Adding.java", "BodyUseAPI": ["com.google.firebase.storage.StorageReference.child(dataSnapshot.child(\"-1\").child(\"Campus_Image\").getValue().toString())", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"-1\").child(\"Campus_Image\").getValue().toString()", "dataSnapshot.child(\"-1\").child(java.lang.String)", "dataSnapshot.child(\"-1\").child(\"Campus_Image\").getValue()"], "Fixed commit": "803fa9a58a1ba568b244b4ed1d2fcb059446ef4c", "Url": "https://api.github.com/repos/venki-bellu/UVCEConnectRetake", "Date": "2017-09-07T05:18:36Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.piece) != null) this.initialize();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2752/buggy-version/src.view.PieceView.java", "BodyUseAPI": [], "Fixed commit": "5f03dff92ba2fcb949b4565227ccbced0b8a98af", "Url": "https://api.github.com/repos/zombifier/Nastes", "Date": "2016-04-22T23:55:29Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((colorMode & ((android.print.PrintAttributes.COLOR_MODE_MONOCHROME) | (android.print.PrintAttributes.COLOR_MODE_COLOR))) == 0) { colorMode = android.print.PrintAttributes.COLOR_MODE_MONOCHROME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9210/buggy-version/app.src.main.java.io.github.benoitduffez.cupsprint.printservice.CupsPrinterDiscoverySession.java", "BodyUseAPI": [], "Fixed commit": "b85d43e1e653532a34a30e26ab18114cc6bb07cd", "Url": "https://api.github.com/repos/BenoitDuffez/AndroidCupsPrint", "Date": "2016-11-01T10:42:55Z"},
{"Line": "=>839", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((atts.getString(\"fill\")) == null) && ((atts.getString(\"stroke\")) == null)) { java.lang.Float opacity = atts.getFloat(\"opacity\"); if (opacity == null) { paint.setAlpha(255); }else { paint.setAlpha(((int) (255 * opacity))); } paint.setStyle(Paint.Style.FILL); paint.setColor(-16777216); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6455/buggy-version/src.main.java.com.larvalabs.svgandroid.SVGParser.java", "BodyUseAPI": ["com.larvalabs.svgandroid.SVGParser.Properties.getFloat(java.lang.String)"], "Fixed commit": "21fcff312ab92f3abb696d4a0c892f66cf7dac47", "Url": "https://api.github.com/repos/mvestola/helsinki-testbed2-android", "Date": "2012-10-21T09:50:14Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content) != null) return content;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1958/buggy-version/src.main.java.org.akapps.rest.client.Response.java", "BodyUseAPI": [], "Fixed commit": "eed91961c8792fb6de53a86e6d8b651874dce2fb", "Url": "https://api.github.com/repos/akapps/rest-toolkit", "Date": "2015-11-06T17:21:10Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.getMessage().toLowerCase().contains(\"make the flax into\")) && ((m.getType()) == 0)) { (com.script.BYTESTRINGER.data.Data.strung)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6758/buggy-version/src.com.script.BYTESTRINGER.core.Main.java", "BodyUseAPI": [], "Fixed commit": "9eb995e8153b9b6256fb7f0941a267e5ef4ed8d0", "Url": "https://api.github.com/repos/bycodeParabot/byteStringer", "Date": "2015-01-23T19:33:11Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((m.size()) > 0) { javax.swing.JPanel spriteButtons = new vooga.scroller.viewUtil.RadioGroup(this.getSize(), new vooga.scroller.level_editor.view.LEToolsView.SelectSpriteListener(), m); mySpriteUI.add(spriteButtons); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5853/buggy-version/src.vooga.scroller.level_editor.view.LEToolsView.java", "BodyUseAPI": [], "Fixed commit": "c5700a69e3261b5c9b1b9246a2a0cb1a0bec0044", "Url": "https://api.github.com/repos/duke-compsci308-spring2013/vooga", "Date": "2013-04-22T07:38:41Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (java.lang.Enum.class)) return isEnum(element);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5393/buggy-version/src.com.activeandroid.sebbia.internal.AnnotationProcessor.java", "BodyUseAPI": [], "Fixed commit": "7a52abb8d691d87d842f47594b89074094b4ee5d", "Url": "https://api.github.com/repos/ultraon/ActiveAndroid", "Date": "2015-01-22T18:59:18Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((optimalRoute != null) && (points != null)) { mMap.clear(); mMap.addPolyline(optimalRoute); moveCamera(points[0], 10.0F); showEventsOnRoute(points); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7033/buggy-version/app.src.main.java.com.luka.trafficinformator.MainActivity.java", "BodyUseAPI": ["com.luka.trafficinformator.MainActivity.moveCamera(points[0],float)", "com.google.android.gms.maps.GoogleMap.addPolyline(com.google.android.gms.maps.model.PolylineOptions)", "com.luka.trafficinformator.MainActivity.showEventsOnRoute(com.google.android.gms.maps.model.LatLng[])"], "Fixed commit": "741111806b50a46995a2cdc60b36f72643652c26", "Url": "https://api.github.com/repos/luka-krivec/traffic-informator", "Date": "2015-06-20T09:36:13Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isTopicAdmin(nd.getNodePK().getId())) { return getKmeliaBm().updateTopic(nd, alertType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4588/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.control.KmeliaSessionController.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBm.updateTopic(com.stratelia.webactiv.util.node.model.NodeDetail,java.lang.String)"], "Fixed commit": "a16b2b6bf90496e83b3728234ae81271f5bc044b", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>1517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.servlet.HttpRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (kmelia.isTopicAdmin(nodeId)) { kmelia.updateTopicRole(role, nodeId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4588/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.KmeliaSessionController.updateTopicRole(java.lang.String,java.lang.String)"], "Fixed commit": "a16b2b6bf90496e83b3728234ae81271f5bc044b", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>1475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.isTopicAdmin(id))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4588/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "a16b2b6bf90496e83b3728234ae81271f5bc044b", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((term == null) || ((term.length()) == 0)) return term;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/834/buggy-version/BagOfWords.src.main.java.ctrus.pa.bow.term.TermTransformation.java", "BodyUseAPI": [], "Fixed commit": "136bf65ace10af216f86b2cafbe2972df4535550", "Url": "https://api.github.com/repos/nvnklk/bag-of-words", "Date": "2015-05-06T16:32:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((term == null) || ((term.length()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/834/buggy-version/BagOfWords.src.main.java.ctrus.pa.bow.core.UnWeightedBagOfWords.java", "BodyUseAPI": [], "Fixed commit": "136bf65ace10af216f86b2cafbe2972df4535550", "Url": "https://api.github.com/repos/nvnklk/bag-of-words", "Date": "2015-05-06T16:32:09Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((site_pk == null) && (!(this.restrictions.canAccessAllSites()))) { if (this.restrictions.getAccessibleSites().isEmpty()) { throw new javax.ws.rs.ForbiddenException(); } query.addConditions(SITES.SITE_PK.in(this.restrictions.getAccessibleSites())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4159/buggy-version/src.main.java.org.ccjmne.faomaintenance.api.rest.ResourcesEndpoint.java", "BodyUseAPI": ["org.ccjmne.faomaintenance.api.modules.Restrictions.getAccessibleSites()", "org.ccjmne.faomaintenance.api.modules.Restrictions.getAccessibleSites()", "this.restrictions.getAccessibleSites().isEmpty()", "org.jooq.SelectQuery<org.jooq.Record>.addConditions(SITES.SITE_PK.in(this.restrictions.getAccessibleSites()))", "SITES.SITE_PK.in(this.restrictions.getAccessibleSites())"], "Fixed commit": "f76b58df8b3daf3d26bb52095cd23bb2a44b4a7e", "Url": "https://api.github.com/repos/ccjmne/orca-api", "Date": "2016-12-07T15:24:21Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (renderersGroup != null) { allRenderers.add(renderersGroup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3332/buggy-version/src.main.java.net.pms.newgui.SelectRenderers.java", "BodyUseAPI": ["javax.swing.tree.DefaultMutableTreeNode.add(javax.swing.tree.DefaultMutableTreeNode)"], "Fixed commit": "1182f560e534e1f6e40eb9a17e33cfa3f5e6d55e", "Url": "https://api.github.com/repos/Nadahar/UniversalMediaServer", "Date": "2015-08-05T21:13:02Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.crypto.utils.Utils.isFallbackEnabled(props)) { return new org.apache.commons.crypto.random.JavaCryptoRandom(props); }else { if ((errorMessage.length()) == 0) { throw new java.lang.IllegalArgumentException(\"No classname(s) provided, and fallback is not enabled\"); } throw new java.security.GeneralSecurityException(errorMessage.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5616/buggy-version/src.main.java.org.apache.commons.crypto.random.CryptoRandomFactory.java", "BodyUseAPI": [], "Fixed commit": "cc6233f206488d5ab9e3da2a43a83721fdae0776", "Url": "https://api.github.com/repos/apache/commons-crypto", "Date": "2016-06-27T21:56:44Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { systolic = ((java.lang.String) (savedInstanceState.getSerializable(\"systolic\"))); diastolic = ((java.lang.String) (savedInstanceState.getSerializable(\"diastolic\"))); heartRate = ((java.lang.String) (savedInstanceState.getSerializable(\"heart_rate\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3800/buggy-version/BloodPressure.app.src.main.java.abhi.kurla.bloodpressure.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)", "android.os.Bundle.getSerializable(java.lang.String)", "android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "5dc553bfa33cf400f24539e56ac6bd269eb7c1ff", "Url": "https://api.github.com/repos/gauravshetty48/ReadSms", "Date": "2016-04-20T12:44:00Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(client.isConfigured())) { throw new io.github.ibuildthecloud.gdapi.exception.ClientVisibleException(io.github.ibuildthecloud.gdapi.util.ResponseCodes.SERVICE_UNAVAILABLE, \"GithubNotConfigured\", \"Github client id and secret not set.\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6025/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.integration.github.GithubConfigManager.java", "BodyUseAPI": [], "Fixed commit": "e6df0ea1a21d13fa74eaf42aef0f4c7f698b08a9", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-08-14T15:31:47Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((page.elements().length) > 0) { book.addPage(page); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5361/buggy-version/1.7.10.src.main.java.com.stateshifterlabs.achievementbooks.data.compatibility.SA.SA.java", "BodyUseAPI": ["com.stateshifterlabs.achievementbooks.data.Book.addPage(com.stateshifterlabs.achievementbooks.data.Page)"], "Fixed commit": "05997953dcbda445f3290067649735cce3cd4c8e", "Url": "https://api.github.com/repos/meza/achievementbooks", "Date": "2017-03-26T15:45:44Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (state.getPlayers().values().iterator().hasNext()) { scorePlayer = state.getPlayers().values().iterator().next(); init(choosingPlayerId, options); play(startingPlayerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5046/buggy-version/Mage.src.mage.game.GameImpl.java", "BodyUseAPI": ["mage.game.GameState.getPlayers()", "state.getPlayers().values().iterator().next()", "state.getPlayers().values()", "state.getPlayers().values().iterator()"], "Fixed commit": "818f528c7fc33f200f69a59b662fa988bae62d40", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-09-12T11:03:01Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(request.getHeaders().containsKey(\"handle\"))) request.header(\"handle\", \"misc\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6991/buggy-version/app.src.main.java.alexclin.httplite.sample.frag.RetrofitFrag.java", "BodyUseAPI": ["alexclin.httplite.Request.header(java.lang.String,java.lang.String)"], "Fixed commit": "10b3bcf486ce0f8331bedebf2b95d78804870b87", "Url": "https://api.github.com/repos/alexclin0188/httplite", "Date": "2016-05-08T05:53:51Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (serviceConfig == null) { com.markwal.sdl.healthcheck.config.Configuration.LOG.warn(\"Service configuration contains an empty array element which is ignored\"); }else { if (com.markwal.sdl.healthcheck.config.Configuration.LOG.isTraceEnabled()) { com.markwal.sdl.healthcheck.config.Configuration.LOG.trace(((\"Found service '\" + (serviceConfig.getName())) + \"'\")); } this.serviceMap.put(serviceConfig.getName(), serviceConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4268/buggy-version/src.main.java.com.markwal.sdl.healthcheck.config.Configuration.java", "BodyUseAPI": ["org.slf4j.Logger.trace(((\"Found service '\" + (serviceConfig.getName())) + \"'\"))", "com.markwal.sdl.healthcheck.config.ServiceConfig.getName()", "com.markwal.sdl.healthcheck.config.ServiceConfig.getName()", "java.util.Map<java.lang.String, com.markwal.sdl.healthcheck.config.ServiceConfig>.put(serviceConfig.getName(),com.markwal.sdl.healthcheck.config.ServiceConfig)"], "Fixed commit": "d209a11a72a3c6d4bc818b33533316ea61a0d282", "Url": "https://api.github.com/repos/walmvdw/sdl-healthcheck", "Date": "2016-07-05T18:47:54Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["web.shop.database.dao.ItemDAO.read(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(isItemQuantityOneOrLess(item))) items.put(item, (quantity - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1745/buggy-version/src.main.java.web.shop.face.jsf.models.Cart.java", "BodyUseAPI": ["java.util.Map<web.shop.database.entities.Item, java.lang.Integer>.put(web.shop.database.entities.Item,int)"], "Fixed commit": "164cb39f7b3c85c88ed428c98e76517cbc9a59f8", "Url": "https://api.github.com/repos/Vakar/Web-Shop", "Date": "2015-05-15T09:30:08Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getShip()) != null) { this.getShip().removeBullet(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3727/buggy-version/src.asteroids.model.Bullet.java", "BodyUseAPI": [], "Fixed commit": "9b97d400d63ba966abb36ec1d70f085395bc4649", "Url": "https://api.github.com/repos/DriesDM/OOPProject", "Date": "2017-05-19T10:55:13Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cc.victor.DbHelper.getUserInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((info.getBio().length()) == 0) mBioEdit.setText(getString(R.string.not_specified)); else mBioEdit.setText(info.getBio());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4627/buggy-version/src.com.cc.victor.MeFragment.java", "BodyUseAPI": ["com.cc.victor.UserInfo.getBio()", "android.widget.EditText.setText(info.getBio())"], "Fixed commit": "7ea2f38353b6c8942abca995b9976155032a8582", "Url": "https://api.github.com/repos/vvov91/42-test-victor", "Date": "2013-09-18T14:12:29Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cc.victor.DbHelper.getUserInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((info.getEmail().length()) == 0) mEmailEdit.setText(getString(R.string.not_specified)); else mEmailEdit.setText(info.getEmail());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4627/buggy-version/src.com.cc.victor.MeFragment.java", "BodyUseAPI": ["android.widget.EditText.setText(info.getEmail())", "com.cc.victor.UserInfo.getEmail()"], "Fixed commit": "7ea2f38353b6c8942abca995b9976155032a8582", "Url": "https://api.github.com/repos/vvov91/42-test-victor", "Date": "2013-09-18T14:12:29Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dst.exists()) dst.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5944/buggy-version/araqne-logstorage.src.main.java.org.araqne.logstorage.backup.FileStorageBackupMedia.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "875d8ac72e11589c014367ca938507d44368343a", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-06-25T04:42:07Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zephyrr.simplezones.land.OwnedLand.getLandAtPoint(event.getBlock().getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (owned instanceof com.zephyrr.simplezones.land.Sanctuary) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7847/buggy-version/src.com.zephyrr.simplezones.listeners.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "970c2c5daebb512195ff3c2c43a322f3978ea382", "Url": "https://api.github.com/repos/PhoenixFlight/SimpleZones", "Date": "2012-07-09T23:22:04Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((where) != null) { ret.where = where; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/542/buggy-version/src.de.caluga.morphium.query.QueryImpl.java", "BodyUseAPI": [], "Fixed commit": "782515f0ccbd4495b95691a2d25bb6f39cae760f", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2012-12-06T11:38:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((current.getProgress()) < 5) { current.setProgress(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6274/buggy-version/src.net.sf.memoranda.ui.TaskProgressEditor.java", "BodyUseAPI": ["net.sf.memoranda.ui.Task.setProgress(int)"], "Fixed commit": "c20ac8180bb4471c887f639947d8b7c182876966", "Url": "https://api.github.com/repos/ser316asu/Lichterfelde_SER316", "Date": "2017-04-22T12:00:45Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((current.getProgress()) > 95) { current.setProgress(100); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6274/buggy-version/src.net.sf.memoranda.ui.TaskProgressEditor.java", "BodyUseAPI": ["net.sf.memoranda.ui.Task.setProgress(int)"], "Fixed commit": "c20ac8180bb4471c887f639947d8b7c182876966", "Url": "https://api.github.com/repos/ser316asu/Lichterfelde_SER316", "Date": "2017-04-22T12:00:45Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.getPhoto().equals(\"-1\")) { statement.setString(1, oldUser.getPhoto()); }else { statement.setString(1, user.getPhoto()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2690/buggy-version/NetCufar-dao.src.main.java.com.project.crm.dao.impl.UserDaoImpl.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,user.getPhoto())", "com.project.crm.model.User.getPhoto()"], "Fixed commit": "d8e69e626c58ba70d2a0c92cfdf3c71ec30c216d", "Url": "https://api.github.com/repos/IvanTkachev/CRM_Project", "Date": "2017-12-26T10:24:39Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (text.toString().isEmpty()) { data = new org.json.JSONObject(); }else { data = new org.json.JSONObject(text.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/179/buggy-version/app.src.main.java.centralcpccommittee.shopwithfriends.dataExchanger.java", "BodyUseAPI": [], "Fixed commit": "5c464696701a0ce49bc8f05003dee7e9116f74f4", "Url": "https://api.github.com/repos/axeisghost/cpc-documentary", "Date": "2015-02-03T03:06:24Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (insertCount > 0) { notifyItemRangeInserted(java.lang.Math.max(0, (innerPositionStart - (mOffset))), insertCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2303/buggy-version/power-adapters.src.main.java.com.nextfaze.poweradapters.OffsetAdapter.java", "BodyUseAPI": ["com.nextfaze.poweradapters.OffsetAdapter.notifyItemRangeInserted(int,int)"], "Fixed commit": "9ac9ebf020c5a4fd6283ad0f77b3279d7a1dd7d2", "Url": "https://api.github.com/repos/NextFaze/power-adapters", "Date": "2016-06-03T03:51:53Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsStageEnded) { mLastDirectionMoved = null; mPlayerLocation = new android.graphics.Point(nextPlayerPoint); }else { mLastDirectionMoved = direction; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8863/buggy-version/IceCaveProject.src.com.android.icecave.mapLogic.IceCaveGame.java", "BodyUseAPI": [], "Fixed commit": "a35a9dbe40625d979bc06c9a18962ae427c87e1f", "Url": "https://api.github.com/repos/icecavegame/Icecave", "Date": "2013-09-29T10:43:23Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.bookImage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bookImage.getDrawable()) != null) { thumbnail = ((android.graphics.drawable.BitmapDrawable) (bookImage.getDrawable())).getBitmap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4924/buggy-version/app.src.main.java.com.cybrilla.shashank.liborg.HomeAdapter.java", "BodyUseAPI": ["((android.graphics.drawable.BitmapDrawable) (bookImage.getDrawable())).getBitmap()", "android.widget.ImageView.getDrawable()"], "Fixed commit": "cc2081aa8ef34640390fd00a9ed862810443e533", "Url": "https://api.github.com/repos/Shashank58/Library-For-Cybrilla", "Date": "2015-12-11T09:48:30Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.calcite.util.Util.last(names).startsWith(\"*\")) { return org.apache.calcite.sql.validate.SqlMonotonicity.NOT_MONOTONIC; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2581/buggy-version/core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java", "BodyUseAPI": [], "Fixed commit": "cb2b02efe8f9314cbb5d1bebdd29952c114e83e4", "Url": "https://api.github.com/repos/jinfengni/optiq", "Date": "2015-03-20T17:29:28Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.componentPositions) != null) { builder.addAll(this.componentPositions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2581/buggy-version/core.src.main.java.org.apache.calcite.sql.SqlIdentifier.java", "BodyUseAPI": [], "Fixed commit": "cb2b02efe8f9314cbb5d1bebdd29952c114e83e4", "Url": "https://api.github.com/repos/jinfengni/optiq", "Date": "2015-03-20T17:29:28Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Integer>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (collectionLength == 1) return -1; else if (middle > value) return com.ebusiello.algorithms.search.BinarySearch.binarySearchImp(collection.subList(0, middleIndex), value, indexSum); else return com.ebusiello.algorithms.search.BinarySearch.binarySearchImp(collection.subList(middleIndex, collectionLength), value, (indexSum + middleIndex));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5380/buggy-version/src.main.java.com.ebusiello.algorithms.search.BinarySearch.java", "BodyUseAPI": ["com.ebusiello.algorithms.search.BinarySearch.binarySearchImp(java.util.List<java.lang.Integer>,int,int)", "java.util.List<java.lang.Integer>.subList(int,int)"], "Fixed commit": "59eb63f9171f596d03acc58e2aad54aa8a22f09a", "Url": "https://api.github.com/repos/EndeNeu/algorithms-java", "Date": "2016-02-13T17:35:37Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start >= ((sXML.length()) - 4)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8136/buggy-version/src.beast.core.OperatorSchedule.java", "BodyUseAPI": [], "Fixed commit": "5d486d79136f8956b9043a259cf3fd55575136e0", "Url": "https://api.github.com/repos/CompEvol/beast2", "Date": "2013-12-03T00:28:48Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((categoryCount) < 0) { java.lang.System.out.println(((\"SiteModel: Invalid category count (\" + (categoryCount)) + \") Setting category count to 1\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8136/buggy-version/src.beast.evolution.sitemodel.SiteModel.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "5d486d79136f8956b9043a259cf3fd55575136e0", "Url": "https://api.github.com/repos/CompEvol/beast2", "Date": "2013-12-03T00:28:48Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.core.io.Resource.createRelative(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(r.exists())) { org.mitre.openid.connect.config.JsonMessageSource.logger.debug(\"Fallback locale to language only.\"); filename = (((locale.getLanguage()) + (java.io.File.separator)) + namespace) + \".json\"; r = getBaseDirectory().createRelative(filename); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5823/buggy-version/openid-connect-server.src.main.java.org.mitre.openid.connect.config.JsonMessageSource.java", "BodyUseAPI": [], "Fixed commit": "b8cc0a82b37199f37ac17738a0825765533fd117", "Url": "https://api.github.com/repos/mitreid-connect/OpenID-Connect-Java-Spring-Server", "Date": "2016-04-07T06:39:19Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (catalogNumberLength < 3) { firstDigit = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7195/buggy-version/UWCalendar.src.main.java.com.alirezatr.uwcalendar.activities.CoursesActivity.java", "BodyUseAPI": [], "Fixed commit": "9aaea1e09d6901661a17d86ab52cbf537aecb5ab", "Url": "https://api.github.com/repos/alirezatr/UW-Course-Calendar", "Date": "2014-07-13T18:16:35Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.jonmarsh.waveform_processing_for_imagej.GateCScanInteractivelySwing.CreateGatesForCScanDialog.createSingleROI(float[],int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((roi.getBounds().x) < (recordLength)) { roi.setPosition((i + 1)); rm.add(ij.WindowManager.getImage(inputImageID), roi, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6959/buggy-version/src.main.java.com.github.jonmarsh.waveform_processing_for_imagej.GateCScanInteractivelySwing.java", "BodyUseAPI": ["ij.gui.PolygonRoi.setPosition(int)", "ij.plugin.frame.RoiManager.add(ij.WindowManager.getImage(inputImageID),ij.gui.PolygonRoi,int)"], "Fixed commit": "ca692256bb28618ec556cb2f28ae2e4475b70509", "Url": "https://api.github.com/repos/JonMarsh/waveform_processing_for_imagej", "Date": "2016-06-14T18:22:05Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.frozen.iron.common.IronWorld.getUnitAtXY(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(dst.isDead())) res.add(new int[]{ dst.getId(), -((int) (damage)) });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3303/buggy-version/IronTactics.src.fr.frozen.iron.common.skills.RangedAttack.java", "BodyUseAPI": ["fr.frozen.iron.common.entities.IronUnit.getId()", "java.util.List<int[]>.add(int[])"], "Fixed commit": "1a13a53189772fe7fa62a825c9dd604748580245", "Url": "https://api.github.com/repos/zlandorf/Frozen-Dust", "Date": "2011-09-16T22:16:31Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, bus.Prediction[]>.get(trip.name)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (predictions != null) { for (bus.Prediction prediction : predictions) { if (prediction != null) { prediction.appendToFile(loggingFile, trip.lastPoint().timestamp); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4091/buggy-version/GpsRealTimeInputWatcher.java", "BodyUseAPI": [], "Fixed commit": "2feee5141a6d7ad168cd6096db6388a441fa0fbc", "Url": "https://api.github.com/repos/ml693/bus", "Date": "2017-04-06T08:11:17Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lastStopPredictions.containsKey(vehicleId))) { lastStopPredictions.put(vehicleId, new bus.Prediction[route.busStops.size()]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4091/buggy-version/GpsRealTimeInputWatcher.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, bus.Prediction[]>.put(java.lang.String,bus.Prediction[])"], "Fixed commit": "2feee5141a6d7ad168cd6096db6388a441fa0fbc", "Url": "https://api.github.com/repos/ml693/bus", "Date": "2017-04-06T08:11:17Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (routeConfig.getRouteName().equals(routeName)) { snippetAlerts = routeConfig.getAlerts(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2126/buggy-version/bostonBusMap.src.boston.Bus.Map.data.BusLocation.java", "BodyUseAPI": ["boston.Bus.Map.data.RouteConfig.getAlerts()"], "Fixed commit": "62c7f1c34ef4b5f9a43ab714a41242edc4ab6285", "Url": "https://api.github.com/repos/noisecapella/bostonbusmap", "Date": "2011-11-23T05:21:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, ?>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entryValue == null) { throw new java.lang.RuntimeException(((\"Could not transform Input : \" + rawInput) + \" Since it has a null value\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3195/buggy-version/cloudslang-compiler.src.main.java.io.cloudslang.lang.compiler.modeller.transformers.AbstractInputsTransformer.java", "BodyUseAPI": [], "Fixed commit": "bc8c8dccb791f43b88f55efad59373447c42bf04", "Url": "https://api.github.com/repos/shajyhia/score-language", "Date": "2015-07-08T15:54:22Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pcgen.base.util.HashMapToList<pcgen.cdom.enumeration.ListKey<?>, pcgen.persistence.lst.CampaignSourceEntry>.getListFor(ListKey.FILE_CODECTRL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (codeCtrlFileList != null) { codeControlLoader.loadLstFiles(context, codeCtrlFileList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7159/buggy-version/code.src.java.pcgen.persistence.SourceFileLoader.java", "BodyUseAPI": ["pcgen.rules.persistence.CodeControlLoader.loadLstFiles(pcgen.rules.context.LoadContext,java.util.List<pcgen.persistence.lst.CampaignSourceEntry>)"], "Fixed commit": "9c3234f886b2bc3db3ba101788a155a7b5792087", "Url": "https://api.github.com/repos/thpr/pcgen", "Date": "2016-02-16T01:22:42Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataDefFileList == null) { dataDefFileList = new java.util.ArrayList<pcgen.persistence.lst.CampaignSourceEntry>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7159/buggy-version/code.src.java.pcgen.persistence.SourceFileLoader.java", "BodyUseAPI": [], "Fixed commit": "9c3234f886b2bc3db3ba101788a155a7b5792087", "Url": "https://api.github.com/repos/thpr/pcgen", "Date": "2016-02-16T01:22:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { mCurrentSuccessType = ((phc.android.SharedFragments.SuccessFragment.SuccessType) (savedInstanceState.getSerializable(phc.android.SharedFragments.SuccessFragment.SUCCES_TYPE_KEY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3426/buggy-version/PHC-Android.PHC.src.main.java.phc.android.SharedFragments.SuccessFragment.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "4240f2bda173e44f62b30b311b9327842f59e3d7", "Url": "https://api.github.com/repos/calblueprint/phc", "Date": "2015-03-10T07:32:03Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y < 0) || (y >= (height))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6232/buggy-version/LD49.src.Graphics.Screen.java", "BodyUseAPI": [], "Fixed commit": "23b18029893b11f490a9c5ae4bd658f08858d1f0", "Url": "https://api.github.com/repos/oojava/Beneath-the-surface", "Date": "2014-04-26T15:13:39Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(state)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6224/buggy-version/app.src.main.java.com.raneem.omer.jeebgas.NotificaitonService.java", "BodyUseAPI": [], "Fixed commit": "bd1260555595d44a4eed89fec777629f22f3cf56", "Url": "https://api.github.com/repos/raneemib/JeebGas", "Date": "2017-06-27T18:55:14Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Client.ClientGUI.cc) != null) { Client.ClientGUI.cc.logout(); java.lang.String[] str = new java.lang.String[0]; clientsList.setListData(str); Client.ClientGUI.cc = null; }else { chatArea.append(\"You are not logged in!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6846/buggy-version/src.main.java.Client.ClientGUI.java", "BodyUseAPI": [], "Fixed commit": "74cac233de47d093f5bbf270c921ecfea12b69d6", "Url": "https://api.github.com/repos/danielgron/Client", "Date": "2016-09-11T08:04:35Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(environment.acceptsProfiles(GrassRootApplicationProfiles.INMEMORY))) { aclService.setClassIdentityQuery(\"select currval(pg_get_serial_sequence('acl_class', 'id'))\"); aclService.setSidIdentityQuery(\"select currval(pg_get_serial_sequence('acl_sid', 'id'))\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1051/buggy-version/grassroot-core.src.main.java.za.org.grassroot.GrassRootCoreConfig.java", "BodyUseAPI": [], "Fixed commit": "16e2781fa2e9d1ad9ca837bec75755c50931625c", "Url": "https://api.github.com/repos/grassrootza/grassroot-platform", "Date": "2015-12-08T19:26:00Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.muenster.musikhochschule.parser.MusicXMLParser.getScore()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((score.getIdentification().getWorkTitle()) != null) && ((score.getIdentification().getWorkNumber()) == null)) { ttl.append((((scoreSubject + \" <http://purl.org/dc/terms/title> \\\"\") + (score.getIdentification().getWorkTitle())) + \"\\\"^^<http://www.w3.org/2001/XMLSchema#string> .\\n\")); }else if (((score.getIdentification().getWorkTitle()) != null) && ((score.getIdentification().getWorkNumber()) != null)) { ttl.append((((((scoreSubject + \" <http://purl.org/dc/terms/title> \\\"\") + (score.getIdentification().getWorkTitle())) + \" | \") + (score.getIdentification().getWorkNumber())) + \"\\\"^^<http://www.w3.org/2001/XMLSchema#string> .\\n\")); }else if (((score.getIdentification().getWorkTitle()) == null) && ((score.getIdentification().getWorkNumber()) != null)) { ttl.append((((scoreSubject + \" <http://purl.org/dc/terms/title> \\\"\") + (score.getIdentification().getWorkNumber())) + \"\\\"^^<http://www.w3.org/2001/XMLSchema#string> .\\n\")); }else if (((score.getIdentification().getWorkTitle()) == null) && ((score.getIdentification().getWorkNumber()) == null)) { ttl.append((scoreSubject + \" <http://purl.org/dc/terms/title> \\\"NO TITLE\\\"^^<http://www.w3.org/2001/XMLSchema#string> .\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2157/buggy-version/music2lod.src.main.java.de.muenster.musikhochschule.parser.MusicXMLParser.java", "BodyUseAPI": ["score.getIdentification().getWorkNumber()", "score.getIdentification().getWorkTitle()", "score.getIdentification().getWorkTitle()", "java.lang.StringBuffer.append((((scoreSubject + \" <http://purl.org/dc/terms/title> \\\"\") + (score.getIdentification().getWorkTitle())) + \"\\\"^^<http://www.w3.org/2001/XMLSchema#string> .\\n\"))", "score.getIdentification().getWorkNumber()", "de.muenster.musikhochschule.core.Score.getIdentification()", "score.getIdentification().getWorkTitle()", "de.muenster.musikhochschule.core.Score.getIdentification()", "de.muenster.musikhochschule.core.Score.getIdentification()", "java.lang.StringBuffer.append((((((scoreSubject + \" <http://purl.org/dc/terms/title> \\\"\") + (score.getIdentification().getWorkTitle())) + \" | \") + (score.getIdentification().getWorkNumber())) + \"\\\"^^<http://www.w3.org/2001/XMLSchema#string> .\\n\"))", "de.muenster.musikhochschule.core.Score.getIdentification()", "java.lang.StringBuffer.append((((scoreSubject + \" <http://purl.org/dc/terms/title> \\\"\") + (score.getIdentification().getWorkNumber())) + \"\\\"^^<http://www.w3.org/2001/XMLSchema#string> .\\n\"))", "de.muenster.musikhochschule.core.Score.getIdentification()", "score.getIdentification().getWorkNumber()", "de.muenster.musikhochschule.core.Score.getIdentification()", "score.getIdentification().getWorkNumber()", "de.muenster.musikhochschule.core.Score.getIdentification()", "de.muenster.musikhochschule.core.Score.getIdentification()", "score.getIdentification().getWorkNumber()", "de.muenster.musikhochschule.core.Score.getIdentification()", "score.getIdentification().getWorkTitle()", "de.muenster.musikhochschule.core.Score.getIdentification()", "score.getIdentification().getWorkTitle()"], "Fixed commit": "57cf27583f7c6236a44702fb8600d5890805baf3", "Url": "https://api.github.com/repos/jimjonesbr/music2lod", "Date": "2016-05-19T13:15:08Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((route.size()) > 0) pilot.travel(0.075);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6391/buggy-version/aw-rob.src.aw.motion.MoveExecutor.java", "BodyUseAPI": [], "Fixed commit": "e3e393e413c78dd607860f495bd25a927f40ce87", "Url": "https://api.github.com/repos/cracy1/Autonomous-Warehouse", "Date": "2016-02-19T16:00:03Z"},
{"Line": "=>2842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInput.readUTF()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((drivers.get(selectedDriverQualifiedName)) != null) { ctx.getDriverContext().setSelectedDriver(drivers.get(selectedDriverQualifiedName)); ctx.setDriverQuery(ctx.getSelectedDriver(), ctx.getSelectedDriverQuery()); }else { log.info(\"Ignoring {} as the driver is not loaded\", ctx.getQueryHandle()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2274/buggy-version/lens-server.src.main.java.org.apache.lens.server.query.QueryExecutionServiceImpl.java", "BodyUseAPI": ["ctx.getDriverContext().setSelectedDriver(drivers.get(selectedDriverQualifiedName))", "java.util.Map<java.lang.String, org.apache.lens.server.query.LensDriver>.get(java.lang.String)"], "Fixed commit": "fc3dc04acc1aff1154745fa5132cb975ac5fabb8", "Url": "https://api.github.com/repos/rlugojr/lens", "Date": "2016-07-27T09:32:14Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (photoId == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/592/buggy-version/src.org.kde.kdeconnect.Helpers.ContactsHelper.java", "BodyUseAPI": [], "Fixed commit": "ded345ff32505bdc8229dd1443755d5f3b17d914", "Url": "https://api.github.com/repos/liushuyu/kdeconnect-android", "Date": "2016-05-18T04:31:37Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((c != null) && ((c.getComponentId()) == (this.id))) && ((c.getConnectionId()) == connectionId)) { c = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2160/buggy-version/src.vswe.stevesfactory.components.FlowComponent.java", "BodyUseAPI": [], "Fixed commit": "20219143ca845b4266674d9b416c3f78443e76c0", "Url": "https://api.github.com/repos/Vswe/ModJam3", "Date": "2013-12-20T22:03:33Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((title != null) && (title.trim().isEmpty())) { title = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8673/buggy-version/src.main.java.seedu.taskman.logic.commands.EditCommand.java", "BodyUseAPI": [], "Fixed commit": "c841069e23fb6e6363a139dea77311583018238d", "Url": "https://api.github.com/repos/CS2103AUG2016-W10-C1/main", "Date": "2016-10-29T11:29:43Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pi) != null) am.cancel(pi);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4712/buggy-version/app.src.main.java.com.example.kbilk.clocker.Alarm.Alarm.java", "BodyUseAPI": [], "Fixed commit": "2b1598690b4d6e87b89b6e6f1300bf1464e82ee4", "Url": "https://api.github.com/repos/kbilkis/Clock-wannabe", "Date": "2017-11-06T13:09:44Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clearBtn) != null) clearBtn.setVisible(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8727/buggy-version/workspace.WATisRain.src.com.lucky.watisrain.map.MapView.java", "BodyUseAPI": [], "Fixed commit": "cfbbea6b6f24b3dc4854726cd099f2948eff5647", "Url": "https://api.github.com/repos/luckytoilet/WATisRain", "Date": "2014-08-01T21:28:31Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clearBtn) != null) clearBtn.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8727/buggy-version/workspace.WATisRain.src.com.lucky.watisrain.map.MapView.java", "BodyUseAPI": [], "Fixed commit": "cfbbea6b6f24b3dc4854726cd099f2948eff5647", "Url": "https://api.github.com/repos/luckytoilet/WATisRain", "Date": "2014-08-01T21:28:31Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mapView.clearBtn) != null) mapView.clearBtn.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8727/buggy-version/workspace.WATisRain.src.com.lucky.watisrain.MainActivity.java", "BodyUseAPI": ["mapView.clearBtn.setVisible(boolean)"], "Fixed commit": "cfbbea6b6f24b3dc4854726cd099f2948eff5647", "Url": "https://api.github.com/repos/luckytoilet/WATisRain", "Date": "2014-08-01T21:28:31Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.awt.Color>.toArray(java.awt.Color[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((colorsArr.length) == 1) { fillPaint = colorsArr[0]; }else { fillPaint = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8836/buggy-version/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.exporters.shape.BitmapExporter.java", "BodyUseAPI": [], "Fixed commit": "f847e384d2b1ccf3ed951113796ea59b6b47fbca", "Url": "https://api.github.com/repos/blianchen/jpexs-decompiler", "Date": "2017-04-01T12:51:08Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((events) == null) { events = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7940/buggy-version/src.main.java.entity.Department.java", "BodyUseAPI": [], "Fixed commit": "a24627bcf1d6b4d9f06b8bfd5145485ac29ef312", "Url": "https://api.github.com/repos/danielgron/RK-TrialRun", "Date": "2016-11-22T13:56:00Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMediaPlayer) != null) { mMediaPlayer.release(); mMediaPlayer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6894/buggy-version/app.src.main.java.com.example.manuelsanchez.spotifystreamer.MusicPlayerActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "f586e2b722294afdc8aac7ae0f2944b4c362c196", "Url": "https://api.github.com/repos/manl1100/spotify-streamer", "Date": "2015-06-19T00:43:42Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (child == (root)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8819/buggy-version/src.main.java.br.usp.each.saeg.bytecode.analysis.graph.BasicBlockGraphNodeJoiner.java", "BodyUseAPI": [], "Fixed commit": "cf9a2cf026d45ed612c750532a124d545c629ab9", "Url": "https://api.github.com/repos/andrioli/bytecode-analysis", "Date": "2014-02-18T19:47:33Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.pde.core.plugin.PluginRegistry.findModel(org.eclipse.core.resources.IProject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (base != null) { org.eclipse.pde.core.build.IBuildModel buildModel = org.eclipse.pde.core.plugin.PluginRegistry.createBuildModel(base); org.eclipse.pde.core.build.IBuildEntry entry = buildModel.getBuild().getEntry(\"source..\"); java.lang.String token = (jce.codegen.XtendLibraryHelper.XTEND) + (jce.codegen.XtendLibraryHelper.SLASH); if (entry.contains(token)) { jce.codegen.XtendLibraryHelper.logger.warn((\"build.properties already contains \" + token)); }else { entry.addToken(token); } if (buildModel instanceof org.eclipse.pde.core.IEditableModel) { ((org.eclipse.pde.core.IEditableModel) (buildModel)).save(); } }else { jce.codegen.XtendLibraryHelper.logger.error(\"Generated project is no plug-in project or contains a malformed manifest.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6487/buggy-version/src.main.java.jce.codegen.XtendLibraryHelper.java", "BodyUseAPI": ["org.eclipse.pde.core.plugin.PluginRegistry.createBuildModel(org.eclipse.pde.core.plugin.IPluginModelBase)"], "Fixed commit": "4f17652d79fc00c8d37e675fa1d3bddcd9814aae", "Url": "https://api.github.com/repos/tsaglam/JavaCodeEcorification", "Date": "2017-07-25T12:59:17Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getFragmentManager().findFragmentById(R.id.day_output_holder)) != null) && (getFragmentManager().findFragmentById(R.id.day_output_holder).getClass().equals(com.insalyon.les24heures.fragments.DayListFragment.class))) { android.animation.AnimatorSet set = ((android.animation.AnimatorSet) (android.animation.AnimatorInflater.loadAnimator(getApplicationContext(), R.animator.slide_out_to_the_right))); set.setTarget(indicator); set.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4800/buggy-version/app.src.main.java.com.insalyon.les24heures.DayActivity.java", "BodyUseAPI": [], "Fixed commit": "24502e8c9a351b993b6df14e768851899108088f", "Url": "https://api.github.com/repos/24HeuresINSA/24h-android-app", "Date": "2015-03-21T21:45:06Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (num > (sentences.size())) { num = sentences.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8924/buggy-version/src.com.arctro.ts.baseparsers.SentenceRetriever.java", "BodyUseAPI": ["java.util.List<com.arctro.ts.supporting.Sentence>.size()"], "Fixed commit": "7b2e544e9760a66c798ffdf914bcbbe07f36a159", "Url": "https://api.github.com/repos/BenMMcLean/TextSummarizer", "Date": "2016-07-12T07:54:05Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<org.slc.sli.ingestion.transformation.normalization.did.DidNaturalKey>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == naturalKeys) { throw new org.slc.sli.validation.NoNaturalKeysDefinedException(((\"Natural keys not defined for record type '\" + recordType) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6352/buggy-version/sli.ingestion.ingestion-core.src.main.java.org.slc.sli.ingestion.delta.SliDeltaManager.java", "BodyUseAPI": [], "Fixed commit": "90d9b7ccc9915300e7e80c236ae25d4b9bc6354c", "Url": "https://api.github.com/repos/inbloom/secure-data-service", "Date": "2013-12-11T15:13:42Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3203/buggy-version/specrunner-core.src.main.java.org.specrunner.util.string.core.StringNormalizerDefault.java", "BodyUseAPI": [], "Fixed commit": "61b30ecdedfb45e62bce791f064a78c827c0a57b", "Url": "https://api.github.com/repos/thiagolvlsantos/specrunner", "Date": "2015-10-06T12:05:37Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.ParsedResult.getTaskDetails()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((targetTask.getTaskType().equals(TaskType.TIMED)) && (isSourceTaskWithinTimedTask(sourceTask, targetTask))) { returnList.add(targetTask); }else if ((isSameDueDate(sourceTask, targetTask)) && (isNotCompleted(targetTask))) { returnList.add(targetTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6073/buggy-version/src.commandFactory.Search.java", "BodyUseAPI": ["commandFactory.Search.isNotCompleted(taskDo.Task)", "commandFactory.Search.isSameDueDate(taskDo.Task,taskDo.Task)", "java.util.ArrayList<taskDo.Task>.add(taskDo.Task)", "java.util.ArrayList<taskDo.Task>.add(taskDo.Task)"], "Fixed commit": "84819b0824da88c6b67d752883174a6be2eb6849", "Url": "https://api.github.com/repos/cs2103aug2014-t17-1j/main", "Date": "2014-11-06T08:20:38Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((pl.getGame().getStatus()) == (GameStatus.COUNTDOWN)) || (!(pl.getConfig().getBoolean(\"enable_auto_start\")))) e.setJoinMessage(pl._(\"join_message\").replace(\"{PLAYER}\", e.getPlayer().getDisplayName())); else e.setJoinMessage(pl._(\"join_message_waiting\").replace(\"{PLAYER}\", e.getPlayer().getDisplayName()).replace(\"{LEFT}\", (\"\" + ((pl.getConfig().getInt(\"auto_start\")) - (pl.getGame().playersNb())))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7305/buggy-version/src.main.java.eu.gnomino.openuhc.NetworkListener.java", "BodyUseAPI": ["pl._(\"join_message_waiting\").replace(java.lang.String,e.getPlayer().getDisplayName())", "pl.getConfig().getInt(java.lang.String)", "eu.gnomino.openuhc.OpenUHC._(java.lang.String)", "pl._(\"join_message\").replace(java.lang.String,e.getPlayer().getDisplayName())", "org.bukkit.event.player.PlayerJoinEvent.setJoinMessage(pl._(\"join_message\").replace(\"{PLAYER}\", e.getPlayer().getDisplayName()))", "org.bukkit.event.player.PlayerJoinEvent.setJoinMessage(pl._(\"join_message_waiting\").replace(\"{PLAYER}\", e.getPlayer().getDisplayName()).replace(\"{LEFT}\", (\"\" + ((pl.getConfig().getInt(\"auto_start\")) - (pl.getGame().playersNb())))))", "eu.gnomino.openuhc.OpenUHC.getGame()", "pl.getGame().playersNb()", "eu.gnomino.openuhc.OpenUHC.getConfig()", "eu.gnomino.openuhc.OpenUHC._(java.lang.String)", "pl._(\"join_message_waiting\").replace(\"{PLAYER}\", e.getPlayer().getDisplayName()).replace(java.lang.String,(\"\" + ((pl.getConfig().getInt(\"auto_start\")) - (pl.getGame().playersNb()))))"], "Fixed commit": "3342d6b4aa061599e2465787690b4c541f322b23", "Url": "https://api.github.com/repos/Gnomino/OpenUHC", "Date": "2015-04-26T09:56:55Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (identifiable == null) identifiable = rid;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6766/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ridbag.embedded.OEmbeddedRidBag.java", "BodyUseAPI": [], "Fixed commit": "eba88baffd412aa02e2a2c8c532089bb6427b670", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-08-02T14:09:06Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sbml.jsbml.Reaction.getKineticLaw()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (kl != null) { if (!mmedia) { kl.getLocalParameter(\"LOWER_BOUND\").setValue(0.0); }else if ((kl.getLocalParameter(\"LOWER_BOUND\").getValue()) == 0) { kl.getLocalParameter(\"LOWER_BOUND\").setValue((-1000)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2682/buggy-version/src.es.csic.cnb.server.DefaultMinMedia.java", "BodyUseAPI": ["kl.getLocalParameter(\"LOWER_BOUND\").setValue(double)", "org.sbml.jsbml.KineticLaw.getLocalParameter(java.lang.String)", "org.sbml.jsbml.KineticLaw.getLocalParameter(java.lang.String)", "kl.getLocalParameter(\"LOWER_BOUND\").setValue(int)", "org.sbml.jsbml.KineticLaw.getLocalParameter(java.lang.String)", "kl.getLocalParameter(\"LOWER_BOUND\").getValue()"], "Fixed commit": "2b433d341f0bbcbe1f4ea60d5f73e92c3a66c9d1", "Url": "https://api.github.com/repos/jmfernandez/CombiModelWeb", "Date": "2016-04-20T23:16:07Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mmIdList.contains(r.getId()))) { org.sbml.jsbml.KineticLaw kl = r.getKineticLaw(); if (kl != null) { kl.getLocalParameter(\"LOWER_BOUND\").setValue(0.0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2682/buggy-version/src.es.csic.cnb.server.MergeServiceImpl.java", "BodyUseAPI": ["org.sbml.jsbml.Reaction.getKineticLaw()"], "Fixed commit": "2b433d341f0bbcbe1f4ea60d5f73e92c3a66c9d1", "Url": "https://api.github.com/repos/jmfernandez/CombiModelWeb", "Date": "2016-04-20T23:16:07Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atlassian.jira.user.UserProjectHistoryManager.getCurrentProject(Permissions.CREATE_ISSUE,com.atlassian.crowd.embedded.api.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (p.getKey().equals(\"MP\")) { ru.megaplan.jira.plugins.megaworkpressure.servlet.filter.UserPressureServletFilter.log.warn(\"MP FOUND\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6668/buggy-version/src.main.java.ru.megaplan.jira.plugins.megaworkpressure.servlet.filter.UserPressureServletFilter.java", "BodyUseAPI": [], "Fixed commit": "541140915d76e138c59ed64c699322788a1e56d9", "Url": "https://api.github.com/repos/Firfi/mega-work-pressure", "Date": "2012-06-04T21:57:35Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.msergey.jalg.graphs.max_spacing_k_clustering.Node.getCluster()", "edu.msergey.jalg.graphs.max_spacing_k_clustering.Node.getCluster()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (oldCluster != newCluster) { for (edu.msergey.jalg.graphs.max_spacing_k_clustering.Node node : node2.getCluster().getNodes()) { node.setCluster(newCluster); newCluster.getNodes().add(node); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3058/buggy-version/src.main.java.edu.msergey.jalg.graphs.max_spacing_k_clustering.Graph.java", "BodyUseAPI": ["edu.msergey.jalg.graphs.max_spacing_k_clustering.Node.setCluster(edu.msergey.jalg.graphs.max_spacing_k_clustering.Cluster)", "newCluster.getNodes().add(edu.msergey.jalg.graphs.max_spacing_k_clustering.Node)", "edu.msergey.jalg.graphs.max_spacing_k_clustering.Cluster.getNodes()"], "Fixed commit": "fb6b721b6ba8d0c5e50ea6faffec2bf87d09fd3e", "Url": "https://api.github.com/repos/msergey/jalg", "Date": "2012-12-23T20:07:53Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != is) { updateEnvVars(is, envVars); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4280/buggy-version/src.main.java.org.jenkinsci.plugins.custombuildmessage.PostBuildCustMsgRecorder.java", "BodyUseAPI": ["org.jenkinsci.plugins.custombuildmessage.PostBuildCustMsgRecorder.updateEnvVars(java.io.InputStream,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "ecc1cc7a63e5441826b352e3b6691494e89e8650", "Url": "https://api.github.com/repos/jenkinsci/customized-build-message-plugin", "Date": "2017-05-16T14:43:49Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof java.net.SocketTimeoutException) org.openhab.binding.benqprojector.internal.transport.BenqProjectorNetworkTransport.logger.warn(\"Timed out reading response from projector\"); else if (e instanceof java.io.IOException) org.openhab.binding.benqprojector.internal.transport.BenqProjectorNetworkTransport.logger.error((\"IO Exception while reading response from projector: \" + (e.getMessage())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4569/buggy-version/bundles.binding.org.openhab.binding.benqprojector.src.main.java.org.openhab.binding.benqprojector.internal.transport.BenqProjectorNetworkTransport.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String)", "java.lang.Exception.getMessage()"], "Fixed commit": "59e8d99150faeed2597cb19b3633feaae2f8903e", "Url": "https://api.github.com/repos/kaikreuzer/openhab", "Date": "2014-09-27T15:44:06Z"},
{"Line": "=>1223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toManyNode.value()) != null) { childObj = toManyNode.value(); }else { childObj = IERXRestDelegate.Factory.delegateForClassDescription(destinationClassDescription).objectOfEntityWithID(destinationClassDescription, id, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2709/buggy-version/Frameworks.EOF.ERRest.Sources.er.rest.ERXRestRequestNode.java", "BodyUseAPI": ["er.rest.ERXRestRequestNode.value()"], "Fixed commit": "a4c3bd7f35814407b6ee039d6e6c12d5aeb48ff1", "Url": "https://api.github.com/repos/mvaught/wonder", "Date": "2012-06-19T01:29:48Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dstPath.exists())) { if (dstPath.isDirectory()) { dstPath.mkdirs(); }else { java.io.File p = new java.io.File(dstPath.getParent()); if (!(p.exists())) { p.mkdirs(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3287/buggy-version/modules.common.src.main.java.org.shaolin.bmdp.utils.FileUtil.java", "BodyUseAPI": ["java.io.File.isDirectory()", "java.io.File.mkdirs()", "java.io.File.getParent()"], "Fixed commit": "3033561c513007a4eef20c623439c380d804641c", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2017-05-30T15:10:27Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dest.exists())) { if (dest.isDirectory()) { dest.mkdirs(); }else { java.io.File p = new java.io.File(dest.getParent()); if (!(p.exists())) { p.mkdirs(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3287/buggy-version/modules.common.src.main.java.org.shaolin.bmdp.utils.FileUtil.java", "BodyUseAPI": ["java.io.File.getParent()", "java.io.File.mkdirs()", "java.io.File.isDirectory()"], "Fixed commit": "3033561c513007a4eef20c623439c380d804641c", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2017-05-30T15:10:27Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trimmedAddress.endsWith(org.adoptopenjdk.jitwatch.model.assembly.HEXA_POSTFIX)) { trimmedAddress = trimmedAddress.substring(0, ((trimmedAddress.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8397/buggy-version/src.main.java.org.adoptopenjdk.jitwatch.model.assembly.AssemblyUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "ad8ef1f033336e4fd94bf23a1dffe30fe5f63bfa", "Url": "https://api.github.com/repos/AdoptOpenJDK/jitwatch", "Date": "2015-07-01T14:57:05Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCompositeDisposables) != null) { mCompositeDisposables.clear(); mCompositeDisposables = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3533/buggy-version/mvplife.src.main.java.com.seongil.mvplife.base.RxMvpPresenter.java", "BodyUseAPI": [], "Fixed commit": "794711e0b82cab7a3822100f7362541a1293e589", "Url": "https://api.github.com/repos/allsoft777/MVP-with-Firebase", "Date": "2017-04-19T16:29:39Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCompositeDisposables) != null) { mCompositeDisposables.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3533/buggy-version/mvplife.src.main.java.com.seongil.mvplife.base.RxMvpPresenter.java", "BodyUseAPI": [], "Fixed commit": "794711e0b82cab7a3822100f7362541a1293e589", "Url": "https://api.github.com/repos/allsoft777/MVP-with-Firebase", "Date": "2017-04-19T16:29:39Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mDb) == null) || (!(mDb.isOpen()))) open();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2840/buggy-version/src.org.brandroid.openmanager.adapters.OpenPathDbAdapter.java", "BodyUseAPI": [], "Fixed commit": "36ed1e8fb06f8bac9dfd5f9d0581adaec844df0b", "Url": "https://api.github.com/repos/BrandroidTools/OpenExplorer", "Date": "2013-02-23T02:08:34Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actualTypes == null) { actualTypes = paramType.getActualTypeArguments(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4604/buggy-version/src.main.java.com.alibaba.fastjson.util.FieldInfo.java", "BodyUseAPI": [], "Fixed commit": "f0a8796ce53288e99803bfb986df760b18f211cd", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-05-11T15:36:08Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delayMs > 0) try { java.lang.Thread.sleep(delayMs); } catch (java.lang.InterruptedException ie) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2745/buggy-version/lib-dempsyimpl.src.main.java.com.nokia.dempsy.cluster.invm.LocalClusterSessionFactory.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "b54a2f9497e83cc9227d4e2ac5a1f106dfc9ab15", "Url": "https://api.github.com/repos/jimfcarroll/Dempsy", "Date": "2013-05-10T19:28:32Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (delayMs > 0) try { java.lang.Thread.sleep(delayMs); } catch (java.lang.InterruptedException ie) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2745/buggy-version/lib-dempsyimpl.src.main.java.com.nokia.dempsy.cluster.zookeeper.ZookeeperSession.java", "BodyUseAPI": ["java.lang.Thread.sleep(long)"], "Fixed commit": "b54a2f9497e83cc9227d4e2ac5a1f106dfc9ab15", "Url": "https://api.github.com/repos/jimfcarroll/Dempsy", "Date": "2013-05-10T19:28:32Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentSong()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3026/buggy-version/app.src.main.java.com.zezo.music.MusicService.java", "BodyUseAPI": [], "Fixed commit": "1cce009599afbca35e0a46095bda80ffde45bc45", "Url": "https://api.github.com/repos/aycanadal/Zezo", "Date": "2016-08-27T01:22:46Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secretaryPhone.length) > 0) this.secretaryPhone = secretaryPhone;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/544/buggy-version/src.main.java.catholicon.domain.Club.java", "BodyUseAPI": [], "Fixed commit": "6fcadcbb21734924f953413c27906f11a3648414", "Url": "https://api.github.com/repos/rdomloge/catholicon", "Date": "2017-11-05T00:37:27Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chairManPhone.length) > 0) this.chairManPhone = chairManPhone;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/544/buggy-version/src.main.java.catholicon.domain.Club.java", "BodyUseAPI": [], "Fixed commit": "6fcadcbb21734924f953413c27906f11a3648414", "Url": "https://api.github.com/repos/rdomloge/catholicon", "Date": "2017-11-05T00:37:27Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((treasurerPhone.length) > 0) this.treasurerPhone = treasurerPhone;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/544/buggy-version/src.main.java.catholicon.domain.Club.java", "BodyUseAPI": [], "Fixed commit": "6fcadcbb21734924f953413c27906f11a3648414", "Url": "https://api.github.com/repos/rdomloge/catholicon", "Date": "2017-11-05T00:37:27Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matchSecPhone.length) > 0) this.matchSecPhone = matchSecPhone;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/544/buggy-version/src.main.java.catholicon.domain.Club.java", "BodyUseAPI": [], "Fixed commit": "6fcadcbb21734924f953413c27906f11a3648414", "Url": "https://api.github.com/repos/rdomloge/catholicon", "Date": "2017-11-05T00:37:27Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bean == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4012/buggy-version/swt-bean-widgets-core.src.main.java.com.magnetstreet.swt.beanwidget.datatreegrid.AbstractDataTreeGrid.java", "BodyUseAPI": [], "Fixed commit": "78d493d75a4f5aaa902223fcd70ffcb39eaf9878", "Url": "https://api.github.com/repos/martin1yness/swt-bean-widgets", "Date": "2011-12-07T01:42:44Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputStack == null) { inputStack = slotsList.get(slot).getStack(lockedSeed, lockedSeedMeta); inputStack.stackSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7559/buggy-version/src.main.java.com.InfinityRaider.AgriCraft.tileentity.storage.TileEntitySeedStorage.java", "BodyUseAPI": [], "Fixed commit": "465ed1517cbd086c8fd252f8ae59c8a229e9ea31", "Url": "https://api.github.com/repos/AgriCraft/AgriCraft", "Date": "2015-12-13T12:25:33Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (time.before(java.util.Calendar.getInstance())) { time.add(java.util.Calendar.YEAR, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/22/buggy-version/src.fancy4.taskie.model.TimeDetector.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "70ef6a07411d280bd0d8cfb61323cb5e42bc6d84", "Url": "https://api.github.com/repos/cs2103aug2015-w13-1j/main", "Date": "2015-11-01T08:02:27Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((folder.isDirectory()) && (listOfFiles != null)) { for (java.io.File f : listOfFiles) { if ((f.isFile()) && (f.getName().contains(filename))) { res.add(f.getAbsolutePath()); }else if ((f.isDirectory()) && (this.parser.doesFlagExist(\"R\"))) { res.addAll(findFiles(filename, f.getAbsolutePath())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6969/buggy-version/src.edu.wright.cs.jfiles.commands.Find.java", "BodyUseAPI": [], "Fixed commit": "eac01e795bfa63cd8dd1b4f48e838d0d82a1fc7e", "Url": "https://api.github.com/repos/rsanchez-wsu/jfiles", "Date": "2017-02-01T23:40:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.contextRefresher) == null) { org.apereo.cas.support.events.listener.DefaultCasEventListener.LOGGER.warn(\"Unable to refresh application context, since no refresher is available\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6993/buggy-version/core.cas-server-core-events.src.main.java.org.apereo.cas.support.events.listener.DefaultCasEventListener.java", "BodyUseAPI": [], "Fixed commit": "8b74b4aed9bd83932e84aa1fe7d07c11cc538c4f", "Url": "https://api.github.com/repos/leebake/cas", "Date": "2017-02-07T14:31:14Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ctor.isAnnotationPresent(com.redhat.ceylon.compiler.java.metadata.Ignore.class)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6383/buggy-version/runtime.com.redhat.ceylon.compiler.java.runtime.metamodel.Metamodel.java", "BodyUseAPI": [], "Fixed commit": "528cefe2f10793bd783fadd403a7d1993a2542f5", "Url": "https://api.github.com/repos/ceylon/ceylon.language", "Date": "2015-03-16T13:47:16Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getLobby()) != null) { removeFromLobby(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5436/buggy-version/src.Server.src.LobbyManager.java", "BodyUseAPI": ["LobbyManager.removeFromLobby(Player)"], "Fixed commit": "5d895a95f4fc90fbef5dc8f2b06cf7bb6f5dade7", "Url": "https://api.github.com/repos/Trishun/PPZ_Project", "Date": "2017-06-06T06:41:53Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.sagebionetworks.bridge.exporter.BridgeExporter.shouldConvertFreeformTextToAttachment(schemaKey, oneFieldName)) { synapseType = org.sagebionetworks.repo.model.table.ColumnType.FILEHANDLEID; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7436/buggy-version/src.main.java.org.sagebionetworks.bridge.exporter.UploadSchemaHelper.java", "BodyUseAPI": [], "Fixed commit": "e9b3811c8cceb923f1956719e0f26eb169f9b95c", "Url": "https://api.github.com/repos/Sage-Bionetworks/Bridge-Exporter", "Date": "2015-03-27T22:32:51Z"},
{"Line": "=>2484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ludoscity.findmybikes.helpers.DBHelper.getAutoUpdate(this)) { Utils.Snackbar.makeStyled(mCoordinatorLayout, R.string.auto_download_failed, Snackbar.LENGTH_INDEFINITE, android.support.v4.content.ContextCompat.getColor(this, R.color.theme_primary_dark)).setAction(R.string.resume, new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { com.ludoscity.findmybikes.helpers.DBHelper.resumeAutoUpdate(); } }).show(); }else { Utils.Snackbar.makeStyled(mCoordinatorLayout, R.string.manual_download_failed, Snackbar.LENGTH_INDEFINITE, android.support.v4.content.ContextCompat.getColor(this, R.color.theme_primary_dark)).setAction(R.string.retry, new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { mDownloadWebTask = new com.ludoscity.findmybikes.activities.NearbyActivity.DownloadWebTask(); mDownloadWebTask.execute(); } }).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6014/buggy-version/FindMyBikes.app.src.main.java.com.ludoscity.findmybikes.activities.NearbyActivity.java", "BodyUseAPI": [], "Fixed commit": "0b52a0a81d47bce992ce67cd18eaac0c54037448", "Url": "https://api.github.com/repos/f8full/ludOScity", "Date": "2016-05-30T15:45:28Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((searchResults.size()) == 0) { listModel.addElement(\"No serch results available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2364/buggy-version/src.Search.java", "BodyUseAPI": [], "Fixed commit": "4cded9a9559536121bb19e7cb3d271238d16bbfa", "Url": "https://api.github.com/repos/mhanberg/Buggy-s-TV-Guide", "Date": "2015-02-20T03:16:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((searchResults.size()) == 0) { btnNewButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2364/buggy-version/src.Search.java", "BodyUseAPI": [], "Fixed commit": "4cded9a9559536121bb19e7cb3d271238d16bbfa", "Url": "https://api.github.com/repos/mhanberg/Buggy-s-TV-Guide", "Date": "2015-02-20T03:16:50Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((semester < 1) || (semester > 6)) { java.lang.System.out.print(\"semester fejl\"); throw new java.lang.IllegalArgumentException(\"Semester must be a value of 1-6\"); }else if ((userProvider.getUserByEmail(validatedUser.getEmail())) != null) { throw new java.lang.IllegalArgumentException(\"Email already exists\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3189/buggy-version/src.main.java.server.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "197cdedbcb01776b16be46bad4fe0f24c4217d5d", "Url": "https://api.github.com/repos/Distribuerede-Systemer-2017/NexusROFL", "Date": "2017-10-31T13:52:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groupBy) { if (barSizeSec != null) { s = (((((((((DBQuery.GROUP.toString().toUpperCase()) + \" \") + (DBQuery.BY.toString().toUpperCase())) + \" \") + (DBQuery.TIME.toString().toUpperCase())) + \"(\") + barSizeSec) + \"s\") + \")\") + \" \"; }else { com.onenow.hedgefund.logging.Watchr.warning(\"QUERY GROUPBY REQUESTED WITH NULL BARSIZE\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3476/buggy-version/src.main.java.com.onenow.hedgefund.series.QueryDB.java", "BodyUseAPI": [], "Fixed commit": "a178e6cfdf5d3472d7df7bc9e3a03fa42b2d33d5", "Url": "https://api.github.com/repos/pablo-tech/Influx--Database-TimeSeries", "Date": "2017-08-01T16:08:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (textureBuffer != null) { textureBuffer.rewind(); this.textureBuffer = com.ardor3d.util.geom.BufferUtils.clone(textureBuffer); }else { this.textureBuffer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2238/buggy-version/src.main.java.org.concord.energy3d.model.UserData.java", "BodyUseAPI": ["com.ardor3d.util.geom.BufferUtils.clone(java.nio.FloatBuffer)", "java.nio.FloatBuffer.rewind()"], "Fixed commit": "0e8ac8cdb802144f6d85663161366818c8cdfe04", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2017-02-03T13:32:36Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != (org.cocos2d.menus.CCMenu.MenuState.kMenuStateWaiting)) this.ccTouchesCancelled(event);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3226/buggy-version/cocos2d-android.src.org.cocos2d.menus.CCMenu.java", "BodyUseAPI": [], "Fixed commit": "e9b22dfb126a4a2437f9a950f2a05534b547d852", "Url": "https://api.github.com/repos/apexknowledge/cocos2d", "Date": "2011-04-02T02:55:58Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.getTaEditor().getTaEditor().getLineStartOffset(int)", "view.getTaEditor().getTaEditor().getLineEndOffset(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((endOffset - startOffset) > 0) { java.lang.String taText = view.getTaEditor().getTaEditor().getText(startOffset, (endOffset - startOffset)); view.getTaEditor().getTaEditor().replaceRange(\"\", startOffset, endOffset); deletedItemStack.push(new CommandControl.Controller.DeletedItem(startOffset, taText)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3238/buggy-version/src.CommandControl.Controller.DeleteLineController.java", "BodyUseAPI": ["java.util.Stack<CommandControl.Controller.DeletedItem>.push(CommandControl.Controller.DeletedItem)", "view.getTaEditor().getTaEditor().getText(int,int)", "view.getTaEditor().getTaEditor().replaceRange(java.lang.String,int,int)"], "Fixed commit": "6426d333c8bd9027870545b91085273921101934", "Url": "https://api.github.com/repos/ArduinoEthernetController/ISA_Praktikum", "Date": "2017-11-14T08:57:15Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minestrapteam.minestrappolation.Minestrappolation.shouldOresEffect) && ((this.entityEffected) instanceof net.minecraft.entity.monster.EntitySkeleton)) { living.addPotionEffect(new net.minecraft.potion.PotionEffect(Potion.resistance.getId(), (20 * 6), 1, false)); living.addPotionEffect(new net.minecraft.potion.PotionEffect(Potion.regeneration.getId(), (20 * 6), 0, false)); }else if (minestrapteam.minestrappolation.Minestrappolation.shouldOresEffect) { living.addPotionEffect(new net.minecraft.potion.PotionEffect(Potion.wither.getId(), 20, 1, false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2644/buggy-version/src.main.java.minestrapteam.minestrappolation.block.BlockPlutoniumOre.java", "BodyUseAPI": [], "Fixed commit": "98905a7aa1aa453b966d234ff68741fe3a6b4a3d", "Url": "https://api.github.com/repos/SoBiohazardous/Minestrappolation-Recode", "Date": "2014-07-02T19:38:26Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((emp.getPassword()) == null) { emp.setPassword(\"1234\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4538/buggy-version/src.main.java.io.github.proxyprint.kitchen.controllers.printshops.ManagerController.java", "BodyUseAPI": ["io.github.proxyprint.kitchen.models.printshops.Employee.setPassword(java.lang.String)"], "Fixed commit": "ba5d9db3212259f0b0b38c28c4bfac9174f0a802", "Url": "https://api.github.com/repos/ProxyPrint/proxyprint-kitchen", "Date": "2016-05-09T13:57:40Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (error.getResponse())) { platformRefreshTextView.setText(error.getResponse().getReason()); }else { platformRefreshTextView.setText(getResources().getString(R.string.unknown_error)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1892/buggy-version/mobile.src.main.java.in.codeseed.tubely.activities.StationActivity.java", "BodyUseAPI": ["retrofit.RetrofitError.getResponse()", "error.getResponse().getReason()", "android.widget.TextView.setText(error.getResponse().getReason())"], "Fixed commit": "4f8035f8f49ec24b273145831421851f75743b17", "Url": "https://api.github.com/repos/balachandarlinks/Tubely", "Date": "2014-12-09T16:14:55Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(postalCode.chars().allMatch(java.lang.Character::isDigit))) || ((postalCode.length()) != 4)) { javax.swing.JOptionPane.showMessageDialog(null, WarningMessage.INVALID_POSTAL_CODE); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/391/buggy-version/HotelAppFIT5148.src.Customer.CustomerInsertUpdateDialog.java", "BodyUseAPI": [], "Fixed commit": "284835f9574a63da80b713253936cd67fd4d9f5e", "Url": "https://api.github.com/repos/kaleyPATHozheng/fit5148-hotel", "Date": "2017-04-04T10:59:33Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nameSet[j].equals(\"View\")) { filter = j - 1; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1908/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.ParseFiles.ParseNFL.java", "BodyUseAPI": [], "Fixed commit": "28107702043978ab10f12c54a4d1aefc02c82a5c", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2013-07-12T17:49:38Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((nameSet[j].equals(\"QB\")) || (nameSet[j].equals(\"RB\"))) || (nameSet[j].equals(\"WR\"))) || (nameSet[j].equals(\"TE\"))) || (nameSet[j].equals(\"K\"))) { filter = j; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1908/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.ParseFiles.ParseNFL.java", "BodyUseAPI": [], "Fixed commit": "28107702043978ab10f12c54a4d1aefc02c82a5c", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2013-07-12T17:49:38Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nameSet[j].length()) == j) { filter = j; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1908/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.ParseFiles.ParseNFL.java", "BodyUseAPI": [], "Fixed commit": "28107702043978ab10f12c54a4d1aefc02c82a5c", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2013-07-12T17:49:38Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (methodToUse.getDeclaringClass().isAssignableFrom(me.libraryaddict.disguise.disguisetypes.FlagWatcher.class)) methodToUse.invoke(disguise.getWatcher(), value); else methodToUse.invoke(disguise, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2880/buggy-version/src.me.libraryaddict.disguise.utilities.BaseDisguiseCommand.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(disguise.getWatcher(),java.lang.Object)", "java.lang.reflect.Method.invoke(me.libraryaddict.disguise.disguisetypes.Disguise,java.lang.Object)"], "Fixed commit": "197c50083297576974a2b598873cd8811e68133d", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2014-09-13T12:21:39Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myUI) != null) { javax.swing.SwingUtilities.invokeLater(new java.lang.Runnable() { @java.lang.Override public void run() { myUI.setInteractiveMode(true); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3616/buggy-version/src.main.java.edu.clemson.cs.r2jt.proving2.AlgebraicProver.java", "BodyUseAPI": [], "Fixed commit": "a336b4f42d891a4cbdf390bbbabcc67538f9ee4a", "Url": "https://api.github.com/repos/bdurkee/RESOLVE", "Date": "2013-04-10T17:53:33Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myUI) != null) { javax.swing.SwingUtilities.invokeLater(new java.lang.Runnable() { @java.lang.Override public void run() { myUI.setInteractiveMode(true); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3616/buggy-version/src.main.java.edu.clemson.cs.r2jt.proving2.AlgebraicProver.java", "BodyUseAPI": [], "Fixed commit": "a336b4f42d891a4cbdf390bbbabcc67538f9ee4a", "Url": "https://api.github.com/repos/bdurkee/RESOLVE", "Date": "2013-04-10T17:53:33Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((tree[nodea].length) > a)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8708/buggy-version/src.roboticsdifficultproblemedwardville.BinaryTree.java", "BodyUseAPI": [], "Fixed commit": "82b167ffd0d027c744eae55fc50a6cf5f3905829", "Url": "https://api.github.com/repos/Peachball/Edwardville", "Date": "2014-11-02T03:40:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index > (-1)) { chineseKeyWord.append(baseData.substring(index, (index + (search.length())))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3419/buggy-version/QwertySearch.src.com.qwertysearch.util.QwertyMatchPinyinUnits.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "39ced2817349ef27f5025e890bcb45b614bb7a1f", "Url": "https://api.github.com/repos/handsomezhou/QwertySearchLibrary", "Date": "2014-11-26T11:11:58Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.weasis.core.ui.editor.SeriesViewerEvent.getSharedObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof org.weasis.core.ui.graphic.model.AbstractLayer.Identifier) { javax.swing.tree.DefaultTreeModel dtm = ((javax.swing.tree.DefaultTreeModel) (tree.getModel())); javax.swing.tree.DefaultMutableTreeNode node = new javax.swing.tree.DefaultMutableTreeNode(obj, true); drawings.add(node); dtm.nodesWereInserted(drawings, new int[]{ drawings.getIndex(node) }); if (((event.getSeriesViewer()) instanceof org.weasis.core.ui.editor.image.ImageViewerPlugin) && ((node.getUserObject()) instanceof org.weasis.core.ui.graphic.model.AbstractLayer.Identifier)) { org.weasis.core.ui.editor.image.DefaultView2d<?> pane = ((org.weasis.core.ui.editor.image.ImageViewerPlugin<?>) (event.getSeriesViewer())).getSelectedImagePane(); if (pane != null) { org.weasis.core.ui.graphic.model.AbstractLayer l = pane.getLayerModel().getLayer(((org.weasis.core.ui.graphic.model.AbstractLayer.Identifier) (node.getUserObject()))); if ((l != null) && (l.isVisible())) { tree.addCheckingPath(org.weasis.dicom.viewer2d.dockable.DisplayTool.getTreePath(node)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5696/buggy-version/weasis-dicom.weasis-dicom-viewer2d.src.main.java.org.weasis.dicom.viewer2d.dockable.DisplayTool.java", "BodyUseAPI": [], "Fixed commit": "a19a6fec8799718565699a495529070d1e01b280", "Url": "https://api.github.com/repos/nroduit/Weasis", "Date": "2013-11-09T15:20:34Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.weasis.core.api.media.data.MediaSeries<?>.getMedia(org.weasis.core.api.media.data.MediaSeries.MEDIA_POSITION,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (media == null) { java.util.List<org.weasis.core.api.media.data.MediaElement<?>> specialElements = ((java.util.List<org.weasis.core.api.media.data.MediaElement<?>>) (series.getTagValue(TagW.DicomSpecialElementList))); if ((specialElements != null) && ((specialElements.size()) > 0)) { media = specialElements.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5696/buggy-version/weasis-core.weasis-core-api.src.main.java.org.weasis.core.api.media.data.SeriesThumbnail.java", "BodyUseAPI": [], "Fixed commit": "a19a6fec8799718565699a495529070d1e01b280", "Url": "https://api.github.com/repos/nroduit/Weasis", "Date": "2013-11-09T15:20:34Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDescriptor().getNumOutputs()) < 1) { return new org.nd4j.autodiff.samediff.SDVariable[0]; }else return newVars;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5090/buggy-version/nd4j-backends.nd4j-api-parent.nd4j-api.src.main.java.org.nd4j.linalg.api.ops.DynamicCustomOp.java", "BodyUseAPI": [], "Fixed commit": "bf6ac8611c1bc908c71f74ab24e7d3e18a9cabab", "Url": "https://api.github.com/repos/deeplearning4j/nd4j", "Date": "2017-12-29T13:29:53Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.flowerplatform.emf_model.notation.Node>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (childViews.contains(child)) { removeChildView(child, child.getDiagrammableElement(), context); associatedViewOnOpenDiagram.getPersistentChildren().remove(child); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2468/buggy-version/org.flowerplatform.codesync.src.org.flowerplatform.codesync.remote.CodeSyncElementFeatureChangesProcessor.java", "BodyUseAPI": ["org.flowerplatform.emf_model.notation.View.getDiagrammableElement()", "org.flowerplatform.codesync.remote.CodeSyncElementFeatureChangesProcessor.removeChildView(org.flowerplatform.emf_model.notation.View,child.getDiagrammableElement(),java.util.Map<java.lang.String, java.lang.Object>)", "associatedViewOnOpenDiagram.getPersistentChildren().remove(org.flowerplatform.emf_model.notation.View)"], "Fixed commit": "8f7b24f0663814e653d2ccafcfb18cd8f3355af5", "Url": "https://api.github.com/repos/flower-platform/main", "Date": "2013-10-15T14:02:15Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((t != null) && ((t.getLocalizedMessage()) != null)) { if (t.getLocalizedMessage().equalsIgnoreCase(com.wolvencraft.morephysics.util.ExceptionHandler.lastError)) return; else com.wolvencraft.morephysics.util.ExceptionHandler.lastError = t.getClass().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/210/buggy-version/src.com.wolvencraft.morephysics.util.ExceptionHandler.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.Class<? extends java.lang.Throwable>.getName()", "java.lang.Throwable.getClass()", "java.lang.Throwable.getLocalizedMessage()"], "Fixed commit": "66d0fe5edfdfb10d2ea776b183e468e09755cd81", "Url": "https://api.github.com/repos/bitWolfy/MorePhysics", "Date": "2013-07-26T03:06:06Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.wolvencraft.morephysics.util.ExceptionHandler.lastError) == null) com.wolvencraft.morephysics.util.ExceptionHandler.lastError = t.getClass().getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/210/buggy-version/src.com.wolvencraft.morephysics.util.ExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "66d0fe5edfdfb10d2ea776b183e468e09755cd81", "Url": "https://api.github.com/repos/bitWolfy/MorePhysics", "Date": "2013-07-26T03:06:06Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((id == null) || (pin == null)) || (name == null)) { throw new org.ow2.chameleon.fuchsia.core.exceptions.BinderException(\"Not enough information provided to create GPIO Importer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2400/buggy-version/importers.raspberrypi.src.main.java.org.ow2.chameleon.fuchsia.raspberry.pi.internal.GPIOPojo.java", "BodyUseAPI": [], "Fixed commit": "3b34d9f998e0304b99a15a65e69cc9b5757a3d55", "Url": "https://api.github.com/repos/ow2-chameleon/fuchsia", "Date": "2014-03-03T14:06:26Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.telenor.connect.ConnectSdk.isCellularDataNetworkConnected())) { parameters.add(\"prompt\", \"no_seam\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/42/buggy-version/connect.src.com.telenor.connect.AbstractSdkProfile.java", "BodyUseAPI": [], "Fixed commit": "447717172321e0bd7b7e76bb3fb18a6f80bd6d7c", "Url": "https://api.github.com/repos/telenordigital/connect-android-sdk", "Date": "2017-07-10T13:18:43Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (reader != null) reader.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4295/buggy-version/de.prob.ui.src.de.prob.ui.ltl.LtlCheckingDialog.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "5048bf50d01298d81b2261a343e854250f64970a", "Url": "https://api.github.com/repos/bendisposto/prob", "Date": "2012-11-13T09:56:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wilson.world.manager.MenuManager.getInstance().getMatchingMenuIds(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (matchingIds.contains(id)) { menuId = id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6450/buggy-version/src.main.java.org.wilson.world.api.MenuAPI.java", "BodyUseAPI": [], "Fixed commit": "b2aac62085d2babeb91c6e02fff3d3c186fb749f", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2017-04-05T12:44:07Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args[0].equals(user)) { switch (args.length) { case 2 : return new uk.org.whoami.authme.cache.auth.PlayerAuth(args[0], args[1], \"198.18.0.1\", 0); case 3 : return new uk.org.whoami.authme.cache.auth.PlayerAuth(args[0], args[1], args[2], 0); case 4 : return new uk.org.whoami.authme.cache.auth.PlayerAuth(args[0], args[1], args[2], java.lang.Long.parseLong(args[3])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4079/buggy-version/src.uk.org.whoami.authme.datasource.FileDataSource.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "6dac582d22cc6871c7efd19979f5373db80cd37f", "Url": "https://api.github.com/repos/whoami-plugins/authme-2.0", "Date": "2011-10-03T16:56:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.plugin.PluginManager.getPlugin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (plugin != null) { return net.citizensnpcs.api.CitizensManager.isNPC(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4079/buggy-version/src.uk.org.whoami.authme.citizens.CitizensCommunicator.java", "BodyUseAPI": [], "Fixed commit": "6dac582d22cc6871c7efd19979f5373db80cd37f", "Url": "https://api.github.com/repos/whoami-plugins/authme-2.0", "Date": "2011-10-03T16:56:02Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((double) ((Statistics.timeCorrectionsMS.get()) / 1000)) >= ((double) (seconds))) { averageQueriesPerSecond = ((double) (totalAggregateOpsCount)) / ((double) (seconds)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4626/buggy-version/src.eu.ldbc.semanticpublishing.BenchmarkProcessObserver.java", "BodyUseAPI": [], "Fixed commit": "6d610d16969d44fe69b54607e6006e36499dee03", "Url": "https://api.github.com/repos/ldbc/ldbc_semanticpub_bm", "Date": "2014-06-06T07:16:50Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((columnAccess) instanceof com.raizlabs.android.dbflow.processor.definition.column.BlobColumnAccess) { columnAccessString = columnAccessString.substring(0, columnAccessString.lastIndexOf(\".getBlob()\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8834/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.definition.column.ColumnDefinition.java", "BodyUseAPI": [], "Fixed commit": "6578838848908a9822b8d4299bd27f9ff0fb0e7e", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2016-02-28T23:36:15Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(value)) value = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2368/buggy-version/ponysdk.src-core.main.java.com.ponysdk.ui.server.form2.validator.TwinFieldValidator.java", "BodyUseAPI": [], "Fixed commit": "fd8bea96b10dfb58280c1f599908fc0aab64c6c8", "Url": "https://api.github.com/repos/PonySDK/PonySDK", "Date": "2013-11-21T15:58:37Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ponysdk.ui.server.form2.formfield.FormField<java.lang.String>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(twinText)) twinText = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2368/buggy-version/ponysdk.src-core.main.java.com.ponysdk.ui.server.form2.validator.TwinFieldValidator.java", "BodyUseAPI": [], "Fixed commit": "fd8bea96b10dfb58280c1f599908fc0aab64c6c8", "Url": "https://api.github.com/repos/PonySDK/PonySDK", "Date": "2013-11-21T15:58:37Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.jbHeaderScroll) != null) this.jbHeaderScroll.animateHeaderDown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/861/buggy-version/jbbrowserlib.src.main.java.info.johannblake.widgets.jbbrowserlib.JBBrowser.java", "BodyUseAPI": [], "Fixed commit": "59772fa707264d12e5d697bf5b4650f5b4208edf", "Url": "https://api.github.com/repos/JohannBlake/JBBrowser", "Date": "2015-06-22T10:07:38Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wvBrowser) != null) wvBrowser.setY(rlToolbarCont.getHeight());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/861/buggy-version/jbbrowserlib.src.main.java.info.johannblake.widgets.jbbrowserlib.JBBrowser.java", "BodyUseAPI": [], "Fixed commit": "59772fa707264d12e5d697bf5b4650f5b4208edf", "Url": "https://api.github.com/repos/JohannBlake/JBBrowser", "Date": "2015-06-22T10:07:38Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wvBrowser) != null) wvBrowser.loadUrl(this.homepageUrl);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/861/buggy-version/jbbrowserlib.src.main.java.info.johannblake.widgets.jbbrowserlib.JBBrowser.java", "BodyUseAPI": [], "Fixed commit": "59772fa707264d12e5d697bf5b4650f5b4208edf", "Url": "https://api.github.com/repos/JohannBlake/JBBrowser", "Date": "2015-06-22T10:07:38Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["composition.getCharacters().get(com.airbnb.lottie.FontCharacter.hashFor(c, documentData.fontFamily))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (character == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8663/buggy-version/lottie.src.main.java.com.airbnb.lottie.TextLayer.java", "BodyUseAPI": [], "Fixed commit": "bb86aaacfc912818c8b46dee36e99c7058c3bfa6", "Url": "https://api.github.com/repos/airbnb/lottie-android", "Date": "2017-06-20T20:40:06Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((layerType == (com.airbnb.lottie.Layer.LayerType.Text)) && ((composition.getCharacters().size()) == 0)) { composition.addWarning(\"To use text, you must export text as glyphs in Bodymovin.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8663/buggy-version/lottie.src.main.java.com.airbnb.lottie.Layer.java", "BodyUseAPI": [], "Fixed commit": "bb86aaacfc912818c8b46dee36e99c7058c3bfa6", "Url": "https://api.github.com/repos/airbnb/lottie-android", "Date": "2017-06-20T20:40:06Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Criteria.uniqueResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (proc != null) { return proc; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5106/buggy-version/hibernate.common.src.main.java.org.n52.sos.ds.hibernate.dao.ProcedureDAO.java", "BodyUseAPI": [], "Fixed commit": "db2f35707f728db2e99ddd4fb5e6f65fdb99488c", "Url": "https://api.github.com/repos/52North/SOS", "Date": "2014-11-10T07:58:05Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(opStack.empty())) { org.araqne.logdb.query.parser.ExpressionParser.Term last = opStack.pop(); if (last instanceof org.araqne.logdb.query.parser.ExpressionParser.FuncTerm) { output.add(last); }else { opStack.push(last); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8826/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.parser.ExpressionParser.java", "BodyUseAPI": ["java.util.Stack<org.araqne.logdb.query.parser.ExpressionParser.Term>.pop()", "java.util.Stack<org.araqne.logdb.query.parser.ExpressionParser.Term>.push(org.araqne.logdb.query.parser.ExpressionParser.Term)"], "Fixed commit": "b4af1d2ea7beee373094680e395f85cbf30bb7df", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-05-01T06:47:54Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flags & (this.PARTLY)) != 0) { sql += java.lang.String.format(\"LIMIT %d OFFSET %d \", limit, offset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8338/buggy-version/src.main.java.com.classnotice.db.NoticeDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "fc42ac854d4c27eeacc2cf36d28d87ec33285d9a", "Url": "https://api.github.com/repos/Zumium/ClassNotice", "Date": "2016-07-04T15:23:49Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tree.lhsExtend.getEnd()) < (current.getEnd())) { removeList.add(rhsArray[i]); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1789/buggy-version/jsx-peg-syntax.src.main.java.net.vvakame.jsx.peg.JsxSemantics.java", "BodyUseAPI": [], "Fixed commit": "b771e641614eac09b969eb6a6cf63ee340c9710b", "Url": "https://api.github.com/repos/vvakame/jsx-plugin-for-eclipse", "Date": "2012-09-18T04:04:02Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof com.usal.jorgeav.sportapp.MainActivityContract.FragmentManagement) mFragmentManagementListener = ((com.usal.jorgeav.sportapp.MainActivityContract.FragmentManagement) (context));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3123/buggy-version/app.src.main.java.com.usal.jorgeav.sportapp.events.detail.DetailEventFragment.java", "BodyUseAPI": [], "Fixed commit": "3233a8f07dcf55fe54c9c43e2a78e207d6997065", "Url": "https://api.github.com/repos/jorgeavilae/SportApp", "Date": "2017-05-25T13:06:51Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code instanceof wyil.util.dfa.Code.Throw) { store = null; }else if (code instanceof wyil.util.dfa.Code.Goto) { wyil.util.dfa.Code.Goto gto = ((wyil.util.dfa.Code.Goto) (stmt.code)); merge(gto.target, store, stores); store = null; }else { wyil.util.dfa.Pair<wyil.util.dfa.Stmt, T> r = propagate(stmt, store); stmt = r.first(); store = r.second(); if (((stmt.code) instanceof wyil.util.dfa.Code.Fail) || ((stmt.code) instanceof wyil.util.dfa.Code.Return)) { store = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6934/buggy-version/src.base.wyil.util.dfa.ForwardFlowAnalysis.java", "BodyUseAPI": [], "Fixed commit": "058c66e55ae802b672b94fa39a98894be2d1eb57", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-04-04T15:03:17Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == (graph.getH().length)) matching[i] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4677/buggy-version/src.tcss543.singlehelper.SingleHelper.java", "BodyUseAPI": [], "Fixed commit": "37f92112da0336b48de822c876aa0f330dae506e", "Url": "https://api.github.com/repos/TCSS543MobileC/MC", "Date": "2013-11-29T17:27:31Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progress) == 100) { setFuelStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4178/buggy-version/app.src.main.java.kr.edcan.acar.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "acdae94a4e20d7b5be8f3499d86a9ff6a7ccadcc", "Url": "https://api.github.com/repos/buddman1208/ACAR", "Date": "2016-09-04T01:58:10Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progress) == 0) { android.widget.Toast.makeText(this, \"\uc5d4\uc9c4\uc774 \uaebc\uc9d1\ub2c8\ub2e4.\", Toast.LENGTH_SHORT).show(); bt.send(\"a\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4178/buggy-version/app.src.main.java.kr.edcan.acar.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "acdae94a4e20d7b5be8f3499d86a9ff6a7ccadcc", "Url": "https://api.github.com/repos/buddman1208/ACAR", "Date": "2016-09-04T01:58:10Z"},
{"Line": "=>4685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!r) r = consumeToken(b, org.intellij.xquery.parser.SEMICOLON);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5764/buggy-version/gen.org.intellij.xquery.parser.XQueryParser.java", "BodyUseAPI": [], "Fixed commit": "7123d3545ba65b310063977e2e6e1a614c4f1754", "Url": "https://api.github.com/repos/ligasgr/intellij-xquery", "Date": "2016-01-21T22:50:14Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((storage[i][j]) == 0) { grid.gridImg.draw(grid.xRow[j], grid.yRow[i]); }else if ((storage[i][j]) == 1) { Long.sQ1.draw(grid.xRow[j], grid.yRow[i]); }else if ((storage[i][j]) == 2) { Long.sQ2.draw(grid.xRow[j], grid.yRow[i]); }else if ((storage[i][j]) == 3) { Long.sQ3.draw(grid.xRow[j], grid.yRow[i]); }else if ((storage[i][j]) == 4) { Long.sQ4.draw(grid.xRow[j], grid.yRow[i]); }else if ((storage[i][j]) == 5) { Long.sQ5.draw(grid.xRow[j], grid.yRow[i]); }else if ((storage[i][j]) == 6) { Long.sQ6.draw(grid.xRow[j], grid.yRow[i]); }else if ((storage[i][j]) == 7) { Long.sQ7.draw(grid.xRow[j], grid.yRow[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6583/buggy-version/src.example.SimpleSlickGame.java", "BodyUseAPI": ["grid.gridImg.draw(grid.xRow[j],grid.yRow[i])", "Long.sQ2.draw(grid.xRow[j],grid.yRow[i])", "Long.sQ1.draw(grid.xRow[j],grid.yRow[i])", "Long.sQ4.draw(grid.xRow[j],grid.yRow[i])", "Long.sQ6.draw(grid.xRow[j],grid.yRow[i])", "Long.sQ5.draw(grid.xRow[j],grid.yRow[i])", "Long.sQ7.draw(grid.xRow[j],grid.yRow[i])", "Long.sQ3.draw(grid.xRow[j],grid.yRow[i])"], "Fixed commit": "6381f77e9034e03ef4102590f4afbfd4a4a7135a", "Url": "https://api.github.com/repos/TjobStickz/OOSE2015", "Date": "2015-05-07T10:48:38Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (budgetUnit != 0) { stateChanged(appsgate.lig.energy.monitoring.service.BUDGETUNIT_KEY, java.lang.String.valueOf(this.budgetUnit), java.lang.String.valueOf(budgetUnit)); this.budgetUnit = budgetUnit; }else { appsgate.lig.energy.monitoring.service.CoreEnergyMonitoringGroupImpl.logger.warn(\"setBudgetUnit(...), trying to set a zero value, keeping the previous value\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1815/buggy-version/sources.appsgate-project.integrated-technologies.software-services.EnergyMonitoringService.src.main.java.appsgate.lig.energy.monitoring.service.CoreEnergyMonitoringGroupImpl.java", "BodyUseAPI": ["java.lang.String.valueOf(double)", "appsgate.lig.energy.monitoring.service.CoreEnergyMonitoringGroupImpl.stateChanged(appsgate.lig.energy.monitoring.service.BUDGETUNIT_KEY,java.lang.String,java.lang.String)"], "Fixed commit": "aacc7069ee16692e182b60e48422c0c2bfa18b05", "Url": "https://api.github.com/repos/appsgate2015/appsgate", "Date": "2015-05-18T16:20:15Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((housePlots[indexPos]) != null) housePlots[indexPos] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1944/buggy-version/src.mapClasses.GameMap.java", "BodyUseAPI": [], "Fixed commit": "f5797abc3940c7ea64b9546b83d9e851d66c2d21", "Url": "https://api.github.com/repos/NValentin/MEA305AWESOMESHITPROJECT-CLIENT", "Date": "2015-11-26T09:18:39Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((element.nodeCount()) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8377/buggy-version/src.main.java.com.bluesky.visualprogramming.core.serialization.XmlDomVisitor.java", "BodyUseAPI": [], "Fixed commit": "cf85dfb8593a45e6d068018006b4fbd454320c93", "Url": "https://api.github.com/repos/jackhatedance/visual-programming", "Date": "2014-03-17T14:28:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (classFolder.getParentFile().getParentFile().getParentFile().getParentFile().getName().equals(\"bin\")) { finalPath = classFolder.getParentFile().getParentFile().getParentFile().getParentFile().getParentFile().getParentFile().getAbsoluteFile(); }else { finalPath = classFolder.getParentFile().getParentFile().getParentFile().getParentFile().getParentFile().getParentFile().getParentFile().getParentFile().getAbsoluteFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6067/buggy-version/model.src.com.constellio.model.conf.FoldersLocator.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getAbsoluteFile()", "java.io.File.getAbsoluteFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.getParentFile()"], "Fixed commit": "8dd661eb50145e357ae36bee488c098c689f89e5", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2016-02-23T21:09:56Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (differenz >= 0) { txtLR = \"links ab, in \"; }else { txtLR = \"rechts ab, in \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7247/buggy-version/Route.java", "BodyUseAPI": [], "Fixed commit": "0720c20851fa879b909f0b70ca811f2341803132", "Url": "https://api.github.com/repos/chrizzly765/Navigation", "Date": "2016-07-06T16:57:43Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == answerIndex) this.answerId = answerId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4980/buggy-version/src.db.managers.MultipleChoiceDAO.java", "BodyUseAPI": [], "Fixed commit": "e67ab619165e1b340a4f3053495e8021c88cc84d", "Url": "https://api.github.com/repos/Nop1ks/Immutable", "Date": "2017-06-22T13:01:40Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.fenixedu.presentationTier.Action.person.ExternalAppsDA.getDomainObject(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((app.getLogo()) != null) { request.setAttribute(\"logo\", java.util.Base64.getEncoder().encodeToString(app.getLogo())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8070/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.Action.person.ExternalAppsDA.java", "BodyUseAPI": ["net.sourceforge.fenixedu.domain.ExternalApplication.getLogo()", "javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)", "java.util.Base64.Encoder.encodeToString(app.getLogo())"], "Fixed commit": "ea67f46e790bf8e327e9636176c2d1b1c33d4c37", "Url": "https://api.github.com/repos/jcarvalho/fenix", "Date": "2014-05-29T15:10:30Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mUser.getUserPhoNum()) != null) editPhone.setText(mUser.getUserPhoNum());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3602/buggy-version/StoryAround.app.src.main.java.me.ddfw.storyaround.fragments.ProfileFragment.java", "BodyUseAPI": ["me.ddfw.storyaround.model.User.getUserPhoNum()", "android.widget.TextView.setText(mUser.getUserPhoNum())"], "Fixed commit": "735de172864dc6cbcb8a44161ee3e6874416fd61", "Url": "https://api.github.com/repos/joyDeng/StoryAround", "Date": "2017-03-08T02:56:07Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editGender.getChildAt(mUser.getUserGender())) != null) ((android.widget.RadioButton) (editGender.getChildAt(mUser.getUserGender()))).setChecked(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3602/buggy-version/StoryAround.app.src.main.java.me.ddfw.storyaround.fragments.ProfileFragment.java", "BodyUseAPI": ["((android.widget.RadioButton) (editGender.getChildAt(mUser.getUserGender()))).setChecked(boolean)", "me.ddfw.storyaround.model.User.getUserGender()", "android.widget.RadioGroup.getChildAt(mUser.getUserGender())"], "Fixed commit": "735de172864dc6cbcb8a44161ee3e6874416fd61", "Url": "https://api.github.com/repos/joyDeng/StoryAround", "Date": "2017-03-08T02:56:07Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mUser.getUserName()) != null) editUsername.setText(mUser.getUserName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3602/buggy-version/StoryAround.app.src.main.java.me.ddfw.storyaround.fragments.ProfileFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(mUser.getUserName())", "me.ddfw.storyaround.model.User.getUserName()"], "Fixed commit": "735de172864dc6cbcb8a44161ee3e6874416fd61", "Url": "https://api.github.com/repos/joyDeng/StoryAround", "Date": "2017-03-08T02:56:07Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((urgenda.parser.commandParser.ConfirmCommandParser._argsString) != null) { org.ocpsoft.prettytime.nlp.PrettyTimeParser parser = new org.ocpsoft.prettytime.nlp.PrettyTimeParser(); java.util.List<java.util.Date> dateTimes = parser.parse(urgenda.parser.commandParser.ConfirmCommandParser._argsString); if ((dateTimes.size()) == 2) { return urgenda.parser.commandParser.ConfirmCommandParser.setTimeAndReturn(confirmCommand, dateTimes); }else { return new urgenda.command.Invalid(); } }else { return new urgenda.command.Invalid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2170/buggy-version/src.urgenda.parser.commandParser.ConfirmCommandParser.java", "BodyUseAPI": [], "Fixed commit": "85cde9ed2ce0d052a6c2c6c1c14c24f12e55df46", "Url": "https://api.github.com/repos/cs2103jan2016-t16-3j/main", "Date": "2016-04-10T10:27:01Z"},
{"Line": "=>2435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (neoe.ne.U.setEncodingByUser(pp, \"Reload with Encoding:\")) neoe.ne.U.readFile(pp.pageData, fn);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1122/buggy-version/src.neoe.ne.U.java", "BodyUseAPI": ["neoe.ne.U.readFile(pp.pageData,java.lang.String)"], "Fixed commit": "088c60b9920b131e3f3ab3e6f024a80882ef8dce", "Url": "https://api.github.com/repos/neoedmund/neoeedit", "Date": "2017-01-09T10:37:57Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numThread >= size) { numThread = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7040/buggy-version/src.WiktionaryDumper.java", "BodyUseAPI": [], "Fixed commit": "235ca8e052becd62485450a6c835513af9a39abf", "Url": "https://api.github.com/repos/chinhodado/EnFrWiktionaryDumper", "Date": "2015-06-19T14:00:07Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7040/buggy-version/src.WiktionaryDumper.java", "BodyUseAPI": [], "Fixed commit": "235ca8e052becd62485450a6c835513af9a39abf", "Url": "https://api.github.com/repos/chinhodado/EnFrWiktionaryDumper", "Date": "2015-06-19T14:00:07Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(operatorStack.empty())) && ((operatorStack.peek()) == currQuantifier)) { currQuantifier = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3649/buggy-version/src.mjchao.mazenav.logic.ExpressionTree.java", "BodyUseAPI": [], "Fixed commit": "1f9305a969c0c716d66c2623eda558da362a3c0e", "Url": "https://api.github.com/repos/mjchao/Logic-Based-AI", "Date": "2016-03-05T19:35:28Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.integration.born.BORN18MConnector.checkRourkeDone(java.lang.String,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (rourkeFdid != null) { rourkeProvider = eformValueDao.findByFormDataIdAndKey(rourkeFdid, \"efmprovider_no\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7692/buggy-version/src.main.java.org.oscarehr.integration.born.BORN18MConnector.java", "BodyUseAPI": ["org.oscarehr.common.dao.EFormValueDao.findByFormDataIdAndKey(java.lang.Integer,java.lang.String)"], "Fixed commit": "992c715d22b9ed39cfb5041f87acc2c6f8b2d1f4", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-02-11T18:53:41Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.integration.born.BORN18MConnector.checkReport18mDone(java.lang.String,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (report18mFdid != null) { report18mProvider = eformValueDao.findByFormDataIdAndKey(report18mFdid, \"efmprovider_no\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7692/buggy-version/src.main.java.org.oscarehr.integration.born.BORN18MConnector.java", "BodyUseAPI": ["org.oscarehr.common.dao.EFormValueDao.findByFormDataIdAndKey(java.lang.Integer,java.lang.String)"], "Fixed commit": "992c715d22b9ed39cfb5041f87acc2c6f8b2d1f4", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-02-11T18:53:41Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.integration.born.BORN18MConnector.checkNddsDone(java.lang.String,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (nddsFdid != null) { nddsProvider = eformValueDao.findByFormDataIdAndKey(nddsFdid, \"efmprovider_no\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7692/buggy-version/src.main.java.org.oscarehr.integration.born.BORN18MConnector.java", "BodyUseAPI": ["org.oscarehr.common.dao.EFormValueDao.findByFormDataIdAndKey(java.lang.Integer,java.lang.String)"], "Fixed commit": "992c715d22b9ed39cfb5041f87acc2c6f8b2d1f4", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-02-11T18:53:41Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((repository.getWorkoutStatus()) == (hu.kts.cmetronome.WorkoutStatus.IN_PROGRESS)) || ((repository.getWorkoutStatus()) == (hu.kts.cmetronome.WorkoutStatus.COUNTDOWN_IN_PROGRESS))) { pauseWorkout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/669/buggy-version/app.src.main.java.hu.kts.cmetronome.ui.workout.WorkoutController.java", "BodyUseAPI": [], "Fixed commit": "5a0a57fd977dfe59de1c47bfb1dfd9c372525329", "Url": "https://api.github.com/repos/guni82hu/ConvictMetronome", "Date": "2017-09-24T11:50:12Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.getScheme()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (scheme == null) { videoUri = android.net.Uri.parse(((org.stepic.droid.util.AppConstants.FILE_SCHEME_PREFIX) + videoPath)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8942/buggy-version/app.src.main.java.org.stepic.droid.core.ScreenManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "643e2f85ea4c4f204de53e2b7b62f75fbf57656d", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2017-02-08T12:52:09Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.anicos.nmp.configuration.NpmErrorAttributes.getError(org.springframework.web.context.request.RequestAttributes)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (error != null) { java.lang.String message = error.getMessage(); errorAttributes.put(\"error\", message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5280/buggy-version/src.main.java.pl.anicos.nmp.configuration.NpmErrorAttributes.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()"], "Fixed commit": "e8a42b37df515cf8cdf52ed352da0e8c841fd8d0", "Url": "https://api.github.com/repos/anicos/npm-mvn-proxy", "Date": "2017-01-19T14:58:59Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RouterThread.FindRoute(NewLink.Node.Name)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((NewLink.Cost) < (CurrentRoute.Cost)) { CurrentRoute.NextRouter = NewLink.Node; CurrentRoute.Cost = NewLink.Cost; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5205/buggy-version/src.RouterThread.java", "BodyUseAPI": [], "Fixed commit": "129c772ae819e77c62cb5ee847d97945b13fd5be", "Url": "https://api.github.com/repos/mikedmiller1/DistanceVectorRouting", "Date": "2017-06-22T03:05:06Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentStatusHistory.getNumTries()) == (com.dotcms.publisher.business.PublisherQueueJob.MAX_NUM_TRIES)) { com.dotmarketing.business.APILocator.getPushedAssetsAPI().deletePushedAssets(config.getId(), environment.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1202/buggy-version/src.com.dotcms.publisher.pusher.PushPublisher.java", "BodyUseAPI": [], "Fixed commit": "ecb9d5eb575bc19d2cef83257da58d60b781f8df", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2014-05-19T20:49:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (args != null) { for (int i = 0; i < (args.length); i++) { if ((((args[i]) == null) || ((args[i]) instanceof java.lang.Number)) || ((args[i]) instanceof java.lang.Boolean)) { builder.append(args[i]); }else if (args[i].getClass().isArray()) { builder.append(flatEncodeArray(((java.lang.Object[]) (args[i])), false)); }else { builder.append(\"\\\"\").append(args[i]).append(\"\\\"\"); } if (i < ((args.length) - 1)) { builder.append(\", \"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4734/buggy-version/app.src.main.java.sxwang.me.ohmyyeelight.interaction.DefaultMessageEncoder.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.isArray()", "java.lang.Object.getClass()", "java.lang.StringBuilder.append(java.lang.Object)", "sxwang.me.ohmyyeelight.interaction.DefaultMessageEncoder.flatEncodeArray(java.lang.Object,boolean)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "df700a971434fb51429f4b12f47cd0bc85467bd1", "Url": "https://api.github.com/repos/wsxyeah/OhMyYeelight", "Date": "2017-04-28T04:09:52Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Enum.class.isAssignableFrom(fieldType)) { assignValue(returnObject, fieldName, java.lang.Enum.valueOf(fieldType, parser.getValueAsString())); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1012/buggy-version/E-EYE-O_SerializationJacksonImpl.src.com.jtbdevelopment.e_eye_o.jackson.serialization.JacksonIdObjectDeserializerImpl.java", "BodyUseAPI": ["java.lang.Enum.valueOf(java.lang.Class,parser.getValueAsString())", "com.jtbdevelopment.e_eye_o.jackson.serialization.JacksonIdObjectDeserializerImpl.assignValue(com.jtbdevelopment.e_eye_o.entities.IdObject,java.lang.String,java.lang.Enum)"], "Fixed commit": "6567546843c8a35ad96c6d50e8a7b1b53a20d197", "Url": "https://api.github.com/repos/jtbdevelopment/e-eye-o", "Date": "2013-05-25T22:40:42Z"},
{"Line": "=>794", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, java.lang.Integer>.get(com.vdom.api.Card)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (actionCount > secondHighestActionCardCount) { if (actionCount > highestActionCardCount) { secondHighestActionCardCount = highestActionCardCount; highestActionCardCount = actionCount; }else { secondHighestActionCardCount = actionCount; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6788/buggy-version/vdom.src.com.vdom.core.Player.java", "BodyUseAPI": [], "Fixed commit": "f1558bf5efe0c1c0f46b005bf1ee5764c6cfaacb", "Url": "https://api.github.com/repos/schoeggu/androminion", "Date": "2016-09-01T14:48:05Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getColumnIndex(MediaStore.Images.Media.DATA)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (column_index == (-1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8635/buggy-version/app.src.main.java.com.catchingnow.sharetodelete.MyUtil.java", "BodyUseAPI": [], "Fixed commit": "454c6e81d3d949890d46272430e44b1ba1d88bf8", "Url": "https://api.github.com/repos/heruoxin/share-to-delete", "Date": "2015-03-29T03:23:08Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Utilities.keyCodeMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (!(c == null)) { if (((c != \"Q\") && (c != \"I\")) && (c != \"O\")) { editable.insert(cursor, c); com.cphandheld.cphmobilerec.Utilities.PlayClick(getApplicationContext()); }else com.cphandheld.cphmobilerec.Utilities.PlayBadClick(getApplicationContext()); }else { switch (primaryCode) { case -5 : if (cursor > 0) { edittext.getText().delete((cursor - 1), cursor); com.cphandheld.cphmobilerec.Utilities.PlayClick(getApplicationContext()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1506/buggy-version/app.src.main.java.com.cphandheld.cphmobilerec.ManualEntryActivity.java", "BodyUseAPI": ["android.text.Editable.insert(int,java.lang.String)"], "Fixed commit": "8a74a64a2c8aea78d2c1f946d67b8f7d1e8dbe06", "Url": "https://api.github.com/repos/gilbertgit/CPHMobileRec", "Date": "2016-11-11T22:30:36Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(org.openmrs.api.context.Context.isAuthenticated())) || (!(org.openmrs.api.context.Context.hasPrivilege(\"Get Identifier Types\")))) { return new org.springframework.http.ResponseEntity<java.lang.String>(\"\", org.springframework.http.HttpStatus.UNAUTHORIZED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6078/buggy-version/omod.src.main.java.org.openmrs.module.idgen.webservices.controller.IdgenIdentifierTypeController.java", "BodyUseAPI": [], "Fixed commit": "505217afd1115016ff157cc825790858af472b7c", "Url": "https://api.github.com/repos/Bahmni/openmrs-module-idgen-webservices", "Date": "2017-02-09T08:40:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOneOff) { jobScheduler.remove(job); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2799/buggy-version/src.main.java.pl.edu.agh.yapa.extraction.JobExecutor.java", "BodyUseAPI": [], "Fixed commit": "65558402f9c20794e5f007e27ab23b7f92a78b01", "Url": "https://api.github.com/repos/domcio/yapa", "Date": "2014-06-22T10:09:18Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sb.toString().trim().length()) == 0) throw new net.minecraft.src.WrongUsageException(getCommandUsage(sender), new java.lang.Object[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8839/buggy-version/src.btwmod.admincommands.CommandMOTD.java", "BodyUseAPI": [], "Fixed commit": "46a80a6cae68a74a54b7483122d78e95a656b7a5", "Url": "https://api.github.com/repos/btwmodsbiz/server-mods", "Date": "2013-01-02T03:09:16Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getEntityPlayer().inventory.getCurrentItem()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6110/buggy-version/src.main.java.com.pefier.powercristalrings.handler.RingHandler.java", "BodyUseAPI": [], "Fixed commit": "92c71157cdcb528aaeef9d22d41f476a03cb02da", "Url": "https://api.github.com/repos/Pefier/powercristalrings", "Date": "2016-05-17T08:08:23Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((event.getEntityPlayer().inventory.getCurrentItem().getItem()) instanceof net.minecraft.item.ItemPickaxe)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6110/buggy-version/src.main.java.com.pefier.powercristalrings.handler.RingHandler.java", "BodyUseAPI": [], "Fixed commit": "92c71157cdcb528aaeef9d22d41f476a03cb02da", "Url": "https://api.github.com/repos/Pefier/powercristalrings", "Date": "2016-05-17T08:08:23Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.predic8.membrane.core.exchange.Exchange.getProperty(Exchange.API_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (apiKey != null) { java.util.concurrent.ConcurrentLinkedQueue<com.predic8.membrane.core.exchange.Exchange> exchangeQueue = exchangesForApiKey.get(apiKey); if (exchangeQueue == null) { java.util.concurrent.ConcurrentLinkedQueue<com.predic8.membrane.core.exchange.Exchange> newValue = new java.util.concurrent.ConcurrentLinkedQueue<com.predic8.membrane.core.exchange.Exchange>(); exchangeQueue = exchangesForApiKey.putIfAbsent(apiKey, newValue); if (exchangeQueue == null) exchangeQueue = newValue; } exchangeQueue.add(exc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6802/buggy-version/core.src.main.java.com.predic8.membrane.core.interceptor.apimanagement.statistics.AMStatisticsCollector.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.concurrent.ConcurrentLinkedQueue<com.predic8.membrane.core.exchange.Exchange>>.get(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.concurrent.ConcurrentLinkedQueue<com.predic8.membrane.core.exchange.Exchange>>.putIfAbsent(java.lang.String,java.util.concurrent.ConcurrentLinkedQueue<com.predic8.membrane.core.exchange.Exchange>)"], "Fixed commit": "a1da2387e135b9058bc616bf77172f59b0509df4", "Url": "https://api.github.com/repos/membrane/service-proxy", "Date": "2016-01-09T22:25:06Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["core.CharacterList.set(int,java.lang.Character)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((old.getPositions().size()) == 0) { old.getFaction().removeMember(old); }else { throw new java.lang.AssertionError(\"The player would substitute a MP who has positions\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7298/buggy-version/src.core.Party.java", "BodyUseAPI": ["java.lang.Character.getFaction()", "old.getFaction().removeMember(java.lang.Character)"], "Fixed commit": "8be5af1931dde2d54b08399f0d6c75f6d8e105e5", "Url": "https://api.github.com/repos/pedrovictori/exitpoll", "Date": "2017-07-06T14:21:37Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end != (-1)) { int length = (end - begin) + 1; gdsc.foci.AssignFociToObjects.Search[] next = new gdsc.foci.AssignFociToObjects.Search[length]; java.lang.System.arraycopy(s, begin, next, 0, length); gdsc.foci.AssignFociToObjects.search.add(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/655/buggy-version/src.main.java.gdsc.foci.AssignFociToObjects.java", "BodyUseAPI": [], "Fixed commit": "2bfb7e156e22662905e45fe65fb07bec0734c8ab", "Url": "https://api.github.com/repos/aherbert/GDSC", "Date": "2015-12-08T16:12:59Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["peergos.corenode.AbstractCoreNode.getPublicKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (friendKey == null) throw new java.lang.IllegalStateException((\"User isn't registered! \" + friend));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4938/buggy-version/peergos.user.UserContext.java", "BodyUseAPI": [], "Fixed commit": "e83017b01c4ec4f90c30c7f129a364b3edc35785", "Url": "https://api.github.com/repos/Peergos/Peergos", "Date": "2015-03-22T20:35:26Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length()) >= 15) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7665/buggy-version/src.com.github.taffy128s.tlcdbms.DataChecker.java", "BodyUseAPI": [], "Fixed commit": "a20fed3d23a35171a6de1d453d12337828cab29f", "Url": "https://api.github.com/repos/taffy128s/TLC_DBMS", "Date": "2017-03-07T08:37:35Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (round == null) { consideredSequence = this.toString(); }else { consideredSequence = this.toString(round); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2777/buggy-version/src.model.engine.MemoSequence.java", "BodyUseAPI": ["model.engine.MemoSequence.toString(java.lang.Integer)"], "Fixed commit": "2c17106773f19595fb5b465757dc886e9fe08698", "Url": "https://api.github.com/repos/igorravasi/Memo", "Date": "2015-06-08T13:14:05Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (affectedObjectsSet) { for (mage.game.permanent.Permanent perm : game.getBattlefield().getActivePermanents(filter, source.getControllerId(), source.getSourceId(), game)) { objects.add(perm.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3957/buggy-version/Mage.src.mage.abilities.effects.common.continious.SetPowerToughnessAllEffect.java", "BodyUseAPI": [], "Fixed commit": "90f4c2ea05e5739f61a85131bad5fc9c052ca6b4", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-05-23T06:28:14Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) { x = 16 - x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4543/buggy-version/src.main.java.net.ilexiconn.pixle.world.World.java", "BodyUseAPI": [], "Fixed commit": "ce5adbd4c68fd1e95d581beaab00d10ca55e69b7", "Url": "https://api.github.com/repos/PixleGame/Pixle", "Date": "2016-03-11T12:37:45Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y >= 0) { return pixels[x][y]; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4543/buggy-version/src.main.java.net.ilexiconn.pixle.world.region.Region.java", "BodyUseAPI": [], "Fixed commit": "ce5adbd4c68fd1e95d581beaab00d10ca55e69b7", "Url": "https://api.github.com/repos/PixleGame/Pixle", "Date": "2016-03-11T12:37:45Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cmu.cs.sasylf.ast.Fact.getElement()", "edu.cmu.cs.sasylf.ast.Fact.getElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((concElem.getRoot()) == null) && ((actual.getRoot()) != null)) { edu.cmu.cs.sasylf.util.ErrorHandler.recoverableError(Errors.PREMISE_CONTEXT_MISMATCH, input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3301/buggy-version/src.edu.cmu.cs.sasylf.ast.RuleLike.java", "BodyUseAPI": [], "Fixed commit": "286b488a0f32b26511bea8c30e00fb997ba2e1d6", "Url": "https://api.github.com/repos/boyland/sasylf", "Date": "2016-11-08T03:04:10Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elem2 == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3417/buggy-version/src.it.alessiomoretti.RPN.RPNCalculator.java", "BodyUseAPI": [], "Fixed commit": "b04becb50dd1413d263dcf809618c0745a0ace8c", "Url": "https://api.github.com/repos/alessiomoretti/RPNService", "Date": "2017-05-25T14:01:28Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.ignite.internal.util.GridLogThrottle.throttleTimeout) > 0) { org.apache.ignite.internal.util.GridLogThrottle.cleaningTimer = new java.util.Timer(true); org.apache.ignite.internal.util.GridLogThrottle.cleaningTimer.scheduleAtFixedRate(new org.apache.ignite.internal.util.GridTimerTask() { @java.lang.Override protected void safeRun() throws java.lang.InterruptedException { org.apache.ignite.internal.util.GridLogThrottle.cleanUpOldEntries(); } }, org.apache.ignite.internal.util.GridLogThrottle.throttleTimeout, org.apache.ignite.internal.util.GridLogThrottle.throttleTimeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8035/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.util.GridLogThrottle.java", "BodyUseAPI": [], "Fixed commit": "2ac3d7b63ff96ed33e1ae0486ca945e97a3fdb16", "Url": "https://api.github.com/repos/SomeFire/ignite", "Date": "2017-12-18T09:32:35Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contact.getPhoto().getPhotoStream()) != null) { byte[] photoData = org.apache.commons.io.IOUtils.toByteArray(contact.getPhoto().getPhotoStream()); java.lang.String encodedPhoto = java.util.Base64.getEncoder().encodeToString(photoData); requestContent.insertAttribute(ContactActionProperties.CONTACT_ATTRIBUTE_IMAGE, encodedPhoto); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3781/buggy-version/src.main.java.com.itechart.app.model.actions.UpdateContactAction.java", "BodyUseAPI": ["org.apache.commons.io.IOUtils.toByteArray(contact.getPhoto().getPhotoStream())", "contact.getPhoto().getPhotoStream()", "com.itechart.app.model.entities.Contact.getPhoto()"], "Fixed commit": "86b4efbd99f4c70fee2fa4714431a633770fbc71", "Url": "https://api.github.com/repos/Strelts0v/contact-web-app-java-ee", "Date": "2017-10-20T09:44:13Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (response != null) { cn.finalteam.toolsfinal.Logger.e((((\"\u4e0b\u8f7d\u6587\u4ef6\u5931\u8d25\u4e86~ code=\" + (response.code())) + \"url=\") + url)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5270/buggy-version/okhttpfinal-dm.src.main.java.cn.finalteam.okhttpfinal.dm.DownloadHttpTask.java", "BodyUseAPI": ["cn.finalteam.toolsfinal.Logger.e((((\"\u4e0b\u8f7d\u6587\u4ef6\u5931\u8d25\u4e86~ code=\" + (response.code())) + \"url=\") + url))", "com.squareup.okhttp.Response.code()"], "Fixed commit": "190d9130c829ff64b9ad67a31fe7b2a65f286eea", "Url": "https://api.github.com/repos/pengjianbo/OkHttpFinal", "Date": "2015-10-10T03:35:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((field.getMapping()) == (net.frontlinesms.plugins.patientview.data.domain.framework.MedicFormField.PatientFieldMapping.IDFIELD)) { return getId(((net.frontlinesms.plugins.patientview.data.domain.people.Patient) (subject))); }else { return (net.frontlinesms.plugins.patientview.responsemapping.RandomFormGenerator.rand.nextInt(500)) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2249/buggy-version/src.main.java.net.frontlinesms.plugins.patientview.responsemapping.RandomFormGenerator.java", "BodyUseAPI": [], "Fixed commit": "af85cd58d81b57c075f753218d76211747b21ecc", "Url": "https://api.github.com/repos/medic/PatientView", "Date": "2012-09-07T05:16:09Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) != null) getParent().requestDisallowInterceptTouchEvent(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4628/buggy-version/viewflow.src.org.taptwo.android.widget.ViewFlow.java", "BodyUseAPI": [], "Fixed commit": "af68c11fc9213bacad1e75a6f0fe9d78c1d4c9bc", "Url": "https://api.github.com/repos/knitfaced/android-viewflow", "Date": "2011-09-13T07:41:37Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) != null) getParent().requestDisallowInterceptTouchEvent(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4628/buggy-version/viewflow.src.org.taptwo.android.widget.ViewFlow.java", "BodyUseAPI": [], "Fixed commit": "af68c11fc9213bacad1e75a6f0fe9d78c1d4c9bc", "Url": "https://api.github.com/repos/knitfaced/android-viewflow", "Date": "2011-09-13T07:41:37Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) != null) getParent().requestDisallowInterceptTouchEvent(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4628/buggy-version/viewflow.src.org.taptwo.android.widget.ViewFlow.java", "BodyUseAPI": [], "Fixed commit": "af68c11fc9213bacad1e75a6f0fe9d78c1d4c9bc", "Url": "https://api.github.com/repos/knitfaced/android-viewflow", "Date": "2011-09-13T07:41:37Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()", "java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((tempCalendar.get(java.util.Calendar.MONTH)) > (bdayCalendar.get(java.util.Calendar.MONTH))) || (((tempCalendar.get(java.util.Calendar.MONTH)) == (bdayCalendar.get(java.util.Calendar.MONTH))) && ((tempCalendar.get(java.util.Calendar.DATE)) > (bdayCalendar.get(java.util.Calendar.DATE))))) { age--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6459/buggy-version/app.src.main.java.com.example.paul.turbulentwaffle.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "38557569fd0b33f05dc8b1c4db41ff5dd73370c8", "Url": "https://api.github.com/repos/ScareKro/TurbulentWaffle", "Date": "2015-12-13T02:31:06Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(model.isClientInGame(client))) { return getUnsuccessfulResponse(request, \"The player has not joined a game\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6748/buggy-version/wordsweeper-server.src.main.java.com.wordsweeper.server.controller.ExitGameRequestController.java", "BodyUseAPI": [], "Fixed commit": "811ea0e1ac4a1763aee50824b6f72ad23415798f", "Url": "https://api.github.com/repos/frankgh/CS509", "Date": "2016-11-15T20:44:35Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de_txt.contains(\"@\")) { de_txt = de_txt.substring(0, de_txt.indexOf(\"@\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7357/buggy-version/CRTBTunnelMonitor.src.ICT.utils.RSACoder.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "3e5281262bd58d537d2a725668c0e67154fc9e8c", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-07-08T10:33:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useDropbox) dropboxManager.syncFile(subFile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3441/buggy-version/src.main.java.podcast_application.database.DatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "4dd7b24d7cefa79feca2c4506a4ef21bc5e89146", "Url": "https://api.github.com/repos/Eirikir/PodcastApp_Desktop", "Date": "2017-05-11T18:43:10Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFollow) bestRect = new dantech.com.aivdcontrol.ShapeRectangle[]{ objectDetector1.getBestShapeRect() }; else bestRect = new dantech.com.aivdcontrol.ShapeRectangle[]{ objectDetector1.getBestShapeRect(), objectDetector2.getBestShapeRect(), objectDetector3.getBestShapeRect() };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3976/buggy-version/main.java.dantech.com.aivdcontrol.FoxScreen.java", "BodyUseAPI": [], "Fixed commit": "8d68097947bb3c0220a23cf75a6565cd2d38f238", "Url": "https://api.github.com/repos/Dan12/aivdcontroller", "Date": "2016-05-16T20:28:38Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getRequestContext().getIdentity().getCognitoIdentityId()) != null) { return event.getRequestContext().getIdentity().getCognitoIdentityId(); }else { return event.getRequestContext().getIdentity().getUserArn(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1081/buggy-version/aws-serverless-java-container-core.src.main.java.com.amazonaws.serverless.proxy.internal.jaxrs.AwsProxySecurityContext.java", "BodyUseAPI": ["event.getRequestContext().getIdentity()", "event.getRequestContext().getIdentity().getCognitoIdentityId()", "event.getRequestContext().getIdentity()", "event.getRequestContext().getIdentity().getUserArn()", "com.amazonaws.serverless.proxy.internal.model.AwsProxyRequest.getRequestContext()", "com.amazonaws.serverless.proxy.internal.model.AwsProxyRequest.getRequestContext()"], "Fixed commit": "237a7c7470174a45e182b14f3607ce2686eef557", "Url": "https://api.github.com/repos/awslabs/aws-serverless-java-container", "Date": "2017-07-05T15:49:46Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (save) { saveInformation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9221/buggy-version/src.main.java.parker.serb.ULP.ULPRecommendationPanel.java", "BodyUseAPI": [], "Fixed commit": "2fcdfa1f0051c5effcd2cc702d76372cb63c5c72", "Url": "https://api.github.com/repos/CurrentlyNotSet/SERB", "Date": "2016-04-23T20:18:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activity.getMonitoredVehicleJourney()) != null) { addSituationElement(transitDataService, ptSituationElements, activity.getMonitoredVehicleJourney().getSituationRef()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1459/buggy-version/onebusaway-nyc-presentation.src.main.java.org.onebusaway.nyc.presentation.impl.service_alerts.ServiceAlertsHelper.java", "BodyUseAPI": ["activity.getMonitoredVehicleJourney().getSituationRef()", "org.onebusaway.nyc.presentation.impl.service_alerts.ServiceAlertsHelper.addSituationElement(org.onebusaway.transit_data.services.TransitDataService,java.util.Map<java.lang.String, uk.org.siri.siri.PtSituationElementStructure>,activity.getMonitoredVehicleJourney().getSituationRef())", "uk.org.siri.siri.VehicleActivityStructure.getMonitoredVehicleJourney()"], "Fixed commit": "09ca1159f38c131b7193ad2b86e0096b0e7daab9", "Url": "https://api.github.com/repos/camsys/onebusaway-nyc", "Date": "2011-11-21T21:04:16Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ni.getStatus()) != null) kni.setStatus(ni.getStatus().name());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6237/buggy-version/codecs.kmf.src.main.java.org.cloudml.codecs.BridgeToKmf.java", "BodyUseAPI": ["net.cloudml.core.VMInstance.setStatus(ni.getStatus().name())", "org.cloudml.codecs.VMInstance.getStatus()", "ni.getStatus().name()"], "Fixed commit": "7283abba936bfbd294597e281306b1723b28668f", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2015-07-30T08:36:21Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MyJ48.computeIntrinsicValue(Instances,Attribute)", "MyJ48.computeIG(Instances,Attribute)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((IG == 0) || (IV == 0)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1140/buggy-version/src.main.java.MyJ48.java", "BodyUseAPI": [], "Fixed commit": "21b5097f31a8633fc99461b4a166f2f1f417775c", "Url": "https://api.github.com/repos/GilangJulianS/My-Decision-Tree", "Date": "2015-09-29T16:23:00Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((new org.joda.time.LocalDate(f.getDate()).compareTo(inputDate)) == 0) { freeHoursFrom = new org.joda.time.LocalTime(f.getFrom()); freeHoursTo = new org.joda.time.LocalTime(f.getTo()); if (((inputTime.compareTo(freeHoursFrom.minusMinutes(19))) == 1) && ((inputTime.compareTo(freeHoursTo)) == (-1))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5894/buggy-version/DocGLServer.src.main.java.com.docgl.resources.AppointmentsResource.java", "BodyUseAPI": ["com.docgl.entities.FreeHours.getFrom()", "com.docgl.entities.FreeHours.getTo()"], "Fixed commit": "2845f6d39f59967f0395bfd8a52981dda24ed822", "Url": "https://api.github.com/repos/martinpach/DocGL", "Date": "2017-05-13T17:19:57Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hello1987.mediapicker.model.Album.getDateTaken()", "com.hello1987.mediapicker.model.Album.getDateTaken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (d2 > d1) { return 1; }else if (d2 == d1) { return 0; }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6494/buggy-version/MediaPicker.src.com.hello1987.mediapicker.data.MediaHelper.java", "BodyUseAPI": [], "Fixed commit": "040fd9277330e26c04501523ab722b07936d96b0", "Url": "https://api.github.com/repos/yangningbo/MediaPicker", "Date": "2015-07-28T13:42:01Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.anand38.encryptit.Helper.FileJob.read_from_file(getBaseContext())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((s.length()) > 0) { android.widget.Toast.makeText(this, \"You have already registered!! Please login to continue\", Toast.LENGTH_SHORT).show(); }else { android.content.Intent i = new android.content.Intent(this, com.example.anand38.encryptit.Activity.Register.class); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5774/buggy-version/app.src.main.java.com.example.anand38.encryptit.Activity.Login.java", "BodyUseAPI": [], "Fixed commit": "cc9d698d8c36361cec2462fdb27b3c20b34a6599", "Url": "https://api.github.com/repos/anand38/EncryptIT", "Date": "2017-06-15T17:31:45Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(msg))) { rmiBroker.publish((((\"[CHAT]\" + id) + \": \") + msg)); socketBroker.publish((((\"[CHAT]\" + id) + \": \") + msg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6807/buggy-version/src.main.java.it.polimi.ingsw.cg_23.controller.GameLogic.java", "BodyUseAPI": ["it.polimi.ingsw.cg_23.network.socket.SocketBroker.publish(java.lang.String)", "it.polimi.ingsw.cg_23.network.rmi.RMIBroker.publish(java.lang.String)"], "Fixed commit": "a38c3c55e24e4b85abcda90e1189d3aa390e8d3c", "Url": "https://api.github.com/repos/TopoDiFogna/Escape_From_Aliens", "Date": "2015-06-19T09:21:59Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instance instanceof android.app.Service) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2422/buggy-version/src.main.java.com.ath.fuel.FuelInjector.java", "BodyUseAPI": [], "Fixed commit": "235491d4a0a3f12f7c614ee3575238e663611c88", "Url": "https://api.github.com/repos/aarontharris/Fuel", "Date": "2016-10-01T00:28:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.client.HttpClient.execute(org.apache.http.client.methods.HttpRequestBase)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.getStatusLine().getStatusCode()) == 504) { throw new com.magicmicky.habitrpgmobileapp.onlineapi.WebServiceInteraction.WebServiceException(\"The server is experiencing issues. Please either wait or change server.\"); }else if ((response.getStatusLine().getStatusCode()) == 401) { throw new com.magicmicky.habitrpgmobileapp.onlineapi.WebServiceInteraction.WebServiceException(\"There was a problem with the authentication. Please check your settings.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2210/buggy-version/HabitRPGJavaAPI.src.com.magicmicky.habitrpgmobileapp.onlineapi.WebServiceInteraction.java", "BodyUseAPI": ["response.getStatusLine().getStatusCode()", "org.apache.http.HttpResponse.getStatusLine()"], "Fixed commit": "fa4167b1bc8ac27433bc4cffb3d4eadbb8a9fd17", "Url": "https://api.github.com/repos/MagicMicky/HabitRPGJavaAPI", "Date": "2013-06-03T01:44:29Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getMessage().contains(\"Resource is out of sync\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7397/buggy-version/com.soartech.soar.ide.core.src.com.soartech.soar.ide.core.model.SoarModelTools.java", "BodyUseAPI": [], "Fixed commit": "5219b941f9d40e43402e6794adbe45c42fca8196", "Url": "https://api.github.com/repos/soartech/soaride", "Date": "2016-08-11T18:55:40Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getMessage().contains(\"Resource is out of sync\")) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7397/buggy-version/com.soartech.soar.ide.core.src.com.soartech.soar.ide.core.model.SoarModelTools.java", "BodyUseAPI": [], "Fixed commit": "5219b941f9d40e43402e6794adbe45c42fca8196", "Url": "https://api.github.com/repos/soartech/soaride", "Date": "2016-08-11T18:55:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (previousWildcard) { builder.append(\"[^/]*\"); previousWildcard = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6773/buggy-version/src.main.java.com.cloudbees.jenkins.plugins.filter.pullrequest.PullRequestTriggerFilter.java", "BodyUseAPI": [], "Fixed commit": "84073cde094276f187fa1c23c95ec012ad841b77", "Url": "https://api.github.com/repos/douglasmiller/bitbucket-plugin", "Date": "2016-06-19T03:06:21Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gk.model.GKInstance.getAttributeValue(ReactomeJavaConstants.stableIdentifier)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (stId != null) { org.reactome.restfulapi.models.StableIdentifier stableIdentifier = new org.reactome.restfulapi.models.StableIdentifier(); stableIdentifier.setDbId(stId.getDBID()); stableIdentifier.setDisplayName(stId.getDisplayName()); obj.setStableIdentifier(stableIdentifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1172/buggy-version/src.org.reactome.restfulapi.mapper.EventMapper.java", "BodyUseAPI": ["org.gk.model.GKInstance.getDisplayName()", "org.reactome.restfulapi.models.StableIdentifier.setDisplayName(stId.getDisplayName())", "org.reactome.restfulapi.models.StableIdentifier.setDbId(stId.getDBID())", "org.gk.model.GKInstance.getDBID()"], "Fixed commit": "6e7f890d66b0ff7edfdb827867898a96cc93a960", "Url": "https://api.github.com/repos/reactome/RESTfulAPI", "Date": "2015-11-16T14:49:50Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view instanceof com.devspark.robototextview.widget.RobotoButton) ((com.devspark.robototextview.widget.RobotoButton) (view)).setTypeface(typeface); else if (view instanceof com.devspark.robototextview.widget.RobotoCheckBox) ((com.devspark.robototextview.widget.RobotoCheckBox) (view)).setTypeface(typeface); else if (view instanceof com.devspark.robototextview.widget.RobotoEditText) ((com.devspark.robototextview.widget.RobotoEditText) (view)).setTypeface(typeface);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2901/buggy-version/src.de.luhmer.owncloudnewsreader.helper.FontHelper.java", "BodyUseAPI": [], "Fixed commit": "776d1fcd8d1ae157adcf81b569f0e32bed0f3eb3", "Url": "https://api.github.com/repos/owncloud/News-Android-App", "Date": "2013-07-30T19:42:22Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) { permanent.getCardType().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2708/buggy-version/Mage.src.mage.abilities.effects.common.continious.BecomesCreatureTargetEffect.java", "BodyUseAPI": [], "Fixed commit": "e34d428d9744925e5bba23a38554f6afaf00cbd9", "Url": "https://api.github.com/repos/Algid/mage", "Date": "2014-10-13T22:30:33Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transforms != null) { for (final eu.europa.ec.markt.dss.parameter.DSSTransform transform : transforms) { if (!(transform.isPerform())) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6840/buggy-version/apps.dss.core.dss-document.src.main.java.eu.europa.ec.markt.dss.signature.xades.EnvelopedSignatureBuilder.java", "BodyUseAPI": [], "Fixed commit": "8637b14558322c48a1fce386c725f6220a016207", "Url": "https://api.github.com/repos/arhs/sd-dss", "Date": "2014-12-06T13:05:09Z"},
{"Line": "=>971", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (topologySite == (com.emc.storageos.db.client.model.VolumeTopology.VolumeTopologySite.SOURCE)) { performanceParams = siteParamsMap.values().iterator().next(); }else { performanceParams = siteParamsMap.get(varray.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7684/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.RPBlockServiceApiImpl.java", "BodyUseAPI": [], "Fixed commit": "a61cff6d1d4c12a656f0d3ca6b69f2cf8d357532", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-06-07T19:31:13Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentStatus) == 3) { type = PlatformType.NONE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5319/buggy-version/SimpleAndroidApp.src.org.ivan.simple.game.level.Platform.java", "BodyUseAPI": [], "Fixed commit": "65d36eeb7eb60c5b7c98b09e7bf4bcb0a815219b", "Url": "https://api.github.com/repos/TanyaGaleyev/Panda-project", "Date": "2014-06-27T07:09:24Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createCriteria(rtdc.web.server.model.AuthenticationToken.class).add(org.hibernate.criterion.Restrictions.eq(\"user\", userToDelete)).list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(authenticationTokenList.isEmpty())) { session.delete(authenticationTokenList.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8945/buggy-version/web.src.main.java.rtdc.web.server.servlet.UserServlet.java", "BodyUseAPI": ["org.hibernate.Session.delete(authenticationTokenList.get(0))", "java.util.List<rtdc.web.server.model.AuthenticationToken>.get(int)"], "Fixed commit": "e4c8c29c5260fb55a3638bd3763a165cdee8b580", "Url": "https://api.github.com/repos/Bathlamos/RTDC", "Date": "2015-12-14T04:44:18Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createCriteria(rtdc.web.server.model.UserCredentials.class).add(org.hibernate.criterion.Restrictions.eq(\"user\", userToDelete)).list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(userCredentialsList.isEmpty())) { session.delete(userCredentialsList.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8945/buggy-version/web.src.main.java.rtdc.web.server.servlet.UserServlet.java", "BodyUseAPI": ["org.hibernate.Session.delete(userCredentialsList.get(0))", "java.util.List<rtdc.web.server.model.UserCredentials>.get(int)"], "Fixed commit": "e4c8c29c5260fb55a3638bd3763a165cdee8b580", "Url": "https://api.github.com/repos/Bathlamos/RTDC", "Date": "2015-12-14T04:44:18Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(note.getText().equals(noteText))) { note.setText(noteText); note.setDate_accessed(getDateTime()); dbHelper.updateNote(note); note.setDeleted(0); dbHelper.toggleDeleteNote(note); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4448/buggy-version/app.src.main.java.com.example.patrick.outline.MainActivity.java", "BodyUseAPI": ["com.example.patrick.outline.Note.setDeleted(int)", "com.example.patrick.outline.Note.setText(java.lang.String)", "com.example.patrick.outline.Note.setDate_accessed(java.lang.String)", "com.example.patrick.outline.DatabaseHelper.toggleDeleteNote(com.example.patrick.outline.Note)", "com.example.patrick.outline.DatabaseHelper.updateNote(com.example.patrick.outline.Note)"], "Fixed commit": "cc23e1665724982cd87b12713f3156ad4b821430", "Url": "https://api.github.com/repos/patrickcuagan/AndroidOutline", "Date": "2017-03-16T17:08:56Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (properties.containsKey(Study.PUBLICATION_YEAR)) { }else { org.eol.globi.data.StudyImporterForSPIRE.LOG.warn(((\"failed to parse [\" + titlesAndAuthors) + \"], using unformatted values instaed\")); org.eol.globi.data.StudyImporterForSPIRE.addUnformattedFields(titlesAndAuthors, properties); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5887/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.data.StudyImporterForSPIRE.java", "BodyUseAPI": ["org.eol.globi.data.StudyImporterForSPIRE.addUnformattedFields(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "8bc3877875867b57dd7c27ee69a30df149dd58eb", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2013-08-10T03:48:50Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (j > (-1)) { org.eol.globi.data.StudyImporterForSPIRE.parseTitlesAndAuthors(titlesAndAuthors, properties, i, ((i + j) + 1), \",\"); }else { throw new org.eol.globi.data.StudyImporterException(((\"failed to import study for [\" + titlesAndAuthors) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5887/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.data.StudyImporterForSPIRE.java", "BodyUseAPI": ["org.eol.globi.data.StudyImporterForSPIRE.parseTitlesAndAuthors(java.lang.String,java.util.Map<java.lang.String, java.lang.String>,int,int,java.lang.String)"], "Fixed commit": "8bc3877875867b57dd7c27ee69a30df149dd58eb", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2013-08-10T03:48:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["observationField.get(\"name\").getTextValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"Flower species\".equals(interactionType)) { type = org.eol.globi.domain.InteractType.POLLINATES; }else if (\"Perching on\".equals(interactionType)) { type = org.eol.globi.domain.InteractType.PERCHING_ON; }else if (\"Pollinating\".equals(interactionType)) { type = org.eol.globi.domain.InteractType.POLLINATES; }else if (\"Other Species in Group\".equals(interactionType)) { org.eol.globi.data.StudyImporterForINaturalist.LOG.warn(((\"interactionType [\" + interactionDataType) + \"] not supported\")); }else if (\"Butterfly & Moth Host Plant\".equals(interactionType)) { org.eol.globi.data.StudyImporterForINaturalist.LOG.warn(((\"interactionType [\" + interactionDataType) + \"] not supported\")); }else if (\"Butterfly & Moth Nectar Plant\".equals(interactionType)) { org.eol.globi.data.StudyImporterForINaturalist.LOG.warn(((\"interactionType [\" + interactionDataType) + \"] not supported\")); }else { throw new org.eol.globi.data.StudyImporterException(((\"found unsupported interactionType [\" + interactionType) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5887/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.data.StudyImporterForINaturalist.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "8bc3877875867b57dd7c27ee69a30df149dd58eb", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2013-08-10T03:48:50Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((size) == (elements.length)) { resize(((size) * (Lists.ArrayList.RESIZE_FACTOR))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2231/buggy-version/Java.DataStructures.src.Lists.ArrayList.java", "BodyUseAPI": ["Lists.ArrayList<E>.resize(int)"], "Fixed commit": "404803959a1aa8e18c50be8beadcf1e01966bb0a", "Url": "https://api.github.com/repos/EdwardEisenhart/DataStructures", "Date": "2015-03-12T11:15:24Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.uwaterloo.portfoliorebalancing.ui.StockSelectorActivity.StockData>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stocksToAdd.contains(data.getSymbol())) { convertView.setBackground(getResources().getDrawable(R.drawable.stock_item_selected_background)); }else { convertView.setBackground(getResources().getDrawable(R.drawable.stock_item_background)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2040/buggy-version/app.src.main.java.com.uwaterloo.portfoliorebalancing.ui.StockSelectorActivity.java", "BodyUseAPI": [], "Fixed commit": "3089194390a874b1eedbb0887cd1b8bd91e93190", "Url": "https://api.github.com/repos/portfoliorebalancing/portfolio-rebalancing-android", "Date": "2016-11-22T22:42:03Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataFile.corruptedBlocks.get(cur.getOffset())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (corruptedRange != null) { cur.setSize(((int) (corruptedRange.range()))); }else if ((cur.getType()) == 0) { cur.setOffset(maxFileLength); }else if ((cur.getType()) == (org.apache.activemq.store.kahadb.disk.journal.Journal.USER_RECORD_TYPE)) { return cur; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6683/buggy-version/activemq-kahadb-store.src.main.java.org.apache.activemq.store.kahadb.disk.journal.Journal.java", "BodyUseAPI": ["org.apache.activemq.store.kahadb.disk.journal.Location.setSize(((int) (corruptedRange.range())))", "org.apache.activemq.store.kahadb.disk.util.Sequence.range()"], "Fixed commit": "a7178a46b7b596d5ce425d51c6c2a4a387ca46ce", "Url": "https://api.github.com/repos/jimrobinson/activemq", "Date": "2015-04-01T13:50:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((material) != null) { updateBlock(material, ((cancelTime) == (-1) ? 0 : (cancelTime) - (location.getWorld().getFullTime()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2934/buggy-version/src.main.java.net.aufdemrand.denizen.utilities.blocks.FakeBlock.java", "BodyUseAPI": [], "Fixed commit": "156d546d6fc9c8238ca637cdf83f8b615dd5fc0f", "Url": "https://api.github.com/repos/DenizenScript/Denizen-For-Bukkit", "Date": "2015-01-04T06:10:58Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.desc) != null) { fp.setDescription(p.desc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3450/buggy-version/OsmAnd.src.net.osmand.plus.helpers.GpxImportHelper.java", "BodyUseAPI": ["net.osmand.data.FavouritePoint.setDescription(p.desc)"], "Fixed commit": "8365f70eb5cd084b571b8ea3c7015285abc9145e", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2016-02-24T20:24:03Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.db.record.ODatabaseRecord.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (user != null) identity = user.getDocument();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5698/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.security.ORestrictedAccessHook.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.security.OUser.getDocument()"], "Fixed commit": "a29e70bc2f5262a0e681ffda0e79997d4415acc4", "Url": "https://api.github.com/repos/fabriziofortino/orientdb", "Date": "2014-07-28T12:58:22Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isFinishing()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7843/buggy-version/src.org.openhab.habdroid.ui.OpenHABMainActivity.java", "BodyUseAPI": [], "Fixed commit": "751916ccb6a7e954cc991417ecead10d222a0515", "Url": "https://api.github.com/repos/digitaldan/openhab.android", "Date": "2014-08-12T17:42:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.cadyyan.levels.handlers.ConfigurationHandler.configuration.hasChanged()) com.cadyyan.levels.handlers.ConfigurationHandler.configuration.save();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/553/buggy-version/src.main.java.com.cadyyan.levels.handlers.ConfigurationHandler.java", "BodyUseAPI": ["net.minecraftforge.common.config.Configuration.save()"], "Fixed commit": "11f89d331b49cd90f0131e8da1a485dc7a1a16b0", "Url": "https://api.github.com/repos/cadyyan/levels", "Date": "2016-01-27T21:29:06Z"},
{"Line": "=>1833", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (decl.isMember()) { qualify(expr, decl); out(names.name(decl), \"=\", varName, \";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6942/buggy-version/src.main.java.com.redhat.ceylon.compiler.js.GenerateJsVisitor.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.js.GenerateJsVisitor.out(names.name(decl),java.lang.String,java.lang.String,java.lang.String)", "com.redhat.ceylon.compiler.js.JsIdentifierNames.name(com.redhat.ceylon.compiler.typechecker.model.MethodOrValue)", "com.redhat.ceylon.compiler.js.GenerateJsVisitor.qualify(com.redhat.ceylon.compiler.js.SpecifierOrInitializerExpression,com.redhat.ceylon.compiler.typechecker.model.MethodOrValue)"], "Fixed commit": "7c0499baec92137f43d7cd9c6c993e46e7c975e5", "Url": "https://api.github.com/repos/ceylon/ceylon-js", "Date": "2014-04-09T16:21:20Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.hangmanGame.getChosenWord()) == null) { sendResponseToClient(MessageType.END_RESPONSE, currentState1); }else { sendResponseToClient(MessageType.GUESS_RESPONSE, currentState1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8688/buggy-version/hw2-non-blocking-hangman.src.server.net.ClientHandler.java", "BodyUseAPI": [], "Fixed commit": "a7370e83e68ca6ac60a69f5bd33f41f28ac517e2", "Url": "https://api.github.com/repos/SimoneStefani/kth-id1212", "Date": "2017-11-23T07:00:12Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.order.www.controller.OrderControl.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(currentUser.isAdmin())) { param.setUserId(currentUser.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5007/buggy-version/src.main.java.com.order.www.controller.OrderControl.java", "BodyUseAPI": ["com.order.www.controller.Users.getId()", "com.order.www.domain.param.OrderParam.setUserId(currentUser.getId())"], "Fixed commit": "7cf9e52f26b22dd3ec16a4cffeae098852d004de", "Url": "https://api.github.com/repos/kongtrio/seller_order", "Date": "2017-10-23T04:20:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parent instanceof org.hibernate.mapping.RootClass) { if (!(parentClass.getSuperclass().isAnnotationPresent(javax.persistence.Entity.class))) { ((org.hibernate.mapping.RootClass) (parent)).setDiscriminator(null); ((org.hibernate.mapping.RootClass) (parent)).setPolymorphic(false); @java.lang.SuppressWarnings(\"unchecked\") java.util.Iterator<org.hibernate.mapping.Column> iter = parent.getTable().getColumnIterator(); while (iter.hasNext()) { if (iter.next().getName().equalsIgnoreCase(\"dtype\")) { iter.remove(); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7337/buggy-version/orm.hibernate.src.main.java.org.beangle.orm.hibernate.internal.PersistentClassMerger.java", "BodyUseAPI": ["org.hibernate.mapping.PersistentClass.getTable()", "parent.getTable().getColumnIterator()"], "Fixed commit": "cbf8a5cd14147aae24a917f0c229bc593f81a4ea", "Url": "https://api.github.com/repos/beangle/library", "Date": "2014-02-20T05:17:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((context) != null) && ((rootView) != null)) { new com.thomasdh.roosterpgplus.RoosterBuilder(context, ((android.support.v4.view.ViewPager) (rootView.findViewById(R.id.viewPager))), rootView).buildLayout(string); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1022/buggy-version/RoosterPGPlus.src.main.java.com.thomasdh.roosterpgplus.RoosterDownloader.java", "BodyUseAPI": [], "Fixed commit": "72de5a531a1f72edf8ee8b22124a14a46f03140e", "Url": "https://api.github.com/repos/ThomasdenH/RoosterPGPlus", "Date": "2013-12-06T19:10:55Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((remoteProviderTypeId == null) || (\"\".equals(remoteProviderTypeId.trim()))) { com.denimgroup.threadfix.service.queue.scheduledjob.ScheduledRemoteProviderImportJob.log.error(\"Got empty string in remote provider update job.\"); }else if (remoteProviderTypeId.matches(\"^[0-9]+$\")) { queueSender.addRemoteProviderImport(java.lang.Integer.parseInt(remoteProviderTypeId)); }else { com.denimgroup.threadfix.service.queue.scheduledjob.ScheduledRemoteProviderImportJob.log.error((\"Non-numeric String encountered for ID: \" + remoteProviderTypeId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3101/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.service.queue.scheduledjob.ScheduledRemoteProviderImportJob.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)", "com.denimgroup.threadfix.service.queue.QueueSender.addRemoteProviderImport(int)", "java.lang.Integer.parseInt(java.lang.String)", "com.denimgroup.threadfix.logging.SanitizedLogger.error(java.lang.String)"], "Fixed commit": "467bab1f51067903d5a1c128a67cd36afd6a0842", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-03-26T21:05:49Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (force) { mPreferences.edit().putInt(\"curpos\", (-1)).apply(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1693/buggy-version/android.apollo.src.com.andrew.apollo.MusicPlaybackService.java", "BodyUseAPI": [], "Fixed commit": "74b57852761e37392374379317dafbc25fce0baa", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2017-06-22T20:51:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stopped)) super.suspend(java.nio.channels.SelectionKey.OP_ACCEPT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7292/buggy-version/nio-impl.src.main.java.org.xnio.nio.NioTcpServerHandle.java", "BodyUseAPI": [], "Fixed commit": "53d7955982c4a72c348f565392537ee7fad18414", "Url": "https://api.github.com/repos/fl4via/xnio", "Date": "2013-02-19T01:43:36Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getVertices().size()) < numVertices) { throw new java.lang.IllegalArgumentException(\"There are not enough vertices in the graph\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2776/buggy-version/course_4.SocialNetwork.src.graph.SocialGraph.java", "BodyUseAPI": [], "Fixed commit": "e5c8da8a3528818e114a49431d22e5a56221f8c2", "Url": "https://api.github.com/repos/falkoner/OOJP", "Date": "2017-06-30T23:42:32Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paths == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1217/buggy-version/uk.ac.diamond.sda.navigator.src.uk.ac.diamond.sda.navigator.views.FileContentProvider.java", "BodyUseAPI": [], "Fixed commit": "deeba4d61abf1b71f5c85c0c650347ffcc6a0309", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2015-03-30T15:23:01Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paths[i]) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1217/buggy-version/uk.ac.diamond.sda.navigator.src.uk.ac.diamond.sda.navigator.views.FileContentProvider.java", "BodyUseAPI": [], "Fixed commit": "deeba4d61abf1b71f5c85c0c650347ffcc6a0309", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2015-03-30T15:23:01Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (repeatingInterval == 0) repeatingInterval = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2158/buggy-version/calendar.app.controllers.Events.java", "BodyUseAPI": [], "Fixed commit": "f85ceacd2b405087867219eb7040bde06ca9d317", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2011-team4", "Date": "2011-11-09T13:16:03Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((locationMarkerOptions) != null) { marker.remove(); locationMarkerOptions = null; android.widget.Toast.makeText(this, \"You have removed your parking location.\", Toast.LENGTH_SHORT).show(); }else android.widget.Toast.makeText(this, \"There is no Parking Pin to remove\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4264/buggy-version/app.src.main.java.com.example.geauxproducts.geauxparking.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ff5442b4da330d36976b284a06a9181e937053fb", "Url": "https://api.github.com/repos/Akibby/Geaux-Parking", "Date": "2015-12-03T09:23:44Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index > 0) { int dontDrawLineBelow = 5; if ((lastY < dontDrawLineBelow) && (barY < dontDrawLineBelow)) gc.setForeground(black); else gc.setForeground(lightGray); gc.drawLine(lastX, lastY, barX, barY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6878/buggy-version/RelUI.src.org.reldb.relui.monitors.PercentDisplay.java", "BodyUseAPI": [], "Fixed commit": "8b563885ecd87044ea63823c6347c98742040433", "Url": "https://api.github.com/repos/DaveVoorhis/Rel", "Date": "2015-02-15T23:16:45Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dead) setHealth(0.0); else setHealth(1.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4589/buggy-version/WaywardCharacters.src.main.java.net.wayward_realms.waywardcharacters.CharacterImpl.java", "BodyUseAPI": [], "Fixed commit": "d83df05388c28058e19df264c7592c1c8e7d577b", "Url": "https://api.github.com/repos/WaywardRealms/Wayward", "Date": "2014-05-28T23:23:23Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mChildUIViewAnimator) != null) mChildUIViewAnimator.removeAllViews();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1899/buggy-version/Library.src.com.android.pigknight.UI.java", "BodyUseAPI": [], "Fixed commit": "1bc15c011f22a992beace39aab42404afeda48e2", "Url": "https://api.github.com/repos/pigknight/AndroidApp-UI-Arch", "Date": "2015-05-11T11:23:18Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mChildUIViewAnimator) != null) mChildUIViewAnimator.removeAllViews();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1899/buggy-version/Library.src.com.android.pigknight.UI.java", "BodyUseAPI": [], "Fixed commit": "1bc15c011f22a992beace39aab42404afeda48e2", "Url": "https://api.github.com/repos/pigknight/AndroidApp-UI-Arch", "Date": "2015-05-11T11:23:18Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scripname.charAt(2)) == ':') { scripname = scripname.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1519/buggy-version/vocabularyrecommender.src.main.java.cz.muni.fi.pv245.vocabularyrecommender.data.Keywords.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "624aa46954cf03dbed826e223d9a015b42543588", "Url": "https://api.github.com/repos/hochla-simon/PV245-vocabulary_recommender", "Date": "2016-12-08T08:52:39Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((french_word.contains(\",\")) || (french_word.contains(\".\"))) french_word = french_word.substring(0, ((french_word.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6529/buggy-version/CS124_pa6.src.mt.Dictionary.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "8bcc08b030c4bfaf1f986b5c9a39c690dd1f2260", "Url": "https://api.github.com/repos/SarahAdelaide/CS124_PA6", "Date": "2014-02-26T22:25:38Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (biUniPolar) { min = (min + 1.0F) / 2.0F; max = (max + 1.0F) / 2.0F; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8987/buggy-version/2COMMONPROJECTS.audio-services.src.uk.co.modularaudio.mads.base.scopegen.ui.display.ScopeWaveDisplay.java", "BodyUseAPI": [], "Fixed commit": "b7a2d689499b83d2d8fe3c48947ceefad32cc310", "Url": "https://api.github.com/repos/danielhams/mad-java", "Date": "2015-09-16T09:29:18Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allPermissions) { java.util.Map<java.lang.String, java.lang.String> manifestAttributes = new java.util.HashMap<>(); manifestAttributes.put(\"Permissions\", \"all-permissions\"); createJarParams.setManifestAttrs(manifestAttributes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2961/buggy-version/src.main.java.com.zenjava.javafx.maven.plugin.JarMojo.java", "BodyUseAPI": [], "Fixed commit": "03b4eb2b198f9694c9324db2de6675672cba80f1", "Url": "https://api.github.com/repos/javafx-maven-plugin/javafx-maven-plugin", "Date": "2015-05-03T16:31:28Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.toString().endsWith(\".java\")) { if (!(leafs.contains(file))) { leafs.add(file); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2213/buggy-version/DynoGrader.src.main.java.net.hamendi.core.SubmissionSystem.java", "BodyUseAPI": ["java.util.List<java.io.File>.contains(java.io.File)", "java.util.List<java.io.File>.add(java.io.File)"], "Fixed commit": "306bcf1b79ad4240db30f311542a72ef596de75c", "Url": "https://api.github.com/repos/hamendi/GlassboxDynamicGrader", "Date": "2015-11-17T12:56:02Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mycompany.nncloudrestservice.daos.NetworkDAO.getItem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((network.getTrainingIterationsDone()) == null) || ((network.getTrainingIterationsMax()) == null)) { trainingIterationsDone = -1; trainingIterationsMax = -1; }else { trainingIterationsDone = network.getTrainingIterationsDone(); trainingIterationsMax = network.getTrainingIterationsMax(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8721/buggy-version/BE.nnCloudRESTService.src.main.java.com.mycompany.nncloudrestservice.logic.TrainingProgressManager.java", "BodyUseAPI": ["com.mycompany.nncloudrestservice.pojo.Network.getTrainingIterationsMax()", "com.mycompany.nncloudrestservice.pojo.Network.getTrainingIterationsDone()"], "Fixed commit": "1f2e828ec1183b0e12f4f4b180d5251710321ea9", "Url": "https://api.github.com/repos/kowalt/nnCloud", "Date": "2017-06-23T01:43:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity instanceof dgrxf.watercraft.interfaces.ILockableBlock) { if ((entity.getDataWatcher().getWatchableObjectByte(EntityInfo.DATAWATCHER_CHEST_LOCK)) == 1) { chest.renderAll(true); }else if ((entity.getDataWatcher().getWatchableObjectByte(EntityInfo.DATAWATCHER_CHEST_LOCK)) == 0) { chest.renderAll(false); } }else { chest.renderAll(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8851/buggy-version/WaterCraft.src.dgrxf.watercraft.client.renderer.entity.WCBoatRenderer.java", "BodyUseAPI": ["dgrxf.watercraft.entity.boat.AbstractBaseBoat.getDataWatcher()", "entity.getDataWatcher().getWatchableObjectByte(EntityInfo.DATAWATCHER_CHEST_LOCK)", "dgrxf.watercraft.entity.boat.AbstractBaseBoat.getDataWatcher()", "entity.getDataWatcher().getWatchableObjectByte(EntityInfo.DATAWATCHER_CHEST_LOCK)"], "Fixed commit": "635718a47484fe0d189b4952610c98abbe634a59", "Url": "https://api.github.com/repos/Robotic-Brain/WaterCraft", "Date": "2013-11-17T20:16:25Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clusteringService) != null) { com.vmware.bdd.service.sp.VmEventProcessor processor = clusteringService.getEventProcessor(); processor.tryResume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5008/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.job.SimpleStepExecutionListener.java", "BodyUseAPI": [], "Fixed commit": "d79ae5241cd16201f869f28fbe92eb0ef5588ab2", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-12-06T06:08:02Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(customerId)) { customer.setId(customerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2075/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.admin.actions.admin.Customers.java", "BodyUseAPI": ["com.photon.phresco.commons.model.Customer.setId(java.lang.String)"], "Fixed commit": "0fc6db2706117cfa35169b015666a90d498e5692", "Url": "https://api.github.com/repos/phresco/service", "Date": "2012-11-08T09:50:21Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.equals(\"\")) return pub.codo.Util.Database.update(java.lang.String.format(\"UPDATE reminder SET %s=NULL WHERE id='%d';\", columnLabel, reminderId)); else return pub.codo.Util.Database.update(java.lang.String.format(\"UPDATE reminder SET %s='%s' WHERE id='%d';\", columnLabel, value, reminderId));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4960/buggy-version/src.pub.codo.Model.Reminder.java", "BodyUseAPI": ["pub.codo.Util.Database.update(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,int)"], "Fixed commit": "132860721dcff3587d7f65d6cdac1f742fe2d12d", "Url": "https://api.github.com/repos/ZERR2AC/Codo-API", "Date": "2016-12-13T13:24:31Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.lang.MutableString.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentLength == length) { if ((newQualScores.size()) == 0) { copy(qualityScores, newQualScores); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7634/buggy-version/src.edu.cornell.med.icb.goby.modes.TrimMode.java", "BodyUseAPI": [], "Fixed commit": "da3b8a53d523797b2e479550777642935be566b6", "Url": "https://api.github.com/repos/CampagneLaboratory/goby", "Date": "2012-10-18T21:00:14Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.lang.MutableString.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentLength == length) { if ((newQualScores.size()) == 0) { copy(qualityScores, newQualScores); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7634/buggy-version/src.edu.cornell.med.icb.goby.modes.TrimMode.java", "BodyUseAPI": [], "Fixed commit": "da3b8a53d523797b2e479550777642935be566b6", "Url": "https://api.github.com/repos/CampagneLaboratory/goby", "Date": "2012-10-18T21:00:14Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((org.apache.hadoopts.app.bucketanalyser.TSOperationControlerPanel.baseFolder) == null) this.jTextField3.setText((((this.jTextField3.getText()) + (org.apache.hadoopts.app.bucketanalyser.TSOperationControlerPanel.label_of_EXPERIMENT)) + \"/\")); else { this.jTextField3.setText(((((org.apache.hadoopts.app.bucketanalyser.TSOperationControlerPanel.baseFolder) + \"/\") + (org.apache.hadoopts.app.bucketanalyser.TSOperationControlerPanel.label_of_EXPERIMENT)) + \"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7196/buggy-version/src.org.apache.hadoopts.app.bucketanalyser.TSOperationControlerPanel.java", "BodyUseAPI": [], "Fixed commit": "079e101153d302111316283b183012f9a035a780", "Url": "https://api.github.com/repos/kamir/Hadoop.TS.NG", "Date": "2016-03-31T07:28:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((observation != null) && (obs != null)) { obs.setConcept(getConceptByUuid(observation.getConceptUuid())); obs.setValueAsString(((java.lang.String) (observation.getValue()))); if (observation.isVoided()) { obs.setVoided(observation.isVoided()); obs.setVoidReason(observation.getVoidReason()); } obs.setComment(observation.getComment()); obs.setObsDatetime(observationDateTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6235/buggy-version/api.src.main.java.org.openmrs.module.emrapi.encounter.EncounterDispositionServiceHelper.java", "BodyUseAPI": ["org.openmrs.Obs.setValueAsString(((java.lang.String) (observation.getValue())))", "org.openmrs.Obs.setVoidReason(observation.getVoidReason())", "org.openmrs.Obs.setVoided(observation.isVoided())", "EncounterTransaction.Observation.isVoided()", "EncounterTransaction.Observation.getVoidReason()", "EncounterTransaction.Observation.isVoided()", "EncounterTransaction.Observation.getValue()", "org.openmrs.Obs.setObsDatetime(java.util.Date)", "org.openmrs.Obs.setConcept(org.openmrs.Concept)", "EncounterTransaction.Observation.getConceptUuid()", "org.openmrs.Obs.setComment(observation.getComment())", "EncounterTransaction.Observation.getComment()", "org.openmrs.module.emrapi.encounter.EncounterDispositionServiceHelper.getConceptByUuid(observation.getConceptUuid())"], "Fixed commit": "1457526fe8a57b0d465660ae4c9d1516d7a4e82a", "Url": "https://api.github.com/repos/openmrs/openmrs-module-emrapi", "Date": "2013-10-28T08:33:24Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (inScanner != null) inScanner.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7549/buggy-version/src.main.java.reindent.Reindent.java", "BodyUseAPI": ["java.util.Scanner.close()"], "Fixed commit": "8382c1f6b53897a782c472c2ede1ad0bf5bc85e6", "Url": "https://api.github.com/repos/drummerscout/java-reindent", "Date": "2011-11-02T01:10:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((grand_total % 2) == 0) || ((grand_total % 2) == 1)) { edit.setText((((int) (grand_total)) + \"\")); }else { edit.setText((grand_total + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4822/buggy-version/app.src.main.java.com.example.caculator.calculator.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "5c8079f7dbc11e796759474a3151bddf10d4103c", "Url": "https://api.github.com/repos/UKlt/Calculator", "Date": "2016-09-25T17:00:49Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((v1) % 2) == 0) || (((v1) % 2) == 1)) { edit.setText((((int) (v1)) + \"\")); }else { edit.setText(((v1) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4822/buggy-version/app.src.main.java.com.example.caculator.calculator.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "5c8079f7dbc11e796759474a3151bddf10d4103c", "Url": "https://api.github.com/repos/UKlt/Calculator", "Date": "2016-09-25T17:00:49Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (opponent.isGameMode()) opponent.setGameMode(false); else opponent.setGameMode(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/196/buggy-version/core.src.org.hackathon.bitcommit.gameobjects.ReceiveData.java", "BodyUseAPI": ["org.hackathon.bitcommit.gameobjects.Spaceship.setGameMode(boolean)", "org.hackathon.bitcommit.gameobjects.Spaceship.setGameMode(boolean)"], "Fixed commit": "5a1c6479b6d265d2e5b4b0f61870d467ea24f969", "Url": "https://api.github.com/repos/ricardomorais3/BitCommit", "Date": "2016-11-25T12:30:08Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((service) != null) { service.shutdown(); service = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4182/buggy-version/jxmapviewer2.src.org.jdesktop.swingx.mapviewer.AbstractTileFactory.java", "BodyUseAPI": [], "Fixed commit": "e35e86b4ce9c68979e4b4b37443faf54424ce477", "Url": "https://api.github.com/repos/albertotn/jxmapviewer2", "Date": "2013-03-28T20:09:34Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.buildRenditionKey(org.nuxeo.ecm.core.api.DocumentModel,org.nuxeo.ecm.platform.rendition.service.RenditionDefinition)", "org.nuxeo.ecm.core.transientstore.api.TransientStoreService.getStore(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ts.isCompleted(key)) { ts.release(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3286/buggy-version/nuxeo-features.nuxeo-platform-rendition.nuxeo-platform-rendition-core.src.main.java.org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.java", "BodyUseAPI": ["org.nuxeo.ecm.core.transientstore.api.TransientStore.release(java.lang.String)"], "Fixed commit": "80f96430d35533672e2785cced058f22b1406fb6", "Url": "https://api.github.com/repos/ron1/nuxeo", "Date": "2016-10-21T20:13:20Z"},
{"Line": "=>1811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mObservation.latitude_changed()) { if (isNetworkAvailable()) { guessLocation(); }else { setPlaceGuess(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2972/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationEditor.java", "BodyUseAPI": [], "Fixed commit": "b6bc45619e76a52d02b6822e124038de6f42805e", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-03-29T02:16:45Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(firstLog)) { com.google.android.gms.common.api.OptionalPendingResult<com.google.android.gms.auth.api.signin.GoogleSignInResult> opr = Auth.GoogleSignInApi.silentSignIn(mGoogleApiClient); if (opr.isDone()) { com.google.android.gms.auth.api.signin.GoogleSignInResult result = opr.get(); handleSignInResult(result); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3341/buggy-version/app.src.main.java.com.project.pervsys.picaround.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "754f14f3a41cc33a9ac696332911132ecee670c5", "Url": "https://api.github.com/repos/gitRiky/PicAround", "Date": "2017-05-30T13:16:35Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getItem()) == null) | ((event.getSpawner()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3587/buggy-version/src.com.mrmag518.SpawnerGUI.SpawnerGUI.java", "BodyUseAPI": [], "Fixed commit": "7187a262f2eb771d2354e22c8f5565355b61c16f", "Url": "https://api.github.com/repos/Sarkhad/SpawnerGUI", "Date": "2014-04-09T18:14:59Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileItem.getSize()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5587/buggy-version/src.main.java.act.data.ApacheMultipartParser.java", "BodyUseAPI": [], "Fixed commit": "7141f3bd6326cb117b928240410681654eab5dc3", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2016-11-11T23:58:27Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.pszczolkowski.weather.MainActivity.findViewById(R.id.pager)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((pager == null) || ((pager.getVisibility()) != (android.view.View.VISIBLE))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6204/buggy-version/app.src.main.java.com.example.pszczolkowski.weather.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b03ee0355c8110647486e13a3d4594b1449a2e78", "Url": "https://api.github.com/repos/pszczolkowski/WeatherForecastApp", "Date": "2015-05-11T06:29:21Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentDirectory == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3601/buggy-version/src.main.java.de.vette.idea.neos.util.ComposerUtil.java", "BodyUseAPI": [], "Fixed commit": "3fc4b345c7950269a0ee4a0275930bdb60f7ab50", "Url": "https://api.github.com/repos/cvette/intellij-neos", "Date": "2017-09-19T18:38:38Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getParentFile()) != null) { f.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8535/buggy-version/graphdb.src.main.java.com.orientechnologies.orient.graph.console.OGremlinConsole.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "7684f32d2eb8e93466de670eddfca8d177334b89", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-13T14:25:06Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.IWorkbenchPage.findViewReference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((partRef.isFastView()) || ((org.eclipse.ui.IWorkbenchPage.STATE_MINIMIZED) == (page.getPartState(partRef)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3269/buggy-version/org.eclipse.debug.ui.ui.org.eclipse.debug.internal.ui.views.ViewContextService.java", "BodyUseAPI": [], "Fixed commit": "67ab45167dc73f66adf47470532a7c71a3d3339f", "Url": "https://api.github.com/repos/Overruler/eclipse.platform.debug", "Date": "2014-10-06T14:43:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.danoeh.antennapod.AppConfig.DEBUG) android.util.Log.d(de.danoeh.antennapod.service.download.HttpDownloader.TAG, (\"Free space is \" + freeSpace));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1301/buggy-version/src.de.danoeh.antennapod.service.download.HttpDownloader.java", "BodyUseAPI": [], "Fixed commit": "625a0436441d688dfb525c3c7860a92c4e57c3ce", "Url": "https://api.github.com/repos/danieloeh/AntennaPod", "Date": "2012-08-25T20:36:52Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remaining()) == 0) return com.koushikdutta.async.ByteBufferList.EMPTY_BYTEBUFFER;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6267/buggy-version/AndroidAsync.src.com.koushikdutta.async.ByteBufferList.java", "BodyUseAPI": [], "Fixed commit": "08f7399e71420142913786400d17f71a5439e4c9", "Url": "https://api.github.com/repos/koush/AndroidAsync", "Date": "2013-06-27T21:23:52Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(myThymio.isPaused())) myThymio.drive((direction == 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8160/buggy-version/Thymio.src.thymio.ThymioNavigatingThread.java", "BodyUseAPI": ["thymio.Thymio.drive(boolean)"], "Fixed commit": "66bf9587cfeacc5654c1d15160dde6f3fb505e5c", "Url": "https://api.github.com/repos/bdludwig/Thymio", "Date": "2014-12-10T15:37:18Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.binding.soap.SoapMessage.getHeader(FlowIdHelper.FLOW_ID_QNAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (hdFlowId != null) { org.talend.esb.sam.agent.flowidprocessor.FlowIdSoapCodec.logger.warning(\"FlowId already existing in soap header, need not to write FlowId header.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9106/buggy-version/sam.sam-agent.src.main.java.org.talend.esb.sam.agent.flowidprocessor.FlowIdSoapCodec.java", "BodyUseAPI": [], "Fixed commit": "979c33a800db4091d91c48f8820273285c95fd74", "Url": "https://api.github.com/repos/zubairov/tesb-rt-se", "Date": "2011-07-08T08:00:03Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.exists())) { toDecode = (java.lang.Thread.currentThread().getContextClassLoader().getResource(\"\").getFile()) + propPath; }else { toDecode = (catalinaHome + \"/properties\") + propPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4771/buggy-version/open-ssp-parent.open-ssp-utilities.src.main.java.util.properties.ProjectProperty.java", "BodyUseAPI": [], "Fixed commit": "d6655f68aab950d2dd747ad6c4d9dc6d24c6b918", "Url": "https://api.github.com/repos/ad-tech-group/openssp", "Date": "2017-06-16T12:19:23Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((self.getLastAction()) == (ActionType.SWING)) && ((world.getPuck().getOwnerHockeyistId()) != (self.getId()))) move.setAction(ActionType.CANCEL_STRIKE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6709/buggy-version/java-cgdk.src.main.java.Defender.java", "BodyUseAPI": [], "Fixed commit": "f5c1dd465bf130ce8cd3afe1b2b13c4b60939381", "Url": "https://api.github.com/repos/NoTimeToWait/ai_hockey_code", "Date": "2014-09-19T09:49:40Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((self.getLastAction()) == (ActionType.SWING)) && ((world.getPuck().getOwnerHockeyistId()) != (self.getId()))) move.setAction(ActionType.CANCEL_STRIKE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6709/buggy-version/java-cgdk.src.main.java.Attacker.java", "BodyUseAPI": [], "Fixed commit": "f5c1dd465bf130ce8cd3afe1b2b13c4b60939381", "Url": "https://api.github.com/repos/NoTimeToWait/ai_hockey_code", "Date": "2014-09-19T09:49:40Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((googleTime.getDateTime()) == null) { result = convertToJodaDateTime(googleTime.getDate()); }else { result = convertToJodaDateTime(googleTime.getDateTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/88/buggy-version/src.main.java.com.zerodes.exchangesync.calendarsource.google.GoogleCalendarSourceImpl.java", "BodyUseAPI": ["com.google.api.services.calendar.model.EventDateTime.getDate()", "com.google.api.services.calendar.model.EventDateTime.getDateTime()", "com.zerodes.exchangesync.calendarsource.google.GoogleCalendarSourceImpl.convertToJodaDateTime(googleTime.getDateTime())", "com.zerodes.exchangesync.calendarsource.google.GoogleCalendarSourceImpl.convertToJodaDateTime(googleTime.getDate())"], "Fixed commit": "93bd4aefcb5f320afe95f8b40bac9441873ac796", "Url": "https://api.github.com/repos/gdenning/exchange-sync", "Date": "2013-11-28T12:29:19Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRunning) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8419/buggy-version/flexoutils.src.main.java.org.openflexo.toolbox.DirectoryWatcher.java", "BodyUseAPI": [], "Fixed commit": "13a37b017b3f343773af4eeedd42b1371989ed1e", "Url": "https://api.github.com/repos/openflexo-team/connie", "Date": "2015-10-15T15:16:09Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)", "java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((sep != null) && (sProps != null)) { cleanUrlBuilder.append(sep); if (sep.equals(\"?\")) { properties = com.github.gquintana.metrics.sql.DriverUrl.parseProperties(sProps, \"&\", cleanUrlBuilder); }else if (sep.equals(\";\")) { properties = com.github.gquintana.metrics.sql.DriverUrl.parseProperties(sProps, \";\", cleanUrlBuilder); } cleanUrl = cleanUrlBuilder.toString(); if (cleanUrl.endsWith(sep)) { cleanUrl = cleanUrl.substring(0, ((cleanUrl.length()) - (sep.length()))); } }else { cleanUrl = cleanUrlBuilder.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3107/buggy-version/src.main.java.com.github.gquintana.metrics.sql.DriverUrl.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.equals(java.lang.String)", "com.github.gquintana.metrics.sql.DriverUrl.parseProperties(java.lang.String,java.lang.String,java.lang.StringBuilder)", "com.github.gquintana.metrics.sql.DriverUrl.parseProperties(java.lang.String,java.lang.String,java.lang.StringBuilder)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "62f9bada49524a44403a5c6df9da91f2e937afdb", "Url": "https://api.github.com/repos/gquintana/metrics-sql", "Date": "2015-03-11T08:29:29Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kry.brickgame.shapes.TetrisShape.minY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (j >= (boardHeight)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3048/buggy-version/src.com.kry.brickgame.games.TetrisGame.java", "BodyUseAPI": [], "Fixed commit": "8d6ee3dfdceb7aa7e0afb84009be2dd1ce2f7333", "Url": "https://api.github.com/repos/n0Live/BrickGame", "Date": "2014-09-19T15:22:29Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j >= (boardHeight)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3048/buggy-version/src.com.kry.brickgame.games.TetrisGame.java", "BodyUseAPI": [], "Fixed commit": "8d6ee3dfdceb7aa7e0afb84009be2dd1ce2f7333", "Url": "https://api.github.com/repos/n0Live/BrickGame", "Date": "2014-09-19T15:22:29Z"},
{"Line": "=>1382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((spectrumDBcopy) != null) && ((graphView) != null)) { graphView.replotRawSpectrum(spectrumDBcopy, 1, spectrumDBcopy.length, com.google.corp.productivity.specialprojects.android.samples.fft.AnalyzeActivity.showLines); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2502/buggy-version/audioAnalyzer.src.com.google.corp.productivity.specialprojects.android.samples.fft.AnalyzeActivity.java", "BodyUseAPI": [], "Fixed commit": "4b82d74a276cb8e5cf223c696ca77a283b8869e2", "Url": "https://api.github.com/repos/bewantbe/audio-analyzer-for-android", "Date": "2014-09-18T10:45:17Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chess.Main.chessBoard) != null) chess.Main.chessBoard.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/995/buggy-version/src.chess.Main.java", "BodyUseAPI": [], "Fixed commit": "90d663e71ac13d46cf6018cc9657862c2c14d023", "Url": "https://api.github.com/repos/ahmed-anas/dp-chess", "Date": "2016-11-17T06:10:03Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isAlive()) { if (!(vests.isEmpty())) list.add(Constants.VEST_COMMAND); if (hasNightGuns(p.getNarrator())) list.add(Constants.GUN_COMMAND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3763/buggy-version/roles.Role.java", "BodyUseAPI": ["shared.logic.Player.getNarrator()", "shared.roles.Role.hasNightGuns(p.getNarrator())"], "Fixed commit": "93d0bfd9a4624530847551ff8566bd9098f3491a", "Url": "https://api.github.com/repos/vossnarrator/TheNarrator", "Date": "2017-10-11T17:39:07Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(descriptor.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentServiceId == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1346/buggy-version/nifi.nifi-nar-bundles.nifi-framework-bundle.nifi-framework.nifi-web.nifi-web-api.src.main.java.org.apache.nifi.web.util.SnippetUtils.java", "BodyUseAPI": [], "Fixed commit": "6a31b94b39c07f943d9145889bc96078921cb2d0", "Url": "https://api.github.com/repos/apache/nifi", "Date": "2015-03-20T19:52:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filename.startsWith(\"default\")) { java.lang.String cutoff = uri.substring(0, ((uri.lastIndexOf('/')) - 1)); java.lang.String cat = cutoff.substring(((cutoff.lastIndexOf('/')) + 1)); filename = cat + filename; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6428/buggy-version/src.com.steelthorn.android.watch.smartsquare.Util.java", "BodyUseAPI": [], "Fixed commit": "059b2920c425cedbdf0234d1694b309d93c44c02", "Url": "https://api.github.com/repos/zaventh/smartsquare", "Date": "2013-01-30T20:35:31Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataError.getState()) { error = 0; dropChance = 0; }else if (ackError.getState()) { error = java.lang.Double.parseDouble(errorPercentage.getText()); dropChance = 0; }else if (dataDrop.getState()) { error = 0; dropChance = 0; }else if (ackDrop.getState()) { error = 0; dropChance = java.lang.Double.parseDouble(errorPercentage.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5940/buggy-version/CopyGUI.java", "BodyUseAPI": [], "Fixed commit": "93a4d1d55f2737b2bcff74f5afff699fee92102a", "Url": "https://api.github.com/repos/sethkielbasa/network_design_project", "Date": "2017-11-19T00:01:32Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crowdsocial.activity.EventDetailActivity.getLocationFromAddress(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (latLng != null) { map.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng).title(eventAddress)); map.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(latLng)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5404/buggy-version/app.src.main.java.com.crowdsocial.activity.EventDetailActivity.java", "BodyUseAPI": ["new com.google.android.gms.maps.model.MarkerOptions().position(latLng).title(java.lang.String)", "com.google.android.gms.maps.GoogleMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng).title(eventAddress))", "com.google.android.gms.maps.model.MarkerOptions.position(com.google.android.gms.maps.model.LatLng)", "com.google.android.gms.maps.GoogleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(latLng))", "com.google.android.gms.maps.CameraUpdateFactory.newLatLng(com.google.android.gms.maps.model.LatLng)"], "Fixed commit": "8eecb407c579fa613fcbf8f738a5be9056e7c27a", "Url": "https://api.github.com/repos/CrowdSocial/CrowdSocial", "Date": "2015-11-01T01:40:33Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(automaticChange)) { playerActionPerformed(evt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2140/buggy-version/Mage.Client.src.main.java.mage.client.dialog.NewTournamentDialog.java", "BodyUseAPI": [], "Fixed commit": "2a2c593dd86d3e030c58d95814942118a6c3b273", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-11-01T00:57:26Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Main.frame) != null) { Main.frame.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2352/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "ddf7f82fdd259e7d2a2b1bef9539cbcd6e6f029a", "Url": "https://api.github.com/repos/aowolfie/Networking-Project", "Date": "2016-12-02T19:46:21Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.glassfish.jersey.client.ClientProperties.getValue(jerseyRequest.getConfiguration().getProperties(),ClientProperties.READ_TIMEOUT,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (readTimeout > 0) { p.addFirst(new io.netty.handler.timeout.ReadTimeoutHandler(readTimeout, java.util.concurrent.TimeUnit.MILLISECONDS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4379/buggy-version/connectors.netty-connector.src.main.java.org.glassfish.jersey.netty.connector.NettyConnector.java", "BodyUseAPI": ["io.netty.channel.ChannelPipeline.addFirst(io.netty.handler.timeout.ReadTimeoutHandler)"], "Fixed commit": "4c4e68e87090d874bcafcc692b6eef1e528b5f04", "Url": "https://api.github.com/repos/zhoshen/jersey", "Date": "2017-04-21T06:42:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentHex.IsVortexHex()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2723/buggy-version/src.model.MoveCalculator.MovementCalculator.java", "BodyUseAPI": [], "Fixed commit": "c6654bdffca2dacbb7d4ee03a4985e8a5d1f804a", "Url": "https://api.github.com/repos/cjeffery/sworsorc", "Date": "2014-04-17T14:05:03Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_downloader.isCancelled())) { if (verified()) { org.yawlfoundation.yawl.editor.ui.YAWLEditor.getStatusBar().setText((\"Update downloaded to \" + (_downloader.getTargetDir()))); if (_restarting) restart(); }else { showError(\"Downloaded files failed to verify.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7584/buggy-version/source.org.yawlfoundation.yawl.editor.ui.update.UpdateDialog.java", "BodyUseAPI": ["org.yawlfoundation.yawl.editor.ui.YAWLEditor.getStatusBar().setText((\"Update downloaded to \" + (_downloader.getTargetDir())))", "org.yawlfoundation.yawl.editor.ui.update.UpdateDownloader.getTargetDir()"], "Fixed commit": "d7eaf965b9d0df3a2e5ff2094beca282bf1b0bbc", "Url": "https://api.github.com/repos/yawlfoundation/editor", "Date": "2015-09-21T03:46:20Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((co.techmagic.hr.presentation.util.DateUtil.isSameDate(start1, start2)) || (co.techmagic.hr.presentation.util.DateUtil.isSameDate(end1, end2))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2598/buggy-version/app.src.main.java.co.techmagic.hr.presentation.util.DateUtil.java", "BodyUseAPI": [], "Fixed commit": "c7261cc98db78fa2f97e2855ed91d047bb529063", "Url": "https://api.github.com/repos/techmagic-team/techmagic-hr-android", "Date": "2017-07-07T13:00:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.openqa.selendroid.server.model.AndroidElement>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (element instanceof org.openqa.selendroid.server.model.AndroidNativeElement) { if (!(((org.openqa.selendroid.server.model.AndroidNativeElement) (element)).isDisplayed())) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4008/buggy-version/selendroid-server.src.main.java.org.openqa.selendroid.server.model.KnownElements.java", "BodyUseAPI": [], "Fixed commit": "c0d76180d6deaedcd4d437668d1ee4922db89e69", "Url": "https://api.github.com/repos/DominikDary/selendroid", "Date": "2013-05-06T10:06:14Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.sVersion_shutdown) == (me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.API_VERSION_1)) { me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.sMtd_shutdown.invoke(service, false, false); }else if ((me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.sVersion_shutdown) == (me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.API_VERSION_2)) { me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.sMtd_shutdown.invoke(service, false, reason, false); }else { if (me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.DEBUG) me.ycdev.android.lib.common.utils.LibLogger.e(me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.TAG, (\"shutdown, unknown api version: \" + (me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.sVersion_shutdown))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5579/buggy-version/baseLib.src.main.java.me.ycdev.android.lib.common.internalapi.android.os.PowerManagerIA.java", "BodyUseAPI": ["me.ycdev.android.lib.common.utils.LibLogger.e(java.lang.String,java.lang.String)"], "Fixed commit": "350038efc9d21ab8dcca4fa37724b732186b7fd8", "Url": "https://api.github.com/repos/yongce/AndroidLib", "Date": "2017-03-08T10:16:45Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNavigationHighlightId()) != (R.id.startseite)) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8005/buggy-version/LeoApp.app.src.main.java.de.slg.leoapp.view.LeoAppFeatureActivity.java", "BodyUseAPI": [], "Fixed commit": "af6744a7d3215deb60c7b3e53cc4b40e8735c465", "Url": "https://api.github.com/repos/Leo-App/android", "Date": "2017-12-23T22:58:34Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.linagora.linshare.core.domain.entities.MimeType.getExtensions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (extension.equals(\".jpg\")) { dto.addExtensions(\"jpeg\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1504/buggy-version/src.main.java.org.linagora.linshare.core.facade.webservice.uploadrequest.impl.UploadRequestUrlFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "8f4b8ebc382146b92aae95b04d56517456cb92dc", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2015-08-27T09:26:23Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.state) == (GameState.CIRCLE_WIN)) { setWinner(Type.CIRCLE); }else if ((game.state) == (GameState.CROSS_WIN)) { setWinner(Type.CROSS); }else if ((game.state) == (GameState.DRAW)) { setDraw(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4045/buggy-version/app.src.main.java.com.example.slaby.android_5_remastered.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5243fe0468bd59151db174de7741ced15267dd4a", "Url": "https://api.github.com/repos/slaby93/Android_TIC_TAC_TOE", "Date": "2017-04-23T16:18:53Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (User.SCHEMA_TYPE.equals(record.getTypeCode())) { com.constellio.model.entities.schemas.MetadataSchema userSchema = types.getSchema(User.DEFAULT_SCHEMA); if (((record.isModified(userSchema.getMetadata(User.COLLECTION_READ_ACCESS))) || (record.isModified(userSchema.getMetadata(User.COLLECTION_WRITE_ACCESS)))) || (record.isModified(userSchema.getMetadata(User.COLLECTION_DELETE_ACCESS)))) { cache.invalidateUser(record.<java.lang.String>get(userSchema.getMetadata(User.USERNAME))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2198/buggy-version/model.src.com.constellio.model.services.records.RecordUtils.java", "BodyUseAPI": ["com.constellio.model.services.taxonomies.TaxonomiesSearchServicesCache.invalidateUser(record.<java.lang.String>get(userSchema.getMetadata(User.USERNAME)))", "com.constellio.model.entities.records.Record.isModified(userSchema.getMetadata(User.COLLECTION_READ_ACCESS))", "com.constellio.model.entities.records.Record.isModified(userSchema.getMetadata(User.COLLECTION_WRITE_ACCESS))", "com.constellio.model.entities.records.Record.get(userSchema.getMetadata(User.USERNAME))", "com.constellio.model.entities.records.Record.isModified(userSchema.getMetadata(User.COLLECTION_DELETE_ACCESS))"], "Fixed commit": "9160fe5285e0a45bbf7441c8d1a968c09783306e", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-10-13T17:06:59Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getNodeInstanceWithName(nodeInstance, nodeTemplateName)) != null) { java.lang.String propValue = fetchPropertyValueFromNodeInstance(getNodeInstanceWithName(nodeInstance, nodeTemplateName), propertyName); augmentedFunctionParts.add(((\"'\" + propValue) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8641/buggy-version/org.opentosca.instancedata.service.impl.src.org.opentosca.instancedata.service.impl.InstanceDataServiceImpl.java", "BodyUseAPI": ["org.opentosca.instancedata.service.impl.InstanceDataServiceImpl.getNodeInstanceWithName(java.util.List<org.opentosca.model.instancedata.NodeInstance>,java.lang.String)", "org.opentosca.instancedata.service.impl.InstanceDataServiceImpl.fetchPropertyValueFromNodeInstance(org.opentosca.model.instancedata.NodeInstance,java.lang.String)"], "Fixed commit": "a4d042b6ec59c4e2cafc8cb510bfb515ddc9b844", "Url": "https://api.github.com/repos/OpenTOSCA/container", "Date": "2017-03-01T14:48:05Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodeInstance.getProperties()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8641/buggy-version/org.opentosca.instancedata.service.impl.src.org.opentosca.instancedata.service.impl.InstanceDataServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "a4d042b6ec59c4e2cafc8cb510bfb515ddc9b844", "Url": "https://api.github.com/repos/OpenTOSCA/container", "Date": "2017-03-01T14:48:05Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((network.getState()) == (no.fictive.irclib.model.network.State.CONNECTING)) { network.tryAlternativeInformation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2361/buggy-version/src.main.java.no.fictive.irclib.control.NumericHandler.java", "BodyUseAPI": ["no.fictive.irclib.model.network.Network.tryAlternativeInformation()"], "Fixed commit": "368d79f38b6f647cbd37679b880e40b3ef55e547", "Url": "https://api.github.com/repos/espenja/irclib", "Date": "2013-12-04T17:20:59Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((username.get_content()) != null) { if ((username.get_content().length()) > 0) { profileName = username.get_content(); }else { profileName = realname.get_content(); } }else { profileName = realname.get_content(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6997/buggy-version/demo.src.com.mani.staggeredview.demo.model.FlickrProfile.java", "BodyUseAPI": ["username.get_content().length()", "com.mani.staggeredview.demo.model.FlickrProfileRealName.get_content()", "com.mani.staggeredview.demo.model.FlickrProfileRealName.get_content()"], "Fixed commit": "99ab1aaa77ae28eb4a6470b272a2766fba3d5d1d", "Url": "https://api.github.com/repos/smanikandan14/StaggeredGridView", "Date": "2013-12-18T23:20:31Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nsz <= (labels.length)) nsz = ((labels.length) * 2) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1998/buggy-version/trie4j.src.org.trie4j.louds.LOUDSTrie.java", "BodyUseAPI": [], "Fixed commit": "8e5260c82c25d193e17e00fb6d47c9b8e7f3e9cb", "Url": "https://api.github.com/repos/takawitter/trie4j", "Date": "2013-01-29T12:29:24Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hubspot.blazar.data.service.RepositoryBuildService.nextQueuedBuild(build.getBranchId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nextQueuedBuild.isPresent()) { com.hubspot.blazar.data.service.RepositoryBuildService.checkAffectedRowCount(branchDao.updateInProgressBuild(build, nextQueuedBuild.get())); eventBus.post(nextQueuedBuild.get()); }else { com.hubspot.blazar.data.service.RepositoryBuildService.checkAffectedRowCount(branchDao.updateInProgressBuild(build)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7127/buggy-version/BlazarData.src.main.java.com.hubspot.blazar.data.service.RepositoryBuildService.java", "BodyUseAPI": ["com.hubspot.blazar.data.service.RepositoryBuildService.checkAffectedRowCount(branchDao.updateInProgressBuild(build, nextQueuedBuild.get()))", "com.google.common.eventbus.EventBus.post(nextQueuedBuild.get())", "com.google.common.base.Optional<com.hubspot.blazar.base.RepositoryBuild>.get()", "com.hubspot.blazar.data.dao.BranchDao.updateInProgressBuild(com.hubspot.blazar.base.RepositoryBuild,nextQueuedBuild.get())", "com.google.common.base.Optional<com.hubspot.blazar.base.RepositoryBuild>.get()"], "Fixed commit": "a8634058a2efab757c76b54512281e07fced5e1f", "Url": "https://api.github.com/repos/HubSpot/Blazar", "Date": "2016-03-31T20:44:55Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.exists())) { java.lang.Process oldProcess = com.blazingkin.interpreter.executor.Executor.getCurrentProcess(); path = ((oldProcess.readingFrom.getParent()) + (java.io.File.separator)) + path; f = new java.io.File(path); if (!(f.exists())) { com.blazingkin.interpreter.Interpreter.throwError((\"Could not find file at path: \" + path)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/360/buggy-version/com.blazingkin.interpreter.executor.executionorder.ChangeProcess.java", "BodyUseAPI": [], "Fixed commit": "f7ccbcd1b141851116dc9c7862c17d55c7f22d0f", "Url": "https://api.github.com/repos/blazingkin/blz-ospl", "Date": "2017-07-04T21:16:35Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.raynigon.lib.events.handling.EventListener, com.raynigon.lib.events.handling.EventMethod[]>.get(com.raynigon.lib.events.handling.EventListener)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ems == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7702/buggy-version/src.main.java.com.raynigon.lib.events.handling.EventManager.java", "BodyUseAPI": [], "Fixed commit": "6c2a18707284e773e5dc31fe902c8bfd9cacf906", "Url": "https://api.github.com/repos/raynigon/RaynigonJavaLibrary", "Date": "2017-03-23T13:45:50Z"},
{"Line": "=>1828", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((actualTypes[i]) instanceof java.lang.reflect.TypeVariable) { type = typeArgsMap.get(((java.lang.reflect.TypeVariable<?>) (actualTypes[i])).getName()); }else if ((actualTypes[i]) instanceof java.lang.Class) { type = actualTypes[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5584/buggy-version/src.main.java.uk.co.jemos.podam.api.PodamFactoryImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.reflect.Type>.get(java.lang.String)", "java.lang.reflect.Type.getName()"], "Fixed commit": "735c919ebc86bae676bce8069aeeb5bb97a639ba", "Url": "https://api.github.com/repos/daivanov/joinmo", "Date": "2015-02-21T19:45:12Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["df.getDrawPerLine_NOCLONE().getValue(((compositeText[0].getLineAtOffset(e.lineOffset)) + 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((data != null) && ((data.type()) == 0)) { java.util.Set<org.nschmidt.ldparteditor.data.VertexInfo> vis = vm.getLineLinkedToVertices().get(data); if (vis != null) { for (org.nschmidt.ldparteditor.data.VertexInfo vi : vis) { if (vm.getSelectedVertices().contains(vi.getVertex())) { isSelected = true; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6563/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": ["vm.getLineLinkedToVertices().get(org.nschmidt.ldparteditor.data.GData)"], "Fixed commit": "8775ef18017eb9b1e5fa45120679c6e9fee55f7f", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-04-04T19:44:47Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.PlayerManager.findPlayerByName(cip.invited)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (target != null) server.Outbox.sendPacket(out_pkt, target.getChannel());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6887/buggy-version/Mafia.src.game_space.LobbyLogic.java", "BodyUseAPI": ["players.Player.getChannel()", "server.Outbox.sendPacket(server.ServerPacket,target.getChannel())"], "Fixed commit": "7ae2240c22b77c63f91128624804e2a75096f68d", "Url": "https://api.github.com/repos/mrbrian/CPSC441_Project", "Date": "2016-04-03T01:37:42Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.indarsoft.cardutl.xml.XmlKeyData.getBinKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (b == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1689/buggy-version/cardgui.src.main.java.com.indarsoft.cardgui.card.CardFrm.java", "BodyUseAPI": [], "Fixed commit": "79008dec1764b200895151bb7900c16fa0be9569", "Url": "https://api.github.com/repos/jporras66/cardgui", "Date": "2015-04-07T15:42:41Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diagram.isLayout()) { c1.setLoadedPosition(sourcePosition); c2.setLoadedPosition(destinationPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/526/buggy-version/GraphEdit.src.graphedit.model.elements.GraphEditPackage.java", "BodyUseAPI": [], "Fixed commit": "c5f917367865827a1f5f943462c4f68e52258fe5", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2014-09-23T05:54:34Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ch.ethz.scu.obit.bdfacsdivafcs.gui.editors.data.model.BDFACSDIVAFCSMetadata>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nExperiments > 1) { java.lang.Object[] options = new java.lang.Object[]{ \"To this only\", \"To all\" }; n = javax.swing.JOptionPane.showOptionDialog(null, \"Set this project to this experiment only or to all?\", \"Question\", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, options, options[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9160/buggy-version/AnnotationToolBDFACSDIVAFCS.ch.ethz.scu.obit.bdfacsdivafcs.gui.editors.data.BDFACSDIVAFCSEditor.java", "BodyUseAPI": [], "Fixed commit": "8d4620a9108f59efcffd11fe3783f31fdae63b69", "Url": "https://api.github.com/repos/aarpon/obit_annotation_tool", "Date": "2014-05-22T13:08:02Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadataMappersList.size()) < ((currentExperimentIndex) + 1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9160/buggy-version/AnnotationToolMicroscopy.ch.ethz.scu.obit.microscopy.gui.editors.data.MicroscopyEditor.java", "BodyUseAPI": [], "Fixed commit": "8d4620a9108f59efcffd11fe3783f31fdae63b69", "Url": "https://api.github.com/repos/aarpon/obit_annotation_tool", "Date": "2014-05-22T13:08:02Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ch.ethz.scu.obit.microscopy.gui.editors.data.model.MicroscopyMetadata>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nExperiments > 1) { java.lang.Object[] options = new java.lang.Object[]{ \"To this only\", \"To all\" }; n = javax.swing.JOptionPane.showOptionDialog(null, \"Set this project to this experiment only or to all?\", \"Question\", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.QUESTION_MESSAGE, null, options, options[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9160/buggy-version/AnnotationToolMicroscopy.ch.ethz.scu.obit.microscopy.gui.editors.data.MicroscopyEditor.java", "BodyUseAPI": [], "Fixed commit": "8d4620a9108f59efcffd11fe3783f31fdae63b69", "Url": "https://api.github.com/repos/aarpon/obit_annotation_tool", "Date": "2014-05-22T13:08:02Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((comp.length) > 1) { if (comp[1].equalsIgnoreCase(\"mph\")) { multiplier = com.xapi.models.Way.MPH_TO_MS; } if (comp[1].equalsIgnoreCase(\"knots\")) { multiplier = com.xapi.models.Way.KNOTS_TO_MS; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2767/buggy-version/src.main.java.com.xapi.models.Way.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "410b183e7b0f9f6498e17fb313dce922a6d5c4fd", "Url": "https://api.github.com/repos/rootkit007/osm-client-lib", "Date": "2014-05-30T16:16:41Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (workDuration != null) { org.sonar.api.utils.WorkDuration result = workDuration.subtract(toSubtractWith); if ((result.toSeconds()) > 0) { return result; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3740/buggy-version/sonar-batch.src.main.java.org.sonar.batch.debt.IssueChangelogDebtCalculator.java", "BodyUseAPI": ["org.sonar.api.utils.WorkDuration.subtract(org.sonar.api.utils.WorkDuration)"], "Fixed commit": "20588a739f4e15f9ed5a070381a2efba76b996c4", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2014-02-17T15:48:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkLocationPermissions()) { startLocationService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4085/buggy-version/app.src.main.java.com.example.shan.location.LoggedActivity.java", "BodyUseAPI": [], "Fixed commit": "09393fc575b6bc3aa974bad1d17b3855c4c8a32e", "Url": "https://api.github.com/repos/mkspramuditha/location", "Date": "2017-02-06T11:40:03Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k >= (checkPoints.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/783/buggy-version/AgentWiseAGV.src.main.java.singlestage.contextaware.repair.VirtualEnvironment.java", "BodyUseAPI": [], "Fixed commit": "ec237b9b72a1cf9cba6d594e2b5ae25d12b2d709", "Url": "https://api.github.com/repos/hoangtungdinh/AgentWiseAGV", "Date": "2015-10-06T13:51:22Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rectangleTokenSpec) == null) drawRectangles();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1705/buggy-version/WeatherMap.app.src.main.java.ru.gleb.manyagin.weathermap.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8a307b51e29174b932dc5768837a45d0836766e2", "Url": "https://api.github.com/repos/GlebMan-n/WeatherMapRep", "Date": "2015-05-12T11:00:15Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rectangleTokenGen) == null) drawRectangles();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1705/buggy-version/WeatherMap.app.src.main.java.ru.gleb.manyagin.weathermap.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8a307b51e29174b932dc5768837a45d0836766e2", "Url": "https://api.github.com/repos/GlebMan-n/WeatherMapRep", "Date": "2015-05-12T11:00:15Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sort != null) { if (order.equals(\"DESC\")) { pageable = new org.springframework.data.domain.PageRequest(page, size, new org.springframework.data.domain.Sort(Sort.Direction.DESC, sort)); }else { pageable = new org.springframework.data.domain.PageRequest(page, size, new org.springframework.data.domain.Sort(Sort.Direction.ASC, sort)); } }else { pageable = new org.springframework.data.domain.PageRequest(page, size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1722/buggy-version/back.src.main.java.org.lenndi.umtapo.controller.ItemWebService.java", "BodyUseAPI": [], "Fixed commit": "4df5651f6f16d1bccdfd3822260430bb3d9325aa", "Url": "https://api.github.com/repos/Lenndi/Umtapo", "Date": "2017-10-21T15:55:19Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["enrollments.getJSONObject(i).getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(studies.contains(studieString))) && (!(studieString.equals(\"\")))) studies.add(studieString);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3869/buggy-version/src.info.vanderkooy.ucheck.Classes.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "40bfe25ac2133d305fc1e43198c3fe8da6633989", "Url": "https://api.github.com/repos/niekvanderkooy/ucheck-android", "Date": "2012-10-08T16:03:49Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(items[i].equals(\"\\\"???\\\"\"))) { Waypoint waypoint = waypoints.get(items[i]); if (waypoint == null) { return null; } task.waypoints.add(new WaypointWithObsZone(waypoint)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5006/buggy-version/src.Task.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, Waypoint>.get(java.lang.String)"], "Fixed commit": "92d9967905be4c0302d869f2e56664a3ed718f9b", "Url": "https://api.github.com/repos/ubx/cupToOGN-Task", "Date": "2017-06-13T16:30:28Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tabFolder) == null) || (tabFolder.isDisposed())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4552/buggy-version/org.bbaw.bts.ui.corpus.src.org.bbaw.bts.ui.corpus.parts.PassportEditorPart.java", "BodyUseAPI": [], "Fixed commit": "8fdd79db1e6a0806966e240bcfc695d23c455172", "Url": "https://api.github.com/repos/cplutte/bts", "Date": "2017-01-16T14:36:48Z"},
{"Line": "=>841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.triggers.containsKey(TriggerType.ITEM_CRAFT))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8665/buggy-version/src.de.kumpelblase2.dragonslair.DLEventHandler.java", "BodyUseAPI": [], "Fixed commit": "ac2ed9f4d6121e77a8de2ef6cf350f0980033bd0", "Url": "https://api.github.com/repos/Multiplayer-italia/Dragons-Lair", "Date": "2012-07-26T18:50:15Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TreeMap<java.lang.String, edu.dynamic.dynamiz.structure.ToDoItem>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (target instanceof edu.dynamic.dynamiz.structure.TaskItem) { target = new edu.dynamic.dynamiz.structure.EventItem(((edu.dynamic.dynamiz.structure.TaskItem) (target)), start); }else { target = new edu.dynamic.dynamiz.structure.EventItem(target, start); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/864/buggy-version/src.edu.dynamic.dynamiz.storage.Storage.java", "BodyUseAPI": [], "Fixed commit": "36cac171d03c14576beb680aa4f258afcac28fa5", "Url": "https://api.github.com/repos/cs2103aug2014-w13-2j/main", "Date": "2014-10-24T09:52:54Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (str == null) throw new java.lang.IllegalArgumentException((\"On file \" + file));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3572/buggy-version/src.com.podevs.android.poAndroid.pokeinfo.InfoFiller.java", "BodyUseAPI": [], "Fixed commit": "f0d98c02b9afb075bcd162e96f2e68a1dcf46f2e", "Url": "https://api.github.com/repos/MidwayMarshall/android-client", "Date": "2017-01-09T22:10:11Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((var1 == null) && (constant >= 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7331/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.implicitargs.equations.TwoStageEquations.java", "BodyUseAPI": [], "Fixed commit": "185b4c09b809d6dc38dc69b404baf6e0cf713962", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-11-09T13:13:46Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(childs.isEmpty())) { ceconomico.valores.get(i).valorPropuesto = baremacion.Evaluador.sumatorio(\"valores\", i, \"valorPropuesto\", childs); ceconomico.valores.get(i).valorConcedido = baremacion.Evaluador.sumatorio(\"valores\", i, \"valorConcedido\", childs); ceconomico.valores.get(i).valorEstimado = baremacion.Evaluador.sumatorio(\"valores\", i, \"valorEstimado\", childs); ceconomico.valores.get(i).valorSolicitado = baremacion.Evaluador.sumatorio(\"valores\", i, \"valorSolicitado\", childs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5011/buggy-version/fap.app.baremacion.Evaluador.java", "BodyUseAPI": ["baremacion.Evaluador.sumatorio(java.lang.String,int,java.lang.String,java.util.List<models.CEconomico>)", "baremacion.Evaluador.sumatorio(java.lang.String,int,java.lang.String,java.util.List<models.CEconomico>)", "baremacion.Evaluador.sumatorio(java.lang.String,int,java.lang.String,java.util.List<models.CEconomico>)", "baremacion.Evaluador.sumatorio(java.lang.String,int,java.lang.String,java.util.List<models.CEconomico>)"], "Fixed commit": "980327846de6358c475bfa78caf50e469accb9fd", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-09-03T07:32:11Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bina.varsim.types.variant.Variant.insertion_len(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inslen == 0) && (dellen > 0)) { return VariantType.Deletion; }else if (((dellen - inslen) > 0) && (new java.lang.String(_ref).endsWith(_alts[(ind - 1)].toString()))) { return VariantType.Deletion; }else if ((inslen > 0) && (dellen == 0)) { return VariantType.Insertion; }else if (inslen == dellen) { return VariantType.MNP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7925/buggy-version/src.main.java.com.bina.varsim.types.variant.Variant.java", "BodyUseAPI": [], "Fixed commit": "fd488c5aec5c0dcbd6062292e0159721dbdded2b", "Url": "https://api.github.com/repos/bioinform/varsim", "Date": "2016-09-30T22:00:34Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.data.size()) == 0) { this.data.add(1); this.data.add(2); this.data.add(3); this.data.add(4); this.data.add(5); this.data.add(6); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2478/buggy-version/src.com.car_market_android.MarketplaceFragment.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Integer>.add(int)", "java.util.LinkedList<java.lang.Integer>.add(int)", "java.util.LinkedList<java.lang.Integer>.add(int)", "java.util.LinkedList<java.lang.Integer>.add(int)", "java.util.LinkedList<java.lang.Integer>.add(int)", "java.util.LinkedList<java.lang.Integer>.add(int)"], "Fixed commit": "9719ef1a13705fb1ac6216907619c704876b140b", "Url": "https://api.github.com/repos/ctrl-alt-del/car-market-android", "Date": "2014-08-22T07:49:05Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((config != null) && (config.containsKey(\"flows\"))) flows.addAll(((java.util.List<com.amazon.kinesis.streaming.agent.config.Configuration>) (config.getConfigMap().get(\"flows\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/209/buggy-version/src.com.amazon.kinesis.streaming.agent.Agent.java", "BodyUseAPI": ["java.util.List<com.amazon.kinesis.streaming.agent.config.Configuration>.addAll(((java.util.List<com.amazon.kinesis.streaming.agent.config.Configuration>) (config.getConfigMap().get(\"flows\"))))", "config.getConfigMap().get(java.lang.String)", "com.amazon.kinesis.streaming.agent.config.Configuration.getConfigMap()"], "Fixed commit": "e9258e96c2c9d21773e3ebb2d174590e7c1261b3", "Url": "https://api.github.com/repos/humanics/amazon-kinesis-agent", "Date": "2017-10-04T00:17:45Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LocationServices.FusedLocationApi.getLastLocation(com.google.android.gms.common.api.GoogleApiClient)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (location != null) { lat = location.getLatitude(); lng = location.getLongitude(); }else { lat = 37.43; lng = -122.17; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/863/buggy-version/app.src.main.java.cs194.maaap.MapsActivity.java", "BodyUseAPI": ["android.location.Location.getLatitude()", "android.location.Location.getLongitude()"], "Fixed commit": "ce39cbc4828922546cbc7b74eb0134042cda172f", "Url": "https://api.github.com/repos/sixkkdrx3/cs194", "Date": "2016-01-25T20:01:48Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((m_error) == true) { setDefaultCloseOperation(); }else setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7824/buggy-version/Classes.AddEventWindow.java", "BodyUseAPI": [], "Fixed commit": "a8cbf59d357d62913286f274509a22f7cbba566b", "Url": "https://api.github.com/repos/SwanseaSoftwareEngG6/Assignment-6-Project", "Date": "2012-03-31T15:05:38Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["polly.rx.core.orion.Graph<polly.rx.core.orion.model.Sector, polly.rx.core.orion.model.QuadrantUtils.Costs>.findShortestPath(polly.rx.core.orion.model.Sector,polly.rx.core.orion.model.Sector,polly.rx.core.orion.Graph.LazyBuilder<polly.rx.core.orion.model.Sector, polly.rx.core.orion.model.QuadrantUtils.Costs>,polly.rx.core.orion.Graph.<polly.rx.core.orion.model.Sector>noHeuristic(),polly.rx.core.orion.Graph.EdgeCosts<polly.rx.core.orion.model.QuadrantUtils.Costs>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.getPath().isEmpty()) && (!(source.equals(target)))) { return java.lang.Integer.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1840/buggy-version/projects.de.skuzzle.polly.plugin.rx.src.polly.rx.core.orion.model.QuadrantUtils.java", "BodyUseAPI": [], "Fixed commit": "5c82fcd0bd463969f22e9b5c4f1bb6c808e7ed50", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2014-01-03T20:58:12Z"},
{"Line": "=>2044", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enableTestCompilers) { level += (org.jnode.vm.LoadCompileService.getHighestOptimizationLevel(false)) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8058/buggy-version/core.src.core.org.jnode.vm.classmgr.VmType.java", "BodyUseAPI": [], "Fixed commit": "1942e0a3dc0f17702b6f57c14d3f1754b1904256", "Url": "https://api.github.com/repos/tmyroadctfig/jnode", "Date": "2014-09-14T09:30:51Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (length == (-1)) { responseHeaders.remove(Headers.CONTENT_LENGTH); }else { responseHeaders.put(Headers.CONTENT_LENGTH, java.lang.Long.toString(length)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3415/buggy-version/core.src.main.java.io.undertow.server.HttpServerExchange.java", "BodyUseAPI": ["io.undertow.util.HeaderMap.put(Headers.CONTENT_LENGTH,java.lang.String)", "java.lang.Long.toString(long)"], "Fixed commit": "77f451795a0482e9d7970b460b659cc5ed4cb247", "Url": "https://api.github.com/repos/rhusar/undertow", "Date": "2013-05-23T03:53:27Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exchange.getRequestMethod().equals(Methods.HEAD)) { return factory.create(); }else { return encoding.getEncoding().getResponseWrapper().wrap(factory, exchange); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3415/buggy-version/core.src.main.java.io.undertow.server.handlers.encoding.ContentEncoding.java", "BodyUseAPI": ["encoding.getEncoding().getResponseWrapper().wrap(io.undertow.util.ConduitFactory<org.xnio.conduits.StreamSinkConduit>,io.undertow.server.HttpServerExchange)"], "Fixed commit": "77f451795a0482e9d7970b460b659cc5ed4cb247", "Url": "https://api.github.com/repos/rhusar/undertow", "Date": "2013-05-23T03:53:27Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((exchange.getResponseContentLength()) != 0) && ((exchange.getResponseCode()) != 204)) && ((exchange.getResponseCode()) != 304)) { for (io.undertow.server.handlers.encoding.EncodingMapping encoding : encodings) { if (encoding.getAllowed().resolve(exchange)) { exchange.getResponseHeaders().put(Headers.CONTENT_ENCODING, encoding.getName()); if (exchange.getRequestMethod().equals(Methods.HEAD)) { return factory.create(); }else { return encoding.getEncoding().getResponseWrapper().wrap(factory, exchange); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3415/buggy-version/core.src.main.java.io.undertow.server.handlers.encoding.ContentEncoding.java", "BodyUseAPI": ["encoding.getAllowed().resolve(io.undertow.server.HttpServerExchange)", "exchange.getResponseHeaders().put(Headers.CONTENT_ENCODING,encoding.getName())", "exchange.getRequestMethod().equals(Methods.HEAD)", "encoding.getEncoding().getResponseWrapper().wrap(io.undertow.util.ConduitFactory<org.xnio.conduits.StreamSinkConduit>,io.undertow.server.HttpServerExchange)", "io.undertow.server.HttpServerExchange.getRequestMethod()", "io.undertow.server.HttpServerExchange.getResponseHeaders()"], "Fixed commit": "77f451795a0482e9d7970b460b659cc5ed4cb247", "Url": "https://api.github.com/repos/rhusar/undertow", "Date": "2013-05-23T03:53:27Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.unidal.helper.Scanners.ResourceMatcher.matches(java.net.URL,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (d.isMatched()) { urls.add(u); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5630/buggy-version/foundation-service.src.main.java.org.unidal.helper.Scanners.java", "BodyUseAPI": [], "Fixed commit": "cc0633bf0d7590178d577880a8c8d58d7b2950b9", "Url": "https://api.github.com/repos/unidal/frameworks", "Date": "2017-06-10T12:45:07Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cpsc599.managers.PlayerManager.getCurrent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (p != null) { if (this.inventoryMenu.isVisible()) this.inventoryMenu.toggleVisible(); else if (this.actMenu.isVisible()) this.actMenu.toggleVisible(); else if (((p.x) == ((int) (this.selectorPosition.x))) && ((p.y) == ((int) (this.selectorPosition.y)))) releasePlayer(); else resetPlayerToCursor(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8629/buggy-version/src.cpsc599.controller.PlayerController.java", "BodyUseAPI": ["cpsc599.controller.PlayerController.resetPlayerToCursor(cpsc599.assets.Player)"], "Fixed commit": "093fb3835394caf80a32c3c94e3e68a0a341fb4f", "Url": "https://api.github.com/repos/Senney/CPSC599-RPG", "Date": "2014-03-03T23:36:16Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getProfileImage()) != null) { ((android.widget.ImageView) (findViewById(R.id.athleteImage))).setImageBitmap(result.getProfileImage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8060/buggy-version/app.src.main.java.com.dcrichards.stravadora.MainActivity.java", "BodyUseAPI": ["com.dcrichards.stravadora.StravaAthlete.getProfileImage()", "((android.widget.ImageView) (findViewById(R.id.athleteImage))).setImageBitmap(result.getProfileImage())"], "Fixed commit": "fc9fe641b6ece202fea50d5bcdf4d4c328e2ce48", "Url": "https://api.github.com/repos/DCRichards/stravadora", "Date": "2016-01-28T22:36:15Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNeighborEdgesByPoint(start).size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6915/buggy-version/src.roadgraph.MapGraph.java", "BodyUseAPI": [], "Fixed commit": "e397bc1ab5a021947aa67b3a4d7b5f68ab43070b", "Url": "https://api.github.com/repos/xuqianshawn/advanced-data-structures", "Date": "2017-08-27T09:24:53Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!thisIsARedeploy) com.pod.listeners.ServerProperties.workerId = wdao.insert(worker);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4524/buggy-version/application.src.com.pod.listeners.ServerProperties.java", "BodyUseAPI": [], "Fixed commit": "de9a6c4c101ec9f060ad19ec1d391ab72469093d", "Url": "https://api.github.com/repos/gpuenteallott/pod", "Date": "2014-07-20T21:47:13Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.metinkale.prayerapp.vakit.times.Times.sTimes.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/476/buggy-version/app.src.main.java.com.metinkale.prayerapp.vakit.times.Times.java", "BodyUseAPI": [], "Fixed commit": "c1ce20b516721edc89c4d2339a60ed2c1654a864", "Url": "https://api.github.com/repos/metinkale38/prayer-times-android", "Date": "2016-12-20T21:52:45Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.metinkale.prayerapp.vakit.times.Times.sTimes.isEmpty())) com.metinkale.prayerapp.vakit.times.Times.sort();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/476/buggy-version/app.src.main.java.com.metinkale.prayerapp.vakit.times.Times.java", "BodyUseAPI": [], "Fixed commit": "c1ce20b516721edc89c4d2339a60ed2c1654a864", "Url": "https://api.github.com/repos/metinkale38/prayer-times-android", "Date": "2016-12-20T21:52:45Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!loop) { final java.util.List<wblut.hemesh.HE_Halfedge> reversepathedges = new javolution.util.FastTable<wblut.hemesh.HE_Halfedge>(); current = edges.get(0); for (int i = 0; i < (edges.size()); i++) { if ((edges.get(i).getEndVertex()) == (current.getVertex())) { if (i > 0) { current = edges.get(i); reversepathedges.add(current); i = 0; } } } final java.util.List<wblut.hemesh.HE_Halfedge> finalpathedges = new javolution.util.FastTable<wblut.hemesh.HE_Halfedge>(); for (int i = (reversepathedges.size()) - 1; i > (-1); i--) { finalpathedges.add(reversepathedges.get(i)); } finalpathedges.addAll(pathedges); paths.add(new wblut.hemesh.HE_Path(finalpathedges, loop)); edges.removeAll(finalpathedges); }else { paths.add(new wblut.hemesh.HE_Path(pathedges, loop)); edges.removeAll(pathedges); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4119/buggy-version/hemesh.src.wblut.hemesh.HEM_SliceSurface.java", "BodyUseAPI": ["java.util.List<wblut.hemesh.HE_Path>.add(wblut.hemesh.HE_Path)", "java.util.List<wblut.hemesh.HE_Path>.add(wblut.hemesh.HE_Path)"], "Fixed commit": "97b60af3f4899d5c25758fcf4ed22bd6617f82dd", "Url": "https://api.github.com/repos/wblut/HE_Mesh2014", "Date": "2014-09-06T22:17:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.ingemark.requestage.Util.now()) - (lastUpdate)) > (com.ingemark.requestage.plugin.ui.RespDistributionViewer.REFRESH_INTERVAL)) chart.redraw();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2543/buggy-version/src.com.ingemark.requestage.plugin.ui.RespDistributionViewer.java", "BodyUseAPI": [], "Fixed commit": "b1b53bfc01d3fb60974375939ac459996dacfed6", "Url": "https://api.github.com/repos/mtopolnik/request-age", "Date": "2013-11-13T19:51:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.motechproject.mtraining.repository.AllCourses.findAllPublishedBy(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (publishedCourses.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7897/buggy-version/modules.mtraining.src.main.java.org.motechproject.mtraining.repository.AllCourses.java", "BodyUseAPI": [], "Fixed commit": "5c9adfe41d889fddd26dc630af913c378b471514", "Url": "https://api.github.com/repos/mtraining/motech-communications", "Date": "2014-04-16T13:01:38Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x >= 8.22) return 1; else if (x <= (-8.22)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6020/buggy-version/JSAT.src.jsat.distributions.Normal.java", "BodyUseAPI": [], "Fixed commit": "fb573ddb7f4d803083c375d1935b5cb9d16933ab", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2015-12-16T23:20:19Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.watabou.pixeldungeon.Badges.isUnlocked(masteryBadge())) { new com.watabou.pixeldungeon.items.TomeOfMastery().collect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2845/buggy-version/src.com.watabou.pixeldungeon.actors.hero.HeroClass.java", "BodyUseAPI": [], "Fixed commit": "5ffd1df9278ff524b1cbe405895df5cc7cff976c", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2015-03-23T05:50:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aufgabe41.Vector3.cosTheta(aufgabe41.Vector3)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cosAlpha > 0) { double f2 = java.lang.Math.pow(cosAlpha, 2); return new aufgabe41.Vector3((((f * f2) * (this.color().x)) * k_sp), (((f * f2) * (this.color().y)) * k_sp), (((f * f2) * (this.color().z)) * k_sp)); }else { return aufgabe41.Vector3.Null(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4716/buggy-version/src.aufgabe41.phong.DiffuseLight.java", "BodyUseAPI": ["java.lang.Math.pow(double,int)"], "Fixed commit": "339338bbc682458cf763082da3ab71baff872086", "Url": "https://api.github.com/repos/justayak/computerGrafik_2014", "Date": "2014-06-10T20:12:49Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mostCommonPlays != (-1)) || (mostCommonPlays != (-1))) || (lastAddedFriendId != (-1))) getFriendNamesAndLoadStats(lastAddedFriendId, mostCommonPlaysFriendId); else loadStats(\"/\", \"/\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8540/buggy-version/app.src.main.java.cwa115.trongame.ProfileActivity.java", "BodyUseAPI": ["cwa115.trongame.ProfileActivity.getFriendNamesAndLoadStats(long,long)"], "Fixed commit": "ea5d09970ebb14bfd09224c68917e2ae80488570", "Url": "https://api.github.com/repos/TronGame/CWA115", "Date": "2015-12-10T19:12:40Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.possibleMovement) != null) { for (main.java.utils.Coord coord : this.possibleMovement) clone.possibleMovement.add(new main.java.utils.Coord(coord.getX(), coord.getY())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9080/buggy-version/src.main.java.model.Piece.java", "BodyUseAPI": [], "Fixed commit": "1c926403c47438c3e0d3a85f1ae354524e24ac27", "Url": "https://api.github.com/repos/Plinz/Hive_Game", "Date": "2017-05-05T11:08:59Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(splitted)) textEnd = text.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2432/buggy-version/src.main.java.org.fit.cssbox.layout.TextBox.java", "BodyUseAPI": [], "Fixed commit": "1697796ea5f025a8615af25cc2cee99f151d3e2d", "Url": "https://api.github.com/repos/radkovo/CSSBox", "Date": "2017-01-17T13:58:10Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((id) == null) || ((customer) == null)) || ((receiver) == null)) || ((deliveryDate) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6602/buggy-version/src.main.java.by.itechart.flowerty.persistence.model.Order.java", "BodyUseAPI": [], "Fixed commit": "2065b43b7c342566d7fbd116265a02eb4147358d", "Url": "https://api.github.com/repos/katerinassem/flowerty", "Date": "2015-05-10T00:35:21Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fireOnClick != null) { boolean consumed = false; if (fireOnClick && ((drawer.mOnDrawerItemClickListener) != null)) { consumed = drawer.mOnDrawerItemClickListener.onItemClick(v, (-1), drawerItem); } if (!consumed) { drawer.closeDrawerDelayed(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7760/buggy-version/library.src.main.java.com.mikepenz.materialdrawer.DrawerUtils.java", "BodyUseAPI": [], "Fixed commit": "7eef74c75dca8b304eba7261cb93e8a6b7708450", "Url": "https://api.github.com/repos/mikepenz/MaterialDrawer", "Date": "2015-08-02T00:01:13Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (container instanceof com.rockwellcollins.atc.agree.agree.Arg) { type = ((com.rockwellcollins.atc.agree.agree.Arg) (container)).getType(); }else { type = ((com.rockwellcollins.atc.agree.agree.ConstStatement) (container)).getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/237/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.scoping.AgreeScopeProvider.java", "BodyUseAPI": [], "Fixed commit": "3cc2f4648eeb722fb97d08203e017ef233e69ab9", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2015-03-02T15:36:18Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qi4j.library.shiro.realms.AbstractSecureHashQi4jRealm.newUnitOfWork()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (uow.isOpen()) uow.discard();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7489/buggy-version/libraries.shiro-core.src.main.java.org.qi4j.library.shiro.realms.AbstractSecureHashQi4jRealm.java", "BodyUseAPI": ["org.qi4j.api.unitofwork.UnitOfWork.discard()"], "Fixed commit": "79a07162285c63caf512ad726db63fe8dfd19935", "Url": "https://api.github.com/repos/cdchapman/qi4j-sdk", "Date": "2012-02-02T10:08:11Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((headerNavPages.size()) == 0) { headerNavPages = headerNavBar.select(\"tr.catbg3 > td > b\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2261/buggy-version/src.com.achow101.bctalkaccountpricer.server.AccountPricer.java", "BodyUseAPI": [], "Fixed commit": "02f0819d328a2f8266c27a428879d1567e0dd84c", "Url": "https://api.github.com/repos/achow101/BitcointalkAccountPricer", "Date": "2016-03-15T20:05:48Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.reflect.Modifier.isStatic(field.getModifiers()))) { field.setAccessible(true); com.igumnov.common.Reflection.setField(row, field.getName(), r.getObject(field.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9252/buggy-version/src.main.java.com.igumnov.common.orm.Transaction.java", "BodyUseAPI": ["java.sql.ResultSet.getObject(java.lang.String)", "com.igumnov.common.Reflection.setField(java.lang.Object,java.lang.String,java.lang.Object)", "java.lang.reflect.Field.getName()", "java.lang.reflect.Field.getName()", "java.lang.reflect.Field.setAccessible(boolean)"], "Fixed commit": "4629e107731c8b038c69442595d997be32ba5877", "Url": "https://api.github.com/repos/lrozenblyum/common", "Date": "2015-06-07T20:41:42Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.coolweather.kant.db.Dao.getFrequency()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fre == 0) { dao.delete(); refreshHoldList(); refreshNowList(); }else { dao.setRecent(com.coolweather.kant.util.Utility.getTodayCount()); int newCount = count + 1; dao.setCount(newCount); if (dao.save()) { android.widget.Toast.makeText(this, ((buttonView.getText().toString()) + \"\u5df2\u5b8c\u6210\"), Toast.LENGTH_SHORT).show(); refreshHoldList(); refreshNowList(); }else { android.widget.Toast.makeText(this, \"\u554a\uff0c\u672a\u77e5\u5f02\u5e38\uff01\", Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7822/buggy-version/app.src.main.java.com.coolweather.kant.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "99014b8a8550f08848bdb96bf1df7bd38caea793", "Url": "https://api.github.com/repos/kant-li/DailyPractice", "Date": "2017-11-23T09:57:22Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (notificationId >= (oldNotificationId)) { oldNotificationId = notificationId; return originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build(); }else { return originalResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5743/buggy-version/catroid.src.org.catrobat.catroid.web.ServerCalls.java", "BodyUseAPI": ["originalResponse.newBuilder().body(org.catrobat.catroid.web.ProgressResponseBody)", "originalResponse.newBuilder().body(new org.catrobat.catroid.web.ProgressResponseBody(originalResponse.body(), receiver, notificationId)).build()"], "Fixed commit": "49f1952bcb9d69eefd61642a08df0c4aa145db25", "Url": "https://api.github.com/repos/cheidenreich/Catroid", "Date": "2015-07-07T17:17:25Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { synchronized(this) { result = providers; if (result == null) { result = org.ocpsoft.common.util.Iterators.asList(org.ocpsoft.common.services.ServiceLoader.load(org.ocpsoft.rewrite.faces.spi.FacesActionUrlProvider.class)); java.util.Collections.sort(result, new org.ocpsoft.common.pattern.WeightedComparator()); providers = result; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7321/buggy-version/integration-faces.src.main.java.org.ocpsoft.rewrite.faces.RewriteViewHandler.java", "BodyUseAPI": [], "Fixed commit": "a6533eea57e71bfeb9ea06129550ff72c8b9a60d", "Url": "https://api.github.com/repos/chkal/rewrite", "Date": "2015-10-01T12:21:33Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((i >= 0) && (i <= (state.getXExtent()))) && (j >= 0)) && (j <= (state.getYExtent()))) { board[i][j].setProbability(0.75); board[i][j].setHit(((byte) (1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/57/buggy-version/src.ProbAgent.java", "BodyUseAPI": ["board[i][j].setProbability(double)", "board[i][j].setHit(int)"], "Fixed commit": "7b80e14490f9ce83d49d22a2ec0141de8ffa1415", "Url": "https://api.github.com/repos/urdead2day/P4", "Date": "2014-04-08T01:35:17Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (canvas.getClipBounds().contains(curScreenCoords.x, curScreenCoords.y)) super.onDrawItem(canvas, item, curScreenCoords, aMapOrientation);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8178/buggy-version/app.src.main.java.com.github.jtjj222.sudburytransit.maps.BusStopOverlay.java", "BodyUseAPI": ["org.osmdroid.views.overlay.ItemizedIconOverlay<com.github.jtjj222.sudburytransit.maps.BusStopOverlayItem>.onDrawItem(android.graphics.Canvas,com.github.jtjj222.sudburytransit.maps.BusStopOverlayItem,android.graphics.Point,float)"], "Fixed commit": "2a76fb5962aca61cb2931888bfeb301968761ced", "Url": "https://api.github.com/repos/justinmichaud/Sudbury-Transit", "Date": "2015-06-10T01:12:55Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.paissad.waqtsalat.ui.helpers.PreferenceHelper.getCityFromPreference()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (city == null) { useSystemTimeZone = true; net.paissad.waqtsalat.ui.helpers.PreferenceHelper.logger.warn(\"No city is set, so it is not possible to retrieve the timezone from the city/country. Going to use the system default timezone. But as soon as a city is set, and the timzone setting is still set to 'getTimeZoneFromCity', the system timezone will not be used anylonger.\"); }else { java.lang.String countryCode = city.getCountry().getCode(); java.util.Collection<java.util.TimeZone> possibleTimezones = net.paissad.waqtsalat.ui.beans.TimeZoneWrapper.getTimezonesFromCountryCode(countryCode); if (!(possibleTimezones.isEmpty())) { result = possibleTimezones.iterator().next(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1871/buggy-version/net.paissad.waqtsalat.ui.src.net.paissad.waqtsalat.ui.helpers.PreferenceHelper.java", "BodyUseAPI": ["city.getCountry().getCode()", "net.paissad.waqtsalat.locationsprovider.api.City.getCountry()"], "Fixed commit": "eccf51bf26dad1ad7533a028702d730f2b4d9b95", "Url": "https://api.github.com/repos/paissad/waqtsalat-eclipse-plugin", "Date": "2013-08-04T22:01:01Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (figisId != null) properties.put(org.fao.fi.gems.collection.vme.VmeCodelistParser.VmeProperty.FIGIS, java.util.Arrays.asList(figisId));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/263/buggy-version/collection.src.main.java.org.fao.fi.gems.collection.vme.VmeCodelistParser.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String)", "java.util.Map<org.fao.fi.gems.metaobject.GeographicMetaObjectProperty, java.util.List<java.lang.String>>.put(org.fao.fi.gems.collection.vme.VmeCodelistParser.VmeProperty,java.util.List<java.lang.String>)"], "Fixed commit": "24a49347faca2a32f83c5e07f9756f6216a0659d", "Url": "https://api.github.com/repos/openfigis/gems", "Date": "2014-07-23T14:45:23Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (figisId != null) entity.setFigisId(figisId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/263/buggy-version/collection.src.main.java.org.fao.fi.gems.collection.vme.VmeCodelistParser.java", "BodyUseAPI": ["org.fao.fi.gems.entity.FigisGeographicEntityImpl.setFigisId(java.lang.String)"], "Fixed commit": "24a49347faca2a32f83c5e07f9756f6216a0659d", "Url": "https://api.github.com/repos/openfigis/gems", "Date": "2014-07-23T14:45:23Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index >= 0) { selectedEdges[k] = index; currentNode.addEdge(nodes.get(index)); if (!directed) { nodes.get(index).addEdge(currentNode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1524/buggy-version/src.main.java.graphlab.utils.GraphUtils.java", "BodyUseAPI": ["graphlab.datastructures.Node.addEdge(nodes.get(index))", "java.util.List<graphlab.datastructures.Node>.get(int)", "java.util.List<graphlab.datastructures.Node>.get(int)", "nodes.get(index).addEdge(graphlab.datastructures.Node)"], "Fixed commit": "a06657c02a4fb3745736ee1058fa11d7d42afac6", "Url": "https://api.github.com/repos/andreaiacono/GraphLab", "Date": "2017-01-29T16:50:22Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SparkplugBProto.Payload.parseFrom(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (protoPayload.hasUuid()) { com.cirruslink.sparkplug.message.SparkplugBPayloadDecoder.logger.trace((\"Setting the UUID \" + (new java.lang.String(protoPayload.getUuid())))); builder.setUuid(protoPayload.getUuid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8415/buggy-version/client_libraries.java.src.main.java.com.cirruslink.sparkplug.message.SparkplugBPayloadDecoder.java", "BodyUseAPI": ["SparkplugBProto.Payload.getUuid()", "com.cirruslink.sparkplug.message.model.SparkplugBPayload.SparkplugBPayloadBuilder.setUuid(protoPayload.getUuid())", "org.apache.log4j.Logger.trace(java.lang.String)", "SparkplugBProto.Payload.getUuid()"], "Fixed commit": "b0045cd4e1ecce8ae7953b6dd1c5b563a1dd77f8", "Url": "https://api.github.com/repos/Cirrus-Link/Sparkplug", "Date": "2017-03-13T22:21:46Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(criticRating.equals(\"=, <, >, <=, >=\"))) && (!(numOfReview.equals(\"=, <, >, <=, >=\")))) { loadMovieTag(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4717/buggy-version/src.ui.hw3.java", "BodyUseAPI": [], "Fixed commit": "f126d31876e98817627d9892a5d8ad50e507aec4", "Url": "https://api.github.com/repos/Jiffkuo/IMDB_System", "Date": "2017-03-08T07:50:34Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.isAuthorizer()) { req.setAppid(config.getComponentAppId()); req.setSub_appid(appId); }else { req.setAppid(appId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4234/buggy-version/src.main.java.cc.ycn.pay.WxPayServiceImpl.java", "BodyUseAPI": ["cc.ycn.pay.WxShortUrlReq.setAppid(config.getComponentAppId())", "cc.ycn.common.bean.WxConfig.getComponentAppId()"], "Fixed commit": "e9d73f6c7868f4f6ef2d5ff58ab7345ab9b3eb4c", "Url": "https://api.github.com/repos/ycn/weixin-java", "Date": "2016-01-05T03:44:36Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.isAuthorizer()) { req.setAppid(config.getComponentAppId()); req.setSub_appid(appId); }else { req.setAppid(appId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4234/buggy-version/src.main.java.cc.ycn.pay.WxPayServiceImpl.java", "BodyUseAPI": ["cc.ycn.pay.WxRefundReq.setAppid(config.getComponentAppId())", "cc.ycn.common.bean.WxConfig.getComponentAppId()"], "Fixed commit": "e9d73f6c7868f4f6ef2d5ff58ab7345ab9b3eb4c", "Url": "https://api.github.com/repos/ycn/weixin-java", "Date": "2016-01-05T03:44:36Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.isAuthorizer()) { req.setAppid(config.getComponentAppId()); req.setSub_appid(appId); }else { req.setAppid(appId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4234/buggy-version/src.main.java.cc.ycn.pay.WxPayServiceImpl.java", "BodyUseAPI": ["cc.ycn.pay.WxCloseReq.setAppid(config.getComponentAppId())", "cc.ycn.common.bean.WxConfig.getComponentAppId()"], "Fixed commit": "e9d73f6c7868f4f6ef2d5ff58ab7345ab9b3eb4c", "Url": "https://api.github.com/repos/ycn/weixin-java", "Date": "2016-01-05T03:44:36Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.isAuthorizer()) { req.setAppid(config.getComponentAppId()); req.setSub_appid(appId); }else { req.setAppid(appId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4234/buggy-version/src.main.java.cc.ycn.pay.WxPayServiceImpl.java", "BodyUseAPI": ["cc.ycn.pay.WxUnifiedOrderReq.setAppid(config.getComponentAppId())", "cc.ycn.common.bean.WxConfig.getComponentAppId()"], "Fixed commit": "e9d73f6c7868f4f6ef2d5ff58ab7345ab9b3eb4c", "Url": "https://api.github.com/repos/ycn/weixin-java", "Date": "2016-01-05T03:44:36Z"},
{"Line": "=>681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (val instanceof java.util.Date) { val = new java.sql.Timestamp(((java.util.Date) (val)).getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6869/buggy-version/src.main.java.com.craftfire.commons.managers.DataManager.java", "BodyUseAPI": [], "Fixed commit": "9bfd69aa9730ac25f09be0aa1a6121ccc51f9cee", "Url": "https://api.github.com/repos/Wolf480pl/CraftCommons", "Date": "2012-08-23T08:52:12Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (val == null) { valstr = \"NULL\"; }else { valstr = (\"'\" + (val.toString().replaceAll(\"'\", \"''\"))) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6869/buggy-version/src.main.java.com.craftfire.commons.managers.DataManager.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "9bfd69aa9730ac25f09be0aa1a6121ccc51f9cee", "Url": "https://api.github.com/repos/Wolf480pl/CraftCommons", "Date": "2012-08-23T08:52:12Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tag.equals(DanmakuConfigTag.SCALE_TEXTSIZE)) { mDisp.slopPixel = ((int) (((java.lang.Math.max(mDisp.density, mDisp.scaledDensity)) * 20) * (DanmakuGlobalConfig.DEFAULT.scaleTextSize))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1039/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.controller.CacheManagingDrawTask.java", "BodyUseAPI": [], "Fixed commit": "1363b767badfebb073b31e440ec10d3f7f02b958", "Url": "https://api.github.com/repos/ctiao/DanmakuFlameMaster", "Date": "2014-02-27T06:29:06Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFocusedButton) != (-1)) { mButtons[mFocusedButton].setSelected(false); invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3081/buggy-version/src.com.sam.hex.view.HexagonLayout.java", "BodyUseAPI": [], "Fixed commit": "04f6f40177ddf35f3912a02d1a4aa0a0711e7416", "Url": "https://api.github.com/repos/Xlythe/HexGame_Android", "Date": "2013-06-15T19:21:59Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.horizontalLayerDependency) != null) { horizontalLayerDependency.addLayerListener(new org.eclipse.nebula.widgets.nattable.layer.ILayerListener() { @java.lang.Override public void handleLayerEvent(org.eclipse.nebula.widgets.nattable.layer.event.ILayerEvent event) { org.eclipse.nebula.widgets.nattable.summaryrow.FixedSummaryRowLayer.this.handleLayerEvent(event); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3620/buggy-version/org.eclipse.nebula.widgets.nattable.core.src.org.eclipse.nebula.widgets.nattable.summaryrow.FixedSummaryRowLayer.java", "BodyUseAPI": [], "Fixed commit": "a8c655d17cd386b6a4b51607d8e065163931fb3c", "Url": "https://api.github.com/repos/eclipse/nebula.widgets.nattable", "Date": "2015-08-08T09:19:45Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getLineCount()) != lines) { if (lines == 1) { setGravity(Gravity.CENTER_VERTICAL); }else { setGravity(Gravity.TOP); } setLines(lines); setMaxLines(lines); requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2759/buggy-version/OsmAnd.src.net.osmand.plus.activities.FontFitTextView.java", "BodyUseAPI": ["net.osmand.plus.activities.FontFitTextView.setMaxLines(int)", "net.osmand.plus.activities.FontFitTextView.setLines(int)"], "Fixed commit": "949110010470108dcaabbb0c1f2c1cb6f3bd2074", "Url": "https://api.github.com/repos/chgenly/Osmand", "Date": "2012-09-12T22:20:05Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.plus.activities.FontFitTextView.getPaint()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((getTextSize()) != (tp.getTextSize())) { setTextSize(TypedValue.COMPLEX_UNIT_PX, tp.getTextSize()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2759/buggy-version/OsmAnd.src.net.osmand.plus.activities.FontFitTextView.java", "BodyUseAPI": ["android.text.TextPaint.getTextSize()", "net.osmand.plus.activities.FontFitTextView.setTextSize(TypedValue.COMPLEX_UNIT_PX,tp.getTextSize())"], "Fixed commit": "949110010470108dcaabbb0c1f2c1cb6f3bd2074", "Url": "https://api.github.com/repos/chgenly/Osmand", "Date": "2012-09-12T22:20:05Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ui.isCurrentlyRecognizingSpeech()) { speechRecognizer.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9137/buggy-version/android.src.com.ant.very.android.ActionResolverAndroid.java", "BodyUseAPI": [], "Fixed commit": "5128eba40960ef38796a9781d4d8a67c8415a4ff", "Url": "https://api.github.com/repos/Divoolej/VeryRealisticAntSimulator", "Date": "2014-11-30T10:34:27Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_log4jContext) == null) { m_log4jContext = new org.apache.logging.log4j.core.LoggerContext(\"pax-logging\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8004/buggy-version/pax-logging-log4j2.src.main.java.org.ops4j.pax.logging.log4j2.internal.PaxLoggingServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "74da44edbf8211c72dabbffbf1ce6c79ac0afba3", "Url": "https://api.github.com/repos/Kishanthan/org.ops4j.pax.logging", "Date": "2015-10-09T13:30:27Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cardList.size()) > 0) { model.database.Card c = getCardOwner().playerChoosesCards(cardList, 1, true, \"Choose a pokemon to move into your hand!\").get(0); gameModel.sendCardMessageToAllPlayers(((((getCardOwner().getName()) + \" puts \") + (c.getName())) + \" into his hand!\"), c, \"\"); gameModel.getAttackAction().moveCard(ownDeck(), ownHand(), c.getGameID(), true); }else { gameModel.sendTextMessageToAllPlayers(\"No pokemon cards found!\", \"\"); getCardOwner().playerChoosesCards(restCards, 7, false, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2153/buggy-version/src.model.model.scripting.teamRocket.Script_00473_MasterBall.java", "BodyUseAPI": ["getCardOwner().playerChoosesCards(java.util.List<model.database.Card>,int,boolean,java.lang.String)", "getCardOwner().playerChoosesCards(cardList, 1, true, \"Choose a pokemon to move into your hand!\").get(int)"], "Fixed commit": "7c5d1e2f8b67b0b3e5fd7b77670ee638d0c22262", "Url": "https://api.github.com/repos/Krakomat/final_tcg_3", "Date": "2016-02-23T22:25:27Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userDetails.getRoleId()) == 2) { partnerprofilemanager.savePartnerProfile(partnerDetails); }else if ((currentpartnerDetails.getSystemUserId()) != (userDetails.getId())) { partnerDetails.setPartnerFirstName(currentpartnerDetails.getPartnerFirstName()); partnerDetails.setPartnerLastName(currentpartnerDetails.getPartnerLastName()); partnerDetails.setTitle(currentpartnerDetails.getTitle()); partnerDetails.setOrganizationName(currentpartnerDetails.getOrganizationName()); partnerDetails.setPartnerPhone(currentpartnerDetails.getPartnerPhone()); partnerDetails.setPartnerEmail(currentpartnerDetails.getPartnerEmail()); partnerDetails.setAddress(currentpartnerDetails.getAddress()); partnerDetails.setAddress2(currentpartnerDetails.getAddress2()); partnerDetails.setCity(currentpartnerDetails.getCity()); partnerDetails.setState(currentpartnerDetails.getState()); partnerDetails.setCounty(currentpartnerDetails.getCounty()); partnerDetails.setZipCode(currentpartnerDetails.getZipCode()); partnerDetails.setOrganizationWebsite(currentpartnerDetails.getOrganizationWebsite()); partnerDetails.setDob(currentpartnerDetails.getDob()); partnerDetails.setGenderId(currentpartnerDetails.getGenderId()); partnerDetails.setRaceId(currentpartnerDetails.getRaceId()); partnerDetails.setEthnicityId(currentpartnerDetails.getEthnicityId()); partnerDetails.setTransgenderId(currentpartnerDetails.getTransgenderId()); partnerDetails.setSexualOrientationId(currentpartnerDetails.getSexualOrientationId()); partnerDetails.setTransgenderId(currentpartnerDetails.getTransgenderId()); partnerDetails.setLanguageId(currentpartnerDetails.getLanguageId()); partnerDetails.setLanguageHowWell(currentpartnerDetails.getLanguageHowWell()); partnerDetails.setSecondLanguageId(currentpartnerDetails.getSecondLanguageId()); partnerDetails.setPoverty(currentpartnerDetails.getPoverty()); partnerDetails.setServed(currentpartnerDetails.getServed()); partnerprofilemanager.savePartnerProfile(partnerDetails); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1751/buggy-version/webapp.src.main.java.com.rr.wabshs.ui.partnerProfile.partnerProfileController.java", "BodyUseAPI": ["com.registryKit.user.User.getId()"], "Fixed commit": "76a54c08da6abdfd9e8d23ad623008075fba3624", "Url": "https://api.github.com/repos/bowlinktech/wabshsRR", "Date": "2017-10-16T19:46:48Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getServletPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (url == null) url = req.getRequestURI();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/869/buggy-version/src.main.java.org.inlighting.gentle.GlobalFilter.java", "BodyUseAPI": [], "Fixed commit": "ac2e2ae046d64082105ed81f993d9837fa18165e", "Url": "https://api.github.com/repos/Smith-Cruise/gentle-restful", "Date": "2017-09-26T12:33:11Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateRangeFacet.endDate) == null) { dateRangeFacet.endDate = java.time.LocalDate.MAX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6590/buggy-version/src.main.java.me.thereisnospoon.sparsam.services.search.searchexecution.facets.DateRangeFacet.java", "BodyUseAPI": [], "Fixed commit": "969438e4174a64d5ff789531954ac0bfa14d5865", "Url": "https://api.github.com/repos/thereisnospoon/sparsam", "Date": "2015-09-23T21:26:23Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateRangeFacet.startDate) == null) { dateRangeFacet.startDate = java.time.LocalDate.MIN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6590/buggy-version/src.main.java.me.thereisnospoon.sparsam.services.search.searchexecution.facets.DateRangeFacet.java", "BodyUseAPI": [], "Fixed commit": "969438e4174a64d5ff789531954ac0bfa14d5865", "Url": "https://api.github.com/repos/thereisnospoon/sparsam", "Date": "2015-09-23T21:26:23Z"},
{"Line": "=>1393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teiid.query.optimizer.relational.rules.FrameUtil.findOriginatingNode(org.teiid.query.optimizer.relational.plantree.PlanNode,java.util.Set<org.teiid.query.sql.symbol.GroupSymbol>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((useCardinalityIfUnknown != null) || ((source.getChildCount()) == 0)) { ndv = source.getCardinality(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2903/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.rules.NewCalculateCostUtil.java", "BodyUseAPI": ["org.teiid.query.optimizer.relational.plantree.PlanNode.getCardinality()"], "Fixed commit": "113b16a9e53b4161a9767c94eea82a3bf4ded30b", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-07-06T23:28:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!sumFound) { splitArray = subValuesFoundFillArray(tempArray, integerList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4240/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "c88a550aa67773319cdaa4309b6a9064a0b7c27e", "Url": "https://api.github.com/repos/gallenjohnson/IntList-Splitter", "Date": "2016-04-25T06:46:17Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(validate(username, password))) { userDao.registerNewUser(username, password); model.addAttribute(\"successResponse\", \"Success!. Please use the login page to login\"); return \"login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5958/buggy-version/web.src.main.java.com.petception.controller.PetWebController.java", "BodyUseAPI": ["com.petception.dao.UserDao.registerNewUser(java.lang.String,java.lang.String)"], "Fixed commit": "84be5b1619d2ae3f9b4b63dba968149e7a784dc0", "Url": "https://api.github.com/repos/manjitsinghb/petception", "Date": "2016-07-11T00:49:31Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5965/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "efa04b1e01753a52b4941c1654ecb9c442b193c0", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-07T11:11:18Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alredyHit) { return; }else { alredyHit = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5392/buggy-version/src.main.java.com.bymarcin.zettaindustries.mods.wiregun.EntityHookBullet.java", "BodyUseAPI": [], "Fixed commit": "a77f2b949442f418b759ae7b601138fffcbc3257", "Url": "https://api.github.com/repos/Kubuxu/Zetta-Industries", "Date": "2015-07-17T11:44:59Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showInstruction) { intent.putExtra(ActivityHowToPlay.KEY_HOW_TO_PLAY_INSTRUCTIONS_MESSAGE, (((getString(R.string.howToPlayNewGame1)) + (getString(R.string.howToPlayNewGame2))) + (getString(R.string.howToPlayNewGame3)))); intent.putExtra(ActivityHowToPlay.KEY_HOW_TO_PLAY_INSTRUCTIONS_TITLE, getString(R.string.instructions)); intent.putExtra(ActivityHowToPlay.KEY_HOW_TO_PLAY_TITLE, getString(R.string.howToPlayNewGameTitle)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2425/buggy-version/src.com.tzachsolomon.trivia.ActivityGame.java", "BodyUseAPI": [], "Fixed commit": "17a4ffd374fc803e5658ab1161073d38e0a17371", "Url": "https://api.github.com/repos/tzachs/Trivia", "Date": "2012-06-16T08:13:00Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sourceGroup.size()) > 0) { long sleepTime = ((long) (((minActionDelay) + ((java.lang.Math.random()) * ((maxActionDelay) - (minActionDelay)))) / (sourceGroup.size()))); java.lang.Thread.sleep(sleepTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1554/buggy-version/ag-player.src.main.java.com.sematext.ag.player.RealTimePlayer.java", "BodyUseAPI": ["java.util.List<com.sematext.ag.source.Source>.size()"], "Fixed commit": "b1c509572fa423f3d9df90d33c0d460f442422ad", "Url": "https://api.github.com/repos/sematext/ActionGenerator", "Date": "2012-06-01T16:07:41Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i == j) value = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4445/buggy-version/src.com.galaev.tsp.model.Matrix.java", "BodyUseAPI": [], "Fixed commit": "02a9b9aa2d8e45fbac32be6937b2115b43ac6894", "Url": "https://api.github.com/repos/galaevanton/travel", "Date": "2013-05-18T12:34:55Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (doubleVal > 0.0) { mm.id.setExposureIndex(doubleVal); mm.attachImageData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5482/buggy-version/src.edu.harvard.hul.ois.fits.XmlContentConverter.java", "BodyUseAPI": ["mm.id.setExposureIndex(java.lang.Double)"], "Fixed commit": "bd1692ba7cdcef00e7909edb3a53fbade95ee69e", "Url": "https://api.github.com/repos/dbirtwellharvard/fits", "Date": "2016-02-17T19:23:10Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceId != null) && (sourceId.equals(stackObject.getSourceId()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6619/buggy-version/Mage.src.mage.target.TargetSpell.java", "BodyUseAPI": [], "Fixed commit": "609b5af2febbfb7f3f68b75ce003f5b99840d93f", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-08-09T13:27:39Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, project.Symbol>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (s.getValue().equals(\"\\'\\\\n\\'\")) { tCode.add((((s.getSymId()) + \" .BYT \") + \"\\'13\\'\")); }else if (((int) (s.getValue().charAt(1))) == 32) { tCode.add((((s.getSymId()) + \" .BYT \") + \"\\'32\\'\")); }else { tCode.add((((s.getSymId()) + \" .BYT \") + (s.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2798/buggy-version/4490.src.project.TCode.java", "BodyUseAPI": ["project.Symbol.getValue()", "project.Symbol.getValue()", "project.Symbol.getSymId()", "java.util.List<java.lang.String>.add((((s.getSymId()) + \" .BYT \") + \"\\'32\\'\"))", "s.getValue().charAt(int)", "java.util.List<java.lang.String>.add((((s.getSymId()) + \" .BYT \") + (s.getValue())))", "java.util.List<java.lang.String>.add((((s.getSymId()) + \" .BYT \") + \"\\'13\\'\"))", "project.Symbol.getSymId()", "project.Symbol.getSymId()"], "Fixed commit": "933d26f4fe6f9951a451883e4028209a61fc1d8b", "Url": "https://api.github.com/repos/nickFr0st/Compiler", "Date": "2013-12-05T05:07:33Z"},
{"Line": "=>1633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!isLocal) && (!isOfferReply)) { pInstantRejectIncomingOverall.report(0.0); getRejectedTracker(realTimeFlag, isSSK, isInsert).report(0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/639/buggy-version/src.freenet.node.NodeStats.java", "BodyUseAPI": [], "Fixed commit": "a4a5f996444db763936360058c1f682223bf5205", "Url": "https://api.github.com/repos/freenet/fred-staging", "Date": "2013-03-26T15:41:13Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((primaryKey) == null) { if ((attributes.size()) == 0) throw new java.lang.IllegalStateException(\"Primary key or attribute must be defined.\"); primaryKey = attributes.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3990/buggy-version/src.org.xmodel.caching.sql.SQLTableCachingPolicy.java", "BodyUseAPI": [], "Fixed commit": "de1f2fd24bff37cef83709312b9bc6b3511aed74", "Url": "https://api.github.com/repos/bdunnagan/XModel", "Date": "2013-08-27T16:49:50Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((primaryKey) != null) rowCachingPolicy.addStaticAttribute(primaryKey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3990/buggy-version/src.org.xmodel.caching.sql.SQLTableCachingPolicy.java", "BodyUseAPI": [], "Fixed commit": "de1f2fd24bff37cef83709312b9bc6b3511aed74", "Url": "https://api.github.com/repos/bdunnagan/XModel", "Date": "2013-08-27T16:49:50Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { mHandler.postDelayed(getMessageRunnable, 500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3251/buggy-version/src.com.huotu.partnermall.ui.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "440d3eb6fc891734f9461ecb819a055f6852805d", "Url": "https://api.github.com/repos/huotuinc/Android_HuobanMall_Buyer", "Date": "2017-03-13T09:06:56Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codemanship.becauseunit.URLClassReader.getPackageName(java.lang.String,java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (packageName != \"\") { packageName += \".\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1769/buggy-version/BecauseUnit.src.com.codemanship.becauseunit.URLClassReader.java", "BodyUseAPI": [], "Fixed commit": "6a75535c989d3a07617ee959c2ac712966be31ed", "Url": "https://api.github.com/repos/jasongorman/BecauseUnit", "Date": "2016-03-09T13:19:05Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.rgai.android.messageproviders.SimpleEmailMessageProvider.getStore(hu.rgai.android.beens.EmailAccount)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (store.isConnected()) { imapFolder = ((com.sun.mail.imap.IMAPFolder) (store.getFolder(folder))); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7007/buggy-version/src.hu.rgai.android.messageproviders.SimpleEmailMessageProvider.java", "BodyUseAPI": ["javax.mail.Store.getFolder(java.lang.String)"], "Fixed commit": "008de1a3a31eeb22c53f04c185349367dc872712", "Url": "https://api.github.com/repos/k-kojak/yako", "Date": "2014-05-20T14:23:00Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x.rt) != null) champ = nearest(p, champ, x.rt, (level + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1659/buggy-version/p5_kdtrees.src.KdTree.java", "BodyUseAPI": ["KdTree.nearest(edu.princeton.cs.algs4.Point2D,edu.princeton.cs.algs4.Point2D,KdTree.Node,int)"], "Fixed commit": "758158d7ddcd191384142898afdea0d7ac270ae4", "Url": "https://api.github.com/repos/atreidesend/princealgs", "Date": "2017-07-24T16:54:01Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x.lb) != null) champ = nearest(p, champ, x.lb, (level + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1659/buggy-version/p5_kdtrees.src.KdTree.java", "BodyUseAPI": ["KdTree.nearest(edu.princeton.cs.algs4.Point2D,edu.princeton.cs.algs4.Point2D,KdTree.Node,int)"], "Fixed commit": "758158d7ddcd191384142898afdea0d7ac270ae4", "Url": "https://api.github.com/repos/atreidesend/princealgs", "Date": "2017-07-24T16:54:01Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (target != null) { metadataSearchTargetType = co.cask.cdap.proto.metadata.MetadataSearchTargetType.valueOf(target.toUpperCase()); }else { metadataSearchTargetType = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1827/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.metadata.MetadataHttpHandler.java", "BodyUseAPI": ["co.cask.cdap.proto.metadata.MetadataSearchTargetType.valueOf(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "3d7fcf1e6ea01c2a4d0245cf69261ca30b5cad03", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2015-09-17T18:47:12Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.holodeckb2b.common.util.Utils.isNullOrEmpty(pl.getContentLocation())) log.debug(((\"No payload location provided for payload [\" + (pl.getPayloadURI())) + \"]\")); else { final java.io.File plFile = new java.io.File(pl.getContentLocation()); if ((plFile.exists()) && (plFile.delete())) { log.debug((\"Removed payload data file \" + (pl.getContentLocation()))); ((org.holodeckb2b.common.messagemodel.Payload) (pl)).setContentLocation(null); }else if (plFile.exists()) log.error(((\"Could not remove payload data file \" + (pl.getContentLocation())) + \". Remove manually\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7945/buggy-version/modules.holodeckb2b-core.src.main.java.org.holodeckb2b.ebms3.workers.PurgeOldMessagesWorker.java", "BodyUseAPI": ["org.holodeckb2b.ebms3.workers.PurgeOldMessagesWorker.debug((\"Removed payload data file \" + (pl.getContentLocation())))", "org.holodeckb2b.interfaces.messagemodel.IPayload.getContentLocation()", "org.holodeckb2b.interfaces.messagemodel.IPayload.getPayloadURI()", "org.holodeckb2b.ebms3.workers.PurgeOldMessagesWorker.error(((\"Could not remove payload data file \" + (pl.getContentLocation())) + \". Remove manually\"))", "org.holodeckb2b.interfaces.messagemodel.IPayload.getContentLocation()", "org.holodeckb2b.ebms3.workers.PurgeOldMessagesWorker.debug(((\"No payload location provided for payload [\" + (pl.getPayloadURI())) + \"]\"))", "org.holodeckb2b.interfaces.messagemodel.IPayload.getContentLocation()"], "Fixed commit": "8ff91b96d7a87da48cbb6be773e3d3f0450cfd28", "Url": "https://api.github.com/repos/holodeck-b2b/Holodeck-B2B", "Date": "2017-03-27T21:51:21Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.jolbol1.RandomCoordinates.RandomCoords.getPlugin().portals.getConfigurationSection(\"Portal\")) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6482/buggy-version/src.com.jolbol1.RandomCoordinates.listeners.InNetherPortal.java", "BodyUseAPI": [], "Fixed commit": "8daff17f72ebc04a3b933f62a5b5c135483e07f6", "Url": "https://api.github.com/repos/jolbol1/RandomCoordinatesV2", "Date": "2016-08-02T19:47:37Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.jolbol1.RandomCoordinates.RandomCoords.getPlugin().portals) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6482/buggy-version/src.com.jolbol1.RandomCoordinates.listeners.InNetherPortal.java", "BodyUseAPI": [], "Fixed commit": "8daff17f72ebc04a3b933f62a5b5c135483e07f6", "Url": "https://api.github.com/repos/jolbol1/RandomCoordinatesV2", "Date": "2016-08-02T19:47:37Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (valueType == null) { throw new cz.polankam.jjcron.common.FormatException(\"Value type cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7301/buggy-version/src.cz.polankam.jjcron.common.CrontabTimeValue.java", "BodyUseAPI": [], "Fixed commit": "a7f723daf79dc577f9125f36abfbbaecd7162eab", "Url": "https://api.github.com/repos/JJCron/JJCronCommon", "Date": "2016-09-19T11:52:31Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (valueType == null) { throw new cz.polankam.jjcron.common.FormatException(\"Value type cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7301/buggy-version/src.cz.polankam.jjcron.common.CrontabTimeValue.java", "BodyUseAPI": [], "Fixed commit": "a7f723daf79dc577f9125f36abfbbaecd7162eab", "Url": "https://api.github.com/repos/JJCron/JJCronCommon", "Date": "2016-09-19T11:52:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (values == null) { throw new cz.polankam.jjcron.common.FormatException(\"List of values cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7301/buggy-version/src.cz.polankam.jjcron.common.CrontabTimeValue.java", "BodyUseAPI": [], "Fixed commit": "a7f723daf79dc577f9125f36abfbbaecd7162eab", "Url": "https://api.github.com/repos/JJCron/JJCronCommon", "Date": "2016-09-19T11:52:31Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (values == null) { throw new cz.polankam.jjcron.common.FormatException(\"List of values cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7301/buggy-version/src.cz.polankam.jjcron.common.CrontabTimeValue.java", "BodyUseAPI": [], "Fixed commit": "a7f723daf79dc577f9125f36abfbbaecd7162eab", "Url": "https://api.github.com/repos/JJCron/JJCronCommon", "Date": "2016-09-19T11:52:31Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (namedValues != null) { for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry : namedValues.entrySet()) { this.namedValues.put(entry.getKey().toUpperCase(), entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7301/buggy-version/src.cz.polankam.jjcron.common.CrontabTimeValueNamedParser.java", "BodyUseAPI": [], "Fixed commit": "a7f723daf79dc577f9125f36abfbbaecd7162eab", "Url": "https://api.github.com/repos/JJCron/JJCronCommon", "Date": "2016-09-19T11:52:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_interactionBox.contains(curX, curY)) { if ((com.kowaisugoi.game.screens.PlayGame.getFlagManager().getFlag(com.kowaisugoi.game.rooms.FLAG_KEYS_APPEARED).getState()) && (!(com.kowaisugoi.game.screens.PlayGame.getFlagManager().getFlag(com.kowaisugoi.game.rooms.FLAG_HALLWAY_SCARE).getState()))) { com.kowaisugoi.game.screens.PlayGame.getFlagManager().setFlag(com.kowaisugoi.game.rooms.FLAG_HALLWAY_SCARE, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3675/buggy-version/core.src.com.kowaisugoi.game.rooms.RoomHallway.java", "BodyUseAPI": [], "Fixed commit": "3f8bfec8eba04646acbddb66c432ca47c5f931dd", "Url": "https://api.github.com/repos/gjhutchison/pixelhorrorjam2016", "Date": "2016-10-28T02:20:05Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imageSize.getWidth()) > (controlPanel.getWidth())) outputWindowWidth = imageSize.getWidth(); else outputWindowWidth = controlPanel.getWidth();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7098/buggy-version/src.main.java.project.senior.app.pormmo.UserInterfaceFrame.java", "BodyUseAPI": ["java.awt.Dimension.getWidth()", "javax.swing.JPanel.getWidth()"], "Fixed commit": "516e5acf8356e24a433dcc84bd04fc38cfdd6ae7", "Url": "https://api.github.com/repos/PorMMo/PorMMo", "Date": "2012-12-03T17:55:47Z"},
{"Line": "=>1068", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgll.grammar.GrammarBuilder.createNewNonterminal(org.jgll.grammar.Alternate,int,java.util.List<org.jgll.grammar.Symbol>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newNonterminal != (((org.jgll.grammar.slot.NonterminalGrammarSlot) (alternate.getBodyGrammarSlotAt(0))).getNonterminal())) { rewriteLeftEnds(newNonterminal, filteredAlternate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1813/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": ["org.jgll.grammar.GrammarBuilder.rewriteLeftEnds(org.jgll.grammar.slot.HeadGrammarSlot,java.util.List<org.jgll.grammar.Symbol>)"], "Fixed commit": "089ea629b7a88249b3304d2ae03999f3e4cc97e9", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-08-28T16:31:41Z"},
{"Line": "=>1057", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgll.grammar.GrammarBuilder.createNewNonterminal(org.jgll.grammar.Alternate,((alternate.size()) - 1),java.util.List<org.jgll.grammar.Symbol>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newNonterminal != (((org.jgll.grammar.slot.NonterminalGrammarSlot) (alternate.getBodyGrammarSlotAt(((alternate.size()) - 1)))).getNonterminal())) { rewriteRightEnds(newNonterminal, filteredAlternate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1813/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": ["org.jgll.grammar.GrammarBuilder.rewriteRightEnds(org.jgll.grammar.slot.HeadGrammarSlot,java.util.List<org.jgll.grammar.Symbol>)"], "Fixed commit": "089ea629b7a88249b3304d2ae03999f3e4cc97e9", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-08-28T16:31:41Z"},
{"Line": "=>927", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jgll.grammar.GrammarBuilder.createNewNonterminal(org.jgll.grammar.Alternate,filter.getPosition(),e.getValue())", "java.util.Map.Entry<org.jgll.grammar.Filter, java.util.Set<java.util.List<org.jgll.grammar.Symbol>>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newNonterminal != (((org.jgll.grammar.slot.NonterminalGrammarSlot) (alt.getBodyGrammarSlotAt(filter.getPosition()))).getNonterminal())) { filterFirstLevel(newNonterminal, processFilters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1813/buggy-version/src.org.jgll.grammar.GrammarBuilder.java", "BodyUseAPI": ["org.jgll.grammar.GrammarBuilder.filterFirstLevel(org.jgll.grammar.slot.HeadGrammarSlot,java.util.Map<org.jgll.grammar.Filter, java.util.Set<java.util.List<org.jgll.grammar.Symbol>>>)"], "Fixed commit": "089ea629b7a88249b3304d2ae03999f3e4cc97e9", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2013-08-28T16:31:41Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (observer != null) observer.didLostConnection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6447/buggy-version/src.main.java.br.com.apuri.manager.ApuriConnectionManager.java", "BodyUseAPI": ["br.com.apuri.manager.ApuriConnectionManager.ApuriConnectionObserver.didLostConnection()"], "Fixed commit": "f6aed0c4839784dab4a3726adeb7292735fd1feb", "Url": "https://api.github.com/repos/apuridev/apuri-lib", "Date": "2015-03-21T15:28:04Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.smartsantander.androidExperimentation.ModelManager.getExperiment()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (current != null) { current.setStatus(\"\"); eu.smartsantander.androidExperimentation.ModelManager.getCurrentSession().saveOrUpdate(current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4477/buggy-version/src.WebService.src.eu.smartsantander.androidExperimentation.ModelManager.java", "BodyUseAPI": ["eu.smartsantander.androidExperimentation.Experiment.setStatus(java.lang.String)", "org.hibernate.Session.saveOrUpdate(eu.smartsantander.androidExperimentation.Experiment)"], "Fixed commit": "804c98912e00d2bea77789bb999e5170bd53d88e", "Url": "https://api.github.com/repos/theodori/AndroidExperimentation", "Date": "2013-11-30T17:55:54Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputCommitter) == null) getOutputCommitter(taskAttemptContext);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1327/buggy-version/hbase_sql.src.main.java.com.splicemachine.stream.index.HTableOutputFormat.java", "BodyUseAPI": [], "Fixed commit": "2d58f27da0b410c1565846f86cecf8dd03f0ad26", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2017-07-27T19:08:58Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.container, new com.example.android.sunshine.app.ForecastFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6326/buggy-version/app.src.main.java.com.example.android.sunshine.app.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b92773bfe77534844cf20722e24aa51eb67dd1ab", "Url": "https://api.github.com/repos/TomerBu/Sunshine-Udacity", "Date": "2016-07-25T13:43:10Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.InetSocketAddress.getAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (address == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7234/buggy-version/servlet.src.main.java.io.undertow.servlet.handlers.ServletRequestContext.java", "BodyUseAPI": [], "Fixed commit": "e68973af246892788e95634038883d6be0aa623f", "Url": "https://api.github.com/repos/golovnin/undertow", "Date": "2014-07-18T01:51:56Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exchange.isInIoThread()) { exchange.dispatch(this); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7234/buggy-version/core.src.main.java.io.undertow.server.handlers.proxy.mod_cluster.MCMPHandler.java", "BodyUseAPI": ["io.undertow.server.HttpServerExchange.dispatch(io.undertow.server.handlers.proxy.mod_cluster.MCMPHandler)"], "Fixed commit": "e68973af246892788e95634038883d6be0aa623f", "Url": "https://api.github.com/repos/golovnin/undertow", "Date": "2014-07-18T01:51:56Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(e instanceof java.lang.ClassNotFoundException)) { try { freemarker.log.Logger.getLogger(\"freemarker.template.DefaultObjectWrapper\").error(\"Failed to init W3C DOM support, so it was disabled.\", e); } catch (java.lang.Throwable e2) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8440/buggy-version/src.main.java.freemarker.template.DefaultObjectWrapper.java", "BodyUseAPI": [], "Fixed commit": "1bc3291c98f8fe80fa211b880366f2bba90f7187", "Url": "https://api.github.com/repos/freemarker/freemarker", "Date": "2014-06-15T11:53:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(e instanceof java.lang.ClassNotFoundException)) { try { freemarker.log.Logger.getLogger(\"freemarker.template.DefaultObjectWrapper\").error(\"Failed to init Jython support, so it was disabled.\", e); } catch (java.lang.Throwable e2) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8440/buggy-version/src.main.java.freemarker.template.DefaultObjectWrapper.java", "BodyUseAPI": [], "Fixed commit": "1bc3291c98f8fe80fa211b880366f2bba90f7187", "Url": "https://api.github.com/repos/freemarker/freemarker", "Date": "2014-06-15T11:53:39Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.hasAttribute(weightAttribute))) return java.lang.Double.valueOf(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8241/buggy-version/src.org.graphstream.algorithm.Prim.java", "BodyUseAPI": [], "Fixed commit": "09b8c5d4e04d4dfe053b5e1643718e5afa1e6859", "Url": "https://api.github.com/repos/graphstream/gs-algo", "Date": "2011-05-13T15:58:50Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getName().equals(\"toDouble\")) || (node.getName().equals(\"simplify\"))) { node = kiddos.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8905/buggy-version/src.main.java.calculator.ast.ExpressionManipulators.java", "BodyUseAPI": [], "Fixed commit": "8f7441588451e35e35d3c4e6fe1716fada5aabf9", "Url": "https://api.github.com/repos/ThePeachster/CSE-373-Project-1", "Date": "2017-10-11T08:13:33Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getDefaultValue()) != null) append(\" = \").append(e.getDefaultValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2697/buggy-version/libraries.jnaerator.jnaerator-parser.src.main.java.com.ochafik.lang.jnaerator.parser.Printer.java", "BodyUseAPI": ["com.ochafik.lang.jnaerator.parser.Printer.append(e.getDefaultValue())", "com.ochafik.lang.jnaerator.parser.Arg.getDefaultValue()"], "Fixed commit": "18d6af1352c750fe972364b5a3c46579c1db9c46", "Url": "https://api.github.com/repos/twitwi/nativelibs4java", "Date": "2011-12-16T01:14:52Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRootView) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1737/buggy-version/FloatingView.src.main.java.com.xlythe.floatingview.FloatingView.java", "BodyUseAPI": [], "Fixed commit": "1fcb4cdf2bfc8aa6e5966e9d5d2977fddce223c3", "Url": "https://api.github.com/repos/Xlythe/android_packages_apps_Calculator", "Date": "2014-05-29T01:45:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((astNode.getFirstAncestor(PHPGrammar.CLASS_VARIABLE_DECLARATION)) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2130/buggy-version/php-checks.src.main.java.org.sonar.php.checks.SelfKeywordUsageCheck.java", "BodyUseAPI": [], "Fixed commit": "a7fd04638f0193e9186e8a4f5f034a1e4b0f54a6", "Url": "https://api.github.com/repos/SonarSource/sonar-php", "Date": "2015-02-15T11:04:49Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) == (android.view.MotionEvent.ACTION_DOWN)) { if ((!(paused)) && ((gameLayout.findViewById(R.id.end)) == null)) { gameLayout.addView(pauseMenu.getLayout(), new android.widget.RelativeLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT)); paused = !(paused); } if ((gameLayout.findViewById(R.id.pause)) == null) paused = !(paused); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1289/buggy-version/app.src.main.java.szutowicz.krystian.icytower.Views.Game.java", "BodyUseAPI": [], "Fixed commit": "fe5cf648c2150f7aa4664fb4e8df53a331ad2a51", "Url": "https://api.github.com/repos/busyman624/IcyTower", "Date": "2017-12-29T13:12:44Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.temporal) != null) { for (org.societies.api.personalisation.model.IActionConsumer consumer : this.temporal) { this.logging.debug((((\"comparing: \" + (consumer.getServiceIdentifier().getServiceInstanceIdentifier())) + \" with: \") + (action.getServiceID().getServiceInstanceIdentifier()))); if (consumer.getServiceIdentifier().equals(action.getServiceID())) { consumer.setIAction(this.entityID, action); logging.debug(\"Service has been matched. IAction has been sent to the service\"); found = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9191/buggy-version/user-agent.decision-making.src.main.java.org.societies.useragent.decisionmaking.DecisionMaker.java", "BodyUseAPI": [], "Fixed commit": "9b7090459b59e574433a69c7f43e699ddb808e4f", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2012-12-05T13:49:44Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasMarched)) { result = super.visitClass(classTree, trees); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5220/buggy-version/src.main.java.org.mule.tools.devkit.sonar.rule.JavaSourceRule.java", "BodyUseAPI": [], "Fixed commit": "4f6239bd310a4676e3bf8c065f4a1cdc6840b787", "Url": "https://api.github.com/repos/mulesoft-labs/connector-certification-tools", "Date": "2015-08-18T21:31:27Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n0 == 2) { return Solver.solve4(EXP_222A, n3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6961/buggy-version/java.Solver.java", "BodyUseAPI": [], "Fixed commit": "0dbe041fad927b86cfe03b1f5c71f68e2853c53c", "Url": "https://api.github.com/repos/auntyellow/24", "Date": "2017-04-12T14:43:12Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.pms.configuration.RendererConfiguration.getRendererConfigurationByUUID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (renderer != null) { player = ((net.pms.util.BasicPlayer.Logical) (renderer.getPlayer())); players.put(uuid, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6068/buggy-version/src.main.java.net.pms.network.PlayerControlHandler.java", "BodyUseAPI": ["net.pms.configuration.RendererConfiguration.getPlayer()"], "Fixed commit": "e5ec9fe66a989864cf77f28f591374ab83441bc0", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2017-06-07T19:28:51Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.maven.model.Model.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (parent != null) { java.lang.String relativePath = parent.getRelativePath(); java.io.File aux = new java.io.File(pom.getBaseDirectory(), relativePath); path = aux.getParentFile().getAbsoluteFile().getCanonicalPath(); java.lang.String moduleName = pomFile.getParentFile().getName(); command = ((\"clean install -pl \" + moduleName) + \" -am\") + \" -DskipTests\"; java.lang.String previousDir = java.lang.System.getProperty(\"user.dir\"); java.lang.System.setProperty(\"user.dir\", path); code = org.apache.maven.cli.MavenCli.doMain(new java.lang.String[]{ \"clean\", \"install\", \"-pl\", moduleName, \"-am\", \"-DskipTests\" }, myClassWorld); java.lang.System.setProperty(\"user.dir\", previousDir); }else { path = pom.getBaseDirectory().getAbsolutePath(); code = org.apache.maven.cli.MavenCli.doMain(new java.lang.String[]{ \"clean\", \"install\", \"-DskipTests\" }, myClassWorld); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/581/buggy-version/src.main.java.org.walkmod.maven.providers.MavenProject.java", "BodyUseAPI": ["org.apache.maven.model.Parent.getRelativePath()"], "Fixed commit": "11f4e04078de19b93c59e32e4708682d4159b015", "Url": "https://api.github.com/repos/walkmod/walkmod-maven-plugin", "Date": "2015-11-02T20:08:22Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code != 0) { throw new java.lang.Exception((((\"Error executing: \" + command) + \" in\") + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/581/buggy-version/src.main.java.org.walkmod.maven.providers.MavenProject.java", "BodyUseAPI": [], "Fixed commit": "11f4e04078de19b93c59e32e4708682d4159b015", "Url": "https://api.github.com/repos/walkmod/walkmod-maven-plugin", "Date": "2015-11-02T20:08:22Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((profileDo.getGender()) != null) && ((profileDo.getGender().getGenderId()) != null)) { gender = profileDo.getGender().getGenderId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9176/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.profilepage.ProfilePageView.java", "BodyUseAPI": ["org.ednovo.gooru.shared.model.user.ProfileDo.getGender()", "profileDo.getGender().getGenderId()"], "Fixed commit": "89095759914e7f6fe52e4b0e5657ac120a2497f6", "Url": "https://api.github.com/repos/nutan-gooru/Gooru-Web", "Date": "2014-05-27T07:07:06Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9099/buggy-version/queues.src.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "d46fa38fc7e3df7f900cb6f367ed92cd012bdb3a", "Url": "https://api.github.com/repos/willy2721/Coursera-Algorithms", "Date": "2017-02-04T16:07:48Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getPathInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (info.matches(\"/Statistic\")) { this.getServletContext().getNamedDispatcher(\"Statistic\").forward(request, response); }else { java.lang.System.out.println(\"!!!!Error\"); response.sendError(404); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5418/buggy-version/eFRedBlue.src.ctrl.FrontCtrl.java", "BodyUseAPI": [], "Fixed commit": "e29477db9de57a036eb1fb1173cf3d6b23789184", "Url": "https://api.github.com/repos/Kevin8800/HardToFind", "Date": "2012-11-26T20:42:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.getEmail()) != null) && (!(p.getEmail().isEmpty()))) { if (!(verifyUserEmail(p.getEmail()))) { edu.wpi.cs.wpisuitetng.modules.core.entitymanagers.UserManager.logger.log(java.util.logging.Level.WARNING, \"Invalid email string.\"); throw new edu.wpi.cs.wpisuitetng.exceptions.BadRequestException(\"Email should be blank or in the format x@y.zzz\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3080/buggy-version/Core.WPISuite.src.edu.wpi.cs.wpisuitetng.modules.core.entitymanagers.UserManager.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.core.entitymanagers.UserManager.verifyUserEmail(p.getEmail())", "edu.wpi.cs.wpisuitetng.modules.core.models.User.getEmail()"], "Fixed commit": "9fd0352f8a086eb8e4e2e36ad02c9aea1442a99c", "Url": "https://api.github.com/repos/Team-Combat-Wombat/wpi-suite-tcw", "Date": "2014-04-11T19:21:45Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.getAIM()) != null) && (!(p.getAIM().isEmpty()))) { if ((p.getAIM().length()) < 3) { edu.wpi.cs.wpisuitetng.modules.core.entitymanagers.UserManager.logger.log(java.util.logging.Level.WARNING, \"AIM screen name not valid\"); throw new edu.wpi.cs.wpisuitetng.exceptions.BadRequestException(\"The AIM screen name needs to be blank or at least 3 characters long.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3080/buggy-version/Core.WPISuite.src.edu.wpi.cs.wpisuitetng.modules.core.entitymanagers.UserManager.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetng.modules.core.models.User.getAIM()", "p.getAIM().length()"], "Fixed commit": "9fd0352f8a086eb8e4e2e36ad02c9aea1442a99c", "Url": "https://api.github.com/repos/Team-Combat-Wombat/wpi-suite-tcw", "Date": "2014-04-11T19:21:45Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id == null) || (id.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2059/buggy-version/src.karlskrone.jarvis.events.EventManager.java", "BodyUseAPI": [], "Fixed commit": "df216c07cdb019a35acd65f2e3d147f1db5905ec", "Url": "https://api.github.com/repos/karlskrone/Jarvis", "Date": "2014-09-24T20:28:21Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.rackspacecloud.blueflood.utils.EventModuleLoader.instance) == null) { com.rackspacecloud.blueflood.utils.EventModuleLoader.loadEventModule(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6567/buggy-version/blueflood-core.src.main.java.com.rackspacecloud.blueflood.utils.EventModuleLoader.java", "BodyUseAPI": [], "Fixed commit": "c279ea60a2c05c88c4a2379e5f59028d85210c2d", "Url": "https://api.github.com/repos/chinmay-gupte/blueflood", "Date": "2015-06-08T23:07:57Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.jcr.Session.getItem(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(item.isNode())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4740/buggy-version/fcrepo-auth-roles-common.src.main.java.org.fcrepo.auth.roles.common.AbstractRolesAuthorizationDelegate.java", "BodyUseAPI": [], "Fixed commit": "214567b839a098d7bccd2de1df546627daa0e6ce", "Url": "https://api.github.com/repos/peichman-umd/fcrepo-module-auth-rbacl", "Date": "2016-05-19T15:27:10Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (te instanceof blusunrize.immersiveengineering.common.blocks.wooden.TileEntityWoodenBarrel) tag.setTag(\"tank\", ((blusunrize.immersiveengineering.common.blocks.wooden.TileEntityWoodenBarrel) (te)).tank.writeToNBT(new net.minecraft.nbt.NBTTagCompound()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4442/buggy-version/src.main.java.blusunrize.immersiveengineering.common.util.compat.waila.IEWailaDataProvider.java", "BodyUseAPI": [], "Fixed commit": "cbbd432fe04765e6b6a5afb784c876c708203c2a", "Url": "https://api.github.com/repos/malte0811/ImmersiveEngineering", "Date": "2016-09-21T15:11:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.wsn02.DataProvider.batteryData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != dataelements) { for (int idx = 0; idx < (dataelements.size()); ++idx) { this.DB.batteryDeleteId(dataelements.get(idx).getID()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8941/buggy-version/WSN02.src.com.example.wsn02.MainActivity.java", "BodyUseAPI": ["dataelements.get(idx).getID()", "java.util.List<com.example.wsn02.DataElement>.get(int)", "java.util.List<com.example.wsn02.DataElement>.size()", "com.example.wsn02.DataProvider.batteryDeleteId(dataelements.get(idx).getID())"], "Fixed commit": "04d9fc4102021ada92539c2c86ed4bcd8988e39a", "Url": "https://api.github.com/repos/Rubusch/android", "Date": "2013-05-26T04:12:57Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getInventory().getItemInMainHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((item.getAmount()) <= 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5699/buggy-version/src.main.java.com.gmail.nossr50.skills.herbalism.HerbalismManager.java", "BodyUseAPI": [], "Fixed commit": "bddca30668be5c262e992a6c60a555dd30a536b2", "Url": "https://api.github.com/repos/Tslat/mcMMO", "Date": "2016-03-05T10:39:16Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getInventory().getItemInMainHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((item.getAmount()) <= 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5699/buggy-version/src.main.java.com.gmail.nossr50.skills.herbalism.HerbalismManager.java", "BodyUseAPI": [], "Fixed commit": "bddca30668be5c262e992a6c60a555dd30a536b2", "Url": "https://api.github.com/repos/Tslat/mcMMO", "Date": "2016-03-05T10:39:16Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7344/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Utils.java", "BodyUseAPI": [], "Fixed commit": "eb1ad8de33098b111f8834b08d9c880f66356ab8", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-07-17T00:07:04Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBikeStationOverlay) != null) { mBikeStationOverlay.clearBikeStations(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7352/buggy-version/onebusaway-android.src.amazon.java.org.onebusaway.android.map.googlemapsv2.BaseMapFragment.java", "BodyUseAPI": [], "Fixed commit": "e2d1857bdcbe5bc34e4141e9b361a8ccd37cb532", "Url": "https://api.github.com/repos/carvalhorr/onebusaway-android", "Date": "2017-06-25T16:10:22Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(retentionPeriod.matches(\"^-?\\\\\\\\d+$\"))) { msg = \"Please enter valid number for \\\"Purge Record Older Than \\\" field.\"; }else { try { messageConsoleStub.scheduleDataPurging(table, cron, java.lang.Integer.parseInt(retentionPeriod)); if (enable) { msg = (\"Data purging task for \" + table) + \" scheduled successfully.\"; }else { msg = (\"Data purging task for \" + table) + \" removed successfully.\"; } } catch (java.lang.Exception e) { msg = \"Unable to schedule task due to \" + (e.getMessage()); org.wso2.carbon.messageconsole.ui.MessageConsoleConnector.log.error((\"Unable to schedule data puring task for \" + table), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4032/buggy-version/components.analytics-views.org.wso2.carbon.analytics.messageconsole.ui.src.main.java.org.wso2.carbon.messageconsole.ui.MessageConsoleConnector.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "org.wso2.carbon.analytics.messageconsole.stub.MessageConsoleStub.scheduleDataPurging(java.lang.String,java.lang.String,int)"], "Fixed commit": "f448a93b6c9c19a012d1bba95018bd56670702c0", "Url": "https://api.github.com/repos/swsachith/carbon-analytics", "Date": "2015-09-05T14:25:34Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputDevice) == null) { open(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2718/buggy-version/MIDIDriver.src.jp.kshoji.javax.sound.midi.usb.UsbMidiTransmitter.java", "BodyUseAPI": [], "Fixed commit": "a6296ed5fa38e4b82190a0e975daa84faf5e7513", "Url": "https://api.github.com/repos/kshoji/USB-MIDI-Driver", "Date": "2014-03-12T09:23:15Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((processEngineConfiguration.isAsyncExecutorEnabled()) && ((processEngineConfiguration.getAsyncExecutor()) != null)) { processEngineConfiguration.getAsyncExecutor().start(); }else if (((processEngineConfiguration.isAsyncExecutorEnabled()) == false) && ((processEngineConfiguration.getJobExecutor()) != null)) { processEngineConfiguration.getJobExecutor().start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7208/buggy-version/modules.activiti-webapp-explorer2.src.main.java.org.activiti.explorer.conf.DemoDataConfiguration.java", "BodyUseAPI": ["processEngineConfiguration.getAsyncExecutor().start()", "org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl.getJobExecutor()", "org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl.getJobExecutor()", "org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl.getAsyncExecutor()", "processEngineConfiguration.getJobExecutor().start()", "org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl.isAsyncExecutorEnabled()"], "Fixed commit": "8ef406fa7405b5d64e8422a56c5dad7b1e6ec4e6", "Url": "https://api.github.com/repos/smirzai/Activiti", "Date": "2015-02-25T09:26:07Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((processEngineConfiguration.isAsyncExecutorEnabled()) && ((processEngineConfiguration.getAsyncExecutor()) != null)) { processEngineConfiguration.getAsyncExecutor().shutdown(); }else if (((processEngineConfiguration.isAsyncExecutorEnabled()) == false) && ((processEngineConfiguration.getJobExecutor()) != null)) { processEngineConfiguration.getJobExecutor().shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7208/buggy-version/modules.activiti-webapp-explorer2.src.main.java.org.activiti.explorer.conf.DemoDataConfiguration.java", "BodyUseAPI": ["org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl.getJobExecutor()", "processEngineConfiguration.getAsyncExecutor().shutdown()", "org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl.isAsyncExecutorEnabled()", "org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl.getAsyncExecutor()", "org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl.getJobExecutor()", "processEngineConfiguration.getJobExecutor().shutdown()"], "Fixed commit": "8ef406fa7405b5d64e8422a56c5dad7b1e6ec4e6", "Url": "https://api.github.com/repos/smirzai/Activiti", "Date": "2015-02-25T09:26:07Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateReportItemDateUpdated) { report.setDateUpdated(new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5065/buggy-version/roda-common.roda-common-data.src.main.java.org.roda.core.data.v2.jobs.Report.java", "BodyUseAPI": [], "Fixed commit": "f727075f3f3c5a2cae4b50af5e581f1423f92873", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2017-09-01T16:46:05Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(long)", "java.lang.Math.abs(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((intervallO1 - intervallO2) != 0) { return intervallO1 - intervallO2; }else if (((feat1.getLeftToken()) - (feat2.getRightToken())) != 0) { return ((int) ((feat1.getLeftToken()) - (feat2.getRightToken()))); }else if (((feat1.getRightToken()) - (feat2.getRightToken())) != 0) { return ((int) ((feat1.getRightToken()) - (feat2.getRightToken()))); }else return ((int) ((feat1.getInternalID()) - (feat2.getInternalID())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6180/buggy-version/annis-gui.src.main.java.annis.gui.resultview.SingleResultPanel.java", "BodyUseAPI": [], "Fixed commit": "264843740b1d903af5a63e0beeb2d9ea9965d7ac", "Url": "https://api.github.com/repos/korpling/ANNIS", "Date": "2013-06-25T15:59:48Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Integer.parseInt(parts[4])) == 0) { mask = 0 << 32; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5588/buggy-version/src.main.java.org.elasticsearch.search.aggregations.bucket.range.ipv4.IPv4RangeBuilder.java", "BodyUseAPI": [], "Fixed commit": "03cd0df530770e08aa77632bb6be5920e495a39d", "Url": "https://api.github.com/repos/imotov/elasticsearch", "Date": "2015-07-27T10:50:33Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.geogit.api.FeatureBuilder.build(noderef.get().name(),org.geogit.api.RevFeature)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (feature.equals(featureInfo.getFeature())) { toApply.addRemovedFeature(featureInfo.getPath(), featureInfo.getFeature(), featureInfo.getFeatureType()); }else { rejected.addRemovedFeature(featureInfo.getPath(), featureInfo.getFeature(), featureInfo.getFeatureType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2430/buggy-version/src.cli.src.main.java.org.geogit.cli.porcelain.Apply.java", "BodyUseAPI": ["org.geogit.api.FeatureInfo.getFeatureType()", "org.geogit.api.FeatureInfo.getPath()", "org.geogit.api.plumbing.diff.Patch.addRemovedFeature(featureInfo.getPath(),featureInfo.getFeature(),featureInfo.getFeatureType())", "org.geogit.api.FeatureInfo.getPath()", "org.geogit.api.FeatureInfo.getFeatureType()", "org.geogit.api.FeatureInfo.getFeature()", "org.geogit.api.FeatureInfo.getFeature()", "org.geogit.api.plumbing.diff.Patch.addRemovedFeature(featureInfo.getPath(),featureInfo.getFeature(),featureInfo.getFeatureType())"], "Fixed commit": "fcabc7d27421101833e226c8f0e69eaa6accd960", "Url": "https://api.github.com/repos/opengeo/GeoGit", "Date": "2013-08-20T12:56:52Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (current_path_tmp != null) { if (org.codeaurora.bluetooth.ftp.BluetoothFtpObexServer.D) android.util.Log.d(org.codeaurora.bluetooth.ftp.BluetoothFtpObexServer.TAG, (\"current_tmp_path: \" + current_path_tmp)); if ((((current_path_tmp.length()) != 0) && ((current_path_tmp.equals(rootPrimaryStoragePath)) == false)) && ((current_path_tmp.equals(rootSecondaryStoragePath)) == false)) { current_path_tmp = current_path_tmp.substring(0, current_path_tmp.lastIndexOf(\"/\")); }else if ((current_path_tmp.equals(rootPrimaryStoragePath)) || (current_path_tmp.equals(rootSecondaryStoragePath))) { current_path_tmp = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8812/buggy-version/src.org.codeaurora.bluetooth.ftp.BluetoothFtpObexServer.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.equals(java.lang.String)", "android.util.Log.d(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "d5a045b9bcb3f5e052cd1a8a1c6d3827c04b059c", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_BluetoothExt", "Date": "2013-12-02T22:32:04Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getConnectedVoiceChannels().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (channel.getGuild().equals(voiceChannel.getGuild())) { voiceChannel.leave(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/356/buggy-version/src.main.java.se.monstermannen.discordmonsterbot.commands.LeaveCommand.java", "BodyUseAPI": ["sx.blah.discord.handle.obj.IVoiceChannel.leave()"], "Fixed commit": "ab0954532d492668490ecdee2fe762a0be108bd6", "Url": "https://api.github.com/repos/MonsterMannen/DiscordMonsterBot", "Date": "2017-01-24T00:04:08Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cell) != null) { return cell.getStringCellValue(); }else { org.openflexo.technologyadapter.excel.model.ExcelCell.logger.warning(((\"Trying to get value for a null ExcelCell (\" + (this.toString())) + \")\")); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3326/buggy-version/excelconnector.src.main.java.org.openflexo.technologyadapter.excel.model.ExcelCell.java", "BodyUseAPI": [], "Fixed commit": "8676655906b8be13f8134a4216e70155f3583a98", "Url": "https://api.github.com/repos/openflexo-team/openflexo-technology-adapters", "Date": "2014-10-20T06:58:11Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3463/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.SignUpActivity.java", "BodyUseAPI": [], "Fixed commit": "a596141c85865be4ea8ba4792273a9c8f7ae86f5", "Url": "https://api.github.com/repos/gogeta95/susi_android", "Date": "2016-10-15T18:38:51Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c == '=') { return Token.ASSIGN; }else { inSource.unread(c); return Token.COLON; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4309/buggy-version/p2.web.cecs.pdx.edu.~harry.compilers.p2.Lexer.java", "BodyUseAPI": ["java.io.PushbackReader.unread(char)"], "Fixed commit": "a54fd01f0beaaa8addd94d272625866fa534474a", "Url": "https://api.github.com/repos/tomwang1013/PortlandCompiler", "Date": "2013-10-28T20:05:34Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findById(id)) == null) { throw new com.springbootseries.exception.DemoException(((com.springbootseries.service.StudentServiceImpl.NOT_SUCH_STUDENT) + id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7280/buggy-version/src.main.java.com.springbootseries.service.StudentServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0a61b802780d84897e8fccc82efc44489b3d6bbc", "Url": "https://api.github.com/repos/redong/SpringBoot-Docker", "Date": "2017-12-10T22:22:32Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getCount()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4332/buggy-version/UrgentCallLib.src.com.mmarvick.urgentcall.RulesDbHelper.java", "BodyUseAPI": [], "Fixed commit": "c1fb9d68c072dfd17000ca9c9c57c82f29c1ea4b", "Url": "https://api.github.com/repos/mmarvick/phone-alert-app", "Date": "2014-05-26T02:35:06Z"},
{"Line": "=>1049", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.lgallardo.qbittorrentclient.MainActivity.cookie) != null) && (!(com.lgallardo.qbittorrentclient.MainActivity.cookie.equals(\"\")))) { android.widget.Toast.makeText(getApplicationContext(), R.string.error403, Toast.LENGTH_SHORT).show(); com.lgallardo.qbittorrentclient.MainActivity.cookie = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5818/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cec9408c0e3e72519d5b8f5b416666608582265a", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2016-06-18T23:07:06Z"},
{"Line": "=>3226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection403ErrorCounter) > 1) { if (((com.lgallardo.qbittorrentclient.MainActivity.cookie) != null) && (!(com.lgallardo.qbittorrentclient.MainActivity.cookie.equals(\"\")))) { android.widget.Toast.makeText(getApplicationContext(), R.string.error403, Toast.LENGTH_SHORT).show(); com.lgallardo.qbittorrentclient.MainActivity.cookie = null; } httpStatusCode = 0; com.lgallardo.qbittorrentclient.MainActivity.disableRefreshSwipeLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5818/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cec9408c0e3e72519d5b8f5b416666608582265a", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2016-06-18T23:07:06Z"},
{"Line": "=>3612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection403ErrorCounter) > 1) { if (((com.lgallardo.qbittorrentclient.MainActivity.cookie) != null) && (!(com.lgallardo.qbittorrentclient.MainActivity.cookie.equals(\"\")))) { android.widget.Toast.makeText(getApplicationContext(), R.string.error403, Toast.LENGTH_SHORT).show(); } com.lgallardo.qbittorrentclient.MainActivity.cookie = null; httpStatusCode = 0; com.lgallardo.qbittorrentclient.MainActivity.disableRefreshSwipeLayout(); }else { new com.lgallardo.qbittorrentclient.MainActivity.qBittorrentCookieTask().execute(com.lgallardo.qbittorrentclient.MainActivity.params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5818/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cec9408c0e3e72519d5b8f5b416666608582265a", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2016-06-18T23:07:06Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recorder) != null) { try { recorder.stop(); recorder.release(); } catch (java.lang.IllegalStateException e) { LOGE(com.backyardbrains.audio.MicListener.TAG, (\"Caught Illegal State Exception: \" + (e.toString()))); } recorder = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6463/buggy-version/src.com.backyardbrains.audio.MicListener.java", "BodyUseAPI": [], "Fixed commit": "c297c3e6caca271ba775d929633c8db71aafc29f", "Url": "https://api.github.com/repos/BackyardBrains/Spike-Recorder-Android", "Date": "2017-09-04T15:01:48Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idOfBestInd > ((generation.size()) - 1)) java.lang.System.out.println(\"Error in assess population\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2277/buggy-version/LPP.src.myPkg.MainLoop.java", "BodyUseAPI": [], "Fixed commit": "624531a0a45bc018beb7da0fd28a933039736112", "Url": "https://api.github.com/repos/Kefas/longest_path_problem", "Date": "2014-05-27T20:11:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 1) { org.bukkit.entity.Player p = org.bukkit.Bukkit.getPlayerExact(args[0]); if (p.getGameMode().equals(GameMode.SURVIVAL)) { p.setGameMode(GameMode.CREATIVE); return true; }else if (p.getGameMode().equals(GameMode.CREATIVE)) { p.setGameMode(GameMode.SURVIVAL); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9078/buggy-version/mineguild-admin-plugin.src.com.github.mineguild.MineguildAdmin.MGACommandExecutor.java", "BodyUseAPI": ["org.bukkit.Bukkit.getPlayerExact(java.lang.String)"], "Fixed commit": "cd1ec89d4382478b7d1a2906df684625dcd40e8f", "Url": "https://api.github.com/repos/mineguild/mineguild-admin-plugin", "Date": "2012-08-13T18:51:23Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((updatedDateTime) != null) { document.append(\"updatedDateTime\", updatedDateTime.format(dateTimeFormatter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8913/buggy-version/src.main.java.Article.java", "BodyUseAPI": [], "Fixed commit": "ab2f44de03d0719ea4383243548125df5ac2cd99", "Url": "https://api.github.com/repos/freddy-sf/JFeedReader", "Date": "2016-05-26T16:24:52Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.autoconfigureWebflow) { doInitialize(); }else { logger.warn(\"Webflow auto-configuration is disabled. CAS will not modify the webflow via {}\", getClass().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5869/buggy-version/cas-server-core-webflow.src.main.java.org.jasig.cas.web.flow.AbstractCasWebflowConfigurer.java", "BodyUseAPI": [], "Fixed commit": "995ebbeeee1a497750b8e692913a783e0c00c925", "Url": "https://api.github.com/repos/fogbeam/cas_mirror", "Date": "2016-04-09T11:01:42Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((svg) != null) { svg.setWidth(Style.Unit.PX, getOffsetWidth()); svg.setHeight(Style.Unit.PX, getOffsetHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7384/buggy-version/src.main.java.org.reactome.web.diagram.thumbnail.ehld.SVGThumbnail.java", "BodyUseAPI": [], "Fixed commit": "0dc57e120c831ee2f76c9cc11152e695b613d0e4", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2017-05-04T09:31:17Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.example.mary.hospital.Action.ListOfUsersActivity.names.isEmpty())) com.example.mary.hospital.Action.ListOfUsersActivity.listView.setAdapter(new com.example.mary.hospital.Adapters.ItemAdapter(this, R.layout.item_list_of_users, com.example.mary.hospital.Action.ListOfUsersActivity.users, com.example.mary.hospital.Action.ListOfUsersActivity.names));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8840/buggy-version/app.src.main.java.com.example.mary.hospital.Action.ListOfUsersActivity.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(com.example.mary.hospital.Adapters.ItemAdapter)"], "Fixed commit": "d592900cc08adb11705b35941fa6887f39edb392", "Url": "https://api.github.com/repos/YP-Hospital/YP-Hospital", "Date": "2016-03-21T19:04:14Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isInfinite(value)) { int i = sb.indexOf(\"Infinity\"); sb.replace(i, (i + (\"Infinity\".length())), \"\u221e\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4546/buggy-version/src.lisong_mechlab.view.MetricDisplay.java", "BodyUseAPI": [], "Fixed commit": "a575354b6ab10ff4cce1440b9f7554400b425f45", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-02-01T14:44:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMwoIdx()) == 1021) { return (getCycleTime(aEfficiencies)) + 0.75; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4546/buggy-version/src.lisong_mechlab.model.item.BallisticWeapon.java", "BodyUseAPI": [], "Fixed commit": "a575354b6ab10ff4cce1440b9f7554400b425f45", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-02-01T14:44:43Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPaused) { mp.pause(); }else { mp.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/325/buggy-version/library.src.main.java.com.echo.common.util.QueueMediaPlayer.java", "BodyUseAPI": [], "Fixed commit": "0dce3a788166479bab505ebbde57093f6741fbc1", "Url": "https://api.github.com/repos/jiangecho/echoCommon", "Date": "2016-04-30T12:56:45Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (defaultFont != null) gc.setFont(defaultFont);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5939/buggy-version/src.jloda.graphview.DefaultNodeDrawer.java", "BodyUseAPI": ["java.awt.Graphics2D.setFont(java.awt.Font)"], "Fixed commit": "6b49fac4cd4d66e0d922edee753a68a2fe4ffb54", "Url": "https://api.github.com/repos/danielhuson/jloda", "Date": "2016-10-07T12:01:00Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (defaultFont != null) gc.setFont(defaultFont);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5939/buggy-version/src.jloda.graphview.DefaultNodeDrawer.java", "BodyUseAPI": ["java.awt.Graphics2D.setFont(java.awt.Font)"], "Fixed commit": "6b49fac4cd4d66e0d922edee753a68a2fe4ffb54", "Url": "https://api.github.com/repos/danielhuson/jloda", "Date": "2016-10-07T12:01:00Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (controlledLocations[square.x][square.y]) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2538/buggy-version/src.outpost.group4.StagePlanningStrategy.java", "BodyUseAPI": [], "Fixed commit": "c1fb9f89dc37f0f931e711590384018e354be511", "Url": "https://api.github.com/repos/adamreis/outpost", "Date": "2014-11-26T17:18:20Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"$port\".equals(lowercaseName)) { if (cookie != null) cookie.setComment((\"$port=\" + value)); }else if (\"$version\".equals(lowercaseName)) { version = java.lang.Integer.parseInt(value); }else { cookie = new javax.servlet.http.Cookie(name, value); if (version > 0) cookie.setVersion(version); cookies.add(cookie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1207/buggy-version/jetty-server.src.main.java.org.eclipse.jetty.server.CookieCutter.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "bdeea10a6fb652f2aa1da8c1bac3c8fa71a81020", "Url": "https://api.github.com/repos/eclipse/jetty.project", "Date": "2017-05-13T07:12:11Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((simulatedSartMmsi) == null) { simulatedSartMmsi = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2875/buggy-version/epd-common.src.main.java.dk.dma.epd.common.prototype.settings.AisSettings.java", "BodyUseAPI": [], "Fixed commit": "8d0470523e47659af631b80bbc184beab64e8806", "Url": "https://api.github.com/repos/dma-enav/EPD", "Date": "2013-12-20T09:43:38Z"},
{"Line": "=>1638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (geolocData != null) { engineEcoSession.setGeolocData(geolocData); engineEcoSession = updateCurrentEcoSession(request, engineEcoSession); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2546/buggy-version/apis.api-core.api-core-common.src.main.java.org.hoteia.qalingo.core.web.util.impl.RequestUtilImpl.java", "BodyUseAPI": ["org.hoteia.qalingo.core.domain.EngineEcoSession.setGeolocData(org.hoteia.qalingo.core.web.bean.geoloc.GeolocData)"], "Fixed commit": "8176726537bc2c7c697af5b2e2b30c14928ca866", "Url": "https://api.github.com/repos/qalingo/qalingo-b2c-engine", "Date": "2014-03-20T11:05:06Z"},
{"Line": "=>882", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n > 1500) { sendMessage(message.getChannel(), ((\"```\" + s) + \"```\")); s = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1373/buggy-version/src.main.java.abanstudio.discordbot.wilson.WilsonServer.java", "BodyUseAPI": [], "Fixed commit": "66a413a692cdf3a4134203ae4828fb6e2a6cccc1", "Url": "https://api.github.com/repos/anilbanarsee/WilsonBot", "Date": "2016-10-22T12:41:34Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.sourceProperty().get()) != null) { fullName = ((field.sourceProperty().get().getClass().getName()) + \"-\") + (field.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1959/buggy-version/core.src.main.java.com.dooapp.fxform.filter.AbstractNameFilter.java", "BodyUseAPI": ["field.sourceProperty().get()", "com.dooapp.fxform.model.Element.getName()", "field.sourceProperty().get().getClass()", "field.sourceProperty().get().getClass().getName()", "com.dooapp.fxform.model.Element.sourceProperty()"], "Fixed commit": "597cb8359b2569b547a8532752838f5d28519bc5", "Url": "https://api.github.com/repos/dooApp/FXForm2", "Date": "2014-01-30T10:08:17Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["taskey.logic.Task.getTaskType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((this.taskType.compareTo(\"EVENT\")) == 0) && ((otherTaskType.compareTo(\"FLOATING\")) == 0)) { return 1; }else if (((this.taskType.compareTo(\"EVENT\")) == 0) && ((otherTaskType.compareTo(\"DEADLINE\")) == 0)) { return compareNonFloating(startTime, otherTaskName, otherStartTime); }else if (((this.taskType.compareTo(\"EVENT\")) == 0) && ((otherTaskType.compareTo(\"EVENT\")) == 0)) { return compareNonFloating(startTime, otherTaskName, otherStartTime); }else if (((this.taskType.compareTo(\"DEADLINE\")) == 0) && ((otherTaskType.compareTo(\"FLOATING\")) == 0)) { return 1; }else if (((this.taskType.compareTo(\"DEADLINE\")) == 0) && ((otherTaskType.compareTo(\"EVENT\")) == 0)) { return compareNonFloating(startTime, otherTaskName, otherStartTime); }else if (((this.taskType.compareTo(\"DEADLINE\")) == 0) && ((otherTaskType.compareTo(\"DEADLINE\")) == 0)) { return compareNonFloating(startTime, otherTaskName, otherStartTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1119/buggy-version/taskey.src.taskey.logic.Task.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "699e70811b8b95d60703d753d2226ab50ebc70d2", "Url": "https://api.github.com/repos/cs2103jan2016-f14-4j/main", "Date": "2016-03-21T15:43:46Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["taskey.logic.Task.getTaskType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((this.taskType.compareTo(\"DEADLINE\")) == 0) && ((otherTaskType.compareTo(\"FLOATING\")) == 0)) { return 1; }else if (((this.taskType.compareTo(\"DEADLINE\")) == 0) && ((otherTaskType.compareTo(\"EVENT\")) == 0)) { return compareNonFloating(startTime, otherTaskName, otherStartTime); }else if (((this.taskType.compareTo(\"DEADLINE\")) == 0) && ((otherTaskType.compareTo(\"DEADLINE\")) == 0)) { return compareNonFloating(startTime, otherTaskName, otherStartTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1119/buggy-version/taskey.src.taskey.logic.Task.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "699e70811b8b95d60703d753d2226ab50ebc70d2", "Url": "https://api.github.com/repos/cs2103jan2016-f14-4j/main", "Date": "2016-03-21T15:43:46Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currLine.trim().length()) == 0) { i--; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/14/buggy-version/KIWC-KWAC-KWOC.src.ReadInput.java", "BodyUseAPI": [], "Fixed commit": "33582643e5ac9360696e711666dcf04a2acd4952", "Url": "https://api.github.com/repos/jasontbk/KWIC-KWAC-KWOC-", "Date": "2013-08-26T07:03:16Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursor.moveToFirst()) do { team2.grocerycartcalculator.db.Budget budget = new team2.grocerycartcalculator.db.Budget(cursor.getInt(0), cursor.getInt(1), cursor.getInt(2), cursor.getInt(3)); budgets.add(budget); } while (cursor.moveToNext() );", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3052/buggy-version/app.src.main.java.team2.grocerycartcalculator.db.Database.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)", "android.database.Cursor.getInt(int)", "android.database.Cursor.getInt(int)", "android.database.Cursor.getInt(int)", "android.database.Cursor.moveToNext()"], "Fixed commit": "2dfc0fdc6db15be52032980f63e2afa59b1d3a17", "Url": "https://api.github.com/repos/dvancleave/GroceryCartCalculator", "Date": "2017-12-01T11:10:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((40 - ((int) (java.lang.Math.ceil(((state.turn) / 2.0F))))) < (searchDepth)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1501/buggy-version/src.chess.PlayerNegaMax.java", "BodyUseAPI": [], "Fixed commit": "6871ec3854f321907e6ca6d5d230321049c0f0eb", "Url": "https://api.github.com/repos/relikd/CheezyMcChess", "Date": "2016-06-02T15:29:35Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min == max) { return min; }else { long value = ((long) (rand.nextInt())); return ((int) (((value - ((long) (java.lang.Integer.MIN_VALUE))) % (max - min)) + min)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1562/buggy-version/src.main.java.sasakitoa.kafka.connect.random.generator.RandomInt.java", "BodyUseAPI": [], "Fixed commit": "845ad77bb307b46c620ebb63797e90e882f585db", "Url": "https://api.github.com/repos/sasakitoa/kafka-connect-random", "Date": "2016-08-14T03:03:26Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rackspace.papi.service.rms.ResponseMessageServiceImpl.getFormatter(com.rackspace.papi.service.rms.config.StatusCodeMatcher,com.rackspace.papi.service.rms.config.Message)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (formatter != null) { final java.lang.String formattedOutput = formatter.format(message, request, response).trim(); if (!(statusCodeMessage.isPrependOrigin())) { response.resetBuffer(); }else { final int contentlength = java.lang.Integer.parseInt(response.getHeader(\"content-length\")); response.setContentLength((contentlength + (formattedOutput.length()))); } response.setHeader(CommonHttpHeader.CONTENT_TYPE.toString(), preferedMediaRange.getMimeType().toString()); response.getOutputStream().write(formattedOutput.getBytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3974/buggy-version/project-set.core.core-lib.src.main.java.com.rackspace.papi.service.rms.ResponseMessageServiceImpl.java", "BodyUseAPI": ["formatter.format(message, request, response).trim()", "com.rackspace.papi.commons.util.logging.apache.HttpLogFormatter.format(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"], "Fixed commit": "d8df7a581f7c49fcdf2ff3dba5f7427f67d2ea91", "Url": "https://api.github.com/repos/sifusam/repose", "Date": "2012-02-23T16:06:11Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pile.size()) > 0) pile.getLast().setIsFaceUp(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4292/buggy-version/P5.Solitaire.java", "BodyUseAPI": ["Pile.getLast()", "pile.getLast().setIsFaceUp(boolean)"], "Fixed commit": "8df3906eeb3d14b303a3b49ab70508334c902262", "Url": "https://api.github.com/repos/nashkevin/EECS-132", "Date": "2015-04-27T22:54:04Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.idevicesinc.sweetblue.utils.Utils.isKitKat())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8749/buggy-version/app.src.main.java.com.idevicesinc.sweetblue.P_BondManager.java", "BodyUseAPI": [], "Fixed commit": "b78a69f886abd0e0a82a59b0ed0b4222d21ed094", "Url": "https://api.github.com/repos/iDevicesInc/SweetBlue", "Date": "2016-03-28T20:35:44Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unibz.inf.ontop.model.impl.Predicate.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (oldName.startsWith(prefix)) { int prefixLength = prefix.length(); oldpredicateNameLength = (oldName.length()) - prefixLength; oldPrefix = prefix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5143/buggy-version/obdalib-core.src.main.java.it.unibz.inf.ontop.model.impl.OBDAModelImpl.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "7a11d5bf399e029ca5d4f1831adb92a1389591a2", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2016-05-23T13:22:51Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (context != null) { if ((context.getLastUpdateTimestamp()) == 0) { lastUpdatesComplete = false; } contexts.add(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3998/buggy-version/src.main.java.com.frs.alto.security.ClusterSessionAuthenticationStrategy.java", "BodyUseAPI": ["com.frs.alto.security.ClusterSecurityContext.getLastUpdateTimestamp()", "java.util.Collection<com.frs.alto.security.ClusterSecurityContext>.add(com.frs.alto.security.ClusterSecurityContext)"], "Fixed commit": "5b9aabfed4cd7893a0d0bc37aaf4b5de3649f802", "Url": "https://api.github.com/repos/alto-project/alto", "Date": "2013-03-07T20:58:49Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInteger) return ((T) ((java.lang.Integer) (base.intValue()))); else return ((T) (base));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2690/buggy-version/src.org.escaperun.game.model.entities.statistics.DerivedStatistic.java", "BodyUseAPI": [], "Fixed commit": "5f61bdf707be45348a5f5ae183f7ebe6c6ba849a", "Url": "https://api.github.com/repos/egross91/Run-Esc", "Date": "2015-03-22T20:46:12Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInteger) return ((T) ((java.lang.Integer) (base.intValue()))); else return ((T) (base));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2690/buggy-version/src.org.escaperun.game.model.entities.statistics.DerivedStatistic.java", "BodyUseAPI": [], "Fixed commit": "5f61bdf707be45348a5f5ae183f7ebe6c6ba849a", "Url": "https://api.github.com/repos/egross91/Run-Esc", "Date": "2015-03-22T20:46:12Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array == null) || ((array.length) < (getNumberOfDataPoints()))) { array = new double[getNumberOfDataPoints()]; for (int i = 0; i < (getNumberOfDataPoints()); i++) array[i] = mzValues[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7596/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLMsScan.java", "BodyUseAPI": [], "Fixed commit": "a255592036c92176ee498c6484666d1ce10f8530", "Url": "https://api.github.com/repos/adhi1419/msdk", "Date": "2017-08-14T16:34:19Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array == null) || ((array.length) < (numOfDataPoints))) { array = new float[numOfDataPoints]; for (int i = 0; i < (numOfDataPoints); i++) array[i] = intensityValues[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7596/buggy-version/msdk-io.msdk-io-mzml.src.main.java.io.github.msdk.io.mzml.data.MzMLMsScan.java", "BodyUseAPI": [], "Fixed commit": "a255592036c92176ee498c6484666d1ce10f8530", "Url": "https://api.github.com/repos/adhi1419/msdk", "Date": "2017-08-14T16:34:19Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.typechecker.model.ProducedType.getDeclaration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isClass && (tn.equals(unit.getByteDeclaration()))) { return \"0.byte\"; }else if (isClass && (tn.equals(unit.getTupleDeclaration()))) { final int minimumLength = unit.getTupleMinimumLength(t); final java.util.List<com.redhat.ceylon.compiler.typechecker.model.ProducedType> tupleTypes = unit.getTupleElementTypes(t); final java.lang.StringBuilder sb = new java.lang.StringBuilder(); for (int i = 0; i < minimumLength; i++) { sb.append(((sb.length()) == 0 ? \"[\" : \", \")); com.redhat.ceylon.compiler.typechecker.model.ProducedType currentType = tupleTypes.get(i); if (unit.isSequentialType(currentType)) { currentType = unit.getSequentialElementType(currentType); } sb.append(com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.defaultValue(unit, currentType)); } sb.append(']'); return sb.toString(); }else if (unit.isSequentialType(t)) { final java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append('['); if (!(unit.getEmptyDeclaration().getType().isSubtypeOf(t))) { sb.append(com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.defaultValue(unit, unit.getSequentialElementType(t))); } sb.append(']'); return sb.toString(); }else if (unit.isIterableType(t)) { final java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append('{'); if (!(unit.getEmptyDeclaration().getType().isSubtypeOf(t))) { sb.append(com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.defaultValue(unit, unit.getIteratedType(t))); } sb.append('}'); return sb.toString(); }else { return \"nothing\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7980/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.typechecker.model.Unit.getTupleMinimumLength(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.compiler.typechecker.model.Unit.getSequentialElementType(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.compiler.typechecker.model.Unit.getEmptyDeclaration()", "com.redhat.ceylon.compiler.typechecker.model.Unit.isSequentialType(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.compiler.typechecker.model.Unit.isIterableType(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.compiler.typechecker.model.Unit.getTupleDeclaration()", "com.redhat.ceylon.compiler.typechecker.model.Unit.getSequentialElementType(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.compiler.typechecker.model.Unit.getEmptyDeclaration()", "com.redhat.ceylon.compiler.typechecker.model.Unit.getTupleElementTypes(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.compiler.typechecker.model.Unit.getIteratedType(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.compiler.typechecker.model.TypeDeclaration.equals(unit.getTupleDeclaration())", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "unit.getEmptyDeclaration().getType()", "com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.defaultValue(com.redhat.ceylon.compiler.typechecker.model.Unit,unit.getIteratedType(t))", "unit.getEmptyDeclaration().getType().isSubtypeOf(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "unit.getEmptyDeclaration().getType()", "com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.defaultValue(com.redhat.ceylon.compiler.typechecker.model.Unit,com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "com.redhat.ceylon.compiler.typechecker.model.Unit.isSequentialType(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "unit.getEmptyDeclaration().getType().isSubtypeOf(com.redhat.ceylon.compiler.typechecker.model.ProducedType)", "java.lang.StringBuilder.append(java.lang.String)", "com.redhat.ceylon.eclipse.code.correct.CorrectionUtil.defaultValue(com.redhat.ceylon.compiler.typechecker.model.Unit,unit.getSequentialElementType(t))"], "Fixed commit": "f160f10000e9e8cd8098c30e5aa1fa5dae4a8933", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2014-07-23T21:32:23Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.FragmentManager.getBackStackEntryCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (backStackCount > 0) { android.app.FragmentManager.BackStackEntry lastBackStackEntry = thestral.agc.NavigationManager.fragmentManager.getBackStackEntryAt((backStackCount - 1)); if (lastBackStackEntry.getName().equals(page.getClass().getSimpleName())) { thestral.agc.NavigationManager.drawerLayout.closeDrawer(thestral.agc.NavigationManager.navigationDrawerFragmentContainer); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1613/buggy-version/AGC.app.src.main.java.thestral.agc.NavigationManager.java", "BodyUseAPI": ["android.app.FragmentManager.getBackStackEntryAt(int)"], "Fixed commit": "88e33966495085c13a915b3fa634ededb44dafe2", "Url": "https://api.github.com/repos/ThestralEWU/frontend", "Date": "2015-03-05T02:26:47Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.length()) < 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7555/buggy-version/src.com.obidea.semantika.cli2.runtime.Console.java", "BodyUseAPI": [], "Fixed commit": "71f3a3e47c0fbe8c39408c7e7107a9a6faeae590", "Url": "https://api.github.com/repos/obidea/semantika-cli2", "Date": "2014-07-28T11:13:04Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((minterface.isage()) < 2) || ((minterface.isage()) == 5)) { inact.size.setValue(java.lang.Math.min(inact.size.getValue(), 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2581/buggy-version/app.src.main.java.dev.eyesless.needmypuppy.Presenter_aboutowner.java", "BodyUseAPI": [], "Fixed commit": "b4675b097f9048b343c567b03e7008b33c1ae3e2", "Url": "https://api.github.com/repos/kalininaleksandrv/NeedMyPuppyRelease_v_0.1", "Date": "2017-08-04T14:50:33Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((points[j]) == null) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4622/buggy-version/BruteCollinearPoints.java", "BodyUseAPI": [], "Fixed commit": "58427b7b044c3ee236de38a7bbabdcdae815fbf0", "Url": "https://api.github.com/repos/m5ba/coursera", "Date": "2017-10-22T05:38:24Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((points[i]) == null) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4622/buggy-version/BruteCollinearPoints.java", "BodyUseAPI": [], "Fixed commit": "58427b7b044c3ee236de38a7bbabdcdae815fbf0", "Url": "https://api.github.com/repos/m5ba/coursera", "Date": "2017-10-22T05:38:24Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchLocalVar) { com.sun.jdi.LocalVariable localVariable; localVariable = stackFrame.visibleVariableByName(name); if (localVariable != null) { return stackFrame.getValue(localVariable); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6731/buggy-version/sztools.java.com.google.code.vimsztool.debug.eval.ExpEval.java", "BodyUseAPI": [], "Fixed commit": "83fe462b26b8569bd656fe6948c2abffb74c3d5f", "Url": "https://api.github.com/repos/shrekwang/vim-sztool", "Date": "2012-07-22T08:00:16Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx == 0) { java.lang.String annot = java.lang.String.format(\"%s:exon%d:%s:p.=\", trmdl.getName(), exonNumber, canno); jannovar.annotation.Annotation ann = new jannovar.annotation.Annotation(trmdl, annot, jannovar.common.VariantType.FS_INSERTION, startPosMutationInCDS); return ann; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3098/buggy-version/src.main.java.jannovar.annotation.InsertionAnnotation.java", "BodyUseAPI": [], "Fixed commit": "9e34e0496897a91f6edcb7556c8fd84ca24b2674", "Url": "https://api.github.com/repos/charite/jannovar", "Date": "2014-04-29T13:15:59Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getChildNodes()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7872/buggy-version/ElsuFoundation.src.elsu.support.XMLReader.java", "BodyUseAPI": [], "Fixed commit": "966b42c82b4c530eac9bcb074b332de79082f56f", "Url": "https://api.github.com/repos/ssdhaliwal/ElsuFoundation", "Date": "2016-06-12T22:08:23Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (na != null) { sb.append(\" [ATTR=\").append(((org.w3c.dom.Node) (na)).getNodeName()).append(\"//\").append(((org.w3c.dom.Node) (na)).getNodeValue()).append(\"]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7872/buggy-version/ElsuFoundation.src.elsu.support.XMLViewer.java", "BodyUseAPI": [], "Fixed commit": "966b42c82b4c530eac9bcb074b332de79082f56f", "Url": "https://api.github.com/repos/ssdhaliwal/ElsuFoundation", "Date": "2016-06-12T22:08:23Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7872/buggy-version/ElsuFoundation.src.elsu.support.XMLViewer.java", "BodyUseAPI": [], "Fixed commit": "966b42c82b4c530eac9bcb074b332de79082f56f", "Url": "https://api.github.com/repos/ssdhaliwal/ElsuFoundation", "Date": "2016-06-12T22:08:23Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["slotItem.getItem().clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.hasItemMeta()) && (item.getItemMeta().hasLore())) { lore = item.getItemMeta().getLore(); }else { lore = new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6515/buggy-version/src.main.java.io.github.rypofalem.slotcache.SlotCacheItem.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()", "item.getItemMeta().getLore()"], "Fixed commit": "6da245dde52592911d7812ff71567620d367f5dc", "Url": "https://api.github.com/repos/RypoFalem/SlotCache", "Date": "2017-07-25T21:37:49Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.wahlzeit.utils.DoubleUtil.compare(radius, 0)) || (java.lang.Double.isNaN(radius))) { return new org.wahlzeit.model.SphericCoordinate(0, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4351/buggy-version/src.main.java.org.wahlzeit.model.CartesianCoordinate.java", "BodyUseAPI": [], "Fixed commit": "95b92b293b7ba36d6dd5dac0795e137e0e4627ba", "Url": "https://api.github.com/repos/SchwarzGeorg/wahlzeit", "Date": "2017-11-19T10:59:25Z"},
{"Line": "=>900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pneumaticCraft.common.entity.living.EntityDrone.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pneumaticCraft.common.util.PneumaticCraftUtils.isBlockLiquid(block)) { return hasLiquidImmunity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1446/buggy-version/src.pneumaticCraft.common.entity.living.EntityDrone.java", "BodyUseAPI": [], "Fixed commit": "de89e4eb7364f0557047ee2d5dc6b686fbec61bd", "Url": "https://api.github.com/repos/AnodeCathode/PneumaticCraft", "Date": "2015-12-02T13:41:28Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attackTarget.getEntityBoundingBox().intersectsWith(this.dinosaur.getEntityBoundingBox().expandXyz(1.0))) { return 1024.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3907/buggy-version/src.main.java.org.jurassicraft.server.entity.ai.DinosaurAttackMeleeEntityAI.java", "BodyUseAPI": [], "Fixed commit": "af1f92506a138be82d7d977ebdee5b606010b591", "Url": "https://api.github.com/repos/JurassiCraftTeam/JurassiCraft2", "Date": "2017-08-22T18:30:18Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.getCount()) > 0) { mMergeAdapter.setActive(mVertretungenHeader, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2528/buggy-version/app.src.main.java.de.itgdah.vertretungsplan.ui.BaseDayListFragment.java", "BodyUseAPI": [], "Fixed commit": "ee7eeca07f9c010b72e829aede2340a77d2d34a0", "Url": "https://api.github.com/repos/moritzf/vertretungsplan-itg-android", "Date": "2015-06-06T21:10:54Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getArguments().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dayId != null) { selectionArgs = new java.lang.String[]{ dayId }; }else { selectionArgs = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2528/buggy-version/app.src.main.java.de.itgdah.vertretungsplan.ui.BaseDayListFragment.java", "BodyUseAPI": [], "Fixed commit": "ee7eeca07f9c010b72e829aede2340a77d2d34a0", "Url": "https://api.github.com/repos/moritzf/vertretungsplan-itg-android", "Date": "2015-06-06T21:10:54Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getWorldObj().getTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (neighbor != null) { neighbor.delNeighbor(this); simElectricity.API.Util.updateTileEntityField(neighbor, \"neighborsInfo\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4163/buggy-version/simElectricity.src.main.java.simElectricity.Common.Blocks.TileEntity.TileTower.java", "BodyUseAPI": ["simElectricity.Common.Blocks.TileEntity.TileTower.delNeighbor(simElectricity.Common.Blocks.TileEntity.TileTower)", "simElectricity.API.Util.updateTileEntityField(simElectricity.Common.Blocks.TileEntity.TileTower,java.lang.String)"], "Fixed commit": "f6efc5fcbe0010a293fc81d79ea666e369fee3e6", "Url": "https://api.github.com/repos/RoyalAliceAcademyOfSciences/SimElectricity", "Date": "2014-07-30T14:45:21Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnglish == false) { WordNode node = french.searchTree(word); if (node == null) { return word; }else { translation = node.getEng(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4393/buggy-version/Project.Translator.java", "BodyUseAPI": [], "Fixed commit": "8f5d5ee1ae6a9594f0f473e3508fa6d8955afd30", "Url": "https://api.github.com/repos/dhlp123/TranslatorGroupProject", "Date": "2017-03-25T20:27:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DictionaryTree.searchTree(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (node == null) { return word; }else { translation = node.getFren(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4393/buggy-version/Project.Translator.java", "BodyUseAPI": ["WordNode.getFren()"], "Fixed commit": "8f5d5ee1ae6a9594f0f473e3508fa6d8955afd30", "Url": "https://api.github.com/repos/dhlp123/TranslatorGroupProject", "Date": "2017-03-25T20:27:18Z"},
{"Line": "=>1139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.com.cynjames.utils.SQLiteHelper.getPendingJobsWithStatus(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((statusSevenJobs.size()) == 0) { checkAdhocJobsAssigned(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6648/buggy-version/CJTV1.0.app.src.main.java.au.com.cynjames.mainView.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a232fbcee50b46b78842a826ee3b69f5b7426d37", "Url": "https://api.github.com/repos/hvrshanika/Cynjames-Android", "Date": "2017-07-12T03:45:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof java.net.UnknownHostException) { exceptionMessage = _context.getString(R.string.UnkownHostExceptionMessage); }else { exceptionMessage = e.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9090/buggy-version/app.src.main.java.org.softcatala.traductor.ServerTranslation.java", "BodyUseAPI": ["java.lang.Exception.toString()"], "Fixed commit": "bd55ac755bbe5e11b1773a5d896cc52584a11234", "Url": "https://api.github.com/repos/Softcatala/TraductorSoftcatalaAndroid", "Date": "2014-08-18T17:21:50Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (j > 0) user = users.get((j - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8700/buggy-version/app.src.main.java.com.amusale.judgementscore.activity.MainActivity.java", "BodyUseAPI": ["java.util.List<com.amusale.judgementscore.model.User>.get(int)"], "Fixed commit": "ce351f57a43cb6b5cf34c47749333627f74bd0d9", "Url": "https://api.github.com/repos/ashishmusale/JudgementScore", "Date": "2016-04-07T16:41:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.objenesis.strategy.PlatformDescription.PlatformDescription.isAndroidOpenJDK()) { return new org.objenesis.instantiator.basic.ObjectStreamClassInstantiator<T>(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5595/buggy-version/main.src.main.java.org.objenesis.strategy.StdInstantiatorStrategy.java", "BodyUseAPI": [], "Fixed commit": "fb72c9a711472bcd5ae751ef969d689cb45a7084", "Url": "https://api.github.com/repos/taivokasper/objenesis", "Date": "2016-04-20T12:37:04Z"},
{"Line": "=>762", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (model != null) { value = getString(\"description\", node, false, location, result); model.setDescription(value); value = getString(\"title\", node, false, location, result); model.setTitle(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5147/buggy-version/modules.swagger-parser.src.main.java.io.swagger.parser.util.SwaggerDeserializer.java", "BodyUseAPI": ["io.swagger.models.Model.setDescription(java.lang.String)", "io.swagger.models.Model.setTitle(java.lang.String)"], "Fixed commit": "02b48d559a16ea48bfa5d0918b04ca8d7b2a4786", "Url": "https://api.github.com/repos/swagger-api/swagger-parser", "Date": "2015-10-20T02:37:54Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty) { android.widget.Toast.makeText(this, \"No Match Found\", Toast.LENGTH_LONG).show(); }else { int a = new java.util.Random().nextInt(count); workers.moveToPosition(a); myDbHelper.insert_record_job(curr_id, workers.getString(1), date, workers.getString(0), workers.getString(8)); android.content.Intent intent = new android.content.Intent(this, com.example.findx.findx.profilehirer.class); intent.putExtra(\"int_value\", curr_id); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5879/buggy-version/app.src.main.java.com.example.findx.findx.profilehirer.java", "BodyUseAPI": [], "Fixed commit": "c9715eb6ff47de63937637318f5d4077fff7150d", "Url": "https://api.github.com/repos/timkartar/findx", "Date": "2016-10-02T05:18:25Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (language == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1786/buggy-version/checklistbank-mybatis-service.src.main.java.org.gbif.checklistbank.service.mybatis.NameUsageServiceMyBatis.java", "BodyUseAPI": [], "Fixed commit": "d3c5fc1400e6d5ec50eef5cc7eef236dec5b4e5f", "Url": "https://api.github.com/repos/gbif/checklistbank", "Date": "2014-09-11T10:44:38Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gbif.checklistbank.service.mybatis.mapper.NameUsageMapper.listByTaxonId(java.util.UUID,usage.getTaxonID(),org.gbif.api.model.common.paging.PagingRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((resp.size()) > 1) { org.gbif.checklistbank.service.mybatis.DatasetImportServiceMyBatis.LOG.warn(\"taxonID {} from dataset {} exists {} times\", usage.getTaxonID(), datasetKey, resp.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1786/buggy-version/checklistbank-mybatis-service.src.main.java.org.gbif.checklistbank.service.mybatis.DatasetImportServiceMyBatis.java", "BodyUseAPI": ["java.util.List<org.gbif.api.model.checklistbank.NameUsage>.size()", "org.slf4j.Logger.warn(java.lang.String,usage.getTaxonID(),java.util.UUID,resp.size())"], "Fixed commit": "d3c5fc1400e6d5ec50eef5cc7eef236dec5b4e5f", "Url": "https://api.github.com/repos/gbif/checklistbank", "Date": "2014-09-11T10:44:38Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.ykrank.s1next.view.dialog.ProgressDialogFragment<D>.getSourceObservable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sourceObservable != null) { mDisposable = getSourceObservable().subscribeOn(io.reactivex.schedulers.Schedulers.io()).observeOn(io.reactivex.android.schedulers.AndroidSchedulers.mainThread()).doAfterTerminate(this::finallyDo).subscribe(this::onNext, this::onError); }else { me.ykrank.s1next.util.L.report(new java.lang.IllegalStateException(\"SourceObservable is null when SimpleProgressDialogFragment onResume\")); me.ykrank.s1next.view.dialog.ProgressDialogFragment.getFragmentManager().beginTransaction().remove(this).commitAllowingStateLoss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8952/buggy-version/app.src.main.java.me.ykrank.s1next.view.dialog.ProgressDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "3b848af463ec8b3d8af69484acd13b7195e8b88a", "Url": "https://api.github.com/repos/ykrank/S1-Next", "Date": "2017-05-24T07:41:05Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"Vaccines\".equals(commodityViewModel.getCommodity().getCategory().getName())) { return false; }else { return !(commodityViewModel.getCommodity().isNonLGA()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3040/buggy-version/app.src.main.java.org.clintonhealthaccess.lmis.app.activities.ReceiveActivity.java", "BodyUseAPI": ["org.clintonhealthaccess.lmis.app.activities.viewmodels.BaseCommodityViewModel.getCommodity()", "commodityViewModel.getCommodity().isNonLGA()"], "Fixed commit": "9adcd8bf157064c8b1fdd0dab766059230610a6c", "Url": "https://api.github.com/repos/clintonhealthaccess/chailmis-android", "Date": "2015-09-06T06:08:19Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spinnerSource.getSelectedItem().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(currentSource.equals(getString(R.string.zonal_store)))) { return \"Select source: zonal cold chain store\"; }else { return java.lang.String.format(\"Commodities in this category can not be received from %s\", currentSource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3040/buggy-version/app.src.main.java.org.clintonhealthaccess.lmis.app.activities.ReceiveActivity.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "9adcd8bf157064c8b1fdd0dab766059230610a6c", "Url": "https://api.github.com/repos/clintonhealthaccess/chailmis-android", "Date": "2015-09-06T06:08:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((limit) > (-1)) return org.calrissian.mango.collect.CloseableIterables.limit(edges, limit); else return edges;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8376/buggy-version/store.graph-store.src.main.java.org.calrissian.accumulorecipes.graphstore.tinkerpop.query.EntityGraphQuery.java", "BodyUseAPI": [], "Fixed commit": "2d520b8ff3b64ce3f15ee03fbecd896701b3af57", "Url": "https://api.github.com/repos/calrissian/accumulo-recipes", "Date": "2014-05-11T04:39:15Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((limit) > (-1)) return org.calrissian.mango.collect.CloseableIterables.limit(vertices, limit); else return vertices;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/8376/buggy-version/store.graph-store.src.main.java.org.calrissian.accumulorecipes.graphstore.tinkerpop.query.EntityGraphQuery.java", "BodyUseAPI": [], "Fixed commit": "2d520b8ff3b64ce3f15ee03fbecd896701b3af57", "Url": "https://api.github.com/repos/calrissian/accumulo-recipes", "Date": "2014-05-11T04:39:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (apolloSwitcher.isNamespaceLockSwitchOff()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7475/buggy-version/apollo-adminservice.src.main.java.com.ctrip.framework.apollo.adminservice.aop.NamespaceLockAspect.java", "BodyUseAPI": [], "Fixed commit": "835fdcbbdb1a49309bbbf8ec09464f71b4ac291b", "Url": "https://api.github.com/repos/lepdou/apollo", "Date": "2016-07-15T07:19:32Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cmdOpts.get(\"assertpagefile\")) != null) { assertpage = cmdOpts.get(\"assertpagefile\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5483/buggy-version/src.VooDooDriver.java", "BodyUseAPI": ["cmdOpts.get(\"assertpagefile\").toString()", "voodoodriver.SodaHash.get(java.lang.String)"], "Fixed commit": "d5ad8a6780214f2add343f9fefc04cd9d18ea86f", "Url": "https://api.github.com/repos/trampus/VooDooDriver", "Date": "2011-07-12T00:22:28Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSpeed()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5213/buggy-version/src.drawnobjects.PhysicDrawnObject.java", "BodyUseAPI": [], "Fixed commit": "89c1e68146a1b78759f1e5c278dc69147791cc69", "Url": "https://api.github.com/repos/Mikkomario/RaceKingdoms", "Date": "2013-06-29T13:52:21Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (force <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5213/buggy-version/src.drawnobjects.PhysicDrawnObject.java", "BodyUseAPI": [], "Fixed commit": "89c1e68146a1b78759f1e5c278dc69147791cc69", "Url": "https://api.github.com/repos/Mikkomario/RaceKingdoms", "Date": "2013-06-29T13:52:21Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.eucalyptus.auth.euare.identity.IdentityService.isNotFoundError(e))) { throw com.eucalyptus.auth.euare.identity.IdentityService.handleException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7912/buggy-version/clc.modules.euare.src.main.java.com.eucalyptus.auth.euare.identity.IdentityService.java", "BodyUseAPI": ["com.eucalyptus.auth.euare.identity.IdentityService.handleException(com.eucalyptus.auth.AuthException)"], "Fixed commit": "54a86b6fe728c3769190c5a6b1d56807316036b9", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2016-06-29T23:52:59Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eucalyptus.util.Exceptions.findCause(java.lang.Exception,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((auth == null) || (!(com.eucalyptus.auth.euare.identity.IdentityService.isNotFoundError(auth)))) { com.eucalyptus.auth.euare.identity.IdentityService.logger.error(e, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7912/buggy-version/clc.modules.euare.src.main.java.com.eucalyptus.auth.euare.identity.IdentityService.java", "BodyUseAPI": [], "Fixed commit": "54a86b6fe728c3769190c5a6b1d56807316036b9", "Url": "https://api.github.com/repos/eucalyptus/eucalyptus", "Date": "2016-06-29T23:52:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curValue) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5878/buggy-version/src.gr.hua.data_structures.IntegerValue.java", "BodyUseAPI": [], "Fixed commit": "ae3ba8860959980a4a90f66866cfc433a268705d", "Url": "https://api.github.com/repos/nickzorb/jMinerAndPredictor", "Date": "2013-09-21T03:47:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curValue) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5878/buggy-version/src.gr.hua.data_structures.IntegerValue.java", "BodyUseAPI": [], "Fixed commit": "ae3ba8860959980a4a90f66866cfc433a268705d", "Url": "https://api.github.com/repos/nickzorb/jMinerAndPredictor", "Date": "2013-09-21T03:47:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curValue) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5878/buggy-version/src.gr.hua.data_structures.DoubleValue.java", "BodyUseAPI": [], "Fixed commit": "ae3ba8860959980a4a90f66866cfc433a268705d", "Url": "https://api.github.com/repos/nickzorb/jMinerAndPredictor", "Date": "2013-09-21T03:47:54Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curValue) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5878/buggy-version/src.gr.hua.data_structures.DoubleValue.java", "BodyUseAPI": [], "Fixed commit": "ae3ba8860959980a4a90f66866cfc433a268705d", "Url": "https://api.github.com/repos/nickzorb/jMinerAndPredictor", "Date": "2013-09-21T03:47:54Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curBuf.getLength()) < (org.hedera.io.etl.RevisionETLReader.GOOD_ENOUGH_REVISION)) { if (hasNextRevision()) { continue; }else { flag = 3; if ((meta) != null) { freeKey(key); freeValue(value); boolean res = extractor.extract(prevBuf, meta, key, value); if (!res) { continue; }else return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6417/buggy-version/java.main.org.hedera.io.etl.RevisionETLReader.java", "BodyUseAPI": [], "Fixed commit": "ef8bfb1a7fa8083e5871ff2eeca66e66c90e8b10", "Url": "https://api.github.com/repos/antoine-tran/Hedera", "Date": "2014-06-10T15:28:00Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.pantas.billsplitter.dataaccess.ParticipantStore.getById(participantDto.participantId)", "ch.pantas.billsplitter.services.UserService.getMe()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (participant.getUserId().equals(me.getId())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5170/buggy-version/app.src.main.java.ch.pantas.billsplitter.services.ImportService.java", "BodyUseAPI": [], "Fixed commit": "9cae40d2809abddff8c3c2f44a7d242308956e66", "Url": "https://api.github.com/repos/ybonjour/BillSplitter", "Date": "2014-10-27T07:18:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pattern.isEmpty()) { i = j + 1; }else { i = j + (pattern.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/4544/buggy-version/core.src.main.java.org.renjin.primitives.text.regex.FixedRE.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "a87bb8cf252ceb73a3e7d7f72d4d3669c743477f", "Url": "https://api.github.com/repos/bedatadriven/renjin", "Date": "2013-11-07T21:41:22Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bottomNavigationView.getVisibility()) == (android.view.View.VISIBLE)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6345/buggy-version/app.src.main.java.com.winsun.fruitmix.ui.MediaMainFragment.java", "BodyUseAPI": [], "Fixed commit": "be9a21f17652325206c378c39cc85657dabc3a27", "Url": "https://api.github.com/repos/andywu91/fruitMix-android", "Date": "2017-03-07T10:31:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(gamepad1.right_stick_y)) > 0.1) { motorBR.setPower(gamepad1.left_stick_y); motorFR.setPower(gamepad1.left_stick_y); }else { motorFR.setPower(0.0); motorBR.setPower(0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/7536/buggy-version/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.RookieCode.java", "BodyUseAPI": [], "Fixed commit": "829732781ae8c3423479b44099a7b6ca801723c6", "Url": "https://api.github.com/repos/emccosky/SnakeByte4546", "Date": "2015-09-08T21:00:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isIndexValid(fromIndex)) && (isIndexValid(toIndex))) { missionProxy.swap(fromIndex, toIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/9162/buggy-version/Android.src.org.droidplanner.android.widgets.adapterViews.MissionItemListAdapter.java", "BodyUseAPI": ["org.droidplanner.android.proxy.mission.MissionProxy.swap(int,int)"], "Fixed commit": "3d02b4ddcc023cf502c8709a0af2f316cf37778d", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2015-08-25T23:20:44Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != source) source = java.net.URLDecoder.decode(source, enc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5116/buggy-version/common.src.main.java.de.zib.vold.common.URIKey.java", "BodyUseAPI": ["java.net.URLDecoder.decode(java.lang.String,java.lang.String)"], "Fixed commit": "c1086174574b65aa7836532464006397b787aa17", "Url": "https://api.github.com/repos/zibhub/VolD", "Date": "2011-11-11T17:24:43Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNestedObjectReference(tmpRI)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6283/buggy-version/sql.src.main.java.io.crate.analyze.relations.AbstractTableRelation.java", "BodyUseAPI": [], "Fixed commit": "9db493b7bbe3151935e5cd8ca143cb64887ff461", "Url": "https://api.github.com/repos/crate/crate", "Date": "2016-08-22T12:34:54Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (defaultUri != null) { xdi2.core.xri3.XDI3SubSegment defaultUriXdiInstanceUnorderedArcXri = xdi2.core.features.nodetypes.XdiAbstractInstanceUnordered.createArcXriFromHash(defaultUri, false); xdi2.core.features.nodetypes.XdiAttributeInstance defaultUriXdiAttributeInstance = uriXdiAttributeClass.setXdiInstanceUnordered(defaultUriXdiInstanceUnorderedArcXri); xdi2.core.features.nodetypes.XdiAttributeSingleton defaultUriXdiAttributeSingleton = cloudNumberXdiPeerRoot.getXdiAttributeSingleton(xdi2.xrinet.XdiProxyMessagingTarget.XRI_URI, true); xdi2.core.features.equivalence.Equivalence.setReferenceContextNode(defaultUriXdiAttributeSingleton.getContextNode(), defaultUriXdiAttributeInstance.getContextNode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1601/buggy-version/src.main.java.xdi2.xrinet.XdiProxyMessagingTarget.java", "BodyUseAPI": ["xdi2.core.features.nodetypes.XdiAbstractInstanceUnordered.createArcXriFromHash(java.lang.String,boolean)"], "Fixed commit": "526e9b0cbc8c656e6ea9ac9c98ff110c101ab695", "Url": "https://api.github.com/repos/peacekeeper/xdi2-xrinet", "Date": "2013-04-27T00:35:00Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerColor.equals(\"black\")) { for (int i = 0; i < 64; i++) { getSquareImageView(i).setOnClickListener(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3831/buggy-version/app.src.main.java.ca.ggolda.android_tab_chess.BoardActivity.java", "BodyUseAPI": [], "Fixed commit": "a248f3aac5c2c4d91181bb079c3db806287048a3", "Url": "https://api.github.com/repos/simplegr33n/android-tab-chess", "Date": "2016-12-21T02:52:50Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerColor.equals(\"white\")) { for (int i = 0; i < 64; i++) { getSquareImageView(i).setOnClickListener(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/3831/buggy-version/app.src.main.java.ca.ggolda.android_tab_chess.BoardActivity.java", "BodyUseAPI": [], "Fixed commit": "a248f3aac5c2c4d91181bb079c3db806287048a3", "Url": "https://api.github.com/repos/simplegr33n/android-tab-chess", "Date": "2016-12-21T02:52:50Z"},
{"Line": "=>602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.alibaba.druid.pool.StringUtils.equals(connectProperties.getProperty(name), value)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1157/buggy-version/src.main.java.com.alibaba.druid.pool.DruidAbstractDataSource.java", "BodyUseAPI": [], "Fixed commit": "74b456d659ede341cd3e74b935c18052200f5f1b", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2016-12-12T09:05:02Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.theoriginalbit.moarperipherals.common.tile.TileFireworks.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (stack == null) { return new java.lang.Object[]{ false, \"nothing in slot\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5241/buggy-version/src.main.java.com.theoriginalbit.moarperipherals.common.tile.TileFireworks.java", "BodyUseAPI": [], "Fixed commit": "f09a68f603839983cb280e53b253adc5524db9aa", "Url": "https://api.github.com/repos/theoriginalbit/MoarPeripherals", "Date": "2014-10-25T02:23:05Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.mucommander.file.impl.local.LocalFile.IS_WINDOWS) Kernel32API.INSTANCE.SetErrorMode(Kernel32API.SEM_NOOPENFILEERRORBOX);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6591/buggy-version/source.com.mucommander.file.impl.local.LocalFile.java", "BodyUseAPI": [], "Fixed commit": "97859869b63cf5378b365f09fda0b936fd1c933e", "Url": "https://api.github.com/repos/raisercostin/mucommander", "Date": "2008-02-27T00:32:54Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mapOfSlicerMembers.containsKey(column.getTable().getRelation())) { if (!(done.containsKey(column.getTable().getRelation()))) { java.util.Set<mondrian.rolap.RolapMember> slicerMembersArray = mapOfSlicerMembers.get(column.getTable().getRelation()); java.util.List<mondrian.rolap.RolapMember> slicerMembers = new java.util.ArrayList<mondrian.rolap.RolapMember>(slicerMembersArray); mondrian.rolap.RolapMember allMember = null; for (mondrian.rolap.RolapMember slicerMember : slicerMembers) { if (slicerMember.isAll()) { allMember = slicerMember; break; } } if (allMember != null) { slicerMembers.remove(allMember); } if ((slicerMembers.size()) > 0) { final java.lang.String where = mondrian.rolap.SqlConstraintUtils.generateMultiValueInExpr(sqlQuery, baseCube, aggStar, slicerMembers, ((mondrian.rolap.RolapLevel) (slicerMembers.get(0).getHierarchy().getLevels()[0])), restrictMemberTypes, null); sqlQuery.addWhere(where); }else { final java.lang.StringBuilder buf = new java.lang.StringBuilder(); sqlQuery.getDialect().quote(buf, value, column.getDatatype()); sqlQuery.addWhere(expr, \" = \", buf.toString()); } done.put(column.getTable().getRelation(), java.lang.Boolean.TRUE); } }else { final java.lang.StringBuilder buf = new java.lang.StringBuilder(); sqlQuery.getDialect().quote(buf, value, column.getDatatype()); sqlQuery.addWhere(expr, \" = \", buf.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6668/buggy-version/src.main.mondrian.rolap.SqlConstraintUtils.java", "BodyUseAPI": ["sqlQuery.getDialect().quote(java.lang.StringBuilder,java.lang.String,column.getDatatype())", "RolapStar.Column.getTable()", "java.util.Map<mondrian.olap.MondrianDef.RelationOrJoin, java.util.Set<mondrian.rolap.RolapMember>>.get(column.getTable().getRelation())", "RolapStar.Column.getTable()", "column.getTable().getRelation()", "RolapStar.Column.getTable()", "column.getTable().getRelation()", "RolapStar.Column.getDatatype()", "sqlQuery.getDialect().quote(java.lang.StringBuilder,java.lang.String,column.getDatatype())", "java.util.Map<mondrian.olap.MondrianDef.RelationOrJoin, java.lang.Boolean>.put(column.getTable().getRelation(),java.lang.Boolean)", "column.getTable().getRelation()", "RolapStar.Column.getDatatype()", "java.util.Map<mondrian.olap.MondrianDef.RelationOrJoin, java.lang.Boolean>.containsKey(column.getTable().getRelation())"], "Fixed commit": "92f55d405c9429c48c933524c8fcc46a8dbd963f", "Url": "https://api.github.com/repos/julianhyde/mondrian", "Date": "2012-05-04T15:35:45Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((slicerMembers.size()) > 0) { final java.lang.String where = mondrian.rolap.SqlConstraintUtils.generateMultiValueInExpr(sqlQuery, baseCube, aggStar, slicerMembers, ((mondrian.rolap.RolapLevel) (slicerMembers.get(0).getHierarchy().getLevels()[0])), restrictMemberTypes, null); sqlQuery.addWhere(where); }else { final java.lang.StringBuilder buf = new java.lang.StringBuilder(); sqlQuery.getDialect().quote(buf, value, column.getDatatype()); sqlQuery.addWhere(expr, \" = \", buf.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6668/buggy-version/src.main.mondrian.rolap.SqlConstraintUtils.java", "BodyUseAPI": ["java.util.List<mondrian.rolap.RolapMember>.get(int)", "slicerMembers.get(0).getHierarchy().getLevels()", "mondrian.rolap.SqlConstraintUtils.generateMultiValueInExpr(mondrian.rolap.sql.SqlQuery,mondrian.rolap.RolapCube,mondrian.rolap.aggmatcher.AggStar,java.util.List<mondrian.rolap.RolapMember>,((mondrian.rolap.RolapLevel) (slicerMembers.get(0).getHierarchy().getLevels()[0])),boolean,<nulltype>)", "slicerMembers.get(0).getHierarchy()"], "Fixed commit": "92f55d405c9429c48c933524c8fcc46a8dbd963f", "Url": "https://api.github.com/repos/julianhyde/mondrian", "Date": "2012-05-04T15:35:45Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (year.equals(command.getSection())) { section.setSelected(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/5829/buggy-version/src.magoffin.matt.ma2.dao.support.AlbumsByDateBrowseModePlugin.java", "BodyUseAPI": [], "Fixed commit": "eb3515f513c93da55c91ede5716244b1b89a2c24", "Url": "https://api.github.com/repos/msqr/matte", "Date": "2015-02-08T04:13:22Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compression < 1) { throw new java.lang.IllegalArgumentException(((\"a lower accuracy of \" + accuracy) + \" cannot be achieved\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/1052/buggy-version/src.main.java.TDigest.java", "BodyUseAPI": [], "Fixed commit": "799c9cd9a147475a4e1eeef427243b8fc0ea4561", "Url": "https://api.github.com/repos/ChamodDamitha/TDigest", "Date": "2017-08-14T04:27:41Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreTransform) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/668/buggy-version/jme3-core.src.main.java.com.jme3.scene.Geometry.java", "BodyUseAPI": [], "Fixed commit": "e4bfe8a80d3691a12fb915d2db75c5112f617734", "Url": "https://api.github.com/repos/JavaSaBr/jmonkeyengine", "Date": "2017-09-22T16:36:52Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fsImage.getWidth()) < 1) { fsImage = fsImage.createScaled(1, fsImage.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6258/buggy-version/flying-saucer-core.src.main.java.org.xhtmlrenderer.render.AbstractOutputDevice.java", "BodyUseAPI": ["org.xhtmlrenderer.extend.FSImage.createScaled(int,fsImage.getHeight())", "org.xhtmlrenderer.extend.FSImage.getHeight()"], "Fixed commit": "d1e2d37805995cf4d303ddc999ae04936586b47d", "Url": "https://api.github.com/repos/tobymckoi/flyingsaucer", "Date": "2014-11-06T06:33:03Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fsImage.getHeight()) < 1) { fsImage = fsImage.createScaled(fsImage.getWidth(), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/6258/buggy-version/flying-saucer-core.src.main.java.org.xhtmlrenderer.render.AbstractOutputDevice.java", "BodyUseAPI": ["org.xhtmlrenderer.extend.FSImage.createScaled(fsImage.getWidth(),int)", "org.xhtmlrenderer.extend.FSImage.getWidth()"], "Fixed commit": "d1e2d37805995cf4d303ddc999ae04936586b47d", "Url": "https://api.github.com/repos/tobymckoi/flyingsaucer", "Date": "2014-11-06T06:33:03Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (date.before(minDateRoundedUp)) { date = minDateRoundedUp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2643/buggy-version/singledateandtimepicker.src.main.java.com.github.florent37.singledateandtimepicker.SingleDateAndTimePicker.java", "BodyUseAPI": [], "Fixed commit": "3d08b8ac35fce010da0e60e42d40efd9062ee1a5", "Url": "https://api.github.com/repos/sacrefacker/SingleDateAndTimePicker", "Date": "2017-08-16T14:38:50Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.florent37.singledateandtimepicker.SingleDateAndTimePicker.roundUpMinutes(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (date.after(maxDateRoundedDown)) { date = maxDateRoundedDown; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V12/2643/buggy-version/singledateandtimepicker.src.main.java.com.github.florent37.singledateandtimepicker.SingleDateAndTimePicker.java", "BodyUseAPI": [], "Fixed commit": "3d08b8ac35fce010da0e60e42d40efd9062ee1a5", "Url": "https://api.github.com/repos/sacrefacker/SingleDateAndTimePicker", "Date": "2017-08-16T14:38:50Z"},
{"Line": "=>860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["listItem.getString(com.easydiner.fragment.DetailsFragment.TAG_ADDRESS).split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((addressArray.length) == 3) { tvSndAddtessDetails.setText(((addressArray[2]) + \",\")); }else { tvSndAddtessDetails.setText(((addressArray[0]) + \",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2232/buggy-version/src.com.easydiner.fragment.DetailsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "7a1a1ab146a84c6a9287ffcd8477b8abce2c245d", "Url": "https://api.github.com/repos/Sidharth666/EazyDiner", "Date": "2015-05-12T18:04:21Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((state.getWindow()) == (org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow())) { org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().setText(I18n.EDITORTEXT_SyncEdit); org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().setSize(org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().computeSize(SWT.DEFAULT, SWT.DEFAULT)); org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().update(); }else { state.getWindow().setStatus(I18n.EDITORTEXT_SyncEdit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3247/buggy-version/src.org.nschmidt.ldparteditor.shells.editortext.EditorTextWindow.java", "BodyUseAPI": ["state.getWindow().setStatus(I18n.EDITORTEXT_SyncEdit)", "org.nschmidt.ldparteditor.composites.compositetab.CompositeTabState.getWindow()"], "Fixed commit": "2a14d1acb81e6aedd1cfdc44efbf7792ee6edf1d", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-24T09:36:53Z"},
{"Line": "=>712", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((state.getWindow()) == (org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow())) { org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().setText(I18n.EDITORTEXT_SyncEditDeactivated); org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().setSize(org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().computeSize(SWT.DEFAULT, SWT.DEFAULT)); org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().update(); }else { state.getWindow().setStatus(I18n.EDITORTEXT_SyncEditDeactivated); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3247/buggy-version/src.org.nschmidt.ldparteditor.shells.editortext.EditorTextWindow.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.composites.compositetab.CompositeTabState.getWindow()", "state.getWindow().setStatus(I18n.EDITORTEXT_SyncEditDeactivated)"], "Fixed commit": "2a14d1acb81e6aedd1cfdc44efbf7792ee6edf1d", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-24T09:36:53Z"},
{"Line": "=>794", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state.window[0]) == (org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow())) { org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().setText(I18n.EDITORTEXT_SyncEditDeactivated); org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().setSize(org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().computeSize(SWT.DEFAULT, SWT.DEFAULT)); org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().update(); }else { state.window[0].setStatus(I18n.EDITORTEXT_SyncEditDeactivated); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3247/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": ["state.window[0].setStatus(I18n.EDITORTEXT_SyncEditDeactivated)"], "Fixed commit": "2a14d1acb81e6aedd1cfdc44efbf7792ee6edf1d", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-24T09:36:53Z"},
{"Line": "=>999", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state.window[0]) == (org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow())) { if (state.isReplacingVertex()) { org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().setText(((((((state.currentLineIndex) + 1) + \" : \") + ((caret_offset - (compositeText[0].getOffsetAtLine(state.currentLineIndex))) + 1)) + \" \") + (org.nschmidt.ldparteditor.i18n.I18n.EDITORTEXT_SyncEdit))); }else { org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().setText(((((state.currentLineIndex) + 1) + \" : \") + ((caret_offset - (compositeText[0].getOffsetAtLine(state.currentLineIndex))) + 1))); } org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().setSize(org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().computeSize(SWT.DEFAULT, SWT.DEFAULT)); org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().update(); }else { if (state.isReplacingVertex()) { state.window[0].setStatus(((((((state.currentLineIndex) + 1) + \" : \") + ((caret_offset - (compositeText[0].getOffsetAtLine(state.currentLineIndex))) + 1)) + \" \") + (org.nschmidt.ldparteditor.i18n.I18n.EDITORTEXT_SyncEdit))); }else { state.window[0].setStatus(((((state.currentLineIndex) + 1) + \" : \") + ((caret_offset - (compositeText[0].getOffsetAtLine(state.currentLineIndex))) + 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3247/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTab.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().setText(((((state.currentLineIndex) + 1) + \" : \") + ((caret_offset - (compositeText[0].getOffsetAtLine(state.currentLineIndex))) + 1)))", "compositeText[0].getOffsetAtLine(state.currentLineIndex)", "compositeText[0].getOffsetAtLine(state.currentLineIndex)", "state.window[0].setStatus(((((((state.currentLineIndex) + 1) + \" : \") + ((caret_offset - (compositeText[0].getOffsetAtLine(state.currentLineIndex))) + 1)) + \"   \") + (org.nschmidt.ldparteditor.i18n.I18n.EDITORTEXT_SyncEdit)))", "org.nschmidt.ldparteditor.composites.compositetab.CompositeTabState.isReplacingVertex()", "compositeText[0].getOffsetAtLine(state.currentLineIndex)", "org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getStatusLabel().setText(((((((state.currentLineIndex) + 1) + \" : \") + ((caret_offset - (compositeText[0].getOffsetAtLine(state.currentLineIndex))) + 1)) + \"   \") + (org.nschmidt.ldparteditor.i18n.I18n.EDITORTEXT_SyncEdit)))", "org.nschmidt.ldparteditor.composites.compositetab.CompositeTabState.isReplacingVertex()", "state.window[0].setStatus(((((state.currentLineIndex) + 1) + \" : \") + ((caret_offset - (compositeText[0].getOffsetAtLine(state.currentLineIndex))) + 1)))", "compositeText[0].getOffsetAtLine(state.currentLineIndex)"], "Fixed commit": "2a14d1acb81e6aedd1cfdc44efbf7792ee6edf1d", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-07-24T09:36:53Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == (-1)) { b = disp_name.indexOf(\"From\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6890/buggy-version/src.com.elitecore.controller.operationcontroller.java", "BodyUseAPI": [], "Fixed commit": "431f347d79d81adf93272ca650eed4dd2765acc2", "Url": "https://api.github.com/repos/manush96/chips", "Date": "2016-08-16T18:29:06Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b == (-1)) { b = disp_name.indexOf(\"FROM\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6890/buggy-version/src.com.elitecore.controller.operationcontroller.java", "BodyUseAPI": [], "Fixed commit": "431f347d79d81adf93272ca650eed4dd2765acc2", "Url": "https://api.github.com/repos/manush96/chips", "Date": "2016-08-16T18:29:06Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1804/buggy-version/src.main.java.ilarkesto.core.base.BigDecimalSumBuilder.java", "BodyUseAPI": [], "Fixed commit": "743fc28ebd078d81c302d255f65ae9acdd11300f", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2015-05-05T17:01:12Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(line.equals(\"\"))) { for (java.lang.String word : pairs) { int index1 = java.lang.Integer.parseInt(word.split(\"-\")[0]); int index2 = java.lang.Integer.parseInt(word.split(\"-\")[1]); if (!(align.containsKey(index1))) align.put(index1, new java.util.ArrayList<java.lang.Integer>()); align.get(index1).add(index2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1870/buggy-version/stanford_parser.stanford-parser-full-2015-12-09.AlignmentProcessor.java", "BodyUseAPI": [], "Fixed commit": "f1bf847a70ae9a68b2ca681046fdf5d4ae34a122", "Url": "https://api.github.com/repos/RoseTX/cs388_project", "Date": "2016-05-12T06:54:16Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((moves.length) == 1) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/355/buggy-version/src.foogame.TPNInput.java", "BodyUseAPI": [], "Fixed commit": "472250226f6e5bcf90ce1413e073641f75c3ace1", "Url": "https://api.github.com/repos/raptortech-js/Tak-AI", "Date": "2017-01-31T21:46:28Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((perms.isAdmin()) || (perms.canInvite()))) { throw new com.stylease.ResourceForbiddenException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3323/buggy-version/src.main.java.com.stylease.BoardFormController.java", "BodyUseAPI": [], "Fixed commit": "d41c922e75c573bb7d19178b25696cf934b6adaa", "Url": "https://api.github.com/repos/vpallone/Stylease", "Date": "2016-11-21T23:57:38Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getComponentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tempCurrentArrayType == (java.lang.Object.class)) { tempTargetArrayType = java.lang.Object.class; }else { java.lang.Class<? extends de.gebit.integrity.parameter.conversion.Conversion<?, ?>> tempConversionClass = findConversion(tempCurrentArrayType, aTargetType, someVisitedValues); de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.ConversionKey tempKey = conversionToKey.get(tempConversionClass); tempTargetArrayType = tempKey.getTargetType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/896/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": ["de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.findConversion(java.lang.Class<?>,java.lang.Class<?>,java.util.Set<java.lang.Object>)"], "Fixed commit": "59b6725350be85d726496ef1ad4041c9cafec13e", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-08-08T12:09:33Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.convertSingleValueToTargetType(java.lang.Class<?>,java.lang.Class<?>,java.lang.Object,de.gebit.integrity.parameter.conversion.UnresolvableVariableHandling,java.util.Set<java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tempTargetArrayType.isAssignableFrom(tempConvertedValue.getClass()))) { tempTargetArrayType = java.lang.Object.class; java.lang.Object tempOldArray = tempArray; tempArray = java.lang.reflect.Array.newInstance(tempTargetArrayType, java.lang.reflect.Array.getLength(aValue)); java.lang.System.arraycopy(tempOldArray, 0, tempArray, 0, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/896/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": [], "Fixed commit": "59b6725350be85d726496ef1ad4041c9cafec13e", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-08-08T12:09:33Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vWriter) != null) { vWriter.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4135/buggy-version/real_time.surface_src.java_src.Alice.src.main.java.com.roboclub.robobuggy.nodes.VisionNode.java", "BodyUseAPI": [], "Fixed commit": "6d3bd57fdaefc3a86a49d6450bfa39727af3f89f", "Url": "https://api.github.com/repos/CMU-Robotics-Club/RoboBuggy", "Date": "2015-12-17T07:56:23Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPaymentRequestUri()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1868/buggy-version/payments.src.main.java.com.coinblesk.payments.communications.peers.nfc.NFCServerACS2.java", "BodyUseAPI": [], "Fixed commit": "135c06230b7d57244e0da1d663e96ec65b81a6cc", "Url": "https://api.github.com/repos/coinblesk/coinblesk-client-gui", "Date": "2016-03-13T13:26:04Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (numCalls > 1) return edu.berkeley.xtrace.XTraceContext.fork(numCalls, \"RPC_CALL\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8938/buggy-version/src.java.src.main.java.edu.berkeley.xtrace.XTraceContext.java", "BodyUseAPI": ["edu.berkeley.xtrace.XTraceContext.fork(int,java.lang.String)"], "Fixed commit": "e317589ff8e4142e49caa11e6ca03041f720ceb3", "Url": "https://api.github.com/repos/ww2cmu/X-Trace", "Date": "2011-06-10T13:41:22Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.berkeley.xtrace.XTraceContext.getThreadContext().previous) != null) { event.put(\"Edge\", edu.berkeley.xtrace.XTraceContext.getThreadContext().previous.getOpIdString()); edu.berkeley.xtrace.XTraceContext.getThreadContext().previous = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8938/buggy-version/src.java.src.main.java.edu.berkeley.xtrace.XTraceContext.java", "BodyUseAPI": [], "Fixed commit": "e317589ff8e4142e49caa11e6ca03041f720ceb3", "Url": "https://api.github.com/repos/ww2cmu/X-Trace", "Date": "2011-06-10T13:41:22Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.berkeley.xtrace.XTraceContext.context.get()) == null) return new edu.berkeley.xtrace.XTraceMetadata[]{ null };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8938/buggy-version/src.java.src.main.java.edu.berkeley.xtrace.XTraceContext.java", "BodyUseAPI": [], "Fixed commit": "e317589ff8e4142e49caa11e6ca03041f720ceb3", "Url": "https://api.github.com/repos/ww2cmu/X-Trace", "Date": "2011-06-10T13:41:22Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.apache.commons.lang.ArrayUtils.contains(edu.cornell.med.icb.goby.alignments.AlignmentReaderImpl.COMPACT_ALIGNMENT_FILE_REQUIRED_EXTS, fileExtension))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/318/buggy-version/src.edu.cornell.med.icb.goby.alignments.AlignmentReaderImpl.java", "BodyUseAPI": [], "Fixed commit": "bd6e2268d63e062e7000b5a1f0f459ddb4ba9c5f", "Url": "https://api.github.com/repos/CampagneLaboratory/goby", "Date": "2012-07-20T18:11:32Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (word.contains(\"_\")) { java.lang.System.out.println(\"Unterstriche im zu findenden Wort sind unzulaessig!!\"); java.lang.System.out.print(\"\\n\\n\"); continue init; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8373/buggy-version/src.de.hft_stuttgart.wiest_wolf.Hangman.java", "BodyUseAPI": [], "Fixed commit": "e9848fe9d549f1a3cd150f8fa93b937cf357981d", "Url": "https://api.github.com/repos/9Lukas5/Hangman", "Date": "2016-12-12T12:59:33Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (database.HHD.fileExiste(((database.AbstractDataBase.root) + \"/temp/user update.txt\"))) { database.HHD.copyFile(((database.AbstractDataBase.root) + \"/temp/reason.txt\"), logic.web.Web.myPath[4]); }else { database.HHD.cleanFile(logic.web.Web.myPath[4]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9141/buggy-version/control.logic.web.Web.java", "BodyUseAPI": ["database.HHD.copyFile(((database.AbstractDataBase.root) + \"/temp/reason.txt\"),java.lang.String)"], "Fixed commit": "2ed4c3b7da4f936f96f27033f6b878180341acb5", "Url": "https://api.github.com/repos/xloypaypa/WalletLogic", "Date": "2015-05-28T09:22:52Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(browser.afh.BuildConfig.DEBUG)) { com.crashlytics.android.Crashlytics.logException(e); com.crashlytics.android.Crashlytics.log((\"flid : \" + (url.flid))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1704/buggy-version/app.src.main.java.browser.afh.data.FindFiles.java", "BodyUseAPI": [], "Fixed commit": "6bf0185c05de90265bfe2e823efafad6fe302deb", "Url": "https://api.github.com/repos/out386/AndroidFileHost_Browser", "Date": "2017-03-20T06:21:20Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(browser.afh.BuildConfig.DEBUG)) { com.crashlytics.android.Crashlytics.logException(e); com.crashlytics.android.Crashlytics.log((\"did : \" + did)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1704/buggy-version/app.src.main.java.browser.afh.data.FindFiles.java", "BodyUseAPI": [], "Fixed commit": "6bf0185c05de90265bfe2e823efafad6fe302deb", "Url": "https://api.github.com/repos/out386/AndroidFileHost_Browser", "Date": "2017-03-20T06:21:20Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wd.getReplayTaskUUID()) != null) { synced = false; }else if (wd.isBusy()) { java.lang.String key = wd.getBusyTaskKey(); if ((key.equals(\"multiBitDownloadListener.downloadingText\")) || (key.equals(\"singleWalletPanel.waiting.text\"))) { synced = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5646/buggy-version/src.main.java.org.sparkbit.jsonrpc.SparkBitJSONRPCServiceImpl.java", "BodyUseAPI": ["org.multibit.model.bitcoin.WalletData.isBusy()", "org.multibit.model.bitcoin.WalletData.getBusyTaskKey()"], "Fixed commit": "d58027962161c1c4c6e598dfac8632e2afaf195b", "Url": "https://api.github.com/repos/coinspark/sparkbit", "Date": "2014-11-15T07:12:59Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["passwordField.getText().toString()", "passwordField2.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(userName.isEmpty())) && (!(passWord.equals(passWord2)))) { android.widget.Toast.makeText(getApplicationContext(), \"Error: passwords fields must match\", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getApplicationContext(), \"Error: invalid username or password\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3238/buggy-version/app.src.main.java.com.example.alex.assignment5.RegisterActivity.java", "BodyUseAPI": [], "Fixed commit": "8e430ab9ad14864006772293a7f8e6a97e01c65c", "Url": "https://api.github.com/repos/NukDae/LargeScaleApp", "Date": "2016-03-27T21:45:35Z"},
{"Line": "=>768", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Column.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((col.getPrefix().equals(tname)) && (db.getRelation(tname).attributeExists(aName))) { if ((tempAlias != null) && (tempAlias == (tnames[1]))) { matchCount++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3914/buggy-version/src.parser.java", "BodyUseAPI": [], "Fixed commit": "da3e2beb05b60d422618ea7f887892f354f7bed8", "Url": "https://api.github.com/repos/ebull1985/csc4340", "Date": "2017-03-27T03:50:04Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((specialTabButton.getParent()) == (bottomTabs)) { bottomTabs.removeView(specialTabButton); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4521/buggy-version/android.app.src.main.java.com.reactnativenavigation.layouts.BottomTabsLayout.java", "BodyUseAPI": ["com.reactnativenavigation.views.BottomTabs.removeView(android.widget.ImageButton)"], "Fixed commit": "52513fa7efc1e21352f5946fe099f6c60a0593d4", "Url": "https://api.github.com/repos/thanhzusu/react-native-navigation", "Date": "2017-12-25T23:49:15Z"},
{"Line": "=>647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((a1in.size()) > 0) || ((a1out.size()) > 0)) || ((am.size()) > 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1582/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.twoq.O2QCache.java", "BodyUseAPI": [], "Fixed commit": "da8853fd5c29823326ee382adc79ddb305f28ddd", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-07-12T13:44:25Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.Run<?, ?>.asFlowExecutionOwner()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (owner == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2880/buggy-version/src.main.java.org.jenkinsci.plugins.workflow.steps.TimeoutStepExecution.java", "BodyUseAPI": [], "Fixed commit": "d75f9e33e45f549707c4ce4788ce1634ee44341c", "Url": "https://api.github.com/repos/ikedam/workflow-basic-steps-plugin", "Date": "2016-09-17T15:37:20Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(undoList.isScheduled())) { getController().update(undoList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7121/buggy-version/src.main.java.com.elmakers.mine.bukkit.action.CastContext.java", "BodyUseAPI": ["com.elmakers.mine.bukkit.api.magic.MageController.update(com.elmakers.mine.bukkit.api.block.UndoList)"], "Fixed commit": "29ebdc7b8394505492754a860eeab988e189b0b5", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2015-03-21T11:55:04Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (TTTCore.mg.getArena(args[1].toLowerCase()).isPresent()) { TTTCore.locale.getLocalizable(\"error.arena.already-exists\").withPrefix(Color.ERROR).sendTo(sender); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5613/buggy-version/src.main.java.net.caseif.ttt.command.handler.arena.ImportCommand.java", "BodyUseAPI": [], "Fixed commit": "7b6a9fd4298b7a1e346cbc0dadba30bf11142491", "Url": "https://api.github.com/repos/caseif/TTT", "Date": "2016-01-08T04:13:32Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needsRestructure) { restructureTree(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3686/buggy-version/src.main.java.macrobase.analysis.summary.itemset.StreamingFPGrowth.java", "BodyUseAPI": [], "Fixed commit": "d70b2e93c452eaf87dd3e1e27858dbfc0330b2e5", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2016-02-23T05:01:54Z"},
{"Line": "=>1072", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 24) { notificationBuilder.setCustomContentView(contentView); }else notificationBuilder.setContent(contentView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3861/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.PhoneProfilesService.java", "BodyUseAPI": [], "Fixed commit": "9d4b425367d289e70db98bdd3b613cf58a2b6a3d", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2017-09-23T08:54:30Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.spittr.service.UserService.getUserInfoById(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (user != null) { result.add(\"userInfo\", com.spittr.utils.convert.UserConvert.user2Json(user)); result.addProperty(\"code\", CodeConstant.SUCCESS); }else { result.addProperty(\"code\", CodeConstant.ERR_USER_NOT_EXIST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4687/buggy-version/src.main.java.com.spittr.controller.UserController.java", "BodyUseAPI": ["com.google.gson.JsonObject.add(java.lang.String,com.spittr.utils.convert.UserConvert.user2Json(user))", "com.spittr.utils.convert.UserConvert.user2Json(com.spittr.model.User)"], "Fixed commit": "c60bff690dd856d915d6e3ad8c4e9ca04e7127cf", "Url": "https://api.github.com/repos/CodeTheft/spring-boot-demo", "Date": "2017-09-22T09:14:02Z"},
{"Line": "=>1812", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org2.eclipse.php.internal.core.ast.nodes.ThrowStatement.getExpression()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (expression instanceof org2.eclipse.php.internal.core.ast.nodes.ParenthesisExpression) { expression.accept(this); }else { java.lang.String text = document.get(((throwStatement.getStart()) + 5), expression.getStart()); if (text.trim().startsWith(\"(\")) { pushNodeInParentheses('(', ')', ((throwStatement.getStart()) + 5), expression.getEnd(), expression, TypeBracket.PARENTHESIS); }else { expression.accept(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/105/buggy-version/plugins.com.aptana.editor.php.formatter.src.com.aptana.editor.php.formatter.PHPFormatterVisitor.java", "BodyUseAPI": ["org2.eclipse.php.internal.core.ast.nodes.Expression.accept(com.aptana.editor.php.formatter.PHPFormatterVisitor)", "com.aptana.editor.php.formatter.PHPFormatterVisitor.pushNodeInParentheses(char,char,((throwStatement.getStart()) + 5),expression.getEnd(),org2.eclipse.php.internal.core.ast.nodes.Expression,TypeBracket.PARENTHESIS)", "org2.eclipse.php.internal.core.ast.nodes.Expression.getEnd()", "org2.eclipse.php.internal.core.ast.nodes.Expression.accept(com.aptana.editor.php.formatter.PHPFormatterVisitor)", "org2.eclipse.php.internal.core.ast.nodes.Expression.getStart()", "com.aptana.formatter.FormatterDocument.get(((throwStatement.getStart()) + 5),expression.getStart())"], "Fixed commit": "e4f7bf3a4620b2ea52b7dd8c4ee2baacb7320239", "Url": "https://api.github.com/repos/aptana/studio3-php", "Date": "2013-05-29T01:31:45Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.geofire.util.GeoUtils.distance(com.firebase.geofire.GeoLocation,com.firebase.geofire.GeoLocation)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tasksWithLocationMap.get(distance)) == null) { java.util.ArrayList<edu.uwm.ibidder.dbaccess.models.TaskModel> newList = new java.util.ArrayList<edu.uwm.ibidder.dbaccess.models.TaskModel>(); newList.add(task); tasksWithLocationMap.put(distance, newList); }else { tasksWithLocationMap.get(distance).add(task); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4327/buggy-version/app.src.main.java.edu.uwm.ibidder.Fragments.all_available_task.java", "BodyUseAPI": ["java.util.SortedMap<java.lang.Double, java.util.ArrayList<edu.uwm.ibidder.dbaccess.models.TaskModel>>.get(double)", "java.util.SortedMap<java.lang.Double, java.util.ArrayList<edu.uwm.ibidder.dbaccess.models.TaskModel>>.put(double,java.util.ArrayList<edu.uwm.ibidder.dbaccess.models.TaskModel>)", "tasksWithLocationMap.get(distance).add(edu.uwm.ibidder.dbaccess.models.TaskModel)"], "Fixed commit": "7695918546de0f189573ef9bf25a57ec10eb617d", "Url": "https://api.github.com/repos/patel8/IBidderCapstone", "Date": "2016-11-21T21:57:28Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((multiply) || (divide)) || (add)) || (subtract)) && (!(alreadyClear))) { displayTextView.setText(\"0\"); alreadyClear = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7438/buggy-version/app.src.main.java.jesse843.simplecalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "724823a736238232bdb346677e9a95bcdd7fe67e", "Url": "https://api.github.com/repos/jessdejong/android-calculator", "Date": "2016-07-22T03:22:04Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.wizard.widget.interceptor.InvocationContext.getWidget()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(widget.layoutName)) { layoutName = widget.layoutName; }else if (org.apache.commons.lang.StringUtils.isNotEmpty(widget.layoutRule)) { java.lang.String scriptName = com.dianping.wizard.script.Script.generateName(widget.name, \"layout\"); layoutName = ((java.lang.String) (engine.eval(new com.dianping.wizard.script.Script(scriptName, widget.layoutRule), invocation.getContext()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1691/buggy-version/src.main.java.com.dianping.wizard.widget.interceptor.LayoutInterceptor.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.isNotEmpty(widget.layoutRule)", "com.dianping.wizard.script.Script.generateName(widget.name,java.lang.String)", "com.dianping.wizard.script.ScriptEngine.eval(com.dianping.wizard.script.Script,invocation.getContext())"], "Fixed commit": "131f6b648514f3fc84ca856772f261e1d0ae461c", "Url": "https://api.github.com/repos/yucong/Wizard", "Date": "2013-12-31T02:08:03Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(widget.layoutName)) { layoutName = widget.layoutName; }else if (org.apache.commons.lang.StringUtils.isNotEmpty(widget.layoutRule)) { java.lang.String scriptName = com.dianping.wizard.script.Script.generateName(widget.name, \"layout\"); layoutName = ((java.lang.String) (com.dianping.wizard.widget.concurrent.LayoutParser.engine.eval(new com.dianping.wizard.script.Script(scriptName, widget.layoutRule), context))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1691/buggy-version/src.main.java.com.dianping.wizard.widget.concurrent.LayoutParser.java", "BodyUseAPI": ["com.dianping.wizard.script.ScriptEngine.eval(com.dianping.wizard.script.Script,java.util.Map<java.lang.String, java.lang.Object>)", "com.dianping.wizard.script.Script.generateName(widget.name,java.lang.String)", "org.apache.commons.lang.StringUtils.isNotEmpty(widget.layoutRule)"], "Fixed commit": "131f6b648514f3fc84ca856772f261e1d0ae461c", "Url": "https://api.github.com/repos/yucong/Wizard", "Date": "2013-12-31T02:08:03Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { final boolean madeDir = dir.mkdirs(); if (!madeDir) { throw new org.esa.beam.framework.gpf.OperatorException(((\"Could not create directory '\" + dir) + \"'.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2016/buggy-version/beam-globalbedo-bbdr-retrieval.src.main.java.org.esa.beam.globalbedo.bbdr.MeteosatBrfTilesExtractor.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "85bcf76a6e171aeb69090cd9fd3a7595a3a1c835", "Url": "https://api.github.com/repos/bcdev/beam-globalbedo", "Date": "2016-09-22T10:37:54Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dir.exists())) { final boolean madeDir = dir.mkdirs(); if (!madeDir) { throw new org.esa.beam.framework.gpf.OperatorException(((\"Could not create directory '\" + dir) + \"'.\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2016/buggy-version/beam-globalbedo-bbdr-retrieval.src.main.java.org.esa.beam.globalbedo.bbdr.AvhrrBrfTilesExtractor.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "85bcf76a6e171aeb69090cd9fd3a7595a3a1c835", "Url": "https://api.github.com/repos/bcdev/beam-globalbedo", "Date": "2016-09-22T10:37:54Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readyDatagrams != null) { for (communication.rudp.socket.RUDPDatagram d : readyDatagrams) listener_receive.onRUDPDatagramReceive(d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4799/buggy-version/eclipse_projects.RUDP.src.communication.rudp.socket.RUDPLink.java", "BodyUseAPI": [], "Fixed commit": "368badc9730415d60dbed7ab0e015f8e9ad81205", "Url": "https://api.github.com/repos/miun/mediasense", "Date": "2012-05-12T14:36:34Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (contact != null) { setContactNum(contact); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5569/buggy-version/src.com.codepath.beacon.models.Recipe.java", "BodyUseAPI": ["com.codepath.beacon.models.Recipe.setContactNum(java.lang.String)"], "Fixed commit": "0e4b54948c56b752f3384aaa583941dfdf89da1e", "Url": "https://api.github.com/repos/richk/ProjectBeacon", "Date": "2014-07-13T21:32:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasShowOriginal()) { showOriginalCB.deselectWithoutTriggering(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4438/buggy-version/src.main.java.pixelitor.filters.gui.ParametrizedAdjustPanel.java", "BodyUseAPI": [], "Fixed commit": "de439abb02ef8beac82121a4cf115d6215a7e61e", "Url": "https://api.github.com/repos/lbalazscs/Pixelitor", "Date": "2015-04-04T17:27:01Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.loader.getNamespace().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (iParentLoader != null) { for (final java.lang.String iKey : iParentLoader.getNamespace().keySet()) { iLoader.getNamespace().put(iKey, iParentLoader.getNamespace().get(iKey)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7520/buggy-version/maohifx.client.src.main.java.com.maohi.software.maohifx.client.extendedtab.ExtendedTab.java", "BodyUseAPI": ["javafx.fxml.FXMLLoader.getNamespace()", "iParentLoader.getNamespace().get(java.lang.String)", "javafx.fxml.FXMLLoader.getNamespace()", "iParentLoader.getNamespace().keySet()", "iLoader.getNamespace().put(java.lang.String,iParentLoader.getNamespace().get(iKey))"], "Fixed commit": "e16fb904c1b51f297ee1229ccba84e27021129ff", "Url": "https://api.github.com/repos/Heifara/maohifx", "Date": "2015-12-10T00:51:02Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arrayModel.getItems()) != null) { arrayModel.setItems(arrayModel.getItems()); if ((arrayModel.getItems().get$ref()) != null) { arrayModel.setItems(resolveSchema(arrayModel.getItems())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2829/buggy-version/modules.swagger-parser-v3.src.main.java.io.swagger.v3.parser.util.ResolverFully.java", "BodyUseAPI": ["io.swagger.v3.oas.models.media.ArraySchema.setItems(arrayModel.getItems())", "io.swagger.v3.oas.models.media.ArraySchema.setItems(io.swagger.v3.oas.models.media.Schema)", "arrayModel.getItems().get$ref()", "io.swagger.v3.oas.models.media.ArraySchema.getItems()", "io.swagger.v3.oas.models.media.ArraySchema.getItems()", "io.swagger.v3.oas.models.media.ArraySchema.getItems()", "io.swagger.v3.parser.util.ResolverFully.resolveSchema(arrayModel.getItems())"], "Fixed commit": "edbac9443007cd60dac456499b8ece30fb0f120e", "Url": "https://api.github.com/repos/joeljons/swagger-parser", "Date": "2017-11-19T02:54:35Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pathW.containsKey(adjacent)) { isPathVFound = true; if ((lengthV) < (shortestLengthV)) { pathV.put(new java.lang.Integer(adjacent), lengthV); shortestLengthV = lengthV; shortestLengthVVertex = adjacent; }else if ((lengthV) == (shortestLengthV)) { if ((pathW.get(adjacent)) < (shortestLengthW)) { pathV.put(new java.lang.Integer(adjacent), lengthV); shortestLengthV = lengthV; shortestLengthVVertex = adjacent; } }else { pathV.put(new java.lang.Integer(adjacent), lengthV); if ((pathW.get(adjacent)) == 0) { if ((shortestLengthV) != (java.lang.Integer.MAX_VALUE)) { int possibleNewShortestVVertex = adjacent; int possibleNewOptionV = evaluateOption(possibleNewShortestVVertex); int currentOptionV = evaluateOption(shortestLengthWVertex); if (possibleNewOptionV < currentOptionV) { shortestLengthV = pathV.get(adjacent); shortestLengthVVertex = adjacent; isPathVFound = true; } }else { shortestLengthV = pathV.get(adjacent); shortestLengthVVertex = adjacent; isPathVFound = true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8414/buggy-version/src.BreathFirstPath.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.put(java.lang.Integer,int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.put(java.lang.Integer,int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.put(java.lang.Integer,int)"], "Fixed commit": "5b803a02785c274dd7edb1be74c9ec9838598e13", "Url": "https://api.github.com/repos/yeremyjt/algorithms-part-2", "Date": "2015-12-07T22:27:32Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BreathFirstPath.evaluateOption(int)", "BreathFirstPath.evaluateOption(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (possibleNewOptionW < currentOptionW) { shortestLengthW = pathW.get(adjacent); shortestLengthWVertex = adjacent; isPathWFound = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8414/buggy-version/src.BreathFirstPath.java", "BodyUseAPI": [], "Fixed commit": "5b803a02785c274dd7edb1be74c9ec9838598e13", "Url": "https://api.github.com/repos/yeremyjt/algorithms-part-2", "Date": "2015-12-07T22:27:32Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedItem == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3068/buggy-version/app.src.main.java.mobop.skicompass.ResultListActivity.java", "BodyUseAPI": [], "Fixed commit": "d00a72a4c31d287810851fe1a85497acadfbbbed", "Url": "https://api.github.com/repos/MSE-MobOP/Ski-Compass", "Date": "2017-11-13T20:22:14Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sumD > 0) { dataList.add(new com.github.mikephil.charting.data.Entry(sumD, index)); index++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5353/buggy-version/app.src.main.java.tapales.manto.bhuller.loot.Overview.java", "BodyUseAPI": ["java.util.ArrayList<com.github.mikephil.charting.data.Entry>.add(com.github.mikephil.charting.data.Entry)"], "Fixed commit": "4245cab38f9ddeca181e4fd6e6fc1a8e4ee96dda", "Url": "https://api.github.com/repos/dlsucomet/Loot-Quality-Assurance", "Date": "2016-06-10T13:49:30Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plugin.config.getInt(Config.BLOCKS_UPPER_WALL)) == 0) { y += 1; }else { y += 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1219/buggy-version/src.main.java.uk.co.jacekk.bukkit.infiniteplots.plot.Plot.java", "BodyUseAPI": [], "Fixed commit": "cc8c6040020d8045bcd78eeba38e95b0b17bd7a0", "Url": "https://api.github.com/repos/betterphp/InfinitePlots", "Date": "2013-04-12T21:01:28Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.android.vlayout.example.MainActivity.2.getLayoutHelpers()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (helpers == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1738/buggy-version/examples.src.main.java.com.alibaba.android.vlayout.example.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "74234173b978d7df305af985ad3c530eb890407e", "Url": "https://api.github.com/repos/alibaba/vlayout", "Date": "2017-03-20T05:18:58Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) || (value instanceof java.util.List)) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2550/buggy-version/src.main.java.net.unicoen.interpreter.CppEngine.java", "BodyUseAPI": [], "Fixed commit": "e07fbc011811901d33dac2d611fd771e106f3886", "Url": "https://api.github.com/repos/UnicoenProject/Junicoen", "Date": "2016-08-19T13:04:46Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((javax.security.auth.message.config.AuthConfigFactory.getFactory()) == null) { javax.security.auth.message.config.AuthConfigFactory.setFactory(new org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/588/buggy-version/restapi.src.main.java.sjchat.restapi.Application.java", "BodyUseAPI": [], "Fixed commit": "00f2ca76eca4465c970b3667a2b4672108ede0c8", "Url": "https://api.github.com/repos/sjchat/sjchat", "Date": "2017-04-20T16:07:15Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((src.length) < count) { byte[] t = new byte[count]; java.lang.System.arraycopy(src, 0, t, 0, src.length); java.util.Arrays.fill(t, src.length, (count - 1), ((byte) (0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6082/buggy-version/phpass.src.com.github.wolf480pl.phpass.PHPass.java", "BodyUseAPI": ["java.lang.System.arraycopy(byte[],int,byte[],int,int)", "java.util.Arrays.fill(byte[],int,int,int)"], "Fixed commit": "4ed7d32bcb670cd7556c2472158172dd1acdae6d", "Url": "https://api.github.com/repos/RJMetrics/PHPass", "Date": "2013-01-23T18:19:04Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5925/buggy-version/src.main.java.me.mneri.csv.CsvWriter.java", "BodyUseAPI": [], "Fixed commit": "e2351015de10f02bd6cb3095f6d2b15af75a0adf", "Url": "https://api.github.com/repos/mneri/csv", "Date": "2017-07-08T21:56:24Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((date) == null) { date = new java.util.Date(unixepoch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7273/buggy-version/src.main.java.org.socialsketch.server.persist.TweetRecord.java", "BodyUseAPI": [], "Fixed commit": "719b8c3ff96a3ad78c808e94627033ec57e8f23c", "Url": "https://api.github.com/repos/dimkir/SocialSketchServer", "Date": "2013-11-10T12:08:47Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pagetoken) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3669/buggy-version/src.main.java.ru.softlynx.gbq.BqSelect.java", "BodyUseAPI": [], "Fixed commit": "b23a95a9ba9cb69949aad6f2e8c50887a644e5c7", "Url": "https://api.github.com/repos/softkot/gbq", "Date": "2015-09-09T20:59:59Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p.lines.isEmpty())) { paragraphs.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3063/buggy-version/src.org.lindev.androkom.FillMessage.java", "BodyUseAPI": ["java.util.ArrayList<org.lindev.androkom.Paragraph>.add(org.lindev.androkom.Paragraph)"], "Fixed commit": "793bb50d975fa0e45fea3612feb18c2eba9b7489", "Url": "https://api.github.com/repos/pajp/androkom", "Date": "2011-05-21T14:26:36Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transactionalSupport.equalsIgnoreCase(\"mvcc\")) { counter_e = random_gen.nextInt(numDiffEnt); }else { ++(counter_e); if ((counter_e) >= (numDiffEnt)) { counter_e = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7970/buggy-version/transaction_client.src.TransactionClient.java", "BodyUseAPI": [], "Fixed commit": "98404c8007d03501e27c49c9a29457d8f6385ec8", "Url": "https://api.github.com/repos/teodormacicas/ERS-testing-tool", "Date": "2013-11-13T16:30:55Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.beancounter.usermanager.JedisUserManagerImpl.getUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { throw new io.beancounter.usermanager.UserManagerException(((\"User [\" + username) + \"] does not exist\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2552/buggy-version/user-manager.src.main.java.io.beancounter.usermanager.JedisUserManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "395cbfda5f403d5a96abc0be40fad79b329eb044", "Url": "https://api.github.com/repos/dpalmisano/NoTube-Beancounter-2.0", "Date": "2012-09-13T11:11:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.gsfc.seadas.processing.general.FileInfo.getMissionName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (missionName != null) { missionName = missionName.toLowerCase(); if (missionName.contains(\"aqua\")) { missionName = \"aqua\"; }else if (missionName.contains(\"terra\")) { missionName = \"terra\"; }else if (missionName.contains(\"seawifs\")) { missionName = \"seawifs\"; }else if (missionName.contains(\"aquarius\")) { missionName = \"aquarius\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4737/buggy-version/seadas-processing.src.main.java.gov.nasa.gsfc.seadas.processing.general.ModisGEO_L1B_UI.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "146c78b5e1d3ddb439c0b3bb2fac82ca642a805b", "Url": "https://api.github.com/repos/seadas/seadas", "Date": "2013-07-30T17:42:21Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (originalName.endsWith(\".html\")) { returnString = ScannerType.CLANG.getDisplayName(); }else if (originalName.endsWith(\".scan\")) { throw new com.denimgroup.threadfix.exception.RestIOException(\"Appscan .scan file is not supported. The AppScan importer accepts the XML output as input. Click File -> Export -> Scan Results as XML.\", (-1)); }else { returnString = figureOutXml(fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1044/buggy-version/threadfix-importers.src.main.java.com.denimgroup.threadfix.importer.loader.ScanTypeCalculationServiceImpl.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "f6d187c979b43a8fbf5884cc0f5cb3d329f1d1ef", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2016-01-12T16:15:41Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.entityLiving.worldObj.isRemote) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8733/buggy-version/src.main.java.xreliquary.handler.CommonEventHandler.java", "BodyUseAPI": [], "Fixed commit": "549aaaac6995bc0bed8b621ddd5d7c50cf420c33", "Url": "https://api.github.com/repos/P3pp3rF1y/Reliquary", "Date": "2016-03-15T19:35:06Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mGoogleApiClient.isConnected()) { LocationServices.FusedLocationApi.requestLocationUpdates(mGoogleApiClient, mLocationRequest, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8183/buggy-version/app.src.main.java.com.pwr.routing.MainActivity.java", "BodyUseAPI": ["LocationServices.FusedLocationApi.requestLocationUpdates(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.LocationRequest,com.pwr.routing.MainActivity)"], "Fixed commit": "3f4e0b299f317fc2ab6e37483986bfce0a07d4aa", "Url": "https://api.github.com/repos/Moriarty33/Routing", "Date": "2017-10-13T20:13:46Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (message.toLowerCase().equals(\"/exit\")) { client.close(); exit(1); break; }else { target.request().post(javax.ws.rs.client.Entity.text(((((\"(\" + name) + \": \") + message) + \")\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5559/buggy-version/src.main.java.ChatClient.java", "BodyUseAPI": ["target.request().post(javax.ws.rs.client.Entity.text(((((\"(\" + name) + \": \") + message) + \")\")))", "javax.ws.rs.client.Entity.text(java.lang.String)"], "Fixed commit": "1a2e7f26ac5b0c5f196cae8a4ecb427f755b69a2", "Url": "https://api.github.com/repos/Inatalia/ChatREST", "Date": "2017-03-08T19:38:20Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeLimit) > 0) { rp.getSolver().setTimeLimit(timeLimit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3161/buggy-version/src.main.java.btrplace.solver.choco.DefaultChocoReconfigurationAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "004fca2bf4b0fcd6266806c84d9d83cf802ef11d", "Url": "https://api.github.com/repos/fhermeni/btrplace-solver-choco", "Date": "2012-11-21T13:44:48Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cc.equals(\"\")) { creditCard = null; }else creditCard = cc;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5382/buggy-version/src.main.java.User.java", "BodyUseAPI": [], "Fixed commit": "46f9d023d3135b0c5656196ec3c9b92c0534d3f9", "Url": "https://api.github.com/repos/natemara/databases-project", "Date": "2016-05-02T23:29:04Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.equals(\"\")) phone = null; else phone = p;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5382/buggy-version/src.main.java.User.java", "BodyUseAPI": [], "Fixed commit": "46f9d023d3135b0c5656196ec3c9b92c0534d3f9", "Url": "https://api.github.com/repos/natemara/databases-project", "Date": "2016-05-02T23:29:04Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (songName.isEmpty()) { return \"~\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2750/buggy-version/src.io.ph.bot.audio.stream.listenmoe.ListenMoeData.java", "BodyUseAPI": [], "Fixed commit": "0429e236c8f8e3e4e399528d3feab848a9ebd7bd", "Url": "https://api.github.com/repos/at01076172/momo-2", "Date": "2017-06-12T07:10:09Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (animeName.isEmpty()) { return \"~\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2750/buggy-version/src.io.ph.bot.audio.stream.listenmoe.ListenMoeData.java", "BodyUseAPI": [], "Fixed commit": "0429e236c8f8e3e4e399528d3feab848a9ebd7bd", "Url": "https://api.github.com/repos/at01076172/momo-2", "Date": "2017-06-12T07:10:09Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (artist.isEmpty()) { return \"~\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2750/buggy-version/src.io.ph.bot.audio.stream.listenmoe.ListenMoeData.java", "BodyUseAPI": [], "Fixed commit": "0429e236c8f8e3e4e399528d3feab848a9ebd7bd", "Url": "https://api.github.com/repos/at01076172/momo-2", "Date": "2017-06-12T07:10:09Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(node.isLeaf())) expandNodes(node, origNameInfo);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4499/buggy-version/contrib.adsabs.src.java.org.apache.lucene.queryparser.flexible.aqp.processors.AqpAdsabsExpandAuthorSearchProcessor.java", "BodyUseAPI": ["org.apache.lucene.queryparser.flexible.aqp.processors.AqpAdsabsExpandAuthorSearchProcessor.expandNodes(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode,org.apache.lucene.queryparser.flexible.aqp.processors.AqpAdsabsExpandAuthorSearchProcessor.NameInfo)"], "Fixed commit": "1be3a3b2412bea14c9af960f2ddadf71d96e2a78", "Url": "https://api.github.com/repos/romanchyla/montysolr", "Date": "2012-11-29T00:22:38Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (be.artoria.belfortapp.app.SupportManager.haveNetworkConnection()) { final long lastDownload = be.artoria.belfortapp.app.PrefUtils.getTimeStampDownloads(); final long timeSinceLastDownload = (java.lang.System.currentTimeMillis()) - lastDownload; if (((lastDownload == 0) || (timeSinceLastDownload > (((1000 * 60) * 60) * 6))) && (!(be.artoria.belfortapp.activities.MainActivity.downloading))) { be.artoria.belfortapp.activities.MainActivity.downloading = true; android.util.Log.i(PrefUtils.TAG, \"Started downloading in the background\"); new be.artoria.belfortapp.activities.MainActivity.DownloadDataTask().execute(PrefUtils.DATASET_URL); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2170/buggy-version/app.src.main.java.be.artoria.belfortapp.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d9b6983cf5d431882e5bddb0e240f92eee6120d0", "Url": "https://api.github.com/repos/oSoc14/Artoria", "Date": "2014-09-15T13:09:02Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.length) == 0) { return values; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3542/buggy-version/src.dna.util.ArrayUtils.java", "BodyUseAPI": [], "Fixed commit": "179d17baec42b5059d54952f461a94531a8af16f", "Url": "https://api.github.com/repos/BJahn/DNA", "Date": "2014-02-27T13:49:25Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.length) == 0) { return values; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3542/buggy-version/src.dna.util.ArrayUtils.java", "BodyUseAPI": [], "Fixed commit": "179d17baec42b5059d54952f461a94531a8af16f", "Url": "https://api.github.com/repos/BJahn/DNA", "Date": "2014-02-27T13:49:25Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.length) == 0) { return values; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3542/buggy-version/src.dna.util.ArrayUtils.java", "BodyUseAPI": [], "Fixed commit": "179d17baec42b5059d54952f461a94531a8af16f", "Url": "https://api.github.com/repos/BJahn/DNA", "Date": "2014-02-27T13:49:25Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amazonaws.services.s3.AmazonS3ClientBuilder.defaultClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (s3.doesBucketExist(bucketName)) { com.amazonaws.services.s3.model.TagSet ownerTagSet = new com.amazonaws.services.s3.model.TagSet(); ownerTagSet.setTag(org.alfresco.aws.lambda.autotag.AutoTagProcessor.TAG_KEY_OWNER, userName); com.amazonaws.services.s3.model.BucketTaggingConfiguration taggingConfiguration = new com.amazonaws.services.s3.model.BucketTaggingConfiguration().withTagSets(ownerTagSet); s3.setBucketTaggingConfiguration(bucketName, taggingConfiguration); tagged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2753/buggy-version/src.main.java.org.alfresco.aws.lambda.autotag.AutoTagProcessor.java", "BodyUseAPI": ["com.amazonaws.services.s3.AmazonS3.setBucketTaggingConfiguration(java.lang.String,com.amazonaws.services.s3.model.BucketTaggingConfiguration)"], "Fixed commit": "8f7312cf97f35f148a9ae45b6e99a228a5123287", "Url": "https://api.github.com/repos/Alfresco/aws-auto-tag", "Date": "2017-04-25T14:03:33Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.alfresco.aws.lambda.autotag.AutoTagProcessor.extractS3BucketName(org.alfresco.aws.lambda.autotag.CloudWatchEvent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (bucketName != null) { if (tagS3Bucket(bucketName, userName)) { context.getLogger().log((\"Successfully tagged S3 bucket: \" + bucketName)); }else { context.getLogger().log(((\"Skipped tagging bucket '\" + bucketName) + \"' as it could not be found\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2753/buggy-version/src.main.java.org.alfresco.aws.lambda.autotag.AutoTagProcessor.java", "BodyUseAPI": ["context.getLogger().log(java.lang.String)", "context.getLogger().log(java.lang.String)", "org.alfresco.aws.lambda.autotag.AutoTagProcessor.tagS3Bucket(java.lang.String,java.lang.String)"], "Fixed commit": "8f7312cf97f35f148a9ae45b6e99a228a5123287", "Url": "https://api.github.com/repos/Alfresco/aws-auto-tag", "Date": "2017-04-25T14:03:33Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thingml.dliver.driver.Dliver.getEpochTimestampFromMs(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ts - (oldTs)) != 4) java.lang.System.out.println((\"ECG epoch timestamp diff is \" + (ts - (oldTs))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4082/buggy-version/dliver-desktop.src.main.java.org.thingml.dliver.desktop.DliverFileLogger.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "775983f2db524ce2be7c4bce1a9b6e821fc40f40", "Url": "https://api.github.com/repos/SINTEF-9012/dliver", "Date": "2014-09-22T14:04:22Z"},
{"Line": "=>1694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gd.getBefore()) != null) gd.getBefore().setNext(gd.getNext());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5767/buggy-version/src.org.nschmidt.ldparteditor.data.VM00Base.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.data.GData1.getBefore()", "org.nschmidt.ldparteditor.data.GData1.getNext()", "gd.getBefore().setNext(gd.getNext())"], "Fixed commit": "1f209d4e1dba59aa69b986938871d4a86dedcb6f", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-06-26T12:52:44Z"},
{"Line": "=>1575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leak) != null) { leak.record(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7320/buggy-version/buffer.src.main.java.io.netty.buffer.CompositeByteBuf.java", "BodyUseAPI": [], "Fixed commit": "b4e3e09b76ba033a1c6721066a3d6c3b4d4a91f0", "Url": "https://api.github.com/repos/shantanusharma/netty", "Date": "2014-02-07T05:00:05Z"},
{"Line": "=>1583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((leak) != null) { leak.record(hint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7320/buggy-version/buffer.src.main.java.io.netty.buffer.CompositeByteBuf.java", "BodyUseAPI": [], "Fixed commit": "b4e3e09b76ba033a1c6721066a3d6c3b4d4a91f0", "Url": "https://api.github.com/repos/shantanusharma/netty", "Date": "2014-02-07T05:00:05Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getBoolean(\"DECIMAL_USE\", true))) { editText.setInputType(((android.text.InputType.TYPE_CLASS_NUMBER) | (android.text.InputType.TYPE_NUMBER_FLAG_SIGNED))); }else { editText.setInputType((((android.text.InputType.TYPE_CLASS_NUMBER) | (android.text.InputType.TYPE_NUMBER_FLAG_DECIMAL)) | (android.text.InputType.TYPE_NUMBER_FLAG_SIGNED))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6024/buggy-version/MatrixProCalculator.src.main.java.com.softminds.matrixcalculatorpro.base_activities.FillingMatrix.java", "BodyUseAPI": [], "Fixed commit": "d8c382bff46664b189dcb1502ef917d0bf839b90", "Url": "https://api.github.com/repos/coder3101/Matrix-Calculator-for-Android", "Date": "2017-02-12T13:28:25Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.preference.PreferenceManager.getDefaultSharedPreferences(getContext()).getBoolean(\"DECIMAL_USE\", true))) { editText.setInputType(((android.text.InputType.TYPE_CLASS_NUMBER) | (android.text.InputType.TYPE_NUMBER_FLAG_SIGNED))); }else { editText.setInputType((((android.text.InputType.TYPE_CLASS_NUMBER) | (android.text.InputType.TYPE_NUMBER_FLAG_DECIMAL)) | (android.text.InputType.TYPE_NUMBER_FLAG_SIGNED))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6024/buggy-version/MatrixProCalculator.src.main.java.com.softminds.matrixcalculatorpro.base_fragments.EditFragment.java", "BodyUseAPI": [], "Fixed commit": "d8c382bff46664b189dcb1502ef917d0bf839b90", "Url": "https://api.github.com/repos/coder3101/Matrix-Calculator-for-Android", "Date": "2017-02-12T13:28:25Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_editorHash) == null) { m_editorHash = (m_elementId.toString()) + (getSettingsHash()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2701/buggy-version/src.org.opencms.xml.containerpage.CmsContainerElementBean.java", "BodyUseAPI": [], "Fixed commit": "baf3b7fcc82e8aa6a75dc7ea4992de697f10aedf", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2016-05-13T10:06:09Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((winners.size()) < 1) { winners.add(players.get(i)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7699/buggy-version/complete.src.main.java.texasholdem.game.model.Table.java", "BodyUseAPI": ["java.util.List<texasholdem.game.model.Player>.add(players.get(i))"], "Fixed commit": "8c216b877c6473ada9af4839034ab293a1f0f611", "Url": "https://api.github.com/repos/jperalta1989/JavaMavenProject", "Date": "2017-12-03T22:50:20Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pat == null) { this.internalLinkPostfixPattern = null; }else { try { java.util.regex.Pattern.compile(pat); } catch (java.util.regex.PatternSyntaxException e) { throw new java.lang.IllegalArgumentException(((\"Not a valid internal link postfix pattern: `\" + pat) + \"'.\"), e); } this.internalLinkPostfixPattern = pat; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2374/buggy-version/swc-engine.src.main.java.org.sweble.wikitext.engine.config.ParserConfigImpl.java", "BodyUseAPI": ["java.util.regex.Pattern.compile(java.lang.String)"], "Fixed commit": "ab34379e17cf421eb97e5a027e57f5f81fd09069", "Url": "https://api.github.com/repos/sweble/sweble-wikitext", "Date": "2013-07-04T15:35:22Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pat == null) { this.internalLinkPrefixPattern = null; }else { try { java.util.regex.Pattern.compile(((\"(\" + pat) + \")$\")); } catch (java.util.regex.PatternSyntaxException e) { throw new java.lang.IllegalArgumentException(((\"Not a valid internal link prefix pattern: `\" + pat) + \"'.\"), e); } this.internalLinkPrefixPattern = pat; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2374/buggy-version/swc-engine.src.main.java.org.sweble.wikitext.engine.config.ParserConfigImpl.java", "BodyUseAPI": ["java.util.regex.Pattern.compile(java.lang.String)"], "Fixed commit": "ab34379e17cf421eb97e5a027e57f5f81fd09069", "Url": "https://api.github.com/repos/sweble/sweble-wikitext", "Date": "2013-07-04T15:35:22Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.inputFormat.equals(\"json\")) { aberrationValuesMap = gson.fromJson(this.getInputPorts().get(modules.vectorAnalysis.MinkowskiDistanceMatrixModule.ID_INPUT).getInputReader(), new java.util.HashMap<java.lang.String, java.util.List<java.lang.Double>>().getClass()); }else { throw new java.lang.Exception(((\"Unrecognised input format '\" + (this.inputFormat)) + \"'.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8321/buggy-version/src.main.java.modules.vectorAnalysis.MinkowskiDistanceMatrixModule.java", "BodyUseAPI": [], "Fixed commit": "9f557ee0fc79cbdd7f8b10cc3746a4d1efd74a5c", "Url": "https://api.github.com/repos/spinfo/stringsnstructures", "Date": "2016-06-10T11:46:55Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.devmarvel.creditcardentry.internal.CreditCardUtil.formatExpirationDate(s.toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((formatted.length()) >= 5) { formatted = formatted.substring(0, ((formatted.length()) - 1)); delegate.onExpirationDateValid(); setValid(true); }else if ((formatted.length()) < (updatedString.length())) { delegate.onBadInput(this); setValid(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5747/buggy-version/CreditCardEntry.src.com.devmarvel.creditcardentry.fields.ExpDateText.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "6dbc38b5e2bbd13ac792ee07912ddffd671f509d", "Url": "https://api.github.com/repos/usepropeller/CreditCardEntry", "Date": "2013-07-16T00:18:22Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((toCopy.vc) != null) this.vc = toCopy.vc.clone();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5280/buggy-version/JSAT.src.jsat.classifiers.neuralnetwork.LVQ.java", "BodyUseAPI": [], "Fixed commit": "d91a77e9ab55d8c61b1bc1d95662368911c48b20", "Url": "https://api.github.com/repos/TKlerx/JSAT", "Date": "2015-04-13T00:10:20Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(processingStepsBus.isConfigGenerated())) { processingStepsBus.setConfigGenerated(true); com.squareup.javapoet.TypeSpec typeSpec = misunderstoodPoet.compose(configSpec); com.squareup.javapoet.JavaFile javaFile = com.squareup.javapoet.JavaFile.builder(configSpec.getClassName().packageName(), typeSpec).build(); write(javaFile, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1073/buggy-version/compiler.src.main.java.mvp.compiler.processingstep.MvpProcessingStep.java", "BodyUseAPI": ["mvp.compiler.processingstep.ProcessingStepsBus.setConfigGenerated(boolean)"], "Fixed commit": "5c47191e4bef1efaa90704b69d9ac6357d54352d", "Url": "https://api.github.com/repos/lukaspili/Auto-Mortar", "Date": "2015-04-30T23:46:20Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((exemptions) == null) { exemptions = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2393/buggy-version/src.main.java.org.ldg.mcpd.MCPDRemapper.java", "BodyUseAPI": [], "Fixed commit": "42f3f08a6c1d92505ebdbfdbc57293a11ede6568", "Url": "https://api.github.com/repos/FunnyMan3595/mcp_deobfuscate", "Date": "2012-10-15T18:11:38Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((best_match.length()) > 0) { java.lang.String mapping = packages.get(best_match); if (mapping.equals(\".\")) { return name.substring(((best_match.length()) + 1)); }else { return mapping + (name.substring(best_match.length())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2393/buggy-version/src.main.java.org.ldg.mcpd.MCPDRemapper.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.length()"], "Fixed commit": "42f3f08a6c1d92505ebdbfdbc57293a11ede6568", "Url": "https://api.github.com/repos/FunnyMan3595/mcp_deobfuscate", "Date": "2012-10-15T18:11:38Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((argumentsMapping) != null) { java.util.Map<java.lang.String, java.lang.Object> arguments = argumentsMapping.evaluate(instance); for (java.util.Map.Entry<java.lang.String, java.lang.Object> argument : arguments.entrySet()) { initialEnvironment.setAttribute(argument.getKey(), argument.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6875/buggy-version/telekom-workflow-engine.src.main.java.ee.telekom.workflow.graph.node.activity.CreateNewInstanceActivity.java", "BodyUseAPI": [], "Fixed commit": "c7139dddb6ae5b96d12ae996a8d7bfabe97e2e50", "Url": "https://api.github.com/repos/zutnop/telekom-workflow-engine", "Date": "2017-11-17T09:17:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tokens[(i + 1)].equals(\"(\")) { opStack.push(s); }else { newStr += (((tokens[(i + 1)]) + \" \") + s) + \" \"; i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1655/buggy-version/src.taylor.math.Equation.java", "BodyUseAPI": [], "Fixed commit": "05edb79ad4869dad49b9c3e7cd6e09a941ff7878", "Url": "https://api.github.com/repos/anubiann00b/TaylorVisualization", "Date": "2014-06-11T21:58:32Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.cache.impl.ICacheService.getStatistics(cacheConfig.getNameWithPrefix())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (statistics != null) { count = handleCache(memberState, count, cacheConfig, statistics, longInstanceNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7417/buggy-version/hazelcast.src.main.java.com.hazelcast.internal.management.TimedMemberStateFactory.java", "BodyUseAPI": ["com.hazelcast.internal.management.TimedMemberStateFactory.handleCache(com.hazelcast.monitor.impl.MemberStateImpl,int,com.hazelcast.config.CacheConfig,com.hazelcast.cache.CacheStatistics,java.util.Set<java.lang.String>)"], "Fixed commit": "db714a81a49f96e02a40ced1b6589308aea33944", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2016-05-23T14:55:10Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.name.equals(\"enabled\")) { if (p.name.equals(\"false\")) { enabled = false; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6006/buggy-version/server.src.main.java.com.orientechnologies.orient.server.OServer.java", "BodyUseAPI": ["p.name.equals(java.lang.String)"], "Fixed commit": "da27608bc86049811868c65df578b1dc1d453712", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-12-30T23:15:33Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((s.equalsIgnoreCase(\"NaN\")) || (s.equalsIgnoreCase(\"infinity\"))) sreen.setText(\"\"); else { int l = s.length(); if (l != 0) sreen.setText(s.substring(0, (l - 1))); if (l == 1) op = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8197/buggy-version/calculator.src.calculator.home.java", "BodyUseAPI": ["java.lang.String.length()", "javax.swing.JTextField.setText(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "d6c4bcc5b9965bb3a6ee30ad79cd43da563f5c48", "Url": "https://api.github.com/repos/thamshid/calculator", "Date": "2014-11-03T03:15:26Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) { this.source = source; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7155/buggy-version/jetbrick-template-core.src.main.java.jetbrick.template.runtime.InterpretException.java", "BodyUseAPI": [], "Fixed commit": "bd4f4ff942770343144f7a3866699905e8bbf338", "Url": "https://api.github.com/repos/subchen/jetbrick-template-2x", "Date": "2014-10-17T04:25:46Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getElement().getFirstChildElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (firstElement.getTagName().equalsIgnoreCase(\"input\")) { firstElement.setAttribute(\"title\", \"browse input\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2742/buggy-version/roda-ui.roda-wui.src.main.java.org.roda.wui.client.browse.BrowseAIP.java", "BodyUseAPI": ["com.google.gwt.dom.client.Element.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "354863d4d518fa3a8e74ea2e7cc4c06dcd0bccae", "Url": "https://api.github.com/repos/keeps/roda", "Date": "2017-02-22T10:41:07Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(word.equals(lastWordFound))) { writer.write((word + lineSep)); lastWordFound = word; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4754/buggy-version/src.main.java.gr.elchetz.idocs.FindCommonWords.java", "BodyUseAPI": ["java.io.Writer.write(java.lang.String)"], "Fixed commit": "cc03015dcb1ab90f310f33269c6100873e5ed36f", "Url": "https://api.github.com/repos/elchetz/idocs", "Date": "2013-02-24T14:11:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(readAhead(1))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3716/buggy-version/aurochs-serialization.src.main.java.se.l4.aurochs.serialization.format.JsonInput.java", "BodyUseAPI": [], "Fixed commit": "327300ae4f75e29537a881e90d63e66c9202febe", "Url": "https://api.github.com/repos/LevelFourAB/aurochs", "Date": "2015-12-29T11:27:45Z"},
{"Line": "=>956", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.bS[0]) == null) { boolean var1 = false; boolean var2 = false; boolean var3 = false; boolean var4 = false; for (int var5 = 0; var5 < 24; ++var5) { int var6 = 5; int var7; int var9; if (var5 < 12) { var7 = ((int) (60.0F * (net.minecraft.server.MathHelper.cos((2.0F * ((-3.1415927F) + (0.2617994F * ((float) (var5))))))))); var9 = ((int) (60.0F * (net.minecraft.server.MathHelper.sin((2.0F * ((-3.1415927F) + (0.2617994F * ((float) (var5))))))))); }else { int var10; if (var5 < 20) { var10 = var5 - 12; var7 = ((int) (40.0F * (net.minecraft.server.MathHelper.cos((2.0F * ((-3.1415927F) + (0.3926991F * ((float) (var10))))))))); var9 = ((int) (40.0F * (net.minecraft.server.MathHelper.sin((2.0F * ((-3.1415927F) + (0.3926991F * ((float) (var10))))))))); var6 += 10; }else { var10 = var5 - 20; var7 = ((int) (20.0F * (net.minecraft.server.MathHelper.cos((2.0F * ((-3.1415927F) + (0.7853982F * ((float) (var10))))))))); var9 = ((int) (20.0F * (net.minecraft.server.MathHelper.sin((2.0F * ((-3.1415927F) + (0.7853982F * ((float) (var10))))))))); } } int var8 = java.lang.Math.max(((this.world.G()) + 10), ((this.world.r(new net.minecraft.server.BlockPosition(var7, 0, var9)).getY()) + var6)); this.bS[var5] = new net.minecraft.server.class_aut(var7, var8, var9); } this.bT[0] = 6146; this.bT[1] = 8197; this.bT[2] = 8202; this.bT[3] = 16404; this.bT[4] = '\u8028'; this.bT[5] = '\u8050'; this.bT[6] = 65696; this.bT[7] = 131392; this.bT[8] = 131712; this.bT[9] = 263424; this.bT[10] = 526848; this.bT[11] = 525313; this.bT[12] = 1581057; this.bT[13] = 3166214; this.bT[14] = 2138120; this.bT[15] = 6373424; this.bT[16] = 4358208; this.bT[17] = 12910976; this.bT[18] = 9044480; this.bT[19] = 9706496; this.bT[20] = 15216640; this.bT[21] = 13688832; this.bT[22] = 11763712; this.bT[23] = 8257536; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3704/buggy-version/src.net.minecraft.server.EntityEnderDragon.java", "BodyUseAPI": [], "Fixed commit": "c8e7c7f272883b454e8850727df550d01819e4b3", "Url": "https://api.github.com/repos/PatoTheBest/MinecraftServerDec19", "Date": "2015-08-09T15:47:09Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sess.alive())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2408/buggy-version/src.haven.RemoteUI.java", "BodyUseAPI": [], "Fixed commit": "047c3b1c8c438de39d141bec8a5d7a47a3141c38", "Url": "https://api.github.com/repos/EnderWiggin/Custom-Salem", "Date": "2012-05-01T19:42:26Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pteam.containsKey(playername)) { super.joinPlayerLobby(playername); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4354/buggy-version/src.com.comze_instancelabs.mgsnake.IArena.java", "BodyUseAPI": ["com.comze_instancelabs.minigamesapi.Arena.joinPlayerLobby(java.lang.String)"], "Fixed commit": "c43fcfc6c3dd09d6ee51dc3e929aefd8e31a00a6", "Url": "https://api.github.com/repos/MC-Minigames/Snake", "Date": "2014-10-02T12:03:31Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.query) == null) { this.query = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5048/buggy-version/burp.src.main.java.burp.BHttpRequest.java", "BodyUseAPI": [], "Fixed commit": "f33d38903fd522218afc9cb3810e383adab2baeb", "Url": "https://api.github.com/repos/tomsteele/burpbuddy", "Date": "2015-02-17T08:31:32Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p1) instanceof bwmcts.sparcraft.players.Player_Evolution_Clusters) { java.util.List<java.util.List<bwmcts.sparcraft.Unit>> clustersP1 = ((bwmcts.sparcraft.players.Player_Evolution_Clusters) (p1)).getClusters(); if (clustersP1 != null) { drawClusters(g, clustersP1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4938/buggy-version/src.bwmcts.sparcraft.SparcraftUI.java", "BodyUseAPI": [], "Fixed commit": "dac586a5c88b683a50aff2ffdbaf5195bedafc19", "Url": "https://api.github.com/repos/watchernyu/JarCraft-POE-old", "Date": "2016-05-16T00:51:48Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dataService.hasRepository(userGivenName)) { result.addError(new org.springframework.validation.ObjectError(\"wizard\", \"An entity with this name already exists.\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5760/buggy-version/molgenis-data-import.src.main.java.org.molgenis.data.importer.OptionsWizardPage.java", "BodyUseAPI": [], "Fixed commit": "60e0c15ef369481db02ecc55cc3e6bc3d4d48d64", "Url": "https://api.github.com/repos/molgenis/molgenis", "Date": "2016-01-28T12:44:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.nickrobson.skype.superchat.SuperChatShows.parseJson(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (jsonArray != null) { com.google.gson.JsonObject showDetails = new com.google.gson.JsonObject(); jsonArray.add(showDetails); showDetails.addProperty(\"showname\", show.getDisplay()); showDetails.addProperty(\"day\", show.day); com.google.gson.JsonArray aliases = new com.google.gson.JsonArray(); for (java.lang.String str : show.getNames()) { aliases.add(str.replace(\" \", \"\")); } showDetails.add(\"aliases\", aliases); java.io.BufferedWriter bufferedWriter = new java.io.BufferedWriter(new java.io.FileWriter(\"shows.json\", true)); bufferedWriter.write(jsonArray.toString()); bufferedWriter.flush(); bufferedWriter.close(); me.nickrobson.skype.superchat.SuperChatShows.register(show); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8322/buggy-version/src.main.java.me.nickrobson.skype.superchat.SuperChatShows.java", "BodyUseAPI": ["java.io.BufferedWriter.write(jsonArray.toString())", "com.google.gson.JsonArray.toString()", "com.google.gson.JsonArray.add(com.google.gson.JsonObject)"], "Fixed commit": "b8bad88e32485724a7657d98ae49de2c6be2fd2e", "Url": "https://api.github.com/repos/nickrobson/SuperBot", "Date": "2016-01-02T01:24:28Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mle.equals(ThreadDisplayer.actViewingMessage)) { mle.setSeen(true); mle.setUnreadCount(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5477/buggy-version/src.hu.rgai.android.handlers.MessageListerHandler.java", "BodyUseAPI": ["hu.rgai.android.beens.MessageListElement.setUnreadCount(int)", "hu.rgai.android.beens.MessageListElement.setSeen(boolean)"], "Fixed commit": "cf0cf8fd571b7588e8c6bbbe0351714df603d44d", "Url": "https://api.github.com/repos/k-kojak/yako", "Date": "2014-05-29T08:34:09Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (result.result)) { fuzzy.helpers.Printer.printResultSet(result.result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5020/buggy-version/FuzzyDB.src.fuzzy.Client.java", "BodyUseAPI": ["fuzzy.helpers.Printer.printResultSet(result.result)"], "Fixed commit": "c962830515d1c7f662a0636be0ded92af82f6242", "Url": "https://api.github.com/repos/gmljosea/fuzzy-client", "Date": "2014-05-05T14:10:36Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((card.getKey()) == null) { card.setKey(new org.bson.types.ObjectId().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5933/buggy-version/src.main.java.rtdm.persistence.MongoPersistor.java", "BodyUseAPI": ["rtdm.domain.Card.setKey(new org.bson.types.ObjectId().toString())"], "Fixed commit": "9c102481d63b4ed4ed1f4455c4122d1fe21312d8", "Url": "https://api.github.com/repos/RTDM/rtdm-srv", "Date": "2014-04-29T17:23:08Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.source.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (attacker == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3781/buggy-version/main.java.pvpmode.PvPEventHandler.java", "BodyUseAPI": [], "Fixed commit": "4aaca4609918ff7411b686baff9fd23e45698f4d", "Url": "https://api.github.com/repos/VulcanForge/pvp-mode", "Date": "2017-07-27T19:34:54Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attributeValue == null) { logger.debug(\"Skipping over SAML attribute {} since it has no value {}\", attributeName); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/787/buggy-version/support.cas-server-support-saml.src.main.java.org.apereo.cas.support.saml.util.AbstractSamlObjectBuilder.java", "BodyUseAPI": [], "Fixed commit": "fff00ea99429a9ab0b28c5c13bf1d6408c3c488d", "Url": "https://api.github.com/repos/William-Hill-Online/cas", "Date": "2017-01-10T10:31:46Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Main.messageManager) != null) Main.messageManager.log((\"Saved configuration file: \" + (this.file)), MessageLevel.FINEST);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6540/buggy-version/src.edgruberman.bukkit.messagemanager.ConfigurationFile.java", "BodyUseAPI": [], "Fixed commit": "32b376043a7db0023c78877e5fdf4346e8ff69c0", "Url": "https://api.github.com/repos/EdGruberman/MessageManager", "Date": "2011-11-20T18:46:54Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recalculate) { previousAverageTrueRange = previousPreviousAverageTrueRange; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4253/buggy-version/src.main.java.ee.codestone.indicator.AverageTrueRangeIndicatorLogic.java", "BodyUseAPI": [], "Fixed commit": "23b18935f011bd5683f42eafba11f225a538eaf4", "Url": "https://api.github.com/repos/vahurkaar/forex-api", "Date": "2017-06-24T15:38:10Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.ide.eclipse.internal.EclipseSonar.getInstance(resource.getProject()).search(org.eclipse.core.resources.IResource)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sourceCode != null) { sonarSource = new org.eclipse.jface.text.Document(sourceCode.getRemoteContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8420/buggy-version/org.sonar.ide.eclipse.ui.src.org.sonar.ide.eclipse.internal.ui.compare.SonarReferenceProvider.java", "BodyUseAPI": ["org.sonar.ide.api.SourceCode.getRemoteContent()"], "Fixed commit": "58825603f6884c12f271da8cf2ec6836d65b8c5e", "Url": "https://api.github.com/repos/jerr/sonar-eclipse", "Date": "2011-03-06T15:39:57Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (date == null) { date = new java.util.Date(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3467/buggy-version/DocletWriter.java", "BodyUseAPI": [], "Fixed commit": "b0e3d51c94094e10d1186e35bc316003cbe1d508", "Url": "https://api.github.com/repos/IDEXXIHD/testConfluenceDocumentation", "Date": "2017-04-11T13:04:14Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["a.getSteps().get(CollisionSystem.Direction)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((step) >= (steps.length)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1967/buggy-version/Editor.Editor-Objects.src.org.shaman.rpg.editor.objects.sprites.SpriteTopComponent.java", "BodyUseAPI": [], "Fixed commit": "e7dc5fd1be8254836b8086312c29176f2392e2d4", "Url": "https://api.github.com/repos/shamanDevel/shaman.rpg", "Date": "2015-12-05T18:52:41Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((httpMethod) instanceof org.apache.commons.httpclient.methods.PostMethod) { org.apache.commons.httpclient.methods.PostMethod postMethod = ((org.apache.commons.httpclient.methods.PostMethod) (httpMethod)); type = postMethod.getRequestEntity().getContentType(); }else { org.apache.commons.httpclient.Header header = httpMethod.getRequestHeader(\"Content-Type\"); type = (header == null) ? null : header.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9246/buggy-version/signpost-commonshttp3.src.main.java.oauth.signpost.commonshttp3.Http3RequestAdapter.java", "BodyUseAPI": [], "Fixed commit": "1dbaf209a18470dfd5ab6b46341ce852ebd0aa69", "Url": "https://api.github.com/repos/apolenur/signpost", "Date": "2011-04-23T03:57:54Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) || (exp == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1459/buggy-version/src.main.java.org.pinae.ndb.operate.Locator.java", "BodyUseAPI": [], "Fixed commit": "546cb775794343e8b37af0c6450c3afe82deeb55", "Url": "https://api.github.com/repos/node-db/ndb-java", "Date": "2015-07-16T02:54:43Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listener) instanceof com.connectsdk.device.ConnectableDevice) listener.onConnectionSuccess(this); else { com.connectsdk.core.Util.runOnUI(new java.lang.Runnable() { @java.lang.Override public void run() { if ((listener) != null) listener.onConnectionSuccess(com.connectsdk.service.DeviceService.this); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1213/buggy-version/src.com.connectsdk.service.DeviceService.java", "BodyUseAPI": ["com.connectsdk.core.Util.runOnUI(java.lang.Runnable)"], "Fixed commit": "8a46fe38ae352b8b3fef9b1c401ec985b37dc376", "Url": "https://api.github.com/repos/OnAirPlayer/Connect-SDK-Android", "Date": "2014-06-20T23:17:08Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1213/buggy-version/src.com.connectsdk.service.DeviceService.java", "BodyUseAPI": [], "Fixed commit": "8a46fe38ae352b8b3fef9b1c401ec985b37dc376", "Url": "https://api.github.com/repos/OnAirPlayer/Connect-SDK-Android", "Date": "2014-06-20T23:17:08Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (relationNode.getElement().getOperation().equals(\"LogicalRelation\")) { java.lang.System.out.println(((((\"> [INFO] LogicalRelation '\" + (relationNode.getElement().getTableName())) + \"' = \") + GB) + \" GB\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6724/buggy-version/src.main.java.CostModel.CostModel.java", "BodyUseAPI": ["relationNode.getElement().getTableName()", "java.io.PrintStream.println(((((\"> [INFO] LogicalRelation '\" + (relationNode.getElement().getTableName())) + \"' = \") + GB) + \" GB\"))", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getElement()"], "Fixed commit": "ec46d1fa99fa77bb1e27f58d14d40b732ac6e895", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-06T10:12:06Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((relationNode.getLeft()) != null) { if (((relationNode.getLeft().getElement().getRelationProfile().getVisiblePlaintext().size()) + (relationNode.getLeft().getElement().getRelationProfile().getVisibleEncrypted().size())) == 0) { encryptionPercentLeft = 0; }else { encryptionPercentLeft = (relationNode.getElement().getRelationProfile().getVisibleEncrypted().size()) / ((relationNode.getElement().getRelationProfile().getVisiblePlaintext().size()) + (relationNode.getElement().getRelationProfile().getVisibleEncrypted().size())); } double encProfileCost = 1; if (encryptionPercentLeft != 0) { java.util.List<java.lang.String> visibleEncrypted = relationNode.getElement().getRelationProfile().getVisibleEncrypted(); double countAES = 0; double countHOMOMORPHIC = 0; for (int i = 0; i < (visibleEncrypted.size()); i++) { java.util.List<java.lang.String> supported = encProfile.getMap().get(visibleEncrypted.get(i)); if ((supported.contains(EncryptionProfile.HOMOMORPHIC)) && (supported.contains(EncryptionProfile.AES))) { countAES++; plan.getAssignedEncryptions().put(visibleEncrypted.get(i), EncryptionProfile.AES); }else { countHOMOMORPHIC++; plan.getAssignedEncryptions().put(visibleEncrypted.get(i), EncryptionProfile.HOMOMORPHIC); java.lang.System.out.println(((((((\"> [INFO] HOMOMORPHIC encryption of '\" + (visibleEncrypted.get(i))) + \"' [\") + (relationNode.getElement().getOperation())) + \"][\") + (operationProvider.getName())) + \"][Left child]\")); } } encProfileCost = ((leftChildProvider.getCosts().getEncryptionAES()) * (countAES / (countAES + countHOMOMORPHIC))) + ((leftChildProvider.getCosts().getEncryptionHOMOMORPHIC()) * (countHOMOMORPHIC / (countAES + countHOMOMORPHIC))); } encryptionCostLeft = ((leftGB * encryptionPercentLeft) / ((leftChildProvider.getCosts().getCpuSpeed()) * encProfileCost)) * (leftChildProvider.getCosts().getCpu()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6724/buggy-version/src.main.java.CostModel.CostModel.java", "BodyUseAPI": ["relationNode.getElement().getRelationProfile()", "relationNode.getElement().getRelationProfile()", "relationNode.getLeft().getElement().getRelationProfile()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getElement()", "relationNode.getElement().getRelationProfile()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getElement()", "relationNode.getElement().getRelationProfile().getVisibleEncrypted()", "relationNode.getElement().getRelationProfile().getVisiblePlaintext().size()", "relationNode.getElement().getRelationProfile()", "java.io.PrintStream.println(((((((\"> [INFO] HOMOMORPHIC encryption of '\" + (visibleEncrypted.get(i))) + \"' [\") + (relationNode.getElement().getOperation())) + \"][\") + (operationProvider.getName())) + \"][Left child]\"))", "relationNode.getLeft().getElement()", "relationNode.getLeft().getElement().getRelationProfile().getVisibleEncrypted().size()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getLeft()", "relationNode.getElement().getRelationProfile().getVisiblePlaintext()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getElement()", "relationNode.getLeft().getElement().getRelationProfile().getVisibleEncrypted()", "relationNode.getElement().getRelationProfile().getVisibleEncrypted().size()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getElement()", "relationNode.getElement().getRelationProfile().getVisibleEncrypted()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getLeft()", "relationNode.getElement().getRelationProfile().getVisibleEncrypted().size()", "relationNode.getLeft().getElement()", "relationNode.getLeft().getElement().getRelationProfile().getVisiblePlaintext().size()", "relationNode.getLeft().getElement().getRelationProfile().getVisiblePlaintext()", "relationNode.getElement().getRelationProfile().getVisibleEncrypted()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getElement()", "relationNode.getElement().getOperation()", "relationNode.getLeft().getElement().getRelationProfile()"], "Fixed commit": "ec46d1fa99fa77bb1e27f58d14d40b732ac6e895", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-06T10:12:06Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((relationNode.getLeft()) != null) leftGB = (relationNode.getLeft().getElement().getSizeInBytes()) * (java.lang.Math.pow(10, (-9)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6724/buggy-version/src.main.java.CostModel.CostModel.java", "BodyUseAPI": ["TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getLeft()", "relationNode.getLeft().getElement()", "relationNode.getLeft().getElement().getSizeInBytes()"], "Fixed commit": "ec46d1fa99fa77bb1e27f58d14d40b732ac6e895", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-06T10:12:06Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((relationNode.getRight()) != null) { if (((relationNode.getRight().getElement().getRelationProfile().getVisiblePlaintext().size()) + (relationNode.getRight().getElement().getRelationProfile().getVisibleEncrypted().size())) == 0) { encryptionPercentRight = 0; }else { encryptionPercentRight = (relationNode.getElement().getRelationProfile().getVisibleEncrypted().size()) / ((relationNode.getElement().getRelationProfile().getVisiblePlaintext().size()) + (relationNode.getElement().getRelationProfile().getVisibleEncrypted().size())); } double encProfileCost = 1; if (encryptionPercentRight != 0) { java.util.List<java.lang.String> visibleEncrypted = relationNode.getElement().getRelationProfile().getVisibleEncrypted(); double countAES = 0; double countHOMOMORPHIC = 0; for (int i = 0; i < (visibleEncrypted.size()); i++) { java.util.List<java.lang.String> supported = encProfile.getMap().get(visibleEncrypted.get(i)); if ((supported.contains(EncryptionProfile.HOMOMORPHIC)) && (supported.contains(EncryptionProfile.AES))) { countAES++; plan.getAssignedEncryptions().put(visibleEncrypted.get(i), EncryptionProfile.AES); }else { countHOMOMORPHIC++; plan.getAssignedEncryptions().put(visibleEncrypted.get(i), EncryptionProfile.HOMOMORPHIC); java.lang.System.out.println(((((((\"> [INFO] HOMOMORPHIC encryption of '\" + (visibleEncrypted.get(i))) + \"' [\") + (relationNode.getElement().getOperation())) + \"][\") + (operationProvider.getName())) + \"][Right child]\")); } } encProfileCost = ((rightChildProvider.getCosts().getEncryptionAES()) * (countAES / (countAES + countHOMOMORPHIC))) + ((rightChildProvider.getCosts().getEncryptionHOMOMORPHIC()) * (countHOMOMORPHIC / (countAES + countHOMOMORPHIC))); } encryptionCostRight = ((rightGB * encryptionPercentRight) / ((rightChildProvider.getCosts().getCpuSpeed()) * encProfileCost)) * (rightChildProvider.getCosts().getCpu()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6724/buggy-version/src.main.java.CostModel.CostModel.java", "BodyUseAPI": ["TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getRight()", "relationNode.getRight().getElement().getRelationProfile()", "relationNode.getRight().getElement()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getElement()", "relationNode.getRight().getElement().getRelationProfile().getVisibleEncrypted()", "relationNode.getElement().getOperation()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getElement()", "relationNode.getRight().getElement().getRelationProfile().getVisiblePlaintext()", "relationNode.getElement().getRelationProfile().getVisibleEncrypted()", "relationNode.getElement().getRelationProfile().getVisibleEncrypted()", "relationNode.getElement().getRelationProfile()", "relationNode.getRight().getElement().getRelationProfile().getVisibleEncrypted().size()", "java.io.PrintStream.println(((((((\"> [INFO] HOMOMORPHIC encryption of '\" + (visibleEncrypted.get(i))) + \"' [\") + (relationNode.getElement().getOperation())) + \"][\") + (operationProvider.getName())) + \"][Right child]\"))", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getElement()", "relationNode.getElement().getRelationProfile()", "relationNode.getElement().getRelationProfile().getVisibleEncrypted()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getElement()", "relationNode.getElement().getRelationProfile().getVisiblePlaintext()", "relationNode.getElement().getRelationProfile()", "relationNode.getRight().getElement()", "relationNode.getElement().getRelationProfile()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getElement()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getRight()", "relationNode.getRight().getElement().getRelationProfile()", "relationNode.getElement().getRelationProfile().getVisibleEncrypted().size()", "relationNode.getElement().getRelationProfile().getVisibleEncrypted().size()", "relationNode.getElement().getRelationProfile().getVisiblePlaintext().size()", "relationNode.getRight().getElement().getRelationProfile().getVisiblePlaintext().size()"], "Fixed commit": "ec46d1fa99fa77bb1e27f58d14d40b732ac6e895", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-06T10:12:06Z"},
{"Line": "=>657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (leftChildProvider != null) transferCostLeft = leftGB * (findCostPerGB(operationProvider, leftChildProvider));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6724/buggy-version/src.main.java.CostModel.CostModel.java", "BodyUseAPI": ["CostModel.CostModel.findCostPerGB(ConfigurationParser.Provider,ConfigurationParser.Provider)"], "Fixed commit": "ec46d1fa99fa77bb1e27f58d14d40b732ac6e895", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-06T10:12:06Z"},
{"Line": "=>548", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((relationNode.getRight()) != null) rightGB = (relationNode.getRight().getElement().getSizeInBytes()) * (java.lang.Math.pow(10, (-9)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6724/buggy-version/src.main.java.CostModel.CostModel.java", "BodyUseAPI": ["relationNode.getRight().getElement()", "TreeStructure.BinaryNode<RelationProfileTreeBuilder.Relation>.getRight()", "relationNode.getRight().getElement().getSizeInBytes()"], "Fixed commit": "ec46d1fa99fa77bb1e27f58d14d40b732ac6e895", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-06T10:12:06Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rightChildProvider != null) transferCostRight = rightGB * (findCostPerGB(operationProvider, rightChildProvider));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6724/buggy-version/src.main.java.CostModel.CostModel.java", "BodyUseAPI": ["CostModel.CostModel.findCostPerGB(ConfigurationParser.Provider,ConfigurationParser.Provider)"], "Fixed commit": "ec46d1fa99fa77bb1e27f58d14d40b732ac6e895", "Url": "https://api.github.com/repos/V4c0n/Spark_Catalyst_Customization_for_Distributed_Systems", "Date": "2017-03-06T10:12:06Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total == 0) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4024/buggy-version/backend.src.main.nl.tudelft.ti2806.riverrush.game.GameTrack.java", "BodyUseAPI": [], "Fixed commit": "b09b5bf7a5f0222981b0a2bfc3750d20dc2be481", "Url": "https://api.github.com/repos/StreetLampStudios/RiverRush", "Date": "2015-06-05T09:54:23Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.powa.ui.swipeview.SwipeViewAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (viewHolder != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7541/buggy-version/swipeview.src.main.java.com.powa.ui.swipeview.SwipeView.java", "BodyUseAPI": [], "Fixed commit": "13b648dad03c36432e80843ee1a3009bb8253c11", "Url": "https://api.github.com/repos/grumpy-dev/SwipeView", "Date": "2015-10-02T00:14:01Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(T)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sMap == null) { sMap = new com.emc.storageos.dbcli.StringMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9223/buggy-version/tools.dbcli.src.main.java.com.emc.storageos.dbcli.DbCli.java", "BodyUseAPI": [], "Fixed commit": "85872ccd9a7985040182348281c58802a8574d05", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-08-18T11:23:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (variableMap.containsKey(t.getTokenValue())) { Token.Token var = new Token.Token(Token.Token.TokenType.INTEGER, variableMap.get(t.getTokenValue())); operandStack.add(0, var); }else { operandStack.add(0, t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7504/buggy-version/src.Interpreter.Interpreter.java", "BodyUseAPI": ["java.util.List<Token.Token>.add(int,Token.Token)", "java.util.HashMap<java.lang.String, java.lang.String>.get(t.getTokenValue())", "Token.Token.getTokenValue()"], "Fixed commit": "d405d9f5d64740299963916cc5319771bd9f41dd", "Url": "https://api.github.com/repos/sharans003/CompilerDesignAssignment", "Date": "2017-08-25T18:36:42Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mohamedibrahim.nearbyme.adapters.FavoriteAdapter.ItemViewHolder.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getVenue().getLocation().getDistance()) != null) { tvDistance.setText(item.getVenue().getLocation().getDistance().concat(getContext().getResources().getString(R.string.meter))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7721/buggy-version/app.src.main.java.com.mohamedibrahim.nearbyme.adapters.FavoriteAdapter.java", "BodyUseAPI": ["com.mohamedibrahim.nearbyme.views.CustomTextView.setText(item.getVenue().getLocation().getDistance().concat(getContext().getResources().getString(R.string.meter)))", "item.getVenue().getLocation().getDistance().concat(getContext().getResources().getString(R.string.meter))", "item.getVenue().getLocation().getDistance()", "com.mohamedibrahim.nearbyme.models.places.Item.getVenue()", "item.getVenue().getLocation()"], "Fixed commit": "b473969006634730f81ddc2523fe38f95d9ec5d0", "Url": "https://api.github.com/repos/MohamedIbrahimIbrahim/NearbyMe", "Date": "2016-11-04T21:57:23Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mohamedibrahim.nearbyme.adapters.FavoriteAdapter.ItemViewHolder.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getVenue().getName()) != null) { tvTitle.setText(item.getVenue().getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7721/buggy-version/app.src.main.java.com.mohamedibrahim.nearbyme.adapters.FavoriteAdapter.java", "BodyUseAPI": ["com.mohamedibrahim.nearbyme.models.places.Item.getVenue()", "com.mohamedibrahim.nearbyme.views.CustomTextView.setText(item.getVenue().getName())", "item.getVenue().getName()"], "Fixed commit": "b473969006634730f81ddc2523fe38f95d9ec5d0", "Url": "https://api.github.com/repos/MohamedIbrahimIbrahim/NearbyMe", "Date": "2016-11-04T21:57:23Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mohamedibrahim.nearbyme.adapters.FavoriteAdapter.ItemViewHolder.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getVenue().getRating()) != null) { ratingBar.setRating(((java.lang.Float.parseFloat(item.getVenue().getRating())) / 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7721/buggy-version/app.src.main.java.com.mohamedibrahim.nearbyme.adapters.FavoriteAdapter.java", "BodyUseAPI": ["android.widget.RatingBar.setRating(((java.lang.Float.parseFloat(item.getVenue().getRating())) / 2))", "java.lang.Float.parseFloat(item.getVenue().getRating())", "item.getVenue().getRating()", "com.mohamedibrahim.nearbyme.models.places.Item.getVenue()"], "Fixed commit": "b473969006634730f81ddc2523fe38f95d9ec5d0", "Url": "https://api.github.com/repos/MohamedIbrahimIbrahim/NearbyMe", "Date": "2016-11-04T21:57:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mohamedibrahim.nearbyme.adapters.FavoriteAdapter.ItemViewHolder.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getVenue().getLocation().getAddress()) != null) { tvAddress.setText(item.getVenue().getLocation().getAddress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7721/buggy-version/app.src.main.java.com.mohamedibrahim.nearbyme.adapters.FavoriteAdapter.java", "BodyUseAPI": ["item.getVenue().getLocation()", "com.mohamedibrahim.nearbyme.models.places.Item.getVenue()", "com.mohamedibrahim.nearbyme.views.CustomTextView.setText(item.getVenue().getLocation().getAddress())", "item.getVenue().getLocation().getAddress()"], "Fixed commit": "b473969006634730f81ddc2523fe38f95d9ec5d0", "Url": "https://api.github.com/repos/MohamedIbrahimIbrahim/NearbyMe", "Date": "2016-11-04T21:57:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.libbun.UMap<org.libbun.DriverCommand>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (command != null) { command.invoke(this, node, params); }else { org.libbun.Main._Exit(1, (\"unknown command: \" + cmd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4856/buggy-version/src.org.libbun.BunDriver.java", "BodyUseAPI": ["org.libbun.DriverCommand.invoke(org.libbun.BunDriver,org.libbun.PegObject,java.lang.String[])"], "Fixed commit": "fdb709882670cebccd133ba32f94f2ddbe2e416b", "Url": "https://api.github.com/repos/sekiguchi-nagisa/libbun2", "Date": "2014-07-08T17:15:33Z"},
{"Line": "=>1206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentripplanner.util.DateUtils.toDate(java.lang.String,java.lang.String,java.util.TimeZone)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (date == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5044/buggy-version/otp-core.src.main.java.org.opentripplanner.api.ws.TransitIndex.java", "BodyUseAPI": [], "Fixed commit": "bed13665e4fe76e32c096adfdc231cedcd8773e9", "Url": "https://api.github.com/repos/goabout/OpenTripPlanner", "Date": "2013-12-05T11:36:25Z"},
{"Line": "=>1022", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentripplanner.api.ws.TransitIndex.makeCalendar(java.util.TimeZone,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (calendar == null) { return new org.opentripplanner.api.model.error.TransitError(\"Date format can't be parsed.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5044/buggy-version/otp-core.src.main.java.org.opentripplanner.api.ws.TransitIndex.java", "BodyUseAPI": [], "Fixed commit": "bed13665e4fe76e32c096adfdc231cedcd8773e9", "Url": "https://api.github.com/repos/goabout/OpenTripPlanner", "Date": "2013-12-05T11:36:25Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(char,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((newString.length()) <= 8) { if (newString.matches(\"\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\")) { newString = ((((newString.substring(0, 4)) + '.') + (newString.substring(4, 6))) + '.') + (newString.substring(6, 8)); }else if (!(newString.matches(\".*20\\\\d\\\\d.*\"))) { dl = SMALL_DF_LIST; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5044/buggy-version/otp-core.src.main.java.org.opentripplanner.util.DateUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "bed13665e4fe76e32c096adfdc231cedcd8773e9", "Url": "https://api.github.com/repos/goabout/OpenTripPlanner", "Date": "2013-12-05T11:36:25Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(newString.matches(\".*20\\\\d\\\\d.*\"))) { dl = SMALL_DF_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5044/buggy-version/otp-core.src.main.java.org.opentripplanner.util.DateUtils.java", "BodyUseAPI": [], "Fixed commit": "bed13665e4fe76e32c096adfdc231cedcd8773e9", "Url": "https://api.github.com/repos/goabout/OpenTripPlanner", "Date": "2013-12-05T11:36:25Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(guid)) { brand = cgeo.geocaching.connector.trackable.TrackableBrand.TRAVELBUG; return brand; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2766/buggy-version/main.src.cgeo.geocaching.Trackable.java", "BodyUseAPI": [], "Fixed commit": "216b556931ea7068e3b843d028e341d244f82941", "Url": "https://api.github.com/repos/rsudev/c-geo-opensource", "Date": "2015-05-19T09:15:58Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((musicToggle) == true) && ((cs245.memorygame.MainActivity.mediaPlayer.isPlaying()) == false)) { startMusic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2371/buggy-version/app.src.main.java.cs245.memorygame.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bde726a4eece6d82ad68811962d59b0b63a834ec", "Url": "https://api.github.com/repos/nickspencer2/MemoryGame", "Date": "2017-12-02T01:18:13Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((audioPlayer) != null) { audioPlayer.seekTo(progress); currentTime.setText(java.lang.String.valueOf(fileOperation.formatTime(progress))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6416/buggy-version/src.bjtu.group6.droidcorder.AudioListActivity.java", "BodyUseAPI": [], "Fixed commit": "72a51ba0a841ccd1ee3aa61bdb9b90eac06aece2", "Url": "https://api.github.com/repos/ScorpioEF/Droidcorder", "Date": "2014-01-06T05:49:06Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMostOuterScope) { isAccessibleFromPublic = hasPublicModifier; }else { final com.puppycrawl.tools.checkstyle.api.DetailAST parentClassAst = ast.getParent().getParent(); if (((parentClassAst.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.INTERFACE_DEF)) || hasPublicModifier) { isAccessibleFromPublic = com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck.isClassPublic(parentClassAst); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2320/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck.java", "BodyUseAPI": [], "Fixed commit": "1edcea9d3a1068005ad0bdada14bf136e0810dbd", "Url": "https://api.github.com/repos/liscju/checkstyle", "Date": "2015-09-05T14:43:57Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hih.hihUtil.DEBUG) { try { hih.hihUtil.logWriter = new java.io.PrintWriter(((\"LOG_\" + timeStamp) + \".txt\"), \"UTF-8\"); } catch (java.io.FileNotFoundException | java.io.UnsupportedEncodingException err) { java.lang.System.out.println((\"FileNOTfound\" + (err.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6298/buggy-version/hihUtil.java", "BodyUseAPI": [], "Fixed commit": "4b16a4cde8a15383f0a4ef96b5a1336471b8320d", "Url": "https://api.github.com/repos/aristodemos/hihooi", "Date": "2016-02-10T11:52:05Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((emExoPlayer.getDuration()) > 0) { listenerMux.setNotifiedPrepared(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8195/buggy-version/library.src.main.java.com.devbrackets.android.exomedia.EMVideoView.java", "BodyUseAPI": [], "Fixed commit": "d927103eec7dc9a8511f889b364a28f497790770", "Url": "https://api.github.com/repos/MercuryIntermedia/ExoMedia", "Date": "2016-03-13T19:51:48Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.smartlock.eit.smartlock.Userdata.getInstance().getBike().size()) > (bikeSpinner.getSelectedItemPosition())) { if (com.smartlock.eit.smartlock.Userdata.getInstance().getBike(bikeSpinner.getSelectedItemPosition()).isLocked()) { lockbtn.setImageResource(R.drawable.bikelock); }else { lockbtn.setImageResource(R.drawable.bikeunlock); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6844/buggy-version/smartlock.app.src.main.java.com.smartlock.eit.smartlock.HomeFrag.java", "BodyUseAPI": ["com.smartlock.eit.smartlock.Userdata.getInstance().getBike(bikeSpinner.getSelectedItemPosition())", "android.widget.Spinner.getSelectedItemPosition()", "com.smartlock.eit.smartlock.Userdata.getInstance().getBike(bikeSpinner.getSelectedItemPosition()).isLocked()"], "Fixed commit": "83babdda099335c8dea60138c6bdb5eb82af6f2d", "Url": "https://api.github.com/repos/tienqt/eit-iosoi-gruppeC-app", "Date": "2016-04-12T21:18:06Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["csr.getPosData().getPosTimestamp()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bposTime.indexOf(\"+\")) != (-1)) { timeString = bposTime.substring(((bposTime.indexOf(\"T\")) + 1), bposTime.indexOf(\"+\")); }else if ((bposTime.indexOf(\"-\")) != (-1)) { timeString = bposTime.substring(((bposTime.indexOf(\"T\")) + 1), bposTime.lastIndexOf(\"-\")); }else { timeString = bposTime.substring(bposTime.indexOf(\"T\"), ((bposTime.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2180/buggy-version/eps-wincor.src.main.java.com.bhz.eps.processor.CardServiceRequestProcessor.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "184e5f8f0e628c59696e076bd8e015794b978e4a", "Url": "https://api.github.com/repos/hdepsdev/hd-gas-station-proj", "Date": "2017-01-25T10:53:06Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file.findMaxProblemSeverity(IMarker.PROBLEM, true, IResource.DEPTH_INFINITE)) == (org.eclipse.core.resources.IMarker.SEVERITY_ERROR)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9148/buggy-version/dclsuite.src.dclsuite.builder.DCLBuilder.java", "BodyUseAPI": [], "Fixed commit": "1f2dd17344e9626ff1b1726a516a917b8d402a0b", "Url": "https://api.github.com/repos/rterrabh/DCL", "Date": "2014-06-25T17:53:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((link.getDest()) instanceof grl.Feature)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/112/buggy-version/src.seg.jUCMNav.strategies.util.IntentionalElementUtil.java", "BodyUseAPI": [], "Fixed commit": "39c3c7a87d862ebd9402ff270910845efd5e375f", "Url": "https://api.github.com/repos/gmussbacher/seg.jUCMNav", "Date": "2014-04-14T17:56:17Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mediaFeed.getData().size()) > 0) { current_time = java.lang.Long.parseLong(mediaFeed.getData().get(0).getCreatedTime()); current_time_ts = new java.sql.Timestamp((current_time * 1000)); java.lang.System.out.println((((((((((\"API Limit:\" + (mediaFeed.getRemainingLimitStatus())) + \" | current time:\") + current_time_ts) + \"=\") + current_time) + \" | last time:\") + last_time) + \"=\") + (new java.sql.Timestamp((last_time * 1000))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6643/buggy-version/src.edu.usc.tcors.utils.TcorsInstagramUtils.java", "BodyUseAPI": ["mediaFeed.getData().get(0).getCreatedTime()", "java.io.PrintStream.println((((((((((\"API Limit:\" + (mediaFeed.getRemainingLimitStatus())) + \" | current time:\") + current_time_ts) + \"=\") + current_time) + \" | last time:\") + last_time) + \"=\") + (new java.sql.Timestamp((last_time * 1000)))))", "java.lang.Long.parseLong(mediaFeed.getData().get(0).getCreatedTime())", "org.jinstagram.entity.tags.TagMediaFeed.getRemainingLimitStatus()", "org.jinstagram.entity.tags.TagMediaFeed.getData()", "mediaFeed.getData().get(int)"], "Fixed commit": "adc8a0a9a40c0b5595ae78e2220f08e13776b405", "Url": "https://api.github.com/repos/karhai/TcorsMiner", "Date": "2016-03-25T00:12:28Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wfComm) != null) { revThred.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4272/buggy-version/src.com.android.common.AndroidPrinter.java", "BodyUseAPI": [], "Fixed commit": "9f7a8b9a4c811ee1c9e20ffbdbb304d28159c1ed", "Url": "https://api.github.com/repos/superleo-cn/pos-android", "Date": "2013-11-16T10:12:17Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wfComm) != null) { revThred.interrupt(); cheThread.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4272/buggy-version/src.com.android.common.AndroidPrinter.java", "BodyUseAPI": [], "Fixed commit": "9f7a8b9a4c811ee1c9e20ffbdbb304d28159c1ed", "Url": "https://api.github.com/repos/superleo-cn/pos-android", "Date": "2013-11-16T10:12:17Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wfComm) != null) { revThred.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4272/buggy-version/src.com.android.common.AndroidPrinter.java", "BodyUseAPI": [], "Fixed commit": "9f7a8b9a4c811ee1c9e20ffbdbb304d28159c1ed", "Url": "https://api.github.com/repos/superleo-cn/pos-android", "Date": "2013-11-16T10:12:17Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<ca.ucalgary.main.Projectile>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (projectile.move()) { projectiles.remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3848/buggy-version/src.ca.ucalgary.main.TextGame.java", "BodyUseAPI": [], "Fixed commit": "609e78d0c0f8a4dbf86c3d3cefcb583d5b55dfda", "Url": "https://api.github.com/repos/Bonspiel2/CPSC-233-project", "Date": "2017-10-16T00:26:20Z"},
{"Line": "=>1867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.tools.sourceformatter.SourceFormatter._checkUnprocessedExceptions) { com.liferay.portal.tools.sourceformatter.SourceFormatter._checkUnprocessedExceptions(newContent, file, packagePath, fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2648/buggy-version/portal-impl.src.com.liferay.portal.tools.sourceformatter.SourceFormatter.java", "BodyUseAPI": [], "Fixed commit": "67f3a9804abcd2b04d3774f93fe669df97d4266d", "Url": "https://api.github.com/repos/jonmak08/liferay-portal", "Date": "2013-06-11T21:11:38Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tokensScoreMap0.size()) == 0) || ((tokensScoreMap1.size()) == 0)) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/738/buggy-version/src.main.java.org.liwei.similarity.Similarity.java", "BodyUseAPI": [], "Fixed commit": "67adad8b1de0e94fbc3b4789716e1de5713a596b", "Url": "https://api.github.com/repos/LeeeWee/buglocation", "Date": "2017-11-29T05:05:10Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((tokensScoreMap0.size()) == 0) || ((tokensScoreMap1.size()) == 0)) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/738/buggy-version/src.main.java.org.liwei.similarity.Similarity.java", "BodyUseAPI": [], "Fixed commit": "67adad8b1de0e94fbc3b4789716e1de5713a596b", "Url": "https://api.github.com/repos/LeeeWee/buglocation", "Date": "2017-11-29T05:05:10Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (normalizer == 0) normalizer = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6626/buggy-version/src.nbtool.src.behavior_sim.BehaviorInterpreter.java", "BodyUseAPI": [], "Fixed commit": "e05590ebbafbd8a2241cd42b3769df9b477eb22a", "Url": "https://api.github.com/repos/dnav6987/nbites", "Date": "2015-04-29T03:13:39Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (resultList == null) { iTunesResults.setRowCount(0); }else { iTunesResults.setRowData(resultList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1856/buggy-version/src.com.fave100.client.pages.search.SearchView.java", "BodyUseAPI": ["com.fave100.client.widgets.advancedsearch.SearchResultCellList.setRowData(java.util.List<com.fave100.client.requestfactory.SongProxy>)"], "Fixed commit": "6551d71952af3fb67bbf2de906eca374aeed420f", "Url": "https://api.github.com/repos/yissachar/fave100", "Date": "2013-02-04T16:49:31Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.oneapmWebViewClientApi.shouldOverrideUrlLoading(var1)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4987/buggy-version/src.android.org.apache.cordova.oneapm.webview.OneApmPlugin.java", "BodyUseAPI": [], "Fixed commit": "65d9e82790c1beb0d2aa978d239b11d01f843ce0", "Url": "https://api.github.com/repos/codewithyou/oneapm-cordova-plugin", "Date": "2016-04-18T03:42:53Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plugin.getConfig().getInt((applianceType + \"_Uses\"))) == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7843/buggy-version/src.me.menePATH.madetobreak.MBListener.java", "BodyUseAPI": [], "Fixed commit": "7053d439e38ae5a592eddd36ef1c09c8f6d6c94c", "Url": "https://api.github.com/repos/MeneXia/MadeToBreak", "Date": "2012-05-27T12:19:00Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hkust.comp3111h.ballcraft.BallCraft.isServer) hkust.comp3111h.ballcraft.server.ServerGameState.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6328/buggy-version/BallCraft.src.hkust.comp3111h.ballcraft.server.bt.BluetoothService.java", "BodyUseAPI": [], "Fixed commit": "f79791fe30733abea8c241005d2635408e70b489", "Url": "https://api.github.com/repos/overminder/BallCraft", "Date": "2012-04-22T10:49:49Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.jtaf.entity.Series.getLogo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (logo != null) { java.awt.image.BufferedImage bufferedImage = javax.imageio.ImageIO.read(new java.io.ByteArrayInputStream(s.getLogo())); bufferedImage = scaleImage(bufferedImage, java.awt.image.BufferedImage.TYPE_INT_RGB, 120, 60); if (bufferedImage != null) { try (java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream()) { javax.imageio.ImageIO.write(bufferedImage, \"png\", baos); byte[] ba = baos.toByteArray(); return ba; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/707/buggy-version/jtaf-web.src.main.java.ch.jtaf.boundry.SeriesResource.java", "BodyUseAPI": [], "Fixed commit": "b9f427254100e95610ed88ff19970abf82aca81c", "Url": "https://api.github.com/repos/simasch/jtaf", "Date": "2014-05-08T14:07:40Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tmp == null) tmp = r.getMetadataValue((\"Information|Image|V|View|Offset #\" + (spim.fiji.datasetmanager.StackList.leadingZeros(java.lang.Integer.toString((at + 1)), numDigits))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1693/buggy-version/src.main.java.spim.headless.definedataset.LightSheetZ1MetaData.java", "BodyUseAPI": [], "Fixed commit": "cc3543fa2677e45601a3217f8dc258a24c47ed32", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2017-07-19T13:04:33Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(vertexList.contains(v))) { adjacencyList.add(new java.util.LinkedList<java.lang.String>()); vertexList.add(v.getLabel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7415/buggy-version/src.ca.ubc.ece.cpen221.mp3.graph.AdjacencyListGraph.java", "BodyUseAPI": ["ca.ubc.ece.cpen221.mp3.staff.Vertex.getLabel()", "java.util.List<java.lang.String>.add(v.getLabel())"], "Fixed commit": "3e9287f7f6f3811e6cfc6bfd4b3d175458c8f733", "Url": "https://api.github.com/repos/MacKals/mp3", "Date": "2015-10-25T16:50:15Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentTab != null) { url += ((((request.getRequestURI()) + \"/\") + (org.xcolab.view.socialmedia.SocialMediaEngine.TAB_IDENTIFIER)) + \"/\") + currentTab; }else { url += request.getRequestURI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6893/buggy-version/view.src.main.java.org.xcolab.view.socialmedia.SocialMediaEngine.java", "BodyUseAPI": [], "Fixed commit": "a9f3a494d8a39bace402f0f40e4d42b05bd22dcd", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2017-10-07T00:07:40Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value < minY) { minY = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/111/buggy-version/XTEXT.eu.quanticol.carma.core.ui.src.eu.quanticol.carma.core.ui.views.SimulationTrace.java", "BodyUseAPI": [], "Fixed commit": "7f711f2e3ff48fc5b8e96dbe4ac0165b1962fa8e", "Url": "https://api.github.com/repos/Quanticol/CARMA", "Date": "2017-02-10T16:33:23Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intents.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2271/buggy-version/kernel.impl.fabric3-policy.src.main.java.org.fabric3.policy.resolver.AbstractPolicyResolver.java", "BodyUseAPI": [], "Fixed commit": "e4c84a4666e3ca2d9e8172104f79ba22ca73ec9f", "Url": "https://api.github.com/repos/Fabric3/fabric3-core", "Date": "2013-03-05T11:22:47Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameOver)) { performMoveForPlayer(Player.PLAYER_2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9125/buggy-version/core.src.com.mygdx.battleship.BattleshipGame.java", "BodyUseAPI": [], "Fixed commit": "0a0b44ef69af55a424b3fefd42e63a65ee4ca451", "Url": "https://api.github.com/repos/kmh287/Battleship", "Date": "2015-11-13T15:27:19Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (covered.equals(\"\")) { lineNo = \"-1\"; covered = \"-1\"; }else { java.lang.String funcName_lineNo = str.replace((\":\" + covered), \"\"); java.lang.String[] funcName_lineNoArr = funcName_lineNo.split(\"_\"); lineNo = funcName_lineNoArr[((funcName_lineNoArr.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9066/buggy-version/src.main.java.oracle.MutatedJsExecTraceAnalyser.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "e480cf6c7c4e293f4cd82b423fc7761507cd24cd", "Url": "https://api.github.com/repos/saltlab/Pythia", "Date": "2013-08-15T18:54:36Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (covered.equals(\"\")) { lineNo = \"-1\"; covered = \"-1\"; }else { java.lang.String funcName_lineNo = str.replace((\":\" + covered), \"\"); java.lang.String[] funcName_lineNoArr = funcName_lineNo.split(\"_\"); lineNo = funcName_lineNoArr[((funcName_lineNoArr.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9066/buggy-version/src.main.java.oracle.OriginalJsExecTraceAnalyser.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "e480cf6c7c4e293f4cd82b423fc7761507cd24cd", "Url": "https://api.github.com/repos/saltlab/Pythia", "Date": "2013-08-15T18:54:36Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((replies[0].get(REPLMessage.SLOT_INDEX)) == null) { context.displayReply(((\"Frame \" + frameNumber) + \": <empty\")); }else { context.displayReply(((\"Frame \" + frameNumber) + \":\")); for (com.oracle.truffle.tools.debug.shell.REPLMessage message : replies) { final java.lang.StringBuilder sb = new java.lang.StringBuilder(); sb.append(((\"#\" + (message.get(REPLMessage.SLOT_INDEX))) + \": \")); sb.append(((message.get(REPLMessage.SLOT_ID)) + \" = \")); sb.append(message.get(REPLMessage.SLOT_VALUE)); context.displayInfo(sb.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/751/buggy-version/truffle.com.oracle.truffle.tools.debug.shell.src.com.oracle.truffle.tools.debug.shell.client.REPLRemoteCommand.java", "BodyUseAPI": [], "Fixed commit": "d6dc1ddd6ed825ec84a172f033cece7da557f5b5", "Url": "https://api.github.com/repos/jtulach/truffle", "Date": "2016-03-09T02:33:26Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subscript instanceof java.lang.Long) { nodeReference.appendSubscript(((java.lang.Long) (subscript))); }else { nodeReference.appendSubscript(((java.lang.String) (subscript))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8753/buggy-version/2.uosipa.model.src.main.java.com.uosipa.globalsdb.database.Database.java", "BodyUseAPI": [], "Fixed commit": "083dbfad4c46f5dfced26042ed9aa69443ce52dc", "Url": "https://api.github.com/repos/GlobalsDB/Challenges", "Date": "2011-12-04T14:36:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subscript instanceof java.lang.Long) { nodeReference.appendSubscript(((java.lang.Long) (subscript))); }else { nodeReference.appendSubscript(((java.lang.String) (subscript))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8753/buggy-version/2.uosipa.model.src.main.java.com.uosipa.globalsdb.database.Database.java", "BodyUseAPI": [], "Fixed commit": "083dbfad4c46f5dfced26042ed9aa69443ce52dc", "Url": "https://api.github.com/repos/GlobalsDB/Challenges", "Date": "2011-12-04T14:36:50Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFabOpen) animateFAB();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7671/buggy-version/app.src.main.java.vn.mbm.phimp.me.gallery.PhimpMeGallery.java", "BodyUseAPI": [], "Fixed commit": "61abf1901a14e4a69013d525b06e6c0680385f5c", "Url": "https://api.github.com/repos/amitiwary999/phimpme-android", "Date": "2017-04-02T10:29:04Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ip.getText().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parts[0].equals(\"127\")) { errorMessage += \"Die IP darf nicht mit 127 beginnen!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2349/buggy-version/src.net.ddns.akd.wincleaner.view.FriendEditDialogController.java", "BodyUseAPI": [], "Fixed commit": "dfa1b633382f44d94a1791ecd181b28cfa76cc71", "Url": "https://api.github.com/repos/schmitzdominic/WinCleaner", "Date": "2017-02-27T18:20:09Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((entry.getKey()) != null) && ((entry.getValue()) != null)) APIRegistry.perms.registerPermissionProperty((((com.forgeessentials.economy.ModuleEconomy.PERM_PRICE) + \".\") + (entry.getKey())), java.lang.Integer.toString(entry.getValue().getInt(com.forgeessentials.economy.ModuleEconomy.DEFAULT_ITEM_PRICE)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5884/buggy-version/src.main.java.com.forgeessentials.economy.ModuleEconomy.java", "BodyUseAPI": ["APIRegistry.perms.registerPermissionProperty((((com.forgeessentials.economy.ModuleEconomy.PERM_PRICE) + \".\") + (entry.getKey())),java.lang.String)", "java.lang.Integer.toString(entry.getValue().getInt(com.forgeessentials.economy.ModuleEconomy.DEFAULT_ITEM_PRICE))", "java.util.Map.Entry<java.lang.String, net.minecraftforge.common.config.Property>.getValue()", "entry.getValue().getInt(int)", "java.util.Map.Entry<java.lang.String, net.minecraftforge.common.config.Property>.getKey()"], "Fixed commit": "5e9b8f0310a2f1a256549182151c46bdb2f4a10e", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-09-25T17:45:59Z"},
{"Line": "=>1209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Boolean, com.vaadin.ui.Label>.get(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (titleLabel != null) { com.vaadin.ui.Label newLabel = constructTitleLabel(); titleLabels.put(isViewMode(), newLabel); titleBars.get(isViewMode()).replaceComponent(titleLabel, newLabel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9077/buggy-version/dynamo-spring.src.main.java.com.ocs.dynamo.ui.composite.form.ModelBasedEditForm.java", "BodyUseAPI": ["titleBars.get(isViewMode()).replaceComponent(com.vaadin.ui.Label,com.vaadin.ui.Label)"], "Fixed commit": "0eaf9798436724a30ef64c5abc6cf6978a2a2f4c", "Url": "https://api.github.com/repos/opencirclesolutions/dynamo", "Date": "2017-03-23T08:57:39Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.taobao.weex.ui.component.WXComponent.getHostView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((view.getVisibility()) == (android.view.View.VISIBLE)) { if ((view.getMeasuredHeight()) == 0) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8721/buggy-version/android.sdk.src.main.java.com.taobao.weex.ui.component.AppearanceHelper.java", "BodyUseAPI": ["android.view.View.getMeasuredHeight()"], "Fixed commit": "9e547a49b7734bffb161a8181b33470f726328ec", "Url": "https://api.github.com/repos/apache/incubator-weex", "Date": "2017-08-28T02:02:45Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hour > 12) { hour -= 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9257/buggy-version/src.main.java.org.tndata.android.compass.model.Action.java", "BodyUseAPI": [], "Fixed commit": "6c9efd4fb0683e921c076c3e4162a9d754aa0a78", "Url": "https://api.github.com/repos/tndatacommons/android-app", "Date": "2016-01-11T18:19:24Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getAction()) == (android.view.MotionEvent.ACTION_UP)) { holdTimer.removeCallbacks(launchMenu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6953/buggy-version/src.com.iakob.bramblecriste.Timer.java", "BodyUseAPI": [], "Fixed commit": "54c0edde0380003cc0e86aa8b817020af49fb23f", "Url": "https://api.github.com/repos/donkirkby/bramblecriste", "Date": "2013-03-20T00:55:07Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDelegate().getColumnValues()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (values != null) { return org.openntf.domino.utils.Factory.wrapColumnValues(values); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7003/buggy-version/org.openntf.domino.src.org.openntf.domino.impl.Document.java", "BodyUseAPI": ["org.openntf.domino.utils.Factory.wrapColumnValues(java.util.Vector<?>)"], "Fixed commit": "63f084d78ceaf6019ba768c6f551f59c8e4dc423", "Url": "https://api.github.com/repos/mariusj/org.openntf.domino", "Date": "2013-03-17T02:14:41Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_highlighted) && (((_piece) == null) || ((_piece.getOwner()) != (projetEchec.UI.MainWindow.getInstance().getModel().getCurrentPlayer())))) { projetEchec.pieces.Piece movingPiece = _board.getHighlightedPiece(projetEchec.UI.MainWindow.getInstance().getModel().getCurrentPlayer()); if (movingPiece != null) movingPiece.moveTo(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7918/buggy-version/src.projetEchec.UI.Cell.java", "BodyUseAPI": [], "Fixed commit": "52f43e4068cb7aae66d38a0be50afd078a43292e", "Url": "https://api.github.com/repos/Sadikk/Projet-Echec", "Date": "2017-05-29T09:33:07Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parentId.length()) > 3) return oneLetter;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7382/buggy-version/biojava-structure.src.main.java.org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.java", "BodyUseAPI": [], "Fixed commit": "47ab7230063549d4bd0139ad289cfa0c11af465d", "Url": "https://api.github.com/repos/biojava/biojava", "Date": "2017-10-26T00:49:42Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oneLine.indexOf(\":\")) == ((oneLine.length()) - 1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2156/buggy-version/src.com.pipeline.Pipeline.java", "BodyUseAPI": [], "Fixed commit": "ad0731f8b04d238067e6019e40b305c82722b518", "Url": "https://api.github.com/repos/sc703bupt/MathematicaProj", "Date": "2015-04-12T12:47:52Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) { sb.append(\"?\"); sb.append(\", \"); }else { sb.append(i); sb.append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2456/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.model.DeckSet.java", "BodyUseAPI": ["java.lang.StringBuilder.append(int)"], "Fixed commit": "0bf15f892537364cf8a2b9299cffca16121088cd", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-05-05T00:57:49Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) { sb.append(\"?\"); sb.append(\", \"); }else { sb.append(i); sb.append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2456/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.model.Deck.java", "BodyUseAPI": ["java.lang.StringBuilder.append(int)"], "Fixed commit": "0bf15f892537364cf8a2b9299cffca16121088cd", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-05-05T00:57:49Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remove) i.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1537/buggy-version/src.com.infermc.stale.StaleAPI.java", "BodyUseAPI": [], "Fixed commit": "45d566b9ac759a50113228ccd5f4ab734ac534f4", "Url": "https://api.github.com/repos/tmfksoft/StaleAPI", "Date": "2015-07-04T00:31:12Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (controller != null) { visiblePageIds.put(position, controller.getInstanceId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2313/buggy-version/conductor-support.src.main.java.com.bluelinelabs.conductor.support.ControllerPagerAdapter.java", "BodyUseAPI": ["android.util.SparseArray<java.lang.String>.put(int,controller.getInstanceId())", "com.bluelinelabs.conductor.Controller.getInstanceId()"], "Fixed commit": "690001ed2a42d2aa89ecbf63a48b0f972c22806c", "Url": "https://api.github.com/repos/hansonchris/Conductor", "Date": "2017-02-01T16:12:36Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(parent.mkdirs())) { org.backmeup.storage.logic.impl.LocalFilesystemStorage.LOGGER.info((\"Unable to create parent directory \" + parent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/674/buggy-version/backmeup-storage-service.src.main.java.org.backmeup.storage.logic.impl.LocalFilesystemStorage.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "37163c0315979c73dfe1f0d0b266dc9313cf7f4a", "Url": "https://api.github.com/repos/backmeup/backmeup-storage", "Date": "2015-01-23T09:08:50Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((neuralnet.Node.rand.nextBoolean()) == true) dweights[i] *= -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4389/buggy-version/Neural.src.neuralnet.Node.java", "BodyUseAPI": [], "Fixed commit": "4b25c2313b3407dc5d701e978ca9715f0e7170a5", "Url": "https://api.github.com/repos/ZPaulo/IART", "Date": "2015-05-26T17:10:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tileEntity instanceof enhancedportals.tileentity.TileEntityDialDeviceBasic) { cpw.mods.fml.common.network.PacketDispatcher.sendPacketToPlayer(new enhancedportals.network.packet.PacketTEUpdate(((enhancedportals.tileentity.TileEntityDialDeviceBasic) (tileEntity))).getPacket(), ((cpw.mods.fml.common.network.Player) (player))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3240/buggy-version/common.enhancedportals.network.GuiHandler.java", "BodyUseAPI": [], "Fixed commit": "a0e8eb1dd3ba8154cc547a7b72844baa073aa267", "Url": "https://api.github.com/repos/ShadedDimension/enhanced-portals", "Date": "2013-05-17T11:17:23Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.simulator.coordinator.RunTestSuiteTask.run()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (success) { com.hazelcast.simulator.coordinator.Coordinator.LOGGER.info(\"Run complete!\"); }else { throw new java.lang.RuntimeException(\"Run completed with failures!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2972/buggy-version/simulator.src.main.java.com.hazelcast.simulator.coordinator.Coordinator.java", "BodyUseAPI": [], "Fixed commit": "fd0265aea4ee2afd0eed39e98a64e29ccf8cbb54", "Url": "https://api.github.com/repos/hazelcast/hazelcast-simulator", "Date": "2016-09-04T18:36:16Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ind2 == ((NN_POP_SIZE) - 1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1878/buggy-version/controllers.EpuckController.EpuckController.java", "BodyUseAPI": [], "Fixed commit": "b9b06ed12c010d2dabbd273725550e38c78126e8", "Url": "https://api.github.com/repos/apawlicka/darwinian-epuck", "Date": "2013-03-31T20:06:06Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ind1 == ((NN_POP_SIZE) - 1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1878/buggy-version/controllers.EpuckController.EpuckController.java", "BodyUseAPI": [], "Fixed commit": "b9b06ed12c010d2dabbd273725550e38c78126e8", "Url": "https://api.github.com/repos/apawlicka/darwinian-epuck", "Date": "2013-03-31T20:06:06Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ind2 == ((NN_POP_SIZE) - 1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1878/buggy-version/controllers.SupervisorController.SupervisorController.java", "BodyUseAPI": [], "Fixed commit": "b9b06ed12c010d2dabbd273725550e38c78126e8", "Url": "https://api.github.com/repos/apawlicka/darwinian-epuck", "Date": "2013-03-31T20:06:06Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ind1 == ((NN_POP_SIZE) - 1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1878/buggy-version/controllers.SupervisorController.SupervisorController.java", "BodyUseAPI": [], "Fixed commit": "b9b06ed12c010d2dabbd273725550e38c78126e8", "Url": "https://api.github.com/repos/apawlicka/darwinian-epuck", "Date": "2013-03-31T20:06:06Z"},
{"Line": "=>1042", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.Name.contains(\"TropicraftCoral2\")) { ljdp.minechem.api.recipe.DecomposerRecipe.add(new ljdp.minechem.api.recipe.DecomposerRecipeChance(event.Ore, 0.1F, new ljdp.minechem.api.core.Molecule(dderm))); }else if (event.Name.contains(\"TropicraftCoral3\")) { ljdp.minechem.api.recipe.DecomposerRecipe.add(new ljdp.minechem.api.recipe.DecomposerRecipeChance(event.Ore, 0.1F, new ljdp.minechem.api.core.Molecule(pal2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1880/buggy-version/ljdp.minechem.common.recipe.MinechemRecipes.java", "BodyUseAPI": ["ljdp.minechem.api.recipe.DecomposerRecipe.add(ljdp.minechem.api.recipe.DecomposerRecipeChance)", "ljdp.minechem.api.recipe.DecomposerRecipe.add(ljdp.minechem.api.recipe.DecomposerRecipeChance)", "event.Name.contains(java.lang.String)"], "Fixed commit": "d0265e78b02caa5e95805746e62e22a698e3dfb4", "Url": "https://api.github.com/repos/perky/Minechem", "Date": "2013-02-19T17:40:52Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(x[i])) == (java.lang.Math.abs(y[i]))) { if ((y[i]) < 0) { negative = true; } break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8535/buggy-version/LekkerRekenen.src.lekkerrekenen.Addition.java", "BodyUseAPI": [], "Fixed commit": "2aca7b8ea8845b2847897cf941293fe78c27c412", "Url": "https://api.github.com/repos/jamiro24/LekkerRekenen", "Date": "2016-09-24T19:16:23Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (gene != null) { genesToCreate.add(gene.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3269/buggy-version/goci-data-services.goci-association-upload-services.src.main.java.uk.ac.ebi.spot.goci.service.AssociationAttributeService.java", "BodyUseAPI": ["java.util.Collection<java.lang.String>.add(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "16841043701b556b9b216a0f91b8fc07d4e8927f", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2017-04-19T16:02:41Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (separatedProxy != null) { proxies.add(separatedProxy.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3269/buggy-version/goci-data-services.goci-association-upload-services.src.main.java.uk.ac.ebi.spot.goci.service.AssociationRowProcessor.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "16841043701b556b9b216a0f91b8fc07d4e8927f", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2017-04-19T16:02:41Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (separatedRiskAllele != null) { riskAlleles.add(separatedRiskAllele.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3269/buggy-version/goci-data-services.goci-association-upload-services.src.main.java.uk.ac.ebi.spot.goci.service.AssociationRowProcessor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "16841043701b556b9b216a0f91b8fc07d4e8927f", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2017-04-19T16:02:41Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (separatedSnp != null) { snps.add(separatedSnp.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3269/buggy-version/goci-data-services.goci-association-upload-services.src.main.java.uk.ac.ebi.spot.goci.service.AssociationRowProcessor.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "16841043701b556b9b216a0f91b8fc07d4e8927f", "Url": "https://api.github.com/repos/EBISPOT/goci", "Date": "2017-04-19T16:02:41Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRoot) != null) { for (int i = 0; i < (mColumnCount); i++) { org.gdg.frisbee.android.view.ListView lv = ((org.gdg.frisbee.android.view.ListView) (mRoot.getChildAt(i))); if ((lv.getFirstVisiblePosition()) > val) val = lv.getFirstVisiblePosition(); } timber.log.Timber.d((\"Visible: \" + val)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5480/buggy-version/app.src.main.java.org.gdg.frisbee.android.view.MyView.java", "BodyUseAPI": [], "Fixed commit": "613b222ae2adddc93708fd90817a93cc6536ff52", "Url": "https://api.github.com/repos/jmsalcido/frisbee", "Date": "2014-06-21T13:54:28Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.http.client.Response.getHeader(org.eclipse.che.ide.rest.HTTPHeader.CONTENT_TYPE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((contentType != null) && (!(contentType.contains(org.eclipse.che.ide.MimeType.APPLICATION_JSON)))) { java.lang.String message = ((((response.getStatusCode()) + \" \") + (response.getStatusText())) + \" \") + (this.request.getRequestBuilder().getUrl()); exception = new java.lang.Exception(message); }else { exception = new org.eclipse.che.ide.commons.exception.ServerException(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4225/buggy-version/commons.che-core-commons-gwt.src.main.java.org.eclipse.che.ide.rest.AsyncRequestCallback.java", "BodyUseAPI": [], "Fixed commit": "4b83713a3b454280acce0d932b11b8a839595fdd", "Url": "https://api.github.com/repos/codenvy-legacy/che-core", "Date": "2015-06-12T09:03:23Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.matches(messageSource.getMessage(\"validation.pattern\", null, local))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (verif) { java.lang.String[] date = d.split(\"-\"); int year = java.lang.Integer.parseInt(date[2]); int month = -1; int day = -1; if (local.equals(java.util.Locale.FRENCH)) { month = java.lang.Integer.parseInt(date[1]); day = java.lang.Integer.parseInt(date[0]); } if (local.equals(java.util.Locale.ENGLISH)) { month = java.lang.Integer.parseInt(date[0]); day = java.lang.Integer.parseInt(date[1]); } if (((year == 2038) && (((month == 1) && (day > 19)) || (month > 1))) || (year > 2038)) { return false; } if (year <= 1970) return false; if (((month == 2) && (!((((year % 4) == 0) && ((year % 100) != 0)) || ((year % 400) == 0)))) && (day == 29)) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5626/buggy-version/computer-database.src.main.java.com.excilys.cdb.validation.DateValidator.java", "BodyUseAPI": [], "Fixed commit": "504a7cedd25eb4c8d6cc964ca5e8ae88b8995e47", "Url": "https://api.github.com/repos/ahammani/computer-database", "Date": "2015-05-13T13:01:37Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schemeList.length) == 1) { this.deleteSchemeButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2684/buggy-version/src.me.guoyunhe.fontweak.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "c520c0aa4a7ffd7f1e0965a27d18dec98e908c33", "Url": "https://api.github.com/repos/guoyunhe/fontweak", "Date": "2015-09-11T06:28:44Z"},
{"Line": "=>784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schemeComboBox.getItemCount()) == 1) { deleteSchemeButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2684/buggy-version/src.me.guoyunhe.fontweak.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "c520c0aa4a7ffd7f1e0965a27d18dec98e908c33", "Url": "https://api.github.com/repos/guoyunhe/fontweak", "Date": "2015-09-11T06:28:44Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.getJailLocation()) == null) { sender.sendMessage(\"[MBJail] No jail has been set!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6543/buggy-version/src.com.dev.aaaa.plugins.mbjail.commands.UnJail.java", "BodyUseAPI": [], "Fixed commit": "4065f460b538b7fc1f4607ae4ea8e913d0b2bf9f", "Url": "https://api.github.com/repos/CoolAAA/MBJail", "Date": "2014-07-05T04:10:56Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.getJailLocation()) == null) { sender.sendMessage(\"[MBJail] No jail has been set!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6543/buggy-version/src.com.dev.aaaa.plugins.mbjail.commands.Jail.java", "BodyUseAPI": [], "Fixed commit": "4065f460b538b7fc1f4607ae4ea8e913d0b2bf9f", "Url": "https://api.github.com/repos/CoolAAA/MBJail", "Date": "2014-07-05T04:10:56Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((headType) == (com.baselet.element.facet.specific.sequence_aio.Lifeline.LifelineHeadType.STANDARD)) || ((headType) == (com.baselet.element.facet.specific.sequence_aio.Lifeline.LifelineHeadType.ACTIVE_CLASS))) { width -= (com.baselet.element.facet.specific.sequence_aio.Lifeline.HEAD_HORIZONTAL_BORDER_PADDING) * 2; if ((headType) == (com.baselet.element.facet.specific.sequence_aio.Lifeline.LifelineHeadType.ACTIVE_CLASS)) { width -= (com.baselet.element.facet.specific.sequence_aio.Lifeline.ACTIVE_CLASS_DOUBLE_BORDER_GAP) * 2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3555/buggy-version/BaseletElements.src.com.baselet.element.facet.specific.sequence_aio.Lifeline.java", "BodyUseAPI": [], "Fixed commit": "c15db02da0a24bcb17a912815fe041da5a7b7e64", "Url": "https://api.github.com/repos/hirzraimund/umlet", "Date": "2015-07-22T19:03:54Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mList.size()) > 0) { ((com.xlythe.spotifysteamer.MainActivity) (getActivity())).addFragmentPlayer(mList, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3350/buggy-version/app.src.main.java.com.xlythe.spotifysteamer.TopTracksFragment.java", "BodyUseAPI": ["((com.xlythe.spotifysteamer.MainActivity) (getActivity())).addFragmentPlayer(java.util.ArrayList<com.xlythe.spotifysteamer.TopTracksParcelable>,int)"], "Fixed commit": "34672286bae1958455ae3f43055a44e59af62d8a", "Url": "https://api.github.com/repos/bourdakos1/Spotify-Streamer", "Date": "2015-08-25T20:24:55Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dictId != 0) { dictDto = dictionaryEntryService.findDictionaryEntryById(dictId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8985/buggy-version/src.main.java.com.euroit.militaryshop.service.impl.ItemServiceImpl.java", "BodyUseAPI": ["com.euroit.militaryshop.service.DictionaryEntryService.findDictionaryEntryById(long)"], "Fixed commit": "47a2a0e72f4e7086456cb5035bcb78e5d2899365", "Url": "https://api.github.com/repos/icehockeystar/militaryshop", "Date": "2013-09-15T17:04:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((acLeft) != null) && ((acRight) != null)) { if ((acLeft.getType().isDefendingType()) && (acLeft.isVisible())) { acLeft.paintOnScene(g2d, elapsedTime); if (acRight.isVisible()) { acRight.paintOnScene(g2d, elapsedTime); } }else { if (acRight.isVisible()) { acRight.paintOnScene(g2d, elapsedTime); } if (acLeft.isVisible()) { acLeft.paintOnScene(g2d, elapsedTime); } } }else { if (((acLeft) != null) && (acLeft.isVisible())) { acLeft.paintOnScene(g2d, elapsedTime); } if (((acRight) != null) && (acRight.isVisible())) { acRight.paintOnScene(g2d, elapsedTime); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6977/buggy-version/de.kvwl.n8dA.robotwars.src.main.java.de.kvwl.n8dA.robotwars.server.visualization.scene.robot.RobotScene.java", "BodyUseAPI": [], "Fixed commit": "1a21f1b950b333c185f8c0531224c7b3e8cf54f2", "Url": "https://api.github.com/repos/MuesLee/n8dA", "Date": "2015-04-08T05:36:44Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (l == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2960/buggy-version/src.main.java.net.sf.jabref.importer.fetcher.INSPIREBibtexFilterReader.java", "BodyUseAPI": [], "Fixed commit": "c09631a57f6e0931b7aadfc91751136abb2e1b8c", "Url": "https://api.github.com/repos/Siedlerchr/jabref", "Date": "2015-12-02T21:39:56Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (indicatorDefinition == null) { indicatorDefinition = indicator.getIndicatorDefinition(); if (indicatorDefinition.eIsProxy()) { indicatorDefinition = ((org.talend.dataquality.indicators.definition.IndicatorDefinition) (org.talend.dq.helper.EObjectHelper.resolveObject(indicatorDefinition))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4911/buggy-version/main.plugins.org.talend.cwm.management.src.main.java.org.talend.dq.analysis.ColumnAnalysisSqlExecutor.java", "BodyUseAPI": [], "Fixed commit": "e724d570d87e4c05b7965a733991852bd80f786a", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2015-07-08T06:52:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (block != null) for (java.lang.Object o : block.statements()) this._statements.add(new edu.rice.cs.caper.bayou.application.dom_driver.DOMStatement(((org.eclipse.jdt.core.dom.Statement) (o))).handleAML());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3362/buggy-version/src.main.java.edu.rice.cs.caper.bayou.application.dom_driver.DOMBlock.java", "BodyUseAPI": [], "Fixed commit": "4de6f6b644d7d08f15652c4f149cd2fa65684d6a", "Url": "https://api.github.com/repos/capergroup/bayou", "Date": "2017-10-17T22:59:45Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length > 22) { if (!(\"'\".equals(toParse.substring(22, 23)))) { isCorrect = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5292/buggy-version/src.main.java.org.verapdf.tools.TypeConverter.java", "BodyUseAPI": [], "Fixed commit": "8da2913b8c2b4e90dd4c996a8b1b3e1f9666260a", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-parser", "Date": "2016-09-16T11:45:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length > 23) { isCorrect = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5292/buggy-version/src.main.java.org.verapdf.tools.TypeConverter.java", "BodyUseAPI": [], "Fixed commit": "8da2913b8c2b4e90dd4c996a8b1b3e1f9666260a", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-parser", "Date": "2016-09-16T11:45:45Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.kdvolder.tttree.TTTree<K, V>.put(K,V)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (new_l == (l)) { return this; }else if ((new_l.depth()) > (l.depth())) { K lk = ((com.github.kdvolder.tttree.TTTree.Node2<K, V>) (new_l)).k; com.github.kdvolder.tttree.TTTree<K, V> ll = ((com.github.kdvolder.tttree.TTTree.Node2<K, V>) (new_l)).l; com.github.kdvolder.tttree.TTTree<K, V> lr = ((com.github.kdvolder.tttree.TTTree.Node2<K, V>) (new_l)).r; return new com.github.kdvolder.tttree.TTTree.Node3<>(ll, lk, lr, k, r); }else { return new com.github.kdvolder.tttree.TTTree.Node2<>(new_l, k, r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3763/buggy-version/src.main.java.com.github.kdvolder.tttree.TTTree.java", "BodyUseAPI": ["com.github.kdvolder.tttree.TTTree<K, V>.depth()"], "Fixed commit": "d3b1c852931951a8433ec3ec6814f40bba79075d", "Url": "https://api.github.com/repos/kdvolder/two-three-tree", "Date": "2016-06-05T04:08:58Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.kdvolder.tttree.TTTree<K, V>.put(K,V)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r == (this.r)) { return this; }else { return new com.github.kdvolder.tttree.TTTree.Node3<>(l, k1, m, k2, r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3763/buggy-version/src.main.java.com.github.kdvolder.tttree.TTTree.java", "BodyUseAPI": [], "Fixed commit": "d3b1c852931951a8433ec3ec6814f40bba79075d", "Url": "https://api.github.com/repos/kdvolder/two-three-tree", "Date": "2016-06-05T04:08:58Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.kdvolder.tttree.TTTree<K, V>.put(K,V)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (m == (this.m)) { return this; }else { return new com.github.kdvolder.tttree.TTTree.Node3<>(l, k1, m, k2, r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3763/buggy-version/src.main.java.com.github.kdvolder.tttree.TTTree.java", "BodyUseAPI": [], "Fixed commit": "d3b1c852931951a8433ec3ec6814f40bba79075d", "Url": "https://api.github.com/repos/kdvolder/two-three-tree", "Date": "2016-06-05T04:08:58Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.kdvolder.tttree.TTTree<K, V>.put(K,V)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (new_r == (r)) { return this; }else if ((new_r.depth()) > (r.depth())) { K rk = ((com.github.kdvolder.tttree.TTTree.Node2<K, V>) (new_r)).k; com.github.kdvolder.tttree.TTTree<K, V> rl = ((com.github.kdvolder.tttree.TTTree.Node2<K, V>) (new_r)).l; com.github.kdvolder.tttree.TTTree<K, V> rr = ((com.github.kdvolder.tttree.TTTree.Node2<K, V>) (new_r)).r; return new com.github.kdvolder.tttree.TTTree.Node3<>(l, k, rl, rk, rr); }else { return new com.github.kdvolder.tttree.TTTree.Node2<>(l, k, new_r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3763/buggy-version/src.main.java.com.github.kdvolder.tttree.TTTree.java", "BodyUseAPI": ["com.github.kdvolder.tttree.TTTree<K, V>.depth()"], "Fixed commit": "d3b1c852931951a8433ec3ec6814f40bba79075d", "Url": "https://api.github.com/repos/kdvolder/two-three-tree", "Date": "2016-06-05T04:08:58Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.kdvolder.tttree.TTTree<K, V>.put(K,V)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (l == (this.l)) { return this; }else if ((l.depth()) > (this.l.depth())) { return new com.github.kdvolder.tttree.TTTree.Node2<>(l, k1, new com.github.kdvolder.tttree.TTTree.Node2<>(m, k2, r)); }else { return new com.github.kdvolder.tttree.TTTree.Node3<>(l, k1, m, k2, r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3763/buggy-version/src.main.java.com.github.kdvolder.tttree.TTTree.java", "BodyUseAPI": ["com.github.kdvolder.tttree.TTTree<K, V>.depth()"], "Fixed commit": "d3b1c852931951a8433ec3ec6814f40bba79075d", "Url": "https://api.github.com/repos/kdvolder/two-three-tree", "Date": "2016-06-05T04:08:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (randomizeOriginal) { java.util.Collections.shuffle(methodList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/559/buggy-version/dt-impact-tracer.src.edu.washington.cs.dt.impact.technique.Prioritization.java", "BodyUseAPI": [], "Fixed commit": "40a8096e21b5c54c95e7baf2d7a0597b5526bc9c", "Url": "https://api.github.com/repos/winglam/dependent-tests-impact", "Date": "2016-01-24T18:29:25Z"},
{"Line": "=>2004", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closed) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/361/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSource.java", "BodyUseAPI": [], "Fixed commit": "de4bfb0ae3ae656a175844c518345c4f5563e6de", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2017-06-02T08:58:46Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isWindows) && (!(value.equalsIgnoreCase(path.getCanonicalPath())))) throw new org.owasp.validator.ValidationException(\"Not a valid file path\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4618/buggy-version/core.src.main.java.org.owasp.validator.base.FilePathValidator.java", "BodyUseAPI": [], "Fixed commit": "c14c25429885259b30d3efc7858b162a69277c7a", "Url": "https://api.github.com/repos/vdbaan/owasp-java-validator", "Date": "2015-12-03T13:59:14Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vv.getGraphLayout().getGraph().findEdge(model.Vertex,model.Vertex)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nedge == null) { nedge = new model.Edge(other, vertex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8362/buggy-version/src.control.MyPopupPlugin.java", "BodyUseAPI": [], "Fixed commit": "8f6962dfc5c41ea95b4f2facbae2d7136081c681", "Url": "https://api.github.com/repos/aslepikas/Project", "Date": "2015-03-19T11:06:55Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(nedge.getLabels().isEmpty())) graph.addEdge(nedge, other, vertex, EdgeType.DIRECTED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8362/buggy-version/src.control.MyPopupPlugin.java", "BodyUseAPI": ["edu.uci.ics.jung.graph.Graph<model.Vertex, model.Edge>.addEdge(model.Edge,model.Vertex,model.Vertex,EdgeType.DIRECTED)"], "Fixed commit": "8f6962dfc5c41ea95b4f2facbae2d7136081c681", "Url": "https://api.github.com/repos/aslepikas/Project", "Date": "2015-03-19T11:06:55Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7371/buggy-version/src.com.company.draw.shapes.Root.java", "BodyUseAPI": [], "Fixed commit": "b864e69a7314d68a7f191577822618f77ea5f04f", "Url": "https://api.github.com/repos/mn263/DrawTree", "Date": "2014-12-10T02:13:10Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastUndo == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7371/buggy-version/src.com.company.draw.shapes.Root.java", "BodyUseAPI": [], "Fixed commit": "b864e69a7314d68a7f191577822618f77ea5f04f", "Url": "https://api.github.com/repos/mn263/DrawTree", "Date": "2014-12-10T02:13:10Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.zstack.core.db.Q.New(org.zstack.compute.host.HostVO.class).eq(HostVO_.uuid, msg.getHostUuid()).isExists())) { reply.setNoReconnect(true); }else if (changeConnectionState(HostStatusEvent.disconnected)) { new org.zstack.core.logging.Event().log(HostLogLabel.HOST_STATUS_DISCONNECTED, self.getUuid(), self.getName(), errorCode.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5910/buggy-version/compute.src.main.java.org.zstack.compute.host.HostBase.java", "BodyUseAPI": [], "Fixed commit": "e1f2bd4faeedafd89b5f580fdd6c4a45d7c756dc", "Url": "https://api.github.com/repos/AlanJager/zstack", "Date": "2017-04-10T11:57:05Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(path.endsWith(\".xml\"))) { path = path + \".xml\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/513/buggy-version/src.main.java.seedu.taskscheduler.logic.parser.SetpathCommandParser.java", "BodyUseAPI": [], "Fixed commit": "3ae691ca8fe8fa22ef2f0352e936aec8ad99b3f2", "Url": "https://api.github.com/repos/MustDoList/main", "Date": "2016-11-06T10:18:53Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getUserObject()) == user) { node.removeFromParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8896/buggy-version/Application.src.main.java.com.justchat.client.gui.panel.components.UserList.java", "BodyUseAPI": ["javax.swing.tree.DefaultMutableTreeNode.removeFromParent()"], "Fixed commit": "3f98bd5ab7c994535453172f981cc9b338f74448", "Url": "https://api.github.com/repos/brian978/JustChat", "Date": "2014-05-03T20:36:05Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) mapAdapter.write(out, kr.rvs.mclibrary.bukkit.gson.ConfigurationSerializableAdapter.serialize(value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/960/buggy-version/src.main.java.kr.rvs.mclibrary.bukkit.gson.ConfigurationSerializableAdapter.java", "BodyUseAPI": ["com.google.gson.TypeAdapter<java.util.Map>.write(com.google.gson.stream.JsonWriter,java.util.Map<java.lang.String, java.lang.Object>)", "kr.rvs.mclibrary.bukkit.gson.ConfigurationSerializableAdapter.serialize(org.bukkit.configuration.serialization.ConfigurationSerializable)"], "Fixed commit": "c1fe6f0f986bfbc0799e657b6bc4a9404c9c6be9", "Url": "https://api.github.com/repos/EntryPointKR/MCLibrary", "Date": "2017-10-26T15:45:36Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((course.getSite()) != null) { org.fenixedu.cms.domain.Category cat = course.getSite().categoryForSlug(\"summary\"); if (cat != null) { response.setHeader(\"Location\", cat.getRssUrl()); response.setStatus(HttpServletResponse.SC_MOVED_PERMANENTLY); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2598/buggy-version/src.main.java.pt.ist.fenix.ui.struts.action.externalServices.LegacySummaryRSSAction.java", "BodyUseAPI": ["org.fenixedu.academic.domain.ExecutionCourse.getSite()", "course.getSite().categoryForSlug(java.lang.String)"], "Fixed commit": "eecc1e49ec38a1c0471203a49c9307d02fd025c6", "Url": "https://api.github.com/repos/jcarvalho/fenix-ist", "Date": "2015-03-05T12:58:57Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.dzikoysk.funnyguilds.basic.util.RegionUtils.getAt(loc)) != null) { p.sendMessage(m.createIsNear); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7055/buggy-version/src.main.java.net.dzikoysk.funnyguilds.command.ExcCreate.java", "BodyUseAPI": [], "Fixed commit": "d017a658b3f5e7819094298cc642341c4668e5c1", "Url": "https://api.github.com/repos/Xierip/FunnyGuilds", "Date": "2017-08-05T12:52:22Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pubInfoObj == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8815/buggy-version/src.us.kbase.narrativemethodstore.db.NarrativeMethodData.java", "BodyUseAPI": [], "Fixed commit": "78f50fd1af75a1545d4699bb64c724732c1e18ed", "Url": "https://api.github.com/repos/rsutormin/narrative_method_store", "Date": "2016-02-04T21:04:05Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vals == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6022/buggy-version/src.wekiinputhelper.Criterion.java", "BodyUseAPI": [], "Fixed commit": "f5e47ea6edd29c8ffa47fc064a135ad05654afd6", "Url": "https://api.github.com/repos/fiebrink1/WekiInputHelper", "Date": "2016-03-26T20:21:23Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jwspFiles != null) { for (java.io.File currentFile : jwspFiles) { currentFile.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/749/buggy-version/OracleDatabaseStrategy.src.main.java.de.codecentric.ddt.resourcestrategies.databases.oracle.OracleDatabaseStrategy.java", "BodyUseAPI": [], "Fixed commit": "f1b45e16a304606aafba27d0f41e71d322f69b1a", "Url": "https://api.github.com/repos/GeroNiessen/DDT", "Date": "2013-02-18T13:28:40Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((jsonLeg.get(\"annotation\")) != null) { annotation = new osrm_interface.Annotation(jsonLeg.get(\"annotation\").asObject()); }else { annotation = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4838/buggy-version/src.osrm_interface.RouteLeg.java", "BodyUseAPI": [], "Fixed commit": "036af01d7bc80ad5a250b9134b0b8266c1a9a466", "Url": "https://api.github.com/repos/AquioxSoftware/OSRM-Java-Interface", "Date": "2016-05-26T17:44:29Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filterArguments.length) == 0) { whereKeyWord = \"\"; }else { whereKeyWord = \"WHERE\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8768/buggy-version/src.main.java.com.molotkov.db.DBUtils.java", "BodyUseAPI": [], "Fixed commit": "d856d9fbcb22c5a1724f9ce50bae299f37ae8e6f", "Url": "https://api.github.com/repos/MikhailMS/java-shop-example", "Date": "2017-12-06T16:37:04Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (PetConfig.randomizePetNames) { this.petName = me.cnaude.plugin.PetCreeper.PetMain.get().getRandomName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9217/buggy-version/src.me.cnaude.plugin.PetCreeper.Pet.java", "BodyUseAPI": [], "Fixed commit": "bf4f300d79cd0d62b8e646656c9cfb9ad29b08e3", "Url": "https://api.github.com/repos/cnaude/PetCreeper", "Date": "2012-11-18T03:24:39Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((marker.getPosition()) == null) || ((mGoogleMap.getMyLocation()) == null)) { android.widget.Toast.makeText(getApplicationContext(), R.string.locating, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4732/buggy-version/src.com.cruzroja.creuroja.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3bc409fe50b94bbf9496ef043576795588481908", "Url": "https://api.github.com/repos/darthsuicune/CreuRoja", "Date": "2013-05-03T16:14:21Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actions) == null) { actions = new java.util.Vector<org.openflexo.foundation.view.diagram.viewpoint.GraphicalElementAction>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8005/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.view.diagram.viewpoint.GraphicalElementPatternRole.java", "BodyUseAPI": [], "Fixed commit": "60c9c5cd3366350079f1aa22315e9d4fde4b3c5e", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-09-03T12:31:38Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.builtbroken.mc.api.tile.node.ITileNode.getMissile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (missile != null) { org.lwjgl.opengl.GL11.glPushMatrix(); try { double h = (missile.getHeight()) / 2; org.lwjgl.opengl.GL11.glTranslated((xx + (offset.x())), ((yy + (offset.y())) + h), (zz + (offset.z()))); com.builtbroken.icbm.content.missile.client.RenderMissile.renderMissile(missile, 0, 90, null); } catch (java.lang.Exception e) { throw new java.lang.RuntimeException(e); } org.lwjgl.opengl.GL11.glPopMatrix(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1702/buggy-version/src.main.java.com.builtbroken.icbm.content.launcher.listeners.TileMissileRenderListener.java", "BodyUseAPI": ["com.builtbroken.icbm.api.modules.IMissile.getHeight()", "com.builtbroken.icbm.content.missile.client.RenderMissile.renderMissile(com.builtbroken.icbm.api.modules.IMissile,int,int,<nulltype>)"], "Fixed commit": "1609a99bd46722a97a12836ad1389c5fb5c3298e", "Url": "https://api.github.com/repos/BuiltBrokenModding/ICBM", "Date": "2017-06-25T23:13:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof com.feku.englishcards.activity.LeitnerModeActivity) { ((android.widget.TextView) (view.findViewById(R.id.cardTranslation))).setText(\"SHOW TRANSLATION\"); view.findViewById(R.id.cardTranslation).setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { ((android.widget.TextView) (v)).setText(com.feku.englishcards.fragment.CardFragment.currentCard.getRussianWord()); } }); }else { ((android.widget.TextView) (view.findViewById(R.id.cardTranslation))).setText(com.feku.englishcards.fragment.CardFragment.currentCard.getRussianWord()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7605/buggy-version/app.src.main.java.com.feku.englishcards.fragment.CardFragment.java", "BodyUseAPI": [], "Fixed commit": "98bab384e950ed22c851ab66e6f33fea2595688c", "Url": "https://api.github.com/repos/heyferh/englishcards", "Date": "2015-09-02T12:05:34Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { _running = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3136/buggy-version/xul.src.com.starcor.xul.Render.Text.XulMarqueeTextRenderer.java", "BodyUseAPI": [], "Fixed commit": "5370dbf388c6920f998c284464843f2c53cf3aa2", "Url": "https://api.github.com/repos/starcor-company/starcor.xul", "Date": "2017-11-13T08:11:26Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_marqueeAnimation) != null) && (!(isEmpty()))) { _render.addAnimation(_marqueeAnimation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3136/buggy-version/xul.src.com.starcor.xul.Render.Text.XulMarqueeTextRenderer.java", "BodyUseAPI": [], "Fixed commit": "5370dbf388c6920f998c284464843f2c53cf3aa2", "Url": "https://api.github.com/repos/starcor-company/starcor.xul", "Date": "2017-11-13T08:11:26Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tile) != null) { this.syncFields(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2481/buggy-version/src.main.java.com.lothrazar.cyclicmagic.gui.base.ContainerBaseMachine.java", "BodyUseAPI": [], "Fixed commit": "fe526345a2a388d700b54ee54d6612efcb66171f", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2017-08-08T03:13:17Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((submission.getDataNode().has(\"preview\")) && (submission.getDataNode().get(\"preview\").get(\"images\").get(0).get(\"source\").has(\"height\"))) { url = submission.getDataNode().get(\"preview\").get(\"images\").get(0).get(\"source\").get(\"url\").asText(); }else { url = submission.getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3175/buggy-version/app.src.main.java.me.ccrama.redditslide.Views.PopulateSubmissionViewHolder.java", "BodyUseAPI": ["submission.getDataNode().get(java.lang.String)", "submission.getDataNode().get(\"preview\").get(\"images\").get(int)", "net.dean.jraw.models.Submission.getDataNode()", "net.dean.jraw.models.Submission.getUrl()", "submission.getDataNode().get(\"preview\").get(\"images\").get(0).get(\"source\").get(java.lang.String)", "submission.getDataNode().get(\"preview\").get(java.lang.String)", "submission.getDataNode().get(\"preview\").get(\"images\").get(0).get(java.lang.String)", "submission.getDataNode().get(\"preview\").get(\"images\").get(0).get(\"source\").get(\"url\").asText()"], "Fixed commit": "4be2bf121f0eb9117b7af6fe2c353f71393016f2", "Url": "https://api.github.com/repos/Alexendoo/Slide", "Date": "2016-02-17T15:41:12Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.db.record.OIdentifiable.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (linked == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1987/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java", "BodyUseAPI": [], "Fixed commit": "77de3f449d939abb31a8aa9aeec9dab799ff4f01", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-26T06:09:28Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemAddedTracker) { callback.refreshJobsScreen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5355/buggy-version/app.src.main.java.com.pommerening.quinn.foodtruck.fragment.dialogs.AddInventoryDialog.java", "BodyUseAPI": [], "Fixed commit": "001661ce9a168ffe3895eba8b92f31b9627c60fb", "Url": "https://api.github.com/repos/QRP0002/FewdTruck", "Date": "2016-03-24T20:56:08Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!newValue) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6285/buggy-version/src.table.Table.java", "BodyUseAPI": [], "Fixed commit": "905ffd790eba42aba4af1b92747f1b67a6901a73", "Url": "https://api.github.com/repos/hugoflug/compiler", "Date": "2014-03-23T21:45:02Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blocks.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/269/buggy-version/jedai-core.src.Utilities.BlocksPerformance.java", "BodyUseAPI": [], "Fixed commit": "4d807b9aef44a9d59e62f57e0875fd482827198d", "Url": "https://api.github.com/repos/scify/JedAIToolkit", "Date": "2017-05-10T11:08:07Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.lucene.util.Constants.JRE_IS_MINIMUM_JAVA9) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7588/buggy-version/lucene.core.src.java.org.apache.lucene.store.MMapDirectory.java", "BodyUseAPI": [], "Fixed commit": "4eacebd89ccf8abec0989691fad4a6aa2b408378", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2016-02-16T07:49:30Z"},
{"Line": "=>2177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.plugins().createComponent(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (snpMgr == null) snpMgr = new org.apache.ignite.internal.processors.cache.database.IgniteCacheSnapshotManager();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4925/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.GridCacheProcessor.java", "BodyUseAPI": [], "Fixed commit": "9cf52ace2943eb8a48ab944f449691e2c5b72982", "Url": "https://api.github.com/repos/ntikhonov/ignite", "Date": "2017-05-05T12:20:59Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ve.com.abicelis.remindy.database.RemindyDAO.getActivePlaces()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((places.size()) > 0) { if ((android.content.pm.PackageManager.PERMISSION_GRANTED) == (android.support.v4.app.ActivityCompat.checkSelfPermission(context, Manifest.permission.ACCESS_FINE_LOCATION))) { LocationServices.GeofencingApi.addGeofences(googleApiClient, ve.com.abicelis.remindy.util.GeofenceUtil.getGeofencingRequest(context, places), ve.com.abicelis.remindy.util.GeofenceUtil.getGeofencePendingIntent(context)).setResultCallback(new com.google.android.gms.common.api.ResultCallback<com.google.android.gms.common.api.Status>() { @java.lang.Override public void onResult(@android.support.annotation.NonNull com.google.android.gms.common.api.Status status) { if (status.isSuccess()) android.widget.Toast.makeText(context, \"Geofences added/updated!\", Toast.LENGTH_SHORT).show(); } }); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/851/buggy-version/app.src.main.java.ve.com.abicelis.remindy.util.GeofenceUtil.java", "BodyUseAPI": ["LocationServices.GeofencingApi.addGeofences(com.google.android.gms.common.api.GoogleApiClient,com.google.android.gms.location.GeofencingRequest,android.app.PendingIntent)", "LocationServices.GeofencingApi.addGeofences(googleApiClient, ve.com.abicelis.remindy.util.GeofenceUtil.getGeofencingRequest(context, places), ve.com.abicelis.remindy.util.GeofenceUtil.getGeofencePendingIntent(context)).setResultCallback(com.google.android.gms.common.api.ResultCallback<com.google.android.gms.common.api.Status>)", "ve.com.abicelis.remindy.util.GeofenceUtil.getGeofencingRequest(android.content.Context,java.util.List<ve.com.abicelis.remindy.model.Place>)"], "Fixed commit": "4395fd91e0db049db9cf24117665ac6c7b0a72fd", "Url": "https://api.github.com/repos/abicelis/Remindy", "Date": "2017-05-04T04:41:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((user != null) && (password != null)) { org.glassfish.jersey.client.authentication.HttpAuthenticationFeature feature = org.glassfish.jersey.client.authentication.HttpAuthenticationFeature.basic(user, password); bldr.register(feature); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5867/buggy-version/services.client.src.main.java.mil.nga.giat.geowave.service.client.GeoserverServiceClient.java", "BodyUseAPI": [], "Fixed commit": "15fac2b9275c04ec195cb8038a14ac34ba91b8ab", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-11-16T17:13:56Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { setMotionEventSplittingEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6887/buggy-version/library.src.main.java.com.jpardogo.listbuddies.lib.views.ListBuddiesLayout.java", "BodyUseAPI": [], "Fixed commit": "f32c0e17dfb70f94e184ee032725ff7d1633c0cf", "Url": "https://api.github.com/repos/jpardogo/ListBuddies", "Date": "2014-08-11T11:01:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GameplayElements.MovingImage.getDirection()", "GameplayElements.MovingImage.getDirection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.Math.abs((dir1 - dir2))) > 0.01) { super.turn((dir1 - dir2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4386/buggy-version/src.GameplayElements.Boss1.java", "BodyUseAPI": ["GameplayElements.MovingImage.turn(double)"], "Fixed commit": "ffbf05819892951e338b38005e7efc50caa5bae7", "Url": "https://api.github.com/repos/smorchi076/Asteria", "Date": "2017-05-18T16:35:03Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.util.ArrayList<java.lang.Integer>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(hasVisitedSymbol[body.get(0)])) { findUnitRules(body.get(0), parentNts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4324/buggy-version/CFG.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)", "CFG.findUnitRules(java.lang.Integer,java.util.ArrayList<java.lang.Integer>)"], "Fixed commit": "1635b643640525a6fcd6e38d73e13e6b81b98857", "Url": "https://api.github.com/repos/trishy/cfg", "Date": "2015-11-05T02:11:05Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (collectors)) { return com.google.common.collect.Maps.newHashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6675/buggy-version/src.common.codeine.api.NodeWithMonitorsInfo.java", "BodyUseAPI": [], "Fixed commit": "bbe5b931c7d92f6e3e7ef6da85ee47756e8bc22f", "Url": "https://api.github.com/repos/codeine-cd/codeine", "Date": "2014-12-29T12:36:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.quran.labs.androidquran.QuranDataActivity.findViewById(R.id.splashview)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (splash != null) { try { splash.setImageResource(R.drawable.splash); } catch (java.lang.OutOfMemoryError error) { splash.setBackgroundColor(Color.BLACK); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4821/buggy-version/app.src.main.java.com.quran.labs.androidquran.QuranDataActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageResource(R.drawable.splash)", "android.widget.ImageView.setBackgroundColor(Color.BLACK)"], "Fixed commit": "42293bbab729637b3f35cb1e3413abbe13b2666e", "Url": "https://api.github.com/repos/ahmedre/quran_android", "Date": "2013-06-17T03:26:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createQuery(\"FROM Utilisateur WHERE login = :login\").setParameter(\"login\", login).uniqueResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (u == null) return \"EFailure\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1689/buggy-version/src.java.managedBeans.EnseignantSession.java", "BodyUseAPI": [], "Fixed commit": "722293ad20e10fd602580b453defd4df3d330374", "Url": "https://api.github.com/repos/AmineYaiche/Gestion-affectation-des-enseignants", "Date": "2015-06-09T20:26:28Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.agentgui.bundle.classSelection.JListClassSearcher.getProjectPackages()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (projectPackages != null) { for (java.lang.String projectPackage : this.getProjectPackages()) { if (className.startsWith(projectPackage)) { this.getListModel().addElement(ce2d); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/259/buggy-version/eclipseProjects.AgentGui.src.org.agentgui.bundle.classSelection.JListClassSearcher.java", "BodyUseAPI": [], "Fixed commit": "94a47d933b28e527137f7417914259bbed1dbaf4", "Url": "https://api.github.com/repos/EnFlexIT/AgentWorkbench", "Date": "2017-07-06T07:44:43Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["KunderaMetadata.INSTANCE.getApplicationMetadata().getMetamodel(m.getPersistenceUnit())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((metaModel.isEmbeddable(m.getIdAttribute().getBindableJavaType())) && (org.apache.commons.lang.StringUtils.contains(property, '.'))) { property = property.substring(((property.indexOf(\".\")) + 1)); isCompositeColumn = true; }else if (org.apache.commons.lang.StringUtils.contains(property, '.')) { javax.persistence.metamodel.EntityType entity = metaModel.entity(m.getEntityClazz()); java.util.StringTokenizer tokenizer = new java.util.StringTokenizer(property, \".\"); java.lang.String embeddedAttributeAsStr = tokenizer.nextToken(); java.lang.String embeddableAttributeAsStr = tokenizer.nextToken(); javax.persistence.metamodel.Attribute embeddedAttribute = entity.getAttribute(embeddedAttributeAsStr); javax.persistence.metamodel.EmbeddableType embeddableEntity = metaModel.embeddable(((com.impetus.kundera.metadata.model.attributes.AbstractAttribute) (embeddedAttribute)).getBindableJavaType()); f = ((java.lang.reflect.Field) (embeddableEntity.getAttribute(embeddableAttributeAsStr).getJavaMember())); }else { javax.persistence.metamodel.EntityType entity = metaModel.entity(m.getEntityClazz()); java.lang.String discriminatorColumn = ((com.impetus.kundera.metadata.model.type.AbstractManagedType) (entity)).getDiscriminatorColumn(); if (!(property.equals(discriminatorColumn))) { java.lang.String fieldName = m.getFieldName(property); f = ((java.lang.reflect.Field) (entity.getAttribute(fieldName).getJavaMember())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4830/buggy-version/src.kundera-mongo.src.main.java.com.impetus.client.mongodb.query.MongoDBQuery.java", "BodyUseAPI": ["com.impetus.kundera.metadata.model.MetamodelImpl.entity(m.getEntityClazz())", "java.lang.String.substring(int)", "com.impetus.kundera.metadata.model.MetamodelImpl.entity(m.getEntityClazz())", "org.apache.commons.lang.StringUtils.contains(java.lang.String,char)", "java.lang.String.equals(java.lang.String)", "com.impetus.kundera.metadata.model.EntityMetadata.getEntityClazz()", "com.impetus.kundera.metadata.model.EntityMetadata.getEntityClazz()", "com.impetus.kundera.metadata.model.MetamodelImpl.embeddable(((com.impetus.kundera.metadata.model.attributes.AbstractAttribute) (embeddedAttribute)).getBindableJavaType())", "com.impetus.kundera.metadata.model.EntityMetadata.getFieldName(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "4f2be9fe13e4182f116023dbe8acd9f55829ea17", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-14T18:22:00Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backupName) != null) { if (\"\".equals(backupName.trim())) { backupName = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3028/buggy-version/src.main.java.org.woym.controller.manage.BackupController.java", "BodyUseAPI": [], "Fixed commit": "6020290b95ab72603570754c32627cdeca86abfc", "Url": "https://api.github.com/repos/WOYM/timetable", "Date": "2015-02-07T15:33:03Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anyValue) { for (int i = maxDepth; i >= (minDepth); i--) { handler.onCloseGroup(i, groupSchema.getField(i).getName(), context.getCurrentKey().datum(), this.context, collector); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6149/buggy-version/core.src.main.java.com.datasalt.pangool.tuplemr.mapred.RollupReducer.java", "BodyUseAPI": [], "Fixed commit": "619b425b8cba99d455fae6b179a6123c9fa1b1e9", "Url": "https://api.github.com/repos/datasalt/pangool", "Date": "2012-06-28T14:58:20Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) == null) { setupAMQP(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4010/buggy-version/sharedcomponents.src.main.java.com.computedsynergy.hurtrade.sharedcomponents.amqp.AmqpConnectionFactory.java", "BodyUseAPI": [], "Fixed commit": "4393ec5304158dd070b7ac36ecde20099cb0df7f", "Url": "https://api.github.com/repos/faisalthaheem/hurtrade", "Date": "2017-07-31T13:00:23Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (googleApiClient.isConnected()) { handler.post(new java.lang.Runnable() { @java.lang.Override public void run() { onGooglePlayServicesDisconnecting(); googleApiClient.disconnect(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5312/buggy-version/rxlocation.src.main.java.net.kjulio.rxlocation.BaseHelper.java", "BodyUseAPI": ["android.os.Handler.post(java.lang.Runnable)", "com.google.android.gms.common.api.GoogleApiClient.disconnect()"], "Fixed commit": "a6545f63d0015c130dcbf6a8a7598f271b7d1856", "Url": "https://api.github.com/repos/julioromano/RxLocation", "Date": "2016-10-23T11:42:41Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mongodb.DBCollection.find(com.mongodb.BasicDBObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cursor.hasNext())) { if (!(checkLegitimacy(CWID))) { }else { firstName = javax.swing.JOptionPane.showInputDialog(\"Enter your first name.\"); lastName = javax.swing.JOptionPane.showInputDialog(\"Enter your last name.\"); createUser(firstName, lastName, CWID); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3997/buggy-version/src.main.AccessTracker.java", "BodyUseAPI": [], "Fixed commit": "8f5b17436117c3ccc9808e801a9e26e6ff6560d1", "Url": "https://api.github.com/repos/nhetrick/MachineShop", "Date": "2013-05-22T17:00:12Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outputStream.toString().isEmpty()) { java.lang.System.out.println(\"Empty data.csv\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/480/buggy-version/src.strongbox.drive.GoogleDriveModel.java", "BodyUseAPI": [], "Fixed commit": "53a405c41a44f038421aa84d62f2324b4e16fdf1", "Url": "https://api.github.com/repos/devadv/StrongBox", "Date": "2017-08-24T14:59:06Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (temp2 != null) temp = temp.getRandomNeighbor(mapRandom);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6366/buggy-version/src.API.com.bioxx.jmapgen.IslandMap.java", "BodyUseAPI": [], "Fixed commit": "7640b60d2a25ca2ee12c0c7aead751d3e90f37ae", "Url": "https://api.github.com/repos/Deadrik/TFC2", "Date": "2016-01-05T00:40:11Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (temp2 != null) temp = temp.getRandomNeighbor(mapRandom);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6366/buggy-version/src.API.com.bioxx.jmapgen.IslandMap.java", "BodyUseAPI": [], "Fixed commit": "7640b60d2a25ca2ee12c0c7aead751d3e90f37ae", "Url": "https://api.github.com/repos/Deadrik/TFC2", "Date": "2016-01-05T00:40:11Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (temp2 != null) temp = temp.getRandomNeighbor(mapRandom);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6366/buggy-version/src.API.com.bioxx.jmapgen.IslandMap.java", "BodyUseAPI": [], "Fixed commit": "7640b60d2a25ca2ee12c0c7aead751d3e90f37ae", "Url": "https://api.github.com/repos/Deadrik/TFC2", "Date": "2016-01-05T00:40:11Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (temp2 != null) temp = temp.getRandomNeighbor(mapRandom);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6366/buggy-version/src.API.com.bioxx.jmapgen.IslandMap.java", "BodyUseAPI": [], "Fixed commit": "7640b60d2a25ca2ee12c0c7aead751d3e90f37ae", "Url": "https://api.github.com/repos/Deadrik/TFC2", "Date": "2016-01-05T00:40:11Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pd.isShowing()) { pd.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1556/buggy-version/app.src.main.java.app.articles.vacabulary.editorial.gamefever.editorial.EditorialFeedActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "27f974e2ed4a92ae6e291e7160d4083fea728552", "Url": "https://api.github.com/repos/GameFever20/Editorial", "Date": "2017-08-24T19:06:21Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position < 0) { recreate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1556/buggy-version/app.src.main.java.app.articles.vacabulary.editorial.gamefever.editorial.EditorialListWithNavActivity.java", "BodyUseAPI": [], "Fixed commit": "27f974e2ed4a92ae6e291e7160d4083fea728552", "Url": "https://api.github.com/repos/GameFever20/Editorial", "Date": "2017-08-24T19:06:21Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Chunk.getBlockStorageArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cs[i].getSkylightArray()) == null) { sectionSkyLights[i] = org.bukkit.craftbukkit.CraftChunk.emptyData; }else { sectionSkyLights[i] = new byte[2048]; java.lang.System.arraycopy(cs[i].getSkylightArray().data, 0, sectionSkyLights[i], 0, 2048); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/969/buggy-version/src.org.bukkit.craftbukkit.CraftChunk.java", "BodyUseAPI": ["java.lang.System.arraycopy(cs[i].getSkylightArray().data,int,byte[],int,int)", "cs[i].getSkylightArray()"], "Fixed commit": "d3da5a49247ffd824502a25cb7844e028b7cd1e8", "Url": "https://api.github.com/repos/mikeprimm/BukkitForge", "Date": "2013-03-02T05:53:20Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mbeanServer) != null) { this.esmeManagement.setMbeanServer(this.mbeanServer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/979/buggy-version/core.smpp-extensions.src.main.java.org.restcomm.smpp.SmppManagement.java", "BodyUseAPI": [], "Fixed commit": "4da1989520bece86615e82f495a2ae6f76658d74", "Url": "https://api.github.com/repos/ovoo-unif/smpp-extensions", "Date": "2017-02-14T11:17:42Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mbeanServer) == null) { this.mbeanServer = org.jboss.mx.util.MBeanServerLocator.locateJBoss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/979/buggy-version/core.smpp-extensions.src.main.java.org.restcomm.smpp.SmppManagement.java", "BodyUseAPI": [], "Fixed commit": "4da1989520bece86615e82f495a2ae6f76658d74", "Url": "https://api.github.com/repos/ovoo-unif/smpp-extensions", "Date": "2017-02-14T11:17:42Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mbeanServer) == null) { this.mbeanServer = org.jboss.mx.util.MBeanServerLocator.locateJBoss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/979/buggy-version/core.smpp-extensions.src.main.java.org.restcomm.smpp.EsmeManagement.java", "BodyUseAPI": [], "Fixed commit": "4da1989520bece86615e82f495a2ae6f76658d74", "Url": "https://api.github.com/repos/ovoo-unif/smpp-extensions", "Date": "2017-02-14T11:17:42Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).get()", "io.cattle.platform.iaas.api.auth.dao.AuthDao.hasAccessToAnyProject(java.util.Set<io.cattle.platform.api.auth.Identity>,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((!hasAccessToAProject) && (hasLoggedIn != null)) && (!((java.lang.Boolean) (hasLoggedIn)))) { projectResourceManager.createProjectForUser(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7952/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "ebc6d95bd28bf3cd69747b967e9ab1e7b186f6d3", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (account != null) { io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7952/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(boolean)", "io.cattle.platform.object.util.DataAccessor.fields(io.cattle.platform.core.model.Account)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN)"], "Fixed commit": "ebc6d95bd28bf3cd69747b967e9ab1e7b186f6d3", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.startsWith(\" \")) source = source.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7748/buggy-version/app.src.main.java.me.humennyi.arkadii.chips.ChipsView.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "003c34741cc1c40ba777de33de9efcdd3d852a33", "Url": "https://api.github.com/repos/Arkadzi/chips", "Date": "2016-12-26T16:58:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(value)) { return this; }else if ((value) == 0.0) { return ts.support.TSNumber.minusZeroValue; }else { return ts.support.TSNumber.create((-(value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7432/buggy-version/src.ts.support.TSNumber.java", "BodyUseAPI": [], "Fixed commit": "3f4b6bb07f7f952800f570041d0c3910783bf861", "Url": "https://api.github.com/repos/anthgur/tscript", "Date": "2015-01-25T04:33:15Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.matches(\"[0-9a-f]{8}\\\\-([0-9a-f]{4}\\\\-){3}[0-9a-f]{12}\")) { return reservelist.contains(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1688/buggy-version/src.main.java.net.canarymod.user.ReservelistProvider.java", "BodyUseAPI": ["java.util.List<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "a87d763e7ef230b35ab9b8b057c3808729ea8053", "Url": "https://api.github.com/repos/CanaryModTeam/CanaryLib", "Date": "2014-08-28T19:59:51Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.uwusoft.timesheet.extensionpoint.LocalStorageService.em.getTransaction().isActive()) active = true; else com.uwusoft.timesheet.extensionpoint.LocalStorageService.em.getTransaction().begin();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3423/buggy-version/com.uwusoft.timesheet.src.com.uwusoft.timesheet.extensionpoint.LocalStorageService.java", "BodyUseAPI": ["com.uwusoft.timesheet.extensionpoint.LocalStorageService.em.getTransaction().begin()", "javax.persistence.EntityManager.getTransaction()"], "Fixed commit": "b88ed32c89e25a38fc4a080b41d33028a3e40ad5", "Url": "https://api.github.com/repos/Moppel/Timesheet", "Date": "2012-09-10T07:07:54Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!active) com.uwusoft.timesheet.extensionpoint.LocalStorageService.em.getTransaction().commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3423/buggy-version/com.uwusoft.timesheet.src.com.uwusoft.timesheet.extensionpoint.LocalStorageService.java", "BodyUseAPI": [], "Fixed commit": "b88ed32c89e25a38fc4a080b41d33028a3e40ad5", "Url": "https://api.github.com/repos/Moppel/Timesheet", "Date": "2012-09-10T07:07:54Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lines.size()) < 100) { lines.add(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7084/buggy-version/src.Client.Client.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "51581c131aeff831315a895649fd2807c383e9ac", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-01-17T22:32:15Z"},
{"Line": "=>1331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.message.length()) < 50000) { if ((message.length()) != 0) this.message.append((\" \" + message)); else this.message.append(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7084/buggy-version/src.Server.Creatures.ServerPlayer.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "51581c131aeff831315a895649fd2807c383e9ac", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2016-01-17T22:32:15Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (methodName.equals(\"filter\")) { sb.append(smd.suffix); }else if (methodName.equals(\"rule\")) { sb.append(smd.suffix); }else if ((smd.isRequest()) && (!(methodName.endsWith(\"Request\")))) { sb.append(\"Request\"); }else if ((!(smd.isRequest())) && (!(methodName.endsWith(\"Response\")))) { sb.append(\"Response\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7095/buggy-version/qp-enterprise-integration-platform.eip-generator-plugin.src.main.java.com.qpark.maven.plugin.flowmapper.FlowInterfaceGenerator.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "ae86a74103a982b1660c87f9b0c3b898b9c4e677", "Url": "https://api.github.com/repos/QPark/EIP", "Date": "2016-10-26T19:56:26Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (methodName.equals(\"rule\")) { sb.append(smd.suffix); }else if ((smd.isRequest()) && (!(methodName.endsWith(\"Request\")))) { sb.append(\"Request\"); }else if ((!(smd.isRequest())) && (!(methodName.endsWith(\"Response\")))) { sb.append(\"Response\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7095/buggy-version/qp-enterprise-integration-platform.eip-generator-plugin.src.main.java.com.qpark.maven.plugin.flowmapper.FlowInterfaceGenerator.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "ae86a74103a982b1660c87f9b0c3b898b9c4e677", "Url": "https://api.github.com/repos/QPark/EIP", "Date": "2016-10-26T19:56:26Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((childResource.getResourceLocator()) != null) registerResourceLocatorUnitOfWorkAnnotations(childResource.getResourceLocator());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6920/buggy-version/dropwizard-hibernate.src.main.java.io.dropwizard.hibernate.UnitOfWorkApplicationListener.java", "BodyUseAPI": ["io.dropwizard.hibernate.UnitOfWorkApplicationListener.registerResourceLocatorUnitOfWorkAnnotations(childResource.getResourceLocator())", "org.glassfish.jersey.server.model.Resource.getResourceLocator()"], "Fixed commit": "0f8d4f88bbac1396725427a2f557a098b4476d0a", "Url": "https://api.github.com/repos/jeppe-style/dropwizard", "Date": "2017-03-13T14:16:44Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.InputStream.read(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bytesRead < 0) { throw new java.io.EOFException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1928/buggy-version/src.infinity.util.MassExporter.java", "BodyUseAPI": [], "Fixed commit": "c93adcbc98acfd672b5ac4d6600618955e0e7a03", "Url": "https://api.github.com/repos/Argent77/NearInfinity", "Date": "2015-11-03T17:22:09Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page < 1) { page = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6329/buggy-version/structr.structr-rest.src.main.java.org.structr.rest.resource.PagingHelper.java", "BodyUseAPI": [], "Fixed commit": "5c04016786db84e02dd3789ca0d694203a3dc02d", "Url": "https://api.github.com/repos/structr/structr", "Date": "2012-08-16T13:23:14Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.SensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((accelerometer.getMinDelay()) == 0) { maxFrequency = fr.inria.tyrex.sensors.monitoring.RecordActivity.MinFrequency; }else { maxFrequency = 1000000 / (accelerometer.getMinDelay()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6259/buggy-version/app.src.main.java.fr.inria.tyrex.sensors.monitoring.RecordActivity.java", "BodyUseAPI": ["android.hardware.Sensor.getMinDelay()"], "Fixed commit": "7a3db3af17be84eee182742c6d6cd51ac6f9e174", "Url": "https://api.github.com/repos/tyrex-team/senslogs", "Date": "2015-11-23T21:26:14Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.SensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((gyroscope.getMinDelay()) == 0) { maxFrequency = fr.inria.tyrex.sensors.monitoring.RecordActivity.MinFrequency; }else { maxFrequency = 1000000 / (gyroscope.getMinDelay()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6259/buggy-version/app.src.main.java.fr.inria.tyrex.sensors.monitoring.RecordActivity.java", "BodyUseAPI": ["android.hardware.Sensor.getMinDelay()"], "Fixed commit": "7a3db3af17be84eee182742c6d6cd51ac6f9e174", "Url": "https://api.github.com/repos/tyrex-team/senslogs", "Date": "2015-11-23T21:26:14Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.SensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((magnetometer.getMinDelay()) == 0) { maxFrequency = fr.inria.tyrex.sensors.monitoring.RecordActivity.MinFrequency; }else { maxFrequency = 1000000 / (magnetometer.getMinDelay()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6259/buggy-version/app.src.main.java.fr.inria.tyrex.sensors.monitoring.RecordActivity.java", "BodyUseAPI": ["android.hardware.Sensor.getMinDelay()"], "Fixed commit": "7a3db3af17be84eee182742c6d6cd51ac6f9e174", "Url": "https://api.github.com/repos/tyrex-team/senslogs", "Date": "2015-11-23T21:26:14Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.uwaterloo.asw.meta.RequireData.types()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((types.length) != 1) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2063/buggy-version/src.main.java.ca.uwaterloo.asw.internal.InstructionNode.java", "BodyUseAPI": [], "Fixed commit": "2b6fee9868d67cc0a821fd074041639fd0390e1a", "Url": "https://api.github.com/repos/LindenY/asw", "Date": "2014-12-01T23:56:10Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) == 1) { if (args[0].equalsIgnoreCase(\"scotty\")) player.chat(\"Beam me up scotty!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2264/buggy-version/src.net.TylerS1066.Beaming.Main.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "4515b2716d5733a5037dbf09422355fa74886ef3", "Url": "https://api.github.com/repos/APDevTeam/Beaming", "Date": "2015-08-20T15:30:29Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p_value.getName().isEmpty())) { publisherManager.store(p_value); }else { throw new com.edu.library.business.exception.BusinessException(\"************************************************************************************hello\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1145/buggy-version/library-ejb.src.main.java.com.edu.library.business.publicationManagement.PublisherManagementBusiness.java", "BodyUseAPI": ["com.edu.library.data.publicationManagement.PublisherManager.store(com.edu.library.model.Publisher)"], "Fixed commit": "7ab1955f537f8f80f4207f2fb75ddc5fee4f9340", "Url": "https://api.github.com/repos/todor-tibor/Library", "Date": "2017-02-17T11:41:23Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qcadoo.mes.minimalAffordableQuantity.QuantityService.getBigDecimalFromField(technologyEntity.getField(\"minimalQuantity\"),view.getLocale())", "com.qcadoo.mes.minimalAffordableQuantity.QuantityService.getBigDecimalFromField(plannedQuantityComponent.getFieldValue(),view.getLocale())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((plannedQuantity == null) || (minimalQuantity == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2377/buggy-version/mes-plugins.mes-plugins-minimal-affordable-quantity.src.main.java.com.qcadoo.mes.minimalAffordableQuantity.QuantityService.java", "BodyUseAPI": [], "Fixed commit": "a51f76d8f886dbb47753258d1e9e28ab929b08df", "Url": "https://api.github.com/repos/qcadoo/mes", "Date": "2013-04-03T12:03:56Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (write != null) write.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/928/buggy-version/src.main.Game.java", "BodyUseAPI": ["java.io.ObjectOutputStream.close()"], "Fixed commit": "7ce6fa91593ad75b11b84dd01d2f27f7bd937b2b", "Url": "https://api.github.com/repos/trungdq88/Battle-Ship-Java", "Date": "2014-04-13T14:47:55Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (inFile != null) inFile.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/928/buggy-version/src.main.Game.java", "BodyUseAPI": ["java.io.ObjectInputStream.close()"], "Fixed commit": "7ce6fa91593ad75b11b84dd01d2f27f7bd937b2b", "Url": "https://api.github.com/repos/trungdq88/Battle-Ship-Java", "Date": "2014-04-13T14:47:55Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (inFile != null) inFile.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/928/buggy-version/src.main.Game.java", "BodyUseAPI": ["java.io.ObjectInputStream.close()"], "Fixed commit": "7ce6fa91593ad75b11b84dd01d2f27f7bd937b2b", "Url": "https://api.github.com/repos/trungdq88/Battle-Ship-Java", "Date": "2014-04-13T14:47:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.egeio.realtime.websocket.model.UserSessionInfo.getUserID()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.egeio.realtime.websocket.ChannelManager.userChannelMapping.get(userID).contains(channel)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9006/buggy-version/src.main.java.com.egeio.realtime.websocket.ChannelManager.java", "BodyUseAPI": [], "Fixed commit": "59400b00234640cc4d862626426577fd31bc2827", "Url": "https://api.github.com/repos/ZJUZT/services-realtime", "Date": "2015-09-08T16:00:04Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListen) && ((mPathListener) != null)) com.cjuega.interviews.dropbox.DropboxManager.getInstance().addListenerToPath(mPathListener, path, Mode.PATH_OR_CHILD);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5347/buggy-version/app.src.com.cjuega.interviews.dropbox.DropboxManager.java", "BodyUseAPI": [], "Fixed commit": "2126b145aea046cb6ff101ea1a910ddc3f6a6cbf", "Url": "https://api.github.com/repos/cjuega/bq_interview", "Date": "2013-10-31T16:54:53Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isGameOver) { isInstructionShown = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6723/buggy-version/core.src.com.aldrinarciga.minigames.minigames.MiniGame.java", "BodyUseAPI": [], "Fixed commit": "482fb56f51d32c5cf583c034dd1c02d208d0bfdc", "Url": "https://api.github.com/repos/aldrinarciga/mini-games", "Date": "2016-04-26T09:22:10Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.String>.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/806/buggy-version/app.src.main.java.com.ksm.recyclerviews.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8c9723203b445bfe7d4f55a3bc658ecad5cca7db", "Url": "https://api.github.com/repos/khurramsaeed/RecyclerViews", "Date": "2017-11-24T11:00:08Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.nio.file.Files.exists(parentDir))) { java.nio.file.Files.createDirectories(parentDir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6609/buggy-version/src.main.java.org.tdl.vireo.util.FileIOUtility.java", "BodyUseAPI": ["java.nio.file.Files.createDirectories(java.nio.file.Path)"], "Fixed commit": "415342089418efae871d8a870cbbdaf3dbda4bf5", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2016-10-14T18:42:34Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Integer) { i = ((java.lang.Integer) (value)); }else if (value instanceof java.lang.Byte) { i = java.lang.Integer.valueOf(((java.lang.Byte) (value))); }else if (value instanceof java.lang.Short) { i = java.lang.Integer.valueOf(((java.lang.Short) (value))); }else { throw new java.lang.IllegalArgumentException((\"Unsupported element type: \" + (value.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3963/buggy-version/src.org.jai.BSON.BSONEncoder.java", "BodyUseAPI": ["java.lang.Object.getClass()", "java.lang.Class<? extends java.lang.Object>.getName()"], "Fixed commit": "a88d2aaad513bbd3418626d69b57f0b63bf2962b", "Url": "https://api.github.com/repos/yau-ref/jabi", "Date": "2013-05-13T21:15:00Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof java.lang.Character) { s = java.lang.String.valueOf(value); }else { s = ((java.lang.String) (value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3963/buggy-version/src.org.jai.BSON.BSONEncoder.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "a88d2aaad513bbd3418626d69b57f0b63bf2962b", "Url": "https://api.github.com/repos/yau-ref/jabi", "Date": "2013-05-13T21:15:00Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(GlobalData.server.network.isOpen())) engine.network.client.GlobalData.setCurrentState(new engine.state.MainMenu(GlobalData.server.network.error));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5886/buggy-version/src.engine.network.client.Client.java", "BodyUseAPI": [], "Fixed commit": "60e004650e0ce657d946ee898519ed29fedd3205", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-04-18T10:01:09Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getGroupId().contains(\".\")) { path += (getGroupId().replaceAll(\"\\\\.\", java.io.File.separator)) + (java.io.File.separator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5316/buggy-version/src.main.java.org.carlspring.maven.relocation.AbstractRelocationMojo.java", "BodyUseAPI": [], "Fixed commit": "eeb76aafb30cac6f1f8c8580b185f634fed2f000", "Url": "https://api.github.com/repos/carlspring/relocation-maven-plugin", "Date": "2014-04-01T16:57:23Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.getData().forPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (((d != null) && ((d.length) > 0)) && ((d[0]) == '{')) entry = mapper.readValue(d, com.dsf.dbxtract.cdc.mon.Statistics.StatEntry.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4063/buggy-version/src.main.java.com.dsf.dbxtract.cdc.mon.Statistics.java", "BodyUseAPI": ["org.codehaus.jackson.map.ObjectMapper.readValue(byte[],java.lang.Class)"], "Fixed commit": "7a436a89efb1dfe75c4936c701a6c41cc3b4365b", "Url": "https://api.github.com/repos/fsanti68/db-xtract", "Date": "2016-12-17T17:31:13Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value.startsWith(\"(\")) { value = value.substring(1, ((value.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/311/buggy-version/src.main.java.org.gdl2.expression.IntegerConstant.java", "BodyUseAPI": [], "Fixed commit": "439ed141aa4c97253627ad3ebbbf506ab74f663c", "Url": "https://api.github.com/repos/gdl-lang/gdl2", "Date": "2017-09-25T13:54:46Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItemMainhand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((stack.getItem()) == (inv.getItem().getItem())) || ((stack.getCount()) <= 64)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8141/buggy-version/src.main.java.kenijey.harshencastle.network.events.NetworkEventHarshenInvToggle.java", "BodyUseAPI": [], "Fixed commit": "1c5e7fc7587eec9096a6bc1dd4fa49b78693fb03", "Url": "https://api.github.com/repos/kenijey/harshenuniverse", "Date": "2017-07-25T16:13:25Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((exportFileChooser.getFileFilter()) == null) && ((exportTypes.size()) > 0)) { exportFileChooser.setFileFilter(exportTypes.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3505/buggy-version/droid-swing-ui.src.main.java.uk.gov.nationalarchives.droid.gui.report.ExportReportAction.java", "BodyUseAPI": ["java.util.List<uk.gov.nationalarchives.droid.gui.report.ExportReportAction.ExportType>.get(int)", "uk.gov.nationalarchives.droid.gui.widgetwrapper.SaveAsFileChooser.setFileFilter(uk.gov.nationalarchives.droid.gui.report.ExportReportAction.ExportType)"], "Fixed commit": "cb8dd80c85fcfea8220a7eef364be4779e0943ba", "Url": "https://api.github.com/repos/adamretter/droid", "Date": "2017-01-31T15:08:10Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(program.getPriceDataGetter().updateNew(profile, null))) { error = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6866/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.tracker.EveKitTrackImportUpdateTask.java", "BodyUseAPI": [], "Fixed commit": "214ecee9f58e3f26cd59c32aae951ed2c0f1f849", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-05T15:18:37Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((options.numHcThreads) == 1) { tasks[0].run(); }else { for (int i = 0; i < (tasks.length); ++i) { decodingService.submit(tasks[i], null); } for (int i = 0; i < (tasks.length); ++i) { try { decodingService.take(); } catch (java.lang.InterruptedException e) { java.lang.System.out.println(\"Hill climbing thread interupted!!!!\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3329/buggy-version/src.parser.decoding.HillClimbingDecoder.java", "BodyUseAPI": [], "Fixed commit": "b8b883cd4e68e752825341425074c5f6acbe3c12", "Url": "https://api.github.com/repos/taolei87/RBGParser", "Date": "2015-03-29T04:24:43Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!urlExists) { library.addRoot(newUrl, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4963/buggy-version/plugins.maven.src.main.java.org.jetbrains.idea.maven.importing.MavenRootModelAdapter.java", "BodyUseAPI": [], "Fixed commit": "3d28899c0b3382982369b802661608a3a201dd78", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2013-02-27T10:57:00Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user == \"\") { result = \"Enter proper Data\"; }else if (userService.isUserNameExists(username)) { result = \"Already taken\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2154/buggy-version/src.main.java.com.forum.controller.RegistrationController.java", "BodyUseAPI": [], "Fixed commit": "277535234393e7791799bb2cc33af845d233cbcf", "Url": "https://api.github.com/repos/step2012-chennai/forum", "Date": "2013-04-15T17:02:28Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (type != null) { if ((type.compareTo(com.code44.finance.ui.transactions.TransactionEditFragment.TRANSACTION_TYPE_EXPENSE)) == 0) { transactionType = Tables.Categories.Type.EXPENSE; }else if ((type.compareTo(com.code44.finance.ui.transactions.TransactionEditFragment.TRANSACTION_TYPE_INCOME)) == 0) { transactionType = Tables.Categories.Type.INCOME; }else if ((type.compareTo(com.code44.finance.ui.transactions.TransactionEditFragment.TRANSACTION_TYPE_TRANSFER)) == 0) { transactionType = Tables.Categories.Type.TRANSFER; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/431/buggy-version/Financius.Financius.src.main.java.com.code44.finance.ui.transactions.TransactionEditFragment.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)", "java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "4c998b5e8e0664fbbe8dadd2936b11344ee33c64", "Url": "https://api.github.com/repos/luisliou/Financius", "Date": "2014-04-28T14:48:57Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editingTask.dueAt) != null) { c.setTimeInMillis(editingTask.dueAt.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5110/buggy-version/app.src.main.java.com.ea7jmf.codepathfbtodo.EditItemActivity.java", "BodyUseAPI": ["java.util.Calendar.setTimeInMillis(editingTask.dueAt.getTime())", "editingTask.dueAt.getTime()"], "Fixed commit": "fb7b27c897bf06012a35405074a709be14852383", "Url": "https://api.github.com/repos/yeyus/CodePathFB-MyToDo", "Date": "2016-09-21T23:17:28Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.runelite.client.plugins.pricecommands.PriceCommands.retrieveFromList(result.getItems(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tempItem == null) { net.runelite.client.plugins.pricecommands.PriceCommands.logger.warn(\"Unable to fetch item price for {}\", search); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1529/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.pricecommands.PriceCommands.java", "BodyUseAPI": [], "Fixed commit": "d5772d6b16fcc097ce5b692e526ccb8436445782", "Url": "https://api.github.com/repos/l2-/runelite", "Date": "2017-07-18T00:09:44Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gc.getInput().isMouseButtonDown(0)) { while (!(finished)) { finished = tournament.runTournamentRound(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6265/buggy-version/AntGameProject.src.gui.GUITournamentDisplay.java", "BodyUseAPI": [], "Fixed commit": "43bbc86c7fb46cdf91a8d0bbc731bae0567f2cc3", "Url": "https://api.github.com/repos/jtwisleton/AntGame", "Date": "2016-05-04T13:48:41Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (uris.isEmpty()) uris.add(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/339/buggy-version/src.main.groovy.com.chiorichan.http.Routes.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "080100c62667d6e5f7c36535ff0d58909de3005e", "Url": "https://api.github.com/repos/ChioriGreene/ChioriWebServer", "Date": "2014-09-15T04:23:53Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (props.isEmpty()) props.add(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/339/buggy-version/src.main.groovy.com.chiorichan.http.Routes.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "080100c62667d6e5f7c36535ff0d58909de3005e", "Url": "https://api.github.com/repos/ChioriGreene/ChioriWebServer", "Date": "2014-09-15T04:23:53Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["amp.rabbit.topology.ConsumingRoute.getQueue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (queue.shouldDeclare()) { channel.queueDeclare(queue.getName(), queue.isDurable(), false, queue.isAutoDelete(), queue.getArguments()); for (java.lang.String key : routingKeys) { channel.queueBind(queue.getName(), exchange.getName(), key); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8513/buggy-version/java.amp-rabbit.src.main.java.amp.rabbit.dispatch.RabbitListener.java", "BodyUseAPI": ["com.rabbitmq.client.Channel.queueDeclare(queue.getName(),queue.isDurable(),boolean,queue.isAutoDelete(),queue.getArguments())", "com.rabbitmq.client.Channel.queueBind(queue.getName(),exchange.getName(),java.lang.String)", "amp.rabbit.topology.Queue.isAutoDelete()", "amp.rabbit.topology.Queue.getName()", "amp.rabbit.topology.Queue.getArguments()", "amp.rabbit.topology.Queue.isDurable()", "amp.rabbit.topology.Queue.getName()"], "Fixed commit": "e77bf9fa30279e156c11131d890d8fe3d85dc47b", "Url": "https://api.github.com/repos/Berico-Technologies/AMP", "Date": "2013-10-16T17:52:04Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jahia.services.content.JCRNodeWrapper.getPropertyAsString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((userUUID != null) && (userUUID != \"\")) { org.jahia.services.content.JCRNodeWrapper userLive = getNodeByUUID(userUUID, liveSession); org.jahia.services.content.JCRNodeWrapper userdefault = getNodeByUUID(userUUID, defaultSession); if (userLive != null) { userName = userLive.getName(); userLive.remove(); } if (userdefault != null) userdefault.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5560/buggy-version/src.main.java.journalist.backgroundJob.UserJob.java", "BodyUseAPI": ["journalist.backgroundJob.UserJob.getNodeByUUID(java.lang.String,org.jahia.services.content.JCRSessionWrapper)", "journalist.backgroundJob.UserJob.getNodeByUUID(java.lang.String,org.jahia.services.content.JCRSessionWrapper)"], "Fixed commit": "a52b80f863cde40bf4cabb194c8d4af9cd141cd5", "Url": "https://api.github.com/repos/YevgenVO/Jahia-judges", "Date": "2017-12-04T14:20:11Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7997/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "7ebf582ab5550bcfe9790f51f20a072bd8720f41", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsOverlay.getSeries()) != null) { return jsOverlay.getSeries().length(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7997/buggy-version/addon.src.main.java.com.vaadin.addon.charts.client.ui.HighchartWidget.java", "BodyUseAPI": ["jsOverlay.getSeries().length()", "com.vaadin.addon.charts.client.ui.HighchartJsOverlay.getSeries()"], "Fixed commit": "7ebf582ab5550bcfe9790f51f20a072bd8720f41", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (yEnd >= height) { yEnd = height - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7550/buggy-version/src.com.checkin.avatargenerator.AvatarGenerator.java", "BodyUseAPI": [], "Fixed commit": "50f7682215a48c0dc461da20108edbf31e7b6574", "Url": "https://api.github.com/repos/TyMarc/AvatarGenerator", "Date": "2015-02-22T04:48:00Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (xEnd >= width) { xEnd = width - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7550/buggy-version/src.com.checkin.avatargenerator.AvatarGenerator.java", "BodyUseAPI": [], "Fixed commit": "50f7682215a48c0dc461da20108edbf31e7b6574", "Url": "https://api.github.com/repos/TyMarc/AvatarGenerator", "Date": "2015-02-22T04:48:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (capped) { createDocument.put(\"autoIndexId\", autoIndex); if (maxDocuments > 0) { createDocument.put(\"max\", maxDocuments); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/147/buggy-version/driver.src.main.org.mongodb.CreateCollectionOptions.java", "BodyUseAPI": [], "Fixed commit": "34c58fc69f5637ed0160efd4bef63f803a353f71", "Url": "https://api.github.com/repos/jyemin/mongo-java-driver", "Date": "2012-12-22T15:47:40Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sizeInBytes > 0) { createDocument.put(\"size\", sizeInBytes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/147/buggy-version/driver.src.main.org.mongodb.CreateCollectionOptions.java", "BodyUseAPI": [], "Fixed commit": "34c58fc69f5637ed0160efd4bef63f803a353f71", "Url": "https://api.github.com/repos/jyemin/mongo-java-driver", "Date": "2012-12-22T15:47:40Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentDay.toLowerCase().equals(\"saturday\")) || (currentDay.toLowerCase().equals(\"sunday\"))) { return Constants.ERROR_OTHER_INPUT; }else { if (currentDay.equals(messageDay)) { java.lang.String weekDay = \"/\".concat(currentDay).toLowerCase(); ru.mumu.utils.Connection.LOGGER.info((\"WeekDay is : \" + weekDay)); return ru.mumu.utils.Connection.sendRequest(weekDay); }else { return \"Days are not equals!\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6200/buggy-version/src.main.java.ru.mumu.utils.Connection.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.equals(java.lang.String)", "java.lang.String.concat(java.lang.String)"], "Fixed commit": "d0403c929be9081d59a15270eb6cfbe108a3377c", "Url": "https://api.github.com/repos/schepach/TelegramMumuBot", "Date": "2016-10-05T08:33:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flow) == null) { return true; }else { return flow.isDone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7016/buggy-version/src.main.java.edu.caltech.networksimulator.Host.java", "BodyUseAPI": [], "Fixed commit": "59274de9c47fd5064e6df9ebf8c7c6b86f9b10d4", "Url": "https://api.github.com/repos/TheNumenorean/NetworkSimulator", "Date": "2016-11-17T19:23:03Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == cp) { cp = this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/716/buggy-version/to.etc.domui.demo.src.main.java.to.etc.domuidemo.pages.MenuPage.java", "BodyUseAPI": [], "Fixed commit": "0b96c5e1f02d36b354bed3b7008f3717af180e4e", "Url": "https://api.github.com/repos/fjalvingh/domui", "Date": "2017-07-02T17:06:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newEnd < (src.length())) && ((src.charAt(newEnd)) != '\\n')) { for (; newEnd < ((src.length()) - 1); newEnd++) { if ((src.charAt((newEnd + 1))) == '\\n') { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6281/buggy-version/richedit.src.main.java.com.commonsware.cwac.richtextutils.Selection.java", "BodyUseAPI": ["java.lang.CharSequence.charAt(int)", "java.lang.CharSequence.length()"], "Fixed commit": "f51eb5c3ebcb328b255fb8185d99010d14f3c514", "Url": "https://api.github.com/repos/jiaminglu/cwac-richedit", "Date": "2015-05-26T07:47:06Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) != null) { handler.triggerUpdate(1500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7986/buggy-version/bostonBusMap.src.boston.Bus.Map.ui.LocationOverlay.java", "BodyUseAPI": [], "Fixed commit": "44dc90d8fa1672a7dca4d1fbb139acd5255e16f3", "Url": "https://api.github.com/repos/noisecapella/bostonbusmap", "Date": "2011-11-28T04:23:58Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fireEvents) { firePageChangeEvent(currentPage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/280/buggy-version/crux-dev.src.main.java.org.cruxframework.crux.core.client.dataprovider.AbstractPagedDataProvider.java", "BodyUseAPI": [], "Fixed commit": "3253ac2d4492d6cc8ba9aa60c01a5142fb579971", "Url": "https://api.github.com/repos/samuelcardoso/crux", "Date": "2015-05-25T20:54:50Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clazz == (char.class)) || (clazz == (java.lang.Character.class))) { return ((T) (com.alibaba.fastjson.util.TypeUtils.castToChar(obj))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8297/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "c51a77d6f1558b4afdc2eab9b8d342dcbdfb06b7", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-05-29T17:52:36Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((conceptRecord.getLabel()) != null) && ((conceptRecord.getLabel()) != \"\")) { this.label = conceptRecord.getLabel(); }else { this.label = this.id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7566/buggy-version/src.edu.ithaca.dragonlab.ckc.conceptgraph.ConceptNode.java", "BodyUseAPI": [], "Fixed commit": "cd8ccaea0c2824b8d10047f95235b3b4250d0199", "Url": "https://api.github.com/repos/tobydragon/tecmap", "Date": "2017-06-16T13:17:08Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mListView.getAdapter()) == null) { mTheaterAdapter = new com.tiwence.cinenow2.adapter.TheaterAdapter(this, mTheaters); mListView.setAdapter(mTheaterAdapter); }else { mTheaterAdapter.updateData(mTheaters); mTheaterAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7937/buggy-version/app.src.main.java.com.tiwence.cinenow2.TheatersFragment.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(com.tiwence.cinenow2.adapter.TheaterAdapter)"], "Fixed commit": "7c048552f1723e7e37a0491125a587e4585cb982", "Url": "https://api.github.com/repos/tiwence/cinenow", "Date": "2015-04-15T22:26:54Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mListViewTheater.getAdapter()) == null) { mListViewTheater.setAdapter(new com.tiwence.cinenow2.TheaterFragment.TheaterAdapter()); }else { mListViewTheater.deferNotifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7937/buggy-version/app.src.main.java.com.tiwence.cinenow2.TheaterFragment.java", "BodyUseAPI": ["android.widget.ListView.deferNotifyDataSetChanged()", "android.widget.ListView.setAdapter(com.tiwence.cinenow2.TheaterFragment.TheaterAdapter)"], "Fixed commit": "7c048552f1723e7e37a0491125a587e4585cb982", "Url": "https://api.github.com/repos/tiwence/cinenow", "Date": "2015-04-15T22:26:54Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mCurrentMovie.overview) == null) || (mCurrentMovie.overview.trim().equals(\"\"))) || (mCurrentMovie.overview.trim().equals(\"null\"))) { mMovieOverview.setText(getString(R.string.no_overview)); }else { mMovieOverview.setText(mCurrentMovie.overview); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7937/buggy-version/app.src.main.java.com.tiwence.cinenow2.MovieFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(mCurrentMovie.overview)"], "Fixed commit": "7c048552f1723e7e37a0491125a587e4585cb982", "Url": "https://api.github.com/repos/tiwence/cinenow", "Date": "2015-04-15T22:26:54Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCurrentMovie.vote_average) > 0.0) { mMovieAverageView.setText(((((getString(R.string.vote_average)) + \" \") + (java.lang.String.valueOf(mCurrentMovie.vote_average))) + \"/10\")); }else { mMovieAverageView.setText(getString(R.string.no_vote_average_yet)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7937/buggy-version/app.src.main.java.com.tiwence.cinenow2.MovieFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(((((getString(R.string.vote_average)) + \" \") + (java.lang.String.valueOf(mCurrentMovie.vote_average))) + \"/10\"))", "java.lang.String.valueOf(mCurrentMovie.vote_average)"], "Fixed commit": "7c048552f1723e7e37a0491125a587e4585cb982", "Url": "https://api.github.com/repos/tiwence/cinenow", "Date": "2015-04-15T22:26:54Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (games.isEmpty()) { return players.remove(mPlayer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4169/buggy-version/Mage.src.mage.game.match.MatchImpl.java", "BodyUseAPI": [], "Fixed commit": "7b349c856f6c0330cb7f78e829ea664a60cd8914", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-09-12T19:03:07Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c2.getMessages()) != null) { c1.getMessages().getByNameOrByIDs().addAll(c2.getMessages().getByNameOrByIDs()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2809/buggy-version/hit-core-hl7v2-service.src.main.java.gov.nist.hit.core.hl7v2.service.HL7V2ProfileParser.java", "BodyUseAPI": ["gov.nist.hit.core.domain.constraints.Constraints.getMessages()", "c1.getMessages().getByNameOrByIDs().addAll(c2.getMessages().getByNameOrByIDs())", "c2.getMessages().getByNameOrByIDs()"], "Fixed commit": "3e081e04aefa0bb05c0476876eaefbcfd82a5214", "Url": "https://api.github.com/repos/haffo/hit-core-hl7v2", "Date": "2015-12-02T21:29:27Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c1.getMessages()) == null) { c1.setMessages(new gov.nist.hit.core.domain.constraints.Context()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2809/buggy-version/hit-core-hl7v2-service.src.main.java.gov.nist.hit.core.hl7v2.service.HL7V2ProfileParser.java", "BodyUseAPI": ["gov.nist.hit.core.domain.constraints.Constraints.setMessages(gov.nist.hit.core.domain.constraints.Context)"], "Fixed commit": "3e081e04aefa0bb05c0476876eaefbcfd82a5214", "Url": "https://api.github.com/repos/haffo/hit-core-hl7v2", "Date": "2015-12-02T21:29:27Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((socket) != null) && (!(socket.isClosed()))) { socket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7394/buggy-version/Client.src.model.Communication.java", "BodyUseAPI": ["java.net.Socket.close()"], "Fixed commit": "2764ea81cf96b2ac912f131b3a8353c35f84accb", "Url": "https://api.github.com/repos/Stromner/OOAGrupp6-SP", "Date": "2014-02-19T15:28:19Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((out) != null) && (!(socket.isOutputShutdown()))) { out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7394/buggy-version/Client.src.model.Communication.java", "BodyUseAPI": [], "Fixed commit": "2764ea81cf96b2ac912f131b3a8353c35f84accb", "Url": "https://api.github.com/repos/Stromner/OOAGrupp6-SP", "Date": "2014-02-19T15:28:19Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((in) != null) && (!(socket.isInputShutdown()))) { in.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7394/buggy-version/Client.src.model.Communication.java", "BodyUseAPI": [], "Fixed commit": "2764ea81cf96b2ac912f131b3a8353c35f84accb", "Url": "https://api.github.com/repos/Stromner/OOAGrupp6-SP", "Date": "2014-02-19T15:28:19Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(graph.isNeighbor(from, to))) this.graph.addEdge(factory.create(), from, to);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8393/buggy-version/src.main.java.controller.simulation.EdgeCreationCommand.java", "BodyUseAPI": ["edu.uci.ics.jung.graph.MyGraph<model.MyVertex, model.MyEdge>.addEdge(factory.create(),model.MyVertex,model.MyVertex)"], "Fixed commit": "ee9ea6a1ddb91f247cfc86fa698c86eb48ca2b2e", "Url": "https://api.github.com/repos/mbatchkarov/Plovdiv", "Date": "2014-06-01T20:01:50Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["prompto.intrinsic.PromptoRoot.getDbId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dbId == null) { dbId = this.storable.getOrCreateDbId(); setDbId(dbId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/275/buggy-version/Java-Core.src.main.java.prompto.intrinsic.PromptoRoot.java", "BodyUseAPI": [], "Fixed commit": "cdf39023a8801bad5c767c9e30be2c6edc14474c", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2016-11-03T16:03:53Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text == null) || ((text.length()) == 0)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1564/buggy-version/src.org.mingy.lunjian.CommandLine.java", "BodyUseAPI": [], "Fixed commit": "cff2e37df413776c93e0d3109db536f6fd76bc0e", "Url": "https://api.github.com/repos/wuzhengmao/lunjian", "Date": "2017-02-03T13:48:30Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noteEditor) != null) { if (noteEditor.getScene().getWindow().isShowing()) { noteEditor.c57run(); }else { noteEditor = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4770/buggy-version/src.c57note64.CInfoPanel.java", "BodyUseAPI": [], "Fixed commit": "2bcf6ba6318646c1ce033980b3f195861c303d61", "Url": "https://api.github.com/repos/TheGreatGeek25/ByteNote", "Date": "2017-01-23T22:12:42Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectionState) == (android.bluetooth.BluetoothProfile.STATE_CONNECTING)) { addProperty(returnObj, keyStatus, statusDisconnected); connectionState = android.bluetooth.BluetoothProfile.STATE_DISCONNECTED; org.apache.cordova.PluginResult pluginResult = new org.apache.cordova.PluginResult(PluginResult.Status.OK, returnObj); pluginResult.setKeepCallback(false); callbackContext.sendPluginResult(pluginResult); }else { addProperty(returnObj, keyStatus, statusDisconnecting); connectionState = android.bluetooth.BluetoothProfile.STATE_DISCONNECTING; org.apache.cordova.PluginResult pluginResult = new org.apache.cordova.PluginResult(PluginResult.Status.OK, returnObj); pluginResult.setKeepCallback(true); callbackContext.sendPluginResult(pluginResult); connectCallbackContext = callbackContext; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6517/buggy-version/src.android.BluetoothLePlugin.java", "BodyUseAPI": [], "Fixed commit": "350d6454f5ed9b23507021949be8112c0ea65fc4", "Url": "https://api.github.com/repos/randdusing/BluetoothLE", "Date": "2014-02-20T04:51:10Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrieval.helper.RetrievalHelper.getInvetedIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (invetedIndex != null) { relevantIndexList.addAll(invetedIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/271/buggy-version/Retrieval-System.src.retrieval.service.Bm25RetrievalServiceImpl.java", "BodyUseAPI": ["java.util.List<system.model.IndexModel>.addAll(java.util.List<system.model.IndexModel>)"], "Fixed commit": "0819bf6b7e4963b665f8c0530bb136602d8b88cc", "Url": "https://api.github.com/repos/insane-huskies/Information-Retrieval", "Date": "2017-12-07T20:54:05Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrieval.helper.RetrievalHelper.getInvetedIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (invetedIndex != null) { for (system.model.IndexModel model : invetedIndex) { if ((model.getDocId()) == docId) { tf = model.getTf(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/271/buggy-version/Retrieval-System.src.retrieval.service.Bm25RetrievalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "0819bf6b7e4963b665f8c0530bb136602d8b88cc", "Url": "https://api.github.com/repos/insane-huskies/Information-Retrieval", "Date": "2017-12-07T20:54:05Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (car.equals(Symbol.beginSymbol)) { ischemia.SchemeObject exp = cdr; while (!((((ischemia.Pair) (exp)).cdr()) instanceof ischemia.EmptyList)) { ((ischemia.Pair) (exp)).car().evaluate(env); exp = ((ischemia.Pair) (exp)).cdr(); } return ischemia.EvaluationResult.makeUnfinished(((ischemia.Pair) (exp)).car(), env); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6782/buggy-version/src.ischemia.Pair.java", "BodyUseAPI": [], "Fixed commit": "db34a7ada382f15bc9f0e3737404d8bcfba3fcc1", "Url": "https://api.github.com/repos/mildbyte/ischemia", "Date": "2013-03-23T22:28:47Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((c != null) && (((mage.client.game.GamePane) (c)).isVisible())) { this.btnRight.doClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4374/buggy-version/Mage.Client.src.main.java.mage.client.game.FeedbackPanel.java", "BodyUseAPI": [], "Fixed commit": "cf62ba330dec3b7bcec32214f1d684093abb9f4b", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-02-04T16:00:34Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex.getMessage().contains(\"alpha channel\")) { org.sejda.impl.sambox.component.PageImageWriter.LOG.warn(\"Found alpha channel image, JPEG compression failed, converting TIFF to PNG\"); return org.sejda.sambox.pdmodel.graphics.image.PDImageXObject.createFromFile(org.sejda.impl.sambox.component.PageImageWriter.convertTiffToPng(filePath)); }else { throw ex; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1284/buggy-version/sejda-sambox.src.main.java.org.sejda.impl.sambox.component.PageImageWriter.java", "BodyUseAPI": [], "Fixed commit": "71e720f799d2a94c45afa7c8cfc59955bcaab751", "Url": "https://api.github.com/repos/torakiki/sejda", "Date": "2016-11-01T10:19:01Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.equals(\"jpeg\")) { param.setCompressionMode(javax.imageio.ImageWriteParam.MODE_EXPLICIT); param.setCompressionQuality(1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1284/buggy-version/sejda-sambox.src.main.java.org.sejda.impl.sambox.component.PageImageWriter.java", "BodyUseAPI": [], "Fixed commit": "71e720f799d2a94c45afa7c8cfc59955bcaab751", "Url": "https://api.github.com/repos/torakiki/sejda", "Date": "2016-11-01T10:19:01Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (col_count > 1) { for (int i = 0; i < col_count; i++) { int spacing = colspacing; if ((columnSpaces.size()) >= (i + 1)) { spacing = columnSpaces.get(i); } columnSizes.add(((getMaxWidth(i)) + spacing)); } }else { columnSizes.add(((double) (net.sacredlabyrinth.Phaed.PreciousStones.helpers.ChatHelper.lineLength))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1872/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.helpers.ChatHelper.java", "BodyUseAPI": [], "Fixed commit": "3c9b84127e357e95b2fe1a7760c56f1e4dac1628", "Url": "https://api.github.com/repos/marcelo-mason/PreciousStones", "Date": "2017-07-01T02:24:04Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (col_count > 1) { for (int i = 0; i < col_count; i++) { int spacing = colspacing; if ((columnSpaces.size()) >= (i + 1)) { spacing = columnSpaces.get(i); } columnSizes.add(((getMaxWidth(i)) + spacing)); } }else { columnSizes.add(((double) (net.sacredlabyrinth.Phaed.PreciousStones.helpers.ChatHelper.lineLength))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1872/buggy-version/src.main.java.net.sacredlabyrinth.Phaed.PreciousStones.helpers.ChatHelper.java", "BodyUseAPI": [], "Fixed commit": "3c9b84127e357e95b2fe1a7760c56f1e4dac1628", "Url": "https://api.github.com/repos/marcelo-mason/PreciousStones", "Date": "2017-07-01T02:24:04Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length()) < 3) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1862/buggy-version/JimplePlanner.src.org.jimple.planner.TimeParser.java", "BodyUseAPI": [], "Fixed commit": "e40bab922d8dffa879a63ecc34970298386155df", "Url": "https://api.github.com/repos/cs2103jan2016-f14-2j/main", "Date": "2016-03-31T16:09:48Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index != 1) { newName = (\"classes\" + index) + \".dex\"; }else { newName = \"classes.dex\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5198/buggy-version/tinker-android.tinker-android-loader.src.main.java.com.tencent.tinker.loader.shareutil.ShareTinkerInternals.java", "BodyUseAPI": [], "Fixed commit": "32ce7a166724b65d090faf04979040dc27d73b6f", "Url": "https://api.github.com/repos/simpleton/tinker", "Date": "2017-08-14T11:03:13Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(src instanceof org.apache.commons.httpclient.ContentLengthInputStream)) { postMethod.setContentChunked(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1559/buggy-version/transports.http.src.main.java.org.mule.transport.http.transformers.ObjectToHttpClientMethodRequest.java", "BodyUseAPI": [], "Fixed commit": "a04d67b9a7fac7f7a06b1a286622026fc699242c", "Url": "https://api.github.com/repos/mulesoft/mule", "Date": "2013-07-04T15:41:26Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mLocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)) != null) { latitude = mLocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER).getLatitude(); longitude = mLocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER).getLongitude(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2593/buggy-version/mobile.src.main.java.com.brainscode.nearcommunication.PlacesActivity.java", "BodyUseAPI": ["mLocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER).getLongitude()", "mLocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER).getLatitude()", "android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)", "android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Fixed commit": "b00f11cf25d8b6c4cd7fa120c7c6e76997ff6846", "Url": "https://api.github.com/repos/lc0/FindLunch", "Date": "2015-09-18T07:53:56Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((extractorImplClassName != null) && (extractorImplClassName.equals((\"com.stratio.deep.es.extractor\" + \".ESCellExtractor\")))) && (clusterOptions.get(ExtractorConstants.PORT).equals(\"9300\"))) { values.put(ExtractorConstants.PORT, \"9200\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4893/buggy-version/src.main.java.com.stratio.connector.deep.connection.DeepConnection.java", "BodyUseAPI": [], "Fixed commit": "7396d9646fb4b6bf95324e806972dd3b6fcd0bbc", "Url": "https://api.github.com/repos/Stratio/stratio-connector-deep", "Date": "2014-12-05T09:08:24Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Node.FuncName) == null) { Node.FuncName = \"f\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6622/buggy-version/src.zen.codegen.javascript.JavaScriptSourceGenerator.java", "BodyUseAPI": [], "Fixed commit": "4071d59898dff4d0a1c6c6051829c5992d6fd3b7", "Url": "https://api.github.com/repos/konoha-project/libzen", "Date": "2014-02-24T15:48:08Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.jfschaefer.sugiyamalayout.PNode.getDirectDescendantsInBarrier(de.jfschaefer.sugiyamalayout.PNode,java.util.Set<de.jfschaefer.sugiyamalayout.PNode>)", "de.jfschaefer.sugiyamalayout.PNode.getDirectDescendants(de.jfschaefer.sugiyamalayout.PNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (de.jfschaefer.sugiyamalayout.Util.setsIntersect(descendants, sinkDescendants)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2245/buggy-version/src.main.java.de.jfschaefer.sugiyamalayout.PCycle.java", "BodyUseAPI": [], "Fixed commit": "7d237dd0bf2ead2bd8210593be2e253bd26780c3", "Url": "https://api.github.com/repos/jfschaefer/sugiyamalayout", "Date": "2015-07-23T08:37:20Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((SDK_VERSION) == 2) && (isFlashSupported())) { camera.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7405/buggy-version/app.src.main.java.fi.suomaafrontieroy.aflashlight.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ad12d62934df11aceb93d348a94e14b4fb635b1f", "Url": "https://api.github.com/repos/Lasicaine/AFlashlight", "Date": "2017-11-07T09:42:28Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fos != null) fos.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6759/buggy-version/src.main.java.redis.embedded.RedisServer.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "de32c6302a1d761fc4eb0a27ff835016cc3f8b70", "Url": "https://api.github.com/repos/nielspeter/embedded-redis", "Date": "2014-09-20T18:27:56Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultValue) != null) { reactor.core.publisher.MonoElementAt.ElementAtSubscriber.complete(defaultValue); }else { subscriber.onError(reactor.core.publisher.Operators.onOperatorError(new java.lang.IndexOutOfBoundsException())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6023/buggy-version/src.main.java.reactor.core.publisher.MonoElementAt.java", "BodyUseAPI": [], "Fixed commit": "0ec231c1ef6988c4e45129e5f399a13650281aa3", "Url": "https://api.github.com/repos/reactor/reactor-core", "Date": "2016-09-01T14:35:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hortonworks.hdf.sam.sdk.modelregistry.SAMModelRegistrySDKUtils.getModel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (modelToDelete == null) { hortonworks.hdf.sam.sdk.modelregistry.LOG.warn(((\"Custom PMML Model[ \" + pmmlModelName) + \"] doesn't exist. Nothing to delete\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5392/buggy-version/src.main.java.hortonworks.hdf.sam.sdk.modelregistry.SAMModelRegistrySDKUtils.java", "BodyUseAPI": [], "Fixed commit": "67abfe95dbd8984655fccba9f09d4ecbb2e58e52", "Url": "https://api.github.com/repos/georgevetticaden/sam-java-sdk", "Date": "2017-12-18T18:57:40Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hortonworks.hdf.sam.sdk.udf.SAMUDFSDKUtils.getUDF(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (udfToDelete == null) { hortonworks.hdf.sam.sdk.udf.LOG.warn(((\"Custom UDF [\" + udfName) + \"] doesn't exist. Nothing to delete\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5392/buggy-version/src.main.java.hortonworks.hdf.sam.sdk.udf.SAMUDFSDKUtils.java", "BodyUseAPI": [], "Fixed commit": "67abfe95dbd8984655fccba9f09d4ecbb2e58e52", "Url": "https://api.github.com/repos/georgevetticaden/sam-java-sdk", "Date": "2017-12-18T18:57:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, hortonworks.hdf.sam.sdk.component.model.SAMComponent>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (samComponent == null) { hortonworks.hdf.sam.sdk.component.LOG.warn(((\"Custom Component [\" + customSourceName) + \"] doesn't exist. Nothing to delete\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5392/buggy-version/src.main.java.hortonworks.hdf.sam.sdk.component.SAMSourceSinkComponentSDKUtils.java", "BodyUseAPI": [], "Fixed commit": "67abfe95dbd8984655fccba9f09d4ecbb2e58e52", "Url": "https://api.github.com/repos/georgevetticaden/sam-java-sdk", "Date": "2017-12-18T18:57:40Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hortonworks.hdf.sam.sdk.component.SAMProcessorComponentSDKUtils.getCustomSAMProcessor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (processorToDelete == null) { hortonworks.hdf.sam.sdk.component.LOG.warn(((\"Custom Processor [\" + customProcessorName) + \"] doesn't exist. Nothing to delete\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5392/buggy-version/src.main.java.hortonworks.hdf.sam.sdk.component.SAMProcessorComponentSDKUtils.java", "BodyUseAPI": [], "Fixed commit": "67abfe95dbd8984655fccba9f09d4ecbb2e58e52", "Url": "https://api.github.com/repos/georgevetticaden/sam-java-sdk", "Date": "2017-12-18T18:57:40Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.lwjgl.opengl.Display.isCreated()) engine.Screen.updateResize();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3038/buggy-version/src.engine.Screen.java", "BodyUseAPI": [], "Fixed commit": "ad66e76598ba82ec5283c50b1e913c6718e0d999", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-02-02T15:07:43Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.creditease.uav.profiling.handlers.ComponentProfileHandler.DescriptorProcessor.selectXMLNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (beanClazz == null) { beanClazz = processor.selectXMLNode(((\"/beans/bean[@name='\" + classId) + \"']/@class\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6080/buggy-version/com.creditease.uav.monitorframework.src.main.java.com.creditease.uav.profiling.handlers.ComponentProfileHandler.java", "BodyUseAPI": [], "Fixed commit": "b68375853fc647b63264e408bc31993b806048de", "Url": "https://api.github.com/repos/fyb007/uavstack", "Date": "2017-12-22T06:10:12Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getCause()) instanceof cn.com.deepdata.es_adapter.SkipAdaptingException) { event.setShouldPropagate(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5333/buggy-version/src.main.java.cn.com.deepdata.es_adapter.adapter.AbstractAdapter.java", "BodyUseAPI": ["cn.com.deepdata.es_adapter.ExceptionEvent.setShouldPropagate(boolean)"], "Fixed commit": "ba0abb74f6b2687f275e15b150527f3d26118eef", "Url": "https://api.github.com/repos/bidiu/elasticsearch-adapter", "Date": "2016-05-12T05:46:13Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getCause()) instanceof cn.com.deepdata.es_adapter.SkipAdaptingException) { event.setShouldPropagate(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5333/buggy-version/src.main.java.cn.com.deepdata.es_adapter.adapter.AbstractAdapter.java", "BodyUseAPI": ["cn.com.deepdata.es_adapter.ExceptionEvent.setShouldPropagate(boolean)"], "Fixed commit": "ba0abb74f6b2687f275e15b150527f3d26118eef", "Url": "https://api.github.com/repos/bidiu/elasticsearch-adapter", "Date": "2016-05-12T05:46:13Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (options.hasOption(\"k\")) codeGenerator = new ir.backend.X64CodeGenerator(ps, java.lang.Integer.parseInt(options.getOptionValue(\"k\"))); else codeGenerator = new ir.backend.X64CodeGenerator(ps);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/924/buggy-version/src.main.java.compiler.MiniJavaCompiler.java", "BodyUseAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)", "java.lang.Integer.parseInt(options.getOptionValue(\"k\"))"], "Fixed commit": "8ef34ed063077c904ad22b1bbd97f82cd9cdea0c", "Url": "https://api.github.com/repos/AndrewHancock/MiniJava-compiler", "Date": "2015-05-04T03:19:17Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.event.execution.manager.core.internal.ds.ExecutionManagerValueHolder.getTemplateDeployers().get(artifact.getType())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (deployer != null) { deployer.deployArtifact(deployableTemplate); }else { throw new org.wso2.carbon.event.execution.manager.core.exception.ExecutionManagerException((\"A deployer doesn't exist for template type \" + (artifact.getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6117/buggy-version/components.execution-manager.org.wso2.carbon.event.execution.manager.core.src.main.java.org.wso2.carbon.event.execution.manager.core.internal.util.ExecutionManagerHelper.java", "BodyUseAPI": ["org.wso2.carbon.event.execution.manager.core.TemplateDeployer.deployArtifact(org.wso2.carbon.event.execution.manager.core.DeployableTemplate)"], "Fixed commit": "be24a5a670f30cb6ccb4d1769f03e46785bcb682", "Url": "https://api.github.com/repos/dilini-muthumala/carbon-analytics-common", "Date": "2016-05-20T11:18:16Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasColumn(\"Marketplace_Module\", \"bundleSymbolicName\"))) { runSQL((\"alter table Marketplace_Module add bundleSymbolicName \" + \"VARCHAR(500)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1154/buggy-version/modules.apps.marketplace.marketplace-service.src.main.java.com.liferay.marketplace.internal.upgrade.v1_0_0.UpgradeModule.java", "BodyUseAPI": [], "Fixed commit": "1fd88531b0960713eb0e4d7879bbfccb9775b48f", "Url": "https://api.github.com/repos/ctampoya/liferay-portal", "Date": "2017-02-13T10:01:06Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasColumn(\"Marketplace_Module\", \"bundleVersion\"))) { runSQL(\"alter table Marketplace_Module add bundleVersion VARCHAR(75)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1154/buggy-version/modules.apps.marketplace.marketplace-service.src.main.java.com.liferay.marketplace.internal.upgrade.v1_0_0.UpgradeModule.java", "BodyUseAPI": [], "Fixed commit": "1fd88531b0960713eb0e4d7879bbfccb9775b48f", "Url": "https://api.github.com/repos/ctampoya/liferay-portal", "Date": "2017-02-13T10:01:06Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["quiz.solved.Q9.removeNthFromEnd(quiz.solved.Q9.ListNode,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (resultNode != null) { java.lang.System.out.println(resultNode.val); if ((resultNode.next) == null) break; else resultNode = resultNode.next; }else { java.lang.System.out.println(\"NULL\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9211/buggy-version/Algo_Master.src.quiz.solved.Q9.java", "BodyUseAPI": ["java.io.PrintStream.println(int)"], "Fixed commit": "7b4f5fa2f20d390a288f33e169f176489c860f6d", "Url": "https://api.github.com/repos/penpen787/algo_master", "Date": "2016-02-04T06:20:55Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((won) || (lost)) { newGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1298/buggy-version/src.main.java.groupProject.twentyFortyEight.GridPanel.java", "BodyUseAPI": [], "Fixed commit": "039a707379f7df14521923f853751e9e87d402b8", "Url": "https://api.github.com/repos/shiradusowitz/groupProject-2048", "Date": "2016-03-15T20:56:39Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inSet > 0) { if (theChar == (uk.gov.nationalarchives.droid.core.signature.droid6.FragmentRewriter.RANGE_OLD)) { builder.append(uk.gov.nationalarchives.droid.core.signature.droid6.FragmentRewriter.RANGE_NEW); }else if (theChar != (uk.gov.nationalarchives.droid.core.signature.droid6.FragmentRewriter.INVERTED_OLD)) { builder.append(theChar); } }else { if (((theChar == (uk.gov.nationalarchives.droid.core.signature.droid6.FragmentRewriter.OPENSET)) && ((charIndex + 1) < length)) && ((fragment.charAt((charIndex + 1))) == (uk.gov.nationalarchives.droid.core.signature.droid6.FragmentRewriter.INVERTED_OLD))) { builder.append(uk.gov.nationalarchives.droid.core.signature.droid6.FragmentRewriter.INVERTED_NEW).append(uk.gov.nationalarchives.droid.core.signature.droid6.FragmentRewriter.OPENSET); }else { builder.append(theChar); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3714/buggy-version/droid-core.src.main.java.uk.gov.nationalarchives.droid.core.signature.droid6.FragmentRewriter.java", "BodyUseAPI": [], "Fixed commit": "5c0e9d6a3c932a788a64e50ebe8dba2a18fb2dfa", "Url": "https://api.github.com/repos/snail1966/droid", "Date": "2016-01-30T14:18:08Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.wasteofplastic.askyblock.panels.SettingsPanel.DEBUG) { plugin.getLogger().info((\"DEBUG: visitor flag = \" + flag)); plugin.getLogger().info((\"DEBUG: setting for island = \" + (island.getIgsFlag(flag)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6060/buggy-version/src.com.wasteofplastic.askyblock.panels.SettingsPanel.java", "BodyUseAPI": [], "Fixed commit": "b70917742473e167590fa585ccde3f255fbf9756", "Url": "https://api.github.com/repos/TeamGameRevolution/askyblock", "Date": "2017-09-26T20:43:27Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(targetVersion.equals(jsonVersionedModel.defaultDeserializeToVersion()))) { modelData.put(jsonVersionedModel.propertyName(), targetVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1453/buggy-version/src.main.java.com.github.jonpeterson.jackson.module.versioning.VersionedModelSerializer.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.node.ObjectNode.put(jsonVersionedModel.propertyName(),java.lang.String)", "com.github.jonpeterson.jackson.module.versioning.JsonVersionedModel.propertyName()"], "Fixed commit": "ea2931110bd94c1a72c7da842f2ef852f05a3f1d", "Url": "https://api.github.com/repos/cvent/jackson-module-model-versioning", "Date": "2016-09-19T12:21:07Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bot.Field.getAvailableMoves()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((availabelMoves.size()) > 9) && (depth == 1)) this._depth = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7329/buggy-version/java-bot.src.bot.MiniMaxAlgorith.java", "BodyUseAPI": [], "Fixed commit": "26ecb5dbef55f8d07ff6d6b3065ae2adb7ed8f7d", "Url": "https://api.github.com/repos/shahriar1628/MyCodes", "Date": "2016-06-19T12:05:52Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((options.size()) < 1) { throw new jterm.command.CommandException(\"To few arguments for md\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9222/buggy-version/src.main.java.jterm.command.Dir.java", "BodyUseAPI": [], "Fixed commit": "f9c4761df717f3bad1a494508ee810dddc74d312", "Url": "https://api.github.com/repos/ojles/JTerm", "Date": "2017-11-11T14:05:23Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkTimeSpecified(originalInput))) { startDateTime = setTime(startDateTime, Constants.TIME_BEGINNING_OF_DAY); endDateTime = setTime(endDateTime, Constants.TIME_END_OF_DAY); }else { if (!(checkTimeSpecified(splitInput[0]))) { startDateTime = setTime(startDateTime, Constants.TIME_DEFAULT); } if (!(checkTimeSpecified(splitInput[1]))) { endDateTime = setTime(endDateTime, Constants.TIME_DEFAULT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4469/buggy-version/src.main.java.jfdi.parser.DateTimeParser.java", "BodyUseAPI": [], "Fixed commit": "84d8929ed8af3efca1a51b7b121979c53272121f", "Url": "https://api.github.com/repos/cs2103jan2016-w13-4j/main", "Date": "2016-03-22T06:30:45Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nodeResults.containsKey(node)) { if (nodeResults.get(node).isEmpty()) { isEmpty = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4345/buggy-version/supersql.dataconstructor.optimizer.construction.RetrievalManager.java", "BodyUseAPI": ["nodeResults.get(node).isEmpty()", "java.util.Map<supersql.dataconstructor.optimizer.nodes.Node, java.util.List<supersql.dataconstructor.optimizer.database.Tuple>>.get(supersql.dataconstructor.optimizer.nodes.Node)"], "Fixed commit": "903b8f432a2e914286a3b5ac9a197527c129a444", "Url": "https://api.github.com/repos/ToyamaLab/NewSSQL", "Date": "2016-07-07T00:49:01Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (templateId != null) { template = this.nodeTemplateDAO.findByMoid(templateId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6140/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.ClusterEntityManager.java", "BodyUseAPI": ["com.vmware.bdd.dal.INodeTemplateDAO.findByMoid(java.lang.String)"], "Fixed commit": "9b3d24da1856b3ad2a96caaf8d66d766673bb9b2", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2015-11-02T08:10:19Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rightDrawable == (getCompoundDrawables()[2])) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1134/buggy-version/library.view.src.main.java.com.tanyixiu.athene.view.widget.CancelableEditText.java", "BodyUseAPI": [], "Fixed commit": "6c08dbe0f95cd01825c82416dba257b63b3813e5", "Url": "https://api.github.com/repos/tanyixiu/Athene", "Date": "2015-12-28T08:07:27Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(BrettGUI.helpDisplayed)) { MenuManager.showMainMenu(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7385/buggy-version/Mastermind.src.HelpMenu.java", "BodyUseAPI": [], "Fixed commit": "70e1c69024ab81e2f26b29d4d59424f7514e52d9", "Url": "https://api.github.com/repos/MasterMindTeam/MasterMind2", "Date": "2016-11-03T13:07:54Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (location.hasBearing()) { bearingChangeAnimate(location.getBearing()); timber.log.Timber.d(\"has bearing. calling bearingchange\"); }else { timber.log.Timber.d(\"does not have bearing. dont call bearingchangeanimate\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5998/buggy-version/plugins.locationlayer.src.main.java.com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin.java", "BodyUseAPI": ["android.location.Location.getBearing()", "com.mapbox.mapboxsdk.plugins.locationlayer.LocationLayerPlugin.bearingChangeAnimate(location.getBearing())"], "Fixed commit": "c670c638acf563b52a02b1e3c2b3f9e708d1ce34", "Url": "https://api.github.com/repos/Hitta/mapbox-plugins-android", "Date": "2017-09-01T08:47:18Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3186/buggy-version/org.junit.tools.src.org.junit.tools.generator.utils.GeneratorUtils.java", "BodyUseAPI": [], "Fixed commit": "cf7fdbc73b5d0e0f38d72daf418056401d67a383", "Url": "https://api.github.com/repos/junit-tools-team/junit-tools", "Date": "2017-04-07T15:47:52Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (task.isOverdue()) { priorityTab.setFill(Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6326/buggy-version/task-tracker.src.main.java.main.ui.TaskCard.java", "BodyUseAPI": [], "Fixed commit": "79d8d6fd2c71a158ced89036eed0b9d2328cb034", "Url": "https://api.github.com/repos/CS2103AUG2016-T09-C3/main", "Date": "2016-11-02T07:43:35Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((numString.length()) == 1) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5489/buggy-version/wecode.src.main.java.com.we.code.tdd.palindrome.integer.PalindromeInteger.java", "BodyUseAPI": [], "Fixed commit": "1ef862551addefdb756ca521bbd80adbd32a6a08", "Url": "https://api.github.com/repos/webelieve/TDD", "Date": "2014-05-15T13:54:16Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(in.exists())) { throw new java.io.FileNotFoundException((\"input does not exists: \" + (in.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5297/buggy-version/src.main.java.jatoo.cli.jatoo.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "51a3c516632df6ffe8300500d746c76fa2e13c89", "Url": "https://api.github.com/repos/cristian-sulea/jatoo-cli", "Date": "2016-08-24T12:29:53Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in.isDirectory()) { java.io.File[] inImageFiles = in.listFiles(jatoo.image.ImageFileFilter.getInstance()); if (!overwrite) { for (java.io.File inImageFile : inImageFiles) { java.io.File outImageFile = new java.io.File(out, inImageFile.getName()); if (outImageFile.exists()) { throw new java.nio.file.FileAlreadyExistsException(outImageFile.getAbsolutePath()); } } } java.lang.System.out.println(((\"Resizing \" + (inImageFiles.length)) + \" images...\")); for (java.io.File inImageFile : inImageFiles) { java.io.File outImageFile = new java.io.File(out, inImageFile.getName()); java.lang.String formatName = inImageFile.getName().substring(((inImageFile.getName().lastIndexOf('.')) + 1)); java.awt.image.BufferedImage inImage = jatoo.image.ImageUtils.read(inImageFile); java.awt.image.BufferedImage outImage = jatoo.image.ImageUtils.resizeToFit(inImage, width, height); jatoo.image.ImageUtils.write(outImage, formatName, outImageFile); java.lang.System.out.println(outImageFile.getName()); } java.lang.System.out.println(\"Done.\"); }else { throw new java.lang.IllegalArgumentException(\"illegal input\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5297/buggy-version/src.main.java.jatoo.cli.jatoo.java", "BodyUseAPI": ["java.io.File.listFiles(jatoo.image.ImageFileFilter.getInstance())"], "Fixed commit": "51a3c516632df6ffe8300500d746c76fa2e13c89", "Url": "https://api.github.com/repos/cristian-sulea/jatoo-cli", "Date": "2016-08-24T12:29:53Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["futureList.get(i).get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (partialResult != null) { result.addAll(futureList.get(i).get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8523/buggy-version/src.org.openstreetmap.josm.plugins.scoutsigns.service.ServiceHandler.java", "BodyUseAPI": [], "Fixed commit": "aed7e98b9ae6f4bfc5ea558eed96695280f0feab", "Url": "https://api.github.com/repos/Telenav/scoutsigns", "Date": "2015-09-18T07:30:38Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((out.charAt(((out.length()) - 1))) == ',') out = out.substring(0, ((out.length()) - 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/143/buggy-version/src.api.Stopwatch.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "ec4e96858f1cab436f9bf00a12302c7b75cf9c88", "Url": "https://api.github.com/repos/kamontat/High-Level-Concurrent", "Date": "2017-04-26T16:53:37Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((out.charAt(((out.length()) - 1))) == '\\n') out = out.substring(0, ((out.length()) - 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/143/buggy-version/src.api.Stopwatch.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "ec4e96858f1cab436f9bf00a12302c7b75cf9c88", "Url": "https://api.github.com/repos/kamontat/High-Level-Concurrent", "Date": "2017-04-26T16:53:37Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["signin.account.getText()", "signin.password.getText()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((((account == null) || (account.replace(\" \", \"\").equals(\"\"))) || (password == null)) || (password.replace(\" \", \"\").equals(\"\"))) { lab02_han.MyDialog md = new lab02_han.MyDialog(signin, \"\ufffd\ufffd\u02be\", true, \"\ufffd\u00fb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ubcbb\ufffd\ufffd\u03aa\ufffd\ufffd\"); md.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE); }else if ((isValid(account)) && (isValid(password))) { toServer.writeChars(\"1\"); toServer.writeChars((account + \"&\")); toServer.writeChars((password + \"*\")); toServer.flush(); }else { lab02_han.MyDialog md = new lab02_han.MyDialog(signin, \"\ufffd\ufffd\u02be\", true, \"\ufffd\u00fb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05bb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0138\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\"); md.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6898/buggy-version/src.lab02_han.Client.java", "BodyUseAPI": ["java.io.DataOutputStream.writeChars(java.lang.String)", "lab02_han.Client.SignInListener.1.isValid(java.lang.String)", "java.io.DataOutputStream.writeChars(java.lang.String)", "lab02_han.Client.SignInListener.1.isValid(java.lang.String)"], "Fixed commit": "c39980c7d0c7c733d0fdbd877613bb2e5345e603", "Url": "https://api.github.com/repos/JavaLab02/lab02_han", "Date": "2014-12-01T05:53:42Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clickHandlerRegistered)) { clickHandlerRegistered = true; addClickHandler(new com.google.gwt.event.dom.client.ClickHandler() { @java.lang.Override public void onClick(com.google.gwt.event.dom.client.ClickEvent event) { setValue((!(getValue()))); event.preventDefault(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6456/buggy-version/gwt-material.src.main.java.gwt.material.design.client.ui.MaterialSwitch.java", "BodyUseAPI": [], "Fixed commit": "55cf823a954e78c58299768e41ce96ab01f216f5", "Url": "https://api.github.com/repos/Kusig/kusis-gwt-material", "Date": "2015-12-10T21:54:43Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { delayOnViewReady = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8127/buggy-version/library.view.src.main.java.com.shipdream.lib.android.mvc.view.MvcActivity.java", "BodyUseAPI": [], "Fixed commit": "7623d79dc498faf69392b95729d775086c9d71a1", "Url": "https://api.github.com/repos/kejunPATH/AndroidMvc", "Date": "2015-05-28T13:43:21Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((another.priority) != (this.priority)) return (another.priority) - (this.priority); else return method.toString().compareTo(another.method.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5731/buggy-version/src.de.robv.android.xposed.Callback.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)", "java.lang.reflect.Method.toString()"], "Fixed commit": "1ffa0567c10cd644c9e88ee715d56cf9177bdda9", "Url": "https://api.github.com/repos/rovo89/XposedBridge", "Date": "2012-04-05T16:22:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rickendirk.rsgwijzigingen.ZoekService.isFoutmelding(java.util.ArrayList<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isFoutMelding) sPreferencesSaver(wijzigingen);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7570/buggy-version/app.src.main.java.com.rickendirk.rsgwijzigingen.ZoekService.java", "BodyUseAPI": [], "Fixed commit": "a6b2ee1c04f7a8c8bfddf8ce10b77b32f8d53855", "Url": "https://api.github.com/repos/VriesDeRick/RoosterwijzigingChecker", "Date": "2015-08-22T14:20:45Z"},
{"Line": "=>977", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((providers == null) && (AdapterAgent.ADAPTER_TYPE_EMAIL.equalsIgnoreCase(adapterType))) { return com.askfast.commons.entity.AdapterProviders.DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5830/buggy-version/dialoghandler.src.main.java.com.almende.dialog.accounts.AdapterConfig.java", "BodyUseAPI": [], "Fixed commit": "176a043514a231c69850cc4ce9a5dabadfaa56b4", "Url": "https://api.github.com/repos/almende/dialog", "Date": "2015-10-26T16:05:05Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sbml.jsbml.Rule.getVariable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(vars.contains(var))) { vars.add(var); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4001/buggy-version/SBMLToSMT2.src.gui.Gui.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "441f39350da8019552f9c38988243ac016960a8a", "Url": "https://api.github.com/repos/dreal/biology", "Date": "2015-01-27T17:43:44Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attachJar) { final java.io.File jarFile = new java.io.File(project.getBuild().getDirectory(), ((project.getBuild().getFinalName()) + \".jar\")); projectHelper.attachArtifact(project, \"jar\", project.getArtifact().getClassifier(), jarFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9231/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase09package.ApklibMojo.java", "BodyUseAPI": [], "Fixed commit": "bb7b84189181f005a603755ddf1b73201a6751f1", "Url": "https://api.github.com/repos/greek1979/maven-android-plugin", "Date": "2014-02-17T14:03:46Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((milliseconds) <= 0) time.setText(\"0:00\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6961/buggy-version/app.src.main.java.com.example.dlawogus.taekwongo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "264b01de300865c6e5e9c8d04efe9e54361d2243", "Url": "https://api.github.com/repos/yimjaehyun/TKD-Gesture-Scoring", "Date": "2017-05-28T23:46:02Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSelectedPrimitive()) != null) getSelectedPrimitive().toggle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8184/buggy-version/src.org.nschmidt.ldparteditor.composites.primitive.CompositePrimitive.java", "BodyUseAPI": [], "Fixed commit": "a1a8eb9e543f4207e423a7cabb30f6383504e99a", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-06-12T15:43:13Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((c.length) & 1) == 1) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1447/buggy-version/src.org.citygml.textureAtlasAPI.Modifier.java", "BodyUseAPI": [], "Fixed commit": "b9e916edf23a88acb46a16ec7916b80269890e19", "Url": "https://api.github.com/repos/3dcitydb/texture-atlas-creator", "Date": "2013-11-18T21:13:11Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n <= 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5624/buggy-version/src.main.java.icircles.decomposition.DecompositionStrategyPiercing.java", "BodyUseAPI": [], "Fixed commit": "b2ed3fd74d4e6c959bc20b0f6f31a232716e1770", "Url": "https://api.github.com/repos/speedith/iCircles", "Date": "2016-02-17T11:04:52Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getKeyChar()) == 'p') simulateMoving(HORIZONTAL_PARKING); else if ((e.getKeyChar()) == 'o') simulateMoving(VERTICAL_PARKING); else if ((e.getKeyChar()) == 'r') car.setPosition(new Utils.Vector2D(501, 90));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8848/buggy-version/SW.visualisation.src.src.main.java.Top.java", "BodyUseAPI": ["java.awt.event.KeyEvent.getKeyChar()", "java.awt.event.KeyEvent.getKeyChar()"], "Fixed commit": "cde563ac7993a43bbd5473d59031843e9c3802eb", "Url": "https://api.github.com/repos/OE-Bosch-2016/MainRepo", "Date": "2016-04-10T09:25:37Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["processing.core.PApplet.join(processing.core.PApplet.trim(tempLines),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((singleLine.trim().length()) == 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7508/buggy-version/core.src.processing.data.XML.java", "BodyUseAPI": [], "Fixed commit": "66cdb6fb5e50392015de97b45bb86a7243b20ad3", "Url": "https://api.github.com/repos/processing/processing", "Date": "2013-06-03T18:04:54Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (userdata == null) userdata = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1003/buggy-version/src.main.java.org.openbaton.drivers.openstack4j.OpenStack4JDriver.java", "BodyUseAPI": [], "Fixed commit": "50ada23eca542c9eb8cd03d1eb0be0ab29c79350", "Url": "https://api.github.com/repos/openbaton/openstack4j-plugin", "Date": "2017-05-10T09:44:38Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.getInventory().getItem(0)) == null) || ((e.getInventory().getItem(0).getType()) == (org.bukkit.Material.AIR))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6295/buggy-version/src.com.connorlinfoot.luckychest.Listeners.ChestOpen.java", "BodyUseAPI": [], "Fixed commit": "a05a39df7ca33669f713e9bd7b5b072449f7c06b", "Url": "https://api.github.com/repos/connorlinfoot/LuckyChest", "Date": "2014-08-27T09:57:47Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonObject.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (typeValue == null) { throw new java.lang.IllegalArgumentException((name + \" option type is missing\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/145/buggy-version/src.main.java.com.mytdev.cliqui.reader.JsonCLIReader.java", "BodyUseAPI": [], "Fixed commit": "64ad0e36c50b1bf04e5fabd3343a344b26c997cd", "Url": "https://api.github.com/repos/le-yams/cliqui", "Date": "2014-04-28T12:11:20Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonObject.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (typeValue == null) { throw new java.lang.IllegalArgumentException((name + \" argument type is missing\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/145/buggy-version/src.main.java.com.mytdev.cliqui.reader.JsonCLIReader.java", "BodyUseAPI": [], "Fixed commit": "64ad0e36c50b1bf04e5fabd3343a344b26c997cd", "Url": "https://api.github.com/repos/le-yams/cliqui", "Date": "2014-04-28T12:11:20Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.JsonObject.getJsonArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (extensions == null) { throw new java.lang.IllegalArgumentException(\"extensions field is missing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/145/buggy-version/src.main.java.com.mytdev.cliqui.reader.PathFileExtensionConstraintParser.java", "BodyUseAPI": [], "Fixed commit": "64ad0e36c50b1bf04e5fabd3343a344b26c997cd", "Url": "https://api.github.com/repos/le-yams/cliqui", "Date": "2014-04-28T12:11:20Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.organizerName) != null) { tvHost.setText(event.organizerName); }else if ((event.organizer.name) != null) { tvHost.setText(event.organizer.name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4362/buggy-version/app.src.main.java.com.codepath.engage.EventDetailsFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(event.organizerName)", "android.widget.TextView.setText(event.organizer.name)"], "Fixed commit": "a96231a3eba0b2b0b1b29ee4ffee9ae9103702d9", "Url": "https://api.github.com/repos/amandakw5/Engage", "Date": "2017-08-09T16:48:56Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(patternName.equals(\"None\"))) { listener.stopSimulation(); cp.getFrame().clearGrid(); cp.getFrame().clearGenCount(); cp.getFrame().definedGrid(patternName); }else { cp.getFrame().clearGrid(); cp.getFrame().setGridChangeable(true); cp.getFrame().clearGenCount(); listener.stopSimulation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6567/buggy-version/src.main.java.ShapesListener.java", "BodyUseAPI": ["cp.getFrame().definedGrid(java.lang.String)"], "Fixed commit": "2372ac48c7043134779631eccb7d03c62e96b700", "Url": "https://api.github.com/repos/dmanier/GameofLife", "Date": "2015-11-29T21:57:13Z"},
{"Line": "=>983", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(average.getArithmeticMean())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2580/buggy-version/org.caleydo.view.pathway.src.org.caleydo.view.pathway.GLPathwayAugmentationRenderer.java", "BodyUseAPI": [], "Fixed commit": "86b6c39ff584377ff0b79edb596d72de6acf3179", "Url": "https://api.github.com/repos/Caleydo/caleydo", "Date": "2013-10-10T09:44:14Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(average.getArithmeticMean())) average = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2580/buggy-version/org.caleydo.view.enroute.src.org.caleydo.view.enroute.path.node.mode.MappingRenderer.java", "BodyUseAPI": [], "Fixed commit": "86b6c39ff584377ff0b79edb596d72de6acf3179", "Url": "https://api.github.com/repos/Caleydo/caleydo", "Date": "2013-10-10T09:44:14Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cglibIndex == (-1)) { cglibIndex = typename.indexOf(\"$$FastClassBy\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2239/buggy-version/springloaded.src.main.java.org.springsource.loaded.SystemPropertyConfiguredIsReloadableTypePlugin.java", "BodyUseAPI": [], "Fixed commit": "93f9ab4444ce25fb74f45a293423709de8db34c9", "Url": "https://api.github.com/repos/spring-projects/spring-loaded", "Date": "2014-03-11T22:39:22Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isJavascriptEnabled()) { new com.Ben12345rocks.AdvancedCore.Util.Javascript.JavascriptHandler(user, online, getJavascriptExpression(), getJavascriptTrueRewards(), getJavascriptFalseRewards()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5165/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.Reward.java", "BodyUseAPI": [], "Fixed commit": "855bcbd6a024d137fc340122be04ee6273858688", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2016-10-03T19:27:22Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity instanceof org.bukkit.entity.Player) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2280/buggy-version/src.main.java.net.dmulloy2.swornrpg.SwornRPG.java", "BodyUseAPI": [], "Fixed commit": "d702235be8f15eb01549bfad610ec12bd21659e1", "Url": "https://api.github.com/repos/dmulloy2/SwornRPG", "Date": "2013-06-27T02:01:43Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.abudko.scheduled.service.huuto.PublishManager.convert(com.abudko.reseller.huuto.query.enumeration.Category,com.abudko.reseller.huuto.query.service.list.ListResponse)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((photoData.getAlbumId()) == null) { log.warn(java.lang.String.format(\"Unable to extract albumid for '%s' for category '%s'\", queryResponse, category.name())); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8054/buggy-version/scheduled.src.main.java.com.abudko.scheduled.service.huuto.PublishManager.java", "BodyUseAPI": [], "Fixed commit": "2b194c1689e54532968432d3adc0a41c9b7b90ff", "Url": "https://api.github.com/repos/alexbud/vkontakte", "Date": "2013-12-03T13:17:40Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_myGraphEdges) == null) return _myEdges;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3557/buggy-version/cc-geometry.src.main.java.cc.creativecomputing.geometry.hemesh.CCVoronoi.java", "BodyUseAPI": [], "Fixed commit": "72d4cdcd630a8dd7066eb7134a5384a0830d4ce5", "Url": "https://api.github.com/repos/texone/creativecomputing", "Date": "2017-09-05T08:06:47Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPaused)) { if (isSolved()) { this.pause(); } if ((listener) != null) { listener.onGameStateUpdate(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2743/buggy-version/app.src.main.java.com.example.chow.minigamemarathon.GameFragment.java", "BodyUseAPI": [], "Fixed commit": "a6a9326d1fdaf8220d47aa1bb7cb9820329010ac", "Url": "https://api.github.com/repos/TheCompSciNoob/MinigameMarathon", "Date": "2017-11-03T20:14:34Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getBounds().getCopy()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(bounds.equals(0, 0, 0, 0))) { imgWidth = bounds.width; imgHeight = bounds.height; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6338/buggy-version/applications.plugins.org.csstudio.opibuilder.widgets.symbol.src.org.csstudio.opibuilder.widgets.symbol.image.AbstractSymbolImage.java", "BodyUseAPI": [], "Fixed commit": "efaaa5966a557300c7db1dcf025e342c01ec29b6", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2013-01-14T13:35:28Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.projectnash.application.CertificateLogic.createCertificate(de.projectnash.entities.User,java.lang.String)", "de.projectnash.application.RequestLogic.removeRequest(de.projectnash.entities.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!createdCertificateSuccessful) || (!removedUserSuccessful)) { de.projectnash.application.LogLogic.createLog(\"Der Benutzer konnte nicht berechtigt werden, das Zertifikat herunterzuladen\", user.getEmailAddress()); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6418/buggy-version/src.de.projectnash.application.UserLogic.java", "BodyUseAPI": [], "Fixed commit": "b32b2dcaca1983ce94fb95f39b931aa0cbcdf40a", "Url": "https://api.github.com/repos/22doal1bwi/projectnash", "Date": "2015-05-22T13:56:23Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverAddressesMiner) != null) serverAddressesMiner.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1805/buggy-version/src.main.java.org.n3r.diamond.client.impl.DiamondSubscriber.java", "BodyUseAPI": [], "Fixed commit": "6b051eee67ce5b598d37fbbfc6ccd0e0c2137fd6", "Url": "https://api.github.com/repos/bingoohuang/diamond-client", "Date": "2016-10-25T14:41:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((inStream) == null) throw new com.orientechnologies.common.exception.OException(\"Cannot access to the input stream. Check permissions of running process\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4370/buggy-version/core.src.main.java.com.orientechnologies.common.console.TTYConsoleReader.java", "BodyUseAPI": [], "Fixed commit": "ffc136cc01c4160526527c453f76a79abd41b219", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-02-04T23:16:18Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.common.tools.CeylonTool.start(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (exit != 0) java.lang.System.exit(exit);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8888/buggy-version/src.com.redhat.ceylon.common.tools.CeylonTool.java", "BodyUseAPI": ["java.lang.System.exit(int)"], "Fixed commit": "ce186be04aaa1b13c61747a97acb15eacc6f55d8", "Url": "https://api.github.com/repos/ceylon/ceylon-common", "Date": "2013-11-08T16:50:56Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((db) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7255/buggy-version/src.main.java.org.dsa.iot.etsdb.db.Db.java", "BodyUseAPI": [], "Fixed commit": "cbe679af0b53712b6bc416b87753e49c2992a086", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-etsdb", "Date": "2016-01-12T19:58:00Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((db) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7255/buggy-version/src.main.java.org.dsa.iot.etsdb.db.Db.java", "BodyUseAPI": [], "Fixed commit": "cbe679af0b53712b6bc416b87753e49c2992a086", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-etsdb", "Date": "2016-01-12T19:58:00Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((db) == null) { handler.complete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7255/buggy-version/src.main.java.org.dsa.iot.etsdb.db.Db.java", "BodyUseAPI": [], "Fixed commit": "cbe679af0b53712b6bc416b87753e49c2992a086", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-etsdb", "Date": "2016-01-12T19:58:00Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ix = msgL.indexOf(GhcMessages.CAST_FROM_CHAR_SHORT_7_8)) > 1) { addPragma(res, \"-XOverloadedStrings\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ix = msgL.indexOf(CabalMessages.DEPENDENCIES_MISSING)) > (-1)) { if (!(net.sf.eclipsefp.haskell.ui.internal.backend.BackendManager.getCabalImplDetails().isSandboxed())) { int nlid = msg.indexOf(\"\\n\", ix); java.util.Set<java.lang.String> all = new java.util.HashSet<>(); for (java.lang.String s : msg.substring(nlid).split(\"\\\\n\")) { s = s.trim(); if ((s.length()) > 0) { for (java.lang.String p : s.split(\",\")) { p = p.trim(); if (p.endsWith(CabalMessages.ANY)) { p = p.substring(0, ((p.length()) - (CabalMessages.ANY.length()))).trim(); } all.add(p); res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.InstallMissingPackage(java.util.Collections.singleton(p))); } } } if ((all.size()) > 1) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.InstallMissingPackage(all)); } }else { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.InstallDeps()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ix = msgL.indexOf(GhcMessages.TRY)) > 1) { int ix2 = msg.indexOf(\" \", (ix + (GhcMessages.TRY.length()))); if (ix2 > (-1)) { java.lang.String flag = msg.substring(((ix + (GhcMessages.TRY.length())) - 2), ix2).trim(); addPragma(res, flag); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msgL.indexOf(GhcMessages.INPUT_CASE)) > (-1)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddLanguagePragmaResolution(\"LambdaCase\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ix = msgL.indexOf(GhcMessages.CAST_FROM_CHAR_7_8)) > 1) { addPragma(res, \"-XOverloadedStrings\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ix = msgL.indexOf(GhcMessages.CAST_FROM_CHAR_SHORT)) > 1) { addPragma(res, \"-XOverloadedStrings\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((msgL.indexOf(GhcMessages.MISSING_MODULE)) > (-1)) { int start = GhcMessages.MISSING_MODULE.length(); int length = GhcMessages.MISSING_MODULE_ADD_START.length(); ix = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_START, start); if (ix == (-1)) { ix = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_START_7_8, ix); length = GhcMessages.MISSING_MODULE_ADD_START_7_8.length(); } if (ix > (-1)) { java.util.Set<java.lang.String> pkgs = new java.util.HashSet<>(); while (ix > (-1)) { int ix2 = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_END, ix); if (ix2 == (-1)) { ix2 = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_END_7_8, ix); } if (ix2 > (-1)) { java.lang.String pkg = msg.substring((ix + length), ix2); if (pkgs.add(pkg)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddPackageDependency(pkg)); } ix = ix2; } int st = ix + 1; length = GhcMessages.MISSING_MODULE_ADD_START.length(); ix = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_START, st); if (ix == (-1)) { ix = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_START_7_8, st); length = GhcMessages.MISSING_MODULE_ADD_START_7_8.length(); } } } int l = msgL.indexOf(\"\\n\", (start + 1)); if (l > (-1)) { java.lang.String sug = msg.substring(l); java.util.List<java.lang.String> suggestions = net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceTextResolution.getSuggestionsFromGHCMessage(sug, msgL.substring(l)); msgL = msgL.substring(0, l); int end = msgL.lastIndexOf(GhcMessages.NOT_IN_SCOPE_END); if (end == (-1)) { end = msgL.lastIndexOf(GhcMessages.NOT_IN_SCOPE_END_7_8); } java.lang.String notInScope = msg.substring((start + 2), end); for (java.lang.String suggestion : suggestions) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceTextResolution(notInScope, suggestion)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_START_7_8,int)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_END,int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_START,int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_END_7_8,int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_START,int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_START_7_8,int)", "net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceTextResolution.getSuggestionsFromGHCMessage(java.lang.String,java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ix = msgL.indexOf(GhcMessages.NOT_ENABLED)) > 1) { java.lang.String flag = msg.substring(0, ix).trim(); res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddLanguagePragmaResolution(flag)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msgL.indexOf(GhcMessages.NAKED)) > (-1)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddLanguagePragmaResolution(\"TemplateHaskell\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((msgL.indexOf(GhcMessages.WARNING_NOTYPE_CONTAINS)) > (-1)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.MissingTypeWarningResolution(net.sf.eclipsefp.haskell.buildwrapper.types.GhcMessages.WARNING_INFERREDTYPE_START)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ix = msgL.indexOf(GhcMessages.NOT_IN_SCOPE_START)) > (-1)) { net.sf.eclipsefp.haskell.ui.internal.resolve.ResolutionSuggestion s = new net.sf.eclipsefp.haskell.ui.internal.resolve.ResolutionSuggestion(msg, ix, msgL); if ((s.getSuggestions()) != null) { for (java.lang.String suggestion : s.getSuggestions()) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceTextResolution(s.getOutOfScope(), suggestion)); } } addBrowserSuggestions(marker, s.getOutOfScopeName(), s.getOutOfScopeQualifier(), res); addUsageSuggestions(marker, s.getOutOfScopeName(), s.getOutOfScopeQualifier(), res); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((msgL.indexOf(GhcMessages.WARNING_IMPORT_USELESS_CONTAINS2)) > (-1)) { int ixe2 = -1; if ((ixe2 = msgL.indexOf(GhcMessages.WARNING_IMPORT_USELESS_ELEMENT2)) > (-1)) { int start = msgL.indexOf(GhcMessages.WARNING_IMPORT_USELESS_CONTAINS_START); if (start > (-1)) { java.lang.String redundantElement = msg.substring((start + (GhcMessages.WARNING_IMPORT_USELESS_CONTAINS_START.length())), ixe2).trim(); if ((redundantElement.startsWith(\"`\")) || (redundantElement.startsWith(\"\u2018\"))) { redundantElement = redundantElement.substring(1, ((redundantElement.length()) - 1)); } res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.RemoveRedundantElementInImportResolution(redundantElement)); } }else { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.RemoveImportResolution()); int ix2 = msgL.indexOf(GhcMessages.WARNING_IMPORT_USELESS_START2); if (ix2 > (-1)) { java.lang.String newImport = msg.substring((ix2 + (GhcMessages.WARNING_IMPORT_USELESS_START2.length()))).trim(); res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceImportResolution(newImport)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": ["java.lang.String.indexOf(GhcMessages.WARNING_IMPORT_USELESS_CONTAINS_START)", "java.lang.String.indexOf(GhcMessages.WARNING_IMPORT_USELESS_START2)", "java.lang.String.indexOf(GhcMessages.WARNING_IMPORT_USELESS_ELEMENT2)"], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ix = msgL.indexOf(GhcMessages.DID_YOU_MEAN)) > 1) { int ix2 = msg.indexOf(\"?\", (ix + (GhcMessages.DID_YOU_MEAN.length()))); if (ix2 > (-1)) { java.lang.String flag = msg.substring((ix + (GhcMessages.DID_YOU_MEAN.length())), ix2).trim(); addPragma(res, flag); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ix = msgL.indexOf(GhcMessages.YOU_NEED)) > 1) { int ix2 = msg.indexOf(\" \", (ix + (GhcMessages.YOU_NEED.length()))); if (ix2 > (-1)) { java.lang.String flag = msg.substring(((ix + (GhcMessages.YOU_NEED.length())) - 2), ix2).trim(); addPragma(res, flag); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((msgL.indexOf(GhcMessages.WARNING_IMPORT_USELESS_CONTAINS)) > (-1)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.RemoveImportResolution()); int ix2 = msgL.indexOf(GhcMessages.WARNING_IMPORT_USELESS_START); if (ix2 > (-1)) { java.lang.String newImport = msg.substring((ix2 + (GhcMessages.WARNING_IMPORT_USELESS_START.length()))).trim(); res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceImportResolution(newImport)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": ["java.lang.String.indexOf(GhcMessages.WARNING_IMPORT_USELESS_START)"], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IMarker.getAttribute(IMarker.MESSAGE,java.lang.String)", "java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (addFlagPragma(res, msg, msgL, GhcMessages.WARNING_USEFLAG_CONTAINS, GhcMessages.WARNING_USEFLAG_CONTAINS2, GhcMessages.WARNING_USEFLAG_CONTAINS3, GhcMessages.WARNING_USEFLAG_CONTAINS4, GhcMessages.WARNING_USEFLAG_CONTAINS5, GhcMessages.WARNING_USEFLAG_CONTAINS6)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msgL.indexOf(GhcMessages.IS_A_DATA_CONSTRUCTOR)) > (-1)) { int btix = msg.indexOf('`'); int sqix = msg.indexOf('\\'', btix); btix = msg.indexOf('`', sqix); sqix = msg.indexOf('\\'', btix); java.lang.String constructor = msg.substring((btix + 1), sqix); btix = msg.indexOf('`', sqix); sqix = msg.indexOf('\\'', btix); java.lang.String type = msg.substring((btix + 1), sqix); res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceImportElement(constructor, (((type + \"(\") + constructor) + \")\"))); res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceImportElement(constructor, (type + \"(..)\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msgL.indexOf(GhcMessages.DO_DISCARDED_START)) > (-1)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddGhcPragmaResolution(\"-fno-warn-unused-do-bind\")); res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddGHCOptionResolution(\"-fno-warn-unused-do-bind\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ix = msgL.indexOf(GhcMessages.CAST_FROM_CHAR)) > 1) { addPragma(res, \"-XOverloadedStrings\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ix = msgL.indexOf(GhcMessages.PERMITS_THIS)) > 1) { int ix2 = msg.substring(0, ix).lastIndexOf(\"(-X\"); java.lang.String flag = msg.substring((ix2 + 1), ix).trim(); addPragma(res, flag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((msgL.indexOf(GhcMessages.WARNING_NOTYPE_TOPLEVEL_CONTAINS)) > (-1)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.MissingTypeWarningResolution(net.sf.eclipsefp.haskell.buildwrapper.types.GhcMessages.WARNING_NOTYPE_TOPLEVEL_CONTAINS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8463/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": [], "Fixed commit": "4cef62d387beca183f61e301d45512c17e4755b8", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-12-27T10:26:36Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toolbarElement) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3810/buggy-version/org.semanticsoft.vaaclipse.widgets.src.org.semanticsoft.vaaclipse.widgets.client.ui.stackwidget.VStackWidget.java", "BodyUseAPI": [], "Fixed commit": "903836c5d774f22fb2c49993de8f26704f65b6d7", "Url": "https://api.github.com/repos/zadeluca/vaaclipse", "Date": "2013-12-23T10:31:33Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Throwable.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cause == null) { return builder.build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1971/buggy-version/agent.core.src.main.java.org.glowroot.agent.model.ErrorMessage.java", "BodyUseAPI": [], "Fixed commit": "78f8788e07a6e9f7a6a90cd42cd53e78b413edd4", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2016-09-15T18:48:46Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.example.godsi.myapplication.Attribute>.indexOf(com.example.godsi.myapplication.Attribute)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index > 0) { return parametersArray.get(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6103/buggy-version/app.src.main.java.com.example.godsi.myapplication.Predicate.java", "BodyUseAPI": ["java.util.ArrayList<com.example.godsi.myapplication.Attribute>.get(int)"], "Fixed commit": "4e3edac8e0350f45d0ff4953d2dc00a2a72e61fd", "Url": "https://api.github.com/repos/godsight/LittlePrologApplication", "Date": "2016-10-14T05:40:20Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((countdown) != null) { countdown.votingComplete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4943/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.voting.VotingPanel.java", "BodyUseAPI": [], "Fixed commit": "729bc83fe43b313b2b1b55f7691b8c6dc301b555", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-05-06T18:13:46Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (primary == null) { primary = document.createElement(\"primary\"); instruments.appendChild(primary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8024/buggy-version/src.database.MusicianDB.java", "BodyUseAPI": [], "Fixed commit": "254bfaa12516cbb62c19563247a419f453e54275", "Url": "https://api.github.com/repos/palmerjoshua/COP4331_Project", "Date": "2015-11-29T18:38:41Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sentence != null) sentenceList.add(parser.parse(sentence));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5588/buggy-version/authoridentification.src.main.java.authoridentification.text.representation.FeatureExtractor.java", "BodyUseAPI": ["java.util.List<authoridentification.parser.Tree>.add(parser.parse(sentence))", "authoridentification.parser.Parser.parse(java.lang.String)"], "Fixed commit": "b90b990672364dd73b6509b95d893a6a3cfc15d6", "Url": "https://api.github.com/repos/pajac/authoridentification", "Date": "2012-11-24T21:12:01Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thordev.webapi.utility.UserAgentUtil.parse(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((uaInfo.browser) == (org.thordev.webapi.utility.UserAgentUtil.BrowserType.FIREFOX)) { response.addHeader(\"Content-Disposition\", ((\"attachment; filename*=\\\"utf-8\\'\\'\" + filename) + \"\\\"\")); }else { response.addHeader(\"Content-Disposition\", ((\"attachment; filename=\\\"\" + filename) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2815/buggy-version/webapi.src.main.java.org.thordev.webapi.FileManager.java", "BodyUseAPI": [], "Fixed commit": "b34db3d8e1dfdee712871a8261bafa0cf52f5b94", "Url": "https://api.github.com/repos/ThorQin/webapi-suit", "Date": "2014-08-07T04:52:11Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sx.blah.discord.Discord4J.LOGGER) instanceof sx.blah.discord.Discord4J.Discord4JLogger) { ((sx.blah.discord.Discord4J.Discord4JLogger) (Discord4J.LOGGER)).setLevel(Discord4J.Discord4JLogger.Level.NONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2507/buggy-version/src.main.java.com.jaoafa.PeriodMatch.Discord.Discord.java", "BodyUseAPI": [], "Fixed commit": "4124b4ec4fd68eddc61bebbea9c97ccc21e80467", "Url": "https://api.github.com/repos/jaoafa/PeriodMatch", "Date": "2017-12-09T05:31:42Z"},
{"Line": "=>707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5063/buggy-version/src.de.jClipCorn.gui.frames.previewSeriesFrame.PreviewSeriesFrame.java", "BodyUseAPI": [], "Fixed commit": "849dd1eea9fe875372e40a9be403b64efa9ce3e4", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2015-02-25T19:34:07Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ss < 0) || (ss >= (seasons.size()))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5063/buggy-version/src.de.jClipCorn.database.databaseElement.CCSeries.java", "BodyUseAPI": [], "Fixed commit": "849dd1eea9fe875372e40a9be403b64efa9ce3e4", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2015-02-25T19:34:07Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (reward == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2427/buggy-version/src.com.craftyn.casinoslots.slot.game.ResultsTask.java", "BodyUseAPI": [], "Fixed commit": "9e7b6a031128fd28fd9d268aa5e56f46c742d74a", "Url": "https://api.github.com/repos/graywolf336/CasinoSlots", "Date": "2012-03-31T03:35:15Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(sequenceString)) sequenceString = sequence.getSequence();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/182/buggy-version/src.main.java.org.jbei.ice.lib.net.RemoteTransfer.java", "BodyUseAPI": [], "Fixed commit": "6433f24c9e80a6910a0590ec699c973a3862e806", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2015-04-05T16:56:26Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (super.getBoard().getSquare(temp1).isSquareAvailable()) { squares.add(tempSqr1); if (super.getBoard().getSquare(temp2).isSquareAvailable()) { squares.add(tempSqr2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3402/buggy-version/src.nz.ac.aut.pdc.ChessHits.model.pieces.Pawn.java", "BodyUseAPI": ["super.getBoard().getSquare(temp2).isSquareAvailable()", "super.getBoard().getSquare(nz.ac.aut.pdc.ChessHits.model.Position)", "nz.ac.aut.pdc.ChessHits.model.pieces.Piece.getBoard()"], "Fixed commit": "94a98ecc361048023e21c9530d5ff81d9a9371b4", "Url": "https://api.github.com/repos/guy101100/Chess_Hits", "Date": "2013-10-02T01:15:18Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (super.getBoard().getSquare(temp1).isSquareAvailable()) { squares.add(tempSqr1); if (super.getBoard().getSquare(temp2).isSquareAvailable()) { squares.add(tempSqr2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3402/buggy-version/src.nz.ac.aut.pdc.ChessHits.model.pieces.Pawn.java", "BodyUseAPI": ["super.getBoard().getSquare(temp2).isSquareAvailable()", "nz.ac.aut.pdc.ChessHits.model.pieces.Piece.getBoard()", "super.getBoard().getSquare(nz.ac.aut.pdc.ChessHits.model.Position)"], "Fixed commit": "94a98ecc361048023e21c9530d5ff81d9a9371b4", "Url": "https://api.github.com/repos/guy101100/Chess_Hits", "Date": "2013-10-02T01:15:18Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getElementCount()) > 0) { this.remove(this.getElementAt(x, y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/970/buggy-version/src.HangmanCanvas.java", "BodyUseAPI": [], "Fixed commit": "5f5e6f00a3fc1ba6e5539bf2493eaabc8162c1fa", "Url": "https://api.github.com/repos/aeysaman/hangman", "Date": "2014-05-27T15:37:35Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((field.getType()) == (char.class)) || ((field.getType()) == (java.lang.Character.class))) { value = ((java.lang.String) (value)).charAt(0); }else if ((field.getType()) == (java.util.Date.class)) { long date = ((java.lang.Long) (value)); if (date <= 0) { value = null; }else { value = new java.util.Date(date); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4541/buggy-version/library.src.org.litepal.crud.DataHandler.java", "BodyUseAPI": ["java.lang.reflect.Field.getType()"], "Fixed commit": "1d4853a611f2b08bf6f4d6ae3210e797f700b816", "Url": "https://api.github.com/repos/LitePalFramework/LitePal", "Date": "2014-06-12T13:37:38Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.nickivy.slugfood.widget.MenuWidget.getWidgetDataById(appWidgetId)) == null) { return row; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5847/buggy-version/app.src.main.java.com.nickivy.slugfood.widget.WidgetService.java", "BodyUseAPI": [], "Fixed commit": "522dfa965fc0120052eb3d7a2ee7ace4f40df2f6", "Url": "https://api.github.com/repos/nickyivyca/UCSCDining", "Date": "2016-05-17T02:04:11Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.docear.plugin.core.features.DocearMapModelController.getModel(org.freeplane.features.map.MapModel)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dmme == null) { dmme = org.docear.plugin.core.features.DocearMapModelController.setModelWithCurrentVersion(map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8780/buggy-version/docear_plugin_core.src.org.docear.plugin.core.listeners.DocearCoreOmniListenerAdapter.java", "BodyUseAPI": [], "Fixed commit": "a2c7ff103a3163ec3cf40f6e2673f9100bdc049f", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-08-23T15:05:07Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.docear.plugin.core.features.DocearMapModelController.getModel(org.freeplane.features.map.MapModel)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dmme == null) { dmme = org.docear.plugin.core.features.DocearMapModelController.setModelWithCurrentVersion(map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8780/buggy-version/docear_plugin_core.src.org.docear.plugin.core.listeners.DocearCoreOmniListenerAdapter.java", "BodyUseAPI": [], "Fixed commit": "a2c7ff103a3163ec3cf40f6e2673f9100bdc049f", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-08-23T15:05:07Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (auxKey.equals(\"repl-id\")) replicator.getConfiguration().setReplId(auxValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3077/buggy-version/src.main.java.com.moilioncircle.redis.replicator.rdb.DefaultRdbVisitor.java", "BodyUseAPI": [], "Fixed commit": "339e0ee6355ea037fa4f337e4099b12911850303", "Url": "https://api.github.com/repos/leonchen83/redis-replicator", "Date": "2017-11-06T14:21:19Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (auxKey.equals(\"repl-offset\")) replicator.getConfiguration().setReplOffset(java.lang.Long.parseLong(auxValue));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3077/buggy-version/src.main.java.com.moilioncircle.redis.replicator.rdb.DefaultRdbVisitor.java", "BodyUseAPI": [], "Fixed commit": "339e0ee6355ea037fa4f337e4099b12911850303", "Url": "https://api.github.com/repos/leonchen83/redis-replicator", "Date": "2017-11-06T14:21:19Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((entity.getACL().getOwner()) != null) && (!(entity.getACL().getOwner().isEmpty()))) { org.apache.falcon.security.CurrentUser.authenticate(entity.getACL().getOwner()); }else { org.apache.falcon.security.CurrentUser.authenticate(java.lang.System.getProperty(\"user.name\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4652/buggy-version/prism.src.main.java.org.apache.falcon.service.BacklogMetricEmitterService.java", "BodyUseAPI": ["org.apache.falcon.entity.v0.Entity.getACL()", "org.apache.falcon.security.CurrentUser.authenticate(entity.getACL().getOwner())", "entity.getACL().getOwner()"], "Fixed commit": "6c037018b66b4c430b2f024ead87d460d7ba3299", "Url": "https://api.github.com/repos/pavankumar526/falcon", "Date": "2016-07-13T15:00:15Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mOnItemClickListener == null) { this.mOnItemClickListener = null; iterateClearItemViewOnClickListener(mMainView); iterateClearItemViewOnClickListener(mReserveView); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3330/buggy-version/carousel.src.main.java.com.yunPATHn.carousel.CarouselView.java", "BodyUseAPI": [], "Fixed commit": "1a4497ed15c87609a0985f3fd5648d2de14a38e5", "Url": "https://api.github.com/repos/ls1110924/CarouselView", "Date": "2016-09-23T06:04:03Z"},
{"Line": "=>1937", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.contentspec.builder.structures.BuildData.getContentSpec()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((contentSpec.getVersion()) != null) { retValue.append(\", \\\"\").append(new java.lang.String(encoder.quoteAsUTF8(contentSpec.getVersion()), org.jboss.pressgang.ccms.contentspec.builder.DocBookBuilder.ENCODING)).append(\"\\\"\"); }else { retValue.append(\", null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7408/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.builder.DocBookBuilder.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "org.jboss.pressgang.ccms.contentspec.ContentSpec.getVersion()", "org.codehaus.jackson.io.JsonStringEncoder.quoteAsUTF8(contentSpec.getVersion())"], "Fixed commit": "67a7f2875b3d48b9d45cfddec985a32051729a8a", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSBuilder", "Date": "2014-02-17T06:47:23Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mp) != null) && (mp.isPlaying())) { mp.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6095/buggy-version/app.src.main.java.hr.math.android.topthema.ArticleActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()"], "Fixed commit": "679d85a42727a075ca987e1ea4ef58bef6675b05", "Url": "https://api.github.com/repos/aciganj/TopThema", "Date": "2015-01-07T23:29:45Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startPrice >= endPrice) throw new java.rmi.RemoteException(\"Min has to be lower than max!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8913/buggy-version/dslab3.src.at.ac.tuwien.dslab2.service.billingServer.BillingServerSecureImpl.java", "BodyUseAPI": [], "Fixed commit": "8f0ee154dd3e78ebcecbf3b1362038223ffec275", "Url": "https://api.github.com/repos/daklaus/DistSys", "Date": "2013-01-07T17:02:45Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.funliving.info.repository.ApartmentRepository.toCollegeDistance(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (distance != null) { result.setDistance(new com.funliving.info.resource.DistanceJson(distance)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2014/buggy-version/api.src.main.java.com.funliving.info.resource.ApartmentApi.java", "BodyUseAPI": ["com.funliving.info.resource.ApartmentJson.setDistance(com.funliving.info.resource.DistanceJson)"], "Fixed commit": "53e3eeeb81d778168f3a8cf87f39c8ae6f7de5fb", "Url": "https://api.github.com/repos/laoweige/funliving", "Date": "2016-09-03T06:20:32Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(formItem.getType().equals(FormItemType.SECTION.toString()))) { sb.append(formItem.getLabel(actionRequest.getLocale())); sb.append(\" : \"); sb.append(getCleanUserInput(actionRequest, formItem)); sb.append(CharPool.NEW_LINE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6838/buggy-version/docroot.WEB-INF.src.com.rcs.webform.portlet.WebFormPortlet.java", "BodyUseAPI": ["com.rcs.webform.portlet.WebFormPortlet.getCleanUserInput(javax.portlet.ActionRequest,com.rcs.webform.model.FormItem)", "com.liferay.portal.kernel.util.StringBundler.append(formItem.getLabel(actionRequest.getLocale()))", "com.liferay.portal.kernel.util.StringBundler.append(java.lang.String)", "com.rcs.webform.model.FormItem.getLabel(actionRequest.getLocale())"], "Fixed commit": "509cbfaa1786d4171db2a62259b0679627a24eb4", "Url": "https://api.github.com/repos/rotterdam-cs/rcswebform-portlet", "Date": "2015-08-04T10:42:00Z"},
{"Line": "=>2130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.apimgt.impl.utils.APIUtil.getWSDLDefinitionFilePath(api.getId().getApiName(),api.getId().getVersion(),api.getId().getProviderName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (registry.resourceExists(existingWsdlResourcePath)) { java.lang.String newWsdlResourcePath = org.wso2.carbon.apimgt.impl.utils.APIUtil.getWSDLDefinitionFilePath(newAPI.getId().getApiName(), newAPI.getId().getVersion(), newAPI.getId().getProviderName()); registry.copy(existingWsdlResourcePath, newWsdlResourcePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8223/buggy-version/components.apimgt.org.wso2.carbon.apimgt.impl.src.main.java.org.wso2.carbon.apimgt.impl.APIProviderImpl.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.impl.APIProviderImpl.copy(java.lang.String,java.lang.String)"], "Fixed commit": "ce51f3653549b9613d39329fd1d27c240b4d7450", "Url": "https://api.github.com/repos/tharikaGitHub/carbon-apimgt", "Date": "2017-12-11T18:55:20Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["marytts.util.data.DoubleDataSource.getData(double[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nRead <= 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8492/buggy-version/marytts-signalproc.src.main.java.marytts.util.data.audio.DDSAudioInputStream.java", "BodyUseAPI": [], "Fixed commit": "0354ce9cafa2f647985120e05d189c323c085920", "Url": "https://api.github.com/repos/marytts-it/marytts", "Date": "2012-12-10T09:43:37Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toDeliver <= 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8492/buggy-version/marytts-signalproc.src.main.java.marytts.signalproc.filter.FIRFilter.java", "BodyUseAPI": [], "Fixed commit": "0354ce9cafa2f647985120e05d189c323c085920", "Url": "https://api.github.com/repos/marytts-it/marytts", "Date": "2012-12-10T09:43:37Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((best.x) - (xCenter)) == 0) && (((best.y) - (yCenter)) == 0)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2740/buggy-version/robotics.skynet.src.skynet.PFRobot.java", "BodyUseAPI": [], "Fixed commit": "b483a4eef01568a970cda3a4eaade1a1cb6e663f", "Url": "https://api.github.com/repos/alexmwu/cs3105", "Date": "2015-03-12T18:49:50Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.utsa.fileflow.filestructure.FilePath.pathToFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pathToDest != dest) { edu.utsa.fileflow.filestructure.FileStructure fs = assume(dest.pathToFile()); if (fs == null) { if (sourceFile.isRegularFile()) { throw new edu.utsa.fileflow.compiler.CompilerException(java.lang.String.format(\"cp: cannot create regular file '%s': No such file or directory\", dest)); }else { throw new edu.utsa.fileflow.compiler.CompilerException(java.lang.String.format(\"cp: cannot create directory '%s': No such file or directory\", dest)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/704/buggy-version/src.edu.utsa.fileflow.compiler.ConditionManager.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,edu.utsa.fileflow.filestructure.FilePath)", "java.lang.String.format(java.lang.String,edu.utsa.fileflow.filestructure.FilePath)", "edu.utsa.fileflow.filestructure.FilePath.pathToFile()", "edu.utsa.fileflow.compiler.ConditionManager.assume(dest.pathToFile())"], "Fixed commit": "cb3b0daf553bab966ff3c0bfa65ba763fe0d5594", "Url": "https://api.github.com/repos/rodneyxr/fileflowanalysis", "Date": "2015-09-09T20:58:10Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.utsa.fileflow.compiler.Condition.existsInPositive(edu.utsa.fileflow.filestructure.FilePath)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!dpost) { dest.setDir(sourceFile.isDirectory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/704/buggy-version/src.edu.utsa.fileflow.compiler.ConditionManager.java", "BodyUseAPI": [], "Fixed commit": "cb3b0daf553bab966ff3c0bfa65ba763fe0d5594", "Url": "https://api.github.com/repos/rodneyxr/fileflowanalysis", "Date": "2015-09-09T20:58:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((minPos) == ((stack.size()) - 1)) minPos = stack.get(((stack.size()) - 1)).preMin;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8247/buggy-version/min_stack.java", "BodyUseAPI": ["ArrayList<MinStack.Node>.size()", "ArrayList<MinStack.Node>.get(((stack.size()) - 1))"], "Fixed commit": "5dff38292dc19f3807ac69d702acea6850111f40", "Url": "https://api.github.com/repos/sunheehnus/leetcode", "Date": "2014-11-11T03:33:12Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tableCollectionClasses.Record.readData(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1960/buggy-version/P2_840128088.src.generalUtilities.DataUtils.java", "BodyUseAPI": [], "Fixed commit": "1917159dc58d6ab8f6d8277c4f2c946fdc22a37c", "Url": "https://api.github.com/repos/jasp0894/ICOM4035_P2", "Date": "2016-10-09T02:07:26Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eof) && (outBuffer.end())) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7327/buggy-version/teavm-classlib.src.main.java.org.teavm.classlib.java.io.TInputStreamReader.java", "BodyUseAPI": [], "Fixed commit": "bb0cd3e180349747855616204e6f96f44fc7d9c0", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2015-01-25T08:05:17Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mStageId = savedInstanceState.getInt(com.neoware.europlanner.StageFragment.STAGE_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1119/buggy-version/src.com.neoware.europlanner.StageFragment.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "aa674d96c026da39e31c30b197d37ed466b5d6ea", "Url": "https://api.github.com/repos/steprobe/E12Planner", "Date": "2012-06-08T21:00:59Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (receipt == null) { return purchase; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/769/buggy-version/library.src.main.java.org.onepf.oms.appstore.AmazonAppstoreBillingService.java", "BodyUseAPI": [], "Fixed commit": "b69f61fbbaa334491aeb46c41a55ea49336cf37c", "Url": "https://api.github.com/repos/onepf/OpenIAB", "Date": "2015-01-22T13:32:17Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isInitialized())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6304/buggy-version/filterlib.src.main.java.z0kai.filterlib.filters.BaseFilter.java", "BodyUseAPI": [], "Fixed commit": "d9a81db6c3b0a908e9aa1d39a76d5050bada5142", "Url": "https://api.github.com/repos/0kai/FilterCamera", "Date": "2016-07-06T11:02:18Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((answer.charAt(0)) == 'y') { fr.mrc.ptichat.connection.Client.initiateClientSocket(); }else { java.lang.System.out.println(\"\\n###### Waiting for a connection ######\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3117/buggy-version/src.fr.mrc.ptichat.main.Main.java", "BodyUseAPI": [], "Fixed commit": "010406b74770d4a889d0495a832844ac608bece6", "Url": "https://api.github.com/repos/CRollin/ptiChat", "Date": "2016-10-11T16:37:00Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.camera2.TotalCaptureResult.get(CaptureResult.CONTROL_AF_STATE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((android.hardware.camera2.CaptureResult.CONTROL_AF_STATE_INACTIVE) != afState) { try { android.util.Log.v(appFragment.APP_TAG, \"- - - Triggering AF Passive state to lock.\"); mCaptureCRB.set(CaptureRequest.CONTROL_AE_PRECAPTURE_TRIGGER, CaptureRequest.CONTROL_AE_PRECAPTURE_TRIGGER_IDLE); mCaptureCRB.set(CaptureRequest.CONTROL_AF_TRIGGER, CaptureRequest.CONTROL_AF_TRIGGER_START); mSession.capture(mCaptureCRB.build(), this, mBackgroundHandler); } catch (android.hardware.camera2.CameraAccessException cae) { cae.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6577/buggy-version/app.src.main.java.com.devcam.CaptureDesign.java", "BodyUseAPI": [], "Fixed commit": "8fd37c2f3f76afea718ef1bfdbffdfc926e2ec37", "Url": "https://api.github.com/repos/rcsumner/devCam", "Date": "2015-04-08T00:07:01Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkSelfPermission(android.Manifest.permission.WRITE_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) requestPermissions(new java.lang.String[]{ android.Manifest.permission.WRITE_EXTERNAL_STORAGE }, com.minhtam.screencaptureeasy.Activity.MainActivity.REQUEST_WRITE_PERMISSION);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8434/buggy-version/app.src.main.java.com.minhtam.screencaptureeasy.Activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e9b802db9603b0cc4d1f60f7442910bfee10688f", "Url": "https://api.github.com/repos/buiphucminhtam/ScreenCaptureEasy", "Date": "2017-11-14T15:58:26Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs2.next()) { java.sql.PreparedStatement ps5 = con.prepareStatement(\"DELETE FROM Conta where Username=?\"); ps3.setString(1, rs2.getString(1)); ps3.executeUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/479/buggy-version/src.Sistema.Gestao.Despesas.Data.MoradorDAO.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.ResultSet.getString(int)"], "Fixed commit": "34f9c653a88879e1f7182498e3163fe87d97086f", "Url": "https://api.github.com/repos/To-Silva/DSS-Revived", "Date": "2016-12-30T23:42:36Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((abort.getSecond()) != null) { button.addCaptureListener(abort.getSecond()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7755/buggy-version/core.src.de.bitbrain.craft.ui.dialog.Dialog.java", "BodyUseAPI": ["com.badlogic.gdx.scenes.scene2d.ui.TextButton.addCaptureListener(abort.getSecond())", "de.bitbrain.craft.util.Pair<java.lang.String, com.badlogic.gdx.scenes.scene2d.utils.ClickListener>.getSecond()"], "Fixed commit": "37a0109ccdeefbb06f6b2b3bc20d49c8047bbf5d", "Url": "https://api.github.com/repos/bitbrain/craft", "Date": "2015-01-03T21:41:23Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((submit.getSecond()) != null) { button.addCaptureListener(submit.getSecond()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7755/buggy-version/core.src.de.bitbrain.craft.ui.dialog.Dialog.java", "BodyUseAPI": ["de.bitbrain.craft.util.Pair<java.lang.String, com.badlogic.gdx.scenes.scene2d.utils.ClickListener>.getSecond()", "com.badlogic.gdx.scenes.scene2d.ui.TextButton.addCaptureListener(submit.getSecond())"], "Fixed commit": "37a0109ccdeefbb06f6b2b3bc20d49c8047bbf5d", "Url": "https://api.github.com/repos/bitbrain/craft", "Date": "2015-01-03T21:41:23Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((r == (hudson.model.Result.SUCCESS)) || ((evenIfUnstable) && (r == (hudson.model.Result.UNSTABLE)))) { return new hudson.plugins.promoted_builds.conditions.SelfPromotionBadge(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5944/buggy-version/src.main.java.hudson.plugins.promoted_builds.conditions.SelfPromotionCondition.java", "BodyUseAPI": [], "Fixed commit": "b783f83b010c3510d6f1292e62c6d409d60dd0b4", "Url": "https://api.github.com/repos/jenkinsci/promoted-builds-plugin", "Date": "2011-08-09T10:58:08Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportMediaController()) != null) { getSupportMediaController().unregisterCallback(mMediaControllerCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/819/buggy-version/app.src.main.java.com.example.course.musicplayer.ui.ExtendBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "35d781dd65087a66852c048bc1e2e0ab4d41c7c9", "Url": "https://api.github.com/repos/nickwang1982/My_music_player_test_week13", "Date": "2016-06-02T16:33:09Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((percentage < 0) || (percentage > 100)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/317/buggy-version/src.com.halcyonwaves.apps.energize.services.MonitorBatteryStateService.java", "BodyUseAPI": [], "Fixed commit": "b119b08757533b383ad9ec75ad3d5168626b8a4c", "Url": "https://api.github.com/repos/thuetz/Energize", "Date": "2012-07-11T20:12:08Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.commonjava.aprox.subsys.git.ConflictStrategy.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { result = org.commonjava.aprox.subsys.git.ConflictStrategy.overwrite; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1426/buggy-version/addons.revisions.common.src.main.java.org.commonjava.aprox.revisions.conf.RevisionsConfig.java", "BodyUseAPI": [], "Fixed commit": "6d4c685949d94b02f404c23348a98303fba4fd12", "Url": "https://api.github.com/repos/jdcasey/indy", "Date": "2015-02-04T23:27:56Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.duplication.ws.DuplicationsParser.Duplication.file()", "org.sonar.server.duplication.ws.DuplicationsParser.Duplication.file()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.commons.lang.StringUtils.equals(file1.projectUuid(), projectUuid)) && (!(org.apache.commons.lang.StringUtils.equals(file2.projectUuid(), projectUuid)))) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1486/buggy-version/server.sonar-server.src.main.java.org.sonar.server.duplication.ws.DuplicationsParser.java", "BodyUseAPI": [], "Fixed commit": "75b201a54a3cc80f035e6f177f907eb04bd8f892", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-08-31T14:42:05Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.duplication.ws.DuplicationsParser.Duplication.file()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (file1.equals(d2.file())) { return d1.from().compareTo(d2.from()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1486/buggy-version/server.sonar-server.src.main.java.org.sonar.server.duplication.ws.DuplicationsParser.java", "BodyUseAPI": ["org.sonar.server.duplication.ws.DuplicationsParser.Duplication.from()", "java.lang.Integer.compareTo(java.lang.Integer)"], "Fixed commit": "75b201a54a3cc80f035e6f177f907eb04bd8f892", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-08-31T14:42:05Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.duplication.ws.DuplicationsParser.Duplication.file()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (file1.uuid().equals(uuid)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1486/buggy-version/server.sonar-server.src.main.java.org.sonar.server.duplication.ws.DuplicationsParser.java", "BodyUseAPI": [], "Fixed commit": "75b201a54a3cc80f035e6f177f907eb04bd8f892", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2015-08-31T14:42:05Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.getAttributes().getNamedItem(\"enviroId\")) != null) { int id = java.lang.Integer.parseInt(getAttributeValue(node, \"enviroId\")); if (id == mapId) { org.w3c.dom.NodeList enviroObjectNodes = doc.getElementsByTagName(\"enviroObject\"); addEnviroObjects(enviroObjectNodes); org.w3c.dom.NodeList startingPosNodes = doc.getElementsByTagName(\"startingPos\"); addStartingPositions(startingPosNodes); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2005/buggy-version/src.vooga.fighter.objects.MapLoader.java", "BodyUseAPI": ["java.lang.Integer.parseInt(getAttributeValue(node, \"enviroId\"))", "vooga.fighter.objects.MapLoader.getAttributeValue(org.w3c.dom.Node,java.lang.String)"], "Fixed commit": "929bde2e5080bdee86f9b63c6dfb2b346098624c", "Url": "https://api.github.com/repos/duke-compsci308-spring2013/vooga", "Date": "2013-04-15T00:51:17Z"},
{"Line": "=>756", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.ibm.stocator.fs.common.Utils.validSchema(filesystemURI))) { int ind = path.toUri().getPath().indexOf(\"/\", ((path.toUri().getPath().indexOf(\"/\")) + 1)); return path.toUri().getPath().substring((ind + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5959/buggy-version/src.main.java.com.ibm.stocator.fs.cos.COSAPIClient.java", "BodyUseAPI": [], "Fixed commit": "22042e2be77c4b69596e1769dcbbe90127e1df99", "Url": "https://api.github.com/repos/paul-carron/stocator", "Date": "2017-10-16T16:48:09Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mListener) == null) || ((mListener.getFlight()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8959/buggy-version/airmapsdk.src.main.java.com.airmap.airmapsdk.UI.Fragments.FlightDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "5358aef03fb4be4260e78f09100a0ac60ce659e0", "Url": "https://api.github.com/repos/airmap/AirMapSDK-Android", "Date": "2017-01-24T06:29:57Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.ByteBuffer.getInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (n1 >= 0) MeshExporter.UNV.writeSingleTriangle(out, count, (n1 + 1), (n2 + 1), (n3 + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2437/buggy-version/amibe.src.org.jcae.mesh.xmldata.Amibe2UNV.java", "BodyUseAPI": ["MeshExporter.UNV.writeSingleTriangle(java.io.PrintStream,int,int,int,int)"], "Fixed commit": "9c46477bb725e55acd86226fdcf4923d1a801371", "Url": "https://api.github.com/repos/jeromerobert/jCAE", "Date": "2011-03-24T18:16:12Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gui.getCommandLineText().equals(\"\")) && (((Animation.getNumberOfCurrentFrame()) - 1) > 0)) cmdAnimator.GameCanvasActions.CommandParser.parseText((\"goto frame \" + ((Animation.getNumberOfCurrentFrame()) - 1))); else if ((gui.getCommandLineText().equals(\"\")) && (((Animation.getNumberOfCurrentFrame()) - 1) == 0)) { cmdAnimator.GameCanvasActions.CommandParser.parseText(\"goto frame 1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7459/buggy-version/src.cmdAnimator.MainCopy.java", "BodyUseAPI": ["cmdAnimator.GameGui.getCommandLineText()", "gui.getCommandLineText().equals(java.lang.String)", "cmdAnimator.GameCanvasActions.FrameAnimator.getNumberOfCurrentFrame()", "cmdAnimator.GameCanvasActions.CommandParser.parseText((\"goto frame \" + ((Animation.getNumberOfCurrentFrame()) - 1)))", "cmdAnimator.GameCanvasActions.FrameAnimator.getNumberOfCurrentFrame()"], "Fixed commit": "ddeb665f1df4b9135ebffdd17dca51eb1096d101", "Url": "https://api.github.com/repos/PATHnorion/CMDAnimator", "Date": "2016-10-23T14:47:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gui.getCommandLineText().equals(\"\")) && (((Animation.getNumberOfCurrentFrame()) - 1) > 0)) cmdAnimator.GameCanvasActions.CommandParser.parseText((\"goto frame \" + ((Animation.getNumberOfCurrentFrame()) - 1))); else if ((gui.getCommandLineText().equals(\"\")) && (((Animation.getNumberOfCurrentFrame()) - 1) == 0)) { cmdAnimator.GameCanvasActions.CommandParser.parseText(\"goto frame 1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7459/buggy-version/src.cmdAnimator.Main.java", "BodyUseAPI": ["cmdAnimator.GameCanvasActions.FrameAnimator.getNumberOfCurrentFrame()", "cmdAnimator.GameCanvasActions.CommandParser.parseText((\"goto frame \" + ((Animation.getNumberOfCurrentFrame()) - 1)))", "cmdAnimator.GameCanvasActions.FrameAnimator.getNumberOfCurrentFrame()", "gui.getCommandLineText().equals(java.lang.String)", "cmdAnimator.GameGui.getCommandLineText()"], "Fixed commit": "ddeb665f1df4b9135ebffdd17dca51eb1096d101", "Url": "https://api.github.com/repos/PATHnorion/CMDAnimator", "Date": "2016-10-23T14:47:10Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSensorManager) != null) { mSensorManager.unregisterListener(mSensorEventListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3164/buggy-version/app.src.main.java.itk.aakb.dk.gg_saarpleje.VideoActivity.java", "BodyUseAPI": [], "Fixed commit": "67ac1a2fe3e9f30bbbe72c24ce0cee60ba7bad3f", "Url": "https://api.github.com/repos/itk-google-glass/saarpleje", "Date": "2016-01-11T13:46:18Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSensorManager) != null) { mSensorManager.unregisterListener(mSensorEventListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3164/buggy-version/app.src.main.java.itk.aakb.dk.gg_saarpleje.VideoActivity.java", "BodyUseAPI": [], "Fixed commit": "67ac1a2fe3e9f30bbbe72c24ce0cee60ba7bad3f", "Url": "https://api.github.com/repos/itk-google-glass/saarpleje", "Date": "2016-01-11T13:46:18Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(arrayListCheck.contains(lista.get(position).getId()))) { arrayListCheck.add(lista.get(position).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1100/buggy-version/app.src.main.java.adapter.ProblemasCheckListAdapter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(lista.get(position).getId())", "lista.get(position).getId()", "java.util.ArrayList<pojo.ProblemasCheckList>.get(int)"], "Fixed commit": "b772e9a7a29257f56b49815231bbc0c5788b66db", "Url": "https://api.github.com/repos/miqueias/smokeproject", "Date": "2017-02-24T09:34:45Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.epimorphics.simpleAPI.core.API.getView(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (view == null) { throw new com.epimorphics.util.EpiException((\"Cannot find view: \" + (viewReference))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2451/buggy-version/sapi-lib.src.main.java.com.epimorphics.simpleAPI.views.ViewMap.java", "BodyUseAPI": [], "Fixed commit": "860c9065d644eecbd7a49b83016f3ce9a1a48f89", "Url": "https://api.github.com/repos/epimorphics/sapi", "Date": "2016-01-19T17:58:33Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (velocity != velocity) return 0.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/695/buggy-version/SignaturePad-Library.src.com.github.gcacace.signaturepad.utils.TimedPoint.java", "BodyUseAPI": [], "Fixed commit": "f89e036fccf93b7dcd4903db5965e83962216c21", "Url": "https://api.github.com/repos/gcacace/android-signaturepad", "Date": "2014-07-16T14:19:15Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p.hasPermission(\"wolvmc.logo.change\"))) { if ((fr.nashoba24.wolvmc.utils.SexLogo.getPlayerLogo(p.getName())) != null) { p.sendMessage(((org.bukkit.ChatColor.RED) + \"You can't change your logo!\")); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2496/buggy-version/fr.nashoba24.wolvmc.utils.SexLogo.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.RED) + \"You can't change your logo!\"))", "fr.nashoba24.wolvmc.utils.SexLogo.getPlayerLogo(p.getName())", "org.bukkit.entity.Player.getName()"], "Fixed commit": "661fcffc4bee90a5042d8a8c6740f1393dd80f1d", "Url": "https://api.github.com/repos/Nashoba24/WolvMC", "Date": "2016-08-12T08:56:53Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.app.ui.entities.UserDocumentVO.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (contentVersionVO != null) { java.lang.String filename = contentVersionVO.getFileName(); captionComponent = new com.constellio.app.ui.framework.components.ContentVersionDisplay(userDocumentVO, contentVersionVO, filename); }else { captionComponent = new com.vaadin.ui.Label(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7441/buggy-version/app.src.com.constellio.app.modules.rm.ui.pages.userDocuments.ListUserDocumentsViewImpl.java", "BodyUseAPI": ["com.constellio.app.ui.entities.ContentVersionVO.getFileName()"], "Fixed commit": "b26d5f7a6f5c6fb65f84827e53256a8ccaa52d83", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2016-06-17T14:34:44Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uids == null) || ((uids.length) <= 0)) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5249/buggy-version/src.main.java.org.fulin.chestnut.PccService.java", "BodyUseAPI": [], "Fixed commit": "75112e41a8a1414c9a593bf41c13f0d8be615e16", "Url": "https://api.github.com/repos/tangfl/chestnut", "Date": "2017-03-04T11:48:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((openingTagToLookFor.compareToIgnoreCase(\"<litleResponse\")) != 0) { retStringBuf.append(\" xmlns=\\\"http://www.litle.com/schema\\\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5930/buggy-version/src.com.litle.sdk.ResponseFileParser.java", "BodyUseAPI": [], "Fixed commit": "cfffd86fe97dfe9d0593710fa91aa009ad04101d", "Url": "https://api.github.com/repos/arch85/litle-sdk-for-java", "Date": "2013-05-09T21:12:28Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (daysInYearToUse) { periodsInOneYear = this.daysInYearType.getValue().longValue(); }else { periodsInOneYear = calculator.calculate(this.repaymentPeriodFrequencyType).longValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2645/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms.java", "BodyUseAPI": [], "Fixed commit": "cbb1071953fb11393994c240e9e5195f4b34f66e", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2015-02-16T12:09:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.mouse.lb_released) { drag = false; java.lang.System.out.println(\"Stop drag\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1701/buggy-version/dungeon-game-core.src.com.dungeon.game.entity.hud.InvGraphic.java", "BodyUseAPI": [], "Fixed commit": "0aabb03dded144c72dcf9f53fd525b765efe5e7e", "Url": "https://api.github.com/repos/nxbt/dungeon-game", "Date": "2016-01-18T23:46:10Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.b2international.snowowl.snomed.datastore.request.SnomedRequests.prepareGetReferenceSet().setComponentId(refsetId).build(getBranchPath().getPath()).executeSync(com.b2international.snowowl.eventbus.IEventBus)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(referenceSet.getReferencedComponentType().equals(SnomedTerminologyComponentConstants.CONCEPT))) { return com.google.common.collect.Sets.newHashSet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7996/buggy-version/snomed.com.b2international.snowowl.snomed.datastore.src.com.b2international.snowowl.snomed.datastore.SnomedClientRefSetBrowser.java", "BodyUseAPI": [], "Fixed commit": "35ce678132820a87adc0ddb5689e0f2e38592f7a", "Url": "https://api.github.com/repos/b2ihealthcare/snow-owl", "Date": "2017-06-07T09:36:15Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.creativemd.opf.little.LittleOpFrame.getTileEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(frame.isTextureLoaded())) frame.loadTexutre();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8898/buggy-version/src.main.java.com.creativemd.opf.little.LittleOpFrame.java", "BodyUseAPI": ["com.creativemd.opf.block.TileEntityPicFrame.loadTexutre()"], "Fixed commit": "0d7a72251ff51940e0c70b18a54102a08c1ee526", "Url": "https://api.github.com/repos/CreativeMD/OnlinePictureFrame", "Date": "2017-02-20T10:11:09Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lineNo == 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7238/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck.java", "BodyUseAPI": [], "Fixed commit": "5eecfd73659aabbf26ac0ea4af1b0e0341070e12", "Url": "https://api.github.com/repos/liscju/checkstyle", "Date": "2015-03-06T11:55:43Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (listOfCurrentFiles != null) { for (java.io.File currentFile : listOfCurrentFiles) { if (currentFile.isDirectory()) { java.util.List<java.io.File> asciidocFiles = walkDirectory(currentFile); includedAsciidocFiles.addAll(asciidocFiles); }else { if (isAcceptedFile(currentFile)) { includedAsciidocFiles.add(currentFile); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4993/buggy-version/src.main.java.org.asciidoctor.DirectoryWalker.java", "BodyUseAPI": [], "Fixed commit": "d5033ff99c4714ec6c86c57500e121c54f8638ad", "Url": "https://api.github.com/repos/mojavelinux/asciidoctor-java-integration", "Date": "2013-05-14T17:43:35Z"},
{"Line": "=>1115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spillWords != 0) asm.generateImmediateSubtract(org.jikesrvm.jni.arm.ALWAYS, org.jikesrvm.jni.arm.SP, org.jikesrvm.jni.arm.SP, spillWords);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/124/buggy-version/rvm.src.org.jikesrvm.jni.arm.JNICompiler.java", "BodyUseAPI": ["org.jikesrvm.compilers.common.assembler.arm.Assembler.generateImmediateSubtract(org.jikesrvm.jni.arm.ALWAYS,org.jikesrvm.jni.arm.SP,org.jikesrvm.jni.arm.SP,int)"], "Fixed commit": "64984681e784e197506da30d7898b7f1cb8065af", "Url": "https://api.github.com/repos/dmitry-brizhinev/JikesRVM", "Date": "2016-09-22T06:49:48Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (totalSpillWords != 0) asm.generateImmediateSubtract(org.jikesrvm.jni.arm.ALWAYS, org.jikesrvm.jni.arm.SP, org.jikesrvm.jni.arm.SP, totalSpillWords);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/124/buggy-version/rvm.src.org.jikesrvm.jni.arm.JNICompiler.java", "BodyUseAPI": ["org.jikesrvm.compilers.common.assembler.arm.Assembler.generateImmediateSubtract(org.jikesrvm.jni.arm.ALWAYS,org.jikesrvm.jni.arm.SP,org.jikesrvm.jni.arm.SP,int)"], "Fixed commit": "64984681e784e197506da30d7898b7f1cb8065af", "Url": "https://api.github.com/repos/dmitry-brizhinev/JikesRVM", "Date": "2016-09-22T06:49:48Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mum.edu.cs.domain.User.getAuthRole(sesson).equals(\"ROLE_PRO\")) { mum.edu.cs.domain.Report orR = ps.getReportByLectureAndStu(lecId, sId); if (orR != null) { orR.setComment(report.getComment()); orR.setGrade(report.getGrade()); report = orR; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/627/buggy-version/StatusReportProject.src.main.java.mum.edu.cs.controller.ReportController.java", "BodyUseAPI": [], "Fixed commit": "9f9f4059624b9f1452c00ab602b52aecc9e44fd0", "Url": "https://api.github.com/repos/michael0521/MUM-WAA", "Date": "2016-03-17T14:51:51Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (projectionName.equalsIgnoreCase(ProjValueParameters.KROVAK)) { return new org.cts.crs.Krovak(ell, map); }else if (projectionName.equalsIgnoreCase(ProjValueParameters.NZMG)) { return new org.cts.crs.NewZealandMapGrid(ell, map); }else if (projectionName.equalsIgnoreCase(ProjValueParameters.GSTMERC)) { return new org.cts.crs.GaussSchreiberTransverseMercator(ell, map); }else if (projectionName.equalsIgnoreCase(ProjValueParameters.LEAC)) { if (map.containsKey(ProjKeyParameters.south)) { map.put(ProjKeyParameters.lat_2, new org.cts.units.Measure((-90), org.cts.units.Unit.DEGREE)); }else { map.put(ProjKeyParameters.lat_2, new org.cts.units.Measure(90, org.cts.units.Unit.DEGREE)); } if (!(map.containsKey(ProjKeyParameters.lat_1))) { map.put(ProjKeyParameters.lat_1, new org.cts.units.Measure(0, org.cts.units.Unit.DEGREE)); } return new org.cts.crs.AlbersEqualArea(ell, map); }else { throw new java.lang.RuntimeException((\"Cannot create the projection \" + projectionName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2223/buggy-version/src.main.java.org.cts.crs.CRSHelper.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(ProjValueParameters.GSTMERC)", "java.lang.String.equalsIgnoreCase(ProjValueParameters.NZMG)", "java.lang.String.equalsIgnoreCase(ProjValueParameters.LEAC)"], "Fixed commit": "34e8e75a02db637361f7b9baa18b5eb35b9bd57c", "Url": "https://api.github.com/repos/jparty/CTS", "Date": "2013-06-19T12:29:50Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bufferedReader.ready()) { logLine = bufferedReader.readLine(); java.lang.String sendingLine = \"\"; if (mConfig.mSendIds) { sendingLine = (mConfig.mDevId) + \": \"; } sendingLine += logLine + (java.lang.System.getProperty(\"line.separator\")); java.net.DatagramPacket packet = new java.net.DatagramPacket(sendingLine.getBytes(), sendingLine.length(), java.net.InetAddress.getByName(mConfig.mDestServer), mConfig.mDestPort); mSocket.send(packet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4162/buggy-version/src.sk.madzik.android.logcatudp.LogcatThread.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()"], "Fixed commit": "8c8cc76a39787dbdd54c71dfecb9a810256bc4f4", "Url": "https://api.github.com/repos/Chemik/logcatudp", "Date": "2011-06-06T11:18:30Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFeedModelArrayList) != null) { mFeedModelArrayList.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7049/buggy-version/app.src.main.java.ink.fragments.Feed.java", "BodyUseAPI": [], "Fixed commit": "fac60a8f6f0cd424097ffd567c711477bbaaf95b", "Url": "https://api.github.com/repos/vladimirarevshatyan/Ink", "Date": "2016-07-04T00:17:27Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDataManager()) != null) return getDataManager().size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2597/buggy-version/library.src.main.java.com.kimeeo.library.listDataView.viewPager.fragmentPager.BaseFragmentViewPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "7d269b4e08cdf543d5c52222a330ef451591b99d", "Url": "https://api.github.com/repos/kimeeo/Kandroid", "Date": "2016-03-22T07:17:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataManager) != null) return dataManager.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2597/buggy-version/library.src.main.java.com.kimeeo.library.listDataView.viewPager.viewPager.BaseViewPagerAdapter.java", "BodyUseAPI": [], "Fixed commit": "7d269b4e08cdf543d5c52222a330ef451591b99d", "Url": "https://api.github.com/repos/kimeeo/Kandroid", "Date": "2016-03-22T07:17:24Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDataManager()) != null) return getDataManager().size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2597/buggy-version/library.src.main.java.com.kimeeo.library.listDataView.recyclerView.BaseRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "7d269b4e08cdf543d5c52222a330ef451591b99d", "Url": "https://api.github.com/repos/kimeeo/Kandroid", "Date": "2016-03-22T07:17:24Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDataManager()) != null) return getDataManager().size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2597/buggy-version/library.src.main.java.com.kimeeo.library.listDataView.listViews.BaseListViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "7d269b4e08cdf543d5c52222a330ef451591b99d", "Url": "https://api.github.com/repos/kimeeo/Kandroid", "Date": "2016-03-22T07:17:24Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format == 0) { commentList = removeInline(commentList, filePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/936/buggy-version/MatchGroup.java", "BodyUseAPI": [], "Fixed commit": "94b02037e18c26d83f4fa72646dba7cb4fd980dd", "Url": "https://api.github.com/repos/e32wong/clocom", "Date": "2016-05-16T22:41:01Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format == 0) { cParser.parseComment(filePath, startLine, endLine, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/936/buggy-version/MatchGroup.java", "BodyUseAPI": [], "Fixed commit": "94b02037e18c26d83f4fa72646dba7cb4fd980dd", "Url": "https://api.github.com/repos/e32wong/clocom", "Date": "2016-05-16T22:41:01Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPlaceSet()) { showAppropriateHomeFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1175/buggy-version/app.src.main.java.org.actionpath.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d07e9a97f6531e8dc8963b21cfc6fd75aa177cd0", "Url": "https://api.github.com/repos/mitmedialab/Action-Path-Client", "Date": "2015-11-12T03:53:28Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.equals(\"CANCEL\")) { state = vtag.vorhangkontrolle.Controller.State.STANDBY; javafx.application.Platform.runLater(commandView::close); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1498/buggy-version/src.vtag.vorhangkontrolle.Controller.java", "BodyUseAPI": [], "Fixed commit": "d31918844ff1f3d52ec19e9796211e15721175d9", "Url": "https://api.github.com/repos/moritzhoewer/Vorhang_Server", "Date": "2017-03-20T21:00:01Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((token.length()) + (tag.length())) + (tagPrev.length())) + (tagNext.length())) == 0) return results;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6587/buggy-version/src.main.java.de.uni.koeln.spinfo.bkiss.batcave.search.SearchService.java", "BodyUseAPI": [], "Fixed commit": "1660c6f8dbf3fccd22c7020bef9d94d870159034", "Url": "https://api.github.com/repos/bkis/batcave", "Date": "2017-08-24T13:10:30Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elements == null) || (elements.isEmpty())) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1616/buggy-version/src.main.java.jp.ac.osaka_u.ist.sdl.scanalyzer.metrics.ModificationAnalyzeHelper.java", "BodyUseAPI": [], "Fixed commit": "844a31c96f4d8ff86e3f6c4dee33bec84a9bd546", "Url": "https://api.github.com/repos/k-hotta/SCAnalyzer", "Date": "2014-12-10T11:13:41Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["difflib.Chunk<E>.getPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (revisedIndex >= (elements.size())) { elementAt = elements.get(((elements.size()) - 1)); }else { elementAt = elements.get(revisedIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1616/buggy-version/src.main.java.jp.ac.osaka_u.ist.sdl.scanalyzer.metrics.ModificationAnalyzeHelper.java", "BodyUseAPI": ["java.util.List<E>.size()", "java.util.List<E>.get(int)", "java.util.List<E>.get(int)"], "Fixed commit": "844a31c96f4d8ff86e3f6c4dee33bec84a9bd546", "Url": "https://api.github.com/repos/k-hotta/SCAnalyzer", "Date": "2014-12-10T11:13:41Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<wslf.geometry.Point>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (n >= 2) { wslf.geometry.Point start = way.get(0); wslf.geometry.Point finish = way.get((n - 1)); g2d.fill(getPoint(getCoordinateX(start.getX()), getCoordinateY(start.getY()), 7, 7)); g2d.fill(getPoint(getCoordinateX(finish.getX()), getCoordinateY(finish.getY()), 7, 7)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3215/buggy-version/pilot-problem.src.wslf.visualisation.WorldPanel.java", "BodyUseAPI": ["java.util.ArrayList<wslf.geometry.Point>.get(int)"], "Fixed commit": "c0f26f180f8090ec67f7798c7182d691ef37599e", "Url": "https://api.github.com/repos/WslF/2dWay", "Date": "2016-05-18T05:03:03Z"},
{"Line": "=>1171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (params != null) { isFromAddResourcePresenter = params.containsKey(\"from\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8154/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.list.ShelfListView.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.containsKey(java.lang.String)"], "Fixed commit": "b91927f58c951b5e19ca70aee917f180717ca48b", "Url": "https://api.github.com/repos/VinRudramurthy/Gooru-Web", "Date": "2014-07-27T09:13:20Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Game.player().getInventory().find(\"camera\").getInterestingPhoto()) { Io.out(\"You didn't manage to take anything with you save some pretty interesting photos that should prove useful when you return to your employers.\"); Game.end.gameOver(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6571/buggy-version/zDemo.EndExit.java", "BodyUseAPI": [], "Fixed commit": "df52d2cdc064ffcd86e79b466db7104e0b761daf", "Url": "https://api.github.com/repos/Wierdoom/Mislead", "Date": "2014-04-12T01:37:55Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Game.player().getInventory().has(\"camera\")) { if ((Game.player().getInventory().has(\"cylinder\")) && (Game.player().getInventory().find(\"camera\").getInterestingPhoto())) { Io.out(\"You not only managed to get some interesting photos, but also escaped with an ancient artifact. This should be more than enough evidence for your employers.\"); Game.end.gameOver(true); }else if (Game.player().getInventory().find(\"camera\").getInterestingPhoto()) { Io.out(\"You didn't manage to take anything with you save some pretty interesting photos that should prove useful when you return to your employers.\"); Game.end.gameOver(true); } }else if (Game.player().getInventory().has(\"cylinder\")) { Io.out(\"You managed to escape with an amazing artifact from the complex. Snapping some more interesting photos would have been nice, but this cylinder should definitely be enough.\"); Game.end.gameOver(true); }else { Io.out(\"You got out but didn't manage to find anything. Oh well, at least you're alive.\"); Game.end.gameOver(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6571/buggy-version/zDemo.EndExit.java", "BodyUseAPI": [], "Fixed commit": "df52d2cdc064ffcd86e79b466db7104e0b761daf", "Url": "https://api.github.com/repos/Wierdoom/Mislead", "Date": "2014-04-12T01:37:55Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["magic.utility.MagicFileSystem.getDataPath().getParent().getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) { return magic.utility.MagicFileSystem.getDataPath().getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5274/buggy-version/src.magic.ui.dialog.ImportDialog.java", "BodyUseAPI": [], "Fixed commit": "0c1436e4a926cb58e693df0fd76f71cebae12c2c", "Url": "https://api.github.com/repos/magarena/magarena", "Date": "2015-07-09T00:36:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.content.replaceAll(\"\\\\s\", \"\").length()) == 0) { this.hasContent = false; }else { this.hasContent = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4328/buggy-version/src.main.java.io.qntfy.nifi.util.StreamingJSONAppender.java", "BodyUseAPI": [], "Fixed commit": "5c7db58a9ce6dc863bb2f4a826395dd9c48a183c", "Url": "https://api.github.com/repos/qntfy/nifi-redis", "Date": "2016-02-19T16:51:36Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getProperty(io.qntfy.nifi.processors.GetRedisEnrichment.ENRICHMENTS).asLong()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (requiredEnrichments == 0) { logger.info(\"Transferred {} to 'success'\", new java.lang.Object[]{ flowFile }); session.transfer(flowFile, io.qntfy.nifi.processors.GetRedisEnrichment.REL_SUCCESS); }else if ((jedis.hlen(flowFileKey)) != requiredEnrichments) { java.lang.String attemptsStr = flowFile.getAttribute(attemptsAttribute); java.lang.Integer attempts = (attemptsStr == null) ? 0 : java.lang.Integer.valueOf(attemptsStr); attempts += 1; flowFile = session.putAttribute(flowFile, attemptsAttribute, java.lang.String.valueOf(attempts)); flowFile = session.penalize(flowFile); logger.info(\"Transferred {} to 'retry', attempt {}\", new java.lang.Object[]{ uuid, attempts }); session.getProvenanceReporter().modifyAttributes(flowFile, \"FlowFile modified with attempt attribute\"); session.transfer(flowFile, io.qntfy.nifi.processors.GetRedisEnrichment.REL_RETRY); }else { java.util.Map<java.lang.String, java.lang.String> enrichments = jedis.hgetAll(flowFileKey); flowFile = ffe.enrich(session, flowFile, enrichments); logger.info(\"Transferred {} to 'success'\", new java.lang.Object[]{ flowFile }); session.transfer(flowFile, io.qntfy.nifi.processors.GetRedisEnrichment.REL_SUCCESS); jedis.del(flowFileKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4328/buggy-version/src.main.java.io.qntfy.nifi.processors.GetRedisEnrichment.java", "BodyUseAPI": [], "Fixed commit": "5c7db58a9ce6dc863bb2f4a826395dd9c48a183c", "Url": "https://api.github.com/repos/qntfy/nifi-redis", "Date": "2016-02-19T16:51:36Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t instanceof java.lang.UnsatisfiedLinkError) && (t.getMessage().contains(\"splashscreen\"))) { java.lang.System.err.println(\"ERROR: Your version of java does not support a GUI\"); java.lang.System.err.println(((\" Please, install in non-headless version of \" + (net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.JAVA)) + \" (or later) to run jEveAssets\")); java.lang.System.out.println(\"ERROR: Your version of java does not support a GUI\"); java.lang.System.out.println(((\" Please, install in non-headless version of \" + (net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.JAVA)) + \" (or later) to run jEveAssets\")); try { javax.swing.JOptionPane.showMessageDialog(null, ((\"Your version of java does not support a GUI\\r\\nPlease, install in non-headless version of \" + (net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.JAVA)) + \" (or later) to run jEveAssets\"), \"Critical Error\", javax.swing.JOptionPane.ERROR_MESSAGE); } catch (java.lang.Throwable ex) { } }else { if (net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.isJavaBug(t)) { javax.swing.JOptionPane.showMessageDialog(null, (\"You have encountered a bug that is most likely a java bug.\\r\\n\" + (((((\"Updating to the latest version of java may fix this problem.\\r\\n\" + \"It\\'s still very helpful to send the the bug report.\\r\\n\") + \"\\r\\n\") + \"Press OK to continue\\r\\n\") + \"\\r\\n\") + \"\\r\\n\")), \"Critical Error\", javax.swing.JOptionPane.ERROR_MESSAGE); } int value = javax.swing.JOptionPane.showConfirmDialog(null, (\"Send bug report?\\r\\n\" + ((((((((\"\\r\\n\" + \"Data send and saved:\\r\\n\") + \"-OS (name and version)\\r\\n\") + \"-Java (vendor and version)\\r\\n\") + \"-Program (name and version)\\r\\n\") + \"-Date (current)\\r\\n\") + \"-Java stack trace (bug)\\r\\n\") + \"\\r\\n\") + \"\\r\\n\")), \"Critical Error\", javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.ERROR_MESSAGE); if (value == (javax.swing.JOptionPane.OK_OPTION)) { java.lang.String result = send(t); javax.swing.JOptionPane.showMessageDialog(null, result, \"Bug Report\", javax.swing.JOptionPane.PLAIN_MESSAGE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8038/buggy-version/src.main.java.net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.java", "BodyUseAPI": ["net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.isJavaBug(java.lang.Throwable)", "net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.send(java.lang.Throwable)"], "Fixed commit": "6be99267e52146f792acf0004257a5a86e82cc12", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-20T20:00:58Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.lody.virtual.client.NativeEngine.sFlag) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5631/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.NativeEngine.java", "BodyUseAPI": [], "Fixed commit": "4d998034070728c4e7e0de8039b5dfb917acccff", "Url": "https://api.github.com/repos/dstmath/VirtualApp", "Date": "2017-07-06T10:56:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (values != null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6343/buggy-version/src.com.emergentideas.webhandle.sources.HttpBodyValueSource.java", "BodyUseAPI": [], "Fixed commit": "d137df32015079a4222906ff3cd29e1ad2dc9243", "Url": "https://api.github.com/repos/EmergentIdeas/webhandle", "Date": "2013-10-08T20:15:19Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (values == null) { values = request.getParameterValues((name + \"[]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6343/buggy-version/src.com.emergentideas.webhandle.sources.HttpBodyValueSource.java", "BodyUseAPI": [], "Fixed commit": "d137df32015079a4222906ff3cd29e1ad2dc9243", "Url": "https://api.github.com/repos/EmergentIdeas/webhandle", "Date": "2013-10-08T20:15:19Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (match) { return method; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2787/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.timerservice.mk2.CalendarTimer.java", "BodyUseAPI": [], "Fixed commit": "77807f20fe0a38e6b867210ebf1b305edc14cf6a", "Url": "https://api.github.com/repos/ochaloup/wildfly", "Date": "2011-10-26T03:48:20Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curNode.getName().equals(\"X04512.1/2563-2632\")) { int takearest = 3243; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2423/buggy-version/src.SankoffwithStructure2.java", "BodyUseAPI": [], "Fixed commit": "5882ecbbf69cd9534e028d23c8f0681215e327cc", "Url": "https://api.github.com/repos/gduffley/CleanedUpProject", "Date": "2014-05-23T01:50:12Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRestaurantList) != null) { outState.putParcelableArrayList(com.huhx0015.doordashchallenge.view.fragments.RestaurantListFragment.INSTANCE_RESTAURANT_LIST, new java.util.ArrayList(mRestaurantList)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6188/buggy-version/app.src.main.java.com.huhx0015.doordashchallenge.view.fragments.RestaurantListFragment.java", "BodyUseAPI": [], "Fixed commit": "2f7c894e5a78e0d4d06d246fa2662f6459c685df", "Url": "https://api.github.com/repos/huhx0015/DashNearby", "Date": "2017-06-06T08:53:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vector.length) != (matrix.length)) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2246/buggy-version/src.main.java.us.martink.stepbystep.ui.model.Matrix.java", "BodyUseAPI": [], "Fixed commit": "671c63fb99d5e2ff3cef4cd15aa1cf8a4b9e71a8", "Url": "https://api.github.com/repos/s33kers/CodingTheory", "Date": "2017-11-25T10:28:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vector.length) != (matrix[0].length)) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2246/buggy-version/src.main.java.us.martink.stepbystep.ui.model.Matrix.java", "BodyUseAPI": [], "Fixed commit": "671c63fb99d5e2ff3cef4cd15aa1cf8a4b9e71a8", "Url": "https://api.github.com/repos/s33kers/CodingTheory", "Date": "2017-11-25T10:28:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dir.list().length) == 0) { removeFiles(dir.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6165/buggy-version/src.main.java.com.tzg.plugin.module.goal.ModuleRemove.java", "BodyUseAPI": ["com.tzg.plugin.module.goal.ModuleRemove.removeFiles(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "075baf912c561956b0a64bc38af96f899be507b8", "Url": "https://api.github.com/repos/1494445739/tzg-maven-plugin", "Date": "2017-06-22T04:15:19Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (handler.isIconEnable()) { handler.createNewIcons(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6713/buggy-version/src.com.konifar.material_icon_generator.MaterialDesignIconGenerateDialog.java", "BodyUseAPI": ["com.konifar.material_icon_generator.MaterialDesignIconGenerateDialog.IconHandler.createNewIcons()"], "Fixed commit": "e3cecbb9b08512805f071cf28b3551607a28f87a", "Url": "https://api.github.com/repos/cat9/android-material-design-icon-generator-plugin", "Date": "2016-02-19T03:56:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["zmaster587.advancedRocketry.satellite.SatelliteData.dataCreated(net.minecraft.world.World)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dataCreated > 0) { data.addData(dataCreated(world), data.getDataType(), true); lastActionTime = world.getTotalWorldTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/1393/buggy-version/src.main.java.zmaster587.advancedRocketry.satellite.SatelliteData.java", "BodyUseAPI": [], "Fixed commit": "ac7b94ecc353ae4722f3b80a6eac123e54626bd4", "Url": "https://api.github.com/repos/zmaster587/AdvancedRocketry", "Date": "2017-01-10T16:39:57Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.SearchContext.getStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (start == (com.liferay.portal.kernel.dao.orm.QueryUtil.ALL_POS)) { start = 0; }else if (start < 0) { throw new java.lang.IllegalArgumentException((\"Invalid start \" + start)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4861/buggy-version/portal-search-elasticsearch.src.main.java.com.liferay.portal.search.elasticsearch.internal.ElasticsearchIndexSearcher.java", "BodyUseAPI": [], "Fixed commit": "a164baa9b246b6e302c43ace01ba735f963bc4d9", "Url": "https://api.github.com/repos/liferay/com-liferay-portal-search", "Date": "2017-04-26T19:07:19Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mLocationClient.isConnected()) mLocationClient.removeLocationUpdates(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2418/buggy-version/Android.src.org.droidplanner.android.gcs.FollowMe.java", "BodyUseAPI": ["com.google.android.gms.location.LocationClient.removeLocationUpdates(org.droidplanner.android.gcs.FollowMe)"], "Fixed commit": "06e9ec04cdfd9f57dae5ce242e879181384fe46f", "Url": "https://api.github.com/repos/arthurbenemann/droidplanner", "Date": "2014-07-10T00:38:23Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sequenceiq.ambari.client.AmbariClient.recommendAssignments(context.getFocusValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(assignments.isEmpty())) { hostGroups = assignments; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/8401/buggy-version/src.main.java.com.sequenceiq.ambari.shell.commands.ClusterCommands.java", "BodyUseAPI": [], "Fixed commit": "5c07d0fdfda8e9093f7662e53defe8019fb01f1b", "Url": "https://api.github.com/repos/sequenceiq/ambari-shell", "Date": "2014-05-30T09:03:45Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileIn.getAbsolutePath().contains(\"android_asset\")) { java.lang.String filename = fileIn.getAbsolutePath().replace(\"/android_asset/\", \"\"); try { in = context.getAssets().open(filename); } catch (java.io.IOException e) { throw new java.lang.RuntimeException(e); } }else { in = new java.io.FileInputStream(fileIn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/658/buggy-version/src.android.FileOpener.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "2500dcb781167fa4b5729a2966d89249354d7ab8", "Url": "https://api.github.com/repos/Oreades/cordova-plugin-fileopener", "Date": "2016-09-28T12:33:31Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(MCDir.exists())) { MCDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6139/buggy-version/src.main.java.com.skcraft.launcher.Instance.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "15d023ba81229cb1e416cc5af95e2de6c4059d55", "Url": "https://api.github.com/repos/Mrbrutal/launcher", "Date": "2014-07-28T20:36:05Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.counters) != null) { for (com.mkl.eu.client.service.vo.board.Counter counter : counters) { counter.setOwner(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6406/buggy-version/client.eu-client-service.src.main.java.com.mkl.eu.client.service.vo.board.Stack.java", "BodyUseAPI": [], "Fixed commit": "8c9f05b7ecca5ec7a631af21769df8a1ea82df1b", "Url": "https://api.github.com/repos/FogiaFr/eu", "Date": "2015-04-20T18:59:12Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(se.miun.dt142g.DataSource.getRequest(\"test\", (\"key=\" + (se.miun.dt142g.DataSource.key))).equals(\"true\"))) { java.lang.String tmpKey = se.miun.dt142g.DataSource.getRequest(\"login\", (\"key=\" + (se.miun.dt142g.DataSource.safeKey))); if ((!(tmpKey.isEmpty())) && (se.miun.dt142g.DataSource.getRequest(\"test\", (\"key=\" + tmpKey)).equals(\"true\"))) { se.miun.dt142g.DataSource.key = tmpKey; return; } throw new se.miun.dt142g.DataSource.WrongKeyException(\"Still not connected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6818/buggy-version/Desktop.src.se.miun.dt142g.DataSource.java", "BodyUseAPI": [], "Fixed commit": "e5be79b5ab7ac5f12696758e905921bef8535730", "Url": "https://api.github.com/repos/jolin1337/Restaurang", "Date": "2014-10-18T19:45:18Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getOperator().getAttribute()) == (ch.fhnw.cbip.compiler.scanner.enums.OperatorAttribute.COR)) addLine(\"IntInv\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4271/buggy-version/src.ch.fhnw.cbip.compiler.generator.CodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "e2dad46c49525785e931784c0f0298393c8a45c2", "Url": "https://api.github.com/repos/pfirpfel/iml-compiler", "Date": "2013-01-02T14:14:02Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gearvrf.GVRComponent.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(mComponents.containsKey(type))) { mComponents.put(type, component); component.setOwnerObject(this); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/9239/buggy-version/GVRf.Framework.framework.src.main.java.org.gearvrf.GVRSceneObject.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, org.gearvrf.GVRComponent>.put(long,org.gearvrf.GVRComponent)"], "Fixed commit": "260ed1d7985e857830888da55ba7e9d53933de3d", "Url": "https://api.github.com/repos/parthmehta209/GearVRf", "Date": "2016-06-21T00:34:56Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.types.expressions.JetBinaryExpression.getRight()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (right == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/5878/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.types.expressions.ExpressionTypingVisitorForStatements.java", "BodyUseAPI": [], "Fixed commit": "84f32c99ae37279299e4454ed918542cfd6143b2", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2012-04-17T11:00:04Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.siddhi.query.compiler.internal.SiddhiQLBaseVisitorImpl.visit(SiddhiQLParser.Execution_elementContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (executionElement instanceof org.wso2.siddhi.query.api.execution.query.Query) { executionPlan.addQuery(((org.wso2.siddhi.query.api.execution.query.Query) (executionElement))); }else if (executionElement instanceof org.wso2.siddhi.query.api.execution.Subscription) { executionPlan.addSubscription(((org.wso2.siddhi.query.api.execution.Subscription) (executionElement))); }else { throw newSiddhiParserException(ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6417/buggy-version/modules.siddhi-query-compiler.src.main.java.org.wso2.siddhi.query.compiler.internal.SiddhiQLBaseVisitorImpl.java", "BodyUseAPI": [], "Fixed commit": "45c5e69df8e309cdd9c8b7e5581fa35ee4ecc9b9", "Url": "https://api.github.com/repos/ramindu90/siddhi", "Date": "2017-01-18T11:16:45Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == (schedule.Day.WED)) { return \"wednesday\"; }else { return (this.toString().toLowerCase(java.util.Locale.getDefault())) + \"day\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4544/buggy-version/CaseHub.src.schedule.Day.java", "BodyUseAPI": [], "Fixed commit": "66fbf045e39fc49cb346e7e18767f851a18b3885", "Url": "https://api.github.com/repos/polyp/CaseHub", "Date": "2014-03-26T20:14:58Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wandKey == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4800/buggy-version/src.main.java.com.elmakers.mine.bukkit.magic.command.MagicTabExecutor.java", "BodyUseAPI": [], "Fixed commit": "5ac9b3edcbf4f8c9a99003c70bd5e8100b097b9c", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2016-04-05T18:27:11Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((editTextCarmakerPartId) != null) && ((editTextCarmakerPartId.getText()) != null)) { genericPart.setCarmakerPartID(editTextCarmakerPartId.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/459/buggy-version/app.src.main.java.sk.berops.android.fueller.gui.common.ActivityGenericPartAdd.java", "BodyUseAPI": ["sk.berops.android.fueller.dataModel.maintenance.GenericPart.setCarmakerPartID(editTextCarmakerPartId.getText().toString())", "android.widget.EditText.getText()", "editTextCarmakerPartId.getText().toString()"], "Fixed commit": "317664a820322271776a5e4e09f479c43457f99a", "Url": "https://api.github.com/repos/gazoo4/vehiculum", "Date": "2016-10-03T17:53:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editTextQuantity.getText()) == null) { genericPart.setQuantity(1); }else { genericPart.setQuantity(sk.berops.android.fueller.gui.common.GuiUtils.extractInteger(editTextQuantity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/459/buggy-version/app.src.main.java.sk.berops.android.fueller.gui.common.ActivityGenericPartAdd.java", "BodyUseAPI": ["sk.berops.android.fueller.gui.common.GuiUtils.extractInteger(android.widget.EditText)", "sk.berops.android.fueller.dataModel.maintenance.GenericPart.setQuantity(sk.berops.android.fueller.gui.common.GuiUtils.extractInteger(editTextQuantity))"], "Fixed commit": "317664a820322271776a5e4e09f479c43457f99a", "Url": "https://api.github.com/repos/gazoo4/vehiculum", "Date": "2016-10-03T17:53:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editTextBrand.getText()) != null) { genericPart.setBrand(editTextBrand.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/459/buggy-version/app.src.main.java.sk.berops.android.fueller.gui.common.ActivityGenericPartAdd.java", "BodyUseAPI": ["editTextBrand.getText().toString()", "sk.berops.android.fueller.dataModel.maintenance.GenericPart.setBrand(editTextBrand.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "317664a820322271776a5e4e09f479c43457f99a", "Url": "https://api.github.com/repos/gazoo4/vehiculum", "Date": "2016-10-03T17:53:32Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((editTextProducerPartId) != null) && ((editTextProducerPartId.getText()) != null)) { genericPart.setProducerPartID(editTextProducerPartId.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/459/buggy-version/app.src.main.java.sk.berops.android.fueller.gui.common.ActivityGenericPartAdd.java", "BodyUseAPI": ["sk.berops.android.fueller.dataModel.maintenance.GenericPart.setProducerPartID(editTextProducerPartId.getText().toString())", "editTextProducerPartId.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "317664a820322271776a5e4e09f479c43457f99a", "Url": "https://api.github.com/repos/gazoo4/vehiculum", "Date": "2016-10-03T17:53:32Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.roots.CompilerModuleExtension.getInstance(java.lang.Module)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cme == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7126/buggy-version/src.main.java.org.sylfra.idea.plugins.remotesynchronizer.utils.ConfigPathsManager.java", "BodyUseAPI": [], "Fixed commit": "cc9c1da9c5901c06841da7477951aaf64133e064", "Url": "https://api.github.com/repos/syllant/idea-plugin-remotesynchronizer", "Date": "2011-11-25T10:49:29Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.paulvarry.intra42.adapters.ListAdapterScaleTeams.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.feedback) == null) { holder.linearLayoutFeedback.setVisibility(View.GONE); }else { holder.linearLayoutFeedback.setVisibility(View.VISIBLE); holder.textViewFeedback.setText(item.feedback); holder.textViewFeedbackStars.setText(item.feedback_rating); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/4385/buggy-version/app.src.main.java.com.paulvarry.intra42.adapters.ListAdapterScaleTeams.java", "BodyUseAPI": ["android.widget.TextView.setText(item.feedback)", "android.widget.TextView.setText(item.feedback_rating)"], "Fixed commit": "246f1f7de086c1a85683354ef73575d73590e670", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-05-11T16:31:31Z"},
{"Line": "=>2117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (need_to_clear_bitmap != 0) arcadeflex.video.osd_clearbitmap(arcadeflex.video.scrbitmap);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6408/buggy-version/emulator.src.arcadeflex.video.java", "BodyUseAPI": [], "Fixed commit": "d8ced882a1ae1046dc19511971ef84449155162b", "Url": "https://api.github.com/repos/georgemoralis/arcadeflex036", "Date": "2013-07-01T14:11:57Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model) != null) model.push(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6857/buggy-version/app.src.main.java.com.wizzer.mle.parts.actors.MleModelActor.java", "BodyUseAPI": [], "Fixed commit": "19bb502e9920ee1497596e4c965f27725d68731a", "Url": "https://api.github.com/repos/magic-lantern-android-studio/parts-actors", "Date": "2016-09-02T18:27:42Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position) != null) position.push(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6857/buggy-version/app.src.main.java.com.wizzer.mle.parts.actors.MleModelActor.java", "BodyUseAPI": [], "Fixed commit": "19bb502e9920ee1497596e4c965f27725d68731a", "Url": "https://api.github.com/repos/magic-lantern-android-studio/parts-actors", "Date": "2016-09-02T18:27:42Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orientation) != null) orientation.push(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6857/buggy-version/app.src.main.java.com.wizzer.mle.parts.actors.MleModelActor.java", "BodyUseAPI": [], "Fixed commit": "19bb502e9920ee1497596e4c965f27725d68731a", "Url": "https://api.github.com/repos/magic-lantern-android-studio/parts-actors", "Date": "2016-09-02T18:27:42Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scale) != null) scale.push(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6857/buggy-version/app.src.main.java.com.wizzer.mle.parts.actors.MleModelActor.java", "BodyUseAPI": [], "Fixed commit": "19bb502e9920ee1497596e4c965f27725d68731a", "Url": "https://api.github.com/repos/magic-lantern-android-studio/parts-actors", "Date": "2016-09-02T18:27:42Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((texture) != null) texture.push(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/6857/buggy-version/app.src.main.java.com.wizzer.mle.parts.actors.MleModelActor.java", "BodyUseAPI": [], "Fixed commit": "19bb502e9920ee1497596e4c965f27725d68731a", "Url": "https://api.github.com/repos/magic-lantern-android-studio/parts-actors", "Date": "2016-09-02T18:27:42Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((code.dir) == (OpDir.UNIFORM)) { environment.push(code.type); environment.push(code.type); }else if ((code.dir) == (OpDir.LEFT)) { environment.push(code.type); environment.push(code.type.element()); }else { environment.push(code.type.element()); environment.push(code.type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/975/buggy-version/src.wyil.transforms.BackPropagation.java", "BodyUseAPI": ["wyil.transforms.BackPropagation.Env.push(code.type.element())", "wyil.transforms.BackPropagation.Env.push(code.type)", "code.type.element()", "wyil.transforms.BackPropagation.Env.push(code.type.element())", "wyil.transforms.BackPropagation.Env.push(code.type)", "code.type.element()", "wyil.transforms.BackPropagation.Env.push(code.type)", "wyil.transforms.BackPropagation.Env.push(code.type)"], "Fixed commit": "22d96c5c87e0ebbcaa4297aee484a5fa5e47cf4b", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-14T07:25:48Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((code.dir) == (OpDir.UNIFORM)) { environment.push(code.type); environment.push(code.type); }else if ((code.dir) == (OpDir.LEFT)) { environment.push(code.type); environment.push(code.type.element()); }else { environment.push(code.type.element()); environment.push(code.type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/975/buggy-version/src.wyil.transforms.BackPropagation.java", "BodyUseAPI": ["wyil.transforms.BackPropagation.Env.push(code.type)", "wyil.transforms.BackPropagation.Env.push(code.type)", "wyil.transforms.BackPropagation.Env.push(code.type)", "wyil.transforms.BackPropagation.Env.push(code.type.element())", "code.type.element()", "code.type.element()", "wyil.transforms.BackPropagation.Env.push(code.type.element())", "wyil.transforms.BackPropagation.Env.push(code.type)"], "Fixed commit": "22d96c5c87e0ebbcaa4297aee484a5fa5e47cf4b", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-14T07:25:48Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) == null) user = authenticator.authenticateFromDatabase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/509/buggy-version/src.com.rushdevo.twittaddict.Twittaddict.java", "BodyUseAPI": [], "Fixed commit": "a571633192ca56911d983ddee954dc8ec61d880a", "Url": "https://api.github.com/repos/diminish7/twittaddict_android", "Date": "2013-08-02T18:35:58Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m) > 0) { length = U[0].length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3908/buggy-version/interpreter.core.src.main.java.Jama.SingularValueDecomposition.java", "BodyUseAPI": [], "Fixed commit": "7e20335c144980e46691353c8ef93f7204319344", "Url": "https://api.github.com/repos/herrmanntom/setlX", "Date": "2014-12-21T22:28:47Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(data.get(2).trim().equals(\"\"))) { try { stream.setDefaultTarget(net.praqma.clearcase.ucm.entities.UCMEntity.getStream(data.get(2))); } catch (java.lang.Exception e) { logger.debug(\"The Stream did not have a default target.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7591/buggy-version/src.main.java.net.praqma.clearcase.ucm.persistence.UCMStrategyCleartool.java", "BodyUseAPI": ["net.praqma.clearcase.ucm.entities.Stream.setDefaultTarget(net.praqma.clearcase.ucm.entities.UCMEntity.getStream(data.get(2)))", "net.praqma.clearcase.ucm.entities.UCMEntity.getStream(java.lang.String)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "f475043ac3e6f6483a59c152ce89883f6d596d77", "Url": "https://api.github.com/repos/Praqma/cool", "Date": "2011-11-01T11:44:00Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tail) == null) { this.tail = node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3902/buggy-version/src.main.java.ml.shifu.shifu.core.binning.EqualPopulationBinning.java", "BodyUseAPI": [], "Fixed commit": "559f2255e92f880867e6d6bcf6e70718ee9a40d8", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2014-11-20T08:14:31Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.header) != null) { this.header.setPrev(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/3902/buggy-version/src.main.java.ml.shifu.shifu.core.binning.EqualPopulationBinning.java", "BodyUseAPI": [], "Fixed commit": "559f2255e92f880867e6d6bcf6e70718ee9a40d8", "Url": "https://api.github.com/repos/ShifuML/shifu", "Date": "2014-11-20T08:14:31Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.getDeathMessage().toLowerCase().contains(\"zombie\")) { if (plugin.getConfig().getBoolean(\"messages.deaths.monsters\")) sendMessage(\"monsters.zombie\", player); event.setDeathMessage(null); }else if (event.getDeathMessage().toLowerCase().contains(\"skeleton\")) { if (plugin.getConfig().getBoolean(\"messages.deaths.monsters\")) sendMessage(\"monsters.skeleton\", player); event.setDeathMessage(null); }else if (event.getDeathMessage().toLowerCase().contains(\"cave spider\")) { if (plugin.getConfig().getBoolean(\"messages.deaths.monsters\")) sendMessage(\"monsters.cavespider\", player); event.setDeathMessage(null); }else if (event.getDeathMessage().toLowerCase().contains(\"spider\")) { if (plugin.getConfig().getBoolean(\"messages.deaths.monsters\")) sendMessage(\"monsters.spider\", player); event.setDeathMessage(null); }else if (event.getDeathMessage().toLowerCase().contains(\"silverfish\")) { if (plugin.getConfig().getBoolean(\"messages.deaths.monsters\")) sendMessage(\"monsters.silverfish\", player); event.setDeathMessage(null); }else if (event.getDeathMessage().toLowerCase().contains(\"slime\")) { if (plugin.getConfig().getBoolean(\"messages.deaths.monsters\")) sendMessage(\"monsters.slime\", player); event.setDeathMessage(null); }else if (event.getDeathMessage().toLowerCase().contains(\"creeper\")) { if (plugin.getConfig().getBoolean(\"messages.deaths.monsters\")) sendMessage(\"monsters.creeper\", player); event.setDeathMessage(null); }else if (event.getDeathMessage().toLowerCase().contains(\"enderman\")) { if (plugin.getConfig().getBoolean(\"messages.deaths.monsters\")) sendMessage(\"monsters.enderman\", player); event.setDeathMessage(null); }else if (event.getDeathMessage().toLowerCase().contains(\"ghast\")) { if (plugin.getConfig().getBoolean(\"messages.deaths.monsters\")) sendMessage(\"monsters.ghast\", player); event.setDeathMessage(null); }else if (event.getDeathMessage().toLowerCase().contains(\"blaze\")) { if (plugin.getConfig().getBoolean(\"messages.deaths.monsters\")) sendMessage(\"monsters.blaze\", player); event.setDeathMessage(null); }else if (event.getDeathMessage().toLowerCase().contains(\"ender dragon\")) { if (plugin.getConfig().getBoolean(\"messages.deaths.monsters\")) sendMessage(\"monsters.enderdragon\", player); event.setDeathMessage(null); }else if (deathCause == (org.bukkit.event.entity.EntityDamageEvent.DamageCause.DROWNING)) { if (plugin.getConfig().getBoolean(\"messages.deaths.natural\")) sendMessage(\"deaths.drowning\", player); event.setDeathMessage(null); }else if (deathCause == (org.bukkit.event.entity.EntityDamageEvent.DamageCause.SUFFOCATION)) { if (plugin.getConfig().getBoolean(\"messages.deaths.natural\")) sendMessage(\"deaths.suffocation\", player); event.setDeathMessage(null); }else if (deathCause == (org.bukkit.event.entity.EntityDamageEvent.DamageCause.SUICIDE)) { if (plugin.getConfig().getBoolean(\"messages.deaths.natural\")) sendMessage(\"deaths.suicide\", player); event.setDeathMessage(null); }else if (deathCause == (org.bukkit.event.entity.EntityDamageEvent.DamageCause.FALL)) { if (plugin.getConfig().getBoolean(\"messages.deaths.natural\")) sendMessage(\"deaths.fall\", player); event.setDeathMessage(null); }else if (deathCause == (org.bukkit.event.entity.EntityDamageEvent.DamageCause.VOID)) { if (plugin.getConfig().getBoolean(\"messages.deaths.natural\")) sendMessage(\"deaths.void\", player); event.setDeathMessage(null); }else if (deathCause == (org.bukkit.event.entity.EntityDamageEvent.DamageCause.LAVA)) { if (plugin.getConfig().getBoolean(\"messages.deaths.natural\")) sendMessage(\"deaths.lava\", player); event.setDeathMessage(null); }else if (deathCause == (org.bukkit.event.entity.EntityDamageEvent.DamageCause.FIRE)) { if (plugin.getConfig().getBoolean(\"messages.deaths.natural\")) sendMessage(\"deaths.fire\", player); event.setDeathMessage(null); }else if (deathCause == (org.bukkit.event.entity.EntityDamageEvent.DamageCause.CONTACT)) { if (plugin.getConfig().getBoolean(\"messages.deaths.natural\")) sendMessage(\"deaths.cactus\", player); event.setDeathMessage(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7051/buggy-version/src.me.plugin.multilanguage.listeners.LanguageListener.java", "BodyUseAPI": ["event.getDeathMessage().toLowerCase().contains(java.lang.String)", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "org.bukkit.event.entity.PlayerDeathEvent.getDeathMessage()", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "org.bukkit.event.entity.PlayerDeathEvent.getDeathMessage()", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "org.bukkit.event.entity.PlayerDeathEvent.getDeathMessage()", "org.bukkit.event.entity.PlayerDeathEvent.getDeathMessage()", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "org.bukkit.event.entity.PlayerDeathEvent.getDeathMessage()", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "event.getDeathMessage().toLowerCase()", "event.getDeathMessage().toLowerCase()", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "org.bukkit.event.entity.PlayerDeathEvent.getDeathMessage()", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "event.getDeathMessage().toLowerCase().contains(java.lang.String)", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "event.getDeathMessage().toLowerCase().contains(java.lang.String)", "event.getDeathMessage().toLowerCase().contains(java.lang.String)", "event.getDeathMessage().toLowerCase().contains(java.lang.String)", "event.getDeathMessage().toLowerCase()", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "event.getDeathMessage().toLowerCase().contains(java.lang.String)", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "event.getDeathMessage().toLowerCase().contains(java.lang.String)", "event.getDeathMessage().toLowerCase().contains(java.lang.String)", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "event.getDeathMessage().toLowerCase()", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "event.getDeathMessage().toLowerCase()", "event.getDeathMessage().toLowerCase()", "org.bukkit.event.entity.PlayerDeathEvent.getDeathMessage()", "event.getDeathMessage().toLowerCase()", "org.bukkit.event.entity.PlayerDeathEvent.getDeathMessage()", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "event.getDeathMessage().toLowerCase()", "event.getDeathMessage().toLowerCase().contains(java.lang.String)", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "org.bukkit.event.entity.PlayerDeathEvent.getDeathMessage()", "event.getDeathMessage().toLowerCase()", "org.bukkit.event.entity.PlayerDeathEvent.setDeathMessage(<nulltype>)", "org.bukkit.event.entity.PlayerDeathEvent.getDeathMessage()", "event.getDeathMessage().toLowerCase().contains(java.lang.String)", "event.getDeathMessage().toLowerCase()"], "Fixed commit": "f956bfff2f7495aadf92554d5c4f7fc6a03db6e8", "Url": "https://api.github.com/repos/anerach/MultiLanguage", "Date": "2012-05-17T14:10:42Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value1 == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/2840/buggy-version/yaml.src.main.java.com.opentext.ia.yaml.core.DefaultYamlSequenceComparator.java", "BodyUseAPI": [], "Fixed commit": "75b317d270d87a33cb5268d6efa79b659ea4229f", "Url": "https://api.github.com/repos/Enterprise-Content-Management/infoarchive-sip-sdk", "Date": "2017-10-02T15:34:17Z"},
{"Line": "=>1441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.isPublicationInBasket(pubDetail.getPK())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isPublicationInBasket) { sendSubscriptionsNotification(pubDetail, true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V13/7435/buggy-version/kmelia.kmelia-ejb.src.main.java.com.stratelia.webactiv.kmelia.control.ejb.KmeliaBmEJB.java", "BodyUseAPI": [], "Fixed commit": "9c227a61b487969263b0f75bf2f337294c689aa1", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Components", "Date": "2014-09-10T07:32:39Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t.kind) == (org.roiderh.gcodeviewer.lexer.GcodereaderConstants.EOF)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/544/buggy-version/src.org.roiderh.gcodeviewer.gcodereader.java", "BodyUseAPI": [], "Fixed commit": "02779a26a816e5de627f73e67c2231a5d527ee47", "Url": "https://api.github.com/repos/bertlr/GCodeViewer", "Date": "2016-03-06T12:28:59Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().validateCloudSdk()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (validationResults.contains(CloudSdkValidationResult.CLOUD_SDK_NOT_FOUND)) { throw new com.intellij.openapi.options.ConfigurationException(com.google.cloud.tools.intellij.util.GctBundle.message(\"appengine.cloudsdk.deploymentconfiguration.location.invalid.message\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6890/buggy-version/google-cloud-tools-plugin.src.com.google.cloud.tools.intellij.appengine.cloud.AppEngineDeploymentRunConfigurationEditor.java", "BodyUseAPI": [], "Fixed commit": "a679a02477cb4f3549652b9608a388d6c0a9bba6", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-12-08T17:48:48Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().validateCloudSdk().contains(CloudSdkValidationResult.CLOUD_SDK_NOT_FOUND)) { callback.errorOccurred((((com.google.cloud.tools.intellij.util.GctBundle.message(\"appengine.cloudsdk.location.invalid.message\")) + \" \") + (com.google.cloud.tools.intellij.appengine.sdk.CloudSdkService.getInstance().getSdkHomePath()))); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6890/buggy-version/google-cloud-tools-plugin.src.com.google.cloud.tools.intellij.appengine.cloud.CloudSdkAppEngineHelper.java", "BodyUseAPI": [], "Fixed commit": "a679a02477cb4f3549652b9608a388d6c0a9bba6", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-12-08T17:48:48Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qfox.jestful.core.Encodings.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (remains.isEmpty()) { org.qfox.jestful.core.Encodings expects = accepts; org.qfox.jestful.core.Encodings actuals = availables; throw new org.qfox.jestful.core.exception.NoSuchCodecException(expects, actuals); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3323/buggy-version/jestful-server.src.main.java.org.qfox.jestful.server.wrapper.ResponseEncodeWrapper.java", "BodyUseAPI": [], "Fixed commit": "7d9d8c6a5b672b1f5ef45214fbeba89fe384bc96", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2016-06-01T16:20:22Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qfox.jestful.core.Request.getRequestHeader(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((acceptEncoding == null) || (acceptEncoding.isEmpty())) { return action.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3323/buggy-version/jestful-server.src.main.java.org.qfox.jestful.server.wrapper.ResponseEncodeWrapper.java", "BodyUseAPI": [], "Fixed commit": "7d9d8c6a5b672b1f5ef45214fbeba89fe384bc96", "Url": "https://api.github.com/repos/core-lib/jestful", "Date": "2016-06-01T16:20:22Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.serotonin.modbus4j.BatchResults<org.dsa.iot.dslink.node.Node>.getValue(org.dsa.iot.dslink.node.Node)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof java.lang.Number) { vt = org.dsa.iot.dslink.node.value.ValueType.NUMBER; java.lang.Number num = ((java.lang.Number) (obj)); v = new org.dsa.iot.dslink.node.value.Value((((num.doubleValue()) / scaling) + addscale)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7088/buggy-version/src.main.java.modbus.SlaveNode.java", "BodyUseAPI": [], "Fixed commit": "30ffeac1ec9ba80fc58a4e7f3184c873c98b6e0b", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-modbus", "Date": "2016-05-28T00:17:53Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["klass.features.getNth(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!((a.init) instanceof no_expr)) { a.init.cgen(this); int offset = 12 + (4 * (klass.getAttrIndex(this, a.name))); out.println(((\"\\tsw $a0 \" + offset) + \"($s0)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1733/buggy-version/CGenUtil.java", "BodyUseAPI": ["class_c.getAttrIndex(CGenUtil,a.name)", "a.init.cgen(CGenUtil)"], "Fixed commit": "b0d04e31e6ccb494a1b556790b70492f421be7bf", "Url": "https://api.github.com/repos/ucarion/164-proj5", "Date": "2016-05-04T21:01:16Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((container) != null) { container.deactivate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4142/buggy-version/fr.inria.atlanmod.kyanos.benchmarks.src.fr.inria.atlanmod.kyanos.benchmarks.cdo.EmbeddedCDOServer.java", "BodyUseAPI": [], "Fixed commit": "3e1b1e43e1c749f389babdd76aa2bf2424855387", "Url": "https://api.github.com/repos/abelgomez/kyanos.benchmarks", "Date": "2014-09-24T11:59:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connector) != null) { connector.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4142/buggy-version/fr.inria.atlanmod.kyanos.benchmarks.src.fr.inria.atlanmod.kyanos.benchmarks.cdo.EmbeddedCDOServer.java", "BodyUseAPI": [], "Fixed commit": "3e1b1e43e1c749f389babdd76aa2bf2424855387", "Url": "https://api.github.com/repos/abelgomez/kyanos.benchmarks", "Date": "2014-09-24T11:59:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((from_3 > 0) && (from_min > from_3)) { from_str = \" from\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3924/buggy-version/src.com.web.spring.datatable.TableQuery.java", "BodyUseAPI": [], "Fixed commit": "9ecc28067168a68c4d08d48ed5f6412102ec4cdd", "Url": "https://api.github.com/repos/lwfwind/spring-jquery-datatable", "Date": "2016-12-28T07:11:04Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((from_2 > 0) && (from_min > from_2)) { from_min = from_2; from_str = \"\\nfrom \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3924/buggy-version/src.com.web.spring.datatable.TableQuery.java", "BodyUseAPI": [], "Fixed commit": "9ecc28067168a68c4d08d48ed5f6412102ec4cdd", "Url": "https://api.github.com/repos/lwfwind/spring-jquery-datatable", "Date": "2016-12-28T07:11:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((from_1 > 0) && (from_min > from_1)) { from_min = from_1; from_str = \" from \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3924/buggy-version/src.com.web.spring.datatable.TableQuery.java", "BodyUseAPI": [], "Fixed commit": "9ecc28067168a68c4d08d48ed5f6412102ec4cdd", "Url": "https://api.github.com/repos/lwfwind/spring-jquery-datatable", "Date": "2016-12-28T07:11:04Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentObstacleCheck.isSolid()) { player.setPushState(false); if ((currentObstacleCheck.getDamage()) > 0) { pushPlayer(player.getXDirMove(), player.getYDirMove(), (-20)); } fixSpawnCollision(currentObstacleCheck); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/120/buggy-version/src.Model.PlayerModel.java", "BodyUseAPI": ["Model.Obstacle.getDamage()", "Model.PlayerModel.fixSpawnCollision(Model.Obstacle)"], "Fixed commit": "58e361fa2f9892ae97c01fe513de63fd529e0d63", "Url": "https://api.github.com/repos/Maestro1337/ssha", "Date": "2013-05-25T12:14:15Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.preference.PreferenceManager.getDefaultSharedPreferences(this).contains(\"path_pref\"))) { android.preference.PreferenceManager.getDefaultSharedPreferences(this).edit().putString(\"path_pref\", getResources().getString(R.string.default_path_preferences)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/914/buggy-version/app.src.main.java.com.leaf.clips.presenter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ec08173bb18ac065587c77ef5ca2d93c0ff9a3b9", "Url": "https://api.github.com/repos/LeafSWE/clips", "Date": "2016-06-11T14:35:41Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (output != null) { output.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/207/buggy-version/src.main.java.com.kuhniverse.web.CaptchaController.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "c5d19f7e46d9108e221dfa8a6df87a481b0ff812", "Url": "https://api.github.com/repos/tillkuhn/visualCaptcha-java-rest", "Date": "2015-05-26T15:46:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentEnvironment.size()) == 0) execute(false, PythonRuntime.runtime.generateGlobals().doGet(function), data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4828/buggy-version/src.me.enerccio.sp.interpret.PythonInterpret.java", "BodyUseAPI": [], "Fixed commit": "d577c230a2c7b227ea10f7e3709393b291caf787", "Url": "https://api.github.com/repos/kozec/SimplePython", "Date": "2015-07-22T15:45:35Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == (mCurrentLoadedFragmentPosition)) { mDrawerLayout.closeDrawers(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2125/buggy-version/tsap.src.org.tribler.tsap.NavigationDrawerFragment.java", "BodyUseAPI": [], "Fixed commit": "4a92427eb3c4e91cc84e2176d300549841d3a67a", "Url": "https://api.github.com/repos/wtud/TSAP", "Date": "2014-05-14T14:32:04Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nbttagcompound.hasKey(\"rearYaw\")) { rearYaw = nbttagcompound.getFloat(\"rearYaw\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1146/buggy-version/src.main.java.cam72cam.immersiverailroading.entity.EntityMoveableRollingStock.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getFloat(java.lang.String)"], "Fixed commit": "af0d087c941694cbd2bfc4de720f225c84138cbb", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2017-07-25T02:28:22Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rearYaw) != null) { nbttagcompound.setFloat(\"rearYaw\", rearYaw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1146/buggy-version/src.main.java.cam72cam.immersiverailroading.entity.EntityMoveableRollingStock.java", "BodyUseAPI": [], "Fixed commit": "af0d087c941694cbd2bfc4de720f225c84138cbb", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2017-07-25T02:28:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nbttagcompound.hasKey(\"frontYaw\")) { frontYaw = nbttagcompound.getFloat(\"frontYaw\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1146/buggy-version/src.main.java.cam72cam.immersiverailroading.entity.EntityMoveableRollingStock.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getFloat(java.lang.String)"], "Fixed commit": "af0d087c941694cbd2bfc4de720f225c84138cbb", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2017-07-25T02:28:22Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((frontYaw) != null) { nbttagcompound.setFloat(\"frontYaw\", frontYaw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1146/buggy-version/src.main.java.cam72cam.immersiverailroading.entity.EntityMoveableRollingStock.java", "BodyUseAPI": [], "Fixed commit": "af0d087c941694cbd2bfc4de720f225c84138cbb", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2017-07-25T02:28:22Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((theTank) != null) { this.theTank.writeToNBT(nbttagcompound.getCompoundTag(\"tank\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1146/buggy-version/src.main.java.cam72cam.immersiverailroading.entity.FreightTank.java", "BodyUseAPI": [], "Fixed commit": "af0d087c941694cbd2bfc4de720f225c84138cbb", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2017-07-25T02:28:22Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (free <= (net.grinder.engine.agent.PropertyBuilder.MIN_FREE_MEM_SIZE)) { free = (new org.hyperic.sigar.Sigar().getMem().getActualFree()) - reservedMemory; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2893/buggy-version/ngrinder-core.src.main.java.net.grinder.engine.agent.PropertyBuilder.java", "BodyUseAPI": [], "Fixed commit": "bd3b0ed370e11148c1a3e53702672ad8cb898b7f", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2013-05-31T06:17:19Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getNumberOfTasksDone()) > 0) { return ((long) (((this.getElapsedTime()) * (this.getNumberOfTasksLeft())) / (this.getNumberOfTasksDone()))); }else { return java.lang.Long.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1388/buggy-version/TaskManager.java", "BodyUseAPI": [], "Fixed commit": "63cd07dc0e57b1afd29147923b91e493d8114a01", "Url": "https://api.github.com/repos/felixbade/juliaanimation", "Date": "2014-05-26T18:38:12Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((abortedStatements.size()) > 0) { abortAndRollback(abortedStatements.remove(0)); }else { throw new com.yahoo.ycsb.DBException(\"Failed to abort transaction; no statements found to abort\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4187/buggy-version/jdbc.src.main.java.com.yahoo.ycsb.db.JdbcDBClient.java", "BodyUseAPI": ["com.yahoo.ycsb.db.JdbcDBClient.abortAndRollback(java.sql.Statement)", "java.util.List<java.sql.Statement>.remove(int)"], "Fixed commit": "d86eaaec759c72551a9adfc190e4b44dcb02fcf2", "Url": "https://api.github.com/repos/benjaminbrent/YCSB", "Date": "2014-12-17T23:20:13Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mExceptionResponse) != null) { return edu.hm.cs.fs.common.constant.ErrorCode.getErrorCodeByCode(mExceptionResponse.getErrorCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8542/buggy-version/app.src.main.java.edu.hm.cs.fs.app.database.error.HttpError.java", "BodyUseAPI": [], "Fixed commit": "6bc428c35e6ceaf0ed3ac8dfb4f3a9d264754b0a", "Url": "https://api.github.com/repos/Fachschaft07/fs-android-app", "Date": "2015-09-29T19:07:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.trim().length()) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/778/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "38e16297fa8313f19467bd347a20231bda7cc13c", "Url": "https://api.github.com/repos/UWM-VEX/AutoFramework", "Date": "2017-03-03T20:09:05Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((UserInterface.UIController.commands.size()) == 0) { cmdEntry.setText(\"\"); }else if (UserInterface.UIController.arrowUpTrue()) { UserInterface.UIController.commandIndex -= 1; cmdEntry.setText(UserInterface.UIController.commands.get(UserInterface.UIController.commandIndex)); }else { cmdEntry.setText(UserInterface.UIController.commands.get(UserInterface.UIController.commandIndex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5237/buggy-version/W10-4J.UserInterface.UIController.java", "BodyUseAPI": ["javax.swing.JTextField.setText(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "javax.swing.JTextField.setText(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "910a7998b4e42bfad4278c59165314662f223367", "Url": "https://api.github.com/repos/cs2103jan2016-w10-4j/main", "Date": "2016-03-29T13:23:13Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(filteredNext)) { while ((!(stream.isNil())) && (!(predicate.apply(stream.head())))) { stream = stream.tail(); } filteredNext = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3621/buggy-version/src.main.java.com.noodlesandwich.streams.functions.Filter.java", "BodyUseAPI": [], "Fixed commit": "38ed3afeb4590d8a820bdb8362881bf71f35a1ea", "Url": "https://api.github.com/repos/SamirTalwar/Streams", "Date": "2011-04-15T10:28:08Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (by.tr.totalizator.dao.connectionpool.ConnectionPool.instance)) { synchronized(by.tr.totalizator.dao.connectionpool.ConnectionPool.class) { if (null == (by.tr.totalizator.dao.connectionpool.ConnectionPool.instance)) { by.tr.totalizator.dao.connectionpool.ConnectionPool.instance = new by.tr.totalizator.dao.connectionpool.ConnectionPool(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4434/buggy-version/Totalizator.src.main.java.by.tr.totalizator.dao.connectionpool.ConnectionPool.java", "BodyUseAPI": [], "Fixed commit": "d08510359f3622b2f40d356862d34dec98dafa3b", "Url": "https://api.github.com/repos/MariyaBystrova/Bystrova_Totalizator", "Date": "2017-01-31T08:15:20Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.tanghe.garben.capitalbooze.OrderFragment.totalPrice) > 0.0) { com.tanghe.garben.capitalbooze.OrderFragment.mTotalPrice.setText(java.lang.String.format(java.util.Locale.getDefault(), \"\u20ac%.2f\", com.tanghe.garben.capitalbooze.OrderFragment.totalPrice)); }else { com.tanghe.garben.capitalbooze.OrderFragment.totalPrice = 0.0; com.tanghe.garben.capitalbooze.OrderFragment.mTotalPrice.setText(java.lang.String.format(java.util.Locale.getDefault(), \"\u20ac%.2f\", com.tanghe.garben.capitalbooze.OrderFragment.totalPrice)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3919/buggy-version/app.src.main.java.com.tanghe.garben.capitalbooze.OrderFragment.java", "BodyUseAPI": [], "Fixed commit": "8013f15e6b3ff41a2884eaf7f23e0229fde1d749", "Url": "https://api.github.com/repos/gartangh/CapitalBooze", "Date": "2016-10-01T18:42:15Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.checc.service.CheccUserService.selectByMobile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == userDO) { return ng.bayue.common.CommonResultMessage.failure(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3419/buggy-version/checc-front.src.main.java.com.checc.ao.CheccUserAO.java", "BodyUseAPI": [], "Fixed commit": "22c8bf724162368f30e520fab6406ab326748379", "Url": "https://api.github.com/repos/fengyts/checc", "Date": "2017-12-11T09:33:46Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPaired()) { logger.warn(\"Output will reflect unsorted even if queryname is assumed. This limitation may be removed in the future.\"); header.setSortOrder(SAMFileHeader.SortOrder.unsorted); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/678/buggy-version/src.main.java.org.magicdgs.readtools.engine.RTDataSource.java", "BodyUseAPI": [], "Fixed commit": "67b7f1e648aa45e3664452f818f102b9fd82ad94", "Url": "https://api.github.com/repos/magicDGS/ReadTools", "Date": "2017-01-12T15:28:18Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (linkFromEditor != null) parentsLinkToThis.add(linkFromEditor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1513/buggy-version/intelligent-object-system.src.com.ios.IObject.java", "BodyUseAPI": ["com.ios.LinkList.add(com.ios.Property)"], "Fixed commit": "75240abaddb69ef28c61cf4aea65b8a066f75c50", "Url": "https://api.github.com/repos/etamponi/intelligent-object-system", "Date": "2013-01-18T11:55:45Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.worldObj.isRemote) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5822/buggy-version/src.main.java.net.epoxide.colorfulmobs.items.ItemDataChecker.java", "BodyUseAPI": [], "Fixed commit": "8ef0a305c0d4fd2b8f0da2f4f5732be82c79993a", "Url": "https://api.github.com/repos/Darkhax-Minecraft/Colorful-Mobs", "Date": "2015-03-07T07:02:58Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["GriefPrevention.instance.dataStore.getClaimAt(player.getLocation(),boolean,playerData.lastClaim)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (claim != null) { me.ryanhamshire.GriefPrevention.GriefPrevention.sendMessage(src, org.spongepowered.api.text.Texts.of(TextMode.Instr, ((me.ryanhamshire.GriefPrevention.GriefPrevention.getfriendlyLocationString(claim.getLesserBoundaryCorner())) + (GriefPrevention.instance.dataStore.getMessage(Messages.ContinueBlockMath, java.lang.String.valueOf(claim.getArea())))))); }else { me.ryanhamshire.GriefPrevention.GriefPrevention.sendMessage(src, org.spongepowered.api.text.Texts.of(TextMode.Err, \"No claim in your current location.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4687/buggy-version/src.me.ryanhamshire.GriefPrevention.command.CommandClaim.java", "BodyUseAPI": ["java.lang.String.valueOf(claim.getArea())", "me.ryanhamshire.GriefPrevention.GriefPrevention.getfriendlyLocationString(claim.getLesserBoundaryCorner())", "me.ryanhamshire.GriefPrevention.Claim.getArea()", "me.ryanhamshire.GriefPrevention.Claim.getLesserBoundaryCorner()", "org.spongepowered.api.text.Texts.of(TextMode.Instr,((me.ryanhamshire.GriefPrevention.GriefPrevention.getfriendlyLocationString(claim.getLesserBoundaryCorner())) + (GriefPrevention.instance.dataStore.getMessage(Messages.ContinueBlockMath, java.lang.String.valueOf(claim.getArea())))))", "GriefPrevention.instance.dataStore.getMessage(Messages.ContinueBlockMath,java.lang.String)", "me.ryanhamshire.GriefPrevention.GriefPrevention.sendMessage(org.spongepowered.api.command.CommandSource,org.spongepowered.api.text.Texts.of(TextMode.Instr, ((me.ryanhamshire.GriefPrevention.GriefPrevention.getfriendlyLocationString(claim.getLesserBoundaryCorner())) + (GriefPrevention.instance.dataStore.getMessage(Messages.ContinueBlockMath, java.lang.String.valueOf(claim.getArea()))))))"], "Fixed commit": "8b2460faae5e01cb710b5dc405a2dcf0dd2309e8", "Url": "https://api.github.com/repos/hsyyid/GriefPrevention", "Date": "2015-12-30T03:39:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7845/buggy-version/app.src.main.java.course.labs.fragmentslab.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "42f9ad1e2c07943fadfd3da8b0b5137133d013ab", "Url": "https://api.github.com/repos/eugenewcf/week-03-fragmentsLab", "Date": "2014-10-23T15:13:13Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<com.example.boday_alfaro.food2fork.models.RecipesData>.body()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (model != null) { if ((model.getRecipes()) != null) mRecipesList.addAll(model.getRecipes()); else { showError(R.string.food2fork_request_limit); return; } }else { showError(R.string.error_fetching_data); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/105/buggy-version/app.src.main.java.com.example.boday_alfaro.food2fork.fragments.RecipesListFragment.java", "BodyUseAPI": ["com.example.boday_alfaro.food2fork.models.RecipesData.getRecipes()", "com.example.boday_alfaro.food2fork.models.RecipesData.getRecipes()", "java.util.List<com.example.boday_alfaro.food2fork.models.Recipe>.addAll(model.getRecipes())"], "Fixed commit": "e7425537b6bb652f837544619395d200c5b0e646", "Url": "https://api.github.com/repos/ShlikhutkaBohdan/food2fork", "Date": "2016-01-30T17:51:26Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentCharacter.isPlayerCharacter()) { currentLeader = currentCharacter; leaderStatus = LeaderStatus.HAVE_LEADER; if (com.dbash.models.TurnProcessor.LOG) com.dbash.util.L.log((\"current leader is \" + (currentLeader.creature.name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5406/buggy-version/core.src.com.dbash.models.TurnProcessor.java", "BodyUseAPI": [], "Fixed commit": "ac3490166564128ba6f8088044179e298ac3c772", "Url": "https://api.github.com/repos/stefoid/dungeonbash", "Date": "2015-02-06T12:11:09Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((redditReceiver) != null) getActivity().unregisterReceiver(redditReceiver);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7783/buggy-version/app.src.main.java.com.demorss.fragment.RedditFragment.java", "BodyUseAPI": [], "Fixed commit": "2c61b3383f07e32c22afb0cdb518a1706cf74688", "Url": "https://api.github.com/repos/dayanithi06/demorss", "Date": "2017-07-08T05:42:34Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((features.size) > 0) { topFeatureTable.setFeature(features.first()); topFeatureTable.setVisible(true); }else topFeatureTable.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2016/buggy-version/core.src.com.esbjon.screenItems.FeaturesTable.java", "BodyUseAPI": ["com.badlogic.gdx.utils.Array<com.esbjon.Resc.Feature>.first()", "com.esbjon.screenItems.TopFeatureTable.setFeature(features.first())"], "Fixed commit": "ebb153037c44980cfc2a1f2963ea8fd6f4541b69", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-11-30T02:42:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (p_element != null) { org.w3c.dom.NodeList nodeList = p_element.getChildNodes(); for (int i = 0; i < (nodeList.getLength()); i++) { org.w3c.dom.Node node = nodeList.item(i); if ((node.getNodeType()) == (org.w3c.dom.Node.ELEMENT_NODE)) { elementsList.add(((org.w3c.dom.Element) (node))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8061/buggy-version/src.main.java.com.morcinek.uml.util.ElementUtil.java", "BodyUseAPI": ["org.w3c.dom.Element.getChildNodes()"], "Fixed commit": "83cef5e7da032e45e0812cb161a648cea5660f32", "Url": "https://api.github.com/repos/tmorcinek/class-graph", "Date": "2014-10-28T10:43:52Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.drools.workbench.models.datamodel.oracle.OperatorsOracle.operatorRequiresList(operator)) { populateValueList(buf, type, fieldType, rowDataProvider.getTemplateKeyValue(value)); }else { buf.append(\" \"); constraintValueBuilder.buildLHSFieldValue(buf, type, fieldType, rowDataProvider.getTemplateKeyValue(value)); buf.append(\" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5585/buggy-version/drools-workbench-models.drools-workbench-models-guided-dtable.src.main.java.org.drools.workbench.models.guided.dtable.backend.util.GuidedDTBRDRLPersistence.java", "BodyUseAPI": [], "Fixed commit": "d85d0f51097e3147e872d64e7132717cc38c9ce7", "Url": "https://api.github.com/repos/amitkhanchi/drools", "Date": "2015-03-23T17:21:00Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMinimized) { isMinimized = false; mainFrame.setState(java.awt.Frame.NORMAL); }else { if (arg0 == 1) { if (!(mainFrame.isVisible())) { mainFrame.setVisible(true); }else if (mainFrame.isVisible()) { mainFrame.setVisible(false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1169/buggy-version/src.uiView.UiViewModifier.java", "BodyUseAPI": [], "Fixed commit": "e18096ad785ba121367bc3e4928c8a21436d0c06", "Url": "https://api.github.com/repos/cs2103aug2014-t17-1j/main", "Date": "2014-11-05T14:41:58Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mainFrame.isVisible()) { mainFrame.setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1169/buggy-version/src.uiView.UiViewModifier.java", "BodyUseAPI": ["javax.swing.JFrame.setVisible(boolean)"], "Fixed commit": "e18096ad785ba121367bc3e4928c8a21436d0c06", "Url": "https://api.github.com/repos/cs2103aug2014-t17-1j/main", "Date": "2014-11-05T14:41:58Z"},
{"Line": "=>914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gradle.api.Project.fileTree(java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(javaFileTree.isEmpty())) { org.gradle.api.Task zipJavadocTask = com.liferay.gradle.util.GradleUtil.getTask(project, com.liferay.gradle.plugins.LiferayJavaPlugin.ZIP_JAVADOC_TASK_NAME); artifactHandler.add(Dependency.ARCHIVES_CONFIGURATION, zipJavadocTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3737/buggy-version/modules.sdk.gradle-plugins.src.com.liferay.gradle.plugins.LiferayJavaPlugin.java", "BodyUseAPI": [], "Fixed commit": "f5638a58d5869609eb1bb12ff48e279ee8003f5d", "Url": "https://api.github.com/repos/pedroqueiroz/liferay-portal", "Date": "2015-09-01T18:33:46Z"},
{"Line": "=>780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7848/buggy-version/actor-sdk.sdk-core-android.android-sdk.src.main.java.im.actor.sdk.view.emoji.SmileProcessor.java", "BodyUseAPI": [], "Fixed commit": "e9167186e0b19171a39ad0d12bdad50588257b90", "Url": "https://api.github.com/repos/actorapp/actor-platform", "Date": "2016-05-17T11:04:37Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fs == null) { com.asakusafw.cleaner.log.Log.log(com.asakusafw.cleaner.main.HDFSCleaner.CLASS, MessageIdConst.HCLN_CLEN_DIR_ERROR, \"Path.getFileSystem\u306e\u623b\u308a\u5024\u304cnull\", cleanPath.toString()); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2786/buggy-version/asakusa-cleaner.src.main.java.com.asakusafw.cleaner.main.HDFSCleaner.java", "BodyUseAPI": [], "Fixed commit": "f846c9b3c3ab3fb64c6ece3f6ab116d6a37ba885", "Url": "https://api.github.com/repos/ashigeru/asakusafw", "Date": "2011-05-03T01:23:07Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (displayingResult) { left = s; displayingResult = false; }else if (onRightSide) right = (right) + s; else left = (left) + s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5106/buggy-version/src.edu.ucsb.cs56.projects.utilities.calculator.Calculator.java", "BodyUseAPI": [], "Fixed commit": "471cde3cc4fd81e973a8bf0c1f7bac23ce9b9816", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-utilities-calculator", "Date": "2016-11-18T01:22:56Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.handle.AlarmCenter.getAlarmCount(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (alarmCount == null) { alarmCount = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3068/buggy-version/src.main.java.com.example.controller.AlarmController.java", "BodyUseAPI": [], "Fixed commit": "201bc4cc44a461282855e7c881e6102e019ed550", "Url": "https://api.github.com/repos/dearfuture/demo", "Date": "2017-09-20T07:34:51Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gephi.graph.dhns.edge.AbstractEdge.getSource(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (node.getMetaEdgesOutTree().hasNeighbour(source)) { source.decMutualMetaEdgeDegree(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/164/buggy-version/DHNSGraph.src.org.gephi.graph.dhns.core.EdgeProcessor.java", "BodyUseAPI": ["org.gephi.graph.dhns.node.AbstractNode.decMutualMetaEdgeDegree()"], "Fixed commit": "6cf099f073cd64fc4a1b111140b2f719775f2344", "Url": "https://api.github.com/repos/mbastian/gephi", "Date": "2011-11-17T16:03:45Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.freelibrary.util.FileUtils.LOGGER.isDebugEnabled()) && ((aDir.listFiles()) == null)) { info.freelibrary.util.FileUtils.LOGGER.debug(\"Trying to delete '{}' but there was a problem\", aDir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1409/buggy-version/src.main.java.info.freelibrary.util.FileUtils.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.io.File)"], "Fixed commit": "397235966150a7c01ab25e2d40f220219cc5817f", "Url": "https://api.github.com/repos/ksclarke/freelib-utils", "Date": "2014-04-19T22:48:30Z"},
{"Line": "=>1249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((elementDirections.getElementsByTagName(\"wedge\").item(0).getAttributes().getNamedItem(\"spread\")) != null) { wedge.setSpread(java.lang.Integer.parseInt(elementDirections.getElementsByTagName(\"wedge\").item(0).getAttributes().getNamedItem(\"spread\").getTextContent())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7574/buggy-version/music2lod.src.main.java.de.muenster.musikhochschule.converter.MusicXMLParser.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)", "org.w3c.dom.Node.getTextContent()", "org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)", "org.w3c.dom.Node.getAttributes()", "de.muenster.musikhochschule.core.Wedge.setSpread(int)", "org.w3c.dom.Element.getElementsByTagName(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "5db1f690e9ae8d2d697f1c5ba79feb24cf9715e3", "Url": "https://api.github.com/repos/jimjonesbr/music2lod", "Date": "2016-02-19T13:10:20Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choiceType.equals(org.biouno.unochoice.scriptler.ScriptlerChoiceParameterDefinition.PARAMETER_TYPE_MULTI_SELECT)) || (choiceType.equals(org.biouno.unochoice.scriptler.ScriptlerChoiceParameterDefinition.PARAMETER_TYPE_SINGLE_SELECT))) choicesSize = getChoicesAsMap().size(); else choicesSize = getChoices().size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6551/buggy-version/src.main.java.org.biouno.unochoice.scriptler.ScriptlerChoiceParameterDefinition.java", "BodyUseAPI": [], "Fixed commit": "3492420c203909b9946c4e765f4bccb42d74f630", "Url": "https://api.github.com/repos/biouno/uno-choice-plugin", "Date": "2014-09-14T21:40:03Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentHash) != null) { this.prevHash = currentHash; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6227/buggy-version/wro4j-core.src.main.java.ro.isdc.wro.model.resource.support.change.ResourceChangeInfo.java", "BodyUseAPI": [], "Fixed commit": "1a6d4a30d31d1bf2d866791264d6dc0d722590a1", "Url": "https://api.github.com/repos/wro4j/wro4j", "Date": "2012-11-07T15:55:25Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tempSt == null) { tempSt = \"X\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/127/buggy-version/src.main.java.com.era7.lib.bioinfo.bioinfoutil.seq.SeqUtil.java", "BodyUseAPI": [], "Fixed commit": "230261a8c7dcd579283818df816f48ff9eb5d05b", "Url": "https://api.github.com/repos/pablopareja/BioinfoUtil", "Date": "2011-11-14T10:11:58Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.prologic.idkey.objects.Category>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((category.getCount()) > 0) { android.os.Bundle b = new android.os.Bundle(); b.putInt(KeyListingActivities.USER_CATEGORY_ID, category.getId()); b.putString(KeyListingActivities.USER_CATEGORY_NAME, category.getName()); setCurrent(com.prologic.idkey.activities.KeyListingActivities.class, b); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1042/buggy-version/Idkey-new.src.com.prologic.idkey.activities.CategoryActivity.java", "BodyUseAPI": ["com.prologic.idkey.objects.Category.getId()", "com.prologic.idkey.objects.Category.getName()", "android.os.Bundle.putString(KeyListingActivities.USER_CATEGORY_NAME,category.getName())", "android.os.Bundle.putInt(KeyListingActivities.USER_CATEGORY_ID,category.getId())"], "Fixed commit": "d91553299e74b81055b19bc145c3a544e7ffde10", "Url": "https://api.github.com/repos/farhan-faruque/idkey", "Date": "2013-07-15T15:59:09Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.duration) == null) { str.append(\"(:action \"); }else { str.append(\"(:durative-action \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8932/buggy-version/src.main.java.fr.uga.pddl4j.parser.Op.java", "BodyUseAPI": [], "Fixed commit": "2b60414f7a06c9744190387fc369ca0da7115170", "Url": "https://api.github.com/repos/pellierd/pddl4j", "Date": "2017-06-16T07:58:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sebastian.sokolowski.auctionhunter.soap.request.FilterOptionsType.getFilterValueRange()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rangeValueType.getRangeValueMax()) != null) { filterValueItem.addTextNode(com.sebastian.sokolowski.auctionhunter.soap.envelopes.NAMESPACE, \"rangeValueMax\", rangeValueType.getRangeValueMax()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7775/buggy-version/app.src.main.java.com.sebastian.sokolowski.auctionhunter.soap.envelopes.DoGetItemsListEnvelope.java", "BodyUseAPI": ["com.sebastian.sokolowski.auctionhunter.soap.request.RangeValueType.getRangeValueMax()", "com.alexgilleran.icesoap.xml.XMLParentNode.addTextNode(com.sebastian.sokolowski.auctionhunter.soap.envelopes.NAMESPACE,java.lang.String,rangeValueType.getRangeValueMax())"], "Fixed commit": "7b655f912f49471c95cc5ba8c3e9d3cdbdef7344", "Url": "https://api.github.com/repos/sebastiansokolowski/AuctionHunter---Allegro", "Date": "2017-03-15T20:46:21Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sebastian.sokolowski.auctionhunter.soap.request.FilterOptionsType.getFilterValueRange()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rangeValueType.getRangeValueMin()) != null) { filterValueItem.addTextNode(com.sebastian.sokolowski.auctionhunter.soap.envelopes.NAMESPACE, \"rangeValueMin\", rangeValueType.getRangeValueMin()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7775/buggy-version/app.src.main.java.com.sebastian.sokolowski.auctionhunter.soap.envelopes.DoGetItemsListEnvelope.java", "BodyUseAPI": ["com.alexgilleran.icesoap.xml.XMLParentNode.addTextNode(com.sebastian.sokolowski.auctionhunter.soap.envelopes.NAMESPACE,java.lang.String,rangeValueType.getRangeValueMin())", "com.sebastian.sokolowski.auctionhunter.soap.request.RangeValueType.getRangeValueMin()"], "Fixed commit": "7b655f912f49471c95cc5ba8c3e9d3cdbdef7344", "Url": "https://api.github.com/repos/sebastiansokolowski/AuctionHunter---Allegro", "Date": "2017-03-15T20:46:21Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((net.torocraft.toroquest.civilization.CivilizationHandlers.PlayerCivilizationCapabilityProvider.CAP) != null) && (capability == (net.torocraft.toroquest.civilization.CivilizationHandlers.PlayerCivilizationCapabilityProvider.CAP))) { return PlayerCivilizationCapabilityImpl.INSTANCE.cast(instance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6943/buggy-version/src.main.java.net.torocraft.toroquest.civilization.CivilizationHandlers.java", "BodyUseAPI": [], "Fixed commit": "cfa36a906e7b7fb66e7e6129be90992204f8a738", "Url": "https://api.github.com/repos/ToroCraft/ToroQuest", "Date": "2016-11-17T23:10:30Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dGroup.getGameWorld()) == null) { io.github.dre2n.dungeonsxl.util.messageutil.MessageUtil.sendMessage(player, dMessages.getMessage(Messages.ERROR_NOT_SAVED, io.github.dre2n.dungeonsxl.player.DGroup.getByPlayer(player).getMapName())); dGroup.remove(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/757/buggy-version/src.io.github.dre2n.dungeonsxl.command.PlayCommand.java", "BodyUseAPI": ["io.github.dre2n.dungeonsxl.player.DGroup.remove()"], "Fixed commit": "1499f71a2850e7a0bab250559847be3e052a32ff", "Url": "https://api.github.com/repos/DRE2N/DungeonsXL", "Date": "2016-01-10T15:48:58Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (expr != null) { toogleTextInput(); textBox.setText(expr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4307/buggy-version/widgets.src.main.java.org.jboss.ballroom.client.widgets.forms.CheckBoxItem.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.TextBox.setText(java.lang.String)"], "Fixed commit": "36df2e06fdfb0ff3a7d7a5f7d10f19a787651e05", "Url": "https://api.github.com/repos/claudio4j/hal-ballroom", "Date": "2014-07-29T06:56:23Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPrettyPrinter()) != null) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4817/buggy-version/src.main.java.com.fasterxml.jackson.core.base.GeneratorBase.java", "BodyUseAPI": [], "Fixed commit": "664b88b45e8f7123108fd81579cb192f5024bd14", "Url": "https://api.github.com/repos/FasterXML/jackson-core", "Date": "2012-09-28T18:08:15Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { fullName.addTextChangedListener(credentialsChangeWatcher); masterPassword.addTextChangedListener(credentialsChangeWatcher); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4910/buggy-version/app.src.main.java.de.devland.masterpassword.ui.LoginFragment.java", "BodyUseAPI": [], "Fixed commit": "514b6a623da32dfb8a54735d0359b99ad6665ced", "Url": "https://api.github.com/repos/dkunzler/masterpassword", "Date": "2015-04-30T15:20:47Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((java.lang.String) (de.foopara.phpcsmd.option.PhpcpdOptions.load(PhpcpdOptions.Settings.EXCLUDE, lookup))).split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((excludeOption.length) > 0) { exclude.append(excludeOption[0]); for (int i = 1; i < (excludeOption.length); i++) { exclude.append(\" --exclude \").append(excludeOption[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3298/buggy-version/src.de.foopara.phpcsmd.exec.phpcpd.Phpcpd.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "62b1c74a74d10c76551d83dd49fa22a8a0d2f608", "Url": "https://api.github.com/repos/vralfy/phpcsmd", "Date": "2013-07-09T19:15:34Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.limelight.nvstream.NvVideoStream.currentTimeUs()) >= nextFrameTimeUs) { render = true; nextFrameTimeUs = computePresentationTime(60); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7289/buggy-version/src.com.limelight.nvstream.NvVideoStream.java", "BodyUseAPI": [], "Fixed commit": "c7c884781ab3099ee4aee06a76ba53bcb9ce8f77", "Url": "https://api.github.com/repos/cgutman/limelight", "Date": "2013-11-16T04:42:00Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mAuth.getCurrentUser()) != null) { java.lang.String uid = mAuth.getCurrentUser().getUid(); if (dataSnapshot.child(post_key).hasChild(uid)) { likebtn.setImageResource(R.mipmap.ic_done_black_24dp); }else { likebtn.setImageResource(R.mipmap.ic_thumb_up_black_24dp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7265/buggy-version/app.src.main.java.com.example.aki.theblog.MainActivity.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseAuth.getCurrentUser()", "mAuth.getCurrentUser().getUid()"], "Fixed commit": "3cf878e84d69494270fb70ddc7a4379441e7ee72", "Url": "https://api.github.com/repos/Aki58/BLoggy", "Date": "2017-03-06T06:54:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(double)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (iy >= (cellList.get(currentCellIndex).ny)) { ix = (cellList.get(currentCellIndex).ny) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3115/buggy-version/src.controller.Kex.java", "BodyUseAPI": ["java.util.ArrayList<controller.Kex.SearchCell>.get(int)"], "Fixed commit": "c944d3ea6471375ce08c2a9107cfdf963dd9fd9a", "Url": "https://api.github.com/repos/NiklasRolleberg/Kex-TestEnvironment", "Date": "2015-04-23T14:42:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(double)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ix >= (cellList.get(currentCellIndex).nx)) { ix = (cellList.get(currentCellIndex).nx) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3115/buggy-version/src.controller.Kex.java", "BodyUseAPI": ["java.util.ArrayList<controller.Kex.SearchCell>.get(int)"], "Fixed commit": "c944d3ea6471375ce08c2a9107cfdf963dd9fd9a", "Url": "https://api.github.com/repos/NiklasRolleberg/Kex-TestEnvironment", "Date": "2015-04-23T14:42:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (data != null) this.data = data; else this.data = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5526/buggy-version/map.map-impl.src.main.java.org.mobicents.protocols.ss7.map.errors.MAPErrorMessageSsErrorStatusImpl.java", "BodyUseAPI": [], "Fixed commit": "726ed98247a8c7ca683a19aebd6741e03879b0e2", "Url": "https://api.github.com/repos/SummaNetworks/jss7", "Date": "2017-11-02T16:25:16Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val == null) this.data = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5526/buggy-version/map.map-impl.src.main.java.org.mobicents.protocols.ss7.map.errors.MAPErrorMessageSsErrorStatusImpl.java", "BodyUseAPI": [], "Fixed commit": "726ed98247a8c7ca683a19aebd6741e03879b0e2", "Url": "https://api.github.com/repos/SummaNetworks/jss7", "Date": "2017-11-02T16:25:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((entity.Ownable) (fields[i])).getOwner()) != null) if (((entity.Ownable) (fields[i])).getOwner().getPlayerName().equals(playerName)) ((entity.Ownable) (fields[i])).removeOwner();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4071/buggy-version/33_CDIO3.src.entity.GameBoard.java", "BodyUseAPI": ["((entity.Ownable) (fields[i])).getOwner().getPlayerName()", "((entity.Ownable) (fields[i])).getOwner()", "((entity.Ownable) (fields[i])).removeOwner()", "((entity.Ownable) (fields[i])).getOwner().getPlayerName().equals(java.lang.String)"], "Fixed commit": "4b61fffb606e97ec5ca69941b51abecbe1da74ea", "Url": "https://api.github.com/repos/ArvidLangsoe/33_CDIO3", "Date": "2016-11-17T13:16:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Vector<team1.parkingapp.data.Spot>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(currentSpot.getStatus().equals(RestContract.AVAILABLE))) { android.widget.Toast.makeText(this, R.string.spot_unavailable, Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6435/buggy-version/android.NKUParkingLocator.src.team1.parkingapp.SpotList.java", "BodyUseAPI": [], "Fixed commit": "be15c3ae54c4ce931a782e2366a2c4b309d8d6f7", "Url": "https://api.github.com/repos/garciadece1/parking-app", "Date": "2014-04-29T03:54:15Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(WhoisUtil.PRX)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((infoArray.length) > 2) { return com.cnnic.whois.util.WhoisUtil.processError(WhoisUtil.COMMENDRRORCODE, role, format); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3855/buggy-version/source.whois.src.com.cnnic.whois.controller.QueryServlet.java", "BodyUseAPI": [], "Fixed commit": "42e6d808f60c5875dfd23113ea6af71d51c52534", "Url": "https://api.github.com/repos/forumbyr/restfulwhois", "Date": "2013-11-04T06:02:40Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item2.levelupRequirements) == null) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5420/buggy-version/AndorsTrail.src.com.gpl.rpg.AndorsTrail.view.SkillListAdapter.java", "BodyUseAPI": [], "Fixed commit": "334d56b51b8a20d67a0eb498fc912a701402d1b8", "Url": "https://api.github.com/repos/HummusSamurai/andors-trail", "Date": "2017-03-01T14:09:30Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item1.levelupRequirements) == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5420/buggy-version/AndorsTrail.src.com.gpl.rpg.AndorsTrail.view.SkillListAdapter.java", "BodyUseAPI": [], "Fixed commit": "334d56b51b8a20d67a0eb498fc912a701402d1b8", "Url": "https://api.github.com/repos/HummusSamurai/andors-trail", "Date": "2017-03-01T14:09:30Z"},
{"Line": "=>991", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.msgpack.core.buffer.MessageBuffer.toByteBuffer(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cr.isUnderflow()) && (bb.hasRemaining())) { if ((config.getActionOnMalFormedInput()) == (java.nio.charset.CodingErrorAction.REPORT)) { throw new java.nio.charset.MalformedInputException(strLen); } while (bb.hasRemaining()) bb.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1202/buggy-version/msgpack-core.src.main.java.org.msgpack.core.MessageUnpacker.java", "BodyUseAPI": ["java.nio.ByteBuffer.get()", "java.nio.ByteBuffer.hasRemaining()"], "Fixed commit": "bd1d3e6dfd7b4a26b26e95812f475f187944faa5", "Url": "https://api.github.com/repos/msgpack/msgpack-java", "Date": "2014-10-24T23:19:58Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldName.equalsIgnoreCase(\"id\")) return id();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7417/buggy-version/src.com.mozzandroidutils.sqlite.Model.java", "BodyUseAPI": [], "Fixed commit": "9e30932d05c4713e8a6de527c3d92a82f60523bb", "Url": "https://api.github.com/repos/hsllany/MozzAndroid", "Date": "2015-02-16T10:12:39Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((scoreP1) > 15) || ((scoreP2) > 15)) { state = com.pong.World.WORLD_STATE_GAME_END; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5771/buggy-version/src.com.pong.World.java", "BodyUseAPI": [], "Fixed commit": "3830cac026e5da1a37b2b8030d16175937ae2c1a", "Url": "https://api.github.com/repos/marcoamorales/pong-libgdx-clone", "Date": "2011-06-24T19:39:09Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vertx.mods.WriteConcern.valueOf(getOptionalStringConfig(\"writeConcern\", \"\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (writeConcern == null) { writeConcern = org.vertx.mods.WriteConcern.valueOf(getOptionalStringConfig(\"write_concern\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2322/buggy-version/src.main.java.org.vertx.mods.MongoPersistor.java", "BodyUseAPI": [], "Fixed commit": "9db34d3c529efb4661f82146adacaf3451d6d242", "Url": "https://api.github.com/repos/bytor99999/mod-mongo-persistor", "Date": "2013-07-30T21:26:44Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vertx.mods.WriteConcern.valueOf(getOptionalStringConfig(\"writeConcern\", \"\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (writeConcern == null) { writeConcern = org.vertx.mods.WriteConcern.valueOf(getOptionalStringConfig(\"write_concern\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2322/buggy-version/src.main.java.org.vertx.mods.MongoPersistor.java", "BodyUseAPI": [], "Fixed commit": "9db34d3c529efb4661f82146adacaf3451d6d242", "Url": "https://api.github.com/repos/bytor99999/mod-mongo-persistor", "Date": "2013-07-30T21:26:44Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fs != null) fs.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1293/buggy-version/src.back-end.src.main.java.com.whatistics.backend.parser.language.LanguageDetectorOptimaize.java", "BodyUseAPI": ["java.nio.file.FileSystem.close()"], "Fixed commit": "6c2ecd756edec81d4efac84c4515f682f135f440", "Url": "https://api.github.com/repos/roberterdin/thatsapp", "Date": "2016-06-07T21:55:48Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((array.length) > 1) { fs = java.nio.file.FileSystems.newFileSystem(java.net.URI.create(array[0]), env); path = fs.getPath(array[1]); }else { path = java.nio.file.Paths.get(this.getClass().getResource(\"/languageProfiles\").toURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1293/buggy-version/src.back-end.src.main.java.com.whatistics.backend.parser.language.LanguageDetectorOptimaize.java", "BodyUseAPI": ["java.net.URI.create(java.lang.String)", "java.nio.file.FileSystems.newFileSystem(java.net.URI,java.util.Map<java.lang.String, java.lang.String>)", "java.nio.file.FileSystem.getPath(java.lang.String)"], "Fixed commit": "6c2ecd756edec81d4efac84c4515f682f135f440", "Url": "https://api.github.com/repos/roberterdin/thatsapp", "Date": "2016-06-07T21:55:48Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((array.length) > 1) { fs = java.nio.file.FileSystems.newFileSystem(java.net.URI.create(array[0]), env); path = fs.getPath(array[1]); }else { path = java.nio.file.Paths.get(this.getClass().getResource(((\"/stopwords/\" + language) + \".txt\")).toURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1293/buggy-version/src.back-end.src.main.java.com.whatistics.backend.statistics.CachingStopWordsProvider.java", "BodyUseAPI": ["java.nio.file.FileSystems.newFileSystem(java.net.URI,java.util.Map<java.lang.String, java.lang.String>)", "java.net.URI.create(java.lang.String)", "java.nio.file.FileSystem.getPath(java.lang.String)"], "Fixed commit": "6c2ecd756edec81d4efac84c4515f682f135f440", "Url": "https://api.github.com/repos/roberterdin/thatsapp", "Date": "2016-06-07T21:55:48Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fs != null) fs.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1293/buggy-version/src.back-end.src.main.java.com.whatistics.backend.statistics.CachingStopWordsProvider.java", "BodyUseAPI": ["java.nio.file.FileSystem.close()"], "Fixed commit": "6c2ecd756edec81d4efac84c4515f682f135f440", "Url": "https://api.github.com/repos/roberterdin/thatsapp", "Date": "2016-06-07T21:55:48Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.dno.running.persistence.GenericDao<be.dno.running.entities.User>.getById(userService.getCurrentUser().getUserId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currentUser == null) { return new org.springframework.web.servlet.ModelAndView(\"show_activities\", \"activities\", activities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7418/buggy-version/src.be.dno.running.web.ShowActivitiesController.java", "BodyUseAPI": [], "Fixed commit": "2439f973dfe568d456cbec0862e5ef8d7841312a", "Url": "https://api.github.com/repos/dinow/runningCommunity", "Date": "2013-08-26T16:42:26Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (errorMsg != null) android.util.Log.e(org.droidplanner.android.DroidPlannerApp.TAG, errorMsg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5474/buggy-version/Android.src.org.droidplanner.android.DroidPlannerApp.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "e74ea44ef4073008d882eec7394283d53ed5a133", "Url": "https://api.github.com/repos/DroidPlanner/droidplanner", "Date": "2014-11-30T18:03:52Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startOffset < 0) { startOffset = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8770/buggy-version/src.main.java.org.elasticsearch.index.analysis.PinyinTokenizer.java", "BodyUseAPI": [], "Fixed commit": "1f8613e0aa25b748dc4b1866e59eb7fc3c1a2924", "Url": "https://api.github.com/repos/medcl/elasticsearch-analysis-pinyin", "Date": "2016-10-25T03:27:39Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endOffset < startOffset) { endOffset = startOffset + (term.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8770/buggy-version/src.main.java.org.elasticsearch.index.analysis.PinyinTokenizer.java", "BodyUseAPI": [], "Fixed commit": "1f8613e0aa25b748dc4b1866e59eb7fc3c1a2924", "Url": "https://api.github.com/repos/medcl/elasticsearch-analysis-pinyin", "Date": "2016-10-25T03:27:39Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((n <= 0) || (trials <= 0)) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6110/buggy-version/src.PercolationStats.java", "BodyUseAPI": [], "Fixed commit": "00bf94d9b1df2f667cf4a963ae4b7aa7d7e7eeda", "Url": "https://api.github.com/repos/szhou1/Algs4", "Date": "2016-12-29T17:34:40Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (u != null) { java.util.Properties p = new java.util.Properties(); p.load(com.google.common.io.Resources.newInputStreamSupplier(u).getInput()); commit_id = p.getProperty(\"git.commit.id\"); build_email = p.getProperty(\"git.build.user.email\"); commit_time = p.getProperty(\"git.commit.time\"); build_time = p.getProperty(\"git.build.time\"); commit_message = p.getProperty(\"git.commit.message.short\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6627/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.store.sys.VersionIterator.java", "BodyUseAPI": [], "Fixed commit": "e3ab2c1760ad34bda80141e2c3108f7eda7c9104", "Url": "https://api.github.com/repos/mapr/incubator-drill", "Date": "2014-12-17T03:32:53Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((project.getLeader()) != null) { projectPPAPartners.add(project.getLeader().getInstitution()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/84/buggy-version/impactPathways.src.main.java.org.cgiar.ccafs.ap.action.planning.ProjectBudgetsPlanningAction.java", "BodyUseAPI": ["org.cgiar.ccafs.ap.data.model.Project.getLeader()", "project.getLeader().getInstitution()", "java.util.Set<org.cgiar.ccafs.ap.data.model.Institution>.add(project.getLeader().getInstitution())"], "Fixed commit": "9637e1038eea2a707972ece25237011e0ed03551", "Url": "https://api.github.com/repos/CCAFS/ccafs-ap", "Date": "2015-10-26T12:35:19Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (card instanceof core.AlliedCard) { this.alliedCards.remove(card); }else { java.lang.System.out.println(\"salut\"); this.alliedCards.remove(card); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7298/buggy-version/src.core.Player.java", "BodyUseAPI": ["java.util.Vector<core.AlliedCard>.remove(core.Card)", "java.util.Vector<core.AlliedCard>.remove(core.Card)"], "Fixed commit": "ec85b1864d7691d3ec3430e6a02746e2c7a8ed3f", "Url": "https://api.github.com/repos/PymZoR/UTT-LO02-Menhir", "Date": "2015-09-29T14:20:10Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((-(fromTempX)) < ((holder.buttonContainer.getWidth()) / 2)) { rollback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2384/buggy-version/listapi.src.main.java.cbgm.de.listapi.listener.SwipeListener.java", "BodyUseAPI": [], "Fixed commit": "0d304554c9c162f25c8dd2ab1d0b4094e9ba5a3f", "Url": "https://api.github.com/repos/MKariton/aTDP", "Date": "2017-07-19T13:41:39Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.kneipentour.Datenbank.getListData(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((image_details.size()) == 0) { noresult_error.setVisibility(View.VISIBLE); }else { noresult_error.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5760/buggy-version/src.com.example.kneipentour.KneipenListActivity.java", "BodyUseAPI": [], "Fixed commit": "10d952404c35b5e92017ae763cff854d014b8418", "Url": "https://api.github.com/repos/AndroidEntwicklung/Kneipentour", "Date": "2013-11-29T03:31:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state) { t.start(); state = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2366/buggy-version/src.main.java.TimeoutConnect.java", "BodyUseAPI": [], "Fixed commit": "a79dec62d234a10dec4be510a9f068835369562b", "Url": "https://api.github.com/repos/happy6666/remote_r", "Date": "2016-06-13T13:45:50Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (statusCode == (com.google.android.gms.games.GamesStatusCodes.STATUS_REAL_TIME_CONNECTION_FAILED)) { googleApiClient.reconnect(); }else { getWindow().clearFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON); android.widget.Toast.makeText(this, ((\"Error in onRoomCreated! (\" + statusCode) + \")\"), Toast.LENGTH_SHORT).show(); getSupportFragmentManager().popBackStack(\"MainMenuFragment\", FragmentManager.POP_BACK_STACK_INCLUSIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5245/buggy-version/SnapThat.app.src.main.java.com.example.umyhpuscdi.snapthat.MainActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(com.example.umyhpuscdi.snapthat.MainActivity,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(this, ((\"Error in onRoomCreated! (\" + statusCode) + \")\"), Toast.LENGTH_SHORT).show()"], "Fixed commit": "f113046cd176393a2b1844fa398299738904f72f", "Url": "https://api.github.com/repos/Didoniac/SnapThat", "Date": "2016-05-24T12:24:42Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((moving.board) == (moving.lastBoard)) { moving.xPosition = (current.link.xPosition) + 15; moving.yPosition = (current.link.yPosition) + 15; if ((moving.facing) == 0) moving.yPosition -= 30; else if ((moving.facing) == 1) moving.xPosition += 30; else if ((moving.facing) == 2) moving.yPosition += 30; else moving.xPosition -= 30; moving.elevation = current.link.elevation; moving.board = current.link.board; current.board.removeMoving(moving); current.link.board.movings.add(moving); adventurerework.window.refreshBoard(); moving.board.printBoard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/417/buggy-version/src.cartography.NonWallsDatabase.java", "BodyUseAPI": [], "Fixed commit": "2da55855790472e55eabd4e654fee57630fef14d", "Url": "https://api.github.com/repos/jkennedy1998/Galadrian_Adventure", "Date": "2017-05-01T15:29:23Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((function.sc.elemNS) != null) && (eq(qnm.uri(), function.sc.elemNS))) qnm.uri(org.basex.http.restxq.EMPTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5520/buggy-version/basex-api.src.main.java.org.basex.http.restxq.RestXqFunction.java", "BodyUseAPI": ["org.basex.http.restxq.QNm.uri(org.basex.http.restxq.EMPTY)"], "Fixed commit": "b7e33ceae3478426590cf2b9becd2e83a153a2fe", "Url": "https://api.github.com/repos/dimitarp/basex", "Date": "2013-11-29T17:02:17Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraft.src.mod_WorldStateCheckpoints.allowUpdateCheck) versionChecker.checkVersionWithLogging();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5712/buggy-version/net.minecraft.src.mod_WorldStateCheckpoints.java", "BodyUseAPI": [], "Fixed commit": "a3b40c2d0d170bf42d69dd2786f01b58b3d7ce5e", "Url": "https://api.github.com/repos/bspkrs/WorldStateCheckpoints", "Date": "2012-12-30T05:55:24Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.ICE_CREAM_SANDWICH)) { int fullscreenFlags = ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) ? android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN : 0; getWindow().getDecorView().setSystemUiVisibility(fullscreenFlags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8394/buggy-version/app.src.main.java.de.paul_woitaschek.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c70bf757dadf37f52104f24e9b6a595cd1a96459", "Url": "https://api.github.com/repos/PaulWoitaschek/FitsSystemWindowsSample", "Date": "2016-04-22T17:02:37Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((roleList.size()) > 0) user.setRoles(roleList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1386/buggy-version/src.main.java.com.ozay.resultsetextractor.OrgRoleResultSetExtractor.java", "BodyUseAPI": ["com.ozay.web.rest.dto.OrganizationUserDTO.setRoles(java.util.List<java.lang.String>)"], "Fixed commit": "aaa3fac8fc477b90ce60d90f4de1e5a6219eb7fe", "Url": "https://api.github.com/repos/OzayOrg/ozay-backend", "Date": "2015-07-19T02:05:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((entity.getBukkitEntity()) instanceof org.bukkit.entity.LivingEntity) && (!(((org.bukkit.entity.LivingEntity) (entity.getBukkitEntity())).getRemoveWhenFarAway()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3735/buggy-version/src.main.java.net.aufdemrand.denizen.utilities.world.DenizenWorldAccess.java", "BodyUseAPI": [], "Fixed commit": "b28d02e049a2f9f35edd964fdc39dff4da271d47", "Url": "https://api.github.com/repos/mcmonkey4eva/Denizen", "Date": "2015-07-11T01:45:53Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (appId == null) { res.append(line.replace(\"%APP_ID%\", \"null\")); }else { res.append(line.replace(\"%APP_ID%\", ((\"'\" + appId) + \"'\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2993/buggy-version/src.java.org.rapidcontext.app.web.AppRequestHandler.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "fa47304af71b64c8c0d86bce6872a29dfa77f164", "Url": "https://api.github.com/repos/cederberg/rapidcontext", "Date": "2012-04-28T17:31:48Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((query.getVariant()) == null) && ((query.getProteinStart()) == null)) && ((query.getProteinEnd()) == null)) { alterationSet.addAll(allAlterations); }else { org.mskcc.cbio.oncokb.bo.AlterationBo alterationBo = new org.mskcc.cbio.oncokb.util.ApplicationContextSingleton().getAlterationBo(); java.util.List<org.mskcc.cbio.oncokb.model.Alteration> alterations = org.mskcc.cbio.oncokb.util.AlterationUtils.lookupVariant(query.getVariant(), true, allAlterations); if ((alterations == null) || (alterations.isEmpty())) { org.mskcc.cbio.oncokb.model.Alteration alteration = org.mskcc.cbio.oncokb.util.AlterationUtils.getAlteration(gene.getHugoSymbol(), query.getVariant(), query.getVariantType(), query.getConsequence(), query.getProteinStart(), query.getProteinEnd()); if (alteration != null) { alterations.add(alteration); } } for (org.mskcc.cbio.oncokb.model.Alteration alteration : alterations) { alterationSet.addAll(alterationBo.findRelevantAlterations(alteration, new java.util.ArrayList<org.mskcc.cbio.oncokb.model.Alteration>(allAlterations))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3340/buggy-version/web.src.main.java.org.mskcc.cbio.oncokb.api.pub.v1.VariantsApiController.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.model.VariantSearchQuery.getVariant()", "org.mskcc.cbio.oncokb.model.VariantSearchQuery.getProteinEnd()", "org.mskcc.cbio.oncokb.model.VariantSearchQuery.getProteinStart()", "org.mskcc.cbio.oncokb.util.AlterationUtils.lookupVariant(query.getVariant(),boolean,java.util.Set<org.mskcc.cbio.oncokb.model.Alteration>)", "org.mskcc.cbio.oncokb.model.VariantSearchQuery.getVariant()", "org.mskcc.cbio.oncokb.model.VariantSearchQuery.getConsequence()", "org.mskcc.cbio.oncokb.model.VariantSearchQuery.getVariantType()", "org.mskcc.cbio.oncokb.util.AlterationUtils.getAlteration(gene.getHugoSymbol(),query.getVariant(),query.getVariantType(),query.getConsequence(),query.getProteinStart(),query.getProteinEnd())"], "Fixed commit": "38e3e03316538d8dec3ba9070398db01ecccea96", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-07-20T21:55:24Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (restart) { synchronized(loaderTask) { if (!(loaderTask.fromCacheOnlyChecked)) { loaderTask.fromCacheOnly = false; restart = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5889/buggy-version/src.com.mishiranu.dashchan.content.ImageLoader.java", "BodyUseAPI": [], "Fixed commit": "c1135f7637b0d1625fcf5ad4afaf33e2ae3a6d3e", "Url": "https://api.github.com/repos/Mishiranu/Dashchan", "Date": "2016-08-02T00:53:50Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) adapter.highlightItem(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6249/buggy-version/app.src.main.java.bob.sun.bender.fragments.SimpleListFragment.java", "BodyUseAPI": [], "Fixed commit": "62b62693712a46e157e2240ab12010077ca26ee5", "Url": "https://api.github.com/repos/SpongeBobSun/Prodigal", "Date": "2017-02-15T09:08:52Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.up.fe.dceg.neptus.types.coord.LocationType.getPixelDistanceTo(pt.up.fe.dceg.neptus.types.coord.LocationType,renderer.getLevelOfDetail())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (blDistance > 5000) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/9/buggy-version/src.pt.up.fe.dceg.neptus.renderer2d.TransponderSecurityArea.java", "BodyUseAPI": [], "Fixed commit": "d3822af0e206abc9fa77049cfe03fba5bccfb0d7", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2013-08-06T09:21:01Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.vntr.User.getBasePid()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pMap.containsKey(oldPid)) { pMap.get(user.getBasePid()).remove(uid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1967/buggy-version/src.main.java.io.vntr.manager.NoRepManager.java", "BodyUseAPI": ["java.util.Set<java.lang.Integer>.remove(java.lang.Integer)", "java.util.Map<java.lang.Integer, java.util.Set<java.lang.Integer>>.get(user.getBasePid())"], "Fixed commit": "97a0f3aeb2e25adb01e83575d3c20d8ec4618ad3", "Url": "https://api.github.com/repos/vntr-admin/combiner", "Date": "2017-04-27T17:56:34Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(outgoingConnection.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8554/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.editor.cmd.ChangeMetadataCommand.java", "BodyUseAPI": [], "Fixed commit": "2e61fd1f6fd0d385c548db3beafa668081e7c34f", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2016-02-22T07:21:20Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (devices.isEmpty()) return devices;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1943/buggy-version/src.main.java.org.traccar.web.server.model.DataServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "7a0e918e386d0028013bbd2e5624b97e8012588e", "Url": "https://api.github.com/repos/datamatica-pl/traccar-web", "Date": "2017-05-08T10:30:27Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getDifficulty()) == 1) temp_name = (p.getName()) + \" (Easy)\"; else if ((p.getDifficulty()) == 2) temp_name = (p.getName()) + \" (Medium)\"; else temp_name = (p.getName()) + \" (Hard)\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4436/buggy-version/src.puzzlePackage.PuzzleDatabase.java", "BodyUseAPI": ["puzzlePackage.PuzzleData.getName()", "puzzlePackage.PuzzleData.getName()", "puzzlePackage.PuzzleData.getName()", "puzzlePackage.PuzzleData.getDifficulty()"], "Fixed commit": "47f1cb5179d4b589d65bd1cebecd61d85676fcf7", "Url": "https://api.github.com/repos/it1482/GotPuzzled", "Date": "2015-06-10T13:11:35Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Gdx.app.getApplicationListener()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((game.getScreen()) instanceof de.fau.cs.mad.fly.ui.LevelChooserScreen) { game.setLevelGroupScreen(); }else if ((game.getScreen()) instanceof de.fau.cs.mad.fly.ui.LevelsStatisScreen) { game.setStatisticsScreen(); }else if ((game.getScreen()) instanceof de.fau.cs.mad.fly.ui.PlaneUpgradeScreen) { de.fau.cs.mad.fly.ui.PlaneUpgradeScreen screen = ((de.fau.cs.mad.fly.ui.PlaneUpgradeScreen) (game.getScreen())); if ((screen.getOverlay().getCurrentUpgrade()) == null) { game.setPlaneChoosingScreen(); }else { screen.getOverlay().resetCurrentUpgrade(); game.setPlaneUpgradeScreen(); } }else if (!((game.getScreen()) instanceof de.fau.cs.mad.fly.ui.MainMenuScreen)) { game.setMainMenuScreen(); }else { Gdx.app.exit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8881/buggy-version/core.src.de.fau.cs.mad.fly.ui.BackProcessor.java", "BodyUseAPI": ["de.fau.cs.mad.fly.Fly.setPlaneChoosingScreen()", "de.fau.cs.mad.fly.Fly.getScreen()", "de.fau.cs.mad.fly.Fly.setStatisticsScreen()", "de.fau.cs.mad.fly.Fly.setMainMenuScreen()", "de.fau.cs.mad.fly.Fly.getScreen()", "de.fau.cs.mad.fly.Fly.getScreen()", "de.fau.cs.mad.fly.Fly.getScreen()", "de.fau.cs.mad.fly.Fly.setLevelGroupScreen()", "de.fau.cs.mad.fly.Fly.setPlaneUpgradeScreen()"], "Fixed commit": "68ed61c6fa6574983fbd94a82ce1185c9d1fe36f", "Url": "https://api.github.com/repos/FAU-Inf2/fly-gdx", "Date": "2014-09-04T12:32:50Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item instanceof net.minecraft.item.ItemBlock) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4881/buggy-version/src.main.java.blusunrize.immersiveengineering.client.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "5eac885c501bb014ad6b8e8e61783ae14d98306e", "Url": "https://api.github.com/repos/PaleoCrafter/ImmersiveEngineering", "Date": "2017-07-22T22:41:30Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spoofax.modelware.emf.utils.Subterm2Subobject.path2object(org.spoofax.interpreter.terms.IStrategoList,org.eclipse.emf.ecore.EObject)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (eObject != null) { result.add(eObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/9219/buggy-version/org.spoofax.modelware.gmf.src.org.spoofax.modelware.gmf.editorservices.TextSelectionChangedListener.java", "BodyUseAPI": ["java.util.List<org.eclipse.emf.ecore.EObject>.add(org.eclipse.emf.ecore.EObject)"], "Fixed commit": "0f7e0c22d7428f096db1700d8891383dc2dfa041", "Url": "https://api.github.com/repos/metaborg/spoofax-modelware", "Date": "2013-07-10T23:18:40Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/9219/buggy-version/org.spoofax.modelware.emf.src.org.spoofax.modelware.emf.utils.Subterm2Subobject.java", "BodyUseAPI": [], "Fixed commit": "0f7e0c22d7428f096db1700d8891383dc2dfa041", "Url": "https://api.github.com/repos/metaborg/spoofax-modelware", "Date": "2013-07-10T23:18:40Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((calendarTemplatesFolder.listFiles()) != null) { for (java.io.File file : calendarTemplatesFolder.listFiles()) { refListTemplates.addItem((strCalendarTemplatesFolder + (file.getName())), file.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8000/buggy-version/src.java.fr.paris.lutece.plugins.appointment.web.CalendarTemplateJspBean.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "51e0487c19532a3cd02d87096950e483691a33e1", "Url": "https://api.github.com/repos/lutece-secteur-public/gru-plugin-appointment", "Date": "2017-07-20T14:56:46Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isBeingLogIn)) { queryDialog(this, getResources().getString(R.string.info_prompt)); isBeingLogIn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5366/buggy-version/app.src.main.java.com.example.trinddinhhuy.thingsee.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "71f5e254f0d440268a673f45e337e3ec61bf2a48", "Url": "https://api.github.com/repos/HuyAms/Measure-distance", "Date": "2017-05-01T06:20:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (desiredYaw > 180) { desiredYaw = desiredYaw - 360; }else if (desiredYaw < (-180)) { desiredYaw = desiredYaw + 360; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5702/buggy-version/src.org.usfirst.frc.team5190.robot.commands.TurnCommand.java", "BodyUseAPI": [], "Fixed commit": "fe86470df077a69db3a5848948979c429ee7f430", "Url": "https://api.github.com/repos/5190GreenHopeRobotics/frc2015", "Date": "2015-03-12T19:04:39Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view instanceof android.widget.ImageView) { imageView = ((android.widget.ImageView) (view)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1451/buggy-version/app.src.main.java.org.eyeseetea.malariacare.layout.utils.LayoutUtils.java", "BodyUseAPI": [], "Fixed commit": "12019d9d7393f65d946bbb5926c3afff51bd1595", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2016-11-11T14:39:33Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (imageView != null) { imageView.clearColorFilter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1451/buggy-version/app.src.main.java.org.eyeseetea.malariacare.layout.utils.LayoutUtils.java", "BodyUseAPI": ["android.widget.ImageView.clearColorFilter()"], "Fixed commit": "12019d9d7393f65d946bbb5926c3afff51bd1595", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2016-11-11T14:39:33Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeDown) != null) { timeDown.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4365/buggy-version/app.src.main.java.com.cotangent.showr.showerMode.java", "BodyUseAPI": [], "Fixed commit": "287e77e01f32f070622d49c6783104e8a12ec392", "Url": "https://api.github.com/repos/aipol9/Showr", "Date": "2017-01-04T04:11:44Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").startsWith(\"Windows\")) { dirPath = dirPath.toLowerCase(); nextPath = nextPath.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3732/buggy-version/src.main.java.org.commonjava.maven.plugins.execroot.HighestBasedirGoal.java", "BodyUseAPI": [], "Fixed commit": "f2417d4023f2a8d38f918ac83d48eda25953a86e", "Url": "https://api.github.com/repos/crossdot/directory-maven-plugin", "Date": "2017-07-14T06:28:28Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").startsWith(\"Windows\")) { return first.getAbsolutePath().compareToIgnoreCase(second.getAbsolutePath()); }else { return first.getAbsolutePath().compareTo(second.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3732/buggy-version/src.main.java.org.commonjava.maven.plugins.execroot.HighestBasedirGoal.java", "BodyUseAPI": [], "Fixed commit": "f2417d4023f2a8d38f918ac83d48eda25953a86e", "Url": "https://api.github.com/repos/crossdot/directory-maven-plugin", "Date": "2017-07-14T06:28:28Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.loadConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rdbmsConfiguration.getUsername()) != null) { java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(), rdbmsConfiguration.getUsername(), rdbmsConfiguration.getPassword()); }else { java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6896/buggy-version/core.org.wso2.carbon.ndatasource.rdbms.src.main.java.org.wso2.carbon.ndatasource.rdbms.RDBMSDataSourceReader.java", "BodyUseAPI": ["org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getPassword()", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUsername()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl(),rdbmsConfiguration.getUsername(),rdbmsConfiguration.getPassword())", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()", "java.sql.DriverManager.getConnection(rdbmsConfiguration.getUrl())", "org.wso2.carbon.ndatasource.rdbms.RDBMSConfiguration.getUrl()"], "Fixed commit": "ed3f29f3239065026973567f8f4ee750a9564290", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon4-kernel", "Date": "2015-09-02T12:59:21Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(expected.getColumns().isEmpty())) { for (int i = 0; i < (expected.getColumns().size()); ++i) { com.github.kokorin.jdbunit.table.Column column = expected.getColumns().get(i); if (i != 0) { result.append(\", \"); } result.append(column.getName()); } }else { result.append(\"*\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/801/buggy-version/src.main.java.com.github.kokorin.jdbunit.operation.Verify.java", "BodyUseAPI": ["com.github.kokorin.jdbunit.table.Table.getColumns()", "expected.getColumns().get(int)", "com.github.kokorin.jdbunit.table.Table.getColumns()", "expected.getColumns().size()"], "Fixed commit": "8305c11ee2901e9b6900c66ff1cecf417916a8f9", "Url": "https://api.github.com/repos/kokorin/jdbUnit", "Date": "2016-11-12T09:09:26Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fedoraObject != null) { java.lang.String state = au.edu.anu.datacommons.data.fedora.FedoraBroker.getObjectState(fedoraObject.getObject_id()); au.edu.anu.datacommons.xml.transform.ViewTransform.LOGGER.debug(\"The item {} has a state of {}\", fedoraObject.getObject_id(), state); if (!(\"A\".equals(state))) { throw new au.edu.anu.datacommons.exception.DataCommonsException(404, \"The requested item has been deleted\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3121/buggy-version/DataCommons.src.main.java.au.edu.anu.datacommons.xml.transform.ViewTransform.java", "BodyUseAPI": ["au.edu.anu.datacommons.data.fedora.FedoraBroker.getObjectState(fedoraObject.getObject_id())", "au.edu.anu.datacommons.data.db.model.FedoraObject.getObject_id()", "au.edu.anu.datacommons.data.db.model.FedoraObject.getObject_id()", "org.slf4j.Logger.debug(java.lang.String,fedoraObject.getObject_id(),java.lang.String)"], "Fixed commit": "70edeedc3c2ea2b6771d939231d4b3419108ab1d", "Url": "https://api.github.com/repos/anu-doi/anudc", "Date": "2014-08-27T23:51:51Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vs.size()) > 0) { topologicalOrder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1684/buggy-version/src.main.java.com.git.algorithm.graph.model.Graph.java", "BodyUseAPI": [], "Fixed commit": "7b8a1e61b09be20228fdf99825b083b97507d5c3", "Url": "https://api.github.com/repos/aragorn-wu/algorithm", "Date": "2017-07-22T02:35:43Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp.isLeft) { if ((temp.parent) != null) { temp.parent.left = newNode; } }else { if ((temp.parent) != null) { temp.parent.right = newNode; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3676/buggy-version/wordCount.src.wordCount.treesForStrings.CustomTreeNode.java", "BodyUseAPI": [], "Fixed commit": "80150adfdf23a23a2d131d8bd50278f888898d0e", "Url": "https://api.github.com/repos/smalois/DP_assign4", "Date": "2015-04-20T05:31:55Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (walkingMessageHandler.hasUpcomingFootsteps()) { walkingMessageHandler.peekFootstep(0, nextFootstep); failureDetectionControlModule.setNextFootstep(nextFootstep); balanceManager.setUpcomingFootstep(nextFootstep); }else { failureDetectionControlModule.setNextFootstep(null); balanceManager.setUpcomingFootstep(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8175/buggy-version/ihmc-common-walking-control-modules.src.main.java.us.ihmc.commonWalkingControlModules.highLevelHumanoidControl.highLevelStates.walkingController.states.TransferState.java", "BodyUseAPI": ["us.ihmc.commonWalkingControlModules.desiredFootStep.WalkingMessageHandler.peekFootstep(int,us.ihmc.humanoidRobotics.footstep.Footstep)"], "Fixed commit": "63ca031eaf65cdb5193c2bd23818f5e03e63e4ae", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2017-09-19T21:52:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dsc == null) { com.stratelia.silverpeas.peasCore.MainSessionController msc = ((com.stratelia.silverpeas.peasCore.MainSessionController) (session.getAttribute(MainSessionController.MAIN_SESSION_CONTROLLER_ATT))); if (msc != null) { dsc = new com.silverpeas.directory.control.DirectorySessionController(msc, msc.createComponentContext(null, null)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4173/buggy-version/war-core.src.main.java.com.silverpeas.directory.servlets.DirectoryJSONServlet.java", "BodyUseAPI": [], "Fixed commit": "5307ac19d3a4df23d69268d1dc6452d8eb46181d", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2011-04-28T14:48:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classPaths instanceof java.nio.file.Path) { component.addClassPath(((java.nio.file.Path) (classPaths))); }else { for (java.nio.file.Path path : classPaths) { component.addClassPath(path); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5887/buggy-version/gaj-dependency-manager.src.gaj.dependency.manager.components.ComponentFactory.java", "BodyUseAPI": [], "Fixed commit": "3ed4d8bc7d1516a88d848d40ed24155b20deb862", "Url": "https://api.github.com/repos/gaj67/gaj-tools", "Date": "2016-05-06T04:29:15Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { android.os.Bundle bundle = data.getExtras(); java.lang.String prep = bundle.getString(\"myData\"); UpdatePreparation(prep); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4957/buggy-version/app.src.main.java.com.dhakaregency.Item_Check_Fragment_Class.java", "BodyUseAPI": ["android.content.Intent.getExtras()"], "Fixed commit": "1b5ec4eac05bc9e66d1ade55a4df631d7de3cb58", "Url": "https://api.github.com/repos/regAdmin/QuickKOT", "Date": "2016-04-16T10:02:05Z"},
{"Line": "=>993", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.ql.plan.MapredWork.getAliasToWork()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sourceAliasToWork.size()) > 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7854/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.optimizer.GenMapRedUtils.java", "BodyUseAPI": [], "Fixed commit": "4307e8baf3b3401efd8ebef37e8060ed1d9d94c0", "Url": "https://api.github.com/repos/yhuai/hive", "Date": "2013-07-25T21:31:15Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.isOverlappingWithOtherEvent()) { controllers.Application.message = \"OVERLAPPING WITH OTHER EVENT! Overlapping events:\\n\" + (event.getOverlappingEvents()); controllers.Application.addEditEvent((-1), calendarId, name, s_activeDate, controllers.Application.message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5865/buggy-version/calendar.app.controllers.Application.java", "BodyUseAPI": ["models.Event.getOverlappingEvents()"], "Fixed commit": "8e84847041e911a3b3d5f4527d8c6a3997ad72dd", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2011-team1", "Date": "2011-12-14T01:08:26Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Calendar.getEventById(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (event.isOverlappingWithOtherEvent()) { controllers.Application.message = \"OVERLAPPING WITH OTHER EVENT! Overlapping events:\\n\" + (event.getOverlappingEvents()); controllers.Application.addEditEvent((-1), calendarId, name, s_activeDate, controllers.Application.message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5865/buggy-version/calendar.app.controllers.Application.java", "BodyUseAPI": ["models.Event.getOverlappingEvents()"], "Fixed commit": "8e84847041e911a3b3d5f4527d8c6a3997ad72dd", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2011-team1", "Date": "2011-12-14T01:08:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validateDescription(escalationSchemeForm.getDescription()))) { addFieldError(\"description\", getText(\"alert.config.error.250Char\")); return INPUT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7149/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.admin.config.ConfigActionNG.java", "BodyUseAPI": [], "Fixed commit": "e5e3c5c89d3ed3e940b38abfbf73e48649d089ed", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-08-12T12:01:36Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.getGeneratedKeys()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (generatedKeys.first()) { contato.setId(generatedKeys.getLong(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1056/buggy-version/FJ-21.jdbc.src.br.net.du.jdbc.ContatoDAO.java", "BodyUseAPI": ["java.sql.ResultSet.getLong(int)", "br.net.du.jdbc.model.Contato.setId(long)"], "Fixed commit": "9f7af0e07ce475ca10a8ee25fca1d1f7264d2546", "Url": "https://api.github.com/repos/sztokbant/Trainings", "Date": "2012-05-24T03:30:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.getGeneratedKeys()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (generatedKeys.first()) { contato.setId(generatedKeys.getLong(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1056/buggy-version/FJ-21.agenda.src.br.net.du.fj21.agenda.ContatoDAO.java", "BodyUseAPI": ["java.sql.ResultSet.getLong(int)", "br.net.du.fj21.agenda.Contato.setId(long)"], "Fixed commit": "9f7af0e07ce475ca10a8ee25fca1d1f7264d2546", "Url": "https://api.github.com/repos/sztokbant/Trainings", "Date": "2012-05-24T03:30:27Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.getType()) == (java.lang.String.class)) { Comment((\"STRING: \" + (makeFieldDescription(field, annotation)))); }else { Comment(((((((\"START ARRAY : \" + (makeArrayDescription(field, annotation))) + \" OF \") + (field.getType().getComponentType().getSimpleName())) + \" [\") + length) + ']')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5443/buggy-version/src.main.java.com.igormaznitsa.jbbp.utils.JBBPTextWriter.java", "BodyUseAPI": ["com.igormaznitsa.jbbp.utils.JBBPTextWriter.MappedObjectLogger.Comment((\"STRING: \" + (makeFieldDescription(field, annotation))))", "com.igormaznitsa.jbbp.utils.JBBPTextWriter.MappedObjectLogger.makeArrayDescription(java.lang.reflect.Field,com.igormaznitsa.jbbp.mapper.Bin)", "java.lang.Class<?>.getComponentType()", "com.igormaznitsa.jbbp.utils.JBBPTextWriter.MappedObjectLogger.Comment(((((((\"START ARRAY : \" + (makeArrayDescription(field, annotation))) + \" OF \") + (field.getType().getComponentType().getSimpleName())) + \" [\") + length) + ']'))", "java.lang.reflect.Field.getType()", "com.igormaznitsa.jbbp.utils.JBBPTextWriter.MappedObjectLogger.makeFieldDescription(java.lang.reflect.Field,com.igormaznitsa.jbbp.mapper.Bin)", "java.lang.Class<?>.getSimpleName()"], "Fixed commit": "d68be999aa8e2c26526c3465f0e5dd309600907a", "Url": "https://api.github.com/repos/raydac/java-binary-block-parser", "Date": "2015-03-31T17:23:36Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.getType()) == (java.lang.String.class)) { Comment((\"END STRING : \" + (makeArrayDescription(field, annotation)))); }else { Comment((\"END ARRAY : \" + (makeArrayDescription(field, annotation)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5443/buggy-version/src.main.java.com.igormaznitsa.jbbp.utils.JBBPTextWriter.java", "BodyUseAPI": ["com.igormaznitsa.jbbp.utils.JBBPTextWriter.MappedObjectLogger.makeArrayDescription(java.lang.reflect.Field,com.igormaznitsa.jbbp.mapper.Bin)", "com.igormaznitsa.jbbp.utils.JBBPTextWriter.MappedObjectLogger.Comment((\"END STRING : \" + (makeArrayDescription(field, annotation))))", "com.igormaznitsa.jbbp.utils.JBBPTextWriter.MappedObjectLogger.makeArrayDescription(java.lang.reflect.Field,com.igormaznitsa.jbbp.mapper.Bin)", "com.igormaznitsa.jbbp.utils.JBBPTextWriter.MappedObjectLogger.Comment((\"END ARRAY : \" + (makeArrayDescription(field, annotation))))"], "Fixed commit": "d68be999aa8e2c26526c3465f0e5dd309600907a", "Url": "https://api.github.com/repos/raydac/java-binary-block-parser", "Date": "2015-03-31T17:23:36Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tv_email.getText().toString().trim().length()) == 0) { tv_email.setError(getString(R.string.error_mail)); }else if ((tv_password.getText().toString().trim().length()) == 0) { tv_password.setError(getString(R.string.error_password)); }else { login(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3696/buggy-version/app.src.main.java.id.fikri.loginapp.Activities.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setError(getString(R.string.error_mail))"], "Fixed commit": "436f809904548cd70c5e26c39f47ea7af18c8c5f", "Url": "https://api.github.com/repos/FikriFahruRoji/Login-App-Task-3-", "Date": "2016-12-19T07:14:40Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((this.burnTimeRemaining) == 0) && ((this.hasFuelAvailable()) == true)) && ((this.canSmelt()) == true)) { this.burnTimeRemaining += consumeFuelItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1335/buggy-version/src.main.java.fi.dy.masa.enderutilities.tileentity.TileEntityEnderFurnace.java", "BodyUseAPI": [], "Fixed commit": "ca2b934e029fcd44898912c71afc680b32e4bae7", "Url": "https://api.github.com/repos/maruohon/modjam4", "Date": "2014-07-31T16:52:53Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == 401) { cookie.set(null); java.lang.System.err.println(\"Session timed out, will try again on next update\"); }else if (responseCode == 404) { java.lang.System.err.println(((\"No data for service\" + (serviceName)) + \" (yet)\")); cacheProvider.put(new java.util.ArrayList()); configurationPopulated.set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5862/buggy-version/auto-config-client.src.main.java.org.turkisi.config.client.ConfigurationReader.java", "BodyUseAPI": [], "Fixed commit": "569ea35c6a337cb334d536a7df3964172e1e4456", "Url": "https://api.github.com/repos/ajitatif/auto-config-challenge", "Date": "2017-11-15T20:41:41Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.zhanghai.android.materialprogressbar.MaterialProgressBar.getProgressDrawable()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (progressDrawable instanceof me.zhanghai.android.materialprogressbar.DeterminateCircularProgressDrawable) { if (mProgressTintInfo.mHasSecondaryProgressTint) { ((me.zhanghai.android.materialprogressbar.DeterminateCircularProgressDrawable) (progressDrawable)).setSecondaryProgressTintList(mProgressTintInfo.mSecondaryProgressTint); } if (mProgressTintInfo.mHasSecondaryProgressTintMode) { ((me.zhanghai.android.materialprogressbar.DeterminateCircularProgressDrawable) (progressDrawable)).setSecondaryProgressTintMode(mProgressTintInfo.mSecondaryProgressTintMode); } }else { android.graphics.drawable.Drawable target = getTintTargetFromProgressDrawable(progressDrawable, android.R.id.secondaryProgress, false); if (target != null) { applyTintForDrawable(target, mProgressTintInfo.mSecondaryProgressTint, mProgressTintInfo.mHasSecondaryProgressTint, mProgressTintInfo.mSecondaryProgressTintMode, mProgressTintInfo.mHasSecondaryProgressTintMode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5945/buggy-version/library.src.main.java.me.zhanghai.android.materialprogressbar.MaterialProgressBar.java", "BodyUseAPI": ["me.zhanghai.android.materialprogressbar.MaterialProgressBar.getTintTargetFromProgressDrawable(android.graphics.drawable.Drawable,android.R.id.secondaryProgress,boolean)"], "Fixed commit": "d420b2f98501c36c8c66d3ae2be7d022681fc88f", "Url": "https://api.github.com/repos/webmaster128/MaterialProgressBar", "Date": "2017-04-07T14:02:33Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fadeDuration != 0) { this.enableFade = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4777/buggy-version/app.src.main.java.com.holiestar.imageloader.ImageLoaderPro.java", "BodyUseAPI": [], "Fixed commit": "c1db9e6bc3f8145184c63c7df2e0f361690b1906", "Url": "https://api.github.com/repos/SUKI-Huang/android_image_loader_pro", "Date": "2017-03-21T07:17:16Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((box.utils.RaspiPinTools.spi) == null) { box.utils.RaspiPinTools.spi = com.pi4j.io.spi.SpiFactory.getInstance(SpiChannel.CS0, SpiDevice.DEFAULT_SPI_SPEED, SpiDevice.DEFAULT_SPI_MODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/553/buggy-version/src.main.java.box.utils.RaspiPinTools.java", "BodyUseAPI": [], "Fixed commit": "6f493e30e63fe657adb484d000a758d99336eda8", "Url": "https://api.github.com/repos/majchrzamemil/green_house", "Date": "2017-04-15T13:58:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["beaconManager.getBeaconParsers().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 0) { org.altbeacon.beacon.BeaconParser beaconParser = new org.altbeacon.beacon.BeaconParser(); beaconParser.setBeaconLayout(uk.ac.edina.floorplan.MainActivity.BEACON_LAYOUT_FOR_ESTIMOTE); beaconManager.getBeaconParsers().add(beaconParser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1066/buggy-version/app.src.main.java.uk.ac.edina.floorplan.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8aa58fcb57e7d11e3eead318334f65446f4d2cbd", "Url": "https://api.github.com/repos/edina/floorplan-viewer", "Date": "2015-07-22T09:23:08Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mDownloadDispatcher.isAlive())) { mDownloadDispatcher.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7678/buggy-version/downloadmanager.src.main.java.com.media.downloadmanager.DownloadRequestQueue.java", "BodyUseAPI": ["com.media.downloadmanager.DownloadDispatcher.start()"], "Fixed commit": "34cc2f56d9f5649dd28d3ea0dc70bfa8445ae485", "Url": "https://api.github.com/repos/antoyohan/android_downloadmanager", "Date": "2017-01-04T11:53:52Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (team == (SoccerGame.PLAYER_WEST)) { swapLocalArea(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/430/buggy-version/src.main.java.SoccerGame.java", "BodyUseAPI": [], "Fixed commit": "46858cb01f3fbc01fd5b8f5bdce21eb4e400fd87", "Url": "https://api.github.com/repos/grantcooksey/SoccerSimulator", "Date": "2015-09-06T03:46:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (conn != null) { try { conn.close(); } catch (java.sql.SQLException e) { LOG.error(\">>>>>>Error closing connection<<<<<\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7392/buggy-version/src.main.java.com.gopivotal.poc.hh.dao.JdbcPayloadDAO.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "046268665117291e4fc581f9af15a3e0a69f7f38", "Url": "https://api.github.com/repos/cqueiroz-pivotal/poc-hh", "Date": "2014-02-23T15:32:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Location.getExit(Direction)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (exit.isLocked()) message = \"\" + (Text.LOCKED); else { player.setLocation(exit.getLocation()); message = player.getLocation().getDescription(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6378/buggy-version/GameModel.java", "BodyUseAPI": ["Person.setLocation(exit.getLocation())", "Exit.getLocation()"], "Fixed commit": "7360682542655b6da6c4a426b25bf2f618695ffc", "Url": "https://api.github.com/repos/marcushio/EscapeFromHod", "Date": "2017-12-15T23:00:45Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputDirectory == null) || (sourceFile == null)) { m_logger.println((\"Output directory or source file null. This is a programming problem, \" + \"please file a bug report.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4779/buggy-version/src.main.java.com.rm5248.debianpbuilder.CowbuilderHelper.java", "BodyUseAPI": [], "Fixed commit": "2755c762383ed749f326d327f30e3e3cea1d5166", "Url": "https://api.github.com/repos/rm5248/debian-pbuilder", "Date": "2017-01-07T21:56:10Z"},
{"Line": "=>905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldCarrying == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5200/buggy-version/src.main.java.org.mctourney.autoreferee.AutoRefPlayer.java", "BodyUseAPI": [], "Fixed commit": "624039d62451c70baa738763881eedcc3038347d", "Url": "https://api.github.com/repos/rmct/AutoReferee", "Date": "2014-05-13T01:10:04Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tile instanceof democretes.block.generators.TileSpreader) { if ((((democretes.api.macht.IMachtStorage) (tile)).getMachtStored()) > (this.getMachtStored())) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2776/buggy-version/src.democretes.block.generators.TileSpreader.java", "BodyUseAPI": [], "Fixed commit": "f528df649099379f6f7b84668b4162627bc91513", "Url": "https://api.github.com/repos/Democretes/Magitek", "Date": "2014-09-08T21:07:53Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openflexo.toolbox.ToolBox.isMacOS()) { _tree.setSelectionModel(new javax.swing.tree.DefaultTreeSelectionModel() { @java.lang.Override public int[] getSelectionRows() { int[] selectionRows = super.getSelectionRows(); if (selectionRows == null) { return new int[0]; } return selectionRows; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8298/buggy-version/flexodesktop.GUI.flexointerfacebuilder.src.main.java.org.openflexo.fib.view.widget.FIBBrowserWidget.java", "BodyUseAPI": [], "Fixed commit": "fc7954d6ced9ae1b01598f85ed18393717527713", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-01-18T17:52:50Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { getLoaderManager().restartLoader(0, null, this); }else { mPostponedRestart = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2120/buggy-version/app.src.main.java.cz.muni.fi.pv256.movio.uco325253.FilmListFragment.java", "BodyUseAPI": [], "Fixed commit": "d125702a8057953a9817a3acb83efb9800c5c622", "Url": "https://api.github.com/repos/Drekorian/pv256", "Date": "2016-01-31T23:46:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recordingItem) != null) { java.util.Iterator<logdruid.data.record.RecordingItem> rIIte = recordingItem.iterator(); top100Index = -1; int count = 0; while ((rIIte.hasNext()) && ((top100Index) == (-1))) { if (rIIte.next().getProcessingType().equals(\"top100\")) { top100Index = count; } count++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/403/buggy-version/src.logdruid.data.record.ReportRecording.java", "BodyUseAPI": [], "Fixed commit": "afaf9f1185a13335879e639e8373076ef07e069d", "Url": "https://api.github.com/repos/fvalente/LogDruid", "Date": "2015-10-02T11:40:21Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (multiValue.isSet()) { builder = builder.multiValue(multiValue.value()); }else { builder = builder.multiValue(java.util.Collections.singletonMap(org.graylog2.plugin.lookup.LookupResult.SINGLE_VALUE_KEY, singleValue.value())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7128/buggy-version/graylog2-server.src.main.java.org.graylog2.plugin.lookup.LookupResult.java", "BodyUseAPI": ["org.graylog2.lookup.LookupDefaultMultiValue.value()", "org.graylog2.plugin.lookup.LookupResult.Builder.multiValue(multiValue.value())"], "Fixed commit": "f9c5df46055c0fad0cf440c052e3c885a683b5ff", "Url": "https://api.github.com/repos/Graylog2/graylog2-server", "Date": "2017-06-21T11:12:00Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timestamp < (java.lang.Integer.MAX_VALUE)) { timestamp *= 1000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8326/buggy-version/src.org.traccar.protocol.OsmAndProtocolDecoder.java", "BodyUseAPI": [], "Fixed commit": "64cfb89dcd87280559ec6d5867c8f309b9df4181", "Url": "https://api.github.com/repos/jorgejimenez88/traccar", "Date": "2015-09-12T22:53:00Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token.startsWith(\"'\")) && (token.endsWith(\"'\"))) { return token; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5283/buggy-version/flyway-core.src.main.java.org.flywaydb.core.internal.dbsupport.oracle.OracleSqlStatementBuilder.java", "BodyUseAPI": [], "Fixed commit": "8716287a917e6108128679b603b265771204b0bd", "Url": "https://api.github.com/repos/cdedie/flyway", "Date": "2015-09-18T07:11:04Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) || (value.isEmpty())) { throw new org.wso2.carbon.dataservices.core.DataServiceFault(\"Empty string or null value was found as timeStamp.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1627/buggy-version/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBUtils.java", "BodyUseAPI": [], "Fixed commit": "8ce403d5818e55a137dddcf7e4d3478400d0cf0e", "Url": "https://api.github.com/repos/wso2/carbon-data", "Date": "2015-08-28T12:51:40Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) || (value.isEmpty())) { throw new org.wso2.carbon.dataservices.core.DataServiceFault(\"Empty string or null value was found as time.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1627/buggy-version/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBUtils.java", "BodyUseAPI": [], "Fixed commit": "8ce403d5818e55a137dddcf7e4d3478400d0cf0e", "Url": "https://api.github.com/repos/wso2/carbon-data", "Date": "2015-08-28T12:51:40Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dmulloy2.ultimatearena.UltimateArena.getArena(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((a.getGameMode()) == (Arena.Mode.STOPPING)) { player.sendMessage(((prefix) + (net.dmulloy2.ultimatearena.util.FormatUtil.format(\"&cThis arena is currently stopping\")))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8726/buggy-version/src.main.java.net.dmulloy2.ultimatearena.UltimateArena.java", "BodyUseAPI": [], "Fixed commit": "cd12e2f51d200986f1d44f5e640987c50cf8974f", "Url": "https://api.github.com/repos/MineSworn/UltimateArena", "Date": "2013-10-23T00:49:07Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(DiskType.SWAP_DISK.getType().equals(disk.getDiskType()))) volumns.add(disk.getDeviceName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/278/buggy-version/server.dal.src.main.java.com.vmware.bdd.entity.NodeEntity.java", "BodyUseAPI": ["com.vmware.bdd.entity.DiskEntity.getDeviceName()", "java.util.List<java.lang.String>.add(disk.getDeviceName())"], "Fixed commit": "97e9299336b6712957de363093d7854e58cc95fa", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-04-24T14:55:11Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (side != 1) { return te.replacingBlock.getIcon(blockAccess, x, y, z, side); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4168/buggy-version/src.main.java.magiciansartifice.main.core.utils.textureutils.MerlinsCircleTextureHelper.java", "BodyUseAPI": ["te.replacingBlock.getIcon(net.minecraft.world.IBlockAccess,int,int,int,int)"], "Fixed commit": "b96662ba5cab305e22405722789ccfe8a69c9ed8", "Url": "https://api.github.com/repos/MagiciansArtificeTeam/Magicians-Artifice", "Date": "2014-10-09T05:13:54Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (json.has(\"lastName\")) { this.lastName = json.getString(\"lastName\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6881/buggy-version/src.main.java.eu.organicity.accounts.permissions.UserIdentifier.java", "BodyUseAPI": [], "Fixed commit": "40aa68d937320b3d16282c7bb63ea0ed8e28399b", "Url": "https://api.github.com/repos/OrganicityEu/accounts-permissions", "Date": "2017-03-03T14:45:58Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (json.has(\"email\")) { this.email = json.getString(\"email\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6881/buggy-version/src.main.java.eu.organicity.accounts.permissions.UserIdentifier.java", "BodyUseAPI": [], "Fixed commit": "40aa68d937320b3d16282c7bb63ea0ed8e28399b", "Url": "https://api.github.com/repos/OrganicityEu/accounts-permissions", "Date": "2017-03-03T14:45:58Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (json.has(\"firstName\")) { this.firstName = json.getString(\"firstName\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6881/buggy-version/src.main.java.eu.organicity.accounts.permissions.UserIdentifier.java", "BodyUseAPI": [], "Fixed commit": "40aa68d937320b3d16282c7bb63ea0ed8e28399b", "Url": "https://api.github.com/repos/OrganicityEu/accounts-permissions", "Date": "2017-03-03T14:45:58Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (json.has(\"username\")) { this.name = json.getString(\"username\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6881/buggy-version/src.main.java.eu.organicity.accounts.permissions.UserIdentifier.java", "BodyUseAPI": [], "Fixed commit": "40aa68d937320b3d16282c7bb63ea0ed8e28399b", "Url": "https://api.github.com/repos/OrganicityEu/accounts-permissions", "Date": "2017-03-03T14:45:58Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (json.has(\"id\")) { this.id = json.getString(\"id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6881/buggy-version/src.main.java.eu.organicity.accounts.permissions.UserIdentifier.java", "BodyUseAPI": [], "Fixed commit": "40aa68d937320b3d16282c7bb63ea0ed8e28399b", "Url": "https://api.github.com/repos/OrganicityEu/accounts-permissions", "Date": "2017-03-03T14:45:58Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(child.startsWith(this.lockName))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6597/buggy-version/cn.src.main.java.org.cloudname.zk.ZkCloudnameLock.java", "BodyUseAPI": [], "Fixed commit": "e987110133d1bb41e5628892d976c93e04187b4f", "Url": "https://api.github.com/repos/vlarsen/cloudname", "Date": "2012-10-26T10:26:29Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((base == null) || (path == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1050/buggy-version/src.com.connectsdk.service.DLNAService.java", "BodyUseAPI": [], "Fixed commit": "0e44319a2408b68d72d23f08531b496da8e9558c", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-Core", "Date": "2015-05-30T00:43:37Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.jClipCorn.database.databaseElement.CCDatabaseElement.getMovieListPosition()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (row > 0) model.fireTableRowsUpdated(row, row);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4749/buggy-version/src.de.jClipCorn.gui.frames.mainFrame.clipTable.ClipTable.java", "BodyUseAPI": ["de.jClipCorn.gui.frames.mainFrame.clipTable.ClipTableModel.fireTableRowsUpdated(int,int)"], "Fixed commit": "6a89200014df6f9ddc12194249008be534fec0ee", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2014-02-27T16:11:40Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((misc.Globals.getPlayer()) != null) { _spriteBatch.begin(); misc.Globals.getPlayer().render(_spriteBatch); _spriteBatch.end(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4842/buggy-version/core.src.screen.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "ab5a1ee9cf4e8ee7ea254e6c5c62a1af0c6db505", "Url": "https://api.github.com/repos/alexschimpf/Collector", "Date": "2015-08-26T09:02:30Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((projectIdsToDissociate != null) && ((projectIdsToDissociate.length) > 0)) { for (java.lang.String projectId : projectIdsToDissociate) { java.util.Set<java.lang.String> vNASSet = new java.util.HashSet<java.lang.String>(); vNASSet.add(nasIds); com.emc.storageos.model.project.VirtualNasParam vNasParam = new com.emc.storageos.model.project.VirtualNasParam(); vNasParam.setVnasServers(vNASSet); util.BourneUtil.getViprClient().virtualNasServers().unassignVnasServers(uri(projectId), vNasParam); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4269/buggy-version/vipr-portal.portal.app.controllers.arrays.StorageSystems.java", "BodyUseAPI": [], "Fixed commit": "187e590ceaba22bc0dcde5ce9e567e302ae2162d", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-08T12:11:11Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fadeOut) != null) { fadeOut.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8400/buggy-version/Client.src.main.java.slideShow.Slideshow.java", "BodyUseAPI": [], "Fixed commit": "f27ffa40235a1fbafd8e9a6f43c17258743762de", "Url": "https://api.github.com/repos/tobiastry/Photoapp", "Date": "2013-12-09T11:14:38Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (response != null) { register = response.getSession().createRequest(response.getRequest().getMethod()); }else { register = sipFactory.createRequest(application, \"REGISTER\", aor, aor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6851/buggy-version/restcomm.core.src.main.java.org.mobicents.servlet.sip.restcomm.callmanager.gateway.SipGatewayManager.java", "BodyUseAPI": ["javax.servlet.sip.SipServletResponse.getRequest()", "response.getSession().createRequest(response.getRequest().getMethod())", "javax.servlet.sip.SipServletResponse.getSession()", "response.getRequest().getMethod()"], "Fixed commit": "d2bb1464a8ad0fae84fbb71dfa123958b3c81b13", "Url": "https://api.github.com/repos/Mobicents/RestComm", "Date": "2012-06-14T07:07:56Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((herciHSLayoutFileName) != null) properties.setProperty(\"herciHSLayoutFileName\", herciHSLayoutFileName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7918/buggy-version/src.common.Spacecraft.java", "BodyUseAPI": [], "Fixed commit": "1ba5f747a653b93e59f3f072870058268b0be391", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2015-11-29T03:53:07Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((is != null) && ((is.stackSize) > 0)) java.lang.System.err.println(\"QuarryPlus WARN: call setInventorySlotContents with non null ItemStack.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4594/buggy-version/src.main.java.com.yogpc.qp.TileBasic.java", "BodyUseAPI": [], "Fixed commit": "44602237e5898f84a446fef35d7d021a4ae2996d", "Url": "https://api.github.com/repos/yogpstop/QuarryPlus", "Date": "2014-09-26T12:23:11Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (silent) return null; else throw new java.lang.RuntimeException(\"Unable to load account\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1218/buggy-version/ServerCore.src.main.java.au.com.addstar.rcon.server.RconServer.java", "BodyUseAPI": [], "Fixed commit": "75f9c0e0951f15cee1ef7b5c560d909ad7e189f7", "Url": "https://api.github.com/repos/Schmoller/RemoteConsole", "Date": "2014-10-02T01:03:47Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retryCount > (com.likya.tlos.TlosRemoteManager.retryCountMax)) { java.lang.System.out.println(com.likya.tlos.utils.LocaleMessages.getString(\"TlosRemoteManager.xx\")); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2922/buggy-version/tloslite.src.com.likya.tlos.TlosRemoteManager.java", "BodyUseAPI": [], "Fixed commit": "3a79fbdf71cc088a1dbf100b578c6b74186773bd", "Url": "https://api.github.com/repos/likyateknoloji/tloslite", "Date": "2017-01-01T19:50:58Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sortedTargetFile.exists()) sortedTargetFile.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/854/buggy-version/src.main.java.com.github.wcvolcano.common.file.sort2.FileSort2.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "1a204cb21d43e6809eaa5b117f624c88e01a670c", "Url": "https://api.github.com/repos/wcvolcano/common", "Date": "2017-04-01T08:43:45Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextPage.endsWith(\".html\")) { javax.servlet.RequestDispatcher d = request.getRequestDispatcher((\"WEB-INF/\" + nextPage)); d.forward(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8561/buggy-version/src.controller.Controller.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getRequestDispatcher(java.lang.String)"], "Fixed commit": "958bd3d2f04b17eea79b6c46e1fadf01803ca89a", "Url": "https://api.github.com/repos/zadbee/GoTechTask15", "Date": "2014-06-05T05:23:48Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fr.insapp.insapp.activities.MainActivity.customTabsConnection) != null) { this.unbindService(fr.insapp.insapp.activities.MainActivity.customTabsConnection); fr.insapp.insapp.activities.MainActivity.customTabsConnection = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2562/buggy-version/app.src.main.java.fr.insapp.insapp.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1f7af665a4223ef2cf9f37aa29da1b0dd3a22f29", "Url": "https://api.github.com/repos/thomas-bouvier/insapp-android", "Date": "2017-10-08T00:05:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (loc != null) { displayGPSDetails(loc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4533/buggy-version/src.com.example.gpslogger.MainActivity.java", "BodyUseAPI": ["com.example.gpslogger.MainActivity.displayGPSDetails(android.location.Location)"], "Fixed commit": "107d4f73221ff348ade2facec0915478cfe94fb1", "Url": "https://api.github.com/repos/rdeguzman/android-gpslogger", "Date": "2013-09-24T21:20:02Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.subutai.core.identity.api.IdentityManager.getUserToken(user.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userToken == null) { userToken = identityManager.createUserToken(user, null, null, null, TokenType.SESSION.getId(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3507/buggy-version/management.server.core.hub-manager.hub-manager-impl.src.main.java.io.subutai.core.hubmanager.impl.processor.EnvironmentUserHelper.java", "BodyUseAPI": [], "Fixed commit": "e93301889c884c1b4fc02ba62118fa152432803d", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2017-04-21T12:08:31Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLine.length()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5446/buggy-version/src.main.java.de.prob2.ui.consoles.groovy.codecompletion.GroovyCodeCompletionHandler.java", "BodyUseAPI": [], "Fixed commit": "91a87903e41b15b64d9b97509d962ba63a9d16ad", "Url": "https://api.github.com/repos/bendisposto/prob2-ui", "Date": "2017-02-21T12:53:20Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5626/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "1d747ff3bc6ec23cce6dfa5e3af5f5de8bd74e77", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-20T19:36:36Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((n <= 0) || (trials <= 0)) throw new java.lang.IllegalArgumentException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/541/buggy-version/PercolationStats.java", "BodyUseAPI": [], "Fixed commit": "010fa8e34ff623190600b8b1ed5ee85b232436eb", "Url": "https://api.github.com/repos/danghuutoan/Percolation", "Date": "2017-05-30T21:11:39Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((repoInfo.isSplitPhresco()) || (repoInfo.isSplitTest())) { alwaysPom = new java.io.File(baseDir, appInfo.getAppDirName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5915/buggy-version/phresco-framework-impl.src.main.java.com.photon.phresco.framework.impl.SCMManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "eb4626ae4fd1ea8b019a5649b85fbd18b4cb1f7d", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-02-08T12:34:33Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.photon.phresco.framework.impl.POM_XML.equals(pomFileName))) { updatePom(alwaysPom, srcUrl, srcType, com.photon.phresco.framework.impl.POM_XML, appPomProcessor, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5915/buggy-version/phresco-framework-impl.src.main.java.com.photon.phresco.framework.impl.SCMManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "eb4626ae4fd1ea8b019a5649b85fbd18b4cb1f7d", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-02-08T12:34:33Z"},
{"Line": "=>1693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isNotEmpty(phrescoRepoUrl)) || (org.apache.commons.lang.StringUtils.isNotEmpty(testRepoUrl))) { pomProcessor.setProperty(Constants.POM_PROP_KEY_SPLIT_SRC_DIR, appDirName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5915/buggy-version/phresco-framework-impl.src.main.java.com.photon.phresco.framework.impl.SCMManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "eb4626ae4fd1ea8b019a5649b85fbd18b4cb1f7d", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-02-08T12:34:33Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tdl.vireo.model.repo.OrganizationRepo.findOne(java.lang.Long)", "org.tdl.vireo.model.repo.WorkflowStepRepo.findOne(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(requestingOrganization.getId().equals(workflowStep.getOriginatingOrganization().getId()))) { workflowStep = workflowStepRepo.update(workflowStep, requestingOrganization); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/9083/buggy-version/src.main.java.org.tdl.vireo.controller.WorkflowStepController.java", "BodyUseAPI": ["org.tdl.vireo.model.repo.WorkflowStepRepo.update(org.tdl.vireo.model.WorkflowStep,org.tdl.vireo.model.Organization)"], "Fixed commit": "9367b320a4e6c8044dfa162d98672d09c5ffb23f", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2016-06-22T17:40:12Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value != null) { java.lang.String[] args = value.split(\",\"); for (java.lang.String arg : args) { col.add(net.sf.xapp.marshalling.stringserializers.StringMapSerializer.convert(parameterizedType.getActualTypeArguments()[0], arg)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6801/buggy-version/xapp-domain.src.main.java.net.sf.xapp.marshalling.stringserializers.StringMapSerializer.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "51e32ebb540be2863224a89a22ade8f82f31a6da", "Url": "https://api.github.com/repos/davew1977/xapp", "Date": "2015-12-11T08:02:54Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCasEnabled()) { url = this.getCas().getLogoutUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8325/buggy-version/core.modules.boot.src.main.java.org.onetwo.boot.module.security.BootSecurityConfig.java", "BodyUseAPI": [], "Fixed commit": "cc125f2f4f3977f9eba0d5759af08efc9e1b1456", "Url": "https://api.github.com/repos/wayshall/onetwo", "Date": "2017-09-20T02:42:23Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.name) != null) { this.name = this.name.replace(target, replacement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7427/buggy-version/src.main.java.varcode.java.model._package.java", "BodyUseAPI": [], "Fixed commit": "23af2a7ad1b78b78b56553e154e8a0c14fbbff5a", "Url": "https://api.github.com/repos/edefazio/varcode", "Date": "2016-10-29T12:06:15Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreNextMouseEvent) { ignoreNextMouseEvent = false; }else if ((!(popup.isEnabled())) && (!(ignoreNextMouseEvent))) { selectedItem = null; vTimeline.setSelectedIndex((-1)); int[] bounds = thumbnails.getBounds(); if (((((mouseX) > (bounds[0])) && ((mouseX) < (bounds[2]))) && ((mouseY) > (bounds[1]))) && ((mouseY) < (bounds[3]))) { thumbnails.selectImage(mouseX, mouseY); vTimeline.receiveSelectedItems(thumbnails.returnSelectedItems()); cbU.setTimeLinePageIndex(vTimeline.getCurPageStamps()); cbU.setSlideShowTime(vTimeline.getTotalTime()); }else { bounds = visualTimeline.bounds; if (((((mouseX) > (bounds[0])) && ((mouseX) < (bounds[2]))) && ((mouseY) > (bounds[1]))) && ((mouseY) < (bounds[3]))) { selectedItemIndex = vTimeline.getTimelineIndex(mouseX, mouseY); vTimeline.setSelectedIndex(selectedItemIndex); selectedItem = vTimeline.getItemAt(selectedItemIndex); java.lang.Integer[] tmp = vTimeline.getItemTimeStamps(selectedItemIndex); if (tmp != null) { visualOffset = tmp[0]; } } } cbU.showCaptionButton(((selectedItem) != null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7542/buggy-version/src.quickshow.Quickshow.java", "BodyUseAPI": [], "Fixed commit": "8b7a3d83bec4b2eb2eecf630651854a15ede0198", "Url": "https://api.github.com/repos/darthyoshi/quickshow", "Date": "2014-12-09T01:51:30Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (finished) { throw new org.jsonbuddy.parse.JsonParseException(\"JsonString not closed. Expected \\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3763/buggy-version/src.main.java.org.jsonbuddy.parse.JsonParser.java", "BodyUseAPI": [], "Fixed commit": "fed71a2afe89e9a36ed71ba72963eda23d867f55", "Url": "https://api.github.com/repos/anders88/jsonbuddy", "Date": "2015-10-29T22:59:03Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.grosner.dbflow.config.FlowLog.isEnabled(FlowLog.Level.I)) { com.grosner.dbflow.config.FlowLog.log(FlowLog.Level.I, (((\"Size is \" + (mQueue.size())) + \" executing \") + (transaction.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7205/buggy-version/src.main.java.com.grosner.dbflow.runtime.DBTransactionQueue.java", "BodyUseAPI": [], "Fixed commit": "6b15b0d89d8c07a21ddeeabf47a8048aed82c90f", "Url": "https://api.github.com/repos/agrosner/DBFlow", "Date": "2014-09-23T18:29:13Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getItem()) == null) | ((event.getSpawner()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6150/buggy-version/src.com.mrmag518.SpawnerGUI.Main.java", "BodyUseAPI": [], "Fixed commit": "22c42dcda09c14d48339d29ea19cae59521fd50b", "Url": "https://api.github.com/repos/mrmag518/SpawnerGUI", "Date": "2014-05-03T18:12:38Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5404/buggy-version/src.main.java.org.datastoredetector.nosqlextractor.impl.NoSQLExtractorImpl.java", "BodyUseAPI": [], "Fixed commit": "a1da5b4f595ee4386b4257bf72afe97dc35270fc", "Url": "https://api.github.com/repos/seiyak/Datastore-Detector", "Date": "2012-04-26T20:22:17Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mc.player.getEntityWorld().provider.getDimensionType()", "net.minecraft.world.DimensionType.getById(mc.player.dimension)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newDimension != currentDimension) { if (currentDimension == (net.tropicraft.core.common.dimension.TropicsDimensionUtils.TROPICS_DIMENSION_TYPE)) event.setGui(new net.tropicraft.core.client.gui.LeaveTropicsGuiScreen()); else if (newDimension == (net.tropicraft.core.common.dimension.TropicsDimensionUtils.TROPICS_DIMENSION_TYPE)) event.setGui(new net.tropicraft.core.client.gui.EnterTropicsGuiScreen()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7831/buggy-version/src.main.java.net.tropicraft.core.common.event.MiscEvents.java", "BodyUseAPI": [], "Fixed commit": "162b09c5556c943541f1efb1cb9e2c8574e295c6", "Url": "https://api.github.com/repos/cbaakman/Tropicraft", "Date": "2017-03-05T20:49:04Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sel.index) == (-1)) { sel.attachChoice(this.getQuestion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1259/buggy-version/core.src.org.javarosa.form.api.FormEntryPrompt.java", "BodyUseAPI": ["org.javarosa.core.model.data.helper.Selection.attachChoice(org.javarosa.core.model.QuestionDef)"], "Fixed commit": "d6e97461123e9b81c10002cc607993bcb4814474", "Url": "https://api.github.com/repos/opendatakit/javarosa", "Date": "2010-11-10T21:22:28Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sel.index) == (-1)) { sel.attachChoice(this.getQuestion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1259/buggy-version/core.src.org.javarosa.form.api.FormEntryPrompt.java", "BodyUseAPI": ["org.javarosa.core.model.data.helper.Selection.attachChoice(org.javarosa.core.model.QuestionDef)"], "Fixed commit": "d6e97461123e9b81c10002cc607993bcb4814474", "Url": "https://api.github.com/repos/opendatakit/javarosa", "Date": "2010-11-10T21:22:28Z"},
{"Line": "=>756", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.grails.datastore.gorm.query.transform.DetachedCriteriaTransformer.getPropertyType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(isDomainClass(type))) { org.grails.datastore.gorm.query.transform.ClassNode associationTypeFromGenerics = getAssociationTypeFromGenerics(type); if (associationTypeFromGenerics != null) { type = associationTypeFromGenerics; associationPropertyNames = getPropertyNamesForAssociation(associationTypeFromGenerics); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7584/buggy-version/grails-datastore-gorm.src.main.groovy.org.grails.datastore.gorm.query.transform.DetachedCriteriaTransformer.java", "BodyUseAPI": ["org.grails.datastore.gorm.query.transform.DetachedCriteriaTransformer.getAssociationTypeFromGenerics(org.grails.datastore.gorm.query.transform.ClassNode)"], "Fixed commit": "da903c5a70348c2695622fa2351cf0061e925157", "Url": "https://api.github.com/repos/SpringSource/grails-data-mapping", "Date": "2011-09-16T11:06:37Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((time == null) || (time == \"\")) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2916/buggy-version/src.sjsu.cmpe273.client.util.DateFormatConverter.java", "BodyUseAPI": [], "Fixed commit": "3ee77c06933c8fe4d4ac7b7f7ba0315cf854bd79", "Url": "https://api.github.com/repos/amoljmane/AirlineManagementClient", "Date": "2013-12-08T03:13:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p < 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1543/buggy-version/app.src.main.java.com.weebley.jeco42.quarto.gameLogic.java", "BodyUseAPI": [], "Fixed commit": "14efb9f1433779956651221bd815bc2a30834a43", "Url": "https://api.github.com/repos/jeco42/Quarto", "Date": "2015-04-17T00:42:55Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) type = com.wolvencraft.prison.mines.util.constants.DisplaySignType.Display;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7519/buggy-version/src.com.wolvencraft.prison.mines.mine.DisplaySign.java", "BodyUseAPI": [], "Fixed commit": "507d8447838e90d0c065492793addd9bca6bc767", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-04-20T19:49:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["by.vshkl.bashq.network.NetworkRepository.2.parseQuote(org.jsoup.nodes.Element)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((quote.getId()) != null) { quotes.add(parseQuote(quoteElement)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7447/buggy-version/app.src.main.java.by.vshkl.bashq.network.NetworkRepository.java", "BodyUseAPI": [], "Fixed commit": "1b86860665fcc7bbf6ab75b82bcda9b5c361dce0", "Url": "https://api.github.com/repos/vshkl/BashQ", "Date": "2016-11-01T13:18:19Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.equals(socket))) { dos_new = new java.io.DataOutputStream(s.getOutputStream()); dos_new.writeUTF((((strName[1]) + \"\u8bf4\uff1a\") + userInput)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/9218/buggy-version/ChatRoom.src.com.socket.MultiServer.java", "BodyUseAPI": ["java.net.Socket.getOutputStream()"], "Fixed commit": "e832f330e08611fa12ba0de257fd20dd65448d4b", "Url": "https://api.github.com/repos/BinWone/Training-Java", "Date": "2016-10-16T08:42:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((((java.lang.Math.random()) < odds) && (stack != null)) && ((stack.getItem()) != (net.darkhax.moreswords.item.SwordItems.swordAdmin))) entity.setCurrentItemOrArmor(0, stack);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4282/buggy-version/src.main.java.net.darkhax.moreswords.handler.MobHandler.java", "BodyUseAPI": ["net.minecraft.entity.EntityLiving.setCurrentItemOrArmor(int,net.minecraft.item.ItemStack)"], "Fixed commit": "6d605330652fbbba714c425acac237a468eed2a9", "Url": "https://api.github.com/repos/Darkhax-Minecraft/More-Swords-3", "Date": "2014-08-27T15:01:59Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pullRefreshEnabled) && ((mRefreshHeader) != null)) && (mRefreshHeader.isRefreshing())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5567/buggy-version/app.src.main.java.com.dean.articlecomment.xrecycleview.XRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "2a489f3428f17ca81b606709ed87af6e67e58fc6", "Url": "https://api.github.com/repos/a396901990/Article-Comment", "Date": "2016-08-30T10:34:23Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.catapult.app.example.beans.CallEvents>.get(event.getProperty(\"callId\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (callEvents != null) { callEvents.addEvent(event); }else { com.catapult.app.example.services.CallbackServices.LOG.error(java.text.MessageFormat.format((\"Could not find the call events mapped for userName [{0}] \" + \"and call [{1}]\"), userName, event.getProperty(\"callId\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/837/buggy-version/src.main.java.com.catapult.app.example.services.CallbackServices.java", "BodyUseAPI": ["com.catapult.app.example.beans.CallEvents.addEvent(com.bandwidth.sdk.model.events.Event)"], "Fixed commit": "a4fe3deb371678a0ae90edff89d897401d252d95", "Url": "https://api.github.com/repos/Bandwidth/java-reference-app-voice", "Date": "2015-04-15T20:38:49Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.catapult.app.example.beans.CallEvents>.get(event.getProperty(\"callId\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (callEvents != null) { callEvents.addEvent(event); }else { com.catapult.app.example.services.CallbackServices.LOG.error(java.text.MessageFormat.format((\"Could not find the call events mapped for userName [{0}] \" + \"and call [{1}]\"), userName, event.getProperty(\"callId\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/837/buggy-version/src.main.java.com.catapult.app.example.services.CallbackServices.java", "BodyUseAPI": ["com.catapult.app.example.beans.CallEvents.addEvent(com.bandwidth.sdk.model.events.Event)"], "Fixed commit": "a4fe3deb371678a0ae90edff89d897401d252d95", "Url": "https://api.github.com/repos/Bandwidth/java-reference-app-voice", "Date": "2015-04-15T20:38:49Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openVertex.isPlanDone()) { view.getCalculationsPanel().initPanel(); return newTab; }else if (newTab != (NodeEditorView.DESCRIPTION)) { return oldTab; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3428/buggy-version/src.edu.asu.laits.gui.nodeeditor.CoachedModeNodeEditorController.java", "BodyUseAPI": [], "Fixed commit": "83188c40c319e3398df2c5c04595bdb92ea13fe3", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-09-19T22:47:14Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((openVertex.isPlanDone()) && (newTab == (NodeEditorView.CALCULATIONS))) { return newTab; }else if ((!(openVertex.isPlanDone())) && (newTab == (NodeEditorView.CALCULATIONS))) { return oldTab; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3428/buggy-version/src.edu.asu.laits.gui.nodeeditor.CoachedModeNodeEditorController.java", "BodyUseAPI": ["edu.asu.laits.model.Vertex.isPlanDone()"], "Fixed commit": "83188c40c319e3398df2c5c04595bdb92ea13fe3", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-09-19T22:47:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((view.getTabbedPane().getSelectedIndex()) == (NodeEditorView.PLAN)) { view.getCheckButton().setEnabled(false); }else if ((view.getTabbedPane().getSelectedIndex()) == (NodeEditorView.DESCRIPTION)) { if (openVertex.isDescriptionDone()) { view.getCheckButton().setEnabled(false); }else { view.getCheckButton().setEnabled(true); } }else if ((view.getTabbedPane().getSelectedIndex()) == (NodeEditorView.CALCULATIONS)) { if (openVertex.isCalculationsDone()) { view.getCheckButton().setEnabled(false); }else { view.getCheckButton().setEnabled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3428/buggy-version/src.edu.asu.laits.gui.nodeeditor.CoachedModeNodeEditorController.java", "BodyUseAPI": ["edu.asu.laits.gui.nodeeditor.NodeEditorView.getCheckButton()", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getCheckButton()", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getCheckButton()", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getTabbedPane()", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getCheckButton()", "view.getCheckButton().setEnabled(boolean)", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getCheckButton()", "view.getCheckButton().setEnabled(boolean)", "view.getCheckButton().setEnabled(boolean)", "view.getCheckButton().setEnabled(boolean)", "view.getTabbedPane().getSelectedIndex()", "edu.asu.laits.gui.nodeeditor.NodeEditorView.getTabbedPane()", "view.getTabbedPane().getSelectedIndex()", "view.getCheckButton().setEnabled(boolean)"], "Fixed commit": "83188c40c319e3398df2c5c04595bdb92ea13fe3", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-09-19T22:47:14Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempavailableLanguages != null) { if (!(availableLanguages.isEmpty())) { ttsLanguage = availableLanguages.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/977/buggy-version/Android.src.org.droidplanner.android.notifications.TTSNotificationProvider.java", "BodyUseAPI": [], "Fixed commit": "42cb4812c67d0961f6f9a4632d8a84af3f6d3aa4", "Url": "https://api.github.com/repos/zack1007x2/Tower", "Date": "2015-11-16T03:49:46Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ve.com.abicelis.pingwidget.util.SharedPreferencesHelper.readPingWidgetData(mAppContext.getApplicationContext(),int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (data != null) { data.getPingTimes().addLast(values[0]); if ((data.getPingTimes().size()) > (data.getMaxPings())) data.getPingTimes().removeFirst(); ve.com.abicelis.pingwidget.util.SharedPreferencesHelper.writePingWidgetData(mAppContext.getApplicationContext(), mWidgetId, data); updateWidget(data.getPingTimes(), data.getMaxPings(), data.getChartLineColor()); }else { cancel(true); android.util.Log.d(ve.com.abicelis.pingwidget.service.PingAsyncTask.TAG, ((\"Widget \" + (mWidgetId)) + \" seems gone.. Canceling PingAsyncTask\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5903/buggy-version/app.src.main.java.ve.com.abicelis.pingwidget.service.PingAsyncTask.java", "BodyUseAPI": ["ve.com.abicelis.pingwidget.model.PingWidgetData.getPingTimes()", "ve.com.abicelis.pingwidget.model.PingWidgetData.getPingTimes()", "ve.com.abicelis.pingwidget.model.PingWidgetData.getPingTimes()", "ve.com.abicelis.pingwidget.service.PingAsyncTask.updateWidget(data.getPingTimes(),data.getMaxPings(),data.getChartLineColor())", "data.getPingTimes().addLast(java.lang.Float)", "data.getPingTimes().size()", "data.getPingTimes().removeFirst()", "ve.com.abicelis.pingwidget.model.PingWidgetData.getPingTimes()", "ve.com.abicelis.pingwidget.model.PingWidgetData.getChartLineColor()", "ve.com.abicelis.pingwidget.model.PingWidgetData.getMaxPings()", "ve.com.abicelis.pingwidget.util.SharedPreferencesHelper.writePingWidgetData(mAppContext.getApplicationContext(),int,ve.com.abicelis.pingwidget.model.PingWidgetData)", "ve.com.abicelis.pingwidget.model.PingWidgetData.getMaxPings()"], "Fixed commit": "57ccdd210878e12746d95325fa69333161f70884", "Url": "https://api.github.com/repos/abicelis/PingWidget", "Date": "2017-02-11T04:51:57Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((curTok.charAt(37)) != '<') { phonenum = curTok.substring(37, 41); }else { phonenum = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1504/buggy-version/GrinnellDirectory.src.edu.grinnell.appdev.grinnelldirectory.RequestTask.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "17974de6e2a9c112121bd2ccb51949001d8df8dc", "Url": "https://api.github.com/repos/GrinnellAppDev/Grinnell-DB-Android", "Date": "2013-12-12T02:25:53Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((curTok.charAt(0)) == ' ') { campusaddress = curTok.substring(0, curTok.indexOf(\"</TD>\")); }else { campusaddress = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1504/buggy-version/GrinnellDirectory.src.edu.grinnell.appdev.grinnelldirectory.RequestTask.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "17974de6e2a9c112121bd2ccb51949001d8df8dc", "Url": "https://api.github.com/repos/GrinnellAppDev/Grinnell-DB-Android", "Date": "2013-12-12T02:25:53Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(curTok.contains(\"&nbsp\"))) { username = curTok.substring(53, curTok.indexOf('@')); }else { username = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1504/buggy-version/GrinnellDirectory.src.edu.grinnell.appdev.grinnelldirectory.RequestTask.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)"], "Fixed commit": "17974de6e2a9c112121bd2ccb51949001d8df8dc", "Url": "https://api.github.com/repos/GrinnellAppDev/Grinnell-DB-Android", "Date": "2013-12-12T02:25:53Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((location.getFaxNumber()) == 0) { preparedStatement.setLong(11, location.getFaxNumber()); }else { preparedStatement.setNull(11, java.sql.Types.BIGINT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1987/buggy-version/src.dao.LocationDAO.java", "BodyUseAPI": ["common.Location.getFaxNumber()", "java.sql.PreparedStatement.setLong(int,location.getFaxNumber())"], "Fixed commit": "defda3a09806bf19079a581db9458ab78649cc74", "Url": "https://api.github.com/repos/darshandpatel/Psych_Server", "Date": "2016-11-10T18:11:57Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rs.isFirst()) { java.lang.System.out.println(\"OOOOk!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3837/buggy-version/src.com.fourgenius.www.public_access.user.login.Jf_user_login.java", "BodyUseAPI": [], "Fixed commit": "60154670c2aa8cdfcae7b4bea6443516de96b849", "Url": "https://api.github.com/repos/fourGenius/xyzzyx_deepalsuranga", "Date": "2016-01-11T17:02:38Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mToast) != null) { mToast.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3928/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": [], "Fixed commit": "2b5328c5f1256949226a2dada9b21383ff27bdb5", "Url": "https://api.github.com/repos/scascacha/nanodegreeSuperDuo", "Date": "2015-06-24T05:07:23Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sellValueAsReferenceCurrency < 0) || (buyValueAsReferenceCurrency < 0)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5736/buggy-version/src.main.java.se.simjarr.model.TradeOffer.java", "BodyUseAPI": [], "Fixed commit": "a3c15ff7c5e96418abe7d6266d7c588bb15609e7", "Url": "https://api.github.com/repos/SimJarr/PoeTrader", "Date": "2017-04-19T20:24:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.hasAttribute(\"connection-factory\")) { listenerContainerDefinition.getPropertyValues().add(org.axonframework.contextsupport.spring.amqp.TerminalBeanDefinitionParser.BEAN_REFERENCE_PROPERTIES.get(\"connection-factory\"), new org.springframework.beans.factory.config.RuntimeBeanReference(element.getAttribute(\"connection-factory\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1466/buggy-version/amqp.src.main.java.org.axonframework.contextsupport.spring.amqp.TerminalBeanDefinitionParser.java", "BodyUseAPI": ["listenerContainerDefinition.getPropertyValues().add(java.lang.String,org.springframework.beans.factory.config.RuntimeBeanReference)", "org.w3c.dom.Element.getAttribute(java.lang.String)"], "Fixed commit": "0b91fc2e0118ae2bd8a0c7b2c9d3e3a1161fa4ec", "Url": "https://api.github.com/repos/viadeo/AxonFramework", "Date": "2013-01-20T18:27:26Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret != null) { return new org.skywalking.apm.plugin.jdbc.SWConnection(((java.lang.String) (allArguments[0])), ((java.util.Properties) (allArguments[1])), ((java.sql.Connection) (ret))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6967/buggy-version/apm-sniffer.apm-sdk-plugin.jdbc-plugin.src.main.java.org.skywalking.apm.plugin.jdbc.define.JDBCDriverInterceptor.java", "BodyUseAPI": [], "Fixed commit": "0baf691ae48f9b6971a0503d8b210e50e50dcb1a", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-09-01T04:12:21Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paymentDetails.hasMemo()) return paymentDetails.getMemo(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2553/buggy-version/core.src.main.java.com.google.bitcoin.protocols.payments.PaymentSession.java", "BodyUseAPI": ["Protos.PaymentDetails.getMemo()"], "Fixed commit": "9f5e34e5de20de1a853749bf771cc9412fd4aac5", "Url": "https://api.github.com/repos/schildbach/bitcoinj", "Date": "2014-02-13T19:21:36Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.Switch.isChecked()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (on) { notification.setVisibility(LinearLayout.VISIBLE); }else { notification.setVisibility(LinearLayout.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4473/buggy-version/app.src.main.java.com.johnston.lmhapp.SetupLogIn.java", "BodyUseAPI": [], "Fixed commit": "042ebc69b0afef0f209abe76b9946c7117a56292", "Url": "https://api.github.com/repos/Tom-Johnston/LMH", "Date": "2014-10-31T09:56:44Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lotus.HQ.testing) { java.lang.System.out.println(java.util.Arrays.toString(copySquares)); java.lang.System.out.println(java.util.Arrays.toString(copyRatios)); java.lang.System.out.println(java.util.Arrays.toString(copyRatiosSorted)); java.lang.System.out.println(java.util.Arrays.toString(copyProds)); java.lang.System.out.println(java.util.Arrays.toString(thresholds)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2386/buggy-version/lotus.HQ.java", "BodyUseAPI": [], "Fixed commit": "64c1e488018ffbcc2730d80628cc00e79a5ade93", "Url": "https://api.github.com/repos/skoppula/yummycode-2014", "Date": "2014-01-28T01:32:05Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((ca.ualberta.entitylinking.config.WNEDConfig.targetFile) != null) && (!(ca.ualberta.entitylinking.config.WNEDConfig.targetFile.isEmpty()))) && (ca.ualberta.entitylinking.config.WNEDConfig.targetFile.contains(\"/\"))) { java.lang.String dir = ca.ualberta.entitylinking.config.WNEDConfig.targetFile.substring(0, ca.ualberta.entitylinking.config.WNEDConfig.targetFile.lastIndexOf('/')); ca.ualberta.entitylinking.config.WNEDConfig.DATASET_DIR = dir + \"/RawText/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8356/buggy-version/src.ca.ualberta.entitylinking.config.WNEDConfig.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "ae4360c9c774641b48a3b5b5e93d39fd4b33ec06", "Url": "https://api.github.com/repos/U-Alberta/wned", "Date": "2017-05-31T13:57:32Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statusCode != 304) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/644/buggy-version/src.elf.mywiki.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fb4c8621d40c428d9f7028df123cbb8c28d91115", "Url": "https://api.github.com/repos/elf0/human.MyWiki", "Date": "2013-11-20T09:49:53Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tomahawk.libtomahawk.collection.StationPlaylist.get(java.util.List<android.support.v4.util.Pair<org.tomahawk.libtomahawk.collection.Artist, java.lang.String>>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (stationPlaylist != (getPlaybackManager().getPlaylist())) { getPlaybackManager().setPlaylist(stationPlaylist); getMediaController().getTransportControls().play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3901/buggy-version/app.src.main.java.org.tomahawk.tomahawk_android.fragments.ContentHeaderFragment.java", "BodyUseAPI": ["org.tomahawk.tomahawk_android.utils.PlaybackManager.setPlaylist(org.tomahawk.libtomahawk.collection.StationPlaylist)"], "Fixed commit": "b656c1112cba1c04f940d7f4b41493581ca0c744", "Url": "https://api.github.com/repos/tomahawk-player/tomahawk-android", "Date": "2016-06-24T23:34:29Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tomahawk.libtomahawk.collection.StationPlaylist.get(java.util.List<android.support.v4.util.Pair<org.tomahawk.libtomahawk.collection.Artist, java.lang.String>>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (stationPlaylist != (getPlaybackManager().getPlaylist())) { getPlaybackManager().setPlaylist(stationPlaylist); getMediaController().getTransportControls().play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3901/buggy-version/app.src.main.java.org.tomahawk.tomahawk_android.fragments.ContentHeaderFragment.java", "BodyUseAPI": ["org.tomahawk.tomahawk_android.utils.PlaybackManager.setPlaylist(org.tomahawk.libtomahawk.collection.StationPlaylist)"], "Fixed commit": "b656c1112cba1c04f940d7f4b41493581ca0c744", "Url": "https://api.github.com/repos/tomahawk-player/tomahawk-android", "Date": "2016-06-24T23:34:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.LayoutInflater.inflate(int,android.view.ViewGroup,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rowView == null) rowView = convertView;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8875/buggy-version/oblify-app.Oblify.src.com.groups.oblify.DevicesAdapter.java", "BodyUseAPI": [], "Fixed commit": "a2a0d8e0be421d5174429e9051f3e9ca1692caa2", "Url": "https://api.github.com/repos/Oblify/Server", "Date": "2013-12-03T14:45:25Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((props) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6563/buggy-version/modules.hadoop.src.main.java.org.apache.ignite.hadoop.fs.LocalFileSystemIgfsFile.java", "BodyUseAPI": [], "Fixed commit": "9b44438dc1b27586af61f731c5eb17af1ae135bd", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2016-08-11T08:40:21Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((props) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6563/buggy-version/modules.hadoop.src.main.java.org.apache.ignite.hadoop.fs.LocalFileSystemIgfsFile.java", "BodyUseAPI": [], "Fixed commit": "9b44438dc1b27586af61f731c5eb17af1ae135bd", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2016-08-11T08:40:21Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.hasHtmlContent()) { content = data.getHtmlContent(); type = \"text/HTML\"; }else { if ((data.getTextContent()) != null) content = data.getTextContent(); else content = com.github.koshamo.fastmail.gui.MailView.DefaultView; type = \"text/plain\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/571/buggy-version/src.main.java.com.github.koshamo.fastmail.gui.MailView.java", "BodyUseAPI": ["com.github.koshamo.fastmail.mail.MailData.getHtmlContent()", "com.github.koshamo.fastmail.mail.MailData.getTextContent()", "com.github.koshamo.fastmail.mail.MailData.getTextContent()"], "Fixed commit": "f7eaffe991923a826cc8bf03ec37a251459020fa", "Url": "https://api.github.com/repos/koshamo/Fastmail", "Date": "2017-11-01T15:58:25Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) >= 2) { if (HMM.hasPerm(p, \"hotels.createmode\")) { if (args[1].equalsIgnoreCase(\"enter\")) HCE.cmdCreateModeEnter(p); else if (args[1].equalsIgnoreCase(\"exit\")) HCE.cmdCreateModeExit(p); else if (args[1].equalsIgnoreCase(\"reset\")) HCE.cmdCreateModeReset(p); else p.sendMessage(HMM.mes(\"chat.commands.creationMode.noarg\")); }else p.sendMessage(HMM.mes(\"chat.noPermission\")); }else p.sendMessage(HMM.mes(\"chat.commands.creationMode.noarg\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1123/buggy-version/BukkitHotels.src.gvlfm78.plugin.Hotels.handlers.HotelsCommandHandler.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "1e544587346a2bc9ad8500728f906f5c905d1813", "Url": "https://api.github.com/repos/gvlfm78/BukkitHotels", "Date": "2016-05-29T12:41:54Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (retval != null) { testDir.mkdirs(); com.sciaps.common.utils.ShotDataHelper.saveCompressedFile(retval, file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4821/buggy-version/src.main.java.com.sciaps.common.swing.global.CalibrationShotManager.java", "BodyUseAPI": ["com.sciaps.common.utils.ShotDataHelper.saveCompressedFile(com.sciaps.common.spectrum.LIBZPixelSpectrum,java.io.File)"], "Fixed commit": "01eaa9966a8ad8335b1ec5ee7a0a88bf7469aa4b", "Url": "https://api.github.com/repos/SciAps/SwingCommon", "Date": "2015-02-28T00:46:36Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, org.qii.weiciyuan.othercomponent.unreadnotification.BigTextNotificationService.ValueWrapper>.get(accountBean.getUid())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (valueWrapper == null) { valueWrapper = new org.qii.weiciyuan.othercomponent.unreadnotification.BigTextNotificationService.ValueWrapper(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/259/buggy-version/src.org.qii.weiciyuan.othercomponent.unreadnotification.BigTextNotificationService.java", "BodyUseAPI": [], "Fixed commit": "c6ddb6e09e38dd3e5309a7cd864d9c8d82e75013", "Url": "https://api.github.com/repos/Max-Sum/weiciyuan", "Date": "2014-03-12T13:36:59Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((stream_in[0].num) - 1)) { ev.msg += \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/490/buggy-version/libssj.src.main.java.hcm.ssj.event.ValueEventSender.java", "BodyUseAPI": [], "Fixed commit": "e568c78bdc59d7d910ecf2cb70b4a7a2928d86d5", "Url": "https://api.github.com/repos/hcmlab/ssj", "Date": "2016-07-12T12:12:13Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((stream_in[0].num) - 1)) { ev.msg += \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/490/buggy-version/libssj.src.main.java.hcm.ssj.event.FloatsEventSender.java", "BodyUseAPI": [], "Fixed commit": "e568c78bdc59d7d910ecf2cb70b4a7a2928d86d5", "Url": "https://api.github.com/repos/hcmlab/ssj", "Date": "2016-07-12T12:12:13Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { stt_ask(); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5577/buggy-version/src.com.example.carte.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cf2a95a7e1540edd294b5e624dc7b28fffe1afea", "Url": "https://api.github.com/repos/fxthomas/carte", "Date": "2013-05-02T20:04:00Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mWifi.isConnected()) { android.net.wifi.WifiManager wifi = ((android.net.wifi.WifiManager) (mCtx.getSystemService(Context.WIFI_SERVICE))); return wifi.getConnectionInfo().getSSID().substring(1, ((wifi.getConnectionInfo().getSSID().length()) - 1)); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8868/buggy-version/LC1.src.main.java.tv.piratemedia.lightcontroler.utils.java", "BodyUseAPI": [], "Fixed commit": "69dfcb9ee4b2f33a44db2ad6cd1f30ac5ccf16e5", "Url": "https://api.github.com/repos/eliotstocker/Light-Controller", "Date": "2016-06-24T15:53:56Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text instanceof rst.pdfbox.layout.elements.Paragraph) { rst.pdfbox.layout.elements.Paragraph paragraph = ((rst.pdfbox.layout.elements.Paragraph) (text)); first.setAlignment(paragraph.getAlignment()); first.setApplyLineSpacingToFirstLine(paragraph.isApplyLineSpacingToFirstLine()); tail.setAlignment(paragraph.getAlignment()); tail.setApplyLineSpacingToFirstLine(paragraph.isApplyLineSpacingToFirstLine()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1152/buggy-version/src.main.java.rst.pdfbox.layout.text.TextSequenceUtil.java", "BodyUseAPI": [], "Fixed commit": "670300f3e250a2f6b5a1679a632fe89a5f47e543", "Url": "https://api.github.com/repos/ralfstuckert/pdfbox-layout", "Date": "2017-04-21T15:44:33Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getValue()) instanceof java.io.File) { mp.addBinaryBody(e.getKey(), ((java.io.File) (e.getValue()))); }else if ((e.getValue()) instanceof java.io.InputStream) { mp.addBinaryBody(e.getKey(), ((java.io.InputStream) (e.getValue())), ContentType.APPLICATION_OCTET_STREAM, \"JPGFILE.JPG\"); }else { mp.addTextBody(e.getKey(), ((e.getValue()) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1722/buggy-version/photoweb.src.com.backend.facer.FacerUtils.java", "BodyUseAPI": ["org.apache.http.entity.mime.MultipartEntityBuilder.addBinaryBody(java.lang.String,java.lang.Object,ContentType.APPLICATION_OCTET_STREAM,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "org.apache.http.entity.mime.MultipartEntityBuilder.addTextBody(java.lang.String,java.lang.String)", "org.apache.http.entity.mime.MultipartEntityBuilder.addBinaryBody(java.lang.String,java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()"], "Fixed commit": "12d48e8cbf781c45b054198623ba18ef674d29ad", "Url": "https://api.github.com/repos/shentar/jAlbum", "Date": "2017-02-27T15:46:21Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFetches.size()) == 0) { throw new java.lang.RuntimeException(\"Can not start fetch group with no fetches added\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4805/buggy-version/syncmanager.src.main.java.com.projectplace.android.syncmanager.SyncFetchGroup.java", "BodyUseAPI": [], "Fixed commit": "b0b5fec831060fb110e32c6edcd17cee1e581735", "Url": "https://api.github.com/repos/Projectplace/AndroidSyncManager", "Date": "2017-09-18T11:32:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFetches.size()) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4805/buggy-version/syncmanager.src.main.java.com.projectplace.android.syncmanager.SyncFetchGroup.java", "BodyUseAPI": [], "Fixed commit": "b0b5fec831060fb110e32c6edcd17cee1e581735", "Url": "https://api.github.com/repos/Projectplace/AndroidSyncManager", "Date": "2017-09-18T11:32:09Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.server.issue.PlanAction.planValue(java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(actionPlanValue))) { actionPlan = selectActionPlan(actionPlanValue, org.sonar.server.user.UserSession.get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2735/buggy-version/sonar-server.src.main.java.org.sonar.server.issue.PlanAction.java", "BodyUseAPI": ["org.sonar.server.issue.PlanAction.selectActionPlan(java.lang.String,org.sonar.server.user.UserSession.get())"], "Fixed commit": "6c5a78202a340093aa44df95e8ceaa5daa59760d", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-08-13T09:36:56Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((animationSet) != null) { pauseAnimator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3949/buggy-version/src.cn.cienet.pathsearcher.weight.PSMapView.java", "BodyUseAPI": [], "Fixed commit": "d14b3b2d84869cc00255551650c5e3509ce0b198", "Url": "https://api.github.com/repos/chaoli1699/PathSearcher", "Date": "2017-12-21T09:47:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (referenceList.isEmpty()) { element.addEmptyContainment(reference.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/601/buggy-version/transformation.plugins.org.eclipse.viatra.transformation.runtime.debug.src.org.eclipse.viatra.transformation.debug.model.transformationstate.TransformationModelBuilder.java", "BodyUseAPI": [], "Fixed commit": "99211b730b9a844e688ede216384744652a66bed", "Url": "https://api.github.com/repos/viatra/org.eclipse.viatra", "Date": "2016-10-14T10:56:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (referenceList.isEmpty()) { element.addEmptyContainment(reference.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/601/buggy-version/transformation.plugins.org.eclipse.viatra.transformation.runtime.debug.src.org.eclipse.viatra.transformation.debug.model.transformationstate.TransformationModelBuilder.java", "BodyUseAPI": [], "Fixed commit": "99211b730b9a844e688ede216384744652a66bed", "Url": "https://api.github.com/repos/viatra/org.eclipse.viatra", "Date": "2016-10-14T10:56:14Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((conf.getRngSeed()) <= 0) { rand = new java.util.Random(conf.getRngSeed()); }else { rand = new java.util.Random(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4561/buggy-version/src.radlab.rain.workload.rubis.util.InitDbDriver.java", "BodyUseAPI": [], "Fixed commit": "c4632bdcfe443f0648b6773408b4a81a92442713", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2013-07-15T19:56:56Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start.y) > (end.y)) { return new org.mapsforge.core.model.Point(end.x, ((end.y) + distance)); }else { return new org.mapsforge.core.model.Point(start.x, ((start.y) + distance)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5258/buggy-version/mapsforge-core.src.main.java.org.mapsforge.core.model.LineSegment.java", "BodyUseAPI": [], "Fixed commit": "a3a500298555e2dae4327277302bea6cb66c3317", "Url": "https://api.github.com/repos/mapsforge/mapsforge", "Date": "2016-04-26T03:49:30Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.graphics.Color.red(currentColor)) == (android.graphics.Color.red(targetColor))) { newRed = android.graphics.Color.red(targetColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1708/buggy-version/app.src.main.java.com.mansion.invention.mywallpaper.MyWallpaperService.java", "BodyUseAPI": ["android.graphics.Color.red(int)"], "Fixed commit": "c9cee872298fdaf7b91bb30f23a987b6733685bd", "Url": "https://api.github.com/repos/leeweijuin/MyWallpaper", "Date": "2015-09-08T14:09:11Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.graphics.Color.blue(currentColor)) == (android.graphics.Color.blue(targetColor))) { newBlue = android.graphics.Color.blue(targetColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1708/buggy-version/app.src.main.java.com.mansion.invention.mywallpaper.MyWallpaperService.java", "BodyUseAPI": ["android.graphics.Color.blue(int)"], "Fixed commit": "c9cee872298fdaf7b91bb30f23a987b6733685bd", "Url": "https://api.github.com/repos/leeweijuin/MyWallpaper", "Date": "2015-09-08T14:09:11Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.graphics.Color.green(currentColor)) == (android.graphics.Color.green(targetColor))) { newGreen = android.graphics.Color.green(targetColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1708/buggy-version/app.src.main.java.com.mansion.invention.mywallpaper.MyWallpaperService.java", "BodyUseAPI": ["android.graphics.Color.green(int)"], "Fixed commit": "c9cee872298fdaf7b91bb30f23a987b6733685bd", "Url": "https://api.github.com/repos/leeweijuin/MyWallpaper", "Date": "2015-09-08T14:09:11Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (byte3 == 0) { midiEventListener.onMidiNoteOff(sender, cable, (byte1 & 15), byte2, byte3); }else { midiEventListener.onMidiNoteOn(sender, cable, (byte1 & 15), byte2, byte3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4028/buggy-version/MIDIDriver.src.jp.kshoji.driver.midi.handler.MidiMessageCallback.java", "BodyUseAPI": ["jp.kshoji.driver.midi.listener.OnMidiInputEventListener.onMidiNoteOn(jp.kshoji.driver.midi.device.MidiInputDevice,int,int,int,int)", "jp.kshoji.driver.midi.listener.OnMidiInputEventListener.onMidiNoteOff(jp.kshoji.driver.midi.device.MidiInputDevice,int,int,int,int)"], "Fixed commit": "ccd840970c4662c5637dc5a5c135fa85647fe2f5", "Url": "https://api.github.com/repos/kshoji/USB-MIDI-Driver", "Date": "2013-05-25T01:24:08Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.getId()) < (another.getItem().getId())) return 1; else return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5000/buggy-version/src.com.inovex.zabbixmobile.model.Trigger.java", "BodyUseAPI": [], "Fixed commit": "866bc402ed0e41500c6971046441ad583eb6259c", "Url": "https://api.github.com/repos/inovex/zax", "Date": "2014-01-31T15:22:00Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clock) > (another.getClock())) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5000/buggy-version/src.com.inovex.zabbixmobile.model.Event.java", "BodyUseAPI": [], "Fixed commit": "866bc402ed0e41500c6971046441ad583eb6259c", "Url": "https://api.github.com/repos/inovex/zax", "Date": "2014-01-31T15:22:00Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trigger.getId()) < (another.getTrigger().getId())) return 1; else return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5000/buggy-version/src.com.inovex.zabbixmobile.model.Event.java", "BodyUseAPI": [], "Fixed commit": "866bc402ed0e41500c6971046441ad583eb6259c", "Url": "https://api.github.com/repos/inovex/zax", "Date": "2014-01-31T15:22:00Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.psk.pms.service.FieldDescriptionService.isActiveIndentExistForDescription(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((null != isActiveDescription) && ((isActiveDescription.size()) > 0)) for (java.lang.String descId : projDescIds) { if (isActiveDescription.containsKey(descId)) { validation.put(descId, isActiveDescription.get(descId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1898/buggy-version/src.main.java.com.psk.pms.controller.IndentController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.containsKey(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "794e42dab2bfd41058b35c28c74f99102a571473", "Url": "https://api.github.com/repos/devintqa/pms", "Date": "2015-11-18T18:52:59Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startsWithTwoUppercaseLetters(name)) { name = (name.substring(0, 2).toLowerCase()) + (name.substring(2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2010/buggy-version/modules.swagger-codegen.src.main.java.io.swagger.codegen.languages.AbstractJavaCodegen.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.toLowerCase()", "java.lang.String.substring(int)"], "Fixed commit": "f57e7c0933eb371c643b5ddf8b350406c548b514", "Url": "https://api.github.com/repos/sanjeewa-malalgoda/swagger-codegen", "Date": "2016-10-25T18:09:24Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.undo.UndoManager.addEdit(javax.swing.undo.UndoableEdit)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret) updateUndoRedoActions();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3869/buggy-version/plugins-dev.map.pt.lsts.neptus.plugins.map.MapEditor.java", "BodyUseAPI": [], "Fixed commit": "4426597bc088d429217aac3252afe7e46cc03b5c", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2014-02-28T15:30:58Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RegistrationController.register()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.equals(\"registered\")) { CredentialManagementApplication.t.setEnabled(true); ((java.awt.Window) (getRootPane().getParent())).dispose(); java.lang.System.out.println(\"OK\"); }else if (result.equals(\"pwds don't match\")) { javax.swing.JOptionPane.showMessageDialog(null, \"Passwords do not match.\"); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Username already exists.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2722/buggy-version/RegistrationWindow.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "8e9e8dce6bd2d691e32f9ec432134c8ff0fc13ec", "Url": "https://api.github.com/repos/tylerperdue/ist311_project", "Date": "2016-10-27T16:29:59Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((room.getOwner()) != null) { if (room.getOwner().equals(sender)) { java.lang.String roomID = room.getRoomID(); account.addRoomOwnership(roomID); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1608/buggy-version/src.chat.server.handler.SignupHandler.java", "BodyUseAPI": ["room.getOwner().equals(chat.server.Connection)", "chat.server.ChatRoom.getRoomID()", "chat.server.ChatRoom.getOwner()"], "Fixed commit": "ddb07793b9d871802f9ecdc0b45fcb4eecdca7e3", "Url": "https://api.github.com/repos/Ocunidee/Project2-_DistributedSystem", "Date": "2015-10-21T05:38:52Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.FLAVOR.equals(\"onthemove\")) { user.setCountryProgram(in.ureport.managers.CountryProgramManager.getCurrentCountryProgram().getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4527/buggy-version/app.src.main.java.in.ureport.activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "88012391e59b4d3cf9877216ba344e3463b42fc7", "Url": "https://api.github.com/repos/rapidpro/ureport-android", "Date": "2017-10-10T20:02:51Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lane == 1) && (distance == 1)) && (!isTrollSide)) { au.edu.unimelb.csse.trollsvsgoats.core.view.Image shimImg = getTileImages('g').get(0); au.edu.unimelb.csse.trollsvsgoats.core.view.Shim shim = new au.edu.unimelb.csse.trollsvsgoats.core.view.Shim(0, shimImg.height()); shim.layer.setOrigin(0, shimImg.height()); middlePanel.add(au.edu.unimelb.csse.trollsvsgoats.core.view.AbsoluteLayout.at(shim, _x, _y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1874/buggy-version/core.src.main.java.au.edu.unimelb.csse.trollsvsgoats.core.view.LevelScreen.java", "BodyUseAPI": [], "Fixed commit": "10c4230ca308a098f1661ee7a663f3849f154c0b", "Url": "https://api.github.com/repos/sipul/trollsvsgoats", "Date": "2012-08-12T02:35:27Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.waarp.openr66.proxy.network.NetworkTransaction.createConnectionWithRetry(proxyEntry.getRemoteSocketAddress(),proxyEntry.isRemoteSsl())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (proxy == null) { this.futureRemoteConnected.cancel(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3816/buggy-version/src.main.java.org.waarp.openr66.proxy.network.ProxyBridge.java", "BodyUseAPI": [], "Fixed commit": "d63c9e9040dfabf570eac657cd450622004b9d8c", "Url": "https://api.github.com/repos/waarp/WaarpProxyR66", "Date": "2013-10-05T18:26:21Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proxyChannel) != null) { org.jboss.netty.channel.Channels.write(proxyChannel, packet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3816/buggy-version/src.main.java.org.waarp.openr66.proxy.network.NetworkServerHandler.java", "BodyUseAPI": [], "Fixed commit": "d63c9e9040dfabf570eac657cd450622004b9d8c", "Url": "https://api.github.com/repos/waarp/WaarpProxyR66", "Date": "2013-10-05T18:26:21Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proxyChannel) != null) { writeError(proxyChannel, ChannelUtils.NOCHANNEL, ChannelUtils.NOCHANNEL, errorPacket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3816/buggy-version/src.main.java.org.waarp.openr66.proxy.network.NetworkServerHandler.java", "BodyUseAPI": [], "Fixed commit": "d63c9e9040dfabf570eac657cd450622004b9d8c", "Url": "https://api.github.com/repos/waarp/WaarpProxyR66", "Date": "2013-10-05T18:26:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ofs > 0) issue = issue.substring(0, (ofs - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8997/buggy-version/app.src.main.java.com.tadamski.arij.account.activity.AccountSelectorActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "549512bb66b1f02715be1e72051997eea3ffc836", "Url": "https://api.github.com/repos/marcellourbani/arij", "Date": "2015-03-31T22:47:50Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((snap.getExpires()) != null) && (!(snap.getExpires().equalsIgnoreCase(models.datatable.FilePolicySnapshotsDataTable.NEVER)))) { this.expires = sdf.format(new java.util.Date(java.lang.Long.parseLong(snap.getExpires()))); }else { this.expires = snap.getExpires(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1318/buggy-version/vipr-portal.portal.app.models.datatable.FilePolicySnapshotsDataTable.java", "BodyUseAPI": [], "Fixed commit": "c154601303be8f5d357aa848f408f03266f3a432", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-28T09:31:31Z"},
{"Line": "=>2579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((islon_snap.getExpires()) != null) && (!(islon_snap.getExpires().isEmpty()))) { java.lang.Long expTime = (java.lang.Long.parseLong(islon_snap.getExpires())) * (com.emc.storageos.volumecontroller.impl.isilon.IsilonFileStorageDevice.SEC_IN_MILLI); expiresTime = expTime.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1318/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.isilon.IsilonFileStorageDevice.java", "BodyUseAPI": ["java.lang.Long.parseLong(islon_snap.getExpires())", "com.emc.storageos.isilon.restapi.IsilonSnapshot.getExpires()"], "Fixed commit": "c154601303be8f5d357aa848f408f03266f3a432", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-03-28T09:31:31Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file.getName().endsWith(\".sh\")) && (!(de.endrullis.utils.SystemUtils.isWinOS()))) { try { de.endrullis.utils.SystemUtils.exec(new java.lang.String[]{ \"chmod\", \"uog+x\", destFile.getAbsolutePath() }); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6937/buggy-version/src.de.endrullis.utils.ProgramUpdater.java", "BodyUseAPI": [], "Fixed commit": "37d04cbe224895172d081ed0062f423d4cd73864", "Url": "https://api.github.com/repos/xylo/JErgometer", "Date": "2012-05-01T08:17:16Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (filteredArray.contains(d)) continue; else filteredArray.add(d);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1061/buggy-version/app.src.main.java.ru.sergjav.android.micexportfolio.adapters.DealsListAdapter.java", "BodyUseAPI": ["java.util.ArrayList<ru.sergjav.android.micexportfolio.base.classes.Deal>.add(ru.sergjav.android.micexportfolio.base.classes.Deal)"], "Fixed commit": "63b04e9f411d1ab4dd3742cf3dcf6c5721e2ead7", "Url": "https://api.github.com/repos/SergJ4/MICEXPortfolio", "Date": "2016-10-07T00:09:40Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (account != null) { io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3923/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": ["io.cattle.platform.object.util.DataAccessor.fields(io.cattle.platform.core.model.Account)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(boolean)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN)"], "Fixed commit": "dcefcc5156036764610a9df8e34ffd9e2d1b947c", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.iaas.api.auth.dao.AuthDao.hasAccessToAnyProject(java.util.Set<io.cattle.platform.api.auth.Identity>,boolean,<nulltype>)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((!hasAccessToAProject) && (hasLoggedIn != null)) && (!((java.lang.Boolean) (hasLoggedIn)))) { projectResourceManager.createProjectForUser(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3923/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "dcefcc5156036764610a9df8e34ffd9e2d1b947c", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (backslash.equals(\"/\")) { for (java.io.File owlFile : owlFiles) { com.intellileaf.dctheradir.enricher.Resources.log.info((\"Loading ontology: '\" + (owlFile.getName()))); com.intellileaf.dctheradir.enricher.Resources.directoryModel.read((\"file://\" + (owlFile.getAbsolutePath()))); } }else { for (java.io.File owlFile : owlFiles) { com.intellileaf.dctheradir.enricher.Resources.log.info((\"Loading ontology: '\" + (owlFile.getName()))); com.intellileaf.dctheradir.enricher.Resources.directoryModel.read((\"file:\\\\\" + (owlFile.getAbsolutePath()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5450/buggy-version/src.com.intellileaf.dctheradir.enricher.Resources.java", "BodyUseAPI": [], "Fixed commit": "e06e059ded5ef5419eafc05f3196efb3fb202b2d", "Url": "https://api.github.com/repos/UMUC-Capstone-Project/IntelliLeaf-Resource-Enricher", "Date": "2012-03-30T20:56:13Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.media) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4355/buggy-version/core.src.main.java.de.danoeh.antennapod.core.service.playback.PlaybackServiceMediaPlayer.java", "BodyUseAPI": [], "Fixed commit": "17c87d9bfc1b3af594befa8356b40535267d9d0d", "Url": "https://api.github.com/repos/udif/AntennaPod_orig", "Date": "2015-09-15T23:44:45Z"},
{"Line": "=>706", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (frameJahresplaner)) { if (frameJahresplaner.isVisible()) { frameJahresplaner.setVisible(false); frameJahresplaner.dispose(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7909/buggy-version/SpiegelKristina_A3.src.gui.Fenster.java", "BodyUseAPI": [], "Fixed commit": "015f999f3225a8fcb66ed4af0415e190e04dea65", "Url": "https://api.github.com/repos/KristinaGit/Prog2", "Date": "2017-07-14T12:39:27Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mercycorps.translationcards.data.Dictionary.getTranslation(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (translation.isAudioFilePresent()) { translationFilename = buildUniqueFilename(translation, translationFilenames); translationFilenames.put(translationFilename, translation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4579/buggy-version/app.src.main.java.org.mercycorps.translationcards.porting.TxcPortingUtility.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.mercycorps.translationcards.data.Translation>.put(java.lang.String,org.mercycorps.translationcards.data.Translation)", "org.mercycorps.translationcards.porting.TxcPortingUtility.buildUniqueFilename(org.mercycorps.translationcards.data.Translation,java.util.Map<java.lang.String, org.mercycorps.translationcards.data.Translation>)"], "Fixed commit": "d94e939b8ac27fcd6811f0cc0ad00a52f78e0582", "Url": "https://api.github.com/repos/translation-cards/translation-cards", "Date": "2016-06-09T19:59:12Z"},
{"Line": "=>1048", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(fieldInfo.name)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (param == null) { java.lang.reflect.Type fieldType = fieldInfo.fieldType; if (fieldType == (byte.class)) { param = ((byte) (0)); }else if (fieldType == (short.class)) { param = ((short) (0)); }else if (fieldType == (int.class)) { param = 0; }else if (fieldType == (long.class)) { param = 0L; }else if (fieldType == (float.class)) { param = 0.0F; }else if (fieldType == (double.class)) { param = 0.0; }else if (fieldType == (boolean.class)) { param = java.lang.Boolean.FALSE; }else if (fieldType == (char.class)) { param = '0'; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8196/buggy-version/src.main.java.com.alibaba.fastjson.parser.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "a3801bb9e4dfe52fef6d3f74dcc0414486b06dc9", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-06-30T16:46:54Z"},
{"Line": "=>815", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldType == (boolean.class)) { param = java.lang.Boolean.FALSE; }else if (fieldType == (char.class)) { param = '0'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8196/buggy-version/src.main.java.com.alibaba.fastjson.parser.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "a3801bb9e4dfe52fef6d3f74dcc0414486b06dc9", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-06-30T16:46:54Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.Document.get(Field.ROOT_ENTRY_CLASS_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(className)) { className = document.get(Field.ENTRY_CLASS_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2842/buggy-version/portal-impl.src.com.liferay.portal.search.SearchPermissionCheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "bd455c14048c2dcc5bfdbfc9cf353cf5a3ee5fa8", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-05-22T21:08:16Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myParent) != null) { return myParent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/563/buggy-version/csharp-psi-impl.src.consulo.csharp.lang.psi.impl.light.CSharpLightElement.java", "BodyUseAPI": [], "Fixed commit": "be3667e94f0b3cf90cafdfe0ebf79dddc5702d1e", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2017-11-18T15:56:10Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["S.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parent != null) { return parent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/563/buggy-version/csharp-psi-impl.src.consulo.csharp.lang.psi.impl.light.CSharpLightElement.java", "BodyUseAPI": [], "Fixed commit": "be3667e94f0b3cf90cafdfe0ebf79dddc5702d1e", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2017-11-18T15:56:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((jsonObject.getString(\"Bid\")) == null) || (jsonObject.getString(\"Bid\").equals(\"null\"))) { android.util.Log.v(com.sam_chordas.android.stockhawk.rest.Utils.LOG_TAG, (\"Invalid Stock Symbol : \" + (jsonObject.getString(\"symbol\")))); }else { batchOperations.add(com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(jsonObject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7651/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.rest.Utils.java", "BodyUseAPI": ["java.util.ArrayList<android.content.ContentProviderOperation>.add(android.content.ContentProviderOperation)", "org.json.JSONObject.getString(java.lang.String)", "com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(org.json.JSONObject)", "android.util.Log.v(java.lang.String,(\"Invalid Stock Symbol : \" + (jsonObject.getString(\"symbol\"))))"], "Fixed commit": "4ac3c65e16b3a5e2af99c5ec28384b48a1423728", "Url": "https://api.github.com/repos/rohitsharma04/StockHawk", "Date": "2016-06-02T13:34:47Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((times.length) != 3) { throw new java.text.ParseException(\"Needs to have 3 segments\", 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8865/buggy-version/app.src.main.java.at.sw2017.trackster.models.TimeConvert.java", "BodyUseAPI": [], "Fixed commit": "dc7a10b9fe958c9f96d5b956c43096fbd96e5ecd", "Url": "https://api.github.com/repos/patrick1604/Trackster", "Date": "2017-06-07T14:21:47Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index != (-1)) { replyTitle = replyHTML.substring(0, index); replyContent = replyHTML.substring((index + 1)).replace(\"\\n\", \"<br />\"); }else { replyTitle = replyHTML; replyContent = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5234/buggy-version/app.src.main.java.io.github.linPATHocong.sjtubbs.utilities.BBSUtils.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "5d0baa88cd40c8e9ea195d98ca8a54656ba608c4", "Url": "https://api.github.com/repos/linPATHocong/sjtubbs", "Date": "2014-10-26T14:02:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resourceRoot == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1678/buggy-version/server.src.main.java.org.jboss.as.server.deployment.annotation.AnnotationIndexUtils.java", "BodyUseAPI": [], "Fixed commit": "4d1222f81d3d14abf77089a81eaa72754b75416c", "Url": "https://api.github.com/repos/emuckenhuber/wildfly", "Date": "2011-06-02T18:10:34Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((net.minecraft.block.Block.blocksList[id]) != null) { throw new java.lang.IllegalArgumentException((((((\"Slot \" + id) + \" is already occupied by \") + (net.minecraft.block.Block.blocksList[id])) + \" when adding \") + (this))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1993/buggy-version/common.rebelkeithy.mods.keithyutils.metablock.SubBlock.java", "BodyUseAPI": [], "Fixed commit": "42778e28016dbc7ec0ce186146b361e309db77b2", "Url": "https://api.github.com/repos/TeamMetallurgy/KeithyUtils", "Date": "2013-10-07T19:41:44Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["quoridor.Player.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (y > curY) { yWall = y + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/897/buggy-version/Quoridor.src.quoridor.Board.java", "BodyUseAPI": [], "Fixed commit": "a2c137ba989dd31e367bf10ad692aaad321a8354", "Url": "https://api.github.com/repos/bethc/2911-Quoridor", "Date": "2012-10-10T07:37:19Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["quoridor.Player.getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (x > curX) { xWall = x + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/897/buggy-version/Quoridor.src.quoridor.Board.java", "BodyUseAPI": [], "Fixed commit": "a2c137ba989dd31e367bf10ad692aaad321a8354", "Url": "https://api.github.com/repos/bethc/2911-Quoridor", "Date": "2012-10-10T07:37:19Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((requestInfo.entity) != null) { requestInfo.entity.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/257/buggy-version/base.src.com.github.kubatatami.judonetworking.transports.HttpTransportLayer.java", "BodyUseAPI": ["requestInfo.entity.close()"], "Fixed commit": "03a21398d3fa2cf8c7383be077c5fc50ab754d12", "Url": "https://api.github.com/repos/kubatatami/JudoNetworking", "Date": "2014-07-11T09:13:25Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (triplePartURI.toString().equals(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#subject\")) { if ((sp.toString().equals(RVL.ID)) || (sp.toString().equals(RDF.ID))) { sv = mainStatement.getSubject(); tv = svUriTVuriMap.get(sv); }else { org.ontoware.aifbcommons.collection.ClosableIterator<org.ontoware.rdf2go.model.Statement> it = model.findStatements(mainStatement.getSubject().asResource(), sp.asURI(), Variable.ANY); while (it.hasNext()) { sv = it.next().getObject(); if (svUriTVuriMap.containsKey(sv)) { tv = svUriTVuriMap.get(sv); break; } } } }else if (triplePartURI.toString().equals(\"http://www.w3.org/1999/02/22-rdf-syntax-ns#object\")) { if ((sp.toString().equals(RVL.ID)) || (sp.toString().equals(RDF.ID))) { sv = mainStatement.getObject(); tv = svUriTVuriMap.get(sv); }else { try { org.ontoware.aifbcommons.collection.ClosableIterator<org.ontoware.rdf2go.model.Statement> it = model.findStatements(mainStatement.getObject().asResource(), sp.asURI(), Variable.ANY); while (it.hasNext()) { sv = it.next().getObject(); if (svUriTVuriMap.containsKey(sv)) { tv = svUriTVuriMap.get(sv); break; } } } catch (java.lang.Exception e) { org.purl.rvl.tooling.rvl2avm.SimpleRVLInterpreter.LOGGER.severe((((\"Could not get value for source property \" + sp) + \"for object \") + (mainStatement.getObject()))); return; } } }else { if ((sp.toString().equals(RVL.ID)) || (sp.toString().equals(RDF.ID))) { sv = mainStatement.getPredicate(); tv = svUriTVuriMap.get(sv); }else { org.ontoware.aifbcommons.collection.ClosableIterator<org.ontoware.rdf2go.model.Statement> it = model.findStatements(mainStatement.getPredicate().asResource(), sp.asURI(), Variable.ANY); while (it.hasNext()) { sv = it.next().getObject(); if (svUriTVuriMap.containsKey(sv)) { tv = svUriTVuriMap.get(sv); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3273/buggy-version/org.purl.rvl.tooling.rvl-interpreter.src.main.java.org.purl.rvl.tooling.rvl2avm.SimpleRVLInterpreter.java", "BodyUseAPI": ["org.ontoware.rdf2go.model.node.URI.toString()", "triplePartURI.toString().equals(java.lang.String)"], "Fixed commit": "d809a18d94926475379993577d015bbaf400c1d4", "Url": "https://api.github.com/repos/janpolowinski/rvl", "Date": "2014-03-31T20:23:26Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.archinnov.achilles.internal.table.TableUpdateBuilder.generateDDLScript()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.google.common.base.Strings.isNullOrEmpty(script.trim()))) { info.archinnov.achilles.internal.table.TableUpdater.log.debug(script); session.execute(script); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8509/buggy-version/achilles-core.src.main.java.info.archinnov.achilles.internal.table.TableUpdater.java", "BodyUseAPI": ["com.datastax.driver.core.Session.execute(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "8cc5919d9dc74baa79b3e208bc07be2cb24549e7", "Url": "https://api.github.com/repos/crazyproger/Achilles", "Date": "2014-06-25T21:23:46Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"inet:portNumber\")) return ((java.lang.Integer) (value));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7373/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": [], "Fixed commit": "d0cfe6c12f951eede338cb28bbb449f86b54f073", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-15T10:15:56Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (type.equals(\"boolean\")) return java.lang.Boolean.parseBoolean(value.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7373/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": [], "Fixed commit": "d0cfe6c12f951eede338cb28bbb449f86b54f073", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-15T10:15:56Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (game.isSpedUp()) { game.incNumFramesSpedUp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/580/buggy-version/src.game.MainSinglePlayerThread.java", "BodyUseAPI": ["gameBoard.GameBoard.incNumFramesSpedUp()"], "Fixed commit": "9b6e5fbe7f138df31b18b0b09c9ecccc16a55247", "Url": "https://api.github.com/repos/exal99/Tetris", "Date": "2016-09-27T10:56:11Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.subList(int,int)", "java.util.List<java.lang.String>.subList(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(leadingArgs.equals(eLeadingArgs))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7005/buggy-version/BikeScheme.src.bikescheme.Event.java", "BodyUseAPI": [], "Fixed commit": "733e45d603fd47140ab21e527a89d6a197c096e0", "Url": "https://api.github.com/repos/IGGeorgiev/BikeScheme", "Date": "2015-11-28T14:58:14Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((released) && ((thread) == null)) { throw new java.lang.Error(\"Invalid V8 thread access: the locker has been released!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3108/buggy-version/src.main.java.com.eclipsesource.v8.V8Locker.java", "BodyUseAPI": [], "Fixed commit": "c371c99a561450d1dc8efa55d38bd457a21031ac", "Url": "https://api.github.com/repos/deas/J2V8", "Date": "2017-06-12T15:48:08Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((ringInfo != null) && (ringInfo.isEmpty())) { ringInfo = null; me.prettyprint.cassandra.connection.CassandraHostRetryService.log.warn(\"Got an empty ring info, maybe not enough permission\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4646/buggy-version/core.src.main.java.me.prettyprint.cassandra.connection.CassandraHostRetryService.java", "BodyUseAPI": [], "Fixed commit": "0ea55f36794e39589db18f059ed78115f6ba3f7c", "Url": "https://api.github.com/repos/michaelmosmann/hector", "Date": "2013-03-08T10:43:38Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.swagger.codegen.CodegenConfig.fromSecurity(swagger.getSecurityDefinitions())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(authMethods.isEmpty())) { bundle.put(\"authMethods\", authMethods); bundle.put(\"hasAuthMethods\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8994/buggy-version/modules.swagger-codegen.src.main.java.io.swagger.codegen.DefaultGenerator.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.util.List<io.swagger.codegen.CodegenSecurity>)"], "Fixed commit": "a51d71e72860ff70e84f54ce6be3c9d667a9e19c", "Url": "https://api.github.com/repos/xhh/swagger-codegen", "Date": "2015-07-09T02:48:16Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (options.isTestEncodability()) { enforcements.put(Read.Unbounded.class, com.google.common.collect.ImmutableSet.<org.apache.beam.runners.direct.ModelEnforcementFactory>of(org.apache.beam.runners.direct.EncodabilityEnforcementFactory.create())); enforcements.put(Read.Bounded.class, com.google.common.collect.ImmutableSet.<org.apache.beam.runners.direct.ModelEnforcementFactory>of(org.apache.beam.runners.direct.EncodabilityEnforcementFactory.create())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/9094/buggy-version/runners.direct-java.src.main.java.org.apache.beam.runners.direct.DirectRunner.java", "BodyUseAPI": [], "Fixed commit": "9c6a5c5a738cabb509c562064cb2ed2bf32bb528", "Url": "https://api.github.com/repos/tgroh/beam", "Date": "2016-09-09T17:02:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (add) { shapes.add(shape); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8621/buggy-version/app.BackendPaint.java", "BodyUseAPI": [], "Fixed commit": "248c1b8d18dbbce1454f35caf08e23a43f0f6466", "Url": "https://api.github.com/repos/mohsenr7596/SimplePaint", "Date": "2017-02-10T13:05:02Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((request.getMethod()) != (com.flyn.volcano.Request.Method.POST)) || ((request.getMethod()) != (com.flyn.volcano.Request.Method.PUT))) { parsedUrl = com.flyn.volcano.Utils.getUrlWithParams(parsedUrl, request.getRequestPramas()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2351/buggy-version/ActiveVolcano.src.com.flyn.volcano.HttpUrlStack.java", "BodyUseAPI": ["com.flyn.volcano.Request<?>.getRequestPramas()", "com.flyn.volcano.Utils.getUrlWithParams(java.lang.String,request.getRequestPramas())"], "Fixed commit": "faf01e43d8544a98423767bb4abf9a05c637e6f5", "Url": "https://api.github.com/repos/imflyn/FlynAsyncHttp4Android", "Date": "2014-09-18T13:52:00Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (angle == 0) { return bitmap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1078/buggy-version/android.src.com.matji.sandwich.util.ImageUtil.java", "BodyUseAPI": [], "Fixed commit": "f129e4d270de11b3a65025cc2041efc2391cca1d", "Url": "https://api.github.com/repos/bi2one/Matji_Sandwich", "Date": "2011-10-18T00:59:03Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasMoved) { for (int i = 0; i < 8; i++) { if ((rc.senseRubble(rc.getLocation().add(dirs[i]))) > 0) { rc.clearRubble(dirs[i]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4797/buggy-version/battlecode-scaffold-master.src.team375.Scout.java", "BodyUseAPI": [], "Fixed commit": "57ec2acf3bcd1726f40278d4056413c3a23fabe3", "Url": "https://api.github.com/repos/Diana0604/holapepsicola", "Date": "2016-01-24T20:46:51Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(itemValues.contains(textChip))) { displayItem.add(chip); itemValues.add(chip.getText()); list.insert(displayItem, ((list.getWidgetCount()) - 1)); itemBox.setValue(\"\"); itemBox.setFocus(true); }else { itemBox.setValue(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/567/buggy-version/src.main.java.gwt.material.design.client.ui.MaterialAutoComplete.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(chip.getText())"], "Fixed commit": "6b4bca340a1b2f301c5db970d58c447e8dc522ce", "Url": "https://api.github.com/repos/guibertjulien/gwt-material", "Date": "2015-08-05T17:43:13Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cntr > 1) { javax.faces.application.FacesMessage msg = new javax.faces.application.FacesMessage(((((\"Sie haben \" + cntr) + \" ungelesene Nachrichten \") + glbSender) + \")\")); javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7572/buggy-version/Login.src.server.RedakteurNotificationBean.java", "BodyUseAPI": [], "Fixed commit": "de0f2fd003b6938df268e7ee78474ab7e356a925", "Url": "https://api.github.com/repos/FWidm/Sopro2013MMS", "Date": "2013-06-16T13:49:10Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mw.client.gui.MapDisplay.getWidth()", "mw.client.gui.MapDisplay.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mapWidth > (getWidth())) && (mapHeight > (getHeight()))) return mapDisp.getImage().crop(xOffset, yOffset, area.getWidth(), area.getHeight()); else return mapDisp.getImage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5375/buggy-version/src.mw.client.gui.MapComponent.java", "BodyUseAPI": [], "Fixed commit": "70fde15a8964f65ce08ee6ed08cac1f13ee72861", "Url": "https://api.github.com/repos/EmilyRSager/MedeivalWarfare", "Date": "2015-03-06T23:32:57Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5714/buggy-version/app.src.main.java.com.stockboo.view.QuoteActivity.java", "BodyUseAPI": [], "Fixed commit": "4b4ff76b322b75f87ef6bf9f6d592aa4349dd1bb", "Url": "https://api.github.com/repos/prasadsn/StockBoo", "Date": "2015-11-08T14:32:11Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (leaderboard != null) { runs = leaderboard.getRuns(); runSize = java.lang.reflect.Array.getLength(runs); }else { runSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/735/buggy-version/app.src.main.java.edu.ucsb.cs.cs184.speedrun.speedrunapp.GameAdapter.java", "BodyUseAPI": [], "Fixed commit": "4ef0bbd59a60081e3aaa04396d47fbaafddfa2d8", "Url": "https://api.github.com/repos/bzhu36/SpeedrunApp", "Date": "2017-12-08T05:40:17Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(event.getThrowable())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (causa == null) { causa = event.getThrowable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2936/buggy-version/pic-project.pic-web.src.main.java.pe.com.bbva.pic.ui.util.PicErrorHandler.java", "BodyUseAPI": [], "Fixed commit": "156aecb6ddb6257765c9e766eea8d9851d55895d", "Url": "https://api.github.com/repos/stormenta/pic", "Date": "2015-10-02T00:21:56Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exerciseGroup1.getTimeMaxP()) > 0) { runningExercise.setTimeMaxP(exerciseGroup1.getTimeMaxP()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1923/buggy-version/mobile.src.main.java.com.alejandro_castilla.cloudfitforwear.utilities.Utilities.java", "BodyUseAPI": ["WearableTraining.RunningExercise.setTimeMaxP(exerciseGroup1.getTimeMaxP())", "com.alejandro_castilla.cloudfitforwear.cloudfit.exercises.ExerciseGroup1.getTimeMaxP()"], "Fixed commit": "0bfd63995b56fe89755092d5ccf543a633588a7a", "Url": "https://api.github.com/repos/alejandrocq/cloudfit-for-wear", "Date": "2016-07-05T16:19:30Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (instance != null) { instance.getQueue().cancel(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2845/buggy-version/src.main.java.org.jenkinsci.plugins.workflow.job.WorkflowJob.java", "BodyUseAPI": ["instance.getQueue().cancel(org.jenkinsci.plugins.workflow.job.WorkflowJob)", "jenkins.model.Jenkins.getQueue()"], "Fixed commit": "b800b6eb6fbfc9f44bd8798d2e3812a55f654f04", "Url": "https://api.github.com/repos/csiden/workflow-job-plugin", "Date": "2016-09-13T22:15:17Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validCommand) { if (!(direction.validateDirection(splitArgs[2]))) { validCommand = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6525/buggy-version/src.main.java.robotsim.Commands.PlaceCommand.java", "BodyUseAPI": [], "Fixed commit": "adfc1cd12f33db8c1e7a00b8196db74551b3ec67", "Url": "https://api.github.com/repos/densikat/Robot-Simulator", "Date": "2016-04-26T12:56:52Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (latex.contains(\"subarray\")) { latex = latex.replaceAll(\"subarray\", \"array\"); com.formulasearchengine.mathosphere.pomlp.MathParser.LOG.trace((\" Eval replacement of subarray: \" + latex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3022/buggy-version/pomlp.src.main.java.com.formulasearchengine.mathosphere.pomlp.MathParser.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "a4f441a3c4fc2f003038016def4573414c230242", "Url": "https://api.github.com/repos/AndreG-P/mathosphere", "Date": "2017-12-21T04:59:38Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.StringTokenizer.nextToken()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.intellij.openapi.util.text.StringUtil.containsChar(token, com.intellij.diagnostic.CookieManager.NAME_VALUE_SEPARATOR)) { cookie.put(token.substring(0, token.indexOf(com.intellij.diagnostic.CookieManager.NAME_VALUE_SEPARATOR)).toLowerCase(), token.substring(((token.indexOf(com.intellij.diagnostic.CookieManager.NAME_VALUE_SEPARATOR)) + 1), token.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4843/buggy-version/platform.platform-impl.src.com.intellij.diagnostic.CookieManager.java", "BodyUseAPI": ["java.util.Map.put(java.lang.String,java.lang.String)", "java.lang.String.indexOf(char)", "java.lang.String.toLowerCase()", "java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "63066fa1b3bc7d355a7b0b5cb9ecc3c1b2356456", "Url": "https://api.github.com/repos/consulo/consulo", "Date": "2015-08-29T03:03:39Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.get(\"language\")) != null) { language = data.get(\"language\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6625/buggy-version/source.library.com.restfb.types.PageRating.java", "BodyUseAPI": ["com.restfb.json.JsonObject.get(java.lang.String)", "data.get(\"language\").toString()"], "Fixed commit": "8a7e7581d7f80e7aa6b4c5aa3d955980489fb443", "Url": "https://api.github.com/repos/restfb/restfb", "Date": "2016-05-08T16:52:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authenticationHelper.isLogged(getHttpServletRequest())) { return javax.ws.rs.core.Response.seeOther(uri(Route.INDEX)).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8469/buggy-version/dropbitz.src.main.java.org.teknux.dropbitz.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "eb9bbc21555fc798302a2d51a41410b1abb889c1", "Url": "https://api.github.com/repos/teknux-org/dropbitz", "Date": "2014-07-18T08:38:28Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (authenticationHelper.isAuthorized(getHttpServletRequest())) { return javax.ws.rs.core.Response.seeOther(uri(Route.INDEX)).build(); }else { return javax.ws.rs.core.Response.seeOther(uri(Route.AUTH)).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8469/buggy-version/dropbitz.src.main.java.org.teknux.dropbitz.controller.MainController.java", "BodyUseAPI": [], "Fixed commit": "eb9bbc21555fc798302a2d51a41410b1abb889c1", "Url": "https://api.github.com/repos/teknux-org/dropbitz", "Date": "2014-07-18T08:38:28Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tooltip) != null) label.setCustomTooltip(tooltip);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7993/buggy-version/src.main.java.com.creativemd.ingameconfigmanager.api.common.segment.TitleSegment.java", "BodyUseAPI": [], "Fixed commit": "99e3e45978fde9e14e304cd36ace14f68f9669c5", "Url": "https://api.github.com/repos/CreativeMD/IGCM", "Date": "2016-09-13T20:28:53Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.asiainfo.ocmanager.rest.resource.persistence.UserRoleViewPersistenceWrapper.getRoleBasedOnUserAndTenant(java.lang.String,Constant.ROOTTENANTID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((role == null) || (!(role.getRoleName().equals(Constant.SYSADMIN)))) { return javax.ws.rs.core.Response.status(Status.UNAUTHORIZED).entity(new com.asiainfo.ocmanager.rest.bean.ResourceResponseBean(\"update user password failed\", \"the user is not system admin role or it is NOT change itself password, does NOT have the update user password permission.\", com.asiainfo.ocmanager.rest.constant.ResponseCodeConstant.NO_UPDATE_USER_PASSWORD_PERMISSION)).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7822/buggy-version/src.com.asiainfo.ocmanager.rest.resource.UserResource.java", "BodyUseAPI": [], "Fixed commit": "c3b9d732128af8dbc62da408293da0ae2d4ea7fe", "Url": "https://api.github.com/repos/zhaoyim/RestServer", "Date": "2017-08-18T10:27:27Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((acceptTypes == null) && (!(producesMediaTypes.isEmpty()))) { responseType = producesMediaTypes.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1147/buggy-version/core.src.main.java.org.wso2.msf4j.internal.MSF4JMessageProcessor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "bb50ad5a73f440505f3f01cff00e871eae8c3cca", "Url": "https://api.github.com/repos/wso2/msf4j", "Date": "2016-06-27T10:55:42Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dangdang.ddframe.job.cloud.scheduler.producer.TaskProducerScheduler.buildJobDetail(jobConfig.getTypeConfig().getCoreConfig().getCron())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(scheduler.checkExists(jobDetail.getKey()))) { jobDetail.getJobDataMap().put(\"readyService\", new com.dangdang.ddframe.job.cloud.scheduler.state.ready.ReadyService(regCenter)); scheduler.scheduleJob(jobDetail, buildTrigger(jobConfig.getTypeConfig().getCoreConfig().getCron())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4160/buggy-version/elastic-job-cloud.elastic-job-cloud-scheduler.src.main.java.com.dangdang.ddframe.job.cloud.scheduler.producer.TaskProducerScheduler.java", "BodyUseAPI": ["org.quartz.JobDetail.getJobDataMap()", "org.quartz.Scheduler.scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)", "jobDetail.getJobDataMap().put(java.lang.String,com.dangdang.ddframe.job.cloud.scheduler.state.ready.ReadyService)"], "Fixed commit": "8898c671c522e21a8ce43a095c4e8e078d1bac69", "Url": "https://api.github.com/repos/leekay0032/elastic-job", "Date": "2016-09-14T08:26:36Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openlmis.core.LMISApp.getInstance().getFeatureToggleFor(R.bool.feature_training)) { return org.openlmis.core.model.Period.generateForTraining(new java.util.Date(org.openlmis.core.LMISApp.getInstance().getCurrentTimeMillis())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5503/buggy-version/app.src.main.java.org.openlmis.core.model.service.RequisitionPeriodService.java", "BodyUseAPI": [], "Fixed commit": "81b6772227481dca5f3f7b3019857cb0c3dced4a", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-12-20T08:33:26Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ObjectLabEnterpriseSoftware.InputValidation.getDataType(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (testColumnInput == (-1)) { ErrorText.setText(\"Invalid data entry for build data!\"); ErrorText.setVisible(true); return false; }else if (testColumnInput != expectedColumnInput) { return false; }else if (!(deviceModel.addField(trackableFields.get(column), deviceInputTable.getValueAt(0, column)))) { ErrorText.setText(\"Invalid data entry for build data!\"); ErrorText.setVisible(true); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1917/buggy-version/ObjectLabSoftware.src.ObjectLabEnterpriseSoftware.BuildView.java", "BodyUseAPI": [], "Fixed commit": "e9f66f7bf67130401d100d93577f6f2d4b6701ac", "Url": "https://api.github.com/repos/JalIrani/tomsoft", "Date": "2015-05-04T20:26:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index > letzterIndex) { zweiteStelle = i; letzterIndex = index; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5601/buggy-version/src.Datenbank.java", "BodyUseAPI": [], "Fixed commit": "ef67395edf171dd352f393961145307be6446db7", "Url": "https://api.github.com/repos/recondita/Stundenplan", "Date": "2013-09-08T19:22:30Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.delete()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!fileDeleted) org.kairosdb.core.groupby.Group.logger.error((\"Could not delete group file: \" + (m_groupCacheFile.getAbsolutePath())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3808/buggy-version/src.main.java.org.kairosdb.core.groupby.Group.java", "BodyUseAPI": [], "Fixed commit": "81efdeb46efb4936ed261efbad22221ab98dd493", "Url": "https://api.github.com/repos/kairosdb/kairosdb", "Date": "2015-06-03T13:00:01Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.shiro.subject.Subject.getPrincipal()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(username)) { username = \"Anonymous\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4885/buggy-version/src.main.java.org.maxdocs.servlet.MaxDocsServlet.java", "BodyUseAPI": [], "Fixed commit": "25dc850bde9d642e7d9e95e030a61d8a910b45de", "Url": "https://api.github.com/repos/bohni/maxdocs", "Date": "2013-01-22T18:22:04Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userList.length) == 0) { fr.xtof54.jsgo.EventManager.getEventManager().sendEvent(eventType.showMessage, \"you cannot challenge anymore in this ladder\"); }else for (int a = 0; a < 15; a++) java.lang.System.out.println((((\"\\t\" + a) + \"\\t\") + (userList[a])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6370/buggy-version/src.fr.xtof54.jsgo.Ladder.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "90fdb32fa9cab69d21059bb0a7a4584f6ad3c1af", "Url": "https://api.github.com/repos/cerisara/DragonGoApp", "Date": "2014-04-25T06:46:54Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSource == null) || (name == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/803/buggy-version/src.main.java.com.alibaba.druid.stat.DruidDataSourceStatManager.java", "BodyUseAPI": [], "Fixed commit": "3ad88f639a55256c33c6e8c7c2846a95b95b5140", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2014-12-16T14:05:53Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.management.ManagementFactory.getPlatformMBeanServer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mbeanServer == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/803/buggy-version/src.main.java.com.alibaba.druid.stat.DruidDataSourceStatManager.java", "BodyUseAPI": [], "Fixed commit": "3ad88f639a55256c33c6e8c7c2846a95b95b5140", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2014-12-16T14:05:53Z"},
{"Line": "=>1398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.stat.DruidDataSourceStatManager.addDataSource(com.alibaba.druid.pool.DruidDataSource,this.name)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (objectName != null) { this.setObjectName(objectName); this.mbeanRegistered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/803/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSource.java", "BodyUseAPI": ["com.alibaba.druid.pool.DruidDataSource.setObjectName(javax.management.ObjectName)"], "Fixed commit": "3ad88f639a55256c33c6e8c7c2846a95b95b5140", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2014-12-16T14:05:53Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ergebnis) == 0) { testGegner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7387/buggy-version/src.tictactoe.GameUI.java", "BodyUseAPI": [], "Fixed commit": "b94e2119893725f7aa21193bd93ecec1bc1f3d2d", "Url": "https://api.github.com/repos/pridzuhn/tictactoe", "Date": "2016-06-30T16:33:15Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gefahrGebannt) == true) { hatComputerGewonnen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7387/buggy-version/src.tictactoe.GameUI.java", "BodyUseAPI": [], "Fixed commit": "b94e2119893725f7aa21193bd93ecec1bc1f3d2d", "Url": "https://api.github.com/repos/pridzuhn/tictactoe", "Date": "2016-06-30T16:33:15Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ergebnis) != 0) && ((testlauf) < 500)) { neuesSpiel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7387/buggy-version/src.tictactoe.GameUI.java", "BodyUseAPI": [], "Fixed commit": "b94e2119893725f7aa21193bd93ecec1bc1f3d2d", "Url": "https://api.github.com/repos/pridzuhn/tictactoe", "Date": "2016-06-30T16:33:15Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gefahrGebannt) == true) { testGegner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7387/buggy-version/src.tictactoe.GameUI.java", "BodyUseAPI": [], "Fixed commit": "b94e2119893725f7aa21193bd93ecec1bc1f3d2d", "Url": "https://api.github.com/repos/pridzuhn/tictactoe", "Date": "2016-06-30T16:33:15Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chanceErgriffen) == true) { hatComputerGewonnen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7387/buggy-version/src.tictactoe.GameUI.java", "BodyUseAPI": [], "Fixed commit": "b94e2119893725f7aa21193bd93ecec1bc1f3d2d", "Url": "https://api.github.com/repos/pridzuhn/tictactoe", "Date": "2016-06-30T16:33:15Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((testlauf) > 500) { testlauf = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7387/buggy-version/src.tictactoe.GameUI.java", "BodyUseAPI": [], "Fixed commit": "b94e2119893725f7aa21193bd93ecec1bc1f3d2d", "Url": "https://api.github.com/repos/pridzuhn/tictactoe", "Date": "2016-06-30T16:33:15Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ergebnis) == 0) { testGegner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7387/buggy-version/src.tictactoe.GameUI.java", "BodyUseAPI": [], "Fixed commit": "b94e2119893725f7aa21193bd93ecec1bc1f3d2d", "Url": "https://api.github.com/repos/pridzuhn/tictactoe", "Date": "2016-06-30T16:33:15Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ergebnis) != 0) { neuesSpiel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7387/buggy-version/src.tictactoe.GameUI.java", "BodyUseAPI": [], "Fixed commit": "b94e2119893725f7aa21193bd93ecec1bc1f3d2d", "Url": "https://api.github.com/repos/pridzuhn/tictactoe", "Date": "2016-06-30T16:33:15Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.getStmt().executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res1.next()) { java.sql.ResultSet res2 = database.getStmt().executeQuery(((((((\"SELECT * FROM Friendship WHERE User2ID = \\\"\" + (user1ID.replace(\"\\\"\", \"\\\"\\\"\"))) + \"\\\" AND User1ID = \\\"\") + (user2ID.replace(\"\\\"\", \"\\\"\\\"\"))) + \"\\\" AND Pending = \") + false) + \";\")); if (res2.next()) { result = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4717/buggy-version/src.bian.User.java", "BodyUseAPI": [], "Fixed commit": "5f39713044cab60c1f087a187fb3f95c1faff280", "Url": "https://api.github.com/repos/KaiChiehHuang/QuizWeb", "Date": "2016-03-11T06:17:13Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sandwich[IND_SANDWICH_TYPE]) != null) && (sandwich[IND_SANDWICH_TYPE].contains(\"\u05e1\u05d1\u05d9\u05d7\"))) { sandwich[IND_SANDWICH_PRICE] = baguetteSabih; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7776/buggy-version/app.src.main.java.watchtower.ayalacashier.StudentOrder.java", "BodyUseAPI": [], "Fixed commit": "307e120ae74f2836fd4b94c8dd4897b6cf74ac4b", "Url": "https://api.github.com/repos/watchtower314/Sandwich", "Date": "2017-12-14T17:23:43Z"},
{"Line": "=>685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sandwich[IND_SANDWICH_TYPE]) != null) && (sandwich[IND_SANDWICH_TYPE].contains(\"\u05e1\u05d1\u05d9\u05d7\"))) { sandwich[IND_SANDWICH_PRICE] = (Cashier.SANDWICH_PRICES[Cashier.IND_SABIH]) + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7776/buggy-version/app.src.main.java.watchtower.ayalacashier.StudentOrder.java", "BodyUseAPI": [], "Fixed commit": "307e120ae74f2836fd4b94c8dd4897b6cf74ac4b", "Url": "https://api.github.com/repos/watchtower314/Sandwich", "Date": "2017-12-14T17:23:43Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchView) != null) { searchView.doMessage(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4274/buggy-version/src.main.java.de.onyxbits.raccoon.gui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "323e895190eae3e398a78d93fb2656049f281b2e", "Url": "https://api.github.com/repos/onyxbits/Raccoon", "Date": "2014-08-02T23:11:28Z"},
{"Line": "=>1431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.orientechnologies.common.log.OLogManager.instance().isDebugEnabled()) com.orientechnologies.common.log.OLogManager.instance().debug(this, \"%d Committed transaction %d on database '%s' (result=%s)\", java.lang.Thread.currentThread().getId(), clientTx.getId(), databaseRecord.getName(), result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1419/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage.java", "BodyUseAPI": [], "Fixed commit": "0fa5970799e927bb788e06ba59411324be7c7784", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-07-18T20:27:54Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((screenTransition) != null) { float alpha = (t) / duration; screenTransition.render(batch, currFbo.getColorBufferTexture(), nextFbo.getColorBufferTexture(), alpha); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5298/buggy-version/core.src.com.libgdx.playground.screens.DirectedGame.java", "BodyUseAPI": [], "Fixed commit": "74448fbf4d29cc837a66bccf393199bd81045c41", "Url": "https://api.github.com/repos/edesdan/libgdx-playground", "Date": "2015-06-08T14:32:22Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.emc.storageos.management.backup.BackupCmd.cli.hasOption(com.emc.storageos.management.backup.BackupCmd.CommandType.restore.name()))) { com.emc.storageos.management.backup.BackupCmd.initBackupOps(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1592/buggy-version/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.BackupCmd.java", "BodyUseAPI": [], "Fixed commit": "5e7acf863811d9459962fe0bddfb5288543fc1b1", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-07-29T07:43:32Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (userKey != null) { user = CacheStore.sessionMap.get(userKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1756/buggy-version/app.controllers.UserApp.java", "BodyUseAPI": ["CacheStore.sessionMap.get(java.lang.String)"], "Fixed commit": "ee85d420fdb7c4b2d245f288e97d3c21eb27b533", "Url": "https://api.github.com/repos/penpen787/yona", "Date": "2016-02-16T12:35:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((guess) == null) { guess = mapView.addMarker(new com.mapbox.mapboxsdk.annotations.MarkerOptions().title(\"Guess\").position(point)); }else { mapView.removeMarker(guess); guess = mapView.addMarker(new com.mapbox.mapboxsdk.annotations.MarkerOptions().title(\"Guess\").position(point)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7766/buggy-version/app.src.main.java.mobiledev.unb.ca.pinpoint.Map.java", "BodyUseAPI": [], "Fixed commit": "01ef49765cdbd7c28e45e1ca983386d92df8dd9b", "Url": "https://api.github.com/repos/tritania/Pinpoint", "Date": "2016-02-19T20:11:11Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.st_ddt.crazychats.data.ChatPlayerData.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((player == null) || (!(player.isOnline()))) || ((player.getWorld()) == null)) return new java.util.TreeMap<>(java.lang.String.CASE_INSENSITIVE_ORDER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6632/buggy-version/CrazyChats.src.de.st_ddt.crazychats.data.ChatPlayerData.java", "BodyUseAPI": [], "Fixed commit": "81ea203dfc2bbad456d56e895ec8c4bd68ba3ab5", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2013-11-30T12:05:46Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(tokensToRevoke)) { tokenMgtDAO.revokeTokens(tokensToRevoke.toArray(new java.lang.String[tokensToRevoke.size()])); java.util.List<org.wso2.carbon.identity.oauth2.model.AuthzCodeDO> latestAuthzCodes = tokenMgtDAO.getLatestAuthorizationCodesOfUserStore(tenantId, userStoreName); for (org.wso2.carbon.identity.oauth2.model.AuthzCodeDO authzCodeDO : latestAuthzCodes) { org.wso2.carbon.identity.oauth.OAuthUtil.clearOAuthCache((((authzCodeDO.getConsumerKey()) + \":\") + (authzCodeDO.getAuthorizationCode()))); } tokenMgtDAO.deactivateAuthorizationCode(latestAuthzCodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4858/buggy-version/components.org.wso2.carbon.identity.oauth.src.main.java.org.wso2.carbon.identity.oauth2.internal.OAuthUserStoreConfigListenerImpl.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.toArray(java.lang.String[])", "org.wso2.carbon.identity.oauth2.dao.TokenMgtDAO.revokeTokens(java.lang.String[])"], "Fixed commit": "39a342ba651f86a6edb5459177a55356b29d9fa7", "Url": "https://api.github.com/repos/dimuthud/identity-inbound-auth-oauth", "Date": "2016-12-14T14:48:25Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.pms.util.StringUtil.hasValue(tagInfo.year)) { if ((tagInfo.year.length()) > 4) { result.updateString(\"YEAR\", tagInfo.year.substring(0, 4)); }else { result.updateString(\"YEAR\", tagInfo.year); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2838/buggy-version/src.main.java.net.pms.database.TableMusicBrainzReleases.java", "BodyUseAPI": ["java.sql.ResultSet.updateString(java.lang.String,tagInfo.year)", "tagInfo.year.length()", "tagInfo.year.substring(int,int)", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year.substring(0, 4))"], "Fixed commit": "13ce7f12c4ade913933b635109cbd2fa55d779f5", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2016-12-18T06:28:01Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(gameplay.get(\"idStudent\").toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (idStudent == 0) { idPlayer = playerController.createPlayer(idSG, version, idStudent, params); }else { idPlayer = playerController.getPlayerFromIdStudent(idStudent, idSG, version); if (idPlayer == 0) { idPlayer = playerController.createPlayer(idSG, version, idStudent, params); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4039/buggy-version/src.main.java.uws.engage.assessment.GamePlayResource.java", "BodyUseAPI": ["uws.engage.controller.PlayerController.createPlayer(int,int,int,java.util.ArrayList<org.json.simple.JSONObject>)", "uws.engage.controller.PlayerController.getPlayerFromIdStudent(int,int,int)", "uws.engage.controller.PlayerController.createPlayer(int,int,int,java.util.ArrayList<org.json.simple.JSONObject>)"], "Fixed commit": "805ebd7398a71b14fadbda7e1e6409e58f08c0ce", "Url": "https://api.github.com/repos/yaelleUWS/engage_ws", "Date": "2014-11-22T21:21:15Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.Resources.getXml(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((parser.getAttributeCount()) > 0) && (parser.getAttributeName(0).equals(\"iconupon\"))) { iconUpon = loadBitmap(parser.getAttributeValue(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5798/buggy-version/src.ru.henridellal.emerald.IconPackManager.java", "BodyUseAPI": ["ru.henridellal.emerald.IconPackManager.loadBitmap(parser.getAttributeValue(0))", "org.xmlpull.v1.XmlPullParser.getAttributeValue(int)"], "Fixed commit": "456ebf5a7c46818ff61167669c55a66fc338e59a", "Url": "https://api.github.com/repos/HenriDellal/emerald", "Date": "2017-10-08T06:33:22Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iconBacks) != null) { if ((iconBacks.size()) > 0) { w = iconBacks.get(0).getWidth(); h = iconBacks.get(0).getHeight(); }else { w = b.getWidth(); h = b.getHeight(); } }else { w = b.getWidth(); h = b.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5798/buggy-version/src.ru.henridellal.emerald.IconPackManager.java", "BodyUseAPI": [], "Fixed commit": "456ebf5a7c46818ff61167669c55a66fc338e59a", "Url": "https://api.github.com/repos/HenriDellal/emerald", "Date": "2017-10-08T06:33:22Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iconBacks.size()) > 0) { canvas.drawBitmap(iconBacks.get(((int) ((java.lang.Math.random()) * (iconBacks.size())))), 0, 0, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5798/buggy-version/src.ru.henridellal.emerald.IconPackManager.java", "BodyUseAPI": ["android.graphics.Canvas.drawBitmap(iconBacks.get(((int) ((java.lang.Math.random()) * (iconBacks.size())))),int,int,<nulltype>)", "java.util.ArrayList<android.graphics.Bitmap>.size()", "java.util.ArrayList<android.graphics.Bitmap>.get(((int) ((java.lang.Math.random()) * (iconBacks.size()))))"], "Fixed commit": "456ebf5a7c46818ff61167669c55a66fc338e59a", "Url": "https://api.github.com/repos/HenriDellal/emerald", "Date": "2017-10-08T06:33:22Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.Resources.getXml(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((parser.getAttributeCount()) > 0) && (parser.getAttributeName(0).equals(\"iconmask\"))) { iconMask = loadBitmap(parser.getAttributeValue(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5798/buggy-version/src.ru.henridellal.emerald.IconPackManager.java", "BodyUseAPI": ["ru.henridellal.emerald.IconPackManager.loadBitmap(parser.getAttributeValue(0))", "org.xmlpull.v1.XmlPullParser.getAttributeValue(int)"], "Fixed commit": "456ebf5a7c46818ff61167669c55a66fc338e59a", "Url": "https://api.github.com/repos/HenriDellal/emerald", "Date": "2017-10-08T06:33:22Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5330/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "92bdf4ab5f631eb81913b9c1c8ace8ce61904186", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameters) != null) { parameters = reusable.swapParameters(parameters); parameterCount = reusable.getParameterCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6511/buggy-version/log4j-core.src.main.java.org.apache.logging.log4j.core.async.RingBufferLogEvent.java", "BodyUseAPI": [], "Fixed commit": "1eadde5971f209283275c59138867d9b55568ea4", "Url": "https://api.github.com/repos/rlugojr/logging-log4j2", "Date": "2016-04-22T03:50:28Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameters) != null) { parameters = reusable.swapParameters(parameters); parameterCount = reusable.getParameterCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6511/buggy-version/log4j-core.src.main.java.org.apache.logging.log4j.core.impl.MutableLogEvent.java", "BodyUseAPI": [], "Fixed commit": "1eadde5971f209283275c59138867d9b55568ea4", "Url": "https://api.github.com/repos/rlugojr/logging-log4j2", "Date": "2016-04-22T03:50:28Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bank.deposit(getAccountNumber(bank), money))) java.lang.System.out.println(\"\uc785\uae08 \uc2e4\ud328!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1347/buggy-version/src.client.Client.java", "BodyUseAPI": [], "Fixed commit": "e8cae08c194b1ac39d7677a7ed2a5bc199771be5", "Url": "https://api.github.com/repos/KMU-bank/KMU-Bank", "Date": "2015-12-05T06:52:26Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (money <= 0) { java.lang.System.out.println(\"\ucd9c\uae08 \uc2e4\ud328!\"); return true; }else if (!(bank.withdraw(getAccountNumber(bank), money))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1347/buggy-version/src.client.Client.java", "BodyUseAPI": ["client.Bank.withdraw(java.lang.String,int)"], "Fixed commit": "e8cae08c194b1ac39d7677a7ed2a5bc199771be5", "Url": "https://api.github.com/repos/KMU-bank/KMU-Bank", "Date": "2015-12-05T06:52:26Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((expStack.size()) > 0) && (opsStack.isEmpty())) { throw new com.jayway.jsonpath.InvalidPathException((\"Expected logical operator (&&, ||) to follow expression \" + (expStack.peek().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6990/buggy-version/json-path.src.main.java.com.jayway.jsonpath.internal.filter.FilterCompiler.java", "BodyUseAPI": ["java.util.Stack<com.jayway.jsonpath.internal.filter.ExpressionNode>.peek()", "expStack.peek().toString()"], "Fixed commit": "1617b3bb8daa0e42328355cae25c23fdad255f44", "Url": "https://api.github.com/repos/binaricko/JsonPath", "Date": "2015-12-08T18:01:24Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPlayer(owner).getUniqueId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (uuid == null) uuid = org.bukkit.Bukkit.getOfflinePlayer(owner).getUniqueId();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3984/buggy-version/src.main.java.com.gmail.Rhisereld.HorizonShips.ShipHandler.java", "BodyUseAPI": [], "Fixed commit": "b48bd2df55958ceb04212df001392919a3a06cd9", "Url": "https://api.github.com/repos/LonelyNeptune/HorizonShips", "Date": "2015-11-19T01:47:19Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (uuid == null) throw new java.lang.IllegalArgumentException(\"Player does not exist.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3984/buggy-version/src.main.java.com.gmail.Rhisereld.HorizonShips.ShipHandler.java", "BodyUseAPI": [], "Fixed commit": "b48bd2df55958ceb04212df001392919a3a06cd9", "Url": "https://api.github.com/repos/LonelyNeptune/HorizonShips", "Date": "2015-11-19T01:47:19Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.creativemd.littletiles.common.utils.LittleTilePreview>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((preview.isCustomPreview()) && (!(preview.getTypeID().equals(\"\")))) nbt.setString(\"type\", preview.getTypeID());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8065/buggy-version/src.main.java.com.creativemd.littletiles.common.items.ItemBlockTiles.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.setString(java.lang.String,preview.getTypeID())", "com.creativemd.littletiles.common.utils.LittleTilePreview.getTypeID()"], "Fixed commit": "826626c046408b82c440a2dd288844aca08b40c0", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-01-22T16:48:19Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openlmis.restapi.service.RestStockCardService.getOrCreateStockCard(java.lang.Long,stockEvent.getProductCode(),java.util.Map<java.lang.String, org.openlmis.restapi.service.StockCard>,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stockCard.getLotsOnHand()) == null) { stockCard.setLotsOnHand(new java.util.ArrayList<org.openlmis.restapi.service.LotOnHand>()); }else { stockCard.setLotsOnHand(new java.util.ArrayList(stockCard.getLotsOnHand())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1261/buggy-version/modules.rest-api.src.main.java.org.openlmis.restapi.service.RestStockCardService.java", "BodyUseAPI": ["org.openlmis.restapi.service.StockCard.getLotsOnHand()", "org.openlmis.restapi.service.StockCard.setLotsOnHand(java.util.ArrayList)", "org.openlmis.restapi.service.StockCard.setLotsOnHand(java.util.ArrayList<org.openlmis.restapi.service.LotOnHand>)"], "Fixed commit": "d368ff8db26144281fde4f32a704847ec17298b0", "Url": "https://api.github.com/repos/SIGLUS/open-lmis", "Date": "2016-08-30T08:39:28Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (key.equals(\"ID\")) { java.lang.String id = request.getParameter(\"id\"); query = (((\"SELECT * FROM employee WHERE person_id='\" + id) + \"' AND department='\") + department) + \"'\"; }else if (key.equals(\"Name\")) { java.lang.String name = request.getParameter(\"id\"); query = (((\"SELECT * FROM employee WHERE name='\" + name) + \"' AND department='\") + department) + \"'\"; }else { query = (\"SELECT * FROM employee WHERE department='\" + department) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7682/buggy-version/src.java.QueryChief.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "69aaef9a70737fd694eb5099669a16e3e18d393f", "Url": "https://api.github.com/repos/zukihxy/DBPJ", "Date": "2016-12-14T02:45:53Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(missingInStaging.isEmpty())) { java.util.List<org.geogit.api.ObjectId> missing = new java.util.ArrayList<org.geogit.api.ObjectId>(missingInStaging); missingInStaging.clear(); forwardedToObjectDb = objectDb.getAll(missing, listener); return computeNext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/293/buggy-version/src.core.src.main.java.org.geogit.storage.StagingDbCompositionHelper.java", "BodyUseAPI": ["java.util.List<org.geogit.api.ObjectId>.clear()"], "Fixed commit": "097fe0e7e7f3713f9532261f34d3a508f6daa59d", "Url": "https://api.github.com/repos/boundlessgeo/GeoGit", "Date": "2013-11-27T20:39:58Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (h2.isChannelOrTransporter) h2.rankWtChannelsAndTransporters = rankChannel;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6718/buggy-version/src.scripts.sonja2016.QuickAverages2.java", "BodyUseAPI": [], "Fixed commit": "6d222a3e6aa283f23760c5564c5ac4058a326cf7", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2016-03-22T03:13:26Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (h2.isChannelOrTransporter) h2.rankKOChannelsAndTransporters = rankChannel;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6718/buggy-version/src.scripts.sonja2016.QuickAverages2.java", "BodyUseAPI": [], "Fixed commit": "6d222a3e6aa283f23760c5564c5ac4058a326cf7", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2016-03-22T03:13:26Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (h2.isChannelOrTransporter) h2.rankAllChannelsAndTransporters = rankChannel;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6718/buggy-version/src.scripts.sonja2016.QuickAverages2.java", "BodyUseAPI": [], "Fixed commit": "6d222a3e6aa283f23760c5564c5ac4058a326cf7", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2016-03-22T03:13:26Z"},
{"Line": "=>3033", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.dnd.DropTargetDropEvent.getTransferable()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tr.isDataFlavorSupported(de.danielluedecke.zettelkasten.NewEntryFrame.urlFlavor)) { java.net.URL url = ((java.net.URL) (tr.getTransferData(de.danielluedecke.zettelkasten.NewEntryFrame.urlFlavor))); if (de.danielluedecke.zettelkasten.util.FileOperationsUtil.isHyperlink(url.toString())) { linkListModel.addElement(url.toString()); jListLinks.scrollRectToVisible(jListLinks.getCellBounds(((linkListModel.size()) - 1), linkListModel.size())); setModified(true); skip = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8783/buggy-version/src.de.danielluedecke.zettelkasten.NewEntryFrame.java", "BodyUseAPI": ["java.awt.datatransfer.Transferable.getTransferData(java.awt.datatransfer.DataFlavor)"], "Fixed commit": "d7a6ed79b503c6a990e1af04c99bdc811640c46b", "Url": "https://api.github.com/repos/sjPlot/Zettelkasten", "Date": "2015-09-27T07:09:11Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((info.getX()) == 0) java.lang.System.out.println((((((touchPos.x) + \" should be between \") + (info.getX())) + \" and \") + ((info.getX()) + (card.getTexture().getWidth()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8601/buggy-version/core.src.com.bs.game.PlayScreen.java", "BodyUseAPI": ["java.io.PrintStream.println((((((touchPos.x) + \" should be between \") + (info.getX())) + \" and \") + ((info.getX()) + (card.getTexture().getWidth()))))", "com.bs.game.PlayScreen.CardInfo.getX()", "com.bs.game.PlayScreen.CardInfo.getX()"], "Fixed commit": "21997e3b8a9d1eb4d1b83bfc3faecbb2ca5d3735", "Url": "https://api.github.com/repos/johnmartin108/BS", "Date": "2016-05-30T01:45:47Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["daoFactory.getProjectGroupDao().getProjectGroupById(account.getProjectGroup().getProjectGroupId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pProjectGroup == null) throw new com.servinglynk.hmis.warehouse.service.exception.ProjectGroupNotFoundException(\"Project group selected does not exist.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7652/buggy-version/hmis-base-service.src.main.java.com.servinglynk.hmis.warehouse.base.service.impl.AccountServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2be99a37709cb28c755a3c9a67acc553dc089138", "Url": "https://api.github.com/repos/servinglynk/hslynk-open-source", "Date": "2017-06-22T15:38:03Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minecolonies.entity.ai.citizen.builder.EntityAIStructureBuilder.getWorkOrder()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((workOrder.getRotation()) == 0) { net.minecraft.block.state.IBlockState blockState = world.getBlockState(pos); if ((blockState.getBlock()) instanceof com.minecolonies.blocks.AbstractBlockHut) { job.getStructure().rotate(blockState.getValue(AbstractBlockHut.FACING).ordinal()); } }else { job.getStructure().rotate(workOrder.getRotation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/265/buggy-version/src.main.java.com.minecolonies.entity.ai.citizen.builder.EntityAIStructureBuilder.java", "BodyUseAPI": ["job.getStructure().rotate(workOrder.getRotation())", "com.minecolonies.colony.workorders.WorkOrderBuild.getRotation()"], "Fixed commit": "25d40da9bce207e023cf4a7d4434c5b91d5125af", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2016-11-07T09:11:50Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_animationSpriteSheet) != spriteSheet) { _animationSpriteSheet = spriteSheet; setSprite(_animationSpriteSheet.get(0)); gotoAndPlay(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4072/buggy-version/src.gameEngine.ramses.entities.AnimationObject.java", "BodyUseAPI": [], "Fixed commit": "a544325c6b283d4fedac94de99203aa6bc834fe5", "Url": "https://api.github.com/repos/Darkfafi/JavaFrameworkRDP", "Date": "2015-11-16T16:07:55Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!jsonObjectParentFound) { parentTypeParametersInfo = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1957/buggy-version/processor.src.main.java.com.bluelinelabs.logansquare.processor.processor.JsonObjectProcessor.java", "BodyUseAPI": [], "Fixed commit": "dce1cf9363be2b4d19e3839487b34bb697427ce4", "Url": "https://api.github.com/repos/ZuZuK/LoganSquare", "Date": "2017-02-27T11:57:32Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((newCookie != null) && ((newCookie.getKey()) != null)) { mCookies.put(newCookie.getKey(), newCookie); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8681/buggy-version/src.com.jbidwatcher.util.http.CookieJar.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.jbidwatcher.util.http.Cookie>.put(newCookie.getKey(),com.jbidwatcher.util.http.Cookie)", "com.jbidwatcher.util.http.Cookie.getKey()"], "Fixed commit": "64ccc5ed13c7ebb920b2ba411674bea6c0768cf3", "Url": "https://api.github.com/repos/hartmut-co-uk/jbidwatcher", "Date": "2016-08-17T12:32:11Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (target == null) { throw new org.zkoss.zk.ui.ComponentNotFoundException((\"EL evaluated to null: \" + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5651/buggy-version/zk.src.org.zkoss.zk.ui.sys.ComponentsCtrl.java", "BodyUseAPI": [], "Fixed commit": "782e344878e251cd05778451c21a80ad33ad5bbb", "Url": "https://api.github.com/repos/chunfuchang/zk", "Date": "2015-05-18T08:23:40Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreMalformed.value()) { return; }else { throw new java.lang.IllegalArgumentException(((\"[scaled_float] only supports finite values, but got [\" + doubleValue) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7329/buggy-version/core.src.main.java.org.elasticsearch.index.mapper.ScaledFloatFieldMapper.java", "BodyUseAPI": [], "Fixed commit": "0848ffd52e54aa0625c75617635fc8d35da0c0df", "Url": "https://api.github.com/repos/elastic/elasticsearch", "Date": "2017-07-31T14:14:30Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SV.instance.snitchList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((n.getRawCullTime()) != null) n.setRawCullTime(com.github.scuwr.snitchvisualizer.classobjects.Snitch.changeToDate(672.0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2319/buggy-version/src.main.java.com.github.scuwr.snitchvisualizer.handlers.SVPlayerHandler.java", "BodyUseAPI": ["com.github.scuwr.snitchvisualizer.classobjects.Snitch.setRawCullTime(com.github.scuwr.snitchvisualizer.classobjects.Snitch.changeToDate(672.0))"], "Fixed commit": "331e9aad234f9698384d12af60eb622c6572784e", "Url": "https://api.github.com/repos/MrLittleKitty/Snitch-Visualizer", "Date": "2016-03-06T22:43:09Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.navercorp.cubridqa.scheduler.common.CommonUtils.isEmpty(conf.getWebBaseUrl_Kr())) { message.setProperty((((com.navercorp.cubridqa.scheduler.common.Constants.MSG_BUILD_URLS_KR) + \"_\") + i), allUrls[i]); }else { message.setProperty((((com.navercorp.cubridqa.scheduler.common.Constants.MSG_BUILD_URLS_KR) + \"_\") + i), (((((conf.getWebBaseUrl_Kr()) + \"/\") + BUILD_ID) + \"/drop/\") + fn)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3234/buggy-version/CTP.common.sched.src.com.navercorp.cubridqa.scheduler.producer.ManualSender.java", "BodyUseAPI": ["com.navercorp.cubridqa.scheduler.common.Message.setProperty((((com.navercorp.cubridqa.scheduler.common.Constants.MSG_BUILD_URLS_KR) + \"_\") + i),(((((conf.getWebBaseUrl_Kr()) + \"/\") + BUILD_ID) + \"/drop/\") + fn))", "com.navercorp.cubridqa.scheduler.producer.Configure.getWebBaseUrl_Kr()"], "Fixed commit": "3c2719c5140436095bb7dcdce3d6f64b20890514", "Url": "https://api.github.com/repos/CUBRID/cubrid-testtools", "Date": "2016-12-06T03:01:18Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.navercorp.cubridqa.scheduler.common.CommonUtils.isEmpty(conf.getWebBaseUrl_Kr())) { BUILD_URLS_KR = BUILD_URLS; }else { BUILD_URLS_KR = ((((conf.getWebBaseUrl_Kr()) + \"/\") + BUILD_ID) + \"/drop/\") + fileName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3234/buggy-version/CTP.common.sched.src.com.navercorp.cubridqa.scheduler.producer.ManualSender.java", "BodyUseAPI": ["com.navercorp.cubridqa.scheduler.producer.Configure.getWebBaseUrl_Kr()"], "Fixed commit": "3c2719c5140436095bb7dcdce3d6f64b20890514", "Url": "https://api.github.com/repos/CUBRID/cubrid-testtools", "Date": "2016-12-06T03:01:18Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s.equalsIgnoreCase(java.lang.Integer.toString(i))) { tempList.add(getImage(this.getClass().getResource((((\"/\" + relativePath) + \"/\") + (imageList[i].getName()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7044/buggy-version/myOwn.src.myOwn.myOwn.java", "BodyUseAPI": ["java.util.ArrayList<java.awt.Image>.add(java.awt.Image)", "myOwn.myOwn.getImage(java.net.URL)", "java.io.File.getName()", "java.lang.Class<? extends myOwn.myOwn>.getResource(java.lang.String)"], "Fixed commit": "55493f0dfb0e098a17e6f06dbb2c9cadf41fc315", "Url": "https://api.github.com/repos/akystyle/ownRepo", "Date": "2015-06-13T20:18:23Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((top) == ((nodes.length) - 1)) nodes[top] = null; else (top)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3180/buggy-version/13-RPN.ArrayStack.java", "BodyUseAPI": [], "Fixed commit": "e2e800acd89c85e5eb652c32638dd1bd8c6c85b9", "Url": "https://api.github.com/repos/kylerchase/apcs-hw", "Date": "2014-04-08T13:50:38Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.context.SecurityContextHolder.getContext().getAuthentication()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authentication == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7987/buggy-version/src.main.java.com.ksoichiro.task.web.AppErrorController.java", "BodyUseAPI": [], "Fixed commit": "76c6c835f50014bdebf68e30855a91343ba22148", "Url": "https://api.github.com/repos/ksoichiro/task", "Date": "2016-12-04T00:55:28Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openhab.binding.somfytahoma.internal.SomfyTahomaBinding.getState(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state == (-1)) { login(); state = getState(deviceUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7288/buggy-version/src.main.java.org.openhab.binding.somfytahoma.internal.SomfyTahomaBinding.java", "BodyUseAPI": [], "Fixed commit": "437e9e260ae409ca3659646708ab795ceb3183fa", "Url": "https://api.github.com/repos/octa22/org.openhab.binding.somfytahoma", "Date": "2016-11-09T20:06:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((map.get(key1)) == null) && ((map.get(key2)) == null)) { if ((key1.compareTo(key2)) > 0) { map.put(key1, ref); }else { map.put(key2, ref.getOppositeOf()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5303/buggy-version/designs.is.plugins.org.obeonetwork.dsl.is.design.src.org.obeonetwork.dsl.is.design.service.ReferencesService.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)", "java.util.Map<java.lang.String, org.obeonetwork.dsl.environment.Reference>.put(java.lang.String,org.obeonetwork.dsl.environment.Reference)", "java.util.Map<java.lang.String, org.obeonetwork.dsl.environment.Reference>.put(java.lang.String,ref.getOppositeOf())"], "Fixed commit": "b9961b8607434e26163c0efd136cd787fb113fcd", "Url": "https://api.github.com/repos/ObeoNetwork/InformationSystem", "Date": "2013-09-20T14:15:53Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((map.get(key1)) == null) && ((map.get(key2)) == null)) { if ((key1.compareTo(key2)) > 0) { map.put(key1, ref); }else { map.put(key2, ref.getOppositeOf()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5303/buggy-version/designs.is.plugins.org.obeonetwork.dsl.is.design.src.org.obeonetwork.dsl.is.design.service.ReferencesService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.obeonetwork.dsl.environment.Reference>.put(java.lang.String,org.obeonetwork.dsl.environment.Reference)", "java.lang.String.compareTo(java.lang.String)", "java.util.Map<java.lang.String, org.obeonetwork.dsl.environment.Reference>.put(java.lang.String,ref.getOppositeOf())"], "Fixed commit": "b9961b8607434e26163c0efd136cd787fb113fcd", "Url": "https://api.github.com/repos/ObeoNetwork/InformationSystem", "Date": "2013-09-20T14:15:53Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((pathNew != null) && (pathNew.startsWith(java.io.File.separator))) { pathNew = pathNew.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/109/buggy-version/library.src.main.java.com.cabe.lib.cache.http.RequestParams.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "ab9abcf6752cc68ba870246c60f4b97f24256e93", "Url": "https://api.github.com/repos/crabfang/RxCache", "Date": "2016-07-06T12:03:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.toString()", "com.cabe.lib.cache.http.RequestParams.getHost()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((url == null) || (host == null)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/109/buggy-version/library.src.main.java.com.cabe.lib.cache.http.RequestParams.java", "BodyUseAPI": [], "Fixed commit": "ab9abcf6752cc68ba870246c60f4b97f24256e93", "Url": "https://api.github.com/repos/crabfang/RxCache", "Date": "2016-07-06T12:03:53Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) { index = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/109/buggy-version/library.src.main.java.com.cabe.lib.cache.http.RequestParams.java", "BodyUseAPI": [], "Fixed commit": "ab9abcf6752cc68ba870246c60f4b97f24256e93", "Url": "https://api.github.com/repos/crabfang/RxCache", "Date": "2016-07-06T12:03:53Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((extra != null) && (extra.containsKey(\"WaitForResult\"))) && (!(extra.getBoolean(\"WaitForResult\")))) { waitingForResult = false; }else { waitingForResult = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1279/buggy-version/Ports.Android.src.com.codename1.impl.android.CodenameOneActivity.java", "BodyUseAPI": [], "Fixed commit": "7c42e903fe5672d949c09dd234ceb6b0c1618e30", "Url": "https://api.github.com/repos/wiltonlazary/CodenameOne", "Date": "2016-04-23T10:43:30Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((extra != null) && (extra.containsKey(\"WaitForResult\"))) && (!(extra.getBoolean(\"WaitForResult\")))) { waitingForResult = false; }else { waitingForResult = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1279/buggy-version/Ports.Android.src.com.codename1.impl.android.CodenameOneActivity.java", "BodyUseAPI": [], "Fixed commit": "7c42e903fe5672d949c09dd234ceb6b0c1618e30", "Url": "https://api.github.com/repos/wiltonlazary/CodenameOne", "Date": "2016-04-23T10:43:30Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRunning) { com.cookapps.kitchenmate.countdown.KitchenTimer.showNotification(mContext, intent, mEndTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/9072/buggy-version/app.src.main.java.com.cookapps.kitchenmate.countdown.KitchenTimer.java", "BodyUseAPI": [], "Fixed commit": "e07f383c005738570aaab2ae168cbf1f286d9e9f", "Url": "https://api.github.com/repos/cook348/Capstone-Project", "Date": "2017-02-12T17:15:29Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((configuration.getCorpusTextType().equals(CorpusTextType.FullText)) && (!(publication.getFullTextContent().isEmpty()))) || (configuration.getCorpusTextType().equals(CorpusTextType.Hybrid))) com.silicolife.textmining.core.datastructures.init.InitConfiguration.getDataAccess().addCorpusPublication(newCorpus, publication);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2872/buggy-version/src.main.java.com.silicolife.textmining.processes.corpora.loaders.CorpusCreation.java", "BodyUseAPI": ["com.silicolife.textmining.core.datastructures.init.InitConfiguration.getDataAccess().addCorpusPublication(com.silicolife.textmining.core.interfaces.core.document.corpus.ICorpus,com.silicolife.textmining.core.interfaces.core.document.IPublication)"], "Fixed commit": "12b6bd67c32b25da03960fec6fcd4fcb814e78fa", "Url": "https://api.github.com/repos/biotextmining/processes", "Date": "2017-05-29T15:05:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dsa.iot.dslink.node.NodePair.getNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(node.getValueType().compare(ValueType.DYNAMIC))) { checkValue(current, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1142/buggy-version/sdk.dslink.src.main.java.org.dsa.iot.dslink.methods.responses.SetResponse.java", "BodyUseAPI": [], "Fixed commit": "06b08afedb3b3a3589879e0d4fa2cce23bb30da4", "Url": "https://api.github.com/repos/IOT-DSA/sdk-dslink-java", "Date": "2015-08-27T18:54:21Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.exoplatform.portal.config.Query<T>.getOwnerType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ownerType != null) { siteType = org.exoplatform.portal.mop.SiteType.valueOf(ownerType.toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3345/buggy-version/lib.src.main.java.org.exoplatform.portal.jdbc.service.JDBCModelStorageImpl.java", "BodyUseAPI": ["org.exoplatform.portal.mop.SiteType.valueOf(java.lang.String)", "java.lang.String.toUpperCase()"], "Fixed commit": "3a60a64cd9a4a0b66477b2cf2717d2c4494ba860", "Url": "https://api.github.com/repos/exo-addons/portal-rdbms", "Date": "2016-05-15T10:27:12Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teamdev.jpa.repository.UserRepository.findOne(userId.getUserId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((message.getRecipient()) != null) && (((message.getRecipient()) == user) || ((message.getUser()) == user))) { allMessagesFromChat.add(new com.teamdev.dto.MessageDto(message.getId(), message.getText(), message.getUser().getId(), message.getUser().getName(), message.getRecipient().getName(), message.getChatRoom().getId(), message.getCreationTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5019/buggy-version/businessLayer.src.main.java.com.teamdev.service.impl.MessageServiceImpl.java", "BodyUseAPI": ["com.teamdev.jpa.model.Message.getId()", "message.getChatRoom().getId()", "com.teamdev.jpa.model.Message.getRecipient()", "message.getUser().getId()", "com.teamdev.jpa.model.Message.getCreationTime()", "com.teamdev.jpa.model.Message.getUser()", "message.getRecipient().getName()", "java.util.Set<com.teamdev.dto.MessageDto>.add(com.teamdev.dto.MessageDto)", "message.getUser().getName()", "com.teamdev.jpa.model.Message.getUser()", "com.teamdev.jpa.model.Message.getChatRoom()", "com.teamdev.jpa.model.Message.getText()"], "Fixed commit": "dbe72c545a9ca711dc65fc91bbdead6566b03384", "Url": "https://api.github.com/repos/alekseytaran/SpringWeb_Chat", "Date": "2016-02-02T19:38:14Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.filteredUserResponseItemsArray.isEmpty())) { return this.filteredUserResponseItemsArray.get(position).getId(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4803/buggy-version/src.com.insta.annuaire.UsersAdapterFilterable.java", "BodyUseAPI": ["java.util.List<com.insta.annuaire.pojo.UserResponse>.get(int)", "this.filteredUserResponseItemsArray.get(position).getId()"], "Fixed commit": "52ce07e3919c9a8b02434d93ef455f456c71da66", "Url": "https://api.github.com/repos/ZwoRmi/AnnuaireInsta", "Date": "2015-04-20T17:44:54Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((linearInequalityConstraintsCMatrixO.numRows) == 0) linearInequalityConstraintsCMatrixO.reshape(0, numVars);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7676/buggy-version/ihmc-convex-optimization-adapter.src.main.java.us.ihmc.convexOptimization.quadraticProgram.SimpleEfficientActiveSetQPSolverWithInactiveVariables.java", "BodyUseAPI": [], "Fixed commit": "5143f656fcb076620cff2a67362384d2c616db6b", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2017-10-26T03:59:22Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((linearEqualityConstraintsAMatrix.numRows) == 0) linearEqualityConstraintsAMatrix.reshape(0, numVars);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7676/buggy-version/ihmc-convex-optimization-adapter.src.main.java.us.ihmc.convexOptimization.quadraticProgram.SimpleEfficientActiveSetQPSolverWithInactiveVariables.java", "BodyUseAPI": [], "Fixed commit": "5143f656fcb076620cff2a67362384d2c616db6b", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2017-10-26T03:59:22Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nasceniaco.utility.CommonUtility.isBetweenOneDay(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!isBetweenOneDay) || (dateLastSearched == null)) { updateUserRecommendation(userSearchRecommendationLoggedInUser, recommendedUsersSingleResult, recommendedUsersByTogetherResult, single_result, together_result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7623/buggy-version/src.main.java.com.nasceniaco.service.RecommendationSystemServiceImp.java", "BodyUseAPI": [], "Fixed commit": "b14284dd36cd3e68bab6e6b87bb511c0f9cfe280", "Url": "https://api.github.com/repos/fuadomar/biyeta-profile-recommendation", "Date": "2017-07-13T12:16:44Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) == null) { request.sendError(\"\"); }else { request.sendError(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5731/buggy-version/java.src.main.java.org.msgpack.rpc.Server.java", "BodyUseAPI": ["java.lang.Exception.getMessage()", "org.msgpack.rpc.Request.sendError(java.lang.String)"], "Fixed commit": "d12c83ef38cb1bda6b70229dac63ea80184f6ffc", "Url": "https://api.github.com/repos/msgpack/msgpack-rpc", "Date": "2012-06-15T03:50:00Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.network.dao.IPAddressDao.findByIpAndSourceNetworkId(nic.getNetworkId(),nic.getIp4Address())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ip != null) { _ipAddrMgr.markIpAsUnavailable(ip.getId()); _ipAddressDao.unassignIpAddress(ip.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6594/buggy-version/server.src.com.cloud.network.guru.DirectNetworkGuru.java", "BodyUseAPI": ["com.cloud.network.dao.IPAddressDao.unassignIpAddress(ip.getId())", "com.cloud.network.dao.IPAddressVO.getId()", "com.cloud.network.dao.IPAddressVO.getId()", "com.cloud.network.IpAddressManager.markIpAsUnavailable(ip.getId())"], "Fixed commit": "e9db31e5139ddfc3bcbf185966935da005252294", "Url": "https://api.github.com/repos/vispractice/cloudstack", "Date": "2016-02-19T01:29:50Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dateValue == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2259/buggy-version/src.main.java.ua.skillsup.gelius.service.impl.ValidationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9c2cd35410871379c3f564d0e004ccda4cac8676", "Url": "https://api.github.com/repos/Yan-Brav/ua.skillsup.gelius", "Date": "2016-08-17T11:50:53Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ca.ece.utoronto.ece1780.runningapp.service.TextToSpeechService.mTts) == null) { stopSelf(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8139/buggy-version/EasyRun.src.ca.ece.utoronto.ece1780.runningapp.service.TextToSpeechService.java", "BodyUseAPI": [], "Fixed commit": "89ae59aae75b4599598f4df188a8c227ae577cd8", "Url": "https://api.github.com/repos/marcyliao/EasyRun", "Date": "2013-11-18T17:22:47Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wraith.library.File.BinaryFile.CompactBinaryFile.getNumber(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fileVersion == (-127)) { for (int i = 0; i < 15; i++) diet.stats[i] = ((int) (file.getNumber(16))); }else if (fileVersion == (-126)) for (int i = 0; i < 15; i++) diet.stats[i] = ((int) (file.getNumber(16)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/505/buggy-version/DietTracker.src.me.ci.ResourceLoader.java", "BodyUseAPI": [], "Fixed commit": "03ed0d6b9a3acfeb0d698b2de67e6edbba9a18a7", "Url": "https://api.github.com/repos/TheDudeFromCI/DietTracker", "Date": "2015-02-01T09:11:22Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((monthDay.length) < 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2629/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": [], "Fixed commit": "127467f0c06b27bf26b1653cb99834808a9d77c1", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T05:54:30Z"},
{"Line": "=>458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((voteSurvey) != null) { voteSurvey.updateFrom(voteSurvey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8284/buggy-version/Conventions.app.src.main.java.amai.org.conventions.model.ConventionEvent.java", "BodyUseAPI": [], "Fixed commit": "49657a1900c540e8848dc41486fb43b639fc46bc", "Url": "https://api.github.com/repos/dbahat/conventions", "Date": "2017-08-18T14:11:06Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((op.targetResource()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5022/buggy-version/src.main.java.com.microsoft.azure.vmagent.AzureVMCloud.java", "BodyUseAPI": [], "Fixed commit": "973edc73bb430275f1ea6d5e60a6567f31a067b2", "Url": "https://api.github.com/repos/jenkinsci/azure-vm-agents-plugin", "Date": "2017-02-07T21:36:35Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.gasPedal) == 0) && ((this.actualSpeed) != 0)) { this.actualSpeed = 0; this.sendSignals(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4845/buggy-version/src.main.java.hu.oe.nik.szfmv.automatedcar.powertrainsystem.PowertrainSystem.java", "BodyUseAPI": [], "Fixed commit": "5e7719d369e2d0b5c2ca0a55e827db84ce493f87", "Url": "https://api.github.com/repos/SzFMV2017-Osz/AutomatedCar", "Date": "2017-10-08T15:28:46Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.features.gf.objects.PDCalRGB.getGamma()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (gammaValue == null) { org.verapdf.features.tools.ErrorsHelper.addErrorIntoCollection(collection, gamma, \"Gamma value is not present\"); }else if ((gammaValue.length) < 3) { org.verapdf.features.tools.ErrorsHelper.addErrorIntoCollection(collection, gamma, \"Gamma value contains less than three elements\"); }else { gamma.setAttribute(\"red\", java.lang.String.valueOf(gammaValue[0])); gamma.setAttribute(\"green\", java.lang.String.valueOf(gammaValue[1])); gamma.setAttribute(\"blue\", java.lang.String.valueOf(gammaValue[2])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/545/buggy-version/feature-reporting.src.main.java.org.verapdf.features.gf.objects.GFColorSpaceFeaturesObject.java", "BodyUseAPI": ["org.verapdf.features.tools.FeatureTreeNode.setAttribute(java.lang.String,java.lang.String)", "java.lang.String.valueOf(double)", "java.lang.String.valueOf(double)", "org.verapdf.features.tools.FeatureTreeNode.setAttribute(java.lang.String,java.lang.String)", "org.verapdf.features.tools.FeatureTreeNode.setAttribute(java.lang.String,java.lang.String)", "java.lang.String.valueOf(double)"], "Fixed commit": "48c2300648f633dde0ba43fb51d9515276250977", "Url": "https://api.github.com/repos/shem-sergey/veraPDF-greenfield-validation", "Date": "2017-01-31T10:30:27Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delegate) != null) { delegate.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1696/buggy-version/lucene.src.main.java.com.orientechnologies.lucene.engine.OLuceneIndexEngineDelegate.java", "BodyUseAPI": [], "Fixed commit": "ddf8b0c6d47db58b708b055422f394598437ef45", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-10-18T13:13:38Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((propFile != null) && (propFile.exists())) { gsConfigProperties = mil.nga.giat.geowave.core.cli.operations.config.options.ConfigOptions.loadProperties(propFile, null); }else { gsConfigProperties = new java.util.Properties(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4157/buggy-version/extensions.cli.geoserver.src.main.java.mil.nga.giat.geowave.cli.geoserver.GeoServerConfig.java", "BodyUseAPI": [], "Fixed commit": "ce9a6bc97683e684dacb2ae174a929440151513b", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2017-04-06T19:56:26Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.denimgroup.threadfix.service.util.ControllerUtils.getItem(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (logId != null) { map.put(\"logIdToExpand\", logId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4155/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.webapp.controller.ErrorLogController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "a4ea0a47140628c981fd7154d7b587ee6ebcc850", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-04-08T17:01:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) throw new java.lang.NullPointerException(\"item\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2280/buggy-version/src.com.massivecraft.massivecore.nms.NmsItem.java", "BodyUseAPI": [], "Fixed commit": "a1652849ea7eafa6472bf955069b8991cc703dee", "Url": "https://api.github.com/repos/ulumulu1510/MassiveCore", "Date": "2016-03-10T06:53:32Z"},
{"Line": "=>951", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jcdesimp.landlord.LandlordCommandExecutor.getOfflinePlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(possible.hasPlayedBefore())) && (!(possible.isOnline()))) { sender.sendMessage(((ChatColor.RED) + \"That player is not recognized.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/754/buggy-version/src.com.jcdesimp.landlord.LandlordCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "b0d20713157eab73ccfedbf4a64a1425c010a4ab", "Url": "https://api.github.com/repos/jcdesimp/Landlord", "Date": "2014-05-01T02:15:40Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tagapi_3.API_Interface.getJVMArgument()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(JVMArgument.isEmpty())) { cmds = java.util.stream.Stream.concat(java.util.Arrays.stream(JVMArguments), java.util.Arrays.stream(cmds)).toArray(java.lang.String[]::new); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7338/buggy-version/src.tagapi_3.API_Interface.java", "BodyUseAPI": [], "Fixed commit": "7199444bcd8c06f5fba8a07ea3e899d70aaf5be9", "Url": "https://api.github.com/repos/ammarx/TagAPI_3", "Date": "2017-06-13T20:01:39Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oval2) == null) oval2 = new android.graphics.RectF();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2689/buggy-version/library.src.main.java.com.lcodecore.tkrefreshlayout.header.bezierlayout.RoundProgressView.java", "BodyUseAPI": [], "Fixed commit": "67c0e3f43e5bf45c3b0062182ab26d5c8240d5a4", "Url": "https://api.github.com/repos/lcodecorex/TwinklingRefreshLayout", "Date": "2017-03-09T15:36:16Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (clickedBlock == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8869/buggy-version/src.io.github.yannici.bedwars.Listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "f23cf811e2bbf334d715c26d717872ecddebfd27", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-04-18T17:39:54Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mWorkoutExercises.isEmpty()) { mExercisesListener.onExercisesEmpty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3056/buggy-version/app.src.main.java.com.zonesciences.pyrros.adapters.SortWorkoutAdapter.java", "BodyUseAPI": [], "Fixed commit": "af92af07da4c99b13434239d5db18c706ea167ac", "Url": "https://api.github.com/repos/pd6569/pyrros", "Date": "2016-12-09T16:09:59Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(\"h\")) { obj.setVb(((obj.getVb()) + inc)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3452/buggy-version/statistic-baas.src.main.java.com.example.statistics.service.helper.OffensiveHelper.java", "BodyUseAPI": [], "Fixed commit": "d17364bb326bd7364dd77ac64740a10b14a3b286", "Url": "https://api.github.com/repos/aetoledano/microservices-quiniela", "Date": "2017-11-03T10:23:46Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board.bitboards.get(board.turn).get(Piece.KING).data) == 0L) { return -(FITNESS_LARGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3297/buggy-version/src.chess_engine.Brain.java", "BodyUseAPI": [], "Fixed commit": "048d208833be2d4cef30f47039d3430bb0dd117b", "Url": "https://api.github.com/repos/philleski/tactician", "Date": "2017-01-22T20:30:30Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(drugOrderItem.getAutoExpireDate().equals(\"\"))) { try { date = sdf.parse(drugOrderItem.getAutoExpireDate()); drugOrder.setAutoExpireDate(date); drugOrder.setDuration(date.toString()); } catch (java.text.ParseException e) { throw new org.openmrs.web.dwr.DWRException(e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7956/buggy-version/web.src.main.java.org.openmrs.web.dwr.DWROrderService.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(drugOrderItem.getAutoExpireDate())", "org.openmrs.web.dwr.DrugOrderListItem.getAutoExpireDate()"], "Fixed commit": "ead9f8a5bf7d3c83c10466c97de7d2c65ae748d8", "Url": "https://api.github.com/repos/icchange/openmrs-core", "Date": "2014-07-21T10:50:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rallocloud.main.assignment.GroupTimes.containsKey(g)) { sendAt(datacenterId, rallocloud.main.assignment.GroupTimes.get(g), CloudSimTags.VM_CREATE_ACK, vm); }else { sendNow(datacenterId, CloudSimTags.VM_CREATE_ACK, vm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3044/buggy-version/RalloCloud.src.rallocloud.main.assignment.ANFDatacenterBroker.java", "BodyUseAPI": ["rallocloud.main.assignment.GroupTimes.get(java.util.List<java.lang.Integer>)", "rallocloud.main.assignment.ANFDatacenterBroker.sendAt(int,rallocloud.main.assignment.GroupTimes.get(g),CloudSimTags.VM_CREATE_ACK,org.cloudbus.cloudsim.Vm)"], "Fixed commit": "f3de94345f6bcf5b9ff458e0ae266466d602fa48", "Url": "https://api.github.com/repos/atary/RalloCloud", "Date": "2015-01-19T20:02:01Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (k != null) { replaceProperty(\"key\", k, org.kite9.diagram.adl.Key.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1260/buggy-version/core.src.main.java.org.kite9.diagram.adl.Diagram.java", "BodyUseAPI": [], "Fixed commit": "578e1397f7a367d60d51d3c511ba2a32f89997e3", "Url": "https://api.github.com/repos/kite9-org/kite9-java", "Date": "2016-08-02T06:58:46Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.code.vimsztool.debug.SuspendThreadStack.getCurThreadRef()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (threadRef == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/9193/buggy-version/sztools.java.com.google.code.vimsztool.debug.StepManager.java", "BodyUseAPI": [], "Fixed commit": "96a787e6b2cab4883a4955eed3a946989d9b97d9", "Url": "https://api.github.com/repos/shrekwang/vim-sztool", "Date": "2012-07-30T07:32:14Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wornItems[Item.ITEMTYPE_SWORD]) != null) { wornItems[Item.ITEMTYPE_SWORD].decreaseStability(); if ((wornItems[Item.ITEMTYPE_SWORD].stability) == 0) { rogue.creature.util.Item temp = wornItems[Item.ITEMTYPE_SWORD]; wornItems[Item.ITEMTYPE_SWORD] = null; this.removeItem(temp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/395/buggy-version/src.rogue.creature.util.Inventory.java", "BodyUseAPI": ["wornItems[Item.ITEMTYPE_SWORD].decreaseStability()"], "Fixed commit": "84ffdb1b084d183a2c807df35174fa011cd10663", "Url": "https://api.github.com/repos/26thmeusoc/adventure-of-umalu", "Date": "2013-03-20T17:07:59Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == data) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4025/buggy-version/src.com.shining.bookmanager.ScanBook.java", "BodyUseAPI": [], "Fixed commit": "a855daf0b146f68befc2629a37645501a0873f5f", "Url": "https://api.github.com/repos/cmjman/BookManager", "Date": "2012-12-11T14:02:24Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (responseValue != null) { try { res.getPortletOutputStream().write(responseValue.getBytes()); } catch (java.io.IOException e) { logger.error(\"Failed to write the response for serviceUrl '{}'\", serviceUrl, e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5/buggy-version/src.main.java.org.apereo.portlet.soffit.connector.SoffitConnectorController.java", "BodyUseAPI": ["res.getPortletOutputStream().write(byte[])", "org.apereo.portlet.soffit.connector.SoffitConnectorController.ResponseWrapper.getBytes()"], "Fixed commit": "26f85cf73c4506cac9b879c85381ca8dd1de8509", "Url": "https://api.github.com/repos/drewwills/Soffit", "Date": "2016-07-27T21:13:32Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mainPlayerMarker == null) { mainPlayerMarker = getMarker(board); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7194/buggy-version/src.main.java.ttt.Minimax.java", "BodyUseAPI": [], "Fixed commit": "ace49a7de719cc2814f16821cc769a7e629a4cd9", "Url": "https://api.github.com/repos/onlyskin/java-ttt", "Date": "2017-10-06T08:05:34Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app.drool.respite.utils.Utilities.isNetworkAvailable(this)) ((app.drool.respite.Respite) (getApplication())).refreshCredentials(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7163/buggy-version/respite.src.main.java.app.drool.respite.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b237f96f71af17c867fd85504be3f1f8975c0de6", "Url": "https://api.github.com/repos/gouthamank/respite", "Date": "2016-07-14T17:45:22Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.madz.lifecycle.annotations.relation.Relation.value()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((net.madz.lifecycle.annotations.Null.class) != relationClass) { if (!(getMetaType().hasRelation(relationClass))) { throw new net.madz.verification.VerificationException(newVerificationFailure(getDottedPath(), SyntaxErrors.LM_REFERENCE_INVALID_RELATION_INSTANCE, klass.getName(), relationClass.getName(), getMetaType().getDottedPath().getAbsoluteName())); } }else { if (!(getMetaType().hasRelation(net.madz.util.StringUtil.toUppercaseFirstCharacter(field.getName())))) { throw new net.madz.verification.VerificationException(newVerificationFailure(getDottedPath(), SyntaxErrors.LM_REFERENCE_INVALID_RELATION_INSTANCE, klass.getName(), relationClass.getName(), getMetaType().getDottedPath().getAbsoluteName())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8238/buggy-version/Platform.Lifecycle.src.main.java.net.madz.lifecycle.meta.impl.builder.StateMachineObjectBuilderImpl.java", "BodyUseAPI": ["net.madz.lifecycle.meta.impl.builder.StateMachineObjectBuilderImpl.newVerificationFailure(getDottedPath(),SyntaxErrors.LM_REFERENCE_INVALID_RELATION_INSTANCE,java.lang.String,java.lang.String,getMetaType().getDottedPath().getAbsoluteName())", "net.madz.lifecycle.meta.builder.StateMachineMetaBuilder.hasRelation(java.lang.Class<?>)", "java.lang.Class<?>.getName()", "java.lang.Class<?>.getName()", "net.madz.lifecycle.meta.impl.builder.StateMachineObjectBuilderImpl.newVerificationFailure(getDottedPath(),SyntaxErrors.LM_REFERENCE_INVALID_RELATION_INSTANCE,java.lang.String,java.lang.String,getMetaType().getDottedPath().getAbsoluteName())"], "Fixed commit": "b605fa725b9dace694b4cd6a615332e8f5f18128", "Url": "https://api.github.com/repos/zhongdj/Swordfish", "Date": "2013-11-18T15:31:41Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((userDetailsService) == null) || (username == null)) || (username.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3567/buggy-version/src.main.java.com.twit.account.service.SecurityServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e7f45adb70f1840393eda8c0651fc7ee754b6872", "Url": "https://api.github.com/repos/superchaoran/mini-twit", "Date": "2016-10-28T02:52:29Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (mCategoryList.get(1))) && (null != ((java.util.Collection<? extends com.xgf.winecome.entity.Goods>) (mShowMsgMap.get(mCategoryList.get(1).getPpid()))))) { com.xgf.winecome.ui.activity.CategoryActivity.mGoodsList.addAll(((java.util.Collection<? extends com.xgf.winecome.entity.Goods>) (mShowMsgMap.get(mCategoryList.get(1).getPpid())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3814/buggy-version/src.com.xgf.winecome.ui.activity.CategoryActivity.java", "BodyUseAPI": ["mCategoryList.get(1).getPpid()", "java.util.HashMap<java.lang.String, java.lang.Object>.get(mCategoryList.get(1).getPpid())", "java.util.ArrayList<com.xgf.winecome.entity.Category>.get(int)", "java.util.ArrayList<com.xgf.winecome.entity.Goods>.addAll(java.lang.Object)"], "Fixed commit": "f82d4580a45f7bed3ba8716b07b5fa2499a2cf48", "Url": "https://api.github.com/repos/xiguofeng/WineCome", "Date": "2015-10-20T02:17:57Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNewPasswordCorrect && isRetypePasswordCorrect) { changePasswordView.hideNewPasswordErrors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7985/buggy-version/app.src.main.java.pl.collage.changepassword.ChangePasswordPresenter.java", "BodyUseAPI": [], "Fixed commit": "8806682e21e7ce1808becd39147aa8c7f0581df9", "Url": "https://api.github.com/repos/matdziu/collage", "Date": "2017-02-19T12:50:25Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start == (root)) { for (java.lang.Integer item : frequentItemCounts.keySet()) { frequentItemCounts.put(item, ((frequentItemCounts.get(item)) * decayWeight)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6/buggy-version/src.main.java.macrobase.analysis.summary.itemset.StreamingFPGrowth.java", "BodyUseAPI": [], "Fixed commit": "cbf4a7aeb6120fd3c4a5c736c087136ff2896aad", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2016-01-02T16:54:22Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(key.equals(\"name\"))) poster.with(\"name\", name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/227/buggy-version/src.main.java.org.kohsuke.github.GHRepository.java", "BodyUseAPI": [], "Fixed commit": "926202900c0c1900bc69cbbee827983fbf6b8aaa", "Url": "https://api.github.com/repos/kohsuke/github-api", "Date": "2012-06-18T19:37:27Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allAirlines) == null) { android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.no_connection_error), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5869/buggy-version/app.src.main.java.com.example.martin.nextflight.FlightSearchActivity.java", "BodyUseAPI": [], "Fixed commit": "5bea84a57ca706ad10e8f2009df6f9f8467e0ece", "Url": "https://api.github.com/repos/eparodi/NextFlight", "Date": "2016-11-21T19:16:01Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((airports) == null) { android.widget.Toast.makeText(getApplicationContext(), getResources().getString(R.string.no_connection_error), Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5869/buggy-version/app.src.main.java.com.example.martin.nextflight.OffersSearchActivity.java", "BodyUseAPI": [], "Fixed commit": "5bea84a57ca706ad10e8f2009df6f9f8467e0ece", "Url": "https://api.github.com/repos/eparodi/NextFlight", "Date": "2016-11-21T19:16:01Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<org.mpi.vasco.txstore.util.ProxyTxnId, java.util.List<org.mpi.vasco.coordination.protocols.util.LockReply>>.get(org.mpi.vasco.txstore.util.ProxyTxnId)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((lcReplyList == null) || (lcReplyList.isEmpty())) { org.mpi.vasco.util.debug.Debug.println(\"Lock reply list is null or empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3684/buggy-version/vasco.src.main.java.org.mpi.vasco.coordination.protocols.AsymProtocol.java", "BodyUseAPI": [], "Fixed commit": "190dcee8c8c5d1f82c0ba9d214e4d6299d6e337d", "Url": "https://api.github.com/repos/pandaworrior/VascoRepo", "Date": "2015-11-03T14:37:32Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.floodlightcontroller.linkdiscovery.internal.LinkDiscoveryManager.log.isTraceEnabled()) { net.floodlightcontroller.linkdiscovery.internal.LinkDiscoveryManager.log.trace(\"Sending LLDP packet out of swich: {}, port: {}, reverse: {}\", new java.lang.Object[]{ iofSwitch.getId().toString(), port.toString(), java.lang.Boolean.toString(isReverse) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1149/buggy-version/src.main.java.net.floodlightcontroller.linkdiscovery.internal.LinkDiscoveryManager.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,java.lang.Object[])"], "Fixed commit": "e977a1d8b661bb38fbe17d563a1bffa0d0b88526", "Url": "https://api.github.com/repos/floodlight/floodlight", "Date": "2015-10-06T21:21:43Z"},
{"Line": "=>1349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((existingInfo.getUnicastValidTime()) == null) { net.floodlightcontroller.linkdiscovery.internal.LinkDiscoveryManager.log.warn(\"Link is BDDP. Changed.\"); linkChanged = true; }else { ignoreBDDP_haveLLDPalready = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1149/buggy-version/src.main.java.net.floodlightcontroller.linkdiscovery.internal.LinkDiscoveryManager.java", "BodyUseAPI": [], "Fixed commit": "e977a1d8b661bb38fbe17d563a1bffa0d0b88526", "Url": "https://api.github.com/repos/floodlight/floodlight", "Date": "2015-10-06T21:21:43Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeAnimation) != null) { activeAnimation.setColor(Color.PINK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3150/buggy-version/core.src.com.majalis.world.GameWorldNode.java", "BodyUseAPI": [], "Fixed commit": "a51a377893027e7d6c41452221ac62270e185499", "Url": "https://api.github.com/repos/majalistic/tales-of-androgyny", "Date": "2017-12-18T03:51:20Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (waitForActivity) { waitForActivityIfNotAvailable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3952/buggy-version/robotium-solo.src.main.java.com.jayway.android.robotium.solo.ActivityUtils.java", "BodyUseAPI": [], "Fixed commit": "85787b450a9f5341fb024306172331b007a3451c", "Url": "https://api.github.com/repos/jayway/robotium", "Date": "2013-06-07T05:58:56Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.azure.management.locks.implementation.ManagementLocksImpl.lockIdParts(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(lockIdParts[i].isEmpty())) { resourceId.append(\"/\").append(lockIdParts[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6566/buggy-version/azure-mgmt-locks.src.main.java.com.microsoft.azure.management.locks.implementation.ManagementLocksImpl.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "79d0b24c267fec23dace2643404a75fe6f1e7028", "Url": "https://api.github.com/repos/martinsawicki/azure-libraries-for-java", "Date": "2017-10-27T23:49:30Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (processedEntitiesAndJASNames.values().contains(jasName)) { jas.common.JASLog.log().severe(\"Duplicate entity mapping detected. Ignoring FML,JasName pair [%s,%s] for pair [%s, %s]\", livingClass, jasName, livingClass, processedEntitiesAndJASNames.get(livingClass)); }else if ((!(entityClassToJASNameBuilder.containsKey(livingClass))) || (entityClassToJASNameBuilder.values().contains(jasName))) { jas.common.JASLog.log().severe(\"Duplicate entity mapping detected: Ignoring FML,JasName pair [%s,%s] for pair [%s, %s]\", livingClass, jasName, livingClass, processedEntitiesAndJASNames.get(livingClass)); }else if (entityClassToJASNameBuilder.containsKey(livingClass)) { processedEntitiesAndJASNames.put(livingClass, jasName); }else { jas.common.JASLog.log().debug(Level.INFO, \"Found new mapping FML,JasName pair [%s,%s] \", entry.getValue(), jasName); newJASNames.add(jasName); processedEntitiesAndJASNames.put(livingClass, jasName); entityClassToJASNameBuilder.forcePut(livingClass, jasName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4528/buggy-version/src.main.java.jas.common.spawner.creature.handler.LivingGroupRegistry.java", "BodyUseAPI": ["jas.common.JASLog.log().severe(java.lang.String,java.lang.Class<? extends net.minecraft.entity.EntityLiving>,java.lang.String,java.lang.Class<? extends net.minecraft.entity.EntityLiving>,processedEntitiesAndJASNames.get(livingClass))", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.HashMap<java.lang.Class<? extends net.minecraft.entity.EntityLiving>, java.lang.String>.put(java.lang.Class<? extends net.minecraft.entity.EntityLiving>,java.lang.String)", "jas.common.JASLog.log().severe(java.lang.String,java.lang.Class<? extends net.minecraft.entity.EntityLiving>,java.lang.String,java.lang.Class<? extends net.minecraft.entity.EntityLiving>,processedEntitiesAndJASNames.get(livingClass))", "java.util.HashMap<java.lang.Class<? extends net.minecraft.entity.EntityLiving>, java.lang.String>.put(java.lang.Class<? extends net.minecraft.entity.EntityLiving>,java.lang.String)", "entityClassToJASNameBuilder.values().contains(java.lang.String)", "com.google.common.collect.BiMap<java.lang.Class<? extends net.minecraft.entity.EntityLiving>, java.lang.String>.forcePut(java.lang.Class<? extends net.minecraft.entity.EntityLiving>,java.lang.String)", "java.util.HashMap<java.lang.Class<? extends net.minecraft.entity.EntityLiving>, java.lang.String>.get(java.lang.Class<? extends net.minecraft.entity.EntityLiving>)", "java.util.HashMap<java.lang.Class<? extends net.minecraft.entity.EntityLiving>, java.lang.String>.get(java.lang.Class<? extends net.minecraft.entity.EntityLiving>)", "jas.common.JASLog.log().debug(Level.INFO,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "1ced2c95ad9d198aea36560e10ed032b5beb22be", "Url": "https://api.github.com/repos/ProjectZulu/JustAnotherSpawner", "Date": "2014-12-09T19:59:08Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cls.getNameIdentifier()) == null) && ((cls.getNode().getElementType()) != (JavaElementType.ENUM_CONSTANT_INITIALIZER))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4832/buggy-version/src.org.gridgain.inspection.comment.GridCommentInspection.java", "BodyUseAPI": [], "Fixed commit": "50bda618f744b3cf678bc62925a36649dbce5b24", "Url": "https://api.github.com/repos/sevdokimov-gg/gg-abbrev-plugin", "Date": "2014-11-24T14:58:55Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tR) != null) tRColor = new com.januskopf.tryangle.triangles.effects.CubeColorSet(tR, colorR, colorG, colorB, com.januskopf.tryangle.triangles.effects.CubeColorSet.TOP_RIGHT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8976/buggy-version/Tryangle.src.com.januskopf.tryangle.triangles.animations.CubeAnimation.java", "BodyUseAPI": [], "Fixed commit": "3ef84bee40f04606029d109618d80ebe18f7fbc8", "Url": "https://api.github.com/repos/Phelicks/Tryangle", "Date": "2014-02-08T18:03:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rB) != null) rBColor = new com.januskopf.tryangle.triangles.effects.CubeColorSet(rB, colorR, colorG, colorB, com.januskopf.tryangle.triangles.effects.CubeColorSet.RIGHT_BOTTOM);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8976/buggy-version/Tryangle.src.com.januskopf.tryangle.triangles.animations.CubeAnimation.java", "BodyUseAPI": [], "Fixed commit": "3ef84bee40f04606029d109618d80ebe18f7fbc8", "Url": "https://api.github.com/repos/Phelicks/Tryangle", "Date": "2014-02-08T18:03:39Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tL) != null) tLColor = new com.januskopf.tryangle.triangles.effects.CubeColorSet(tL, colorR, colorG, colorB, com.januskopf.tryangle.triangles.effects.CubeColorSet.TOP_LEFT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8976/buggy-version/Tryangle.src.com.januskopf.tryangle.triangles.animations.CubeAnimation.java", "BodyUseAPI": [], "Fixed commit": "3ef84bee40f04606029d109618d80ebe18f7fbc8", "Url": "https://api.github.com/repos/Phelicks/Tryangle", "Date": "2014-02-08T18:03:39Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lT) != null) lTColor = new com.januskopf.tryangle.triangles.effects.CubeColorSet(lT, colorR, colorG, colorB, com.januskopf.tryangle.triangles.effects.CubeColorSet.LEFT_TOP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8976/buggy-version/Tryangle.src.com.januskopf.tryangle.triangles.animations.CubeAnimation.java", "BodyUseAPI": [], "Fixed commit": "3ef84bee40f04606029d109618d80ebe18f7fbc8", "Url": "https://api.github.com/repos/Phelicks/Tryangle", "Date": "2014-02-08T18:03:39Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lB) != null) lBColor = new com.januskopf.tryangle.triangles.effects.CubeColorSet(lB, colorR, colorG, colorB, com.januskopf.tryangle.triangles.effects.CubeColorSet.LEFT_BOTTOM);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8976/buggy-version/Tryangle.src.com.januskopf.tryangle.triangles.animations.CubeAnimation.java", "BodyUseAPI": [], "Fixed commit": "3ef84bee40f04606029d109618d80ebe18f7fbc8", "Url": "https://api.github.com/repos/Phelicks/Tryangle", "Date": "2014-02-08T18:03:39Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rT) != null) rTColor = new com.januskopf.tryangle.triangles.effects.CubeColorSet(rT, colorR, colorG, colorB, com.januskopf.tryangle.triangles.effects.CubeColorSet.RIGHT_TOP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8976/buggy-version/Tryangle.src.com.januskopf.tryangle.triangles.animations.CubeAnimation.java", "BodyUseAPI": [], "Fixed commit": "3ef84bee40f04606029d109618d80ebe18f7fbc8", "Url": "https://api.github.com/repos/Phelicks/Tryangle", "Date": "2014-02-08T18:03:39Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.LinearLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (view instanceof android.widget.TextView) { android.widget.TextView title = ((android.widget.TextView) (view)); title.setTextSize(TypedValue.COMPLEX_UNIT_PX, tabTextSize); title.setTypeface(tabTypeface, tabTypefaceStyle); title.setTextColor(tabTextColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5853/buggy-version/src.main.java.com.astuetz.pagerslidingtabstrip.PagerSlidingTabStrip.java", "BodyUseAPI": [], "Fixed commit": "cc70d9300c0fc44fc3d867f8d1f2bd6b6d761213", "Url": "https://api.github.com/repos/trafi/PagerSlidingTabStrip", "Date": "2015-11-17T12:50:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParameter(\"isMainPage\")) != null) { hc.setBase(getDocumentBase()); }else { java.net.URL url = getDocumentBase(); java.io.File file = new java.io.File(url.getPath()); java.lang.String parentPath = file.getParent(); java.net.URL parentUrl = new java.net.URL(url.getProtocol(), url.getHost(), url.getPort(), parentPath); hc.setBase(parentUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1491/buggy-version/Project.Applet1.src.asw1013.applet.TweetListApplet.java", "BodyUseAPI": [], "Fixed commit": "7fa2227153e536e5eccfd09f08709d4c022f15f3", "Url": "https://api.github.com/repos/AL333Z/ASWProject", "Date": "2014-01-15T17:01:37Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParameter(\"isMainPage\")) != null) { hc.setBase(getDocumentBase()); }else { java.net.URL url = getDocumentBase(); java.io.File file = new java.io.File(url.getPath()); java.lang.String parentPath = file.getParent(); java.net.URL parentUrl = new java.net.URL(url.getProtocol(), url.getHost(), url.getPort(), parentPath); hc.setBase(parentUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1491/buggy-version/Project.Applet1.src.asw1013.applet.PostTweetApplet.java", "BodyUseAPI": [], "Fixed commit": "7fa2227153e536e5eccfd09f08709d4c022f15f3", "Url": "https://api.github.com/repos/AL333Z/ASWProject", "Date": "2014-01-15T17:01:37Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (models.dir.LocationType.names.containsKey(s.toUpperCase())) return models.dir.LocationType.names.get(s.toUpperCase()); else return models.dir.LocationType.Unknown;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/186/buggy-version/src.models.dir.LocationType.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.util.HashMap<java.lang.String, models.dir.LocationType>.get(java.lang.String)"], "Fixed commit": "521c95505c02fc6a91e1ee8bd310ab807eb79807", "Url": "https://api.github.com/repos/ateamwpi/HospitalKiosk", "Date": "2017-04-18T22:27:05Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resourceRoot) != null) { return resourceRoot; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8311/buggy-version/jaxrs.src.main.java.org.jboss.as.jaxrs.deployment.JaxrsSpringProcessor.java", "BodyUseAPI": [], "Fixed commit": "6d8c49fa71eea7be9cc3c58216cdaee02425ba77", "Url": "https://api.github.com/repos/wildfly/wildfly", "Date": "2015-04-07T00:27:46Z"},
{"Line": "=>2312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapHolder) != null) mapHolder.refreshMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8157/buggy-version/src.com.androzic.Androzic.java", "BodyUseAPI": [], "Fixed commit": "ac246b3a9ac765e0c7c1b1bdb3a827a326d76276", "Url": "https://api.github.com/repos/andreynovikov/Androzic", "Date": "2014-11-26T08:32:11Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (DatabaseConnector.MapType.HASHMAP.equals(type)) { map = db.createHashMap(name).counterEnable().makeOrGet(); }else if (DatabaseConnector.MapType.TREEMAP.equals(type)) { map = db.createTreeMap(name).valuesOutsideNodesEnable().counterEnable().makeOrGet(); if (isConcurrent) { map = java.util.Collections.synchronizedMap(map); } }else { throw new java.lang.IllegalArgumentException(\"Unsupported MapType.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6218/buggy-version/datumbox-framework-common.src.main.java.com.datumbox.framework.common.persistentstorage.mapdb.MapDBConnector.java", "BodyUseAPI": ["DatabaseConnector.MapType.TREEMAP.equals(DatabaseConnector.MapType)"], "Fixed commit": "84c773ff9cfcf4cffef430110fd25d859b0fe8d3", "Url": "https://api.github.com/repos/datumbox/datumbox-framework", "Date": "2016-03-13T22:05:54Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (title == null) { title = \"no_title_found\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3800/buggy-version/src.main.Functions.java", "BodyUseAPI": [], "Fixed commit": "71561b839def6379310de75d15be8e0e9d6dbd7f", "Url": "https://api.github.com/repos/betaros/imgurloader", "Date": "2017-01-06T18:53:38Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(vehicles_.isEmpty())) { vanetsim.map.Map.getInstance().addVehicle(vehicles_.remove().getVehicle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8630/buggy-version/src.vanetsim.gpstracing.GPSVehicleMaster.java", "BodyUseAPI": ["vanetsim.map.Map.getInstance().addVehicle(vehicles_.remove().getVehicle())", "vanetsim.gpstracing.SortedVehicleQueue.remove()", "vehicles_.remove().getVehicle()"], "Fixed commit": "3d3f45f3ffdee53b6e42f169756fb5e71c38a629", "Url": "https://api.github.com/repos/VanetSim/VanetSim", "Date": "2014-11-23T12:01:45Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(cc.isDegenerate())) || ((cc.getLoop()) != null)) for (it.unibz.krdb.obda.model.Function a : getAtomsForGenerators(tws.getGeneratorsOfDetachedCC(), getFreshVariable())) { outputRules.add(it.unibz.krdb.obda.owlrefplatform.core.reformulation.TreeWitnessRewriter.fac.getCQIE(headAtom, a)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1931/buggy-version/reformulation-core.src.main.java.it.unibz.krdb.obda.owlrefplatform.core.reformulation.TreeWitnessRewriter.java", "BodyUseAPI": [], "Fixed commit": "56634a2ca2a21de641705ad0f32920881e701719", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2015-03-27T12:38:36Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code == null) { return getFallbackValue(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1407/buggy-version/src.main.java.de.fau.cs.mad.wanthavers.server.dao.LangStringDAO.java", "BodyUseAPI": [], "Fixed commit": "6c657daf3d02ebd012b2560415fa87b2d1478870", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-server", "Date": "2016-08-07T14:43:28Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.protectionType) == (de.minestar.moneypit.data.protection.ProtectionType.GIFT)) { if (MoneyPitCore.protectionManager.hasGiftProtection(player.getName())) { de.minestar.minestarlibrary.utils.PlayerUtils.sendError(player, MoneyPitCore.NAME, \"You can only have one gift protection.\"); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1859/buggy-version/src.main.java.de.minestar.moneypit.queues.AddProtectionQueue.java", "BodyUseAPI": [], "Fixed commit": "1df20b424a2fdca8974c727c3a3b1ea5b4eef71e", "Url": "https://api.github.com/repos/Minestar/MoneyPit", "Date": "2012-09-03T21:33:59Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Character.isDigit(iClassName.charAt(0))) throw new com.orientechnologies.orient.core.exception.OSchemaException(\"Found invalid class name. Cannot start with numbers\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/929/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OSchemaShared.java", "BodyUseAPI": [], "Fixed commit": "4e0e33056ee9c646e70c1e310251c2a5cf1024b7", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-02-23T01:13:47Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iPropertyName == null) || ((iPropertyName.length()) == 0)) throw new com.orientechnologies.orient.core.exception.OSchemaException(\"Property name is null or empty\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/929/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "4e0e33056ee9c646e70c1e310251c2a5cf1024b7", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-02-23T01:13:47Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Character.isDigit(iPropertyName.charAt(0))) throw new com.orientechnologies.orient.core.exception.OSchemaException(\"Found invalid property name. Cannot start with numbers\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/929/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "4e0e33056ee9c646e70c1e310251c2a5cf1024b7", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-02-23T01:13:47Z"},
{"Line": "=>8603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jmltypes.isIntegral(newtype)) { int p = pos.getPreferredPosition(); com.sun.tools.javac.tree.JCTree.JCExpression emax = treeutils.makeUtilsMethodCall(expr.pos, \"bigint_le\", expr, treeutils.makeUtilsMethodCall(expr.pos, \"bigint_valueOf\", treeutils.makeLongLiteral(p, maxValue(p, newtype.getTag())))); com.sun.tools.javac.tree.JCTree.JCExpression emin = treeutils.makeUtilsMethodCall(expr.pos, \"bigint_ge\", expr, treeutils.makeUtilsMethodCall(expr.pos, \"bigint_valueOf\", treeutils.makeLongLiteral(p, minValue(p, newtype.getTag())))); addAssert(expr, Label.ARITHMETIC_CAST_RANGE, emax, ((newtype.toString()) + \" overflow\")); addAssert(expr, Label.ARITHMETIC_CAST_RANGE, emin, ((newtype.toString()) + \" underflow\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7269/buggy-version/OpenJML.src.org.jmlspecs.openjml.esc.JmlAssertionAdder.java", "BodyUseAPI": ["com.sun.tools.javac.code.Type.toString()", "org.jmlspecs.openjml.esc.JmlAssertionAdder.addAssert(com.sun.tools.javac.tree.JCTree.JCExpression,Label.ARITHMETIC_CAST_RANGE,com.sun.tools.javac.tree.JCTree.JCExpression,java.lang.String)", "org.jmlspecs.openjml.esc.JmlTreeUtils.makeUtilsMethodCall(int,java.lang.String,com.sun.tools.javac.tree.JCTree.JCExpression,treeutils.makeUtilsMethodCall(expr.pos, \"bigint_valueOf\", treeutils.makeLongLiteral(p, maxValue(p, newtype.getTag()))))", "com.sun.tools.javac.code.Type.getTag()", "org.jmlspecs.openjml.esc.JmlAssertionAdder.addAssert(com.sun.tools.javac.tree.JCTree.JCExpression,Label.ARITHMETIC_CAST_RANGE,com.sun.tools.javac.tree.JCTree.JCExpression,java.lang.String)", "org.jmlspecs.openjml.esc.JmlAssertionAdder.minValue(int,com.sun.tools.javac.code.TypeTag)", "org.jmlspecs.openjml.esc.JmlTreeUtils.makeLongLiteral(int,long)", "org.jmlspecs.openjml.esc.JmlTreeUtils.makeUtilsMethodCall(int,java.lang.String,treeutils.makeLongLiteral(p, minValue(p, newtype.getTag())))", "org.jmlspecs.openjml.esc.JmlTreeUtils.makeLongLiteral(int,long)", "org.jmlspecs.openjml.esc.JmlAssertionAdder.maxValue(int,com.sun.tools.javac.code.TypeTag)", "org.jmlspecs.openjml.esc.JmlTreeUtils.makeUtilsMethodCall(int,java.lang.String,treeutils.makeLongLiteral(p, maxValue(p, newtype.getTag())))", "com.sun.tools.javac.code.Type.toString()", "org.jmlspecs.openjml.esc.JmlTreeUtils.makeUtilsMethodCall(int,java.lang.String,com.sun.tools.javac.tree.JCTree.JCExpression,treeutils.makeUtilsMethodCall(expr.pos, \"bigint_valueOf\", treeutils.makeLongLiteral(p, minValue(p, newtype.getTag()))))", "com.sun.tools.javac.code.Type.getTag()"], "Fixed commit": "b3176c06d78d4fb6d254539119f07324af94c931", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2017-08-13T17:06:55Z"},
{"Line": "=>8645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((newIsPrim && (!(jmltypes.isSameTypeOrRep(jmltypes.BIGINT, newtype)))) && (!isPrim)) && ((currentArithmeticMode.mode()) == (Arithmetic.Mode.MATH))) { if (jmltypes.isSameTypeOrRep(jmltypes.BIGINT, expr.type)) { if ((newtype.getTag()) == (com.sun.tools.javac.code.TypeTag.LONG)) expr = treeutils.makeUtilsMethodCall(pos.getPreferredPosition(), \"bigint_tolong\", expr).setType(syms.longType); else if ((newtype.getTag()) == (com.sun.tools.javac.code.TypeTag.FLOAT)) expr = treeutils.makeUtilsMethodCall(pos.getPreferredPosition(), \"bigint_tofloat\", expr).setType(syms.floatType); else if ((newtype.getTag()) == (com.sun.tools.javac.code.TypeTag.DOUBLE)) expr = treeutils.makeUtilsMethodCall(pos.getPreferredPosition(), \"bigint_todouble\", expr).setType(syms.doubleType); else if (newtype == (jmltypes.REAL)) expr = treeutils.makeUtilsMethodCall(pos.getPreferredPosition(), \"bigint_toreal\", expr).setType(jmltypes.REAL); else expr = treeutils.makeUtilsMethodCall(pos.getPreferredPosition(), \"bigint_toint\", expr).setType(syms.intType); }else if (!(rac)) { expr = M.at(expr).TypeCast(newtype, expr); expr.type = newtype; } return expr; }else { return expr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7269/buggy-version/OpenJML.src.org.jmlspecs.openjml.esc.JmlAssertionAdder.java", "BodyUseAPI": ["com.sun.tools.javac.code.Type.getTag()", "com.sun.tools.javac.code.Type.getTag()", "M.at(expr).TypeCast(com.sun.tools.javac.code.Type,com.sun.tools.javac.tree.JCTree.JCExpression)", "com.sun.tools.javac.code.Type.getTag()", "treeutils.makeUtilsMethodCall(pos.getPreferredPosition(), \"bigint_toreal\", expr).setType(jmltypes.REAL)", "org.jmlspecs.openjml.esc.JmlTypes.isSameTypeOrRep(jmltypes.BIGINT,com.sun.tools.javac.code.Type)"], "Fixed commit": "b3176c06d78d4fb6d254539119f07324af94c931", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2017-08-13T17:06:55Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["h.getGioco().getStato()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (temp instanceof stati.StatoOpzioni) { stati.StatoOpzioni s = ((stati.StatoOpzioni) (temp)); if (!(s.primoAvvio())) { h.salvaStatistiche(); } }else h.salvaStatistiche();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4020/buggy-version/Gioco.src.finestra.FinestraUscita.java", "BodyUseAPI": [], "Fixed commit": "ad360217de26f94036fe694e0e41e34728acf580", "Url": "https://api.github.com/repos/gabrieleSarago/lab", "Date": "2017-06-16T16:10:50Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((varDefCtx.singleVariable(j).Identifier()) != null) { java.lang.String id = varDefCtx.singleVariable(j).Identifier().getText(); this.variables.add(new MentalSymbols.SymbolVariable(scope, type, id)); }else { java.lang.System.err.println((\"fatal: the identifier is illegal.\\n\\t\" + (varDefCtx.getText()))); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3938/buggy-version/src.MentalSymbols.SymbolVariableList.java", "BodyUseAPI": [], "Fixed commit": "f3a8dc3ac1006bfd7d4f07eb78f704d7b60d8195", "Url": "https://api.github.com/repos/BreakVoid/Mental", "Date": "2016-04-04T11:35:09Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!cameraIdGranted) askPermissions[0] = Manifest.permission.CAMERA;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5260/buggy-version/library.src.main.java.com.jmarkstar.mfc.MfcDialog.java", "BodyUseAPI": [], "Fixed commit": "98bfd5d00d633db6273d0bebfef129088c988b3f", "Url": "https://api.github.com/repos/jmarkstar/android-media-file-chooser", "Date": "2017-06-20T08:48:10Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!cameraIdGranted) askPermissions[0] = Manifest.permission.CAMERA;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5260/buggy-version/library.src.main.java.com.jmarkstar.mfc.MfcDialog.java", "BodyUseAPI": [], "Fixed commit": "98bfd5d00d633db6273d0bebfef129088c988b3f", "Url": "https://api.github.com/repos/jmarkstar/android-media-file-chooser", "Date": "2017-06-20T08:48:10Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v7.app.ActionBarActivityDelegateICS.startActionMode(ActionModeWrapper.CallbackWrapper)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (frameworkMode != null) { wrappedMode = new android.support.v7.internal.view.ActionModeWrapper(context, frameworkMode); wrappedCallback.setLastStartedActionMode(wrappedMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4627/buggy-version/src.main.java.android.support.v7.app.ActionBarActivityDelegateICS.java", "BodyUseAPI": [], "Fixed commit": "e11c5c95214890152668db42d09a424e758f3333", "Url": "https://api.github.com/repos/CyberEagle/SupportLibraryV7AppCompatPatched", "Date": "2013-07-31T17:12:39Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.csstudio.archive.common.service.IArchiveReaderFacade.readSamples(java.lang.String,org.csstudio.domain.desy.time.TimeInstant,org.csstudio.domain.desy.time.TimeInstant,org.csstudio.archive.common.requesttype.IArchiveRequestType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((samples.isEmpty()) && (requestType == (ServerRequestType.AVERAGE))) { if (org.csstudio.application.xmlrpc.server.command.ValuesCommand.LOG.isDebugEnabled()) { org.csstudio.application.xmlrpc.server.command.ValuesCommand.LOG.debug(\"No samples found. Reading the last sample before the start time\"); } org.csstudio.archive.common.service.sample.IArchiveSample beforeSample = archiveReader.readLastSampleBefore(name, start); samples = com.google.common.collect.Lists.newArrayList(); samples.add(beforeSample); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8222/buggy-version/applications.plugins.org.csstudio.application.xmlrpc.server.src.org.csstudio.application.xmlrpc.server.command.ValuesCommand.java", "BodyUseAPI": [], "Fixed commit": "43d080f508f458a3352c9e0f2aa456e3bf775152", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2013-11-13T13:43:22Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tokens.hasNext())) return id;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2876/buggy-version/sequencers.modeshape-sequencer-ddl.src.main.java.org.modeshape.sequencer.ddl.dialect.oracle.OracleDdlParser.java", "BodyUseAPI": [], "Fixed commit": "47cc70397c17e82d08c4839c403eb4c48c6eac3a", "Url": "https://api.github.com/repos/freakolowsky/modeshape", "Date": "2015-03-06T13:03:18Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i % 1024) == 0) { publishProgress(((int) ((((double) (bitCount)) / ((double) ((byteArray.length) * 8))) * 100))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5365/buggy-version/app.src.main.java.com.goobers.steganography.EncoderTask.java", "BodyUseAPI": [], "Fixed commit": "c839f9160e8c655cfbb60a5a60cc0a95faf3746d", "Url": "https://api.github.com/repos/yashpunjabi/Steganography", "Date": "2015-10-26T04:42:07Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i % 1024) == 0) { publishProgress(((int) ((((double) (bitcount)) / ((double) ((byteArray.length) * 8))) * 100))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5365/buggy-version/app.src.main.java.com.goobers.steganography.DecoderTask.java", "BodyUseAPI": [], "Fixed commit": "c839f9160e8c655cfbb60a5a60cc0a95faf3746d", "Url": "https://api.github.com/repos/yashpunjabi/Steganography", "Date": "2015-10-26T04:42:07Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chromatogram.getIonAnnotation()) != null) { column = featureTable.getColumn(\"Ion Annotation\", null, io.github.msdk.datamodel.ionannotations.IonAnnotation.class); newRow.setData(column, chromatogram.getIonAnnotation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5775/buggy-version/msdk-featdet.msdk-featdet-chromatogramtofeaturetable.src.main.java.io.github.msdk.featuredetection.chromatogramtofeaturetable.ChromatogramToFeatureTableMethod.java", "BodyUseAPI": ["io.github.msdk.datamodel.featuretables.FeatureTableRow.setData(io.github.msdk.datamodel.featuretables.FeatureTableColumn,chromatogram.getIonAnnotation())", "io.github.msdk.datamodel.chromatograms.Chromatogram.getIonAnnotation()"], "Fixed commit": "b0a33e029c9b1293bd4c87d6719db4dfbaf63264", "Url": "https://api.github.com/repos/SandraCastilloPriego/msdk", "Date": "2015-12-18T08:27:16Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(userAgent))) { put(Header.USER_AGENT, userAgent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4548/buggy-version/library.src.main.java.com.rejasupotaro.octodroid.http.ApiClient.java", "BodyUseAPI": ["com.rejasupotaro.octodroid.http.ApiClient.1.put(Header.USER_AGENT,java.lang.String)"], "Fixed commit": "61bf381d1281a554573a52870be1e603f4526ea8", "Url": "https://api.github.com/repos/rejasupotaro/octodroid", "Date": "2015-01-22T11:27:30Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.sysml.api.DMLScript.USE_ACCELERATOR) { org.apache.sysml.runtime.instructions.gpu.context.GPUContext.getGPUContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6132/buggy-version/src.main.java.org.apache.sysml.api.DMLScript.java", "BodyUseAPI": [], "Fixed commit": "d3a8a94f61b0aa9810502da5bde5ba778a9de178", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-03-22T23:13:41Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.sagebionetworks.repo.manager.AttachmentManagerImpl.isPreviewType(token.getFileName()))) throw new java.lang.IllegalArgumentException(\"User profile attachment is not a recognized image type, please try a different file.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7430/buggy-version/services.repository.src.main.java.org.sagebionetworks.repo.manager.UserProfileManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "bcd835b4fe8cb419d44aa52d8164568147a2681f", "Url": "https://api.github.com/repos/ezephyr/Synapse-Repository-Services", "Date": "2012-07-09T22:02:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.epsilon.common.parse.AST.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((targetAst.getType()) == (org.eclipse.epsilon.eol.parse.EolParser.EXPRESSIONINBRACKETS)) { targetAst = targetAst.getFirstChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8965/buggy-version/StaticAnalysisFramework.org.eclipse.epsilon.eol.ast2eol.src.org.eclipse.epsilon.eol.ast2eol.MethodCallExpressionCreator.java", "BodyUseAPI": ["org.eclipse.epsilon.common.parse.AST.getFirstChild()"], "Fixed commit": "5459dd83641eead6b1924aae438204ec9e11d0f9", "Url": "https://api.github.com/repos/epsilonlabs/epsilonlabs", "Date": "2016-05-02T10:10:42Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.midtrans.sdk.corekit.core.MidtransSDK.getInstance().getMerchantData()) != null) { java.util.List<java.lang.String> principles = com.midtrans.sdk.corekit.core.MidtransSDK.getInstance().getMerchantData().getEnabledPrinciples(); if ((principles.contains(CreditCardType.MASTERCARD)) && (principles.contains(CreditCardType.VISA))) { if (principles.contains(CreditCardType.JCB)) { if (principles.contains(CreditCardType.AMEX)) { return com.midtrans.sdk.uikit.models.CreditCardType.TYPE_MASTER_VISA_JCB_AMEX; } return com.midtrans.sdk.uikit.models.CreditCardType.TYPE_MASTER_VISA_JCB; }else if (principles.contains(CreditCardType.AMEX)) { return com.midtrans.sdk.uikit.models.CreditCardType.TYPE_MASTER_VISA_AMEX; } return com.midtrans.sdk.uikit.models.CreditCardType.TYPE_MASTER_VISA; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3403/buggy-version/uikit.src.main.java.com.midtrans.sdk.uikit.utilities.SdkUIFlowUtil.java", "BodyUseAPI": [], "Fixed commit": "e10b68fb277921f1f86bfe7e18f3bbf0960a914a", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2017-03-27T07:55:55Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(columnsToExtractInitialized)) { initializeHeaders(); if (settings.isHeaderExtractionEnabled()) { java.util.Arrays.fill(parsedValues, null); column = 0; this.appender = appenders[0]; return null; }else if ((!(columnsReordered)) && ((selectedIndexes) != null)) { java.lang.String[] out = new java.lang.String[column]; for (int i = 0; i < (selectedIndexes.length); i++) { int index = selectedIndexes[i]; if (index < (column)) { out[index] = parsedValues[index]; } } return out; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6274/buggy-version/src.main.java.com.univocity.parsers.common.ParserOutput.java", "BodyUseAPI": [], "Fixed commit": "e65c69411781b638a01e840aff95184fc5a8983d", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2017-01-28T07:44:44Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (at.tugraz.ist.catroid.stage.StageActivity.STAGE_ACTIVITY_FINISH)) { at.tugraz.ist.catroid.ProjectManager projectManager = at.tugraz.ist.catroid.ProjectManager.getInstance(); int currentSpritePos = projectManager.getCurrentSpritePosition(); int currentScriptPos = projectManager.getCurrentScriptPosition(); projectManager.loadProject(projectManager.getCurrentProject().getName(), this, false); projectManager.setCurrentSpriteWithPosition(currentSpritePos); projectManager.setCurrentScriptWithPosition(currentScriptPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5590/buggy-version/catroid.src.at.tugraz.ist.catroid.ui.ScriptTabActivity.java", "BodyUseAPI": [], "Fixed commit": "1fdbbe76829df41a9dd5df787b5c58708834cde4", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-20T07:48:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (at.tugraz.ist.catroid.stage.StageActivity.STAGE_ACTIVITY_FINISH)) { at.tugraz.ist.catroid.ProjectManager projectManager = at.tugraz.ist.catroid.ProjectManager.getInstance(); int currentSpritePos = projectManager.getCurrentSpritePosition(); int currentScriptPos = projectManager.getCurrentScriptPosition(); projectManager.loadProject(projectManager.getCurrentProject().getName(), this, false); projectManager.setCurrentSpriteWithPosition(currentSpritePos); projectManager.setCurrentScriptWithPosition(currentScriptPos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5590/buggy-version/catroid.src.at.tugraz.ist.catroid.ui.ProjectActivity.java", "BodyUseAPI": [], "Fixed commit": "1fdbbe76829df41a9dd5df787b5c58708834cde4", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-20T07:48:14Z"},
{"Line": "=>1109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isIndestructible(city.getTile((((xpos) - 1) + x), (((ypos) - 1) + y)))) { city.setTile((((xpos) - 1) + x), (((ypos) - 1) + y), ((char) (zoneBase | ((x == 1) && (y == 1) ? PWRBIT : 0)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3998/buggy-version/src.micropolisj.engine.MapScanner.java", "BodyUseAPI": ["micropolisj.engine.MapScanner.setTile((((xpos) - 1) + x),(((ypos) - 1) + y),((char) (zoneBase | ((x == 1) && (y == 1) ? PWRBIT : 0))))"], "Fixed commit": "34ef04827221d324a18c8cc3d23894b6bdaa21af", "Url": "https://api.github.com/repos/Team--Rocket/micropolis-java", "Date": "2014-03-19T12:55:24Z"},
{"Line": "=>4127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsRTL) { index = ((mCurrentAttachmentPager) > (com.android.mms.ui.ComposeMessageActivity.DEFAULT_ATTACHMENT_PAGER)) ? position : (mAttachmentPagerAdapter.PAGE_GRID_COUNT) + position; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4742/buggy-version/src.com.android.mms.ui.ComposeMessageActivity.java", "BodyUseAPI": [], "Fixed commit": "6c6de8d91e100290a7119fdac7b98990ec6e5806", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Mms", "Date": "2015-05-06T06:00:39Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxSellOrders(msg.getOrder())) throw new mt.exception.ServerException(\"You can't have more than 5 unfilled orders\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8450/buggy-version/src.main.java.mt.server.MicroServer.java", "BodyUseAPI": [], "Fixed commit": "677a04f51fc9bc0aa1ab43b9bbcfa1257269152b", "Url": "https://api.github.com/repos/arrco1-iscteiulpt/ES2-2017-IPLC1-113-MiniTrader", "Date": "2017-05-20T21:25:05Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time > 0) { this.offsetX += mStep; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4924/buggy-version/library.src.main.java.org.zhgeaits.zgdanmaku.model.ZGDanmaku.java", "BodyUseAPI": [], "Fixed commit": "bcdd2009f4fe766494643a668f4b0f47ba7ab6ed", "Url": "https://api.github.com/repos/zhgeaits/ZGDanmaku", "Date": "2016-08-09T09:52:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pattern.endsWith(\"%\"))) { pattern = pattern.concat(\"%\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7719/buggy-version/sam.sam-server.src.main.java.org.talend.esb.sam.server.persistence.criterias.PatternCriteria.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "7dffbdcfac7b6b0e765a8ce4ee6f5ef0fa21942e", "Url": "https://api.github.com/repos/zubairov/tesb-rt-se", "Date": "2011-05-25T14:51:31Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pattern.startsWith(\"%\"))) { pattern = \"%\" + pattern; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7719/buggy-version/sam.sam-server.src.main.java.org.talend.esb.sam.server.persistence.criterias.PatternCriteria.java", "BodyUseAPI": [], "Fixed commit": "7dffbdcfac7b6b0e765a8ce4ee6f5ef0fa21942e", "Url": "https://api.github.com/repos/zubairov/tesb-rt-se", "Date": "2011-05-25T14:51:31Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ml.task.HadoopClusterTask.doCluster(java.util.List<com.ml.model.News>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resultFile == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4054/buggy-version/src.main.java.com.ml.task.HadoopClusterTask.java", "BodyUseAPI": [], "Fixed commit": "05dae11a6c0bce3a886b22f3f3858c3d60fb4266", "Url": "https://api.github.com/repos/pakko/NewsAnalyzer", "Date": "2014-01-15T09:08:37Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Cache.selectedMobs.get(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (mob.isPlayerLook()) mob.sendLookPacket(player, player.getLocation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5296/buggy-version/src.main.java.de.howaner.FakeMobs.command.FakeMobCommand.java", "BodyUseAPI": ["de.howaner.FakeMobs.util.FakeMob.sendLookPacket(org.bukkit.entity.Player,player.getLocation())"], "Fixed commit": "36de362606f266bfdf773e7748344befb0476981", "Url": "https://api.github.com/repos/Howaner/FakeMobs", "Date": "2013-11-23T23:35:43Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.gaeproxy.GAEProxyService.isServiceStarted()) { settings.edit().putBoolean(\"packageChanged\", true).commit(); }else { java.util.Set<java.lang.Integer> appSet = org.gaeproxy.db.App.getProxiedApps(this); org.gaeproxy.db.App.updateApps(this, appSet); settings.edit().putBoolean(\"packageChanged\", false).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1903/buggy-version/src.org.gaeproxy.GAEProxyUpdateService.java", "BodyUseAPI": [], "Fixed commit": "cdf63b964cfdccceeb65938335f678cbb2da31e4", "Url": "https://api.github.com/repos/madeye/gaeproxy", "Date": "2013-05-12T05:43:52Z"},
{"Line": "=>899", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.freeplane.features.map.NodeModel.getParentNode()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (parentNode != null) { final int index = parentNode.getIndex(nodeModel); for (org.freeplane.features.map.NodeModel parentClone : parentNode.subtreeClones()) if (selectedNodes.contains(parentClone.getChildAt(index))) continue ADD_NODES; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/9062/buggy-version/freeplane.src.main.java.org.freeplane.view.swing.map.MapView.java", "BodyUseAPI": ["org.freeplane.features.map.NodeModel.subtreeClones()", "org.freeplane.features.map.NodeModel.getIndex(org.freeplane.features.map.NodeModel)"], "Fixed commit": "01cc554680402aad8ad41ee95f0b12a11b0a2e08", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2015-12-31T16:07:57Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tank != (tanks.get(playerID))) { tank.update(tanks); if (!(tank.getIsAlive())) { tanks.remove(tank); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7900/buggy-version/core.src.com.kezarszy.tankwar.states.PlayState.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, com.kezarszy.tankwar.entities.Tank>.remove(com.kezarszy.tankwar.entities.Tank)", "com.kezarszy.tankwar.entities.Tank.update(java.util.HashMap<java.lang.String, com.kezarszy.tankwar.entities.Tank>)", "com.kezarszy.tankwar.entities.Tank.getIsAlive()"], "Fixed commit": "19ef6d40d9dc960b5c34c665ef2bc1ff41665eeb", "Url": "https://api.github.com/repos/kevinzs/Tank-War", "Date": "2016-11-14T18:40:46Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!matched) return TokenKind.ERROR; else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/9088/buggy-version/src.miniJava.SyntacticAnalyzer.Scanner.java", "BodyUseAPI": [], "Fixed commit": "49f23fa61d1606db399a1351857e1f9407cdcd46", "Url": "https://api.github.com/repos/JohnEspenhahn/MiniJavaCompiler", "Date": "2017-02-13T19:11:08Z"},
{"Line": "=>1206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info.mServiceClass) == ((com.android.internal.telephony.CommandsInterface.SERVICE_CLASS_DATA_SYNC) + (com.android.internal.telephony.CommandsInterface.SERVICE_CLASS_PACKET))) { cfInfo.serviceClass = info.mServiceClass; }else { cfInfo.serviceClass = com.android.internal.telephony.CommandsInterface.SERVICE_CLASS_VOICE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4728/buggy-version/src.java.com.android.internal.telephony.imsphone.ImsPhone.java", "BodyUseAPI": [], "Fixed commit": "e91d9aed35095ad4b7a466452346aea082086cd5", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2015-10-08T09:17:32Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jenaQuery) == null) constructQuery();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3584/buggy-version/src.main.java.eu.freme.common.persistence.model.Filter.java", "BodyUseAPI": [], "Fixed commit": "d6a3d60b2b07cf3272583f9250a6f034b1dd92b3", "Url": "https://api.github.com/repos/freme-project/FREMECommon", "Date": "2015-12-15T17:04:02Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fs == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8702/buggy-version/src.br.edu.ifsp.capture.ShowObject.java", "BodyUseAPI": [], "Fixed commit": "652b2dd3434d9945bcf67707160660f81e94be11", "Url": "https://api.github.com/repos/matheus-silva/libLibras", "Date": "2016-03-28T18:08:52Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current.indexOf(\"//\")) == 0) { current = \"http:\" + current; }else { current = (this.webPage) + current; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5119/buggy-version/src.logical_code.RetrieveLinks.java", "BodyUseAPI": [], "Fixed commit": "923c5e1520f498ba74a87f8ee612516d2b2798d6", "Url": "https://api.github.com/repos/charlie1329/SSCImgDownloader", "Date": "2015-11-22T09:17:16Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (current.contains(\"?\")) { current = current.substring(0, current.indexOf(\"?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5119/buggy-version/src.logical_code.RetrieveLinks.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "923c5e1520f498ba74a87f8ee612516d2b2798d6", "Url": "https://api.github.com/repos/charlie1329/SSCImgDownloader", "Date": "2015-11-22T09:17:16Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.folder.contains(\"?\")) { int occur = this.folder.indexOf(\"?\"); this.folder = (this.folder.substring(0, occur)) + (this.folder.substring((occur + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5119/buggy-version/src.logical_code.DownloadImage.java", "BodyUseAPI": [], "Fixed commit": "923c5e1520f498ba74a87f8ee612516d2b2798d6", "Url": "https://api.github.com/repos/charlie1329/SSCImgDownloader", "Date": "2015-11-22T09:17:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.getConfigurationSection(\"Spawns\").getKeys(false).size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (size == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/223/buggy-version/src.main.java.com.connorlinfoot.multispawns.Listeners.PlayerJoin.java", "BodyUseAPI": [], "Fixed commit": "da2de5ed8f5f49cf93714f3527549e9f4aec4efd", "Url": "https://api.github.com/repos/ConnorLinfoot/MultiSpawns", "Date": "2014-11-25T13:53:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fullName.length()) > 0) return fullName.toString(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3631/buggy-version/src.main.java.greed.conf.schema.TemplateConfig.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()"], "Fixed commit": "3bc17d991746ceb01d37ce9e901dd5f9b2f99640", "Url": "https://api.github.com/repos/shivawu/topcoder-greed", "Date": "2013-10-21T15:02:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["greed.conf.schema.TemplateConfig.getOutputFileName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (name != null) fullName.append(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3631/buggy-version/src.main.java.greed.conf.schema.TemplateConfig.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "3bc17d991746ceb01d37ce9e901dd5f9b2f99640", "Url": "https://api.github.com/repos/shivawu/topcoder-greed", "Date": "2013-10-21T15:02:08Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((taskController.findTaskQueueByName(getName())) == null) { taskController.createTaskQueue(getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3381/buggy-version/src.main.java.fi.otavanopisto.kuntaapi.server.tasks.AbstractTaskQueue.java", "BodyUseAPI": ["fi.otavanopisto.kuntaapi.server.controllers.TaskController.createTaskQueue(java.lang.String)"], "Fixed commit": "a2fdf4a1f1f64e27086e2ac736881551d858627d", "Url": "https://api.github.com/repos/Metatavu/kunta-api-server", "Date": "2017-10-02T04:13:37Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["channel.getCallerId().getNumber()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (removePrefix(callerID)) callerID = callerID.substring(dialPrefix.length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7930/buggy-version/src.com.thevoiceasia.phonebox.asterisk.AsteriskManager.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "2ab782f0ae7785f141a3118c9a0472e7c8b99cb5", "Url": "https://api.github.com/repos/waynemerricks/asteriskphone", "Date": "2014-08-12T15:37:54Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.categories) == null) { this.categories = categories; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7094/buggy-version/src.java.com.idega.block.article.data.ArticleEntity.java", "BodyUseAPI": [], "Fixed commit": "943db000051ae558ca782e90d801184c6ad40e45", "Url": "https://api.github.com/repos/idega/com.idega.block.article", "Date": "2011-08-29T06:35:19Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.alm.plugin.external.commands.GetWorkspaceCommand.getXPathAttributeValue(org.w3c.dom.NamedNodeMap,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(owner)) { owner = getXPathAttributeValue(workspaceAttributes, \"owner\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/2906/buggy-version/plugin.src.com.microsoft.alm.plugin.external.commands.GetWorkspaceCommand.java", "BodyUseAPI": [], "Fixed commit": "a1a5bcd0abd74923839c5bf48ddfa62793b5d095", "Url": "https://api.github.com/repos/Microsoft/vso-intellij", "Date": "2016-10-11T15:34:21Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lastPostCommentFragment != null) lastPostCommentFragment.setSendError(e.getErrorResponse()); else if ((postCommentFragment) != null) postCommentFragment.setSendError(e.getErrorResponse());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5152/buggy-version/stackx-app.src.com.prasanna.android.stacknetwork.QuestionActivity.java", "BodyUseAPI": ["com.prasanna.android.stacknetwork.fragment.PostCommentFragment.setSendError(e.getErrorResponse())"], "Fixed commit": "757d24f8cdd784768623a696415fdf76daa24475", "Url": "https://api.github.com/repos/prasannata/StackX", "Date": "2013-04-17T17:04:09Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSafeForReuse(statement))) { count = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5879/buggy-version/src.main.java.net.hydromatic.linq4j.expressions.BlockBuilder.java", "BodyUseAPI": [], "Fixed commit": "4932249fb35bb249550370c789152d4f76ba39a3", "Url": "https://api.github.com/repos/julianhyde/linq4j", "Date": "2014-05-28T20:29:27Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fitgoose.fitgoosedemo.data.GlobalVariables.getExerciseByEid(todayPlan.eID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tempExercise == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/3122/buggy-version/FitGooseDemo.app.src.main.java.com.fitgoose.fitgoosedemo.TodaysExercisesFragment.java", "BodyUseAPI": [], "Fixed commit": "7d651cb9f30c64815f8d38f5bc2638e3f189c64a", "Url": "https://api.github.com/repos/j469/CS446", "Date": "2015-07-27T10:00:05Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debugMode) BukkitIRCdPlugin.log.info(\"[BukkitIRCd] Setting IRC user modes\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/785/buggy-version/src.com.Jdbye.BukkitIRCd.IRCUser.java", "BodyUseAPI": [], "Fixed commit": "32ce259580bba883ec3d8c4d1c941febed8b7460", "Url": "https://api.github.com/repos/WMCAlliance/BukkitIRCd", "Date": "2013-03-29T10:16:46Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debugMode) BukkitIRCdPlugin.log.info(\"[BukkitIRCd] Setting IRC console modes\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/785/buggy-version/src.com.Jdbye.BukkitIRCd.IRCUser.java", "BodyUseAPI": [], "Fixed commit": "32ce259580bba883ec3d8c4d1c941febed8b7460", "Url": "https://api.github.com/repos/WMCAlliance/BukkitIRCd", "Date": "2013-03-29T10:16:46Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((obj instanceof javax.swing.RootPaneContainer) && ((((javax.swing.RootPaneContainer) (obj)).getRootPane()) != null)) && ((((javax.swing.RootPaneContainer) (obj)).getRootPane().getContentPane()) != null)) { return ((javax.swing.RootPaneContainer) (obj)).getRootPane().getContentPane().getLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/592/buggy-version/src.main.java.org.swixml.technoproxy.swing.Parser.java", "BodyUseAPI": ["java.awt.Container.getRootPane()", "java.awt.Container.getLayout()", "javax.swing.JRootPane.getContentPane()"], "Fixed commit": "ec395a83f4e6167416004b945accfde1ccdb141b", "Url": "https://api.github.com/repos/libetl/twixml", "Date": "2013-09-20T10:47:13Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.pixelgaffer.turnierserver.minesweeper.Cell.isInField(x, y))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8900/buggy-version/src.main.java.org.pixelgaffer.turnierserver.minesweeper.Grid.java", "BodyUseAPI": [], "Fixed commit": "7596bf2623db00d5bc6148e037a597c4a854a3ad", "Url": "https://api.github.com/repos/msrd0/Turnierserver-Examples", "Date": "2015-06-10T18:48:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TITLE) == (-1)) { findTitle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/420/buggy-version/src.main.java.com.github.fnwib.read.ExcelReaderImpl.java", "BodyUseAPI": [], "Fixed commit": "449ff4f61ba80e2ad29cb32b6574180e3f0d340a", "Url": "https://api.github.com/repos/fnwib/fn-xlsx", "Date": "2017-11-20T11:44:09Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(verse.matches(\".*\\\\d+.*\"))) { startChapter = null; startVerse = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6811/buggy-version/src.main.java.com.joeldholmes.services.impl.QuranService.java", "BodyUseAPI": [], "Fixed commit": "203eda57144d5ae7b95cc0d1f60cae943c866feb", "Url": "https://api.github.com/repos/Holmes89/sacred-text-api", "Date": "2016-08-23T11:29:58Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (editing) { uk.co.newagedev.hieranarchy.ui.Window window = getCreateNewTileWindow(); addWindow(window); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1523/buggy-version/src.uk.co.newagedev.hieranarchy.editor.EditorState.java", "BodyUseAPI": [], "Fixed commit": "892baf5ef96995c5865dccb9c926f0779fca7caa", "Url": "https://api.github.com/repos/JoshuaBradbury/Hieranarchy", "Date": "2015-04-03T18:13:17Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getLoginUser().getId().intValue()) == (this.getCurrentUser().getId().intValue())) { map.put(\"status\", \"n\"); map.put(\"info\", \"\u4e0d\u5f97\u5173\u6ce8\u81ea\u5df1\"); return gson.toJson(map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6139/buggy-version/lry_webapp.src.main.java.com.lanrenyou.controller.user.UserFansController.java", "BodyUseAPI": [], "Fixed commit": "5be7a52dfffe4e8cd089f7b65f4187ecd57d89c1", "Url": "https://api.github.com/repos/voovo/lanrenyou", "Date": "2014-07-30T03:51:17Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j1 < 0) { java.lang.System.out.println(\"Game over\"); java.lang.System.exit(0); }else { Tetris.Board.boardPos[i1][j1] = Tetris.Board.POS_FILLED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/4261/buggy-version/src.Tetris.Board.java", "BodyUseAPI": [], "Fixed commit": "d9a68678f12dc29169d7ee7f1a6195d108384d2f", "Url": "https://api.github.com/repos/pugovka/Tetris", "Date": "2016-02-04T13:21:29Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"F\".equalsIgnoreCase(aamData.getAgentSex())) genderAgent = \"\u5c0f\u59d0\"; else genderAgent = \"\u5148\u751f\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8080/buggy-version/src.com.quix.aia.cn.imo.utilities.EmailNotification.java", "BodyUseAPI": [], "Fixed commit": "55667951bb4325d17f8d2b71d92df6fd063e8731", "Url": "https://api.github.com/repos/aiacncitaps/ERecruitCMS", "Date": "2015-12-29T09:44:23Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tt.getId()) != null) { tte = timeTableDao.findByWorkerTimeTableAndDate(workerId, tt.getId(), tt.getFrom(), tt.getTo()); }else { tte = timeTableDao.findByWorkerAndDate(workerId, tt.getFrom(), tt.getTo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5701/buggy-version/service.src.main.java.hu.unideb.hospitalnet.service.impl.TimeTableManagerImpl.java", "BodyUseAPI": ["hu.unideb.hospitalnet.vo.TimeTableVo.getTo()", "hu.unideb.hospitalnet.core.dao.TimeTableDao.findByWorkerTimeTableAndDate(java.lang.Long,tt.getId(),tt.getFrom(),tt.getTo())", "hu.unideb.hospitalnet.core.dao.TimeTableDao.findByWorkerAndDate(java.lang.Long,tt.getFrom(),tt.getTo())", "hu.unideb.hospitalnet.vo.TimeTableVo.getFrom()", "hu.unideb.hospitalnet.vo.TimeTableVo.getId()", "hu.unideb.hospitalnet.vo.TimeTableVo.getFrom()", "hu.unideb.hospitalnet.vo.TimeTableVo.getTo()"], "Fixed commit": "7e4104803c432c2bb46e18709615aab69efe52b6", "Url": "https://api.github.com/repos/rft-2015-ktd/hospital-net", "Date": "2015-12-12T10:34:53Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((testContextFactory) == null) && ((beanFactory) != null)) { testContextFactory = beanFactory.getBean(com.consol.citrus.context.TestContextFactory.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7912/buggy-version/modules.citrus-core.src.main.java.com.consol.citrus.server.AbstractServer.java", "BodyUseAPI": [], "Fixed commit": "e3fafdfdd4b7f6801aa58c7d8c53c833b8d41293", "Url": "https://api.github.com/repos/citrusframework/citrus", "Date": "2016-10-13T18:04:48Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCamera) != null) { android.util.Log.i(TAG, \"Releasing Camera\"); mCamera.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5878/buggy-version/src.com.smfandroid.smsbeacon.FlashLightHandler.java", "BodyUseAPI": [], "Fixed commit": "a35e20acc6d323e35a8c7743e37b5717f5fc78ab", "Url": "https://api.github.com/repos/Blizarre/SMSBeacon", "Date": "2014-11-11T18:46:21Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (qIdx > 0) { path = path.substring(0, qIdx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8285/buggy-version/src.main.java.htsjdk.tribble.AbstractFeatureReader.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "20ee53e7281a5d82c44a44dd6abf02a95be75eb0", "Url": "https://api.github.com/repos/igvteam/htsjdk", "Date": "2017-11-05T04:03:40Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.publishedXML) != null) xmlstring = this.publishedXML; else xmlstring = this.originalXML;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/386/buggy-version/backend.src.main.java.org.lareferencia.backend.domain.OAIRecord.java", "BodyUseAPI": [], "Fixed commit": "3a49d5e8197a6ccdf969f9b900f9df7b05830d1d", "Url": "https://api.github.com/repos/lareferencia/main", "Date": "2013-05-14T21:14:33Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Paths.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((possibleAbsoluteCaseDbPath.getNameCount()) > 1) { java.nio.file.Path caseDirectoryPath = java.nio.file.Paths.get(getCaseDirectory()); this.caseDatabaseName = caseDirectoryPath.relativize(possibleAbsoluteCaseDbPath).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/9205/buggy-version/Core.src.org.sleuthkit.autopsy.casemodule.CaseMetadata.java", "BodyUseAPI": ["java.nio.file.Path.toString()", "java.nio.file.Path.relativize(java.nio.file.Path)"], "Fixed commit": "f7ea9f8e4d51becdaae08c7318895a0018272e5f", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2017-01-24T23:39:51Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ru.n1kko777.a1cscancode.ScanActivity.productListSave.size()) != 0) { save_data(); }else { android.widget.Toast.makeText(this, R.string.no_data, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/841/buggy-version/app.src.main.java.ru.n1kko777.a1cscancode.ScanActivity.java", "BodyUseAPI": [], "Fixed commit": "ce28add203b40cc27d0113295577a2149ef331c8", "Url": "https://api.github.com/repos/n1kko777/1CScanCode", "Date": "2017-02-04T08:29:02Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.byteshaft.auction.fragments.AdsDetailFragment.mRecyclerView.findViewHolderForAdapterPosition(position).itemView.findViewById(R.id.specific_image_progressBar)) != null) { com.byteshaft.auction.fragments.AdsDetailFragment.mRecyclerView.findViewHolderForAdapterPosition(position).itemView.findViewById(R.id.specific_image_progressBar).setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/6857/buggy-version/app.src.main.java.com.byteshaft.auction.fragments.AdsDetailFragment.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.findViewHolderForAdapterPosition(int)", "com.byteshaft.auction.fragments.AdsDetailFragment.mRecyclerView.findViewHolderForAdapterPosition(position).itemView.findViewById(R.id.specific_image_progressBar)", "com.byteshaft.auction.fragments.AdsDetailFragment.mRecyclerView.findViewHolderForAdapterPosition(position).itemView.findViewById(R.id.specific_image_progressBar).setVisibility(View.GONE)"], "Fixed commit": "3856b94d83f679203b9a048585f0dbead7b7c657", "Url": "https://api.github.com/repos/byteShaft/auction", "Date": "2016-03-01T07:16:26Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (e != null) { dk.dma.ais.packet.AisPacketStreamImpl.LOG.error(\"Cancelling subscription, because of error\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5254/buggy-version/ais-lib-communication.src.main.java.dk.dma.ais.packet.AisPacketStreamImpl.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.Throwable)"], "Fixed commit": "67dc8cce46f19c553561edc6d659df26431b4e1e", "Url": "https://api.github.com/repos/dma-ais/AisLib", "Date": "2013-09-03T10:01:13Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1428/buggy-version/src.domain.controllers.ItemManagementController.java", "BodyUseAPI": [], "Fixed commit": "bc965669361ab252b8124211e5462f96927be661", "Url": "https://api.github.com/repos/frederikdesmedt/Projecten-2", "Date": "2015-03-16T09:45:36Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cas.lib.proarc.common.workflow.WorkflowManager.findMaterial(cz.cas.lib.proarc.common.workflow.model.MaterialFilter)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((mvs.get(0).getMetadata()) == null) { cz.cas.lib.proarc.mods.ModsDefinition mods = new cz.cas.lib.proarc.mods.ModsDefinition(); mods.setVersion(ModsUtils.VERSION); xmlMetadata = cz.cas.lib.proarc.common.mods.ModsUtils.toXml(mods, true); }else { xmlMetadata = mvs.get(0).getMetadata(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/1046/buggy-version/proarc-common.src.main.java.cz.cas.lib.proarc.common.fedora.WorkflowStorage.java", "BodyUseAPI": ["mvs.get(0).getMetadata()", "java.util.List<cz.cas.lib.proarc.common.workflow.model.MaterialView>.get(int)"], "Fixed commit": "0720351ae8a0c3348b00f7aaf929d1f72f37f116", "Url": "https://api.github.com/repos/proarc/proarc", "Date": "2017-11-20T10:01:33Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.epad.epadws.processing.pipeline.task.GeneratorTask.getTagFilePath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tagPath != null) { logger.info((((((\"readDicomHeadersTask, taskType:\" + taskType) + \" seriesUID:\") + seriesUID) + \" tagPath:\") + tagPath)); edu.stanford.epad.epadws.processing.pipeline.task.DicomHeadersTask dicomHeadersTask = new edu.stanford.epad.epadws.processing.pipeline.task.DicomHeadersTask(seriesUID, task.getDICOMFile(), new java.io.File(tagPath)); tagExec.execute(dicomHeadersTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/8361/buggy-version/src.main.java.edu.stanford.epad.epadws.processing.pipeline.process.PngGeneratorProcess.java", "BodyUseAPI": ["edu.stanford.epad.common.util.EPADLogger.info(java.lang.String)"], "Fixed commit": "c4ec302fa6bf1758cc7ceee809501cb80148d3cb", "Url": "https://api.github.com/repos/RubinLab/epad-ws", "Date": "2017-12-15T21:02:09Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inner().dnsSettings()) == null) { return java.util.Collections.unmodifiableList(dnsServers); }else if ((this.inner().dnsSettings().appliedDnsServers()) == null) { return java.util.Collections.unmodifiableList(dnsServers); }else { return java.util.Collections.unmodifiableList(this.inner().dnsSettings().appliedDnsServers()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/7377/buggy-version/azure-mgmt-network.src.main.java.com.microsoft.azure.management.network.implementation.NetworkInterfaceImpl.java", "BodyUseAPI": [], "Fixed commit": "5ce7c2add513704c193e19084384cde5d48c8531", "Url": "https://api.github.com/repos/jianghaolu/azure-sdk-for-java", "Date": "2016-09-29T23:14:58Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (section.contains((path + \".commands\"))) { commands.addAll(section.getStringList((path + \".commands\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V14/5367/buggy-version/src.main.java.me.elsiff.morefish.manager.FishManager.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(section.getStringList((path + \".commands\")))", "org.bukkit.configuration.ConfigurationSection.getStringList(java.lang.String)"], "Fixed commit": "638c98c726716c12abd54ad633cb95b7d5ea6e04", "Url": "https://api.github.com/repos/elsiff/more-fish", "Date": "2017-07-25T10:15:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (qParam.startsWith(\"what currency did Spain use before the Euro\")) { new ic.doc.web.ResultsPage(\"Peseta\").writeTo(resp); }else { new ic.doc.web.ResultsPage(qParam).writeTo(resp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8474/buggy-version/src.main.java.ic.doc.WebServer.java", "BodyUseAPI": ["ic.doc.web.ResultsPage.writeTo(javax.servlet.http.HttpServletResponse)"], "Fixed commit": "6704bb1ea14b2168bd8898d5893917f033c0461b", "Url": "https://api.github.com/repos/varun-verma11/SimpleWebApp", "Date": "2015-03-09T10:22:17Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSetCoord)) { setCoordinate(); isSetCoord = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8360/buggy-version/src.com.example.curlRollaway.Pager.java", "BodyUseAPI": [], "Fixed commit": "5f3ede8a25f797d065aa48d8381233d0f708408e", "Url": "https://api.github.com/repos/skypanda100/CurlRollAway", "Date": "2015-08-13T02:53:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((projects.hobbes.team.reminderapp.puller.Puller.listeners) != null) { for (int i = 0; i < (projects.hobbes.team.reminderapp.puller.Puller.listeners.size()); i++) { projects.hobbes.team.reminderapp.puller.Puller.listeners.get(i).initialDataLoaded(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3320/buggy-version/app.src.main.java.projects.hobbes.team.reminderapp.puller.Puller.java", "BodyUseAPI": [], "Fixed commit": "04e51aaa3540a6a6b9d7dc003656b13262cc9733", "Url": "https://api.github.com/repos/harkerd/Team-Hobbes", "Date": "2016-04-09T04:47:58Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((c.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.SATURDAY)) || ((c.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.SUNDAY))) { c.add(java.util.Calendar.DAY_OF_MONTH, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6504/buggy-version/Curriculum.src.main.java.ua.dp.primat.schedule.services.TimeService.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "22153ac37b1c45eec5eadf9d653f4bf54b822ce6", "Url": "https://api.github.com/repos/PrimatTeam/primat.dp.ua", "Date": "2013-04-06T08:06:37Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.owasp.dependencycheck.dependency.Identifier>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((((i.getValue().startsWith(\"cpe:/a:microsoft:excel\")) || (i.getValue().startsWith(\"cpe:/a:microsoft:word\"))) || (i.getValue().startsWith(\"cpe:/a:microsoft:visio\"))) || (i.getValue().startsWith(\"cpe:/a:microsoft:powerpoint\"))) || (i.getValue().startsWith(\"cpe:/a:microsoft:office\"))) && ((dependency.getFileName().toLowerCase().endsWith(\".jar\")) || (dependency.getFileName().toLowerCase().endsWith(\"pom.xml\")))) { itr.remove(); }else if ((i.getValue().startsWith(\"cpe:/a:apache:maven\")) && (!(dependency.getFileName().toLowerCase().matches(\"maven-core-[\\\\d\\\\.]+\\\\.jar\")))) { itr.remove(); }else if ((i.getValue().startsWith(\"cpe:/a:m-core:m-core\")) && (!(dependency.getEvidenceUsed().containsUsedString(\"m-core\")))) { itr.remove(); }else if ((i.getValue().startsWith(\"cpe:/a:jboss:jboss\")) && (!(dependency.getFileName().toLowerCase().matches(\"jboss-?[\\\\d\\\\.-]+(GA)?\\\\.jar\")))) { itr.remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6513/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.analyzer.FalsePositiveAnalyzer.java", "BodyUseAPI": ["org.owasp.dependencycheck.dependency.Identifier.getValue()", "i.getValue().startsWith(java.lang.String)", "org.owasp.dependencycheck.dependency.Identifier.getValue()", "dependency.getFileName().toLowerCase().matches(java.lang.String)", "dependency.getEvidenceUsed().containsUsedString(java.lang.String)", "dependency.getFileName().toLowerCase().matches(java.lang.String)", "org.owasp.dependencycheck.dependency.Dependency.getFileName()", "i.getValue().startsWith(java.lang.String)", "i.getValue().startsWith(java.lang.String)", "org.owasp.dependencycheck.dependency.Dependency.getFileName()", "dependency.getFileName().toLowerCase()", "org.owasp.dependencycheck.dependency.Identifier.getValue()", "org.owasp.dependencycheck.dependency.Dependency.getEvidenceUsed()", "dependency.getFileName().toLowerCase()"], "Fixed commit": "a66d51d4efb02169f6721b88bb88bd94e4efc272", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2014-05-14T23:17:47Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (local) mapLock = getTracker(false, ssk, insert, offer, realTimeFlag);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7322/buggy-version/src.freenet.node.RequestTracker.java", "BodyUseAPI": [], "Fixed commit": "82c6d885b93b1ce295c3a504c1de791088a0c119", "Url": "https://api.github.com/repos/freenet/fred-staging", "Date": "2012-09-20T08:42:42Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (local) mapLock = getTracker(false, ssk, insert, offer, realTimeFlag);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7322/buggy-version/src.freenet.node.RequestTracker.java", "BodyUseAPI": [], "Fixed commit": "82c6d885b93b1ce295c3a504c1de791088a0c119", "Url": "https://api.github.com/repos/freenet/fred-staging", "Date": "2012-09-20T08:42:42Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.wahtod.wififixer.LogService.bwriter) != null) { try { org.wahtod.wififixer.LogService.bwriter.flush(); } catch (java.io.IOException e) { e.printStackTrace(); } handler.sendEmptyMessageDelayed(org.wahtod.wififixer.LogService.FLUSH_MESSAGE, org.wahtod.wififixer.LogService.BUFFER_FLUSH_DELAY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2057/buggy-version/wififixer.src.org.wahtod.wififixer.LogService.java", "BodyUseAPI": [], "Fixed commit": "5c39b87509e0731a14fa8ebad15f743fc0fedbbf", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2011-02-25T03:11:47Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((internPhase) == 1) { checkAtt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5346/buggy-version/src.org.jogre.gameOfThrones.common.GameOfThronesModel.java", "BodyUseAPI": [], "Fixed commit": "b90f1de61b17cf506fe26424ff48feda3df09816", "Url": "https://api.github.com/repos/Robin59/Got-BoardGame", "Date": "2014-09-18T14:01:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.getDisplayName().startsWith(\"xzosimusx\")) { color += ChatColor.GREEN.toString(); }else if (player.getDisplayName().startsWith(\"rePeted\")) { color += ChatColor.LIGHT_PURPLE.toString(); }else if (player.getDisplayName().startsWith(\"ronfkingswanson\")) { color += ChatColor.DARK_PURPLE.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4828/buggy-version/src.main.java.ch.n1b.leichenstein.Totengraeber.java", "BodyUseAPI": ["org.bukkit.entity.Player.getDisplayName()", "player.getDisplayName().startsWith(java.lang.String)", "player.getDisplayName().startsWith(java.lang.String)", "org.bukkit.entity.Player.getDisplayName()"], "Fixed commit": "c19538a1383fbfc1c897be27b64f8af657a9eb75", "Url": "https://api.github.com/repos/trichner/leichenstein", "Date": "2015-02-09T21:48:08Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.startsWith(\"/\")) sb.append(\"/\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7004/buggy-version/libs.lib.algorithm.src.main.java.guibin.zhang.leetcode.stack.SimplifyPath.java", "BodyUseAPI": [], "Fixed commit": "95d7b6b9ce1228b41bd89da332fca2813867fb19", "Url": "https://api.github.com/repos/guibin/Knowledge", "Date": "2014-10-27T00:46:27Z"},
{"Line": "=>2430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(initsToAdd.isEmpty())) { com.emc.storageos.vplexcontroller.VPlexDeviceController._log.info(\"Assigning new storage ports for added initiators.\"); com.emc.storageos.db.client.model.ExportPathParams pathParams = _blockScheduler.calculateExportPathParamForVolumes(blockObjectMap.keySet(), exportGroup.getNumPaths(), vplexSystem.getId(), exportGroup.getId()); java.util.Map<java.net.URI, java.util.List<java.net.URI>> assignments = _blockScheduler.assignStoragePorts(vplexSystem, exportGroup, initsToAdd, exportMask.getZoningMap(), pathParams, null, _networkDeviceController, varrayUri, opId); if ((assignments != null) && (!(assignments.isEmpty()))) { exportMask = com.emc.storageos.util.ExportUtils.updateZoningMap(_dbClient, exportMask, assignments, exportMasksToUpdateOnDeviceWithStoragePorts); } }else { com.emc.storageos.vplexcontroller.VPlexDeviceController._log.info(\"No intiator to add to the storage view.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7701/buggy-version/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java", "BodyUseAPI": ["com.emc.storageos.volumecontroller.placement.BlockStorageScheduler.assignStoragePorts(com.emc.storageos.db.client.model.StorageSystem,com.emc.storageos.db.client.model.ExportGroup,java.util.List<com.emc.storageos.db.client.model.Initiator>,exportMask.getZoningMap(),com.emc.storageos.db.client.model.ExportPathParams,<nulltype>,com.emc.storageos.networkcontroller.impl.NetworkDeviceController,java.net.URI,java.lang.String)"], "Fixed commit": "331f1f715bc1244bdf713d8309bf16de38d91d30", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-10-01T13:19:40Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(statusRenderInformation.getModeString().equals(\"RALLY_POINT\"))) { model.entities.Entity currentInstance = ((model.entities.Entity) (statusRenderInformation.getInstance())); if (currentInstance != null) { for (java.util.Map.Entry<model.entities.Stats.StatsType, java.lang.Integer> entry : currentInstance.getStats().getStatsMap().entrySet()) { javafx.scene.control.Label label = new javafx.scene.control.Label((((entry.getKey().toString()) + \": \") + (entry.getValue()))); label.setStyle((\"-fx-font-size: 10;\" + \"-fx-font-weight: BOLD;\")); vb.getChildren().add(label); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/878/buggy-version/src.view.StatusViewport.java", "BodyUseAPI": ["model.RenderInformation.StatusRenderInformation.getInstance()"], "Fixed commit": "c85330f54ca8d97c071de22d2d78cef9b13c2fd1", "Url": "https://api.github.com/repos/DownWithOOP/Iteration2", "Date": "2017-03-15T15:38:37Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sessionQuestions.isEmpty()) { currentQuizQuestion = null; }else { currentQuizQuestion = sessionQuestions.getFirst(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5563/buggy-version/src.net.viperfish.proj.QuestionProj.Quizer.java", "BodyUseAPI": ["java.util.LinkedList<net.viperfish.proj.QuestionProj.Question>.getFirst()"], "Fixed commit": "2d5baeefcfaecdf584fc01a7fa5e0dc42bc0016e", "Url": "https://api.github.com/repos/shilongdai/quizer", "Date": "2015-05-11T19:17:16Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (splittedCron[3].equals(\"*\")) { month = \"01\"; }else { month = ((splittedCron[3].length()) < 2) ? \"0\" + (splittedCron[3]) : splittedCron[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4468/buggy-version/lider-usb-ltsp.src.main.java.tr.org.liderahenk.usb.ltsp.commands.UsbFuseGroupCommand.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "b4ae06ba7b4d0793c8ade8518ac8366a7e0bacc1", "Url": "https://api.github.com/repos/Pardus-LiderAhenk/lider-ahenk-usb-ltsp-plugin", "Date": "2017-09-12T11:30:14Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (splittedCron[2].equals(\"*\")) { day = \"01\"; }else { day = ((splittedCron[2].length()) < 2) ? \"0\" + (splittedCron[2]) : splittedCron[2]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4468/buggy-version/lider-usb-ltsp.src.main.java.tr.org.liderahenk.usb.ltsp.commands.UsbFuseGroupCommand.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "b4ae06ba7b4d0793c8ade8518ac8366a7e0bacc1", "Url": "https://api.github.com/repos/Pardus-LiderAhenk/lider-ahenk-usb-ltsp-plugin", "Date": "2017-09-12T11:30:14Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (splittedCron[1].equals(\"*\")) { hour = \"00\"; }else { hour = ((splittedCron[1].length()) < 2) ? \"0\" + (splittedCron[1]) : splittedCron[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4468/buggy-version/lider-usb-ltsp.src.main.java.tr.org.liderahenk.usb.ltsp.commands.UsbFuseGroupCommand.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "b4ae06ba7b4d0793c8ade8518ac8366a7e0bacc1", "Url": "https://api.github.com/repos/Pardus-LiderAhenk/lider-ahenk-usb-ltsp-plugin", "Date": "2017-09-12T11:30:14Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (splittedCron[0].equals(\"*\")) { minute = \"00\"; }else { minute = ((splittedCron[0].length()) < 2) ? \"0\" + (splittedCron[0]) : splittedCron[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4468/buggy-version/lider-usb-ltsp.src.main.java.tr.org.liderahenk.usb.ltsp.commands.UsbFuseGroupCommand.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "b4ae06ba7b4d0793c8ade8518ac8366a7e0bacc1", "Url": "https://api.github.com/repos/Pardus-LiderAhenk/lider-ahenk-usb-ltsp-plugin", "Date": "2017-09-12T11:30:14Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultIntent.getBooleanExtra(\"data.changed\", false)) { loadData(); listView.getAdapter().notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1045/buggy-version/app.src.main.java.diy.uigeneric.sample.SampleListActivity.java", "BodyUseAPI": [], "Fixed commit": "b1ee3726cdaaab85b6e6a7ade293a45f2099cb37", "Url": "https://api.github.com/repos/taworn/uigeneric", "Date": "2016-04-17T01:44:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index != (-1)) { fileName = filePath.substring(index); }else { index = filePath.indexOf(matchString2); if (index != (-1)) { fileName = filePath.substring((index + (matchString2.length()))); }else { index = filePath.indexOf(matchString3); if (index != (-1)) { fileName = filePath.substring((index + (matchString3.length()))); }else { index = filePath.indexOf(matchString4); if (index != (-1)) { fileName = filePath.substring((index + (matchString4.length()))); }else { index = filePath.indexOf(matchString5); if (index != (-1)) { fileName = filePath.substring((index + (matchString5.length()))); }else { fileName = filePath; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7451/buggy-version/src.main.java.cn.edu.fudan.se.cochange_analysis.file.util.FileUtils.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "a4be9e3598de95697a2566a4e4202fb3a6e83415", "Url": "https://api.github.com/repos/echochen541/Co-changeAnalysis", "Date": "2017-07-08T08:12:55Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((xPos) - (prevX)) < 0) { dir = \"right\"; canvas.drawBitmap(resources.playerSpritesRight[curPlayerSprite], (((resources.screenX) / 2) - ((resources.playerSpritesRight[curPlayerSprite].getWidth()) / 2)), (((resources.screenY) / 2) - ((resources.playerSpritesRight[curPlayerSprite].getHeight()) / 2)), painter); }else if ((((xPos) - (prevX)) == 0) && (((yPos) - (prevY)) == 0)) { if (dir.equals(\"right\")) { canvas.drawBitmap(resources.playerSpritesRight[0], (((resources.screenX) / 2) - ((resources.playerSpritesRight[0].getWidth()) / 2)), (((resources.screenY) / 2) - ((resources.playerSpritesRight[0].getHeight()) / 2)), painter); }else { canvas.drawBitmap(resources.playerSpritesLeft[0], (((resources.screenX) / 2) - ((resources.playerSpritesLeft[0].getWidth()) / 2)), (((resources.screenY) / 2) - ((resources.playerSpritesLeft[0].getHeight()) / 2)), painter); } }else { if (dir.equals(\"right\")) { canvas.drawBitmap(resources.playerSpritesRight[curPlayerSprite], (((resources.screenX) / 2) - ((resources.playerSpritesRight[curPlayerSprite].getWidth()) / 2)), (((resources.screenY) / 2) - ((resources.playerSpritesRight[curPlayerSprite].getHeight()) / 2)), painter); }else { canvas.drawBitmap(resources.playerSpritesLeft[curPlayerSprite], (((resources.screenX) / 2) - ((resources.playerSpritesLeft[curPlayerSprite].getWidth()) / 2)), (((resources.screenY) / 2) - ((resources.playerSpritesLeft[curPlayerSprite].getHeight()) / 2)), painter); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3392/buggy-version/app.src.main.java.com.example.angelachang.redditworld.Threads.WorldThread.java", "BodyUseAPI": [], "Fixed commit": "1ac30b192566ae01508856cda6827a04a7cb0998", "Url": "https://api.github.com/repos/changangela/RedditWorldClient", "Date": "2016-09-18T01:08:30Z"},
{"Line": "=>766", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((obj != null) && (obj.getClass().isArray())) && (\"length\".equals(name))) { return org.nutz.lang.Lang.length(obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8911/buggy-version/src.org.nutz.lang.Mirror.java", "BodyUseAPI": ["org.nutz.lang.Lang.length(java.lang.Object)"], "Fixed commit": "b18df36440ae5a21240ad072dd777fa4d562add9", "Url": "https://api.github.com/repos/ywjno/nutz", "Date": "2013-11-10T08:40:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<com.github.v_ctor.json.unflattener.ParserState>.previous()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((element.getParserStateEnum().equals(com.github.v_ctor.json.unflattener.ParserStateEnum.InArrayElement)) && (element == jsonElement)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1038/buggy-version/src.main.java.com.github.v_ctor.json.unflattener.JsonUnflattenerState.java", "BodyUseAPI": [], "Fixed commit": "38c15f0b01f77dffdce813ef09ce6a7619146f0f", "Url": "https://api.github.com/repos/V-ctor/json-unflattener", "Date": "2017-03-16T13:23:23Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (count != null) { lotteries = this.fetchByCount(count, lottery.getType()); }else { lotteries = this.fetch(startPeriod, endPeriod, lottery.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7830/buggy-version/Lottery.src.main.java.com.demo.mvc.service.impl.LotteryServiceImpl.java", "BodyUseAPI": ["com.demo.mvc.service.impl.LotteryServiceImpl.fetchByCount(java.lang.Integer,lottery.getType())"], "Fixed commit": "fdbc459e059cea209f730b5a7ddd46f272661b85", "Url": "https://api.github.com/repos/imwubing/Lottery", "Date": "2017-01-07T05:40:56Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extraTokens.size()) == 0) { emitExtraTokens = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1892/buggy-version/src.main.java.io.bdrc.lucene.sa.SkrtWordTokenizer.java", "BodyUseAPI": [], "Fixed commit": "7dff5d4c275435be9d4d47534abd855132bff820", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2017-08-19T09:52:07Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(data[d][i])) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3690/buggy-version/uk.ac.babraham.BamQC.Graphs.LineGraph.java", "BodyUseAPI": [], "Fixed commit": "58d9bd658ec10312d3101a76d4399fd612e8effd", "Url": "https://api.github.com/repos/s-andrews/BamQC", "Date": "2014-10-29T19:52:41Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (qstate != null) qstate.setQueryExpression(c.getExpression());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2041/buggy-version/atlas-web.src.main.java.ae3.service.structuredquery.AtlasStructuredQueryService.java", "BodyUseAPI": ["ae3.service.structuredquery.AtlasStructuredQueryService.QueryState.setQueryExpression(c.getExpression())"], "Fixed commit": "3ceabb7f6076f891f3352e8e5f58a9afb302cb00", "Url": "https://api.github.com/repos/gxa/gxa", "Date": "2012-05-09T09:03:18Z"},
{"Line": "=>2043", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.harvard.iq.dvn.core.vdc.VDCCollection.getOwner()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vdc.getId().equals(collOwner.getId())) { if (isLocalScope) { queryString = null; }else if (isSubnetworkScope) { queryString = (((\"dvNetworkId:\" + (col.getOwner().getVdcNetwork().getId())) + \" AND (\") + queryString) + \")\"; }else { } }else { if (isLocalScope) { queryString = (((\"dvOwnerId:\" + (col.getOwner().getId())) + \" AND (\") + queryString) + \")\"; }else if (isSubnetworkScope) { queryString = (((\"dvNetworkId:\" + (col.getOwner().getVdcNetwork().getId())) + \" AND (\") + queryString) + \")\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8693/buggy-version/src.DVN-EJB.src.java.edu.harvard.iq.dvn.core.index.Indexer.java", "BodyUseAPI": [], "Fixed commit": "48df98b2e566329a8ec095060a6d3a2ef817924e", "Url": "https://api.github.com/repos/IQSS/dvn", "Date": "2013-06-10T20:10:23Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(path)) { name = \"ROOT\"; }else { name = org.apache.commons.lang3.StringUtils.substringBefore(path.substring(1), \"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6158/buggy-version/src.main.java.nl.armatiek.xslweb.configuration.Context.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "781b08121694cca186c6849d264071e64a201276", "Url": "https://api.github.com/repos/Armatiek/xslweb", "Date": "2016-11-14T14:22:50Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extraDebug) { debug(plugin, (\"[Extra] \" + msg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4258/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.java", "BodyUseAPI": [], "Fixed commit": "a6f5af767b5c884d20bf7c8c8a1297ca5f04d98a", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-09-17T21:13:02Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number.contains(\"-\")) { throw new java.util.NoSuchElementException((\"Track # contained an illegal character, \" + number)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6093/buggy-version/src.main.java.com.musicbrainz.mp3.tagger.Tools.Song.java", "BodyUseAPI": [], "Fixed commit": "9d6ad199b5f2938cbd8e333dc79ff1b3d5172dbf", "Url": "https://api.github.com/repos/dessalines/musicbrainz-tagger", "Date": "2015-09-30T23:17:43Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) { throw new business.RuleException(\"Please Enter in all fields\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/55/buggy-version/src.business.LibraryMemberRuleSet.java", "BodyUseAPI": [], "Fixed commit": "273c7d7741aad01b74c67982543e213b3734f058", "Url": "https://api.github.com/repos/jerrzy/library", "Date": "2017-09-15T16:12:00Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bundles.contains(file.getName())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6676/buggy-version/atlas-gradle-plugin.dexpatch.src.main.java.com.taobao.android.TPatchTool.java", "BodyUseAPI": [], "Fixed commit": "d6607d73aa4004c9d4dc8e6516a36d38c1fe139c", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-06-12T02:38:35Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((facilityName != null) && (!(facilityName.isEmpty()))) { query.setParameter(\"facility\", facilityName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6588/buggy-version/paul.src.main.java.au.edu.uq.cmm.paul.queue.QueueManager.java", "BodyUseAPI": ["javax.persistence.TypedQuery<au.edu.uq.cmm.paul.grabber.DatasetMetadata>.setParameter(java.lang.String,java.lang.String)"], "Fixed commit": "c5a38377c5816e076e2510a2db4d9e4126c50455", "Url": "https://api.github.com/repos/crawley/CMM-data-grabber", "Date": "2012-07-10T00:28:22Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((gridFragment.scrollPosition) != (-1)) || ((gridFragment.scrollPosition) != 0)) gridFragment.mRecyclerView.scrollToPosition(((gridFragment.scrollPosition) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7923/buggy-version/app.src.main.java.com.massive.popmovie.GridAdapter.java", "BodyUseAPI": ["gridFragment.mRecyclerView.scrollToPosition(((gridFragment.scrollPosition) - 1))"], "Fixed commit": "5e89f3ef1a8764060595d74f85cd8eab02fbb604", "Url": "https://api.github.com/repos/kerolosFawzy/PopMovie", "Date": "2017-10-16T15:24:06Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.server.OClientSessions.getConnections()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((connections.size()) == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4577/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.binary.OLiveCommandResultListener.java", "BodyUseAPI": [], "Fixed commit": "8e7c166f120cff8c3576519324b6939895080c26", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-15T15:11:08Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((placeholder) != null) setDrawableByLayerId(0, placeholder);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5585/buggy-version/ion.src.com.koushikdutta.ion.IonDrawable.java", "BodyUseAPI": [], "Fixed commit": "6e6a55b7fa6bf953f31907da2e05c3b4d0d1ca12", "Url": "https://api.github.com/repos/bearprada/ion", "Date": "2015-03-03T02:56:46Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasNextPage) { closeHTable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4932/buggy-version/src.main.java.org.mule.module.hbase.api.impl.RPCHBaseService.java", "BodyUseAPI": [], "Fixed commit": "3ee7bee03ede86f80db29cd4e14cc20e9331d7f7", "Url": "https://api.github.com/repos/mulesoft/hbase-connector", "Date": "2014-03-28T13:23:37Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.messagesContainer) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2167/buggy-version/applications.plugins.org.csstudio.eve.viewer.src.de.ptb.epics.eve.viewer.views.messagesview.ui.ContentProvider.java", "BodyUseAPI": [], "Fixed commit": "76b6ee888c6bc282d7d107484c9a4260fad1ad67", "Url": "https://api.github.com/repos/eveCSS/eveCSS", "Date": "2013-12-18T10:34:22Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blog.dao.ContentDao.getContentByBMID(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getDeposit()) < (c.getPrice())) { return \"-1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4437/buggy-version/src.blog.service.PayService.java", "BodyUseAPI": [], "Fixed commit": "5349913739616d4269fb41e620a26a8dde07d0ad", "Url": "https://api.github.com/repos/LeonSC/blog", "Date": "2017-05-02T09:35:08Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bmid.equals(\"-1\")) { return \"redirect:/error/noenough\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4437/buggy-version/src.blog.controller.PayController.java", "BodyUseAPI": [], "Fixed commit": "5349913739616d4269fb41e620a26a8dde07d0ad", "Url": "https://api.github.com/repos/LeonSC/blog", "Date": "2017-05-02T09:35:08Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCode()) == (ErrorCode.INVOICE_NOTHING_TO_DO.getCode())) { return javax.ws.rs.core.Response.status(Status.NO_CONTENT).build(); }else { return javax.ws.rs.core.Response.status(Status.BAD_REQUEST).entity(e.getMessage()).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7848/buggy-version/jaxrs.src.main.java.com.ning.billing.jaxrs.resources.InvoiceResource.java", "BodyUseAPI": ["javax.ws.rs.core.Response.status(Status.BAD_REQUEST).entity(e.getMessage())", "com.ning.billing.invoice.api.InvoiceApiException.getMessage()", "javax.ws.rs.core.Response.status(Status.BAD_REQUEST).entity(e.getMessage()).build()"], "Fixed commit": "41d89f9cde55500ddf6ec8b5dfced88344f9e246", "Url": "https://api.github.com/repos/ning/killbill", "Date": "2012-06-25T20:20:38Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ning.billing.invoice.InvoiceDispatcher.processAccount(java.util.UUID,org.joda.time.DateTime,boolean,com.ning.billing.util.callcontext.CallContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { throw new com.ning.billing.invoice.api.InvoiceApiException(com.ning.billing.ErrorCode.INVOICE_NOTHING_TO_DO, accountId, targetDate); }else { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7848/buggy-version/invoice.src.main.java.com.ning.billing.invoice.api.user.DefaultInvoiceUserApi.java", "BodyUseAPI": [], "Fixed commit": "41d89f9cde55500ddf6ec8b5dfced88344f9e246", "Url": "https://api.github.com/repos/ning/killbill", "Date": "2012-06-25T20:20:38Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (socialNetworBean.twitterPost()) { return javax.ws.rs.core.Response.ok(socialNetworBean.twitterPost()).build(); }else { return javax.ws.rs.core.Response.status(404).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4905/buggy-version/stamppy.stamppyProject-service.src.main.java.business.SocialNetworkService.java", "BodyUseAPI": ["javax.ws.rs.core.Response.ok(socialNetworBean.twitterPost())", "javax.ws.rs.core.Response.ok(socialNetworBean.twitterPost()).build()", "org.stamppyProject.businessLogic.business.socialNetwork.ISocialNetwork.twitterPost()"], "Fixed commit": "0581df697e8a826a47942ec67719b84419b73581", "Url": "https://api.github.com/repos/miso4204/Grupo03", "Date": "2015-05-12T06:02:01Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (socialNetworBean.facebookPost()) { return javax.ws.rs.core.Response.ok(socialNetworBean.facebookPost()).build(); }else { return javax.ws.rs.core.Response.status(404).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4905/buggy-version/stamppy.stamppyProject-service.src.main.java.business.SocialNetworkService.java", "BodyUseAPI": ["javax.ws.rs.core.Response.ok(socialNetworBean.facebookPost())", "javax.ws.rs.core.Response.ok(socialNetworBean.facebookPost()).build()", "org.stamppyProject.businessLogic.business.socialNetwork.ISocialNetwork.facebookPost()"], "Fixed commit": "0581df697e8a826a47942ec67719b84419b73581", "Url": "https://api.github.com/repos/miso4204/Grupo03", "Date": "2015-05-12T06:02:01Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.norconex.collector.http.delay.impl.DefaultDelayResolver.getTargetedDelayNanos(com.norconex.collector.http.robot.RobotsTxt)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetDelayNanos <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5726/buggy-version/norconex-collector-http.src.main.java.com.norconex.collector.http.delay.impl.DefaultDelayResolver.java", "BodyUseAPI": [], "Fixed commit": "0356c07b6619b9c2d505d77b5977324ae6f89b2a", "Url": "https://api.github.com/repos/Norconex/collectors", "Date": "2013-07-24T17:26:15Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.norconex.collector.http.delay.impl.DefaultDelayResolver.getTargetedDelayNanos(com.norconex.collector.http.robot.RobotsTxt)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetDelayNanos <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5726/buggy-version/norconex-collector-http.src.main.java.com.norconex.collector.http.delay.impl.DefaultDelayResolver.java", "BodyUseAPI": [], "Fixed commit": "0356c07b6619b9c2d505d77b5977324ae6f89b2a", "Url": "https://api.github.com/repos/Norconex/collectors", "Date": "2013-07-24T17:26:15Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getDesktop().getComponents().isEmpty())) throw new java.lang.IllegalStateException(\"The page has been created, so the execution cannot be voided!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3146/buggy-version/zk.src.org.zkoss.zk.ui.http.ExecutionImpl.java", "BodyUseAPI": [], "Fixed commit": "7090843f1f770b4548f1393074732005d52263eb", "Url": "https://api.github.com/repos/leeyt/zk", "Date": "2013-11-21T01:22:34Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((temp.getDbId()) != (getMyId())) { if (!(userExistsInDislikes(temp))) { if (!(userExistsInLikes(temp))) { profiles.add(temp); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7533/buggy-version/app.src.main.java.com.protheansoftware.gab.model.JdbcDatabaseHandler.java", "BodyUseAPI": ["com.protheansoftware.gab.model.JdbcDatabaseHandler.userExistsInDislikes(com.protheansoftware.gab.model.Profile)", "java.util.ArrayList<com.protheansoftware.gab.model.Profile>.add(com.protheansoftware.gab.model.Profile)", "com.protheansoftware.gab.model.JdbcDatabaseHandler.userExistsInLikes(com.protheansoftware.gab.model.Profile)"], "Fixed commit": "556f098c133e84502cd2c54949831b599199fb9f", "Url": "https://api.github.com/repos/ProtheanSoftware/gab", "Date": "2015-10-15T13:13:04Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(classId.equalsIgnoreCase(\"classSpecific\"))) { utils.ScoreboardStatus.setScoreboardAdminOnly(); servlets.admin.config.EnableScoreboard.log.debug(\"Admin Only Scoreboard Enabled\"); htmlOutput = ((\"<h3 class='title'>Scoreboard Settings Updated</h3>\" + \"<p>\") + scoreboardMessage) + \" The scoreboard is only accessible by administrators</p>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1568/buggy-version/SecurityShepherdCore.src.servlets.admin.config.EnableScoreboard.java", "BodyUseAPI": [], "Fixed commit": "cdba700340489d5e28080f0d9358e69fe43d3828", "Url": "https://api.github.com/repos/OWASP/SecurityShepherd", "Date": "2015-09-22T17:03:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"readonly\".equals(getParameter(\"comments\")))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2410/buggy-version/src.ch.uzh.ifi.attempto.acewiki.core.AceWikiConfig.java", "BodyUseAPI": [], "Fixed commit": "a25294df9a8170dd7ac9a7a7bdeb94c72554f6a5", "Url": "https://api.github.com/repos/AceWiki/AceWiki", "Date": "2013-04-09T06:13:16Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (weekDayNumber == 1) weekDayNumber = 8;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3213/buggy-version/src.view.actual_calendar.EventTile.java", "BodyUseAPI": [], "Fixed commit": "482be383c305cb58952c8cb2417be014875d5090", "Url": "https://api.github.com/repos/Gnlknmd/Calendar", "Date": "2017-06-18T17:23:15Z"},
{"Line": "=>1546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["map.get(name).getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(id.isEmpty())) AnimeIndex.droppedMap.put(name, java.lang.Integer.parseInt(id)); else AnimeIndex.droppedMap.put(name, (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7164/buggy-version/src.util.window.AnimeInformation.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "AnimeIndex.droppedMap.put(java.lang.String,int)"], "Fixed commit": "0a6c79324caed190e57745b243d144d989ff60fe", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2016-06-21T16:18:40Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etWorkoutSubject.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newWorkoutName.trim().isEmpty()) { android.widget.Toast.makeText(this, \"Please enter the title.\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2051/buggy-version/app.src.main.java.com.sodabodyfit.moms.AddWorkoutActivity.java", "BodyUseAPI": [], "Fixed commit": "fb191014911fe2071163ebbc14856c173b7d2177", "Url": "https://api.github.com/repos/youcoder/Moms", "Date": "2017-04-17T03:56:37Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extractor) != null) { extractor.unselectTrack(track); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/757/buggy-version/library.src.main.java.com.lsjwzh.media.exoplayercompat.exo.FrameworkSampleSource.java", "BodyUseAPI": [], "Fixed commit": "dc379866a589d2be92d5b3427613dc218a02cfae", "Url": "https://api.github.com/repos/lsjwzh/ExoPlayerCompat", "Date": "2014-09-01T09:35:58Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (oldSign != null) { oldSign.add(((org.bukkit.entity.Player) (sender))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7237/buggy-version/src.net.slipcor.pvparena.commands.PAG_Arenaclass.java", "BodyUseAPI": ["net.slipcor.pvparena.classes.PAClassSign.add(org.bukkit.command.CommandSender)"], "Fixed commit": "6dacb970b223be9d7c1767001b23115e728c5790", "Url": "https://api.github.com/repos/Oruss7/pvparena", "Date": "2015-12-30T00:09:23Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fixDialogCloseBug) { outState.putInt(\"selectedSoundPosition\", org.catrobat.catroid.ui.fragment.SoundFragment.selectedSoundPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7906/buggy-version/catroid.src.org.catrobat.catroid.ui.fragment.SoundFragment.java", "BodyUseAPI": [], "Fixed commit": "347327965d22ad2ae97583cd66ac35aecdcade28", "Url": "https://api.github.com/repos/algobardo/Catroid", "Date": "2014-08-11T08:20:10Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fixDialogCloseBug) { if ((org.catrobat.catroid.ui.fragment.SoundFragment.selectedSoundPosition) != (org.catrobat.catroid.common.Constants.NO_POSITION)) { try { getActivity().openContextMenu(listView); } catch (java.lang.Throwable t) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7906/buggy-version/catroid.src.org.catrobat.catroid.ui.fragment.SoundFragment.java", "BodyUseAPI": [], "Fixed commit": "347327965d22ad2ae97583cd66ac35aecdcade28", "Url": "https://api.github.com/repos/algobardo/Catroid", "Date": "2014-08-11T08:20:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.RatingBar.getRating()", "editTextDescription.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((text.isEmpty()) || (raiting == 0)) { android.widget.Toast.makeText(this, R.string.please_enter_description, Toast.LENGTH_LONG).show(); }else { updateDescription(realm); this.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7416/buggy-version/app.src.main.java.com.ivart.makedecision.Activities.EditDescriptionActivity.java", "BodyUseAPI": [], "Fixed commit": "d2fc448c8d9b54616a4cd35ceeb4a5ce7446603c", "Url": "https://api.github.com/repos/ArtemMasterJava/MakeDecision", "Date": "2016-09-26T08:41:04Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.cs246.dishitup.DatabaseControl.getRecipeCard(recipe.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((checkForChange.getId()) == (-1)) finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/245/buggy-version/app.src.main.java.com.example.cs246.dishitup.Recipe.java", "BodyUseAPI": [], "Fixed commit": "d669f8c365473f25284c65ca06c721ccec098ef1", "Url": "https://api.github.com/repos/kiseleon/DishItUp", "Date": "2015-04-04T22:47:23Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cursor.getCount()) == 0) return recipeCard;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/245/buggy-version/app.src.main.java.com.example.cs246.dishitup.DatabaseControl.java", "BodyUseAPI": [], "Fixed commit": "d669f8c365473f25284c65ca06c721ccec098ef1", "Url": "https://api.github.com/repos/kiseleon/DishItUp", "Date": "2015-04-04T22:47:23Z"},
{"Line": "=>1436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.telephony.TelephonyManager.getSimCountryIso()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(currentCountryISO))) { setSelectedCountry(com.hbb20.Country.getCountryForNameCodeFromLibraryMasterList(getContext(), getLanguageToApply(), currentCountryISO)); }else { setSelectedCountry(com.hbb20.Country.getCountryForNameCodeFromLibraryMasterList(getContext(), getLanguageToApply(), getDefaultCountryNameCode())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/684/buggy-version/ccp.src.main.java.com.hbb20.CountryCodePicker.java", "BodyUseAPI": ["com.hbb20.CountryCodePicker.setSelectedCountry(com.hbb20.Country.getCountryForNameCodeFromLibraryMasterList(getContext(), getLanguageToApply(), currentCountryISO))", "com.hbb20.Country.getCountryForNameCodeFromLibraryMasterList(getContext(),com.hbb20.CountryCodePicker.Language,java.lang.String)"], "Fixed commit": "382c843038b48a1ff510d124715ca5405fdc9590", "Url": "https://api.github.com/repos/hbb20/CountryCodePickerProject", "Date": "2017-08-08T23:24:33Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedCountry) == null) { setSelectedCountry(getDefaultCountry()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/684/buggy-version/ccp.src.main.java.com.hbb20.CountryCodePicker.java", "BodyUseAPI": [], "Fixed commit": "382c843038b48a1ff510d124715ca5405fdc9590", "Url": "https://api.github.com/repos/hbb20/CountryCodePickerProject", "Date": "2017-08-08T23:24:33Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tracker.getCount()) > 0) { source = ((com.esbjon.inventories.SubstanceBuriedTracker) (tracker)); sourceStatus = source.getStatus(); ((com.esbjon.entities.Rig) (holder)).addToRiskAgents(); ((com.esbjon.entities.Rig) (holder)).updateFlagImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3305/buggy-version/core.src.com.esbjon.inventories.RigInventory.java", "BodyUseAPI": [], "Fixed commit": "95dec55649dbf3828c3f9f28ccc00070471b2c5b", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-11-06T00:24:00Z"},
{"Line": "=>2463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["semanticMarkup.ling.learn.dataholder.SentenceStructure.getLead()", "semanticMarkup.ling.learn.dataholder.SentenceStructure.getLead()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.equals(thisLead, lead))) { sentenceSet.add(thisSentence); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8585/buggy-version/src.semanticMarkup.ling.learn.Learner.java", "BodyUseAPI": [], "Fixed commit": "b3536130415efb73b6897bf9d74d51907eaab894", "Url": "https://api.github.com/repos/phenoscape/charaparser-unsupervised", "Date": "2013-08-31T01:36:14Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localFriendManager) != null) this.getApplicationContext().unbindService(friendManagerConnection);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4751/buggy-version/android.client-frwk.SocietiesLibraries.FriendsManager.FriendsManager.src.org.societies.android.platform.css.friends.AcceptFriendActivity.java", "BodyUseAPI": [], "Fixed commit": "d209d46025c873562e7b478b7ec1e70438492e27", "Url": "https://api.github.com/repos/societies/SOCIETIES-Platform", "Date": "2013-04-04T10:38:12Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overlap) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4255/buggy-version/src.main.java.util.CalendarUtils.java", "BodyUseAPI": [], "Fixed commit": "b25a78082a01091401438ba29b23220907500921", "Url": "https://api.github.com/repos/infinitiessoft/AttendenceSystem", "Date": "2016-05-03T12:44:18Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.xtext.xbase.lib.StringExtensions.isNullOrEmpty(fragment.getProjectPostfix())) { return modelProject; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7699/buggy-version/plugins.org.eclipse.viatra2.emf.incquery.tooling.generator.src.org.eclipse.viatra2.emf.incquery.tooling.generator.fragments.ExtensionBasedGenerationFragmentProvider.java", "BodyUseAPI": [], "Fixed commit": "09336b6f285f6b0b2505b41f7958de3226ca25b7", "Url": "https://api.github.com/repos/ujhelyiz/EMF-IncQuery", "Date": "2012-06-25T14:53:14Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["editWordTrans.getText().toString()", "editWord.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((word != \"\") || (wordTrad != \"\")) { word_obj = new com.example.furry_octo_waddle.sql_manager.Word_Translation(word, wordTrad, word_obj.getId()); if ((word_obj.getId()) > 0) MainActivity.cbd.modifyWordbyId(word_obj); else MainActivity.cbd.writeWord(word_obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8995/buggy-version/src.com.example.furry_octo_waddle.activities.WordActions.java", "BodyUseAPI": [], "Fixed commit": "581b71713e580882b56b4109f80ef845965e61e9", "Url": "https://api.github.com/repos/arnaud-git/furry-octo-waddle", "Date": "2016-07-12T01:05:46Z"},
{"Line": "=>678", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c.isStaticRef()) { stmtDestroy.addError((\"Cannot destroy class \" + typ)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1073/buggy-version/de.peeeq.wurstscript.src.de.peeeq.wurstscript.validation.WurstValidator.java", "BodyUseAPI": [], "Fixed commit": "58d2ecded968a3c8778302e700f4664f5028fc6d", "Url": "https://api.github.com/repos/peq/WurstScript", "Date": "2012-08-16T19:42:27Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) { android.util.Log.e(v3.maps.M_GoogleMapsV2.LOG_TAG, \"location=null was passed to toLatLng\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8539/buggy-version/SimpleUI.src.v3.maps.M_GoogleMapsV2.java", "BodyUseAPI": [], "Fixed commit": "21e9f00b88dd6c7a8780763e23b6f286c727684b", "Url": "https://api.github.com/repos/bitstars/SimpleUi", "Date": "2013-10-24T11:40:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitmap) == null) { bitmap = new java.awt.image.BufferedImage(width, height, java.awt.image.BufferedImage.TYPE_INT_RGB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2394/buggy-version/desktop.src.main.java.com.cv4j.core.datamodel.CV4JImage.java", "BodyUseAPI": [], "Fixed commit": "73d561b73f225bbad087e05b14474827227293f4", "Url": "https://api.github.com/repos/imageprocessor/cv4j-desktop", "Date": "2017-12-09T06:57:26Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laytonsmith.core.events.EventUtils.GetEvents(com.laytonsmith.core.events.Driver)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (events != null) { for (com.laytonsmith.core.events.BoundEvent b : events) { if (b.getId().equals(id)) { return new com.laytonsmith.core.functions.CBoolean(true, t); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5401/buggy-version/src.main.java.com.laytonsmith.core.functions.EventBinding.java", "BodyUseAPI": [], "Fixed commit": "41779713d21074d196cb76d24dfa3f6beb17d892", "Url": "https://api.github.com/repos/MariuszT/commandhelper", "Date": "2014-01-14T04:49:25Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rv.getScrollState()) == (android.support.v7.widget.RecyclerView.SCROLL_STATE_IDLE)) { onTouchEvent(rv, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4000/buggy-version/SupportDemo.app.src.main.java.cn.six.sup.rv.coordinate_rv_rv.MultiRvDemo.java", "BodyUseAPI": ["cn.six.sup.rv.coordinate_rv_rv.MultiRvDemo.5.onTouchEvent(android.support.v7.widget.RecyclerView,cn.six.sup.rv.coordinate_rv_rv.MotionEvent)"], "Fixed commit": "37f4c056ab018fceadd7fb8ddbea5c8758923154", "Url": "https://api.github.com/repos/songzhw/AndroidAbove5", "Date": "2017-07-18T01:56:00Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rv.getScrollState()) == (android.support.v7.widget.RecyclerView.SCROLL_STATE_IDLE)) { onTouchEvent(rv, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4000/buggy-version/SupportDemo.app.src.main.java.cn.six.sup.rv.coordinate_rv_rv.MultiRvDemo.java", "BodyUseAPI": ["cn.six.sup.rv.coordinate_rv_rv.MultiRvDemo.6.onTouchEvent(android.support.v7.widget.RecyclerView,cn.six.sup.rv.coordinate_rv_rv.MotionEvent)"], "Fixed commit": "37f4c056ab018fceadd7fb8ddbea5c8758923154", "Url": "https://api.github.com/repos/songzhw/AndroidAbove5", "Date": "2017-07-18T01:56:00Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jetty.server.handler.ConnectHandler.connect(javax.servlet.http.HttpServletRequest,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (channel == null) { throw new java.io.IOException((((\"unable to connector to \" + host) + \":\") + port)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7155/buggy-version/jetty-server.src.main.java.org.eclipse.jetty.server.handler.ConnectHandler.java", "BodyUseAPI": [], "Fixed commit": "9b2d7bb9bf6c052fa80169f91bfd1d9e1b6f9343", "Url": "https://api.github.com/repos/eclipse/jetty.project", "Date": "2012-06-21T15:50:06Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bottlesToDrain > 0) { com.lothrazar.powerinventory.proxy.UtilExperience.drainExp(player, (bottlesToDrain * (ModConfig.expPerBottle))); player.inventory.setInventorySlotContents(Const.bottleSlot, new net.minecraft.item.ItemStack(net.minecraft.init.Items.experience_bottle, bottlesToDrain)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2742/buggy-version/InfiniteInvoMutated.src.main.java.com.lothrazar.powerinventory.proxy.ExpButtonPacket.java", "BodyUseAPI": ["player.inventory.setInventorySlotContents(Const.bottleSlot,net.minecraft.item.ItemStack)", "com.lothrazar.powerinventory.proxy.UtilExperience.drainExp(net.minecraft.entity.player.EntityPlayer,(bottlesToDrain * (ModConfig.expPerBottle)))"], "Fixed commit": "acd67a4428b7c95b8ccad93e77a784956ea9b25e", "Url": "https://api.github.com/repos/PrinceOfAmber/SamsPowerups", "Date": "2015-07-24T19:40:02Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"\" != username) { if (us.userExists(username)) { error(((\"user \" + username) + \" exists\"), response); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7693/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.servlets.Register.java", "BodyUseAPI": ["uk.ac.dundee.computing.aec.instagrim.servlets.Register.error(java.lang.String,javax.servlet.http.HttpServletResponse)", "uk.ac.dundee.computing.aec.instagrim.models.User.userExists(java.lang.String)"], "Fixed commit": "dd5015c760350d1821bec64521b00a75213e81a2", "Url": "https://api.github.com/repos/AJM93/instagrim", "Date": "2014-10-23T23:52:08Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (icnt == (nw)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6379/buggy-version/h2o-core.src.main.java.water.rapids.ast.prims.advmath.AstISax.java", "BodyUseAPI": [], "Fixed commit": "6aa1c12466a4dc225084f846085f1bc2581d9afe", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-09-08T20:28:09Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Robot.oi.getVisionTrackButton()) { edu.wpi.first.wpilibj.command.Scheduler.getInstance().add(new robot.commands.VisionTrackCommand(5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3531/buggy-version/2017_Robot.src.robot.commands.DefaultDriveCommand.java", "BodyUseAPI": [], "Fixed commit": "c618e9acd9c241dc251990132e91bf1afb950754", "Url": "https://api.github.com/repos/RunnymedeRobotics1310/2017_Robot", "Date": "2017-03-10T21:13:50Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zeroxy._1s.repository.ControlledTerminalRepository.findByDeviceNo(controlledTerminal.getDeviceNo())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (controlledTerminal1 != null) { controlledTerminal.setMaster(controlledTerminal1.getMaster()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1452/buggy-version/server.java.app-server.src.main.java.com.zeroxy._1s.web.V1Controller.java", "BodyUseAPI": ["com.zeroxy._1s.domain.ControlledTerminal.setMaster(controlledTerminal1.getMaster())", "com.zeroxy._1s.domain.ControlledTerminal.getMaster()"], "Fixed commit": "79bbca55ae2805b504d35a922ea7c06a8c0915d9", "Url": "https://api.github.com/repos/slin1972/-1s", "Date": "2017-05-16T17:16:16Z"},
{"Line": "=>666", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (booksImported > 0) { executeTask(new net.nightwhistler.pageturner.activity.LibraryFragment.LoadBooksTask(config.getLastLibraryQuery())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3935/buggy-version/src.net.nightwhistler.pageturner.activity.LibraryFragment.java", "BodyUseAPI": [], "Fixed commit": "ff4de03364732975abaf89cc2a4512b4f952cecb", "Url": "https://api.github.com/repos/NightWhistler/PageTurner", "Date": "2013-04-27T07:45:00Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.equals(\"\")) { return results; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8322/buggy-version/src.main.n3reader.util.Format.java", "BodyUseAPI": [], "Fixed commit": "e7ad4b2376acdccd5f13a9b66166582236c4103e", "Url": "https://api.github.com/repos/09oguri/N3Reader", "Date": "2014-08-26T09:20:01Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (template == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1049/buggy-version/extension.core.fabric3-monitor-impl.src.main.java.org.fabric3.monitor.impl.writer.MonitorEntryWriter.java", "BodyUseAPI": [], "Fixed commit": "703a532c2d36a5982a1768d0a32f59461d45cf66", "Url": "https://api.github.com/repos/Fabric3/fabric3-core", "Date": "2013-04-06T00:09:24Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((latitude) != null) && ((longitude) != null)) { java.lang.String origin = ((java.lang.Double.toString(latitude)) + \",\") + (java.lang.Double.toString(longitude)); java.lang.String destination = ((java.lang.Double.toString(latLng.latitude)) + \",\") + (java.lang.Double.toString(latLng.longitude)); try { new DirectionFinderPackage.DirectionFinder(this, origin, destination).execute(); } catch (java.io.UnsupportedEncodingException e) { e.printStackTrace(); } }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4395/buggy-version/GoogleMaps.app.src.main.java.first.alexander.com.googlemaps.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "7a881770b112536a4bfee19fb1ab994f83975f38", "Url": "https://api.github.com/repos/Foobar-Consulting-Ltd/Car2Park-Android-Google-Map", "Date": "2017-10-30T18:20:26Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.getHeldItem().getItem().getClass().getName().contains(\"biomesoplenty\"))) { --(player.getHeldItem().stackSize); sheep.setFleeceColor(net.minecraft.item.EnumDyeColor.byDyeDamage(getDye(player.getHeldItem()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7424/buggy-version/src.main.java.com.oitsjustjose.vtweaks.event.mobtweaks.SheepDyeFix.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItem()", "com.oitsjustjose.vtweaks.event.mobtweaks.SheepDyeFix.getDye(player.getHeldItem())", "net.minecraft.entity.passive.EntitySheep.setFleeceColor(net.minecraft.item.EnumDyeColor.byDyeDamage(getDye(player.getHeldItem())))", "net.minecraft.item.EnumDyeColor.byDyeDamage(int)", "net.minecraft.entity.player.EntityPlayer.getHeldItem()"], "Fixed commit": "b9786209ff88ee1f80abd499280346a6e72acfbe", "Url": "https://api.github.com/repos/oitsjustjose/V-Tweaks", "Date": "2016-06-29T20:48:49Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(paramType.isInstance(arg))) { org.boon.core.TypeType type = paramTypeEnumList.get(0); arg = org.boon.core.Conversions.coerce(type, paramType, arg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6163/buggy-version/boon.src.main.java.org.boon.core.reflection.impl.MethodAccessImpl.java", "BodyUseAPI": ["org.boon.core.Conversions.coerce(org.boon.core.TypeType,java.lang.Class<?>,java.lang.Object)"], "Fixed commit": "897e2eb1ed5afbfd5a4f45ab09636e74f6f62642", "Url": "https://api.github.com/repos/boonproject/boon", "Date": "2014-10-17T18:54:09Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(paramType.isInstance(arg))) { org.boon.core.TypeType type = paramTypeEnumList.get(index); newArgs[index] = org.boon.core.Conversions.coerce(type, paramType, arg); }else { newArgs[index] = arg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6163/buggy-version/boon.src.main.java.org.boon.core.reflection.impl.MethodAccessImpl.java", "BodyUseAPI": ["org.boon.core.Conversions.coerce(org.boon.core.TypeType,java.lang.Class<?>,java.lang.Object)"], "Fixed commit": "897e2eb1ed5afbfd5a4f45ab09636e74f6f62642", "Url": "https://api.github.com/repos/boonproject/boon", "Date": "2014-10-17T18:54:09Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.fieldType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oType == null) oType = com.orientechnologies.orient.core.metadata.schema.OType.ANY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8544/buggy-version/orienteer-core.src.main.java.org.orienteer.core.service.impl.OClassIntrospector.java", "BodyUseAPI": [], "Fixed commit": "6e686fab1a5dca735d59f8924761e90eff59cfa2", "Url": "https://api.github.com/repos/OrienteerBAP/Orienteer", "Date": "2015-08-19T06:10:40Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Abstract.SourceNode.getPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (position != null) { msg += (((position.line) + \":\") + (position.column)) + \": \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/787/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.error.TypeCheckingError.java", "BodyUseAPI": [], "Fixed commit": "6ead8ffadc0862765ed0455034a280a982dcbaf6", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-09-29T18:27:39Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getTime()", "model.entities.Product.getCreationDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startDate.before(productCreationDate)) { startDate = productCreationDate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1084/buggy-version/src.reports.visitors.ProductStatsVisitor.java", "BodyUseAPI": [], "Fixed commit": "bde3e45c6b3f65fa85892dfddac7bd2c628c919b", "Url": "https://api.github.com/repos/caseymonc/hit", "Date": "2012-11-06T00:06:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getSecurityManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sm != null) { sm.checkPermission(new java.lang.RuntimePermission(\"setSecurityManager\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2862/buggy-version/freeplane_plugin_script.src.main.java.org.freeplane.plugin.script.ScriptSecurity.java", "BodyUseAPI": ["java.lang.SecurityManager.checkPermission(java.lang.RuntimePermission)"], "Fixed commit": "644cfb42b38e84ec887e163381a3b5aa4342ba82", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2017-02-25T20:32:15Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!keepSources) { new java.io.File((filename + \".gp\")).delete(); new java.io.File((filename + \".dat\")).delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7840/buggy-version/src.main.de.linearbits.subframe.render.GnuPlot.java", "BodyUseAPI": [], "Fixed commit": "59fbfbf85ea5a2b484548ecf48c0db0a833234c9", "Url": "https://api.github.com/repos/prasser/subframe", "Date": "2014-07-29T11:17:27Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bds.task.TaskDependecies.getTask(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (task != null) return task;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7012/buggy-version/src.org.bds.run.BdsThread.java", "BodyUseAPI": [], "Fixed commit": "3080d2a67b33bdece2493ac7eca14b267cdae715", "Url": "https://api.github.com/repos/pcingola/BigDataScript", "Date": "2016-06-07T03:11:59Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == 1) { com.crtb.tunnelmonitor.dao.impl.v2.AlertListDao.defaultDao().insertOrUpdate(((com.crtb.tunnelmonitor.entity.TunnelSettlementTotalData) (point)), 3, uType, accumulativeSubsidence, com.crtb.tunnelmonitor.utils.AlertUtils.ACCUMULATIVE_THRESHOLD, originalDataID); }else { com.crtb.tunnelmonitor.dao.impl.v2.AlertListDao.defaultDao().insertOrUpdate(((com.crtb.tunnelmonitor.entity.SubsidenceTotalData) (point)), 3, uType, accumulativeSubsidence, com.crtb.tunnelmonitor.utils.AlertUtils.ACCUMULATIVE_THRESHOLD, originalDataID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4405/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.utils.AlertUtils.java", "BodyUseAPI": [], "Fixed commit": "abe2e94a9b66c3760240628b86d840ef2dfb1e1d", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-06-09T13:24:49Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jmstudios.redmoon.presenter.ScreenFilterPresenter.DEBUG) android.util.Log.i(com.jmstudios.redmoon.presenter.ScreenFilterPresenter.TAG, \"Sending update broadcast\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1459/buggy-version/app.src.main.java.com.jmstudios.redmoon.presenter.ScreenFilterPresenter.java", "BodyUseAPI": [], "Fixed commit": "b833b91a4e12c259741f6f0ca716e1070a7db589", "Url": "https://api.github.com/repos/Zoraver/red-moon", "Date": "2016-03-24T10:59:01Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.smodel.ModuleRepositoryFacade.getInstance().getModule(org.jetbrains.mps.openapi.module.SModuleReference)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (runtime != null) { result.add(runtime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4711/buggy-version/core.kernel.source.jetbrains.mps.project.dependency.GlobalModuleDependenciesManager.java", "BodyUseAPI": ["java.util.Set<org.jetbrains.mps.openapi.module.SModule>.add(org.jetbrains.mps.openapi.module.SModule)"], "Fixed commit": "48fd0e168dac80b402655daaf0300a471eaad5dc", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2013-03-28T02:45:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (node != null) { node.setPre(this.tail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8142/buggy-version/src.main.java.com.hit.algorithm.LinkedList.java", "BodyUseAPI": ["com.hit.algorithm.Node<K, V>.setPre(com.hit.algorithm.Node<K, V>)"], "Fixed commit": "f49a042dc6b911cfb15484cffc0c615d15beea14", "Url": "https://api.github.com/repos/snirkol/web-programming-project", "Date": "2017-08-28T15:52:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (term.contentEquals(\"name\")) { statement.setString(2, term); }else { statement.setInt(2, java.lang.Integer.parseInt(term)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7541/buggy-version/src.main.java.cmsc495.database.User.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.sql.PreparedStatement.setInt(int,int)"], "Fixed commit": "882559f43a7e39c83f5f52bbde7122d3c11e66b8", "Url": "https://api.github.com/repos/cmsc495-fall2016/cmsc495-fall2016.github.io", "Date": "2016-09-28T02:09:49Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (term.contentEquals(\"name\")) { statement.setString(2, term); }else { statement.setInt(2, java.lang.Integer.parseInt(term)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7541/buggy-version/src.main.java.cmsc495.database.Ingredient.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.sql.PreparedStatement.setInt(int,int)"], "Fixed commit": "882559f43a7e39c83f5f52bbde7122d3c11e66b8", "Url": "https://api.github.com/repos/cmsc495-fall2016/cmsc495-fall2016.github.io", "Date": "2016-09-28T02:09:49Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (term.contentEquals(\"name\")) { statement.setString(2, term); }else { statement.setInt(2, java.lang.Integer.parseInt(term)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7541/buggy-version/src.main.java.cmsc495.database.Recipe.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)", "java.sql.PreparedStatement.setInt(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "882559f43a7e39c83f5f52bbde7122d3c11e66b8", "Url": "https://api.github.com/repos/cmsc495-fall2016/cmsc495-fall2016.github.io", "Date": "2016-09-28T02:09:49Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (alias == null) { this.alias = com.google.common.base.Optional.fromNullable(alias); }else { this.alias = com.google.common.base.Optional.of(alias.replace(\"\\\"\", \"\").replace(\"`\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5302/buggy-version/core.src.main.java.edu.umich.verdict.relation.expr.SelectElem.java", "BodyUseAPI": ["com.google.common.base.Optional.of(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "com.google.common.base.Optional.fromNullable(java.lang.String)"], "Fixed commit": "fe18565c5ab624138113193a264f786e772cf308", "Url": "https://api.github.com/repos/verdictdb/verdict", "Date": "2017-09-11T15:23:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(oop.ex6.main.Variable.isLegalVariableName(name))) { throw new oop.ex6.main.IllegalException(oop.ex6.main.Variable.NAME_ERROR_MESSAGE, originLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2719/buggy-version/src.oop.ex6.main.Variable.java", "BodyUseAPI": [], "Fixed commit": "5d4734475ef62027e720a186c286244fe132ec53", "Url": "https://api.github.com/repos/david-wies/ex6", "Date": "2016-06-14T11:04:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"Faculty\".equals(accessString)) { access = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1812/buggy-version/SECURDE_Library.src.servlets.AddUserServlet.java", "BodyUseAPI": [], "Fixed commit": "3e628e5c9526a0ef9f02232902fa0da54fd0e559", "Url": "https://api.github.com/repos/dionne-ong/SECURDE_Library", "Date": "2017-07-04T11:29:31Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mRegions.get(mSetClicked).get(mIndexClicked).contains(((int) (event.getX())), ((int) (event.getY())))) { mEntryListener.onClick(mSetClicked, mIndexClicked, new android.graphics.Rect(((mRegions.get(mSetClicked).get(mIndexClicked).getBounds().left) - (getPaddingLeft())), ((mRegions.get(mSetClicked).get(mIndexClicked).getBounds().top) - (getPaddingTop())), ((mRegions.get(mSetClicked).get(mIndexClicked).getBounds().right) - (getPaddingLeft())), ((mRegions.get(mSetClicked).get(mIndexClicked).getBounds().bottom) - (getPaddingTop())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/400/buggy-version/library.src.com.db.chart.view.ChartView.java", "BodyUseAPI": ["java.util.ArrayList<java.util.ArrayList<android.graphics.Region>>.get(int)", "java.util.ArrayList<java.util.ArrayList<android.graphics.Region>>.get(int)", "mRegions.get(mSetClicked).get(mIndexClicked).getBounds()", "mRegions.get(mSetClicked).get(mIndexClicked).getBounds()", "mRegions.get(mSetClicked).get(mIndexClicked).getBounds()", "mRegions.get(mSetClicked).get(int)", "mRegions.get(mSetClicked).get(int)", "java.util.ArrayList<java.util.ArrayList<android.graphics.Region>>.get(int)", "mRegions.get(mSetClicked).get(mIndexClicked).getBounds()", "java.util.ArrayList<java.util.ArrayList<android.graphics.Region>>.get(int)", "com.db.chart.listener.OnEntryClickListener.onClick(int,int,android.graphics.Rect)", "mRegions.get(mSetClicked).get(int)", "mRegions.get(mSetClicked).get(int)"], "Fixed commit": "59ea555316ec71a0a7cf1cb3550a0dc7ea9b3618", "Url": "https://api.github.com/repos/diogobernardino/WilliamChart", "Date": "2014-10-15T22:17:45Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JList.locationToIndex(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index != (-1)) { java.awt.Rectangle cellBounds = list.getCellBounds(index, index); if ((!(cellBounds.contains(point))) && (((java.awt.event.KeyEvent.CTRL_DOWN_MASK) & (e.getModifiersEx())) != (java.awt.event.KeyEvent.CTRL_DOWN_MASK))) { index = -1; list.clearSelection(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4702/buggy-version/src.com.widerwille.quicklook.QuickLookToolWindow.java", "BodyUseAPI": ["javax.swing.JList.getCellBounds(int,int)"], "Fixed commit": "47fd35044d6621ec604e6c7b114d66e509d6f46c", "Url": "https://api.github.com/repos/JustSid/AppCode-QuickLook", "Date": "2016-01-06T00:12:17Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layoutManager) == null) { layoutManager = ((android.support.v7.widget.LinearLayoutManager) (parent.getLayoutManager())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/175/buggy-version/library.src.main.java.com.jaychang.srv.decoration.SectionHeaderItemDecoration.java", "BodyUseAPI": [], "Fixed commit": "e5eb740fdc4b251df4e81aecb53bae654bbae0f9", "Url": "https://api.github.com/repos/jaychang0917/SimpleRecyclerView", "Date": "2017-06-04T16:56:21Z"},
{"Line": "=>1509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceCategory.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == addEmailBtn) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4353/buggy-version/vector.src.main.java.im.vector.fragments.VectorSettingsPreferencesFragment.java", "BodyUseAPI": [], "Fixed commit": "62feb18ac78e8d8a83f4d31943fff948b1e445c7", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-06-15T06:37:25Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tricktionary) != null) { trictionary.jumproper.com.jumpropetrictionary.MainActivity.len = trictionary.jumproper.com.jumpropetrictionary.TrickData.getLen(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4152/buggy-version/app.src.main.java.trictionary.jumproper.com.jumpropetrictionary.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c6c29f5dffc88e2de21703df381cefcb0c165dc1", "Url": "https://api.github.com/repos/the-tricktionary/android", "Date": "2016-11-29T19:30:55Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(Config.TOPOLOGY_SUBMITTER_USER)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((user == null) || (user.equals(\"\"))) { backtype.storm.scheduler.TopologyDetails.LOG.warn(\"Topology {} submitted by anonymous user\", this.getName()); user = \"anonymous\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5702/buggy-version/storm-core.src.jvm.backtype.storm.scheduler.TopologyDetails.java", "BodyUseAPI": [], "Fixed commit": "e6ada82058f2f6182b96424ab584738dd269164a", "Url": "https://api.github.com/repos/jerrypeng/storm", "Date": "2015-11-30T19:33:00Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.int8ArrayToBluetoothAddress(int[])", "org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.byteArrayToUuid(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((serviceUuid != null) && (org.thaliproject.p2p.btconnectorlib.internal.bluetooth.BluetoothUtils.isValidBluetoothMacAddress(bluetoothMacAddress))) { parsedAdvertisement = new org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.ParsedAdvertisement(); parsedAdvertisement.uuid = serviceUuid; parsedAdvertisement.bluetoothMacAddress = bluetoothMacAddress; }else { if (serviceUuid == null) { android.util.Log.e(org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.TAG, \"parseManufacturerData: Failed to parse the service UUID\"); }else { android.util.Log.e(org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.TAG, \"parseManufacturerData: The Bluetooth MAC address is invalid\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3566/buggy-version/BtConnectorLib.btconnectorlib2.src.main.java.org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.java", "BodyUseAPI": [], "Fixed commit": "d982fbecabd4dc6872a6337b9faf772a4628b0f0", "Url": "https://api.github.com/repos/thaliproject/Thali_CordovaPlugin_BtLibrary", "Date": "2016-03-16T14:30:40Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parsedAdvertisement != null) { parsedAdvertisement.provideBluetoothMacAddressRequestId = org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.checkIfUuidContainsProvideBluetoothMacAddressRequestId(parsedAdvertisement.uuid, serviceUuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3566/buggy-version/BtConnectorLib.btconnectorlib2.src.main.java.org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.java", "BodyUseAPI": ["org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.checkIfUuidContainsProvideBluetoothMacAddressRequestId(java.util.UUID,java.util.UUID)"], "Fixed commit": "d982fbecabd4dc6872a6337b9faf772a4628b0f0", "Url": "https://api.github.com/repos/thaliproject/Thali_CordovaPlugin_BtLibrary", "Date": "2016-03-16T14:30:40Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.crossbow.app.x_timer.service.TickAppInfo.isHasInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentAppHasInstance) { lastApp.setAll(currentApp.getPkgName(), currentApp.getStartTime(), currentApp.isInWatchingList()); if (lastApp.isInWatchingList()) { onAppSwitched(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2457/buggy-version/app.src.main.java.com.crossbow.app.x_timer.service.TickTrackerService.java", "BodyUseAPI": [], "Fixed commit": "27a460ff97ec53fd4bef907fcd67fece4fb976ba", "Url": "https://api.github.com/repos/CuiH/X-Timer", "Date": "2016-07-13T01:53:48Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (projectInfo.isPreBuilt()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8251/buggy-version/phresco-service-impl.src.main.java.com.photon.phresco.service.impl.DbManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "0a6aabf21b14e27f07ac1afce9bdd38acfe265b9", "Url": "https://api.github.com/repos/photon-infotech/service", "Date": "2013-07-30T11:28:03Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(argument.isReference)) { arguments[x].unset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2856/buggy-version/src.ru.regenix.jphp.runtime.reflection.FunctionEntity.java", "BodyUseAPI": [], "Fixed commit": "ae2631d1ab4d80daf69724a6fbae402f1ab31b67", "Url": "https://api.github.com/repos/dim-s/jvm-php", "Date": "2013-12-11T10:08:53Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (argument.isReference()) { local.setReference(true); statement.getUnstableLocal().add(argument.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2856/buggy-version/src.ru.regenix.jphp.compiler.jvm.stetament.MethodStmtCompiler.java", "BodyUseAPI": ["ru.regenix.jphp.tokenizer.token.stmt.ArgumentStmtToken.getName()", "statement.getUnstableLocal().add(argument.getName())"], "Fixed commit": "ae2631d1ab4d80daf69724a6fbae402f1ab31b67", "Url": "https://api.github.com/repos/dim-s/jvm-php", "Date": "2013-12-11T10:08:53Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attributeList.contains(tempAttribute))) { attributeList.add(tempAttribute); headerCell = singleRow.createCell((cellIndex++)); headerCell.setCellValue(tempAttribute); headerCell.setCellStyle(style); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6206/buggy-version/main.src.java.org.jcvi.ometa.utils.JsonProducer.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "org.jcvi.ometa.utils.Cell.setCellValue(java.lang.String)"], "Fixed commit": "fd7ff8c2c793636687acd27584bc647f25ff296d", "Url": "https://api.github.com/repos/movence/OMETA", "Date": "2017-03-01T20:15:39Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jcvi.ometa.utils.LookupValue.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tempLookupValueName.equals(\"BioSample_Accession\")) || (tempLookupValueName.equals(\"BioSample Accession\"))) tempLookupValueName = bioSampleId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6206/buggy-version/main.src.java.org.jcvi.ometa.utils.JsonProducer.java", "BodyUseAPI": [], "Fixed commit": "fd7ff8c2c793636687acd27584bc647f25ff296d", "Url": "https://api.github.com/repos/movence/OMETA", "Date": "2017-03-01T20:15:39Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errorBarEnabled) { boolean foundErrors = false; for (uk.ac.diamond.scisoft.analysis.dataset.IDataset ids : ysIn) { if (((uk.ac.diamond.scisoft.analysis.dataset.Dataset) (ids)).hasErrors()) { foundErrors = true; break; } } if (!foundErrors) errorBarEnabled = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6840/buggy-version/org.dawnsci.plotting.system.src.org.dawnsci.plotting.system.PlottingSystemImpl.java", "BodyUseAPI": [], "Fixed commit": "d25bafba3d6e62ba9a5abec6ea01b45ebd8f2c53", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2014-06-12T13:30:33Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8550/buggy-version/src.ibis.constellation.impl.SingleThreadedConstellation.java", "BodyUseAPI": [], "Fixed commit": "037c41fa191d6b8682938440329e2fb14ea5e55c", "Url": "https://api.github.com/repos/NLeSC/Constellation", "Date": "2016-11-22T07:55:11Z"},
{"Line": "=>807", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jodd.http.HttpBase<T>.header(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((transferEncoding != null) && (transferEncoding.equalsIgnoreCase(\"chunked\"))) { isChunked = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2190/buggy-version/jodd-http.src.main.java.jodd.http.HttpBase.java", "BodyUseAPI": [], "Fixed commit": "59ca62a9cb1b5a906379569fd330feb6548b2636", "Url": "https://api.github.com/repos/vilmospapp/jodd", "Date": "2015-05-25T20:25:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datascience.core.base.Data<T>.getObject(object.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((object.isGold()) && (!(oldObject.isGold()))) { oldObject.setGoldLabel(object.getGoldLabel()); addGoldObject(oldObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7501/buggy-version/troia-server.src.main.java.com.datascience.core.base.Data.java", "BodyUseAPI": ["com.datascience.core.base.Data<T>.addGoldObject(com.datascience.core.base.LObject)", "com.datascience.core.base.LObject.setGoldLabel(object.getGoldLabel())", "com.datascience.core.base.LObject<T>.getGoldLabel()"], "Fixed commit": "9fc2a2122f2169739be2e9ee4b1e9d493fd609e5", "Url": "https://api.github.com/repos/ipeirotis/Troia-Server", "Date": "2013-03-20T19:25:19Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datascience.core.base.Data<T>.getObject(object.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((object.isEvaluation()) && (!(oldObject.isEvaluation()))) { oldObject.setEvaluationLabel(object.getEvaluationLabel()); addEvaluationObject(oldObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7501/buggy-version/troia-server.src.main.java.com.datascience.core.base.Data.java", "BodyUseAPI": ["com.datascience.core.base.Data<T>.addEvaluationObject(com.datascience.core.base.LObject)", "com.datascience.core.base.LObject<T>.getEvaluationLabel()", "com.datascience.core.base.LObject.setEvaluationLabel(object.getEvaluationLabel())"], "Fixed commit": "9fc2a2122f2169739be2e9ee4b1e9d493fd609e5", "Url": "https://api.github.com/repos/ipeirotis/Troia-Server", "Date": "2013-03-20T19:25:19Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) { x = ((givenChar.toCharArray()[0]) - 'A') + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8044/buggy-version/src.main.java.gameVoiceHandler.OrdersTranslator.java", "BodyUseAPI": [], "Fixed commit": "2fd05cd68aaba4384c7a21d2a15b1799e2a87ed4", "Url": "https://api.github.com/repos/corelema/Battleship", "Date": "2016-01-28T05:43:32Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gravitated) { gravitated = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/836/buggy-version/app.src.main.java.erikterwiel.consecutivealarmsv20.AlarmAlertActivity.java", "BodyUseAPI": [], "Fixed commit": "f2792d2f3f1b5026a298cdeec90550c67ef6a537", "Url": "https://api.github.com/repos/erikterwiel/ConsecutiveAlarms", "Date": "2017-07-15T18:50:45Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(showOnlyOneTab)) { java.lang.Integer tab = settings.SEARCH_TAB.get(); android.support.v4.view.ViewPager mViewPager = ((android.support.v4.view.ViewPager) (findViewById(R.id.pager))); mViewPager.setCurrentItem(java.lang.Math.min(tab, net.osmand.plus.activities.search.SearchActivity.HISTORY_TAB_INDEX)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4620/buggy-version/OsmAnd.src.net.osmand.plus.activities.search.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "5cca966f3d8b639b1e90348c735853feb1da7671", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2015-04-29T23:17:12Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userInput.equals(\"\"))) { try { infrastructure.NERParser.updateTsvFile(userInput); } catch (java.io.IOException e1) { e1.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2515/buggy-version/src.views.ListOfXiaoMingViewsController.java", "BodyUseAPI": ["infrastructure.NERParser.updateTsvFile(java.lang.String)"], "Fixed commit": "8b8f5ada955b9c221863d3dad9d80e115f688e9f", "Url": "https://api.github.com/repos/cs2103aug2014-w15-2j/main", "Date": "2014-10-30T12:33:59Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((trList.size()) > 1) && ((trList.get(0).select(\"input[type=checkbox]\").size()) > 0)) && ((trList.get(1).select(\"input[type=checkbox]\").size()) > 0)) { rows_per_hit = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/188/buggy-version/src.de.geeksfactory.opacclient.apis.BiBer1992.java", "BodyUseAPI": [], "Fixed commit": "d239a1a0bec4183695d4213f0366c58841c9b690", "Url": "https://api.github.com/repos/raphaelm/opacclient", "Date": "2014-03-03T09:13:31Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_home)) { frag = new hookupandroid.fragments.HomeFragment(); toolbarTitle = \"Home\"; }else if (id == (R.id.nav_discover)) { frag = new hookupandroid.fragments.DiscoverMatchesFragment(); toolbarTitle = \"Discover matches\"; }else if (id == (R.id.nav_friends)) { frag = new hookupandroid.fragments.FriendsFragment(); toolbarTitle = \"Friends\"; }else if (id == (R.id.nav_pendingHookups)) { frag = new hookupandroid.fragments.PendingHookupsFragment(); toolbarTitle = \"Pending hookups\"; }else if (id == (R.id.nav_settings)) { android.content.Intent intent = new android.content.Intent(this, hookupandroid.activities.SettingsActivity.class); startActivity(intent); }else if (id == (R.id.nav_signOut)) { }else if (id == (R.id.nav_exitApp)) { frag = new hookupandroid.fragments.AuthFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5188/buggy-version/HookupAndroid.app.src.main.java.hookupandroid.activities.NavDrawerMainActivity.java", "BodyUseAPI": [], "Fixed commit": "89b2d82729da19131575a7be5d3fbe27848d91c5", "Url": "https://api.github.com/repos/SayyedBandar/hookup", "Date": "2017-02-13T17:52:56Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (s.contains(\"&amp;\")) { char[] fixed_string = new char[(s.length()) - 4]; int buffer = 0; for (int j = 0; j < (s.length()); j++) { if (((s.charAt(j)) == '&') && ((s.charAt((j + 1))) == 'a')) { j += 5; buffer = -4; fixed_string[(j - 6)] = ' '; fixed_string[(j - 5)] = '&'; } fixed_string[(j + buffer)] = s.charAt(j); } s = new java.lang.String(fixed_string); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1025/buggy-version/app.src.main.java.group10_cmsc436.pantrychef.RecipeAsyncTask.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.charAt(int)", "java.lang.String.length()"], "Fixed commit": "0ee88aad21346878540219ea38b552ba4168d28c", "Url": "https://api.github.com/repos/nmdean13/PantryChef", "Date": "2016-05-10T08:18:24Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getDisTable2()) != null) showMatrix(parent.getDisTable2(), \"Internal distances for Structure 2\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8379/buggy-version/biojava-structure-gui.src.main.java.org.biojava.nbio.structure.align.gui.MyDistMaxListener.java", "BodyUseAPI": ["org.biojava.nbio.structure.align.model.AFPChain.getDisTable2()", "org.biojava.nbio.structure.align.gui.MyDistMaxListener.showMatrix(parent.getDisTable2(),java.lang.String)"], "Fixed commit": "9ab4735d842f8e2d2c865277e12185f6891097d9", "Url": "https://api.github.com/repos/lafita/biojava", "Date": "2015-05-20T08:12:14Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.getDisTable1()) != null) showMatrix(parent.getDisTable1(), \"Internal distances for Structure 1\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8379/buggy-version/biojava-structure-gui.src.main.java.org.biojava.nbio.structure.align.gui.MyDistMaxListener.java", "BodyUseAPI": ["org.biojava.nbio.structure.align.gui.MyDistMaxListener.showMatrix(parent.getDisTable1(),java.lang.String)", "org.biojava.nbio.structure.align.model.AFPChain.getDisTable1()"], "Fixed commit": "9ab4735d842f8e2d2c865277e12185f6891097d9", "Url": "https://api.github.com/repos/lafita/biojava", "Date": "2015-05-20T08:12:14Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"9223372036854775807\".equals(stringDate)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4796/buggy-version/src.main.de.dal33t.powerfolder.util.DateUtil.java", "BodyUseAPI": [], "Fixed commit": "653e0515ea42cad458c23ece4a0207aab580daa1", "Url": "https://api.github.com/repos/powerfolder/PF-CORE", "Date": "2016-05-27T11:37:42Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSinglePlayer) currentPlayerInteracting = 0; else currentPlayerInteracting = manager.startPlayer;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8737/buggy-version/app.src.main.java.com.example.james.cardsuite.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "8db0599961f83b1ef2f00a2d307f79fd1deb03d0", "Url": "https://api.github.com/repos/SVT125/GermanBridge", "Date": "2015-08-20T02:38:42Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((manager.potsFinished) < ((manager.totalRoundCount) - 1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8737/buggy-version/app.src.main.java.com.example.james.cardsuite.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "8db0599961f83b1ef2f00a2d307f79fd1deb03d0", "Url": "https://api.github.com/repos/SVT125/GermanBridge", "Date": "2015-08-20T02:38:42Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codename1.ui.Form.getFocused()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (focused != null) { focused.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4777/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": ["com.codename1.ui.Component.requestFocus()"], "Fixed commit": "533c08560016ed3e4e86b521a9e657d9cb5485ad", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-12-01T01:03:58Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.inera.statistics.web.service.FilterData.getToDate()", "se.inera.statistics.web.service.FilterData.getFromDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((fromDate != null) && (toDate != null)) { try { org.joda.time.DateTime from = dateStringFormat.parseDateTime(fromDate); org.joda.time.DateTime to = dateStringFormat.parseDateTime(toDate); return new se.inera.statistics.service.report.model.Range(from.toLocalDate().withDayOfMonth(1), to.toLocalDate().dayOfMonth().withMaximumValue()); } catch (java.lang.IllegalArgumentException e) { se.inera.statistics.web.service.ProtectedChartDataService.LOG.warn(\"Could not parse range dates. From: {}, To: {}. Falling back to default range.\", fromDate, toDate); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1968/buggy-version/statistik-web.src.main.java.se.inera.statistics.web.service.ProtectedChartDataService.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.String,java.lang.String)", "org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)", "org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)"], "Fixed commit": "07f63884442f5cf2662aaeeb931222a11fe47c10", "Url": "https://api.github.com/repos/sklintyg/statistik", "Date": "2015-04-28T11:40:19Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Main.getExchange(exists.getExpr(),impl.getLeft())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (expr == null) { expr = exists.getVar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4995/buggy-version/homework4.src.Axioms.java", "BodyUseAPI": [], "Fixed commit": "ec69e7a063a48aba4ff9327931dc95f71c63266d", "Url": "https://api.github.com/repos/korektur/matlogic", "Date": "2014-03-04T07:55:46Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Main.getExchange(forall.getExpr(),impl.getRight())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (expr == null) { expr = forall.getVar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4995/buggy-version/homework4.src.Axioms.java", "BodyUseAPI": [], "Fixed commit": "ec69e7a063a48aba4ff9327931dc95f71c63266d", "Url": "https://api.github.com/repos/korektur/matlogic", "Date": "2014-03-04T07:55:46Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (running) try { java.net.URL url = new java.net.URL(params[0]); java.net.URLConnection connection = url.openConnection(); connection.connect(); int fileLength = connection.getContentLength(); java.lang.String filepath = android.os.Environment.getExternalStorageDirectory().getPath(); java.io.InputStream input = new java.io.BufferedInputStream(url.openStream()); java.io.OutputStream output = new java.io.FileOutputStream(((filepath + \"/\") + (save_filename))); byte[] data = new byte[1024]; long total = 0; int count; while ((count = input.read(data)) != (-1)) { total += count; publishProgress(((int) ((total * 100) / fileLength))); output.write(data, 0, count); } output.flush(); output.close(); input.close(); } catch (java.lang.Exception e) { android.util.Log.e(\"Error\", e.getMessage()); e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9113/buggy-version/grains-svm.src.main.java.li.grains.DownloadFile.java", "BodyUseAPI": [], "Fixed commit": "261834aaeebcadbdff465c0b03d574b311c7f960", "Url": "https://api.github.com/repos/lixingcong/Grains-SVM-android", "Date": "2016-12-03T17:50:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\".\".equals(folderName)) { folderName = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/327/buggy-version/deltaspike.modules.jsf.api.src.main.java.org.apache.deltaspike.jsf.util.NamingConventionUtils.java", "BodyUseAPI": [], "Fixed commit": "c24b6823795b5d1da7965f7d53308a654f76b975", "Url": "https://api.github.com/repos/struberg/deltaspike", "Date": "2013-10-05T12:37:01Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hits.hasNext()) { collection.append(','); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8407/buggy-version/src.main.java.alexanderc.tweek.es.plugin.kas.ResultResponse.java", "BodyUseAPI": [], "Fixed commit": "20d58281254685068cef30a31553cd2700000945", "Url": "https://api.github.com/repos/AlexanderC/elasticsearch-key-aware-search", "Date": "2015-02-18T20:44:20Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { return main.storage.Storage.MESSAGE_READ_FROM_FILE_SUCCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2161/buggy-version/src.main.storage.Storage.java", "BodyUseAPI": [], "Fixed commit": "c9e49025d05916c2e681e4e70ddcba01a06cc523", "Url": "https://api.github.com/repos/cs2103aug2014-T13-2J/main", "Date": "2014-10-30T05:34:42Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.biojava3.structure.StructureIO.getStructure(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (structure.isCrystallographic()) { int foldType = sg.getAxisFoldType(transf2.getTransformId()); javax.vecmath.AxisAngle4d axisAngle = sg.getRotAxisAngle(transf2.getTransformId()); java.lang.System.out.println(((((\" \" + foldType) + \"-fold on axis \") + (java.lang.String.format(\"(%5.2f,%5.2f,%5.2f)\", axisAngle.x, axisAngle.y, axisAngle.z))) + screwStr)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7183/buggy-version/biojava3-structure.src.main.java.demo.DemoCrystalInterfaces.java", "BodyUseAPI": [], "Fixed commit": "41d950692cece4bd5f1779a1b865f20420880569", "Url": "https://api.github.com/repos/josemduarte/biojava", "Date": "2014-12-05T13:53:08Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (driverID.equals(myName)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/745/buggy-version/Guuber.app.src.main.java.guuber.cmu.edu.activities.passenger.StartServiceActivity.java", "BodyUseAPI": [], "Fixed commit": "445d269a71f084cecd20c0b613e6ae8eab0dfb4f", "Url": "https://api.github.com/repos/helunwencser/Guuber", "Date": "2016-05-02T17:33:54Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (passengerID.equals(myName)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/745/buggy-version/Guuber.app.src.main.java.guuber.cmu.edu.activities.driver.StartServiceActivity.java", "BodyUseAPI": [], "Fixed commit": "445d269a71f084cecd20c0b613e6ae8eab0dfb4f", "Url": "https://api.github.com/repos/helunwencser/Guuber", "Date": "2016-05-02T17:33:54Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((localuser.getUserName()) == null) { localuser.setUserName(org.fiware.apps.marketplace.utils.NameGenerator.getURLName(localuser.getDisplayName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2803/buggy-version/src.main.java.org.fiware.apps.marketplace.bo.impl.UserBoImpl.java", "BodyUseAPI": ["org.fiware.apps.marketplace.model.User.getDisplayName()", "org.fiware.apps.marketplace.model.User.setUserName(org.fiware.apps.marketplace.utils.NameGenerator.getURLName(localuser.getDisplayName()))", "org.fiware.apps.marketplace.utils.NameGenerator.getURLName(localuser.getDisplayName())"], "Fixed commit": "9afc52bf3a0f14e6c5a000942edcfdea3a2acb8d", "Url": "https://api.github.com/repos/conwetlab/WMarket", "Date": "2015-02-19T09:30:25Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["is.idega.idegaweb.egov.course.data.Course.getCourseType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (type != null) { link.addParameter(is.idega.idegaweb.egov.course.presentation.PARAMETER_COURSE_TYPE_PK, type.getPrimaryKey().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8858/buggy-version/src.java.is.idega.idegaweb.egov.course.presentation.CourseList.java", "BodyUseAPI": ["is.idega.idegaweb.egov.course.data.CourseType.getPrimaryKey()", "com.idega.presentation.text.Link.addParameter(is.idega.idegaweb.egov.course.presentation.PARAMETER_COURSE_TYPE_PK,type.getPrimaryKey().toString())", "type.getPrimaryKey().toString()"], "Fixed commit": "46699f6e8147a2eeb924ee8fddcab16f5fecabd9", "Url": "https://api.github.com/repos/idega/is.idega.idegaweb.egov.course", "Date": "2014-02-11T14:57:28Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((files.length) == 0) { java.lang.System.out.println(\"no files\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8482/buggy-version/app.src.main.java.com.example.hoyuichan.p2v.VideoSettingActivity.java", "BodyUseAPI": [], "Fixed commit": "0d66acbc30798eae2aada72a1afab9579126340f", "Url": "https://api.github.com/repos/hychanbb/P2V", "Date": "2016-04-30T12:39:18Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((files.length) == 0) { return null; }else { for (int i = 0; i < (files.length); i++) { musicPath.addAll(searchMusic(files[i], type)); } return musicPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8482/buggy-version/app.src.main.java.com.example.hoyuichan.p2v.VideoSettingActivity.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.addAll(java.util.ArrayList<java.lang.String>)", "com.example.hoyuichan.p2v.VideoSettingActivity.searchMusic(java.io.File,java.lang.String)"], "Fixed commit": "0d66acbc30798eae2aada72a1afab9579126340f", "Url": "https://api.github.com/repos/hychanbb/P2V", "Date": "2016-04-30T12:39:18Z"},
{"Line": "=>1495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.db.record.OIdentifiable.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (record instanceof com.orientechnologies.orient.core.record.ORecordSchemaAware<?>) { final com.orientechnologies.orient.core.record.ORecordSchemaAware<?> recordSchemaAware = ((com.orientechnologies.orient.core.record.ORecordSchemaAware<?>) (record)); final java.util.Map<com.orientechnologies.orient.core.metadata.schema.OClass, java.lang.String> targetClasses = parsedTarget.getTargetClasses(); if ((targetClasses != null) && (!(targetClasses.isEmpty()))) { for (com.orientechnologies.orient.core.metadata.schema.OClass targetClass : targetClasses.keySet()) { if (!(targetClass.isSuperClassOf(recordSchemaAware.getSchemaClass()))) return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4475/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLSelect.java", "BodyUseAPI": [], "Fixed commit": "b365cc6da00049ec1caa7f3d1050446e2e360c9c", "Url": "https://api.github.com/repos/kowalot/orientdb", "Date": "2014-02-10T12:33:44Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { clusterDef.getCurrentReport().setClusterAndNodesServiceStatus(ServiceStatus.STARTED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5819/buggy-version/server.software-mgmt-plugin-ambari.src.main.java.com.vmware.bdd.plugin.ambari.service.AmbariImpl.java", "BodyUseAPI": [], "Fixed commit": "82c6815b752d588e3ca0aef96f1251e5726ca9cf", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-08-25T05:10:55Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (modules.isEmpty()) { if (canBeDispatched) { message = java.lang.String.format(\"Method \\\"%s\\\" has already been used with the same version, active status, properties set and different method body!\", existedMethod.getName()); }else { message = java.lang.String.format(\"Method \\\"%s\\\" has already been used with different method body!\", existedMethod.getName()); } }else { java.lang.String modulesString = modules.get(0); if ((modules.size()) > 1) { if (canBeDispatched) { message = java.lang.String.format(\"Method \\\"%s\\\" has already been used in modules \\\"%s\\\" and \\\"%s\\\" with the same version, active status, properties set and different method body!\", existedMethod.getName(), modulesString, modules.get(1)); }else { message = java.lang.String.format(\"Method \\\"%s\\\" has already been used in modules \\\"%s\\\" and \\\"%s\\\" with different method body!\", existedMethod.getName(), modulesString, modules.get(1)); } }else { if (canBeDispatched) { message = java.lang.String.format(\"Method \\\"%s\\\" has already been used in module \\\"%s\\\" with the same version, active status, properties set and different method body!\", existedMethod.getName(), modulesString); }else { message = java.lang.String.format(\"Method \\\"%s\\\" has already been used in module \\\"%s\\\" with different method body!\", existedMethod.getName(), modulesString); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2271/buggy-version/DEV.org.openl.rules.src.org.openl.rules.types.ValidationMessages.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,existedMethod.getName(),java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.lang.String.format(java.lang.String,existedMethod.getName(),java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "9917f3782c9a6b60fee7735953488e57a9624905", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2015-08-20T13:42:48Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(channel.startsWith(\"#\"))) { channel = \"#\" + channel; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5884/buggy-version/src.main.java.com.chamelaeon.dicebot.DicebotRunner.java", "BodyUseAPI": [], "Fixed commit": "b5793038081064d5f3c39780cd13fb84bce7291a", "Url": "https://api.github.com/repos/chamelaeon/Dicebot", "Date": "2014-09-14T02:20:58Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cFile.delete())) { plugin.getLogger().warning(\"Could not delete a \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1826/buggy-version/src.main.java.net.worldoftomorrow.noitem.util.Updater.java", "BodyUseAPI": [], "Fixed commit": "8dbba3f4bd0b6c7225f40310319b8e58c7dd830a", "Url": "https://api.github.com/repos/nala3/NoItem", "Date": "2012-12-24T00:46:33Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((_previewPatches) != null) && ((_previewPatches.size()) > 0)) setPatches(_previewPatches);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9077/buggy-version/src.cadenza.control.PreviewController.java", "BodyUseAPI": ["cadenza.control.PreviewController.setPatches(java.util.List<cadenza.core.Patch>)"], "Fixed commit": "a9b4ed5029e302eba39042d5a4357a73abb85295", "Url": "https://api.github.com/repos/MattPutnam/Cadenza", "Date": "2014-10-05T17:16:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emergentorganization.cellrpg.core.Entity.getComponent(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bulletState.bounces) < (bulletState.starting_bounces)) { eventManager.pushEvent(GameEvent.PLAYER_HIT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7363/buggy-version/core.src.com.emergentorganization.cellrpg.core.PhysicsContactListener.java", "BodyUseAPI": [], "Fixed commit": "d489f69ad63936b0548cf495f21c73b68b34eb35", "Url": "https://api.github.com/repos/EmergentOrganization/cell-rpg", "Date": "2016-01-05T04:05:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stack.empty())) { obj = stack.peek(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8235/buggy-version/src.jgroup.ReplStack.java", "BodyUseAPI": ["java.util.Stack<T>.peek()"], "Fixed commit": "ee8e216961d2d491bb202a23ea181c01a78ced8c", "Url": "https://api.github.com/repos/GilangJulianS/PAT-JGroups", "Date": "2015-10-27T11:26:03Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stack.empty())) { obj = stack.peek(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8235/buggy-version/src.jgroup.ReplStack.java", "BodyUseAPI": ["java.util.Stack<T>.peek()"], "Fixed commit": "ee8e216961d2d491bb202a23ea181c01a78ced8c", "Url": "https://api.github.com/repos/GilangJulianS/PAT-JGroups", "Date": "2015-10-27T11:26:03Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jgroup.ReplStack<java.lang.String>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (obj != null) { java.lang.System.out.println((\"Item popped: \" + obj)); }else { java.lang.System.out.println(\"Stack empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8235/buggy-version/src.jgroup.MainClass.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "ee8e216961d2d491bb202a23ea181c01a78ced8c", "Url": "https://api.github.com/repos/GilangJulianS/PAT-JGroups", "Date": "2015-10-27T11:26:03Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(\"3\")) { java.lang.String obj = stack.top(); if (obj != null) { java.lang.System.out.println((\"Top item: \" + obj)); }else { java.lang.System.out.println(\"Stack empty\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8235/buggy-version/src.jgroup.MainClass.java", "BodyUseAPI": [], "Fixed commit": "ee8e216961d2d491bb202a23ea181c01a78ced8c", "Url": "https://api.github.com/repos/GilangJulianS/PAT-JGroups", "Date": "2015-10-27T11:26:03Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jgroup.ReplSet<T>.deserialize(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(set.contains(msg.getObject()))) { set.add(msg.getObject()); java.lang.System.out.println(((msg.getObject().toString()) + \" added to set\")); }else { java.lang.System.out.println(((msg.getObject().toString()) + \" already in set\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8235/buggy-version/src.jgroup.ReplSet.java", "BodyUseAPI": ["java.io.PrintStream.println(((msg.getObject().toString()) + \" added to set\"))", "jgroup.MsgObject<T>.getObject()", "msg.getObject().toString()", "jgroup.MsgObject<T>.getObject()", "java.util.Set<T>.add(msg.getObject())", "java.io.PrintStream.println(((msg.getObject().toString()) + \" already in set\"))", "msg.getObject().toString()", "jgroup.MsgObject<T>.getObject()"], "Fixed commit": "ee8e216961d2d491bb202a23ea181c01a78ced8c", "Url": "https://api.github.com/repos/GilangJulianS/PAT-JGroups", "Date": "2015-10-27T11:26:03Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((activity) instanceof com.blstream.studybox.activities.DecksActivity)) { intent = new android.content.Intent(context, com.blstream.studybox.activities.DecksActivity.class); intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK))); activity.startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/713/buggy-version/app.src.main.java.com.blstream.studybox.components.DrawerAdapter.java", "BodyUseAPI": [], "Fixed commit": "1e0cadf89232a8820359d05011ecf83b5ae246ea", "Url": "https://api.github.com/repos/blstream/StudyBox_Android", "Date": "2016-05-18T15:24:27Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (op.check(\"trainSave\")) trainSave = op.getVal(\"trainSave\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5340/buggy-version/src.de.tuebingen.rparse.ui.Rparse.java", "BodyUseAPI": ["de.tuebingen.rparse.misc.CommandLineParameters.getVal(java.lang.String)"], "Fixed commit": "eef0350f7d40df2936b8a77ebd04c55e4149479b", "Url": "https://api.github.com/repos/wmaier/rparse", "Date": "2013-09-07T12:18:15Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resultEntry.getPermanentId()) == null) { org.irods.jargon.dataone.events.defdb.DefaultEventServiceAOImpl.log.warn(\"identifier is null\"); }else { org.dataone.service.types.v1.Identifier identifier = new org.dataone.service.types.v1.Identifier(); identifier.setValue(resultEntry.getPermanentId().toString()); logEntry.setIdentifier(identifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7196/buggy-version/default-event-service.default-event-service-api-impl.src.main.java.org.irods.jargon.dataone.events.defdb.DefaultEventServiceAOImpl.java", "BodyUseAPI": ["resultEntry.getPermanentId().toString()", "org.irods.jargon.dataone.def.event.persist.dao.domain.AccessLog.getPermanentId()", "org.dataone.service.types.v1.Identifier.setValue(resultEntry.getPermanentId().toString())"], "Fixed commit": "ca22cd12dba954007bb5f8f983c14888af645e59", "Url": "https://api.github.com/repos/slr71/dfc-dataone", "Date": "2017-07-10T13:08:46Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((resultEntry.getEvent()) == null) { org.irods.jargon.dataone.events.defdb.DefaultEventServiceAOImpl.log.warn(\"event is null!\"); }else { logEntry.setEvent(org.dataone.service.types.v1.Event.valueOf(resultEntry.getEvent().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7196/buggy-version/default-event-service.default-event-service-api-impl.src.main.java.org.irods.jargon.dataone.events.defdb.DefaultEventServiceAOImpl.java", "BodyUseAPI": ["resultEntry.getEvent().toString()", "org.dataone.service.types.v1.Event.valueOf(resultEntry.getEvent().toString())", "org.dataone.service.types.v1.LogEntry.setEvent(org.dataone.service.types.v1.Event.valueOf(resultEntry.getEvent().toString()))", "org.irods.jargon.dataone.def.event.persist.dao.domain.AccessLog.getEvent()"], "Fixed commit": "ca22cd12dba954007bb5f8f983c14888af645e59", "Url": "https://api.github.com/repos/slr71/dfc-dataone", "Date": "2017-07-10T13:08:46Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTimeList.size()) == 0) { mTimeList.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1802/buggy-version/app.src.main.java.kritikalerror.com.commutealarm.CustomPagerAdapter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "cd01eed94e6a9a6946113a415f611e1ba08f585e", "Url": "https://api.github.com/repos/mslhii/CommuteAlarm", "Date": "2015-10-18T20:59:46Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity.isComment()) { if (!(activity.getTitleId().equals(\"forum.remove-poll\"))) { if (activity.getTitleId().equals(\"forum.add-poll\")) { return org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity)); }else { return templateParams.get(\"PostLink\"); } } }else { return (org.exoplatform.commons.utils.CommonsUtils.getCurrentDomain()) + (templateParams.get(\"TopicLink\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8918/buggy-version/component.notification.src.main.java.org.exoplatform.social.notification.LinkProviderUtils.java", "BodyUseAPI": ["activity.getTitleId().equals(java.lang.String)", "org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity))", "org.exoplatform.social.core.activity.model.ExoSocialActivity.getTitleId()", "org.exoplatform.social.core.activity.model.ExoSocialActivity.getTitleId()", "activity.getTitleId().equals(java.lang.String)", "org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(org.exoplatform.social.core.activity.model.ExoSocialActivity)"], "Fixed commit": "a357f2ca1a8985ae7ef194b7bdf3c4004fdc9dff", "Url": "https://api.github.com/repos/exodev/social", "Date": "2016-08-24T11:33:45Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status == (android.location.LocationProvider.OUT_OF_SERVICE)) { this.errorOccurred(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4682/buggy-version/Source.App.src.dimappers.android.pub.Pending.java", "BodyUseAPI": [], "Fixed commit": "a1c6b32799fc42d9678874304d9e08fa29032b4a", "Url": "https://api.github.com/repos/Dimappers/Pub", "Date": "2012-03-27T00:57:13Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!foundMatch) { retval.add(subArtifactOf[l]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3102/buggy-version/src.org.spdx.merge.SpdxFileInfoMerger.java", "BodyUseAPI": [], "Fixed commit": "f80d769d129dbec5ade73ba05106cbc3e98ffcfd", "Url": "https://api.github.com/repos/goneall/SPDX-Tools", "Date": "2014-08-18T16:00:14Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messageStream) != null) { messageStream.getMis().closeInput(); messageStream.getMos().closeOutput(); messageStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4607/buggy-version/src.it.sapienza.robotsample.ProtocolAdapter.java", "BodyUseAPI": [], "Fixed commit": "5b7ee1cd26d31a5b994378e102745287f664633e", "Url": "https://api.github.com/repos/eltazar/RobotSample", "Date": "2012-06-19T11:20:44Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wahtod.wififixer.prefs.PrefUtil.getNetworkByNID(org.wahtod.wififixer.ui.Context,org.wahtod.wififixer.prefs.PrefUtil.getNidFromSsid(context, ssid))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (net == null) return false; else { boolean enabled = (net.status) == (WifiConfiguration.Status.DISABLED); return enabled; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5738/buggy-version/wififixer.src.org.wahtod.wififixer.ui.KnownNetworksFragment.java", "BodyUseAPI": [], "Fixed commit": "eadfb14abe89f728f60ff77476a2a722e10139d8", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2013-07-28T16:10:39Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.awt.GraphicsEnvironment.isHeadless())) { callbacks.addSuiteTab(new burp.ui.ConfigTab(config, eventStream)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5479/buggy-version/src.burp.BurpExtender.java", "BodyUseAPI": [], "Fixed commit": "b36f0c45142825a75072587b96080bdadc078c8c", "Url": "https://api.github.com/repos/ahri/burp-report-to-elasticsearch", "Date": "2015-12-21T14:47:37Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (envEventstreamType != null) { type = EventStream.Type.valueOf(envEventstreamType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5479/buggy-version/src.burp.eventStream.config.EnvVarConfig.java", "BodyUseAPI": [], "Fixed commit": "b36f0c45142825a75072587b96080bdadc078c8c", "Url": "https://api.github.com/repos/ahri/burp-report-to-elasticsearch", "Date": "2015-12-21T14:47:37Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Character.getNumericValue(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (digit != 0) { presetDigits.put(new java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>(j, i), digit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6474/buggy-version/sudoku-gui.src.nakomis.sudoku.gui.SudokuGui.java", "BodyUseAPI": ["java.util.Map<java.util.Map.Entry<java.lang.Integer, java.lang.Integer>, java.lang.Integer>.put(java.util.AbstractMap.SimpleEntry<java.lang.Integer, java.lang.Integer>,int)"], "Fixed commit": "81b810f88bdc561c58142378887948e41f9798f6", "Url": "https://api.github.com/repos/Nakomis/sudoku-solver", "Date": "2013-06-14T23:18:56Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((limit <= 0) || (counter < limit)) { title = networkDoc.field(NdexClasses.Network_P_name); if (title != null) { org.ndexbio.orientdb.migration.CXNetworkExporterV13.writeNdexAspectElementAsAspectFragment(cxwtr, new org.cxio.aspects.datamodels.NetworkAttributesElement(null, org.ndexbio.common.NdexClasses.Network_P_name, title)); } counter++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7571/buggy-version/src.main.java.org.ndexbio.orientdb.migration.CXNetworkExporterV13.java", "BodyUseAPI": [], "Fixed commit": "9ced39f075828449629c4a4e8d21a42718102942", "Url": "https://api.github.com/repos/ndexbio/ndex-common", "Date": "2016-12-07T03:40:45Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.l2fprod.common.swing.plaf.LookAndFeelAddons.getAddon()) == null) { com.l2fprod.common.swing.plaf.LookAndFeelAddons.setAddon(addons); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7347/buggy-version/violet-framework.src.main.java.com.horstmann.violet.framework.theme.AbstractTheme.java", "BodyUseAPI": [], "Fixed commit": "ea54354a5d3127a1933e3c938eb685376e855438", "Url": "https://api.github.com/repos/violetumleditor/violetumleditor", "Date": "2014-06-17T19:41:40Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getEntity()) instanceof org.bukkit.entity.Arrow) handleGrapplingHook(((org.bukkit.entity.Arrow) (e.getEntity())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5598/buggy-version/src.me.mrCookieSlime.Slimefun.listeners.BowListener.java", "BodyUseAPI": ["org.bukkit.event.entity.ProjectileHitEvent.getEntity()", "me.mrCookieSlime.Slimefun.listeners.BowListener.1.handleGrapplingHook(((org.bukkit.entity.Arrow) (e.getEntity())))"], "Fixed commit": "2830d0be74662d2f3137356a814db7c775b52aa5", "Url": "https://api.github.com/repos/TheBusyBiscuit/Slimefun4", "Date": "2016-04-14T22:37:23Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vijos.auth.lib.API.i().getLogin(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line > 1750) player.getInventory().addItem(new org.bukkit.inventory.ItemStack(46, 10));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7826/buggy-version/src.org.vijos.auth.thread.LoginThread.java", "BodyUseAPI": [], "Fixed commit": "6e2a75ebe626fca5f1e2b5caf16422237d3fd6bb", "Url": "https://api.github.com/repos/JacksonGariety/GeoPalz-Minecraft", "Date": "2013-05-03T18:52:47Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getConfig().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (p.isEmpty()) { graph2.addPlotter(new org.carlgo11.anti.p12a.Metrics.SimplePlotter(\"English\")); }else if (p.equalsIgnoreCase(\"EN\")) { graph2.addPlotter(new org.carlgo11.anti.p12a.Metrics.SimplePlotter(\"English\")); }else if (p.equalsIgnoreCase(\"FR\")) { graph2.addPlotter(new org.carlgo11.anti.p12a.Metrics.SimplePlotter(\"French\")); }else if (p.equalsIgnoreCase(\"FI\")) { graph2.addPlotter(new org.carlgo11.anti.p12a.Metrics.SimplePlotter(\"Finnish\")); }else if (p.equalsIgnoreCase(\"DE\")) { graph2.addPlotter(new org.carlgo11.anti.p12a.Metrics.SimplePlotter(\"German\")); }else if (p.equalsIgnoreCase(\"SV\")) { graph2.addPlotter(new org.carlgo11.anti.p12a.Metrics.SimplePlotter(\"Swedish\")); }else { graph2.addPlotter(new org.carlgo11.anti.p12a.Metrics.SimplePlotter(\"Other\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2814/buggy-version/src.main.java.org.carlgo11.anti.p12a.Main.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "1c9971eb533c647e8cb94d6ccefc5caf9a0df234", "Url": "https://api.github.com/repos/simpledevs/antip12a", "Date": "2013-11-03T00:35:11Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameters == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3507/buggy-version/src.main.java.de.elomagic.calunisync.db.dao.AbstractDAO.java", "BodyUseAPI": [], "Fixed commit": "72593c024fb99737bcedf7db4fd3fb020316f198", "Url": "https://api.github.com/repos/elomagic/cal-uni-sync", "Date": "2017-12-05T08:57:12Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myCalendar.get(java.util.Calendar.DAY_OF_WEEK)) == (dayOfWeek)) { dateInList.setText(dfDateWithMonthName.format(myCalendar.getTime())); setAptToListSingle(myCalendar.getTime()); }else { android.widget.Toast.makeText(this, \"Invalid day selected\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3601/buggy-version/src.ie.teamchile.smartapp.AppointmentCalendarActivity.java", "BodyUseAPI": ["java.text.DateFormat.format(java.util.Date)", "android.widget.Button.setText(java.lang.String)", "ie.teamchile.smartapp.AppointmentCalendarActivity.2.setAptToListSingle(java.util.Date)", "java.util.Calendar.getTime()", "java.util.Calendar.getTime()"], "Fixed commit": "e35d4e6554aa4348114de017416e5024ce8bd8f0", "Url": "https://api.github.com/repos/otormaigh/SMART", "Date": "2015-03-16T11:28:44Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((week) == (-1)) { dropdownWeeks.setSelection(0); }else { java.lang.String temp = weeks[week]; weeks[week] = temp + \" (current)\"; dropdownWeeks.setSelection(week); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/615/buggy-version/FHICT-companion.app.src.main.java.s.pahlplatz.fhict_companion.fragments.ScheduleFragment.java", "BodyUseAPI": [], "Fixed commit": "a8e2ba95e08d55033af5305d85c55fbffe89c577", "Url": "https://api.github.com/repos/StefanPahlplatz/fontys-companion-app", "Date": "2017-01-07T15:44:48Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level == null) { level = this.sailBase.getDefaultIsolationLevel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5908/buggy-version/core.sail.api.src.main.java.org.openrdf.sail.helpers.SailConnectionBase.java", "BodyUseAPI": [], "Fixed commit": "4e920ef25f674e9a77ec0ae196120593ccd013ba", "Url": "https://api.github.com/repos/ansell/openrdf-sesame", "Date": "2013-11-06T21:25:31Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.Equipmentname.equalsIgnoreCase(\"Mindray BC 5800\")) { while (((input = inFromEquipment.readLine()).length()) > 1) { read = ((read) + input) + \"\\r\"; } }else { while ((input = inFromEquipment.readLine()) != null) { read = ((read) + input) + \"\\r\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2730/buggy-version/src.TCPIP.ClientThread.java", "BodyUseAPI": [], "Fixed commit": "f961cfce1769d2e98790014edb47e3088b464a75", "Url": "https://api.github.com/repos/BaobabHealthTrust/BLISInterfaceClient", "Date": "2015-12-01T08:51:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (datasourceFactory.getConfig().isReadSlave()) { datasourceFactory.getMongoDatasource().setReadPreference(ReadPreference.SECONDARY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7175/buggy-version/src.main.java.github.macrohuang.orm.mongo.factory.DistributeMongoDBFactory.java", "BodyUseAPI": ["github.macrohuang.orm.mongo.factory.AbstractMongoDatasourceFactory.getMongoDatasource()", "datasourceFactory.getMongoDatasource().setReadPreference(ReadPreference.SECONDARY)"], "Fixed commit": "b040c39fa93b9fc6ab0a67692d8c493b1eb310a6", "Url": "https://api.github.com/repos/macrohuang/mongo-orm", "Date": "2012-05-31T03:47:34Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value > 0.0) { result.append((((\" \" + (i + 1)) + \":\") + (java.lang.Double.valueOf(recordList.get(i).toString())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6933/buggy-version/canova-api.src.main.java.org.canova.api.records.writer.impl.SVMLightRecordWriter.java", "BodyUseAPI": [], "Fixed commit": "d8f3548af82f98b926eb92f41ada629b7892fee1", "Url": "https://api.github.com/repos/EronWright/Canova", "Date": "2015-06-19T14:01:21Z"},
{"Line": "=>1918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentPosition()) <= (org.eclipse.cdt.internal.formatter.CodeFormatterVisitor.nodeOffset(declaration))) scribe.startNewLine();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2027/buggy-version/core.org.eclipse.cdt.core.src.org.eclipse.cdt.internal.formatter.CodeFormatterVisitor.java", "BodyUseAPI": [], "Fixed commit": "9d10668c5ef9fd41dfb454c35a7558629860b27f", "Url": "https://api.github.com/repos/wind-river-cdt/cdt", "Date": "2012-04-14T23:57:35Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rsNA.next()) == false) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8316/buggy-version/MySqlCon.java", "BodyUseAPI": [], "Fixed commit": "1d26ec8d64833e09420a47e6cb05f098dc6c9d64", "Url": "https://api.github.com/repos/pedrumj2/Net_Flow_Gen", "Date": "2017-02-11T18:17:27Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (author == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8593/buggy-version/src.main.java.com.pratilipi.data.util.AuthorDataUtil.java", "BodyUseAPI": [], "Fixed commit": "6436f69b2c7b15e6d2c9cb55ad64fd07fd9ee86a", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-07-08T07:05:35Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (response != null) { return response.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2058/buggy-version/gourmet.src.main.java.com.jugarte.gourmet.helpers.RequestURLConnection.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()"], "Fixed commit": "98b6adaacc3d7032013b5140fa24adee012e4175", "Url": "https://api.github.com/repos/GourmetApp/GourmetApp-android", "Date": "2015-09-26T11:03:33Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ex.getCause()) != null) { response.setMessage((((\"Error invoking operation - \" + (ex.getCause().getClass().getName())) + \":\") + (ex.getCause().getMessage()))); }else { response.setMessage((((\"Error invoking operation - \" + (ex.getClass().getName())) + \":\") + (ex.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6066/buggy-version/src.it.ismb.pert.dal.web.apis.rest.resources.OperationInvokeResource.java", "BodyUseAPI": ["java.lang.Throwable.getClass()", "java.lang.Throwable.getMessage()", "java.lang.Class<? extends java.lang.Throwable>.getName()", "java.lang.Class<? extends java.lang.Exception>.getName()", "it.ismb.pert.dal.web.apis.rest.pojos.InvokeResponse.setMessage(java.lang.String)", "java.lang.Exception.getCause()", "java.lang.Exception.getCause()", "java.lang.Exception.getClass()", "java.lang.Exception.getMessage()", "it.ismb.pert.dal.web.apis.rest.pojos.InvokeResponse.setMessage(java.lang.String)"], "Fixed commit": "7de96bb1a8bf4b23b59a33cc71e9584e5b8c8979", "Url": "https://api.github.com/repos/ismb/it.ismb.pert.osgi.dal.web-apis", "Date": "2014-11-11T17:04:50Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mc.getPlayer(args[1])) != null) { if (mc.getPlayer(args[1]).isOnline()) { mc.getPlayer(args[1]).sendMessage((((((((((((org.bukkit.ChatColor.GREEN) + name) + \" has bought \") + (args[3])) + \" of your \") + (args[2])) + \"(\") + cost) + \" \") + (economy.currencyNamePlural())) + \")\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3859/buggy-version/src.ramirez57.CLIShop.Main.java", "BodyUseAPI": ["mc.getPlayer(args[1]).sendMessage((((((((((((org.bukkit.ChatColor.GREEN) + name) + \" has bought \") + (args[3])) + \" of your \") + (args[2])) + \"(\") + cost) + \" \") + (economy.currencyNamePlural())) + \")\"))", "org.bukkit.Server.getPlayer(java.lang.String)", "org.bukkit.Server.getPlayer(java.lang.String)", "mc.getPlayer(args[1]).isOnline()"], "Fixed commit": "a5ab282cc116ef03cfb044dd15b762a5894549b5", "Url": "https://api.github.com/repos/Ramirez57/CLIShop", "Date": "2012-10-31T21:58:23Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((seq.length) == 0) { throw new java.lang.IllegalArgumentException(\"Sequence is empty array.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5323/buggy-version/src.main.java.edu.iis.mto.bsearch.BinarySearch.java", "BodyUseAPI": [], "Fixed commit": "8d052e15474f8d4d70edbb0b7330258b380f626f", "Url": "https://api.github.com/repos/wojteksz128/lab2_1", "Date": "2017-03-14T18:08:02Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMethod) == null) { mHolder = new sk.stuba.fiit.programmerproportion.models.MethodDataHolder(node); mMethod = node.getName().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4638/buggy-version/sk.stuba.fiit.ProgrammerProportion.src.sk.stuba.fiit.programmerproportion.handlers.MethodVisitor.java", "BodyUseAPI": [], "Fixed commit": "c2f39d68dded4b04c07533b9203d79e82b964f4d", "Url": "https://api.github.com/repos/feromakovi/perconik", "Date": "2013-11-22T03:01:07Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mMethod) != null) && (mMethod.equals(node.getName().toString()))) { mMethods.add(mHolder); mMethod = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4638/buggy-version/sk.stuba.fiit.ProgrammerProportion.src.sk.stuba.fiit.programmerproportion.handlers.MethodVisitor.java", "BodyUseAPI": [], "Fixed commit": "c2f39d68dded4b04c07533b9203d79e82b964f4d", "Url": "https://api.github.com/repos/feromakovi/perconik", "Date": "2013-11-22T03:01:07Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logDao.undo(user.getId())) > 0) no.mesan.websocket.LogUpdate.updateClients();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4811/buggy-version/src.main.java.no.mesan.service.LogService.java", "BodyUseAPI": [], "Fixed commit": "428a4f05b1bfdaa8c3ccb7b63d00706d9c5095fa", "Url": "https://api.github.com/repos/knutesten/frisk2-backend", "Date": "2016-08-18T15:33:29Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (who instanceof org.bukkit.command.ConsoleCommandSender) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4650/buggy-version/src.com.gmail.zariust.otherdrops.OtherDrops.java", "BodyUseAPI": [], "Fixed commit": "e8202d574977bf54ff69eadc8cc43c4c8c9b45ae", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2011-09-19T14:14:18Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((thread.getName()) != null) && (thread.getName().startsWith(\"PostgreSQL-JDBC-SharedTimer-\"))) { if (preventor.isClassLoaderOrChild(thread.getContextClassLoader())) { final java.lang.Class<?> postgresqlDriver = preventor.findClass(\"org.postgresql.Driver\"); final java.lang.ClassLoader postgresqlCL = ((postgresqlDriver != null) && (!(preventor.isLoadedByClassLoader(postgresqlDriver)))) ? postgresqlDriver.getClassLoader() : preventor.getLeakSafeClassLoader(); thread.setContextClassLoader(postgresqlCL); preventor.warn((((\"Changing contextClassLoader of \" + thread) + \" to \") + postgresqlCL)); } final java.lang.reflect.Field inheritedAccessControlContext = preventor.findField(java.lang.Thread.class, \"inheritedAccessControlContext\"); if (inheritedAccessControlContext != null) { try { final java.security.AccessControlContext acc = preventor.createAccessControlContext(); inheritedAccessControlContext.set(thread, acc); preventor.removeDomainCombiner(thread, acc); } catch (java.lang.Exception e) { preventor.error(e); } } }else if (stopTimerThreads) { preventor.warn(((\"Stopping Timer thread '\" + (thread.getName())) + \"' running in classloader.\")); stopTimerThread(preventor, thread); }else { preventor.info(\"Timer thread is running in classloader, but will not be stopped\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/653/buggy-version/classloader-leak-prevention.classloader-leak-prevention-core.src.main.java.se.jiderhamn.classloader.leak.prevention.cleanup.StopThreadsCleanUp.java", "BodyUseAPI": ["java.lang.Thread.getContextClassLoader()", "se.jiderhamn.classloader.leak.prevention.ClassLoaderLeakPreventor.warn(java.lang.String)", "java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)", "se.jiderhamn.classloader.leak.prevention.ClassLoaderLeakPreventor.isClassLoaderOrChild(java.lang.ClassLoader)", "java.lang.reflect.Field.set(java.lang.Thread,java.security.AccessControlContext)", "java.lang.Thread.getName()", "se.jiderhamn.classloader.leak.prevention.cleanup.StopThreadsCleanUp.stopTimerThread(se.jiderhamn.classloader.leak.prevention.ClassLoaderLeakPreventor,java.lang.Thread)", "se.jiderhamn.classloader.leak.prevention.ClassLoaderLeakPreventor.removeDomainCombiner(java.lang.Thread,java.security.AccessControlContext)", "se.jiderhamn.classloader.leak.prevention.ClassLoaderLeakPreventor.warn(java.lang.String)"], "Fixed commit": "db3fc43f5138e4803cce66a6faf8a8848648dd93", "Url": "https://api.github.com/repos/mjiderhamn/classloader-leak-prevention", "Date": "2016-10-12T19:11:33Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.brokeassgeeks.snackbot.listeners.DiscordBouncer.getMirror(event.getTextChannel().getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (mirror != null) { if (com.brokeassgeeks.snackbot.SnackBot.getBot().getUserChannelDao().containsChannel(mirror)) { com.brokeassgeeks.snackbot.SnackBot.getBot().getUserChannelDao().getChannel(mirror).send().message((((\"<\" + (event.getAuthorName())) + \"> \") + (event.getMessage().getContent()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/513/buggy-version/src.main.java.com.brokeassgeeks.snackbot.SnackbotDiscord.java", "BodyUseAPI": ["com.brokeassgeeks.snackbot.SnackBot.getBot().getUserChannelDao().getChannel(java.lang.String)", "com.brokeassgeeks.snackbot.SnackBot.getBot().getUserChannelDao().containsChannel(java.lang.String)", "com.brokeassgeeks.snackbot.SnackBot.getBot().getUserChannelDao().getChannel(mirror).send()", "com.brokeassgeeks.snackbot.SnackBot.getBot().getUserChannelDao().getChannel(mirror).send().message((((\"<\" + (event.getAuthorName())) + \"> \") + (event.getMessage().getContent())))"], "Fixed commit": "a7a23df1a93c7cdc3d1c66536b53be2cf7fed2fc", "Url": "https://api.github.com/repos/Lunchington/SnackBot", "Date": "2016-11-30T04:26:14Z"},
{"Line": "=>1040", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dAST.T.equals(StdEnvironment.floatType)) { emitFLOAD(dAST.index); }else if (dAST.T.equals(StdEnvironment.intType)) { emitILOAD(dAST.index); }else emitBLOAD(dAST.index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5136/buggy-version/ass5.VC.CodeGen.Emitter.java", "BodyUseAPI": ["VC.CodeGen.Emitter.emitILOAD(dAST.index)", "dAST.T.equals(StdEnvironment.intType)", "VC.CodeGen.Emitter.emitFLOAD(dAST.index)", "VC.CodeGen.Emitter.emitBLOAD(dAST.index)"], "Fixed commit": "2626e4224b013ab1341fb2553f32ffae123a1cfc", "Url": "https://api.github.com/repos/AndrewWUw/vc", "Date": "2014-06-09T01:02:55Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tAST1.equals(StdEnvironment.floatType)) { emit(JVM.FALOAD); }else if (tAST1.equals(StdEnvironment.intType)) { emit(JVM.IALOAD); }else emit(JVM.BALOAD);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5136/buggy-version/ass5.VC.CodeGen.Emitter.java", "BodyUseAPI": ["VC.CodeGen.Type.equals(StdEnvironment.intType)"], "Fixed commit": "2626e4224b013ab1341fb2553f32ffae123a1cfc", "Url": "https://api.github.com/repos/AndrewWUw/vc", "Date": "2014-06-09T01:02:55Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemStack.stackTagCompound) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6365/buggy-version/src.main.java.mooklabs.laputamod.items.VoluciteNecklace.java", "BodyUseAPI": [], "Fixed commit": "8c32c2a26174ea0c33eaf8e460032fa9a9b7489e", "Url": "https://api.github.com/repos/mookie1097/NausicaaMod", "Date": "2014-06-02T18:22:50Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((videoOverlay) != null) videoOverlay.onResume();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8126/buggy-version/src.android.BackgroundVideo.java", "BodyUseAPI": [], "Fixed commit": "ddfac3956726a8caa6a9c70a51752fbf15433759", "Url": "https://api.github.com/repos/dairejpwalsh/backgroundvideo", "Date": "2015-08-26T14:16:45Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mGoogleApiClient) == null) { mGoogleApiClient = new com.google.android.gms.common.api.GoogleApiClient.Builder(this).enableAutoManage(this, this).addApi(Auth.GOOGLE_SIGN_IN_API, gso).build(); mGoogleApiClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6241/buggy-version/app.src.main.java.com.example.brianduffy.masevo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e3af0ef0155894f213ba435299fb699d17051a2b", "Url": "https://api.github.com/repos/Team9CS307/Masevo", "Date": "2017-09-24T00:46:42Z"},
{"Line": "=>816", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((slug.length) == 1) { com.door43.translationstudio.core.FrameTranslation f = getFrameTranslation(chapterSlug, slug[0], frameTranslationformat); if (f != null) { frameTranslations.add(f); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/326/buggy-version/app.src.main.java.com.door43.translationstudio.core.TargetTranslation.java", "BodyUseAPI": ["com.door43.translationstudio.core.TargetTranslation.getFrameTranslation(java.lang.String,java.lang.String,com.door43.translationstudio.core.TranslationFormat)"], "Fixed commit": "36e37abe68b10bab2d4f7486108e7387b9fb53ee", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2015-10-28T04:48:49Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_entriesToKeep) != null) copy.retainAll(m_entriesToKeep);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2325/buggy-version/org.knime.knip.io.src.org.knime.knip.io.nodes.annotation.edit.control.LabelingEditorChangeTracker.java", "BodyUseAPI": [], "Fixed commit": "17e0ec4460fde5eebe3e355056f5195f3a71bf27", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2014-12-02T12:01:46Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lucIndex) != null) lucIndex.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4094/buggy-version/encontra-rest-core.src.main.java.pt.inevo.encontra.rest.engines.ClutchThreedEngine.java", "BodyUseAPI": [], "Fixed commit": "9c000e98dad935a79832e4f6441b7da9a735f968", "Url": "https://api.github.com/repos/encontra/encontra-rest", "Date": "2015-02-06T18:13:06Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getInt(receivePacket)) < blockNum) { sendaPacket(ack, receivePacket.getPort(), socket, sender); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6367/buggy-version/src.FileTransferClient.java", "BodyUseAPI": ["FileTransferClient.sendaPacket(byte[],receivePacket.getPort(),java.net.DatagramSocket,java.lang.String)", "FileTransferClient.getPort()"], "Fixed commit": "bae6b26b5b7c469a608dca0ad6b63a5f273146c5", "Url": "https://api.github.com/repos/DanGravel/TFTP", "Date": "2016-11-21T01:22:34Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempBlockNum < blockNum) { sendaPacket(ack, lastPort, sendAndReceiveSocket, \"Server\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6367/buggy-version/src.FileTransferServer.java", "BodyUseAPI": [], "Fixed commit": "bae6b26b5b7c469a608dca0ad6b63a5f273146c5", "Url": "https://api.github.com/repos/DanGravel/TFTP", "Date": "2016-11-21T01:22:34Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (AN.isEmpty()) AN.add(0.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/385/buggy-version/Renderer.src.main.java.armyc2.c2sd.JavaRendererServer.RenderMultipoints.clsRenderer.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Double>.add(double)"], "Fixed commit": "c8a2c637172a2f77362b6460201fb96ae7ea0f4b", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2016-08-01T21:00:41Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["armyc2.c2sd.renderer.utilities.MilStdSymbol.getModifiers_AM_AN_X(ModifiersTG.AN_AZIMUTH)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (AN == null) AN = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/385/buggy-version/Renderer.src.main.java.armyc2.c2sd.JavaRendererServer.RenderMultipoints.clsRenderer.java", "BodyUseAPI": [], "Fixed commit": "c8a2c637172a2f77362b6460201fb96ae7ea0f4b", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2016-08-01T21:00:41Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(activeNodes.contains(clickedNode))) { activeNodes.add(clickedNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8452/buggy-version/src.com.generalbioinformatics.cy3.internal.MarrsNodeViewContextMenuFactory.java", "BodyUseAPI": ["java.util.List<org.cytoscape.model.CyNode>.add(org.cytoscape.model.CyNode)"], "Fixed commit": "7d06526af17cd1aacb83a433d89f7f727e751619", "Url": "https://api.github.com/repos/generalbioinformatics/general-sparql-cy3", "Date": "2015-03-19T09:45:34Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.easyinnova.tiff.io.TiffOutputStream.position()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentPosition % 2) != 0) currentPosition++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4343/buggy-version/src.main.java.com.easyinnova.tiff.writer.TiffWriter.java", "BodyUseAPI": [], "Fixed commit": "863451a703dc1cab72d1211b17f68438f83fb30d", "Url": "https://api.github.com/repos/EasyinnovaSL/Tiff-Library-4J", "Date": "2016-01-12T13:21:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) > 0) { setProgress(((int) (java.lang.Math.ceil((10 / (mapofdenmark.model.ZoomLevel.values().length)))))); (count)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6111/buggy-version/src.mapofdenmark.MapOfDenmark.java", "BodyUseAPI": [], "Fixed commit": "b77c4d9bfe47df2064e017d33fd31ff3d5df8eaf", "Url": "https://api.github.com/repos/mapmen/mapofdenmark", "Date": "2012-05-20T09:17:05Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) > 0) { setProgress(((int) (java.lang.Math.ceil((80 / (mapofdenmark.model.ZoomLevel.values().length)))))); (count)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6111/buggy-version/src.mapofdenmark.MapOfDenmark.java", "BodyUseAPI": [], "Fixed commit": "b77c4d9bfe47df2064e017d33fd31ff3d5df8eaf", "Url": "https://api.github.com/repos/mapmen/mapofdenmark", "Date": "2012-05-20T09:17:05Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isLocal(f)) || ((f.getHost()) == null)) { return f.getPath(); }else { return ((f.getHost()) + \"/\") + (f.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4661/buggy-version/src.org.griphyn.vdl.karajan.FileNameExpander.java", "BodyUseAPI": ["org.griphyn.vdl.mapping.AbsFile.getPath()", "org.griphyn.vdl.mapping.AbsFile.getHost()", "org.griphyn.vdl.mapping.AbsFile.getPath()"], "Fixed commit": "2e8eaa80c34e49ad512079d346676b2b05a62368", "Url": "https://api.github.com/repos/swift-lang/swift-k", "Date": "2014-11-09T21:29:21Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((slideStyle == (com.slidingmenu.lib.SlidingMenu.SLIDING_WINDOW)) && ((Build.VERSION.SDK_INT) >= 21)) { setSystemUiVisibility(com.slidingmenu.lib.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2790/buggy-version/android.src.com.slidingmenu.lib.SlidingMenu.java", "BodyUseAPI": [], "Fixed commit": "0cb1f9700bb023b11f2caf4cf0e737711253d27d", "Url": "https://api.github.com/repos/fahad86/NappDrawer", "Date": "2017-06-28T11:08:18Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.getMessage().contains(\"unique\"))) { com.helen.database.Pages.logger.error(\"There was an exception attempting to grab the series page metadata\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9138/buggy-version/src.com.helen.database.Pages.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(java.lang.String,java.lang.Exception)"], "Fixed commit": "c21e0c51c4dd1d0d56be35987efd06058e097087", "Url": "https://api.github.com/repos/CCastellano/HelenBot", "Date": "2017-04-28T00:51:17Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.getMessage().contains(\"unique\"))) { com.helen.database.Pages.logger.error(\"Couldn't insert page name\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9138/buggy-version/src.com.helen.database.Pages.java", "BodyUseAPI": ["org.apache.log4j.Logger.error(java.lang.String,java.lang.Exception)"], "Fixed commit": "c21e0c51c4dd1d0d56be35987efd06058e097087", "Url": "https://api.github.com/repos/CCastellano/HelenBot", "Date": "2017-04-28T00:51:17Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (mProgressDialog)) && (mProgressDialog.isShowing())) { mProgressDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/141/buggy-version/src.com.plmt.boommall.ui.activity.ShopCartActivity.java", "BodyUseAPI": ["com.plmt.boommall.ui.view.CustomProgressDialog.dismiss()"], "Fixed commit": "647061857fba617e7a5d424f4211ba4dffe6272f", "Url": "https://api.github.com/repos/xiguofeng/BoomMall", "Date": "2015-10-16T03:12:51Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (dialog)) { dialog.show(); if (builder.autoDismiss) { new android.os.CountDownTimer(com.PATHoningmeng.view.dialog.TipDialog.TIME_COUNT, 500) { @java.lang.Override public void onTick(long millisUntilFinished) { } @java.lang.Override public void onFinish() { dialog.dismiss(); } }.start(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9064/buggy-version/lemon.lemon.src.main.java.com.PATHoningmeng.view.dialog.TipDialog.java", "BodyUseAPI": [], "Fixed commit": "d36e444b643ba5f2b927c854f2654c84c4f20072", "Url": "https://api.github.com/repos/lemonstory/android", "Date": "2016-11-28T11:20:23Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (dialog)) { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9064/buggy-version/lemon.lemon.src.main.java.com.PATHoningmeng.view.dialog.TipDialog.java", "BodyUseAPI": [], "Fixed commit": "d36e444b643ba5f2b927c854f2654c84c4f20072", "Url": "https://api.github.com/repos/lemonstory/android", "Date": "2016-11-28T11:20:23Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getAllPermissionForApp()) { validateLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5085/buggy-version/app.src.main.java.com.globalfriends.com.aroundme.ui.Launcher.java", "BodyUseAPI": [], "Fixed commit": "2f28ba230dde9ce5df01a69a9945b25118f67373", "Url": "https://api.github.com/repos/GlobalFriends/AroundMe", "Date": "2016-01-27T06:38:30Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shootCooldown) > 0) (shootCooldown)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4731/buggy-version/SpaghettiWars.src.entities.Player.java", "BodyUseAPI": [], "Fixed commit": "05f65528dd42a1499ca4859a5cbd2f5dc2d48a43", "Url": "https://api.github.com/repos/Xiaoming94/epicFoodWarGameProject", "Date": "2014-05-12T09:51:45Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (currentFach == ((ANZFAECHER) - 1)) { tmp.moveCard(randomKarte.getIndex(), box.get(currentFach)); }else { java.lang.System.out.println(((\"Falsch! Karte in Fach\" + (currentFach + 2)) + \" verschoben!\")); tmp.moveCard(randomKarte.getIndex(), box.get((currentFach + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1526/buggy-version/Box.java", "BodyUseAPI": ["java.util.ArrayList<Stapel>.get(int)", "java.util.ArrayList<Stapel>.get(int)", "java.io.PrintStream.println(java.lang.String)", "Stapel.moveCard(randomKarte.getIndex(),box.get((currentFach + 1)))", "Stapel.moveCard(randomKarte.getIndex(),box.get(currentFach))"], "Fixed commit": "022de15a93011e4683626f845f559817b5f1ca8e", "Url": "https://api.github.com/repos/nireinhard/Lernkartei", "Date": "2017-05-20T10:15:12Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.isClinicalDataRequest()) { labRequest.setClinicalDataSent(body.isClinicalDataSent()); log.debug((\"Updating PA clinical data sent: \" + (labRequest.IsClinicalDataSent()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1618/buggy-version/src.main.java.business.controllers.LabRequestController.java", "BodyUseAPI": [], "Fixed commit": "32157028cd69888952d3cd3000beb54f27a05471", "Url": "https://api.github.com/repos/thehyve/dntp-portal", "Date": "2016-06-10T11:31:29Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (request.isPaReportRequest()) { labRequest.setPaReportsSent(body.isPaReportsSent()); log.debug((\"Updating PA reports sent: \" + (labRequest.isPaReportsSent()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1618/buggy-version/src.main.java.business.controllers.LabRequestController.java", "BodyUseAPI": [], "Fixed commit": "32157028cd69888952d3cd3000beb54f27a05471", "Url": "https://api.github.com/repos/thehyve/dntp-portal", "Date": "2016-06-10T11:31:29Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getType()) == (de.tudresden.inf.rn.mobilis.xmpp.beans.XMPPBean.TYPE_ERROR)) { if ((this.newServiceJID) != null) { sb.append(((\"<\" + (_xmlTag_ServiceJID)) + \">\")).append(this.newServiceJID).append(((\"</\" + (_xmlTag_ServiceJID)) + \">\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6719/buggy-version/MobilisXMPP.src.de.tudresden.inf.rn.mobilis.xmpp.beans.runtimeprotocol.PublishNewServiceBean.java", "BodyUseAPI": [], "Fixed commit": "0a3d80fdebbb1b9799a8a98a11033572f6457b27", "Url": "https://api.github.com/repos/philippgrubitzsch/mobilis", "Date": "2013-07-05T20:11:48Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasLord) { if (winner == (-1)) { winner = p.getID(); }else { winner = -2; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1355/buggy-version/src.net.fe.overworldStage.objective.Seize.java", "BodyUseAPI": [], "Fixed commit": "fee097cd2eef7ae81163c3498c46602247027f4a", "Url": "https://api.github.com/repos/chudooder/FEMultiplayer", "Date": "2014-02-01T02:28:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getAlias()) == null) { textRenderer.drawTextMultiLine(ctx, node.getAccession(), org.reactome.web.diagram.data.layout.impl.NodePropertiesFactory.get(box)); }else if (java.util.Objects.equals(node.getAlias(), node.getAccession())) { textRenderer.drawTextMultiLine(ctx, node.getAlias(), org.reactome.web.diagram.data.layout.impl.NodePropertiesFactory.get(box)); }else { java.util.List<org.reactome.web.diagram.data.interactors.common.InteractorBox> vBoxes = box.splitVertically(((box.getHeight()) * 0.6)); textRenderer.drawTextMultiLine(ctx, node.getAlias(), org.reactome.web.diagram.data.layout.impl.NodePropertiesFactory.get(vBoxes.get(0))); textRenderer.drawTextMultiLine(ctx, node.getAccession(), org.reactome.web.diagram.data.layout.impl.NodePropertiesFactory.get(vBoxes.get(1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6371/buggy-version/src.main.java.org.reactome.web.diagram.renderers.interactor.s300.InteractorEntityRenderer300.java", "BodyUseAPI": ["org.reactome.web.diagram.renderers.layout.abs.TextRenderer.drawTextMultiLine(org.reactome.web.diagram.util.AdvancedContext2d,node.getAlias(),org.reactome.web.diagram.data.layout.impl.NodePropertiesFactory.get(box))", "org.reactome.web.diagram.data.interactors.model.InteractorEntity.getAccession()", "org.reactome.web.diagram.data.interactors.model.InteractorEntity.getAlias()", "org.reactome.web.diagram.data.interactors.model.InteractorEntity.getAccession()", "org.reactome.web.diagram.renderers.layout.abs.TextRenderer.drawTextMultiLine(org.reactome.web.diagram.util.AdvancedContext2d,node.getAccession(),org.reactome.web.diagram.data.layout.impl.NodePropertiesFactory.get(box))", "org.reactome.web.diagram.renderers.layout.abs.TextRenderer.drawTextMultiLine(org.reactome.web.diagram.util.AdvancedContext2d,node.getAlias(),org.reactome.web.diagram.data.layout.impl.NodePropertiesFactory.get(vBoxes.get(0)))", "org.reactome.web.diagram.data.interactors.model.InteractorEntity.getAccession()", "java.util.Objects.equals(node.getAlias(),node.getAccession())", "org.reactome.web.diagram.data.interactors.model.InteractorEntity.getAlias()", "org.reactome.web.diagram.renderers.layout.abs.TextRenderer.drawTextMultiLine(org.reactome.web.diagram.util.AdvancedContext2d,node.getAccession(),org.reactome.web.diagram.data.layout.impl.NodePropertiesFactory.get(vBoxes.get(1)))", "org.reactome.web.diagram.data.interactors.model.InteractorEntity.getAlias()"], "Fixed commit": "396ef0627f535f87f6e93aa7cbffeb87e6f85d43", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-02-06T12:10:18Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sample_points.size()) == (coefficients.size())) N = sample_points.size(); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4580/buggy-version/src.fourier.fitting.FourierTransform.java", "BodyUseAPI": ["java.util.ArrayList<fourier.fitting.Complex>.size()"], "Fixed commit": "6622df19652af8834ef6d8ea4f8f6cc4ea2e6d78", "Url": "https://api.github.com/repos/zvant/FourierTransformFit", "Date": "2015-05-08T05:36:06Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.measures.MetricFinder.findById(((int) (condition.getMetricId())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (metric == null) { throw new java.lang.IllegalStateException((\"Could not find metric with id \" + (condition.getMetricId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5978/buggy-version/sonar-server.src.main.java.org.sonar.server.qualitygate.QualityGates.java", "BodyUseAPI": [], "Fixed commit": "49bd8b18dd124c5a5de70249d949d989bcd0f6e6", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-07-02T07:39:03Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isBlank(fsUserName)) || (org.apache.commons.lang.StringUtils.isBlank(fsPassword.getPlainText()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/259/buggy-version/src.main.java.com.hp.application.automation.tools.model.RunFromFileSystemModel.java", "BodyUseAPI": [], "Fixed commit": "552677f2f30810bdb14213e59c2f21016c7495ef", "Url": "https://api.github.com/repos/YafimK/hp-application-automation-tools-plugin", "Date": "2016-05-19T11:06:47Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelhunt.passkeeper.database.DatabaseHandler.getAllDataPasses()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mobileList.isEmpty()) && (!(cloudList.isEmpty()))) { db.addDataPass(cloudList.get(0)); mobileList.add(cloudList.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2179/buggy-version/app.src.main.java.com.hazelhunt.passkeeper.passlist.PassListActivity.java", "BodyUseAPI": ["java.util.List<com.hazelhunt.passkeeper.database.PKDataModel>.add(cloudList.get(0))", "java.util.List<com.hazelhunt.passkeeper.database.PKDataModel>.get(int)", "com.hazelhunt.passkeeper.database.DatabaseHandler.addDataPass(cloudList.get(0))", "java.util.List<com.hazelhunt.passkeeper.database.PKDataModel>.get(int)"], "Fixed commit": "82a1172ab96ac07739b4762d33f18dfd455a93f0", "Url": "https://api.github.com/repos/Ninise/PassKeeper", "Date": "2016-01-20T12:26:07Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((request != null) && (request.startsWith(\"\\\"\"))) && (request.endsWith(\"\\\"\"))) { request = request.substring(1, ((request.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9180/buggy-version/server.src.main.java.org.jboss.perspicuus.rest.TagRegistryResource.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "d0026c22835ffcc0a20382eb1fdb7ad06c707117", "Url": "https://api.github.com/repos/jhalliday/perspicuus", "Date": "2017-11-14T10:47:06Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resumed) { done(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2608/buggy-version/plugins.org.eclipse.tcf.cdt.ui.src.org.eclipse.tcf.internal.cdt.ui.TCFBreakpointActions.java", "BodyUseAPI": [], "Fixed commit": "5ed82fbadd0ab8b8902d7003f63f59c5a7b149d8", "Url": "https://api.github.com/repos/eclipse/tcf", "Date": "2015-05-05T14:38:59Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type.equals(\"action\")) || (type.equals(\"other\"))) { if (first) { first = false; }else { out.write(\", \"); } out.write((((\"'\" + (API.API_KEY_PARAM)) + \"' => $\") + (API.API_KEY_PARAM))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6983/buggy-version/src.org.zaproxy.zap.extensions.api.PhpAPIGenerator.java", "BodyUseAPI": [], "Fixed commit": "f2d14b104b798d302e2fef0b5d906632bfca2d55", "Url": "https://api.github.com/repos/yukisov/php-api-generator-for-owasp-zap", "Date": "2014-07-02T17:09:11Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.solovyev.android.calculator.EditorState.getTextString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.solovyev.android.calculator.math.MathType.getType(text, (selection - 1), false, engine).type) == (org.solovyev.android.calculator.math.MathType.grouping_separator)) { removeStart -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3233/buggy-version/app.src.main.java.org.solovyev.android.calculator.Editor.java", "BodyUseAPI": [], "Fixed commit": "58e10885242fc66739ef65bec9e0ed3e3c2c41ef", "Url": "https://api.github.com/repos/serso/android-calculatorpp", "Date": "2016-03-04T22:09:26Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.Geocoder.getFromLocationName(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (addresses.isEmpty()) { org.holoeverywhere.widget.Toast.makeText(context, \"Nie znaleziono adresu\", Toast.LENGTH_SHORT).show(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/783/buggy-version/src.main.java.com.zeyomir.ocfun.controller.AddCaches.java", "BodyUseAPI": [], "Fixed commit": "b816070b63392bd347ba4b8010d87c7693478590", "Url": "https://api.github.com/repos/zeyomir/OpenCachingFun", "Date": "2013-06-05T17:27:51Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((con) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4369/buggy-version/src.scholz.Connector.java", "BodyUseAPI": [], "Fixed commit": "0ed4947c2f06b7852140cfed0c2102a6497933c5", "Url": "https://api.github.com/repos/dscholz-tgm/JDBCue1", "Date": "2013-11-17T19:06:30Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(context.getEffectiveUser().hasDbaRole())) { throw new org.exist.xquery.XPathException(\"You must be a DBA to retrieve a backup\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5179/buggy-version/src.org.exist.backup.xquery.RetrieveBackup.java", "BodyUseAPI": [], "Fixed commit": "295527844076af536e797475b715d3fa59f4a4e4", "Url": "https://api.github.com/repos/ljo/exist", "Date": "2014-03-19T21:06:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(context.getEffectiveUser().hasDbaRole())) { throw new org.exist.xquery.XPathException(\"You must be a DBA to list available backups\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5179/buggy-version/src.org.exist.backup.xquery.ListBackups.java", "BodyUseAPI": [], "Fixed commit": "295527844076af536e797475b715d3fa59f4a4e4", "Url": "https://api.github.com/repos/ljo/exist", "Date": "2014-03-19T21:06:13Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user_url.endsWith(\"/\")) { user_url = user_url.substring(0, ((user_url.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3160/buggy-version/Entry_URLDiscovery.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "e58b6fcdcc60f0ba2709ef6332501eb57ab31a3b", "Url": "https://api.github.com/repos/rakeshmane/FOCUS", "Date": "2017-03-21T14:05:28Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(deflater.needsInput())) { deflateData(); if (!(deflater.needsInput())) { return 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1385/buggy-version/core.src.main.java.io.undertow.conduits.DeflatingStreamSinkConduit.java", "BodyUseAPI": ["java.util.zip.Deflater.needsInput()"], "Fixed commit": "9137432bfce46e9b548e21352e396f31360dfd62", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2014-04-28T18:21:39Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (evs.get(i).getName().equals(\"Add New\")) { intent = new android.content.Intent(context, io.alstonlin.wildhacksproject.AddEventsActivity.class); }else { intent = new android.content.Intent(context, io.alstonlin.wildhacksproject.AppActivity.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/350/buggy-version/app.src.main.java.io.alstonlin.wildhacksproject.EventList.java", "BodyUseAPI": [], "Fixed commit": "0bff070b1db49b488dc7325cc47952f252143f49", "Url": "https://api.github.com/repos/AlstonLin/PolarFeed", "Date": "2015-11-22T11:51:20Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ve.getLocator().getNode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (node != null) { if (org.docx4j.jaxb.JaxbValidationEventHandler.MICROSOFT_DRAWING_EXTENSION_NS.equals(node.getNamespaceURI())) { shouldContinueLocal = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1708/buggy-version/src.main.java.org.docx4j.jaxb.JaxbValidationEventHandler.java", "BodyUseAPI": ["org.w3c.dom.Node.getNamespaceURI()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "dcd256a1c0ae07663cd033e556744ee6cf0393a8", "Url": "https://api.github.com/repos/BSI-Business-Systems-Integration-AG/docx4j", "Date": "2013-08-22T12:54:46Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utilities.Message.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o instanceof utilities.Notice) { utilities.Notice n = ((utilities.Notice) (o)); map = new java.util.HashMap<>(); map.put(\"type\", n.getType().toString()); map.put(\"caption\", n.getCaption()); map.put(\"text\", n.getText()); }else { map = ((java.util.Map<java.lang.String, java.lang.Object>) (o)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2969/buggy-version/src.utilities.MessageLogger.java", "BodyUseAPI": [], "Fixed commit": "b5929514c7d4815b6c4ed4ca5d79c03ec02ab381", "Url": "https://api.github.com/repos/papparazzo/moba-server", "Date": "2016-07-04T10:50:10Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pltPathsFromPrefs) != null) { for (final java.lang.String path : pltPathsFromPrefs) { paths.remove(path); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6699/buggy-version/org.erlide.core.src.org.erlide.core.builder.DialyzerPreferences.java", "BodyUseAPI": [], "Fixed commit": "7c385a279c5122296dded0d93f96d4fccb7c1192", "Url": "https://api.github.com/repos/jakobc/erlide", "Date": "2011-02-24T16:53:27Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((noCheckPLTCheckbox) != null) { noCheckPLTCheckbox.setSelection(prefs.getNoCheckPLT()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6699/buggy-version/org.erlide.ui.src.org.erlide.ui.prefs.DialyzerPreferencePage.java", "BodyUseAPI": [], "Fixed commit": "7c385a279c5122296dded0d93f96d4fccb7c1192", "Url": "https://api.github.com/repos/jakobc/erlide", "Date": "2011-02-24T16:53:27Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComponent.getSelectionPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (path != null) { final java.lang.Object pathComponent = path.getLastPathComponent(); if (pathComponent instanceof javax.swing.tree.DefaultMutableTreeNode) { final javax.swing.tree.DefaultMutableTreeNode node = ((javax.swing.tree.DefaultMutableTreeNode) (pathComponent)); final java.lang.Object userObject = node.getUserObject(); return userObject; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4033/buggy-version/desktop.ui.src.main.java.org.datacleaner.util.DragDropUtils.java", "BodyUseAPI": ["javax.swing.tree.TreePath.getLastPathComponent()"], "Fixed commit": "2e57f648c7d38d1f27145561225e0c0cce9ab017", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-10-12T11:51:26Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errors) == null) errors = new java.util.ArrayList<com.senseidb.search.req.SenseiError>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/47/buggy-version/sensei-core.src.main.java.com.senseidb.search.req.SenseiRequest.java", "BodyUseAPI": [], "Fixed commit": "58b4e1dd26c422b7a85198c245d28429d01bfe1e", "Url": "https://api.github.com/repos/wonlay/sensei", "Date": "2012-06-26T00:46:50Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errors) == null) errors = new java.util.ArrayList<com.senseidb.search.req.SenseiError>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/47/buggy-version/sensei-core.src.main.java.com.senseidb.search.req.SenseiResult.java", "BodyUseAPI": [], "Fixed commit": "58b4e1dd26c422b7a85198c245d28429d01bfe1e", "Url": "https://api.github.com/repos/wonlay/sensei", "Date": "2012-06-26T00:46:50Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj instanceof org.mozilla.javascript.ConsString) { return obj.toString(); }else if (obj instanceof org.mozilla.javascript.NativeArray) { org.mozilla.javascript.NativeArray nativeArr = ((org.mozilla.javascript.NativeArray) (obj)); int length = ((int) (nativeArr.getLength())); org.rapidcontext.core.data.Array arr = new org.rapidcontext.core.data.Array(length); for (int i = 0; i < length; i++) { arr.set(i, org.rapidcontext.core.js.JsSerializer.unwrap(nativeArr.get(i, nativeArr))); } return arr; }else if (obj instanceof org.mozilla.javascript.Scriptable) { org.mozilla.javascript.Scriptable scr = ((org.mozilla.javascript.Scriptable) (obj)); java.lang.Object[] keys = scr.getIds(); org.rapidcontext.core.data.Dict dict = new org.rapidcontext.core.data.Dict(keys.length); for (int i = 0; i < (keys.length); i++) { java.lang.String str = keys[i].toString(); java.lang.Object value = null; if ((keys[i]) instanceof java.lang.Integer) { value = scr.get(((java.lang.Integer) (keys[i])).intValue(), scr); }else { value = scr.get(str, scr); } dict.set(str, org.rapidcontext.core.js.JsSerializer.unwrap(value)); } return dict; }else if (obj instanceof org.rapidcontext.core.data.Array) { org.rapidcontext.core.data.Array oldArr = ((org.rapidcontext.core.data.Array) (obj)); org.rapidcontext.core.data.Array newArr = new org.rapidcontext.core.data.Array(oldArr.size()); for (int i = 0; i < (oldArr.size()); i++) { newArr.set(i, org.rapidcontext.core.js.JsSerializer.unwrap(oldArr.get(i))); } return newArr; }else if (obj instanceof org.rapidcontext.core.data.Dict) { org.rapidcontext.core.data.Dict oldDict = ((org.rapidcontext.core.data.Dict) (obj)); org.rapidcontext.core.data.Dict newDict = new org.rapidcontext.core.data.Dict(oldDict.size()); java.lang.String[] keys = oldDict.keys(); for (int i = 0; i < (keys.length); i++) { java.lang.String key = keys[i].toString(); newDict.set(key, org.rapidcontext.core.js.JsSerializer.unwrap(oldDict.get(key))); } return newDict; }else { return obj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1556/buggy-version/src.java.org.rapidcontext.core.js.JsSerializer.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "13863f79d870f209d6bd2b2d7793d73527f6512f", "Url": "https://api.github.com/repos/cederberg/rapidcontext", "Date": "2017-02-08T10:37:19Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WireFormat.Reader.readVarInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nout > 0) { for (com.bitsofproof.supernode.model.TxOut out : outputs) { out.setTxHash(hash); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2163/buggy-version/src.main.java.com.bitsofproof.supernode.model.Tx.java", "BodyUseAPI": [], "Fixed commit": "58ce404e831085d61e7b49d63523a63d077d49b8", "Url": "https://api.github.com/repos/bitsofproof/supernode", "Date": "2012-12-24T20:57:09Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thomasthiebaud.quiet.services.CallReceiver.2.readPhoneFromDatabase(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (content != null) createIncomingCallNotification(content);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4601/buggy-version/app.src.main.java.com.thomasthiebaud.quiet.services.CallReceiver.java", "BodyUseAPI": ["com.thomasthiebaud.quiet.services.CallReceiver.2.createIncomingCallNotification(com.thomasthiebaud.quiet.model.Content)"], "Fixed commit": "8dab4eb0e31aa1cbbef5da19055489b5f040f697", "Url": "https://api.github.com/repos/thomasthiebaud/QuietAndroid", "Date": "2016-05-29T16:03:07Z"},
{"Line": "=>1390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toursAdapter) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7844/buggy-version/app.src.main.java.social.entourage.android.map.MapEntourageFragment.java", "BodyUseAPI": [], "Fixed commit": "94db0a4c7df8e4a85c5eaf971da720b2ff8e026f", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-04-22T14:03:15Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requires != (node.getRequires())) { change = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4781/buggy-version/src.javasources.KTool.src.org.kframework.compile.utils.CompileDataStructures.java", "BodyUseAPI": [], "Fixed commit": "b6b4a607532f635b751f95341c1b808d3e6eb006", "Url": "https://api.github.com/repos/dwightguth/k", "Date": "2014-07-17T18:38:25Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!change) { return node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4781/buggy-version/src.javasources.KTool.src.org.kframework.compile.utils.CompileDataStructures.java", "BodyUseAPI": [], "Fixed commit": "b6b4a607532f635b751f95341c1b808d3e6eb006", "Url": "https://api.github.com/repos/dwightguth/k", "Date": "2014-07-17T18:38:25Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) > 4) { if (!(checkPreName((((com.mygdx.enums.TextureEnum.NPC) + \"_\") + facePath), preName[5]))) { preName[5] = ((com.mygdx.enums.TextureEnum.NPC) + \"_\") + facePath; assetsManager.load(textureAssets.getTexturePath(preName[5]), com.badlogic.gdx.graphics.Texture.class); assetsManager.finishLoading(); }else { preName[5] = ((com.mygdx.enums.TextureEnum.NPC) + \"_\") + facePath; } }else { preName[5] = ((com.mygdx.enums.TextureEnum.NPC) + \"_\") + facePath; assetsManager.load(textureAssets.getTexturePath(preName[5]), com.badlogic.gdx.graphics.Texture.class); assetsManager.finishLoading(); (count)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8814/buggy-version/core.src.com.mygdx.manager.TextureManager.java", "BodyUseAPI": [], "Fixed commit": "20042c68e46380bf2f7e2df2b541e6d7411297c1", "Url": "https://api.github.com/repos/CienProject2014/OneLevelHero", "Date": "2015-09-30T14:17:55Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (islandFile.exists()) { if (!(islandFile.delete())) { plugin.getLogger().severe(((\"Could not delete island file \" + checkName) + \"!\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1492/buggy-version/src.com.wasteofplastic.askyblock.DeleteIslandChunk.java", "BodyUseAPI": [], "Fixed commit": "2d6944008a1370dc78a8c5e688cb1f19ab37d9aa", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2014-12-16T16:20:25Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((trainer) != null) && ((transport) != null)) message.attachContext(voidConfiguration, trainer, clipboard, transport, storage, role, shardIndex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8595/buggy-version/nd4j-parameter-server-parent.nd4j-parameter-server-node.src.main.java.org.nd4j.parameterserver.distributed.messages.Frame.java", "BodyUseAPI": [], "Fixed commit": "a96caa0015d3f42786b609a08997795498fcc626", "Url": "https://api.github.com/repos/gagatust/nd4j", "Date": "2017-02-27T18:03:52Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5141/buggy-version/app.src.main.java.com.example.paper.paperinteractive.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "176a598db1d4754ea26d3a86a34e7f34923ec56f", "Url": "https://api.github.com/repos/speccaN/PaperInteractive", "Date": "2016-11-14T22:04:47Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gun.ordinal()) < (EnumGun.EXTENDABLE_SHIELD.ordinal())) { XFactHD.rssmc.client.util.Sounds.gunFire.put(gun, XFactHD.rssmc.client.util.Sounds.registerSound(((gun.toString().toLowerCase(java.util.Locale.ENGLISH)) + \"_fire\"))); XFactHD.rssmc.client.util.Sounds.gunCharge.put(gun, XFactHD.rssmc.client.util.Sounds.registerSound(((gun.toString().toLowerCase(java.util.Locale.ENGLISH)) + \"_charge\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7925/buggy-version/1.10.2.src.main.java.XFactHD.rssmc.client.util.Sounds.java", "BodyUseAPI": ["XFactHD.rssmc.client.util.Sounds.registerSound(((gun.toString().toLowerCase(java.util.Locale.ENGLISH)) + \"_fire\"))", "java.util.HashMap<XFactHD.rssmc.common.data.EnumGun, net.minecraft.util.SoundEvent>.put(XFactHD.rssmc.common.data.EnumGun,net.minecraft.util.SoundEvent)", "java.util.HashMap<XFactHD.rssmc.common.data.EnumGun, net.minecraft.util.SoundEvent>.put(XFactHD.rssmc.common.data.EnumGun,net.minecraft.util.SoundEvent)", "gun.toString().toLowerCase(java.util.Locale)", "XFactHD.rssmc.common.data.EnumGun.toString()", "XFactHD.rssmc.client.util.Sounds.registerSound(((gun.toString().toLowerCase(java.util.Locale.ENGLISH)) + \"_charge\"))", "gun.toString().toLowerCase(java.util.Locale)", "XFactHD.rssmc.common.data.EnumGun.toString()"], "Fixed commit": "5049a6d6de39c63e78328badbab91a5dfb7a538e", "Url": "https://api.github.com/repos/XFactHD/RainbowSixSiegeMC", "Date": "2017-09-08T01:31:46Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["infinity.datatype.HexNumber.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (unknownOfs < offset) { unknownOfs = java.lang.Math.min((offset + 324), buffer.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2696/buggy-version/src.infinity.resource.gam.Familiar.java", "BodyUseAPI": ["java.lang.Math.min(int,int)"], "Fixed commit": "485f7b09a30c6efbd75078199e61f9931b8a8617", "Url": "https://api.github.com/repos/Argent77/NearInfinity", "Date": "2014-01-08T13:58:54Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.github.jacobcole2000.NutritiousFoods.PlayerData>.get(sender.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pData == null) { pData = new com.github.jacobcole2000.NutritiousFoods.PlayerData(); players.put(sender.getName(), pData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4355/buggy-version/NutritiousFoods.NutritiousFoods.src.com.github.jacobcole2000.NutritiousFoods.NutritiousFoods.java", "BodyUseAPI": [], "Fixed commit": "23bd799eb4d1ccb3166c58e1730ed7676c527e3e", "Url": "https://api.github.com/repos/Namrufus/NutritiousFoods", "Date": "2013-05-05T23:57:43Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getItemInUseDuration()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (usingItem == 0) { model.setupRest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2911/buggy-version/src.main.java.mhfc.net.client.render.weapon.bow.RenderBow.java", "BodyUseAPI": [], "Fixed commit": "dd6ad32041bf45a8c8908dc305c2ce1941bce9c3", "Url": "https://api.github.com/repos/Guild-Hall/MHFC", "Date": "2016-02-20T23:05:37Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mLastRequestedFilter.equals(getSearchFilter()))) { refreshSmsItemAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/209/buggy-version/src.com.sbar.smsnenado.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "966df7f35dc79814c4b7408803e9a5cb71fb0eb0", "Url": "https://api.github.com/repos/sbar/smsnenado", "Date": "2013-10-26T19:38:31Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mLastRequestedFilter.equals(getSearchFilter()))) { refreshSmsItemAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/209/buggy-version/src.com.sbar.smsnenado.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "966df7f35dc79814c4b7408803e9a5cb71fb0eb0", "Url": "https://api.github.com/repos/sbar/smsnenado", "Date": "2013-10-26T19:38:31Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openforis.idm.model.Attribute<?, ?>.getDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (attrDef.isMultiple()) { validationMessagePath = ((firstAttribute.getParent().getPath()) + (org.openforis.idm.path.Path.SEPARATOR)) + (attrDef.getName()); }else { validationMessagePath = firstAttribute.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8349/buggy-version/collect-earth.collect-earth-core.src.main.java.org.openforis.collect.earth.core.handlers.BalloonInputFieldsUtils.java", "BodyUseAPI": ["org.openforis.idm.metamodel.AttributeDefinition.getName()"], "Fixed commit": "c3e0eb1c051b88b6431ab1fb446d0428801b7493", "Url": "https://api.github.com/repos/openforis/collect-earth", "Date": "2017-11-20T08:20:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeLabel == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2898/buggy-version/src.homework2.BipartiteGraph.java", "BodyUseAPI": [], "Fixed commit": "1760a7435b85669c86454f7741b6b416fe90cd56", "Url": "https://api.github.com/repos/okaikov/046271_oop", "Date": "2017-12-26T21:28:07Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (graphContains(nodeLabel)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2898/buggy-version/src.homework2.BipartiteGraph.java", "BodyUseAPI": [], "Fixed commit": "1760a7435b85669c86454f7741b6b416fe90cd56", "Url": "https://api.github.com/repos/okaikov/046271_oop", "Date": "2017-12-26T21:28:07Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attachment.containsKey(\"data\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7604/buggy-version/CouchbaseLiteProject.CBLite.src.main.java.com.couchbase.cblite.CBLRevision.java", "BodyUseAPI": [], "Fixed commit": "fec7ab2b7dc164a0fa18dac9487c2b7c09cf5e40", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android", "Date": "2013-08-03T17:44:48Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.outlookservices.Message.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((text.getContentType()) == (com.microsoft.outlookservices.BodyType.HTML)) { body = android.text.Html.fromHtml(text.getContent()).toString(); }else { body = text.getContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5175/buggy-version/app.src.main.java.com.example.johnpham.hcftw.Email.java", "BodyUseAPI": ["com.microsoft.outlookservices.ItemBody.getContent()", "android.text.Html.fromHtml(text.getContent())", "android.text.Html.fromHtml(text.getContent()).toString()", "com.microsoft.outlookservices.ItemBody.getContent()"], "Fixed commit": "393d3bddf52a6fd142f3cc91a099346465f095c4", "Url": "https://api.github.com/repos/john098/HCFTW", "Date": "2015-03-12T20:15:12Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sunCycleService.isSunUp())) { de.karthaus.smaDataLogger.worker.SmaWorker.log.debug(\"Don't try to reconnect during Sunset\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4276/buggy-version/src.main.java.de.karthaus.smaDataLogger.worker.SmaWorker.java", "BodyUseAPI": [], "Fixed commit": "b9ae6a2625e5f5684cd270e0e8b1b024a0d11266", "Url": "https://api.github.com/repos/JKarthaus/smaDataLogger", "Date": "2017-11-06T18:09:06Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(m_PartComplexity_TF.getText().equals(\"\"))) { complexity = java.lang.Double.parseDouble(m_PartComplexity_TF.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3569/buggy-version/src.MenuUI.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "javax.swing.JTextField.getText()"], "Fixed commit": "a4303ed5bad20b52ed6b587391d395d78f8c03ea", "Url": "https://api.github.com/repos/asu-scsc/PrinterSearch", "Date": "2016-03-29T03:32:52Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (duration == (com.google.android.exoplayer2.C.TIME_UNSET)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6259/buggy-version/app.src.main.java.com.nutrition.express.common.CommonExoPlayerView.java", "BodyUseAPI": [], "Fixed commit": "bfa8e04990ebc935c5f0f1768da29ab4c44354ea", "Url": "https://api.github.com/repos/mingdroid/tumbviewer", "Date": "2017-10-16T15:19:00Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ecUser.getAvatar().startsWith(\"http://\")) { ecUser.setAvatar(ecUser.getAvatar().replaceFirst(\"http://\", \"https://\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3245/buggy-version/src.main.java.com.jasonwangex.easyCoursera.account.service.EcUserServiceImpl.java", "BodyUseAPI": ["ecUser.getAvatar().replaceFirst(java.lang.String,java.lang.String)", "com.jasonwangex.easyCoursera.account.domain.EcUser.setAvatar(ecUser.getAvatar().replaceFirst(\"http://\", \"https://\"))", "com.jasonwangex.easyCoursera.account.domain.EcUser.getAvatar()"], "Fixed commit": "930ce065295e0a9ac1774de0f1a818b4ad78800a", "Url": "https://api.github.com/repos/JasonWangex/EasyCoursera", "Date": "2017-05-22T12:05:25Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.world.getBlock(event.x,event.y,event.z)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (block == (net.minecraft.init.Blocks.wall_sign)) { net.minecraft.item.ItemStack held = event.entityPlayer.getHeldItem(); if ((held != null) && ((held.getItem()) instanceof net.minecraft.item.ItemBlock)) { event.useItem = Event.Result.DENY; } if (!(event.entityPlayer.isSneaking())) { net.minecraft.block.Block attached = event.world.getBlock(((event.x) + (forgeDirection.offsetX)), ((event.y) + (forgeDirection.offsetY)), ((event.z) + (forgeDirection.offsetZ))); if ((attached != null) && (!(attached.isAir(event.world, ((event.x) + (forgeDirection.offsetX)), ((event.y) + (forgeDirection.offsetY)), ((event.z) + (forgeDirection.offsetZ)))))) { attached.onBlockActivated(event.world, ((event.x) + (forgeDirection.offsetX)), ((event.y) + (forgeDirection.offsetY)), ((event.z) + (forgeDirection.offsetZ)), event.entityPlayer, event.face, 0, 0, 0); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9171/buggy-version/src.main.java.dmillerw.sign.PassthroughSigns.java", "BodyUseAPI": [], "Fixed commit": "a598898639f80d7e634ac7e3823e70ee9a1e28c5", "Url": "https://api.github.com/repos/dmillerw/PassthroughSigns", "Date": "2014-10-02T21:14:58Z"},
{"Line": "=>982", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numCurPara) < 0) { doFullTextCheck = false; return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2411/buggy-version/languagetool-office-extension.src.main.java.org.languagetool.openoffice.Main.java", "BodyUseAPI": [], "Fixed commit": "a177b4a7e433a82729f83e26c067d34bed00394f", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2017-11-13T19:46:01Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rLibs == null) { this.rLibs = ((java.lang.System.getProperty(\"molgenis.home\")) + (java.io.File.separator)) + \"R_libs\"; }else { this.rLibs = rLibs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6584/buggy-version/molgenis-r.src.main.java.org.molgenis.r.RScriptExecutor.java", "BodyUseAPI": [], "Fixed commit": "470e3864d0278a5f93985adf285c3992431ccf66", "Url": "https://api.github.com/repos/erwinwinder/molgenis", "Date": "2015-08-28T05:50:21Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.registry.containsKey(action.getQualifier().getFullQualifier())) { org.livingplace.controlling.actions.registry.impl.internal.ActionRegistryImpl.logger.info(buildPrintoutFor(action.getQualifier(), action.getActionProperties(), null)); org.livingplace.controlling.actions.registry.impl.internal.ActionRegistryImpl.executor.execute(action); }else { org.livingplace.controlling.actions.registry.impl.internal.ActionRegistryImpl.logger.info(\"Not executing action that was not in the registry. Have you stopped the Actor?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3479/buggy-version/org.livingplace.controlling.actions.registry.impl.src.main.java.org.livingplace.controlling.actions.registry.impl.internal.ActionRegistryImpl.java", "BodyUseAPI": ["org.apache.log4j.Logger.info(java.lang.String)", "org.livingplace.controlling.actions.api.IAction.getActionProperties()", "org.livingplace.controlling.actions.registry.impl.internal.ActionRegistryImpl.buildPrintoutFor(action.getQualifier(),action.getActionProperties(),<nulltype>)", "java.util.concurrent.Executor.execute(org.livingplace.controlling.actions.api.IAction)", "org.livingplace.controlling.actions.api.IAction.getQualifier()"], "Fixed commit": "5937ea3345382aa5d20887e2232f323a6c133a0c", "Url": "https://api.github.com/repos/kjellski/org.livingplace.controlling", "Date": "2013-01-28T16:20:53Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getDefaultUncaughtExceptionHandler()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ueh != null) { ueh.uncaughtException(java.lang.Thread.currentThread(), t); }else { t.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3739/buggy-version/src.main.java.org.threadly.concurrent.TaskExecutorDistributor.java", "BodyUseAPI": ["java.lang.Thread.UncaughtExceptionHandler.uncaughtException(java.lang.Thread,java.lang.Throwable)"], "Fixed commit": "d56226b095a35fe645b01f32c5237c8563316487", "Url": "https://api.github.com/repos/jentfoo/threadly", "Date": "2013-08-02T14:56:27Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.LOLLIPOP)) { clientBuilder.sslSocketFactory(new nerd.tuxmobil.fahrplan.congress.net.TLSSocketFactory(), trustManager); }else { clientBuilder.sslSocketFactory(nerd.tuxmobil.fahrplan.congress.net.CustomHttpClient.createSSLSocketFactory(trustManager), trustManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1059/buggy-version/app.src.main.java.nerd.tuxmobil.fahrplan.congress.net.CustomHttpClient.java", "BodyUseAPI": [], "Fixed commit": "06d3a93ca91bfe070fdd88fe8bf7b66b6ef6b5ba", "Url": "https://api.github.com/repos/stefanmedack/CampFahrplan", "Date": "2017-10-27T15:11:16Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.fau.cs.mad.smile.android.encryption.SMileCrypto.isDEBUG()) { processed.writeTo(new java.io.FileOutputStream(targetFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2351/buggy-version/app.src.main.java.de.fau.cs.mad.smile.android.encryption.remote.operation.MimeBodyCryptoOperation.java", "BodyUseAPI": [], "Fixed commit": "403e357ea8a070220943876288b5ee0385d1f1a3", "Url": "https://api.github.com/repos/FAU-Inf2/SMileCE", "Date": "2015-10-14T09:20:23Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<de.selfmade4u.klassenmixer.Student>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s.equals(student)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1949/buggy-version/src.de.selfmade4u.klassenmixer.gui.StudentsTableModel.java", "BodyUseAPI": [], "Fixed commit": "00cc1aee83aa5bb897d9b6d17ca8b1f971c6cf18", "Url": "https://api.github.com/repos/mohe2015/Klassenmixer", "Date": "2017-06-13T15:33:17Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getProject()) != null) { modelMarkerHandler = new de.ovgu.featureide.fm.core.ModelMarkerHandler(getProject().getFile(getFile().getName())); modelMarkerHandler.deleteAllModelMarkers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7486/buggy-version/plugins.de.ovgu.featureide.fm.core.src.de.ovgu.featureide.fm.core.io.velvet.VelvetFeatureModelReader.java", "BodyUseAPI": [], "Fixed commit": "83cff87b3ae876045cbe638805e36b189d0ffdc9", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2014-11-20T14:03:25Z"},
{"Line": "=>1006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modelMarkerHandler) != null) { modelMarkerHandler.createModelMarker(message, org.eclipse.core.resources.IMarker.SEVERITY_ERROR, curNode.getLine()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7486/buggy-version/plugins.de.ovgu.featureide.fm.core.src.de.ovgu.featureide.fm.core.io.velvet.VelvetFeatureModelReader.java", "BodyUseAPI": [], "Fixed commit": "83cff87b3ae876045cbe638805e36b189d0ffdc9", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2014-11-20T14:03:25Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modelMarkerHandler) != null) { modelMarkerHandler.createModelMarker(message, org.eclipse.core.resources.IMarker.SEVERITY_WARNING, curNode.getLine()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7486/buggy-version/plugins.de.ovgu.featureide.fm.core.src.de.ovgu.featureide.fm.core.io.velvet.VelvetFeatureModelReader.java", "BodyUseAPI": [], "Fixed commit": "83cff87b3ae876045cbe638805e36b189d0ffdc9", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2014-11-20T14:03:25Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (event.getNewValue())) { messageTextPane.setStyledDocument(new javax.swing.text.html.HTMLDocument()); }else { messageTextPane.setStyledDocument(((javax.swing.text.StyledDocument) (event.getNewValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1694/buggy-version/src.main.java.uk.co.rjsoftware.xmpp.dialogs.main.MainForm.java", "BodyUseAPI": ["java.beans.PropertyChangeEvent.getNewValue()", "javax.swing.JTextPane.setStyledDocument(java.lang.Object)"], "Fixed commit": "5bb5c379c4744825f52e43c946731720f40e461f", "Url": "https://api.github.com/repos/richardsimpson/chat-client", "Date": "2014-07-06T20:50:36Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position < 0) || (position >= (commandAdapter.getCount()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1021/buggy-version/Android.src.org.droidplanner.android.proxy.mission.item.fragments.MissionDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "3eecbe29dd1f50b3c9a458e2955f8437fe91c94c", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2016-09-21T17:50:14Z"},
{"Line": "=>820", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHandler()) != null) { getHandler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { mDragHelper.smoothSlideViewTo(mMainView, mRectMainClose.left, mRectMainClose.top); android.support.v4.view.ViewCompat.postInvalidateOnAnimation(com.chauthai.swipereveallayout.SwipeRevealLayout.this); } }, com.chauthai.swipereveallayout.SwipeRevealLayout.DEAFULT_GLANCING_ANIMATION_PAUSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2017/buggy-version/swipe-reveal-layout.src.main.java.com.chauthai.swipereveallayout.SwipeRevealLayout.java", "BodyUseAPI": [], "Fixed commit": "182befb0cf1f445ae440f8b2d84a23064dd62533", "Url": "https://api.github.com/repos/hydrated/SwipeRevealLayout", "Date": "2017-06-20T08:58:57Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<me.dylanburton.blastarreborn.PlayScreen.Enemy>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((e.x) < 0) || ((e.x) > (((width) * 4) / 5))) { e.vx = -(e.vx); randomVelocityGeneratorX = -(randomVelocityGeneratorX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8304/buggy-version/app.src.main.java.me.dylanburton.blastarreborn.PlayScreen.java", "BodyUseAPI": [], "Fixed commit": "26974854f17a20b0af545c9f1ac0a5c836c5913d", "Url": "https://api.github.com/repos/TheNamesDyl/blastar", "Date": "2017-07-16T02:40:48Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<me.dylanburton.blastarreborn.PlayScreen.Enemy>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((e.y) < 0) || ((e.y) > ((height) / 4))) { e.vy = -(e.vy); randomVelocityGeneratorY = -(randomVelocityGeneratorY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8304/buggy-version/app.src.main.java.me.dylanburton.blastarreborn.PlayScreen.java", "BodyUseAPI": [], "Fixed commit": "26974854f17a20b0af545c9f1ac0a5c836c5913d", "Url": "https://api.github.com/repos/TheNamesDyl/blastar", "Date": "2017-07-16T02:40:48Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) throw new java.util.NoSuchElementException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2620/buggy-version/RandomizedQueuesAndDeques.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "860ef853bdb1efde551b0b97f42860a94b7e9b8c", "Url": "https://api.github.com/repos/Altynai/CourseraAlgorithms", "Date": "2013-09-20T06:58:39Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spaceShip) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8318/buggy-version/Asteroids.app.src.main.java.com.android_basics.firstname_lastname.asteroids.GameView.java", "BodyUseAPI": [], "Fixed commit": "0b910747ed33f5b102cc7dbb8f75302abc9258d4", "Url": "https://api.github.com/repos/dimitrii/Android_Basics", "Date": "2017-07-03T20:22:27Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSite.isWPCom()) || (mSite.isJetpackConnected())) { categories.add(((long) (org.wordpress.android.ui.prefs.SiteSettingsInterface.getDefaultCategory(org.wordpress.android.WordPress.getContext())))); postFormat = org.wordpress.android.ui.prefs.SiteSettingsInterface.getDefaultFormat(org.wordpress.android.WordPress.getContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/242/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.posts.EditPostActivity.java", "BodyUseAPI": [], "Fixed commit": "42ca73f8f79fbaea95f805228fec0fe0e2a3c08f", "Url": "https://api.github.com/repos/abbasvlb/WordPress-Android", "Date": "2017-03-24T14:11:50Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (java.lang.reflect.Modifier.isAbstract(klass.getModifiers())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7350/buggy-version/dynamo-framework.src.main.java.dynamo.core.services.ConfigurationItem.java", "BodyUseAPI": [], "Fixed commit": "d355550efbdb85d2a1917f52f49c8f2f95fe551c", "Url": "https://api.github.com/repos/mozvip/dynamo", "Date": "2016-08-25T15:19:38Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<service.db.model.Ad>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((candidate.getId()) != (adList.get(i).getId())) { if (!(((candidate.getAmountLeft()) >= (adList.get(i).getAmountLeft())) && ((candidate.getxAttribute()) >= (adList.get(i).getxAttribute())))) { dominant = false; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7868/buggy-version/src.main.java.service.db.impl.AdDaoImpl.java", "BodyUseAPI": ["java.util.List<service.db.model.Ad>.get(int)", "service.db.model.Ad.getxAttribute()", "adList.get(i).getxAttribute()", "java.util.List<service.db.model.Ad>.get(int)", "adList.get(i).getAmountLeft()", "service.db.model.Ad.getAmountLeft()"], "Fixed commit": "94a2fbfc7e0c4001abe33c59f2278df0b295067c", "Url": "https://api.github.com/repos/agbpatro/geospatial587", "Date": "2016-11-10T00:34:04Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { java.lang.System.out.println(\"\u041d\u0435\u0442 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0432 \u043a\u0435\u0448\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1479/buggy-version/src.ru.mifodiy777.task.Run.java", "BodyUseAPI": [], "Fixed commit": "a21a0aba3a1ed922c3619267e63bea2aa71c4704", "Url": "https://api.github.com/repos/mifodiy777/innopolis", "Date": "2016-10-10T18:47:07Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.apache.orc.TypeDescription>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null != topicSpecificTD) { return topicSpecificTD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7218/buggy-version/src.main.java.com.pinterest.secor.util.orc.schema.DefaultORCSchemaProvider.java", "BodyUseAPI": [], "Fixed commit": "7dbc35670d836a961ef96baee64e4e4ece2d17a3", "Url": "https://api.github.com/repos/Smartling/secor", "Date": "2017-05-12T08:47:17Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plugin.getUseEcon()) && (plugin.getHomeCharge())) { if (!(plugin.getEconHandler().checkBalance(player, plugin.getHomeCost()))) { plugin.getPending().remove(player.getDisplayName()); player.sendMessage(\"You do not have enough money to teleport to a home\"); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/916/buggy-version/src.com.gmail.scottmwoodward.multiplehomemanager.RunnableTeleport.java", "BodyUseAPI": ["plugin.getPending().remove(player.getDisplayName())", "com.gmail.scottmwoodward.multiplehomemanager.MultipleHomeManager.getPending()", "com.gmail.scottmwoodward.multiplehomemanager.MultipleHomeManager.getEconHandler()", "plugin.getEconHandler().checkBalance(org.bukkit.entity.Player,plugin.getHomeCost())", "com.gmail.scottmwoodward.multiplehomemanager.MultipleHomeManager.getHomeCost()"], "Fixed commit": "4e78be83777ad932369141a801a9961755498ac4", "Url": "https://api.github.com/repos/ScottWoodward/MultipleHomeManager", "Date": "2012-10-07T01:04:09Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plugin.getUseEcon()) && (plugin.getHomeCharge())) { player.sendMessage(((plugin.getEconHandler().takePayment(player, plugin.getHomeCost())) + \"/home\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/916/buggy-version/src.com.gmail.scottmwoodward.multiplehomemanager.RunnableTeleport.java", "BodyUseAPI": ["plugin.getEconHandler().takePayment(org.bukkit.entity.Player,plugin.getHomeCost())", "com.gmail.scottmwoodward.multiplehomemanager.MultipleHomeManager.getHomeCost()", "org.bukkit.entity.Player.sendMessage(((plugin.getEconHandler().takePayment(player, plugin.getHomeCost())) + \"/home\"))", "com.gmail.scottmwoodward.multiplehomemanager.MultipleHomeManager.getEconHandler()"], "Fixed commit": "4e78be83777ad932369141a801a9961755498ac4", "Url": "https://api.github.com/repos/ScottWoodward/MultipleHomeManager", "Date": "2012-10-07T01:04:09Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (matchPrefix) { matched = key.endsWith(searchKey); }else { matched = searchKey.equals(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6795/buggy-version/eclipse.springext-eclipse-plugin.src.main.java.com.alibaba.ide.plugin.eclipse.springext.editor.component.PropertiesUtil.java", "BodyUseAPI": [], "Fixed commit": "d18b9839b227b95e40892abc5899baf308d89e95", "Url": "https://api.github.com/repos/webx/citrus-tool", "Date": "2013-02-26T18:34:50Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((patientID.getIssuer()) != null) patAttr.setString(Tag.IssuerOfPatientID, VR.LO, patientID.getIssuer().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2835/buggy-version/dcm4chee-arc-iocm-rs.src.main.java.org.dcm4chee.arc.iocm.rs.IocmRS.java", "BodyUseAPI": ["org.dcm4chee.arc.iocm.rs.Attributes.setString(Tag.IssuerOfPatientID,VR.LO,patientID.getIssuer().toString())", "org.dcm4chee.arc.iocm.rs.IDWithIssuer.getIssuer()", "patientID.getIssuer().toString()"], "Fixed commit": "671ed8d42a27611c412cb7206e0054313145ee1e", "Url": "https://api.github.com/repos/dcm4che/dcm4chee-arc-light", "Date": "2017-02-09T10:30:11Z"},
{"Line": "=>1126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getCatalog()) != null) { if (getPlatform().isDelimitedIdentifierModeOn()) { query.append(getPlatformInfo().getDelimiterToken()); } query.append(table.getCatalog()); if (getPlatform().isDelimitedIdentifierModeOn()) { query.append(getPlatformInfo().getDelimiterToken()); } query.append(\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7060/buggy-version/src.main.java.org.apache.ddlutils.platform.JdbcModelReader.java", "BodyUseAPI": ["org.apache.ddlutils.model.Table.getCatalog()", "java.lang.StringBuffer.append(table.getCatalog())"], "Fixed commit": "5e97f67b714d6c10ef9c705a65b6733e7f58d1e4", "Url": "https://api.github.com/repos/GrahamLea/ddlutils", "Date": "2015-04-24T11:28:38Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.as.ejb3.timerservice.CalendarTimer.getTimeoutMethod(org.jboss.as.ejb3.timerservice.persistence.TimeoutMethod,java.lang.ClassLoader)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (timeoutMethod != null) { builder.setTimeoutMethod(timeoutMethod); timers.add(builder.build(timerService)); }else { EjbLogger.ROOT_LOGGER.timerReinstatementFailed(builder.getTimedObjectId(), builder.getId(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5891/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.timerservice.persistence.filestore.EjbTimerXmlParser_1_0.java", "BodyUseAPI": ["CalendarTimer.Builder.setTimeoutMethod(java.lang.reflect.Method)"], "Fixed commit": "0d45f6620dd542189a50576c320601e1e3876781", "Url": "https://api.github.com/repos/stuartwdouglas/wildfly", "Date": "2015-01-07T22:26:12Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (apiData.containsKey(\"wsdl\")) { java.lang.String wsdl = ((java.lang.String) (apiData.get(\"wsdl\", apiData))); if ((wsdl != null) && (!(wsdl.isEmpty()))) { api.setWsdlUrl(wsdl); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3634/buggy-version/components.apimgt.org.wso2.carbon.apimgt.hostobjects.src.main.java.org.wso2.carbon.apimgt.hostobjects.APIProviderHostObject.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.hostobjects.NativeObject.get(java.lang.String,org.wso2.carbon.apimgt.hostobjects.NativeObject)"], "Fixed commit": "cbd387d8f2c8d5aab9f273e593a22587827a9b41", "Url": "https://api.github.com/repos/lakmali/carbon-apimgt", "Date": "2015-04-20T06:03:44Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n2 == null) { return rotateRight(head, (k - count)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3724/buggy-version/mysolutions.src.rotateList.RotateList.java", "BodyUseAPI": [], "Fixed commit": "da4982603f72ab5ab81394329e7a0821bcdf853d", "Url": "https://api.github.com/repos/asraf209/leetcode", "Date": "2016-04-28T06:29:10Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!forRunBook) { stepNumber = 1; }else { stepNumber = java.lang.Integer.parseInt(stepNumberStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/214/buggy-version/dc-common.src.main.java.com.dc.ssh.client.support.NodeCredentialsFileParser.java", "BodyUseAPI": [], "Fixed commit": "547889d4491405e469bbc494e3411f4fb068b83f", "Url": "https://api.github.com/repos/divinecloud/DivineCloud", "Date": "2016-02-01T06:37:45Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (IssueQuery.SORT_BY_STATUS.equals(sort)) { return IssueNormalizer.IssueField.STATUS; }else if (IssueQuery.SORT_BY_SEVERITY.equals(sort)) { return IssueNormalizer.IssueField.SEVERITY_VALUE; }else if (IssueQuery.SORT_BY_CREATION_DATE.equals(sort)) { return IssueNormalizer.IssueField.ISSUE_CREATED_AT; }else if (IssueQuery.SORT_BY_UPDATE_DATE.equals(sort)) { return IssueNormalizer.IssueField.ISSUE_UPDATED_AT; }else if (IssueQuery.SORT_BY_CLOSE_DATE.equals(sort)) { return IssueNormalizer.IssueField.ISSUE_CLOSE_DATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6538/buggy-version/server.sonar-server.src.main.java.org.sonar.server.issue.index.IssueIndex.java", "BodyUseAPI": ["IssueQuery.SORT_BY_CREATION_DATE.equals(java.lang.String)", "IssueQuery.SORT_BY_UPDATE_DATE.equals(java.lang.String)", "IssueQuery.SORT_BY_CLOSE_DATE.equals(java.lang.String)", "IssueQuery.SORT_BY_SEVERITY.equals(java.lang.String)"], "Fixed commit": "16d1264cf1bc64c8eb1459d8a5fd5ee9be2e9cd7", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-10-03T13:00:53Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(toShowAll)) model.updateFilteredTaskList(org.apache.commons.lang3.tuple.Triple.of(priority, date, type));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6291/buggy-version/task-tracker.src.main.java.main.logic.command.ListCommand.java", "BodyUseAPI": [], "Fixed commit": "277cb2e6653ed1385ac2a368d93476dceec4ebe9", "Url": "https://api.github.com/repos/CS2103AUG2016-T09-C3/main", "Date": "2016-10-22T13:33:14Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.metadata.schema.OSchemaShared.checkNameIfValid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (wrongCharacter != null) throw new com.orientechnologies.orient.core.exception.OSchemaException(((\"Invalid class name found. Character '\" + wrongCharacter) + \"' cannot be used in class name\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7993/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OSchemaShared.java", "BodyUseAPI": [], "Fixed commit": "71d576431701e3b18e89f2cc64e9b7f494b83725", "Url": "https://api.github.com/repos/fabriziofortino/orientdb", "Date": "2015-01-06T18:30:40Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((selectedSlider) != null) && (slider.hitBox(center.x(), center.y()))) { selectedSlider = slider; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6677/buggy-version/src.minecraft.net.machinemuse.general.gui.frame.ModuleTweakFrame.java", "BodyUseAPI": [], "Fixed commit": "26c238fc14806040cb3ec348b297c77105bdb302", "Url": "https://api.github.com/repos/MachineMuse/MachineMusePowersuits", "Date": "2013-09-24T18:33:54Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { com.squareup.picasso.Picasso.with(getContext()).load(data.getPublisherPicture()).placeholder(R.drawable.ic_placeholder).into(autorPic); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/817/buggy-version/app.src.main.java.com.onelio.connectu.Activities.Apps.Materiales.MaterialesDialog.java", "BodyUseAPI": [], "Fixed commit": "de0b4b7259ed016162a866042f26ee7fd78aedd4", "Url": "https://api.github.com/repos/Onelio/ConnectU", "Date": "2017-12-19T14:46:29Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((webView.getVisibility()) == (android.view.View.VISIBLE)) { progressBar.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/548/buggy-version/sayan-ola-ride-sdk.src.main.java.sayan.sample.com.sayan_ola_ride_sdk.activities.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "d43aedb8feb8987a7697c18afc46b53bc747e921", "Url": "https://api.github.com/repos/msayanece/OLA-RIDE-SDK", "Date": "2017-11-12T18:21:31Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Client.client.has(\"probe_id\"))) { android.util.Log.i(\"client-----------\", Client.client.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3832/buggy-version/app.src.main.java.com.qiniu.liuhanlin.android_detection.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f6a6ad9f9b4a6351aa4ef7a06775fc9619c3548d", "Url": "https://api.github.com/repos/jiaojunjiahanlin/android-detection", "Date": "2016-11-09T06:06:21Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attrPrimaryFQAN.getValues().isEmpty())) { sbj.getAttributes().add(attrPrimaryFQAN); }else { org.glite.ce.commonj.authz.argus.ArgusPEP.logger.warn((((\"found empty attrPrimaryFQAN DN=\" + tmpDN) + \" operation=\") + operation)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6174/buggy-version/src.main.java.org.glite.ce.commonj.authz.argus.ArgusPEP.java", "BodyUseAPI": ["sbj.getAttributes().add(org.glite.authz.common.model.Attribute)"], "Fixed commit": "e047743b95f04ead3133dcf6bd3e17e3530297ad", "Url": "https://api.github.com/repos/italiangrid/cream-common", "Date": "2013-04-18T12:10:33Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attrVO.getValues().isEmpty())) { sbj.getAttributes().add(attrVO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6174/buggy-version/src.main.java.org.glite.ce.commonj.authz.argus.ArgusPEP.java", "BodyUseAPI": ["sbj.getAttributes().add(org.glite.authz.common.model.Attribute)"], "Fixed commit": "e047743b95f04ead3133dcf6bd3e17e3530297ad", "Url": "https://api.github.com/repos/italiangrid/cream-common", "Date": "2013-04-18T12:10:33Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attrFQAN.getValues().isEmpty())) { sbj.getAttributes().add(attrFQAN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6174/buggy-version/src.main.java.org.glite.ce.commonj.authz.argus.ArgusPEP.java", "BodyUseAPI": ["sbj.getAttributes().add(org.glite.authz.common.model.Attribute)"], "Fixed commit": "e047743b95f04ead3133dcf6bd3e17e3530297ad", "Url": "https://api.github.com/repos/italiangrid/cream-common", "Date": "2013-04-18T12:10:33Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.originalAvatar()) != null) { originalAvatarUrl = storageService.issueDownloadUrl(user.originalAvatarKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3852/buggy-version/liurushi-identityaccess.src.main.java.com.beautysight.liurushi.identityaccess.app.UserApp.java", "BodyUseAPI": ["com.beautysight.liurushi.fundamental.domain.storage.StorageService.issueDownloadUrl(user.originalAvatarKey())", "com.beautysight.liurushi.identityaccess.domain.model.User.originalAvatarKey()"], "Fixed commit": "00e845988fa3ee38ac7c85f31203c1a18759523d", "Url": "https://api.github.com/repos/18luohan/beautysight-liurushi", "Date": "2015-07-24T04:38:17Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(PublicTadpoleDefine.USER_ROLE_TYPE.API_USER.name().equals(com.hangum.tadpole.session.manager.SessionManager.getRepresentRole()))) { manageMenu.add(transactionConnectionAction); manageMenu.add(resourceManageAction); manageMenu.add(dbMgmtAction); manageMenu.add(executedSQLAction); manageMenu.add(schemaHistoryAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7107/buggy-version/com.hangum.tadpole.applicaion.start.src.com.hangum.tadpole.application.start.ApplicationActionBarAdvisor.java", "BodyUseAPI": [], "Fixed commit": "3ae99e75a0c76e75f4bfea23170dabb44d74dd16", "Url": "https://api.github.com/repos/jeongjaehong/TadpoleForDBTools", "Date": "2017-12-06T03:10:27Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(eu.faircode.netguard.SinkholeService)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefs.getBoolean(\"resolved\", true)) new eu.faircode.netguard.DatabaseHelper(this).insertDns(rr).close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/59/buggy-version/app.src.main.java.eu.faircode.netguard.SinkholeService.java", "BodyUseAPI": [], "Fixed commit": "a2e0b26b12661b27eaa549cd424446356fd07667", "Url": "https://api.github.com/repos/M66B/NetGuard", "Date": "2016-02-03T17:40:48Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (booleanHole.holdsRock()) { if (booleanHole.getRock().equals(rock)) { booleanHole.removeRock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6862/buggy-version/core.src.com.game.leveldesign.levels.Level_1.java", "BodyUseAPI": ["booleanHole.getRock().equals(com.game.box2d.mapobjects.Rock)", "com.game.box2d.mapobjects.Hole.removeRock()", "com.game.box2d.mapobjects.Hole.getRock()"], "Fixed commit": "a05bc2f8c4b3861667e3fc374e0048bde62e1d10", "Url": "https://api.github.com/repos/arHergert/ProjectHB", "Date": "2017-07-07T09:16:46Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (intHole.holdsRock()) { if (intHole.getRock().equals(rock)) { intHole.removeRock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6862/buggy-version/core.src.com.game.leveldesign.levels.Level_1.java", "BodyUseAPI": ["com.game.box2d.mapobjects.Hole.removeRock()", "intHole.getRock().equals(com.game.box2d.mapobjects.Rock)", "com.game.box2d.mapobjects.Hole.getRock()"], "Fixed commit": "a05bc2f8c4b3861667e3fc374e0048bde62e1d10", "Url": "https://api.github.com/repos/arHergert/ProjectHB", "Date": "2017-07-07T09:16:46Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checksums == null) { checksums = new java.util.HashMap<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3808/buggy-version/src.main.java.hy.tmc.core.commands.DownloadExercises.java", "BodyUseAPI": [], "Fixed commit": "3bb7658d82969e74a935369176065737b534fbfb", "Url": "https://api.github.com/repos/testmycode/tmc-core", "Date": "2015-08-04T07:52:20Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.equals(\"antlr\")) { java.io.File f = new java.io.File(msg.fileName); if (f.exists()) { displayFileName = f.getName(); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3806/buggy-version/tool.src.org.antlr.v4.tool.ErrorManager.java", "BodyUseAPI": [], "Fixed commit": "f9d5f43e629e0fee92b7d6d06caeae0b9e1b0a44", "Url": "https://api.github.com/repos/ewanmellor/antlr4", "Date": "2017-11-03T19:14:10Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNewConnection && ((connection) != null)) { getConnectionInstance().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3406/buggy-version/liquibase.eclipse.plugin.src.liquibase.eclipse.plugin.controller.LiquibaseViewController.java", "BodyUseAPI": [], "Fixed commit": "7267ed242988a1827dec7a4730b04228e06778fb", "Url": "https://api.github.com/repos/achim86/liquibaseplugin", "Date": "2012-11-16T08:48:09Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.stringInput) == null) ^ ((otherInputState.stringInput) == null)) return false; else { if (((this.stringInput) == null) && ((otherInputState.stringInput) == null)) return true; else return this.stringInput.equals(otherInputState.stringInput); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4566/buggy-version/core.src.main.animated.spferical.netrogue.ClientInputState.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "a392d342bb7fe46990976f8f954b7a59e9195541", "Url": "https://api.github.com/repos/AnimatedRNG/netrogue", "Date": "2016-03-08T21:20:02Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (existsDirectory(com.android.storage.InternalStorageManager.CHARACTER_DIRECTORY, personaje.getName())) { android.widget.Toast.makeText(mContext, R.string.error_storage_used_name, Toast.LENGTH_SHORT).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9139/buggy-version/src.com.android.storage.InternalStorageManager.java", "BodyUseAPI": [], "Fixed commit": "223a9882c7007d3367a9c701bf57a71da16b73d5", "Url": "https://api.github.com/repos/DeformedInvaders/SSII1314DeformedInvaders", "Date": "2014-06-29T11:26:15Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.facebook.Session.getActiveSession().isOpened()) == true) { com.facebook.Request.newMeRequest(com.facebook.Session.getActiveSession(), new com.facebook.Request.GraphUserCallback() { @java.lang.Override public void onCompleted(com.facebook.model.GraphUser user, com.facebook.Response response) { user.getId(); } }); android.content.Intent intent = new android.content.Intent(this, org.codepath.team10.charitychallenger.activities.HomeActivity.class); startActivity(intent); }else { android.widget.Toast.makeText(this, \"login failed\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4810/buggy-version/CharityChallenger.src.org.codepath.team10.charitychallenger.activities.FacebookLoginActivity.java", "BodyUseAPI": [], "Fixed commit": "3ebbcdeafd89665dba5bd46856a18f8bf0d5f13f", "Url": "https://api.github.com/repos/CodePathFuntastic/Team10", "Date": "2014-10-16T15:43:50Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bin.Pixel.squares.size()) > 0) { for (int i = (bin.Pixel.squares.size()) - 1; i > 1; i--) { bin.Square squareOne = bin.Pixel.squares.get(i); if ((bin.Pixel.squares.size()) > 1) { for (int j = i - 1; j > 1; j--) { bin.Square squareTwo = bin.Pixel.squares.get(j); if ((squareOne.pos.dist(squareTwo.pos)) == 0) { bin.Pixel.squares.remove(j); i = i - 1; println(\"removed\"); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8098/buggy-version/src.bin.Pixel.java", "BodyUseAPI": ["java.util.ArrayList<bin.Square>.remove(int)", "java.util.ArrayList<bin.Square>.get(int)", "java.util.ArrayList<bin.Square>.size()", "java.util.ArrayList<bin.Square>.get(int)", "java.util.ArrayList<bin.Square>.size()"], "Fixed commit": "af7b7f74ef8068444db87bfeb456ee93a55ace41", "Url": "https://api.github.com/repos/Simononeill493/oopProject3", "Date": "2016-04-12T10:42:42Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commonType == (java.lang.Object.class)) && (singleCondition.getOperation().isComparison())) { commonType = java.lang.Comparable.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1719/buggy-version/drools-core.src.main.java.org.drools.rule.constraint.ASMConditionEvaluatorJitter.java", "BodyUseAPI": [], "Fixed commit": "743915123481770847e9d4bf726ad58b11fd1754", "Url": "https://api.github.com/repos/mikemelton/drools", "Date": "2012-01-30T11:33:42Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.bitmap) == null) { this.bitmap = android.graphics.BitmapFactory.decodeResource(_activity.getApplicationContext().getResources(), R.drawable.ic_launcher); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5298/buggy-version/app.src.main.java.com.tk_squared.bong.tkkDataMod.java", "BodyUseAPI": [], "Fixed commit": "2ab6479976d4c9ccde2d441afc688639cda4431c", "Url": "https://api.github.com/repos/Zengotim/Bong", "Date": "2016-02-16T19:55:39Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this._model.getCurrentHandspinner().getAngularVelocity()) > 0) this._model.getCurrentHandspinner().setAngularVelocity(((float) (java.lang.Math.max(0, ((this._model.getCurrentHandspinner().getAngularVelocity()) - 0.7F))))); else this._model.getCurrentHandspinner().setAngularVelocity(((float) (java.lang.Math.min(0, ((this._model.getCurrentHandspinner().getAngularVelocity()) + 0.7F)))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6057/buggy-version/app.src.main.java.com.inoueken.handspinner.MainActivity.java", "BodyUseAPI": ["com.inoueken.handspinner.models.MainActivityModel.getCurrentHandspinner()", "this._model.getCurrentHandspinner().setAngularVelocity(int)", "com.inoueken.handspinner.models.MainActivityModel.getCurrentHandspinner()", "this._model.getCurrentHandspinner().getAngularVelocity()", "com.inoueken.handspinner.models.MainActivityModel.getCurrentHandspinner()", "java.lang.Math.max(int,((this._model.getCurrentHandspinner().getAngularVelocity()) - 0.7F))", "java.lang.Math.min(int,((this._model.getCurrentHandspinner().getAngularVelocity()) + 0.7F))", "this._model.getCurrentHandspinner().setAngularVelocity(int)", "this._model.getCurrentHandspinner().getAngularVelocity()", "com.inoueken.handspinner.models.MainActivityModel.getCurrentHandspinner()"], "Fixed commit": "bbcc707d9cab37329eccba4f9600c24f8a572a29", "Url": "https://api.github.com/repos/MaxfieldWalker/SpinnerMeijin", "Date": "2017-09-08T02:34:15Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.robotninjas.barge.rpc.RaftClient.RpcHandlerFuture.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/456/buggy-version/src.main.java.org.robotninjas.barge.rpc.RaftClient.java", "BodyUseAPI": [], "Fixed commit": "305b8c1841632d97974a8f84c85c667066043c0b", "Url": "https://api.github.com/repos/mgodave/barge", "Date": "2013-09-30T20:41:04Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activities.isEmpty()) && ((tb.getLastScheduled()) != null)) { schedulable.Schedulable lastScheduled = tb.getLastScheduled().getValue(); if (lastScheduled instanceof schedulable.Activity) { schedulable.Activity activity = ((schedulable.Activity) (lastScheduled)); return ((activity.location) != null) && (activity.location.equals(tb.getEndLocation())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7211/buggy-version/src.state.SchedulingState.java", "BodyUseAPI": ["activity.location.equals(tb.getEndLocation())", "tb.getLastScheduled().getValue()", "time.TimeBlock.getLastScheduled()", "time.TimeBlock.getEndLocation()"], "Fixed commit": "55f9ad09bd11dc2040281e1b1286e6996e12a92c", "Url": "https://api.github.com/repos/bettytuan0209/travelscheduler", "Date": "2013-11-22T20:32:48Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checker.isAlive()) { checker.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1000/buggy-version/ROTW.src.userInterface.server.Authentication.java", "BodyUseAPI": ["java.lang.Thread.interrupt()"], "Fixed commit": "bdf7192fffedd59703b62200b314091011fc886c", "Url": "https://api.github.com/repos/Alchemy-Meister/RedesDeOrdenadoresTW", "Date": "2013-11-11T10:21:15Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text.endsWith(\"\\n\")) == false) { plantUmlSource.append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8093/buggy-version/WEB-INF.src.net.sourceforge.plantuml.servlet.PlantUmlServlet.java", "BodyUseAPI": [], "Fixed commit": "dac7c9f9451e7923320a84b47e8520e222d9b932", "Url": "https://api.github.com/repos/plantuml/plantuml-server", "Date": "2011-02-17T09:30:21Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a > 0) { PV -= nbPV; }else { PV = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2857/buggy-version/src.tp3.Combatant.java", "BodyUseAPI": [], "Fixed commit": "09ac67e8d8b5563bd9e543d49389c295ca8aadfb", "Url": "https://api.github.com/repos/alexCampus/RPG_Java", "Date": "2017-03-23T14:55:57Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tmpImageFile.delete())) { android.util.Log.d(\"EntouragePhoto\", \"Failed to delete the temporary photo file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4427/buggy-version/app.src.main.java.social.entourage.android.authentication.login.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "05c4863801d5785b00f683c4e4439e27cb5fb85d", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-07-21T10:40:38Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.otavanopisto.kuntaapi.server.rest.model.Tile.getFeaturedMedia()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (featuredMediaId != null) { fi.metatavu.management.client.model.Attachment featuredMedia = findMedia(organizationId, featuredMediaId); if ((featuredMedia != null) && ((featuredMedia.getMediaType()) == (fi.metatavu.management.client.model.Attachment.MediaTypeEnum.IMAGE))) { fi.otavanopisto.kuntaapi.server.rest.model.Attachment attachment = translateAttachment(organizationId, featuredMedia); if (attachment != null) { return java.util.Collections.singletonList(attachment); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1872/buggy-version/src.main.java.fi.otavanopisto.kuntaapi.server.integrations.management.ManagementTileProvider.java", "BodyUseAPI": ["fi.otavanopisto.kuntaapi.server.integrations.management.ManagementTileProvider.findMedia(fi.otavanopisto.kuntaapi.server.id.OrganizationId,java.lang.Integer)"], "Fixed commit": "c7edcf0ba6a3efb5a7cd1b4f6cca334c100abc0c", "Url": "https://api.github.com/repos/Metatavu/kunta-api-server", "Date": "2016-12-05T12:52:27Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.otavanopisto.kuntaapi.server.integrations.management.ManagementTranslator.getImageAttachmentId(fi.otavanopisto.kuntaapi.server.id.OrganizationId,featuredMedia.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (id == null) { logger.severe(java.lang.String.format(\"Could not translate featured media %d into Kunta API id\", featuredMedia.getId())); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1872/buggy-version/src.main.java.fi.otavanopisto.kuntaapi.server.integrations.management.ManagementTranslator.java", "BodyUseAPI": [], "Fixed commit": "c7edcf0ba6a3efb5a7cd1b4f6cca334c100abc0c", "Url": "https://api.github.com/repos/Metatavu/kunta-api-server", "Date": "2016-12-05T12:52:27Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((width < 1) || (height < 1)) { throw new java.lang.IllegalArgumentException(\"Width & Height of fillAsrc must be greater than 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1473/buggy-version/CodenameOne.src.com.codename1.ui.Graphics.java", "BodyUseAPI": [], "Fixed commit": "82373114b62fe02fb403f11236770b140521295d", "Url": "https://api.github.com/repos/diamonddevgroup/CodenameOne", "Date": "2017-02-18T09:55:06Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.delving.x3ml.ArgValues.getArgValue(customArg.name,eu.delving.x3ml.SourceType)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (argValue == null) { throw eu.delving.x3ml.X3MLEngine.exception(((((((((((\"Cannot find arg with name \\\"\" + (customArg.name)) + \"\\\"\") + \" in generator with name \\\"\") + (generator.name)) + \"\\\"\") + \"[Mapping: \") + (RootElement.mappingCounter)) + \", Link: \") + (RootElement.linkCounter)) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4897/buggy-version/src.main.java.eu.delving.x3ml.X3MLGeneratorPolicy.java", "BodyUseAPI": [], "Fixed commit": "de8485bea6b54889631759377cb1658e80e7df22", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2016-02-05T09:22:39Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lineupBoxes[i]) != null) lineupBoxes[i].setChecked(checked);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3366/buggy-version/src.com.vbh.virtualboathouse.CrewSelectorActivity.java", "BodyUseAPI": ["lineupBoxes[i].setChecked(boolean)"], "Fixed commit": "2b58f62041f7b27867bfda1d9174d7575288cc1b", "Url": "https://api.github.com/repos/sfjordan/VirtualBH", "Date": "2014-05-12T16:09:07Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.matech.findinmobile.ScalableMap.clickHere(android.graphics.PointF)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(room.equals(\"\"))) { selectRoom(search.getText().toString()); }else { android.widget.LinearLayout placeCard = ((android.widget.LinearLayout) (findViewById(R.id.placeCard))); placeCard.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6511/buggy-version/app.src.main.java.hu.matech.findinmobile.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f216931d8b642cc1a1e774059540fcabf2d285ef", "Url": "https://api.github.com/repos/matech96/find_In", "Date": "2016-11-27T00:24:48Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (pasteDetail instanceof com.silverpeas.component.kmelia.KmeliaCopyDetail) { com.silverpeas.component.kmelia.KmeliaCopyDetail copyDetail = ((com.silverpeas.component.kmelia.KmeliaCopyDetail) (pasteDetail)); setPublicationStatus(copyDetail.getPublicationStatus()); setPublicationTargetValidatorIds(copyDetail.getPublicationValidatorIds()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2084/buggy-version/kmelia.kmelia-ejb.src.main.java.com.silverpeas.component.kmelia.KmeliaCopyDetail.java", "BodyUseAPI": [], "Fixed commit": "15e6a8892c0abb9a3caeb4ad307b6da04c7d9074", "Url": "https://api.github.com/repos/NicolasEYSSERIC/Silverpeas-Components", "Date": "2017-02-17T13:28:51Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.auto.value.processor.Optionalish.createIfOptional(javax.lang.model.type.TypeMirror,typeSimplifier.simplifyRaw(propertyTypeMirror))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (propertyOptionalish != null) { propertyTypeMirror = propertyOptionalish.getContainedType(typeUtils); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4893/buggy-version/value.src.main.java.com.google.auto.value.processor.BuilderMethodClassifier.java", "BodyUseAPI": ["com.google.auto.value.processor.Optionalish.getContainedType(javax.lang.model.util.Types)"], "Fixed commit": "925a9e6341d092beda13c50cfe677994d3249e93", "Url": "https://api.github.com/repos/kenzierocks/auto", "Date": "2017-03-08T03:30:47Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (archive instanceof org.jboss.shrinkwrap.api.GenericArchive) { archive.as(org.jboss.shrinkwrap.api.exporter.TarExporter.class).exportTo(deployableOutputFile, true); }else { archive.as(org.jboss.shrinkwrap.api.exporter.ZipExporter.class).exportTo(deployableOutputFile, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6187/buggy-version/containerless.src.main.java.org.arquillian.cube.impl.containerless.ContainerlessDockerDeployableContainer.java", "BodyUseAPI": ["org.jboss.shrinkwrap.api.Archive<?>.as(java.lang.Class)", "archive.as(org.jboss.shrinkwrap.api.exporter.TarExporter.class).exportTo(java.io.File,boolean)", "archive.as(org.jboss.shrinkwrap.api.exporter.ZipExporter.class).exportTo(java.io.File,boolean)", "org.jboss.shrinkwrap.api.Archive<?>.as(java.lang.Class)"], "Fixed commit": "d00befe53d7628aa72e4290421866f20295ef5a2", "Url": "https://api.github.com/repos/lordofthejars/arquillian-cube", "Date": "2015-01-13T18:17:31Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (inp != null) { inp.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8065/buggy-version/src.main.java.org.dragonet.DragonetServer.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "fea3b3b05db4735b5fb91e27f46a53605819f3cc", "Url": "https://api.github.com/repos/DragonetMC/Dragonet-Legacy", "Date": "2015-06-05T14:51:36Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Configs.Mod.disableVersionCheck) player.addChatMessage(new net.minecraft.util.ChatComponentText(UpdateHandler.status));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7287/buggy-version/src.main.java.com.kithio.thallus.handler.PlayerEventHandler.java", "BodyUseAPI": [], "Fixed commit": "041c44e94264694caf7208d2f4735af82c6dee41", "Url": "https://api.github.com/repos/Kithio/Thallus", "Date": "2015-05-27T14:52:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity.isEmpty()) { entity = \"{}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/177/buggy-version/src.com.sap.sea.Docker.java", "BodyUseAPI": [], "Fixed commit": "8e5650d04f5a0f1ff1e78e3ce334a4432897b867", "Url": "https://api.github.com/repos/templefox/Sea", "Date": "2015-01-06T08:22:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity.isEmpty()) { entity = \"{}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/177/buggy-version/src.com.sap.sea.Docker.java", "BodyUseAPI": [], "Fixed commit": "8e5650d04f5a0f1ff1e78e3ce334a4432897b867", "Url": "https://api.github.com/repos/templefox/Sea", "Date": "2015-01-06T08:22:41Z"},
{"Line": "=>1033", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (responseHandler != null) { responseHandler.onSuccess(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3598/buggy-version/src.main.java.com.alwaysallthetime.adnlibutils.manager.MessageManager.java", "BodyUseAPI": ["com.alwaysallthetime.adnlibutils.manager.MessageManager.MessageDeletionResponseHandler.onSuccess()"], "Fixed commit": "23c8761562844036a40d5cec2a128bdbe4845729", "Url": "https://api.github.com/repos/rrbrambley/ADNLib-utils", "Date": "2014-01-03T16:32:24Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newLocation.getX()) == 0) { newX = 0; }else { newX = (!(invertAxisX)) ? newLocation.getX() : (-1) * (newLocation.getX()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6080/buggy-version/src.main.java.org.openpnp.machine.reference.driver.FireNodeJsDriver.java", "BodyUseAPI": ["org.openpnp.model.Location.getX()", "org.openpnp.model.Location.getX()"], "Fixed commit": "84f0c7635462df91dcd3778ffb649f2517ea1744", "Url": "https://api.github.com/repos/exmachina-dev/openpnp", "Date": "2016-04-07T17:24:40Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newLocation.getY()) == 0) { newY = 0; }else { newY = (!(invertAxisY)) ? newLocation.getY() : (-1) * (newLocation.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6080/buggy-version/src.main.java.org.openpnp.machine.reference.driver.FireNodeJsDriver.java", "BodyUseAPI": ["org.openpnp.model.Location.getY()", "org.openpnp.model.Location.getY()"], "Fixed commit": "84f0c7635462df91dcd3778ffb649f2517ea1744", "Url": "https://api.github.com/repos/exmachina-dev/openpnp", "Date": "2016-04-07T17:24:40Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.matsim.contrib.drt.optimizer.VehicleData.createVehicleData(org.matsim.contrib.dvrp.data.Vehicle)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (e != null) { entries.set(idx, createVehicleData(vEntry.vehicle)); }else { entries.remove(idx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5333/buggy-version/contribs.drt.src.main.java.org.matsim.contrib.drt.optimizer.VehicleData.java", "BodyUseAPI": [], "Fixed commit": "d547116c062a2aa6be1a7353ade3e0b9a9286bf5", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2017-08-29T09:42:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.y) == (that.y)) return +0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3605/buggy-version/lesson3.src.Point.java", "BodyUseAPI": [], "Fixed commit": "c2d24939587ee0cb7f3557a41c9255a95e4384ab", "Url": "https://api.github.com/repos/bernardito-luis/algs4", "Date": "2017-03-15T06:20:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.IOUtils.toString(java.io.InputStream,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(org.springframework.util.StringUtils.isEmpty(responseInputString))) { logger.info((\"\u5fae\u4fe1\u63a5\u53e3\u4f20\u6765\u62a5\u6587\uff1a\" + responseInputString)); java.lang.String xml = com.stem.wechat.WeChat.processing(responseInputString, path); if (!(org.springframework.util.StringUtils.isEmpty(xml))) { writer.write(xml); }else { logger.error(\"\u54cd\u5e94xml\u5f02\u5e38\u4e3a\u7a7a\uff01\"); writer.write(\"\"); } }else { logger.error(\"\u5fae\u4fe1\u54cd\u5e94\u5185\u5bb9\u4e3a\u7a7a\uff01\"); writer.write(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4690/buggy-version/Tiger.src.com.stem.controller.StatementController.java", "BodyUseAPI": ["com.stem.wechat.WeChat.processing(java.lang.String,java.lang.String)", "org.slf4j.Logger.info(java.lang.String)"], "Fixed commit": "df466e863102fe2aca696d67e1e5336632137e67", "Url": "https://api.github.com/repos/zrbsprite/Stem", "Date": "2016-01-15T03:48:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (props.getType().equals(\"List\")) { }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/265/buggy-version/NetworkProtocolModeler.src.runtime.Serializer.java", "BodyUseAPI": [], "Fixed commit": "3e145e5cc29301224adb29f9190d08819dba2397", "Url": "https://api.github.com/repos/gaborbsd/NetworkProtocolDSL", "Date": "2014-04-08T16:25:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (props.getType().equals(\"String\")) { runtime.Serializer.serializeToBytes(((java.lang.String) (field.get(serializable))), props.getByteLen(), ret, off); }else if (props.getType().equals(\"byte[]\")) { runtime.Serializer.serializeToBytes(((byte[]) (field.get(serializable))), props.getByteLen(), ret, off); }else if (props.getType().equals(\"List\")) { }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/265/buggy-version/NetworkProtocolModeler.src.runtime.Serializer.java", "BodyUseAPI": ["props.getType().equals(java.lang.String)", "runtime.VariableProps.getType()", "runtime.Serializer.serializeToBytes(java.lang.Object,props.getByteLen(),byte[],byte)", "runtime.VariableProps.getByteLen()", "props.getType().equals(java.lang.String)", "runtime.VariableProps.getByteLen()", "runtime.VariableProps.getType()", "runtime.Serializer.serializeToBytes(java.lang.Object,props.getByteLen(),byte[],byte)"], "Fixed commit": "3e145e5cc29301224adb29f9190d08819dba2397", "Url": "https://api.github.com/repos/gaborbsd/NetworkProtocolDSL", "Date": "2014-04-08T16:25:59Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((seekBar.getId()) == (seekbarsID[i])) { if ((global.mSocketThread) != null) global.mSocketThread.write(data); else { android.util.Log.e(\"ControllerActivity\", (data + \" : Bluetooth is not connected!\")); } seekbarValue[i].setText((progress + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7365/buggy-version/app.src.main.java.com.icaynia.dmxario.ControllerActivity.java", "BodyUseAPI": ["seekbarValue[i].setText(java.lang.String)"], "Fixed commit": "9df89cd6bbe3a59758a3e744d49df80f06c06527", "Url": "https://api.github.com/repos/sionuuu/DMXArio", "Date": "2016-11-07T05:35:33Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getOwner().getConfig(WeaveInfrastructure.ENABLED)) { brooklyn.entity.container.weave.WeaveContainer weave = getOwner().getAttribute(WeaveContainer.WEAVE_CONTAINER); java.net.InetAddress address = getOwner().getAttribute(WeaveContainer.WEAVE_ADDRESS); ((brooklyn.entity.basic.AbstractEntity) (entity)).setConfigEvenIfOwned(SubnetTier.SUBNET_CIDR, weave.getConfig(WeaveContainer.WEAVE_CIDR)); ((brooklyn.entity.basic.AbstractEntity) (entity)).setAttribute(Attributes.SUBNET_ADDRESS, address.getHostAddress()); }else { ((brooklyn.entity.basic.AbstractEntity) (entity)).setConfigEvenIfOwned(SubnetTier.SUBNET_CIDR, Cidr.UNIVERSAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3714/buggy-version/docker.src.main.java.brooklyn.location.docker.DockerHostLocation.java", "BodyUseAPI": [], "Fixed commit": "640a2d2e4425ea6827ad61186faefc5952965dd7", "Url": "https://api.github.com/repos/brooklyncentral/clocker", "Date": "2014-10-10T19:52:42Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entry.getKey().equals(EDBConstants.MODEL_VERSION)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3100/buggy-version/components.edb.src.main.java.org.openengsb.core.edb.internal.JPADatabase.java", "BodyUseAPI": [], "Fixed commit": "566aadad195e9ab7d835e48ee2121b5541af9946", "Url": "https://api.github.com/repos/LStampf/openengsb-framework", "Date": "2012-03-11T19:28:41Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (metterDistance > 0) { virtualDistance = (distance * pxCanvas) / metterDistance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1411/buggy-version/src.main.java.co.geeksters.radar.Radar.java", "BodyUseAPI": [], "Fixed commit": "9a1f831782dce27ca0b18e0bd7bdfee8a11ce9dd", "Url": "https://api.github.com/repos/karamsa/android-radar", "Date": "2016-12-08T14:39:41Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t instanceof java.lang.reflect.TypeVariable) { recursiveBounds.add(rawType); resultTypeArguments[i] = ma.glasnost.orika.metadata.TypeFactory.limitedValueOf(t, recursiveBounds); recursiveBounds.remove(rawType); }else { resultTypeArguments[i] = ma.glasnost.orika.metadata.TypeFactory.limitedValueOf(t, recursiveBounds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4165/buggy-version/core.src.main.java.ma.glasnost.orika.metadata.TypeUtil.java", "BodyUseAPI": ["ma.glasnost.orika.metadata.TypeFactory.limitedValueOf(java.lang.reflect.Type,java.util.Set<java.lang.reflect.Type>)", "ma.glasnost.orika.metadata.TypeFactory.limitedValueOf(java.lang.reflect.Type,java.util.Set<java.lang.reflect.Type>)"], "Fixed commit": "74fb622c443818953c5ff77546420384fbd4635e", "Url": "https://api.github.com/repos/brabenetz/orika", "Date": "2017-01-28T08:45:24Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noFocusWindows == (windows.size())) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3715/buggy-version/src.main.java.com.googlecode.lanterna.gui2.MultiWindowTextGUI.java", "BodyUseAPI": [], "Fixed commit": "ceeb0f3c0764071013f58090e7108a2a5541f2e2", "Url": "https://api.github.com/repos/jaboj78/lanterna", "Date": "2017-06-22T12:56:37Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeWindow) == null) { nextWindow = (reverse) ? windows.get(((windows.size()) - 1)) : windows.get(0); }else { nextWindow = getNextWindow(reverse, activeWindow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3715/buggy-version/src.main.java.com.googlecode.lanterna.gui2.MultiWindowTextGUI.java", "BodyUseAPI": [], "Fixed commit": "ceeb0f3c0764071013f58090e7108a2a5541f2e2", "Url": "https://api.github.com/repos/jaboj78/lanterna", "Date": "2017-06-22T12:56:37Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.vloxlands.game.Game.server) != null) Game.server.shotdown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3826/buggy-version/src.com.vloxlands.Vloxlands.java", "BodyUseAPI": [], "Fixed commit": "87fe69e1b302ad39f1fff304a447b30f14859281", "Url": "https://api.github.com/repos/Ichmed/Vloxlands", "Date": "2013-09-09T11:05:58Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scanner.hasNext()) line = fetchData(scanner);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3289/buggy-version/biojava-core.src.main.java.org.biojava.nbio.core.search.io.blast.BlastTabularParser.java", "BodyUseAPI": ["org.biojava.nbio.core.search.io.blast.BlastTabularParser.fetchData(java.util.Scanner)"], "Fixed commit": "b78d3870ed5983a107cee53c932fc715531fc342", "Url": "https://api.github.com/repos/paolopavan/biojava", "Date": "2015-10-05T17:24:14Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (socket != null) { synchronized(mBluetoothChatService) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8145/buggy-version/app.src.main.java.com.voyager.btchat.thread.AcceptThread.java", "BodyUseAPI": [], "Fixed commit": "ee552719cb0eb026c20ebcd80a382fd4cc7453d1", "Url": "https://api.github.com/repos/a-voyager/BTChat", "Date": "2015-11-02T12:03:32Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cropImageCallback) != null) { return cropImageCallback.setCropParams(requestCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8872/buggy-version/imageselect.src.main.java.com.rdshoep.android.image.ImageCropper.java", "BodyUseAPI": [], "Fixed commit": "fb93bd73cd504864a496080068a3009472ec9216", "Url": "https://api.github.com/repos/rdshoep/CropImage", "Date": "2016-07-05T07:11:13Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (key != null) { checkMapResolve(object, key.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2021/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": ["com.alibaba.fastjson.parser.DefaultJSONParser.checkMapResolve(java.util.Map,java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "736cd865a5301faab89525a80a97b13cc933c294", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-10-01T05:59:25Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentHolder) == null) { return super.toString(); }else { return ((((super.toString()) + \" , \") + (currentHolder)) + \" , \") + (dueDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4123/buggy-version/05Library.CirculatingBook.java", "BodyUseAPI": [], "Fixed commit": "1dc386951a7d7ed725c4e9dcd51e5aaa78554eb2", "Url": "https://api.github.com/repos/horazio/MKS21X", "Date": "2017-11-28T21:49:11Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.isDirectory()) { org.netbeans.spi.project.ui.support.ProjectChooser.setProjectsFolder(dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3709/buggy-version/netbeans-gradle-plugin.src.main.java.org.netbeans.gradle.project.newproject.NewProjectUtils.java", "BodyUseAPI": ["org.netbeans.spi.project.ui.support.ProjectChooser.setProjectsFolder(java.io.File)"], "Fixed commit": "997e5e08d5e346a37de98de9aff1065ce714b732", "Url": "https://api.github.com/repos/mam0nth/netbeans-gradle-project", "Date": "2014-01-18T12:27:31Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elementNode.getName().equals(\"br\")) { allRuby.add(new org.yomiassist.LinebreakRuby()); }else { allRuby.addAll(textAnalyzer.analyzeText(elementNode.getText(), forcedRubies, edictDictionary, knownWords)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/341/buggy-version/src.main.java.org.yomiassist.YomiassistProcessor.java", "BodyUseAPI": ["org.yomiassist.GoSenTextAnalyzer.analyzeText(elementNode.getText(),java.util.Map<java.lang.String, org.yomiassist.Ruby>,org.yomiassist.sourcedata.Edict,org.yomiassist.sourcedata.KnownWords)", "org.jdom.Element.getText()", "java.util.List<org.yomiassist.Ruby>.addAll(textAnalyzer.analyzeText(elementNode.getText(), forcedRubies, edictDictionary, knownWords))"], "Fixed commit": "e94ae63020094942c7249042577782b950c94869", "Url": "https://api.github.com/repos/rnorth/yomiassist", "Date": "2011-03-31T10:50:53Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.europeana.corelib.solr.service.SearchService.getMetaInfo(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (webResourceMetaInfo == null) { return eu.europeana.api2.utils.JsonUtils.toJson(objectResult, callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1637/buggy-version/api2-war.src.main.java.eu.europeana.api2.v2.web.controller.ObjectController.java", "BodyUseAPI": [], "Fixed commit": "8b39c4225c81749447f35a8f687f14fd86290257", "Url": "https://api.github.com/repos/europeana/api2", "Date": "2015-02-20T08:03:15Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.util.config.Configuration.getKeys(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (keys != null) { for (java.lang.String key : keys) { playersGroup.put(key.toLowerCase(), config.getString((\"PlayerGroupAssignments.\" + key), com.bekvon.bukkit.residence.permissions.PermissionManager.defaultGroup).toLowerCase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2259/buggy-version/src.com.bekvon.bukkit.residence.permissions.PermissionManager.java", "BodyUseAPI": [], "Fixed commit": "24e88b866ccfa248f5fc3e5f1a7df60c2e3f491f", "Url": "https://api.github.com/repos/bekvon/Residence", "Date": "2011-04-11T21:27:58Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((columnAccess) instanceof com.raizlabs.android.dbflow.processor.definition.column.EnumColumnAccess) { columnAccessString = columnAccessString.substring(0, columnAccessString.lastIndexOf(\".name()\")); }else if ((columnAccess) instanceof com.raizlabs.android.dbflow.processor.definition.column.BooleanTypeColumnAccess) { columnAccessString = columnAccessString.substring(0, columnAccessString.lastIndexOf(\" ? 1 : 0\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2764/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.definition.column.ColumnDefinition.java", "BodyUseAPI": [], "Fixed commit": "f11c206b26155c5ae90661b341a5d5fec8abf7bc", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2016-05-03T02:49:14Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inact.getMyListOfBreed_m().size()) != 0) { frameRemoover(new dev.eyesless.needmypuppy.Recycle_view_fragment(), \"RecycleView\"); }else toastmaker(getString(R.string.no_breed_found));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8139/buggy-version/app.src.main.java.dev.eyesless.needmypuppy.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "06a38befc0d5e0b74b121366225fd357898cc40e", "Url": "https://api.github.com/repos/kalininaleksandrv/NeedMyPuppyRelease_v_0.1", "Date": "2017-08-25T10:31:50Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kr.blogspot.charlie0301.impl.util.Utils.getDPSize(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (px > 130) { px = kr.blogspot.charlie0301.impl.util.Utils.getDPSize(130); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2931/buggy-version/app.src.main.java.kr.blogspot.charlie0301.WimpleActivity.java", "BodyUseAPI": [], "Fixed commit": "8822d36530d36bb60792db6cf219f8dde0c32d8a", "Url": "https://api.github.com/repos/hallower/wimple", "Date": "2016-03-12T04:42:58Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jline.console.ConsoleReader.readLine((first ? getPrompt() : getAltPrompt()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (line == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7345/buggy-version/src.com.obidea.semantika.cli2.runtime.Console.java", "BodyUseAPI": [], "Fixed commit": "9b63c56c84862e9321e628175cb6e36bae616b9d", "Url": "https://api.github.com/repos/obidea/semantika-cli2", "Date": "2014-07-28T11:11:55Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (archive.getEntries().isEmpty()) { return new java.util.HashMap<java.lang.String, java.lang.Object>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9099/buggy-version/s-ramp-client.src.main.java.org.overlord.sramp.client.SrampAtomApiClient.java", "BodyUseAPI": [], "Fixed commit": "99ff7d96154f01dc485353cfd57bf4a92bde8852", "Url": "https://api.github.com/repos/metlos/s-ramp", "Date": "2013-04-16T19:33:21Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wb.nextgenlibrary.data.MovieMetaData.getShopItemFromMap(java.util.HashMap<java.lang.String, com.wb.nextgenlibrary.data.MovieMetaData.ShopItem>,java.util.HashMap<java.lang.String, com.wb.nextgenlibrary.parser.appdata.AppDataType>,java.util.HashMap<java.lang.String, com.wb.nextgenlibrary.parser.manifest.schema.v1_4.InventoryMetadataType>,java.lang.String,manifest.locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(com.wb.nextgenlibrary.util.utils.StringHelper.isEmpty(shopItem.videoPresentationId))) && (!(shopItemsWithVideo.contains(shopItem)))) { shopItemsWithVideo.add(shopItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3961/buggy-version/src.com.wb.nextgenlibrary.data.MovieMetaData.java", "BodyUseAPI": ["java.util.List<com.wb.nextgenlibrary.data.MovieMetaData.ShopItem>.add(com.wb.nextgenlibrary.data.MovieMetaData.ShopItem)"], "Fixed commit": "73882c2e305dbdeda938846cced6594ba37884da", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2017-05-09T19:07:04Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((info.groupOwnerAddress) != null) { groupOwnerAddress = info.groupOwnerAddress.getHostAddress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5224/buggy-version/Tendu-android.src.it.chalmers.tendu.network.wifip2p.WifiHandler.java", "BodyUseAPI": ["info.groupOwnerAddress.getHostAddress()"], "Fixed commit": "ed9d410ad897ca33edeb9723c1f521e1f3f0c773", "Url": "https://api.github.com/repos/tortal/IT2-LP1-Tendu", "Date": "2013-10-11T08:18:07Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN)) { mManager.stopPeerDiscovery(mChannel, new android.net.wifi.p2p.WifiP2pManager.ActionListener() { @java.lang.Override public void onSuccess() { } @java.lang.Override public void onFailure(int reason) { android.util.Log.d(it.chalmers.tendu.network.wifip2p.WifiHandler.TAG, (\"Couldn't stop peer deiscovery: \" + (translateErrorCodeToMessage(reason)))); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5224/buggy-version/Tendu-android.src.it.chalmers.tendu.network.wifip2p.WifiHandler.java", "BodyUseAPI": [], "Fixed commit": "ed9d410ad897ca33edeb9723c1f521e1f3f0c773", "Url": "https://api.github.com/repos/tortal/IT2-LP1-Tendu", "Date": "2013-10-11T08:18:07Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(visited.contains(toBeVisitedStatePair))) { toBeVisited.push(toBeVisitedStatePair); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8396/buggy-version/src.main.java.converter.automaton.Explorer.java", "BodyUseAPI": ["java.util.Stack<converter.automaton.StatePair>.push(converter.automaton.StatePair)"], "Fixed commit": "005165ffef06d8f0788b5cfd7c1fd053be30c90d", "Url": "https://api.github.com/repos/alaponin/AutomatedRuletoNetEnactor", "Date": "2017-02-01T17:10:46Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gpsLocationListener) != null) locationManager.removeUpdates(gpsLocationListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7621/buggy-version/app.src.main.java.com.example.christian.mobilitydataapp.MapTabActivity.java", "BodyUseAPI": [], "Fixed commit": "66b323c54243cff3c71172441c07e9aeca373b12", "Url": "https://api.github.com/repos/christian-cl/NEOTrack", "Date": "2015-07-06T11:53:54Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gpsLocationListener) != null) locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, intervalTimeGPS, minDistance, gpsLocationListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7621/buggy-version/app.src.main.java.com.example.christian.mobilitydataapp.MapTabActivity.java", "BodyUseAPI": [], "Fixed commit": "66b323c54243cff3c71172441c07e9aeca373b12", "Url": "https://api.github.com/repos/christian-cl/NEOTrack", "Date": "2015-07-06T11:53:54Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gpsLocationListener) != null) locationManager.removeUpdates(gpsLocationListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7621/buggy-version/app.src.main.java.com.example.christian.mobilitydataapp.MapTabActivity.java", "BodyUseAPI": [], "Fixed commit": "66b323c54243cff3c71172441c07e9aeca373b12", "Url": "https://api.github.com/repos/christian-cl/NEOTrack", "Date": "2015-07-06T11:53:54Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loadout) instanceof lisong_mechlab.model.loadout.LoadoutStandard) setText(lisong_mechlab.view.mechlab.PartList.Model.DYN_ARMOR); else setText(lisong_mechlab.view.mechlab.PartList.Model.FIX_ARMOR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4337/buggy-version/src.lisong_mechlab.view.mechlab.PartList.java", "BodyUseAPI": [], "Fixed commit": "f1af1b9bf036550fbb70fb4c43c132997428ff83", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-06-20T19:13:39Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loadout) instanceof lisong_mechlab.model.loadout.LoadoutStandard) setText(lisong_mechlab.view.mechlab.PartList.Model.DYN_STRUCT); else setText(lisong_mechlab.view.mechlab.PartList.Model.FIX_STRUCT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4337/buggy-version/src.lisong_mechlab.view.mechlab.PartList.java", "BodyUseAPI": [], "Fixed commit": "f1af1b9bf036550fbb70fb4c43c132997428ff83", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-06-20T19:13:39Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ActivePointerList.isEmpty())) { java.lang.Integer active_pointer = ActivePointerList.get(0); Gdx.app.log(TAG, (\"Still Active:\" + active_pointer)); com.badlogic.gdx.math.Vector3 touch3D = camera.unproject(new com.badlogic.gdx.math.Vector3(Gdx.input.getX(active_pointer), Gdx.input.getY(active_pointer), 0)); InitialTouchPos.set(touch3D); InitialCameraPos.set(camera.position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7277/buggy-version/core.src.com.mygdx.game.GestureProcessor.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "5190a5a7892d6c56570cbeedb42bf6e0dac3db42", "Url": "https://api.github.com/repos/m-chouhan/puralekhak3.0", "Date": "2016-03-24T01:23:37Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sensor.getDeviceConfig().getSensorDataClass()) == (se.hal.struct.devicedata.PowerConsumptionSensorData.class)) estimatedData = estimatedData / 1000.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/754/buggy-version/src.se.hal.util.AggregateDataListSqlResult.java", "BodyUseAPI": [], "Fixed commit": "5df0bd1f28ca0523da1fc3a07f25939b3f9a613d", "Url": "https://api.github.com/repos/Ziver/hal", "Date": "2016-10-04T19:56:56Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.juddi.v3.client.config.UDDIClient.getClerk(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clerk == null) { throw new org.apache.commons.configuration.ConfigurationException(((\"could not locate the UDDI Clerk '\" + clerkName) + \"'.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/31/buggy-version/juddi-client.src.main.java.org.apache.juddi.v3.client.config.UDDIClient.java", "BodyUseAPI": [], "Fixed commit": "bbf1cccd63a65593b023bb35a5f3da4576c9437f", "Url": "https://api.github.com/repos/apache/juddi", "Date": "2015-10-28T23:16:08Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getActivity().isFinishing())) progressDialog.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1104/buggy-version/app.src.main.java.in.silive.scrolls.Fragments.UploadDoc.java", "BodyUseAPI": [], "Fixed commit": "213fc03a82e9da0422b602b36ef12a64e142b5a3", "Url": "https://api.github.com/repos/akritikts/Scrolls-16", "Date": "2016-09-18T14:01:26Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getActivity().isFinishing())) progressDialog.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1104/buggy-version/app.src.main.java.in.silive.scrolls.Fragments.Register.java", "BodyUseAPI": [], "Fixed commit": "213fc03a82e9da0422b602b36ef12a64e142b5a3", "Url": "https://api.github.com/repos/akritikts/Scrolls-16", "Date": "2016-09-18T14:01:26Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getActivity().isFinishing())) progressDialog.show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1104/buggy-version/app.src.main.java.in.silive.scrolls.Fragments.QueryUs.java", "BodyUseAPI": [], "Fixed commit": "213fc03a82e9da0422b602b36ef12a64e142b5a3", "Url": "https://api.github.com/repos/akritikts/Scrolls-16", "Date": "2016-09-18T14:01:26Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rooms.get(i).getPuzzle()) instanceof PuzzleRiddle) { ((PuzzleRiddle) (rooms.get(i).getPuzzle())).setLockedRoom(rooms); rooms.get(i).getPuzzle().initialize(); }else if ((rooms.get(i).getPuzzle()) instanceof PuzzleNumber) { ((PuzzleNumber) (rooms.get(i).getPuzzle())).setLockedRoom(rooms); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4048/buggy-version/src.ObjectHolder.java", "BodyUseAPI": ["rooms.get(i).getPuzzle()", "rooms.get(i).getPuzzle().initialize()", "((PuzzleRiddle) (rooms.get(i).getPuzzle())).setLockedRoom(java.util.ArrayList<Room>)", "java.util.ArrayList<Room>.get(int)", "rooms.get(i).getPuzzle()", "rooms.get(i).getPuzzle()", "java.util.ArrayList<Room>.get(int)", "rooms.get(i).getPuzzle()", "((PuzzleNumber) (rooms.get(i).getPuzzle())).setLockedRoom(java.util.ArrayList<Room>)", "java.util.ArrayList<Room>.get(int)", "java.util.ArrayList<Room>.get(int)"], "Fixed commit": "8131e9a380b7f80f54c38fec8d71827d43d2188d", "Url": "https://api.github.com/repos/gutsuv/Escape-the-Tower", "Date": "2017-11-24T00:44:43Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFetchMessage)) { isFetchMessage = true; conversation.getMessage(LAST_MESSAGE_NUM, message, new com.tencent.TIMValueCallBack<java.util.List<com.tencent.TIMMessage>>() { @java.lang.Override public void onError(int i, java.lang.String s) { isFetchMessage = false; android.util.Log.e(com.tencent.qcloud.presentation.presenter.ChatPresenter.TAG, (\"get message error\" + s)); } @java.lang.Override public void onSuccess(java.util.List<com.tencent.TIMMessage> timMessages) { isFetchMessage = false; view.showMessage(timMessages); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4349/buggy-version/presentation.src.main.java.com.tencent.qcloud.presentation.presenter.ChatPresenter.java", "BodyUseAPI": [], "Fixed commit": "9c205603a03c6db1d9a266b8e4fa044620f05b59", "Url": "https://api.github.com/repos/zhaoyang21cn/Android_Suixinliao", "Date": "2016-08-16T10:42:34Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (osName.contains(\"Mac\")) { java.lang.System.out.println(\"rip in sheep\"); return; }else { TempMain.window.initWindow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5276/buggy-version/src.TempMain.java", "BodyUseAPI": [], "Fixed commit": "eefed72247d0fa3a286c761a57c91d8f66273d2c", "Url": "https://api.github.com/repos/Draco-314/lwjgl-first", "Date": "2017-04-01T14:39:43Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (speed != (-1)) return speed;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/477/buggy-version/opentripplanner-graph-builder.src.main.java.org.opentripplanner.graph_builder.impl.osm.WayPropertySet.java", "BodyUseAPI": [], "Fixed commit": "cd5953807330b462a6efdaf18270a93bf645fd74", "Url": "https://api.github.com/repos/WeeelsInc/OpenTripPlanner", "Date": "2013-02-20T22:17:20Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (settingsDirectory.isDirectory()) { java.io.File[] settingsFiles = settingsDirectory.listFiles(); for (int i = 0; i < (settingsFiles.length); i++) { settingsFiles[i].delete(); } settingsDirectory.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7472/buggy-version/org.eclipse.m2e.e4.service.src.org.eclipse.m2e.e4.service.MavenImportServiceImpl.java", "BodyUseAPI": ["java.io.File.delete()", "java.io.File.listFiles()"], "Fixed commit": "b36901040a8875717e10daf05c3adf57739162cf", "Url": "https://api.github.com/repos/comdirect/m2e-core", "Date": "2015-10-13T08:38:16Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.SparseArray<java.lang.Character>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) { c = 'T'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1139/buggy-version/awlib.src.main.java.de.aw.awlib.database.AWDBFormatter.java", "BodyUseAPI": [], "Fixed commit": "cb49be5cba6c8f55a87867d35106f79289283fbd", "Url": "https://api.github.com/repos/gitwalex/AWLib", "Date": "2016-12-04T09:26:28Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((altText == null) || (altText.isEmpty())) { text = ((pre + imgPre) + imgPost) + post; }else { text = (((((pre + imgPre) + imgPost) + \"<br>[<i>\") + altText) + \"</i>]\") + post; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6726/buggy-version/app.src.main.java.net.groboclown.groborss.handler.EntryTextBuilder.java", "BodyUseAPI": [], "Fixed commit": "65cee93ff7603526e99d449b3cb3aa181253192c", "Url": "https://api.github.com/repos/groboclown/GroboRSS", "Date": "2017-09-01T12:41:10Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.grasea.grandroid.ble.BluetoothLeService.getSupportedGattServices(com.grasea.grandroid.ble.controller.BleDevice)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (supportedGattServices != null) { for (android.bluetooth.BluetoothGattService service : supportedGattServices) { com.grasea.grandroid.ble.Config.logi((\"Add a Service:\" + (service.getUuid().toString()))); serviceHandlerMap.put(service.getUuid().toString(), new com.grasea.grandroid.ble.data.GattServiceChannelHandler(this, service)); } state = com.grasea.grandroid.ble.controller.BleDevice.ConnectionState.Connecting; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5026/buggy-version/grandroid-ble.src.main.java.com.grasea.grandroid.ble.controller.BleDevice.java", "BodyUseAPI": [], "Fixed commit": "62f0bc31df8767bd08859ab2704b75886fff81dd", "Url": "https://api.github.com/repos/Grasea/Grandroid2", "Date": "2017-06-05T05:57:41Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(network.getFeatureSet())) { if ((network.getFeatureSet().size()) != (networkPair.getInput().size())) { ml.shifu.shifu.core.Scorer.log.error((((\"Network and input size mismatch: Network Size = \" + (network.getFeatureSet().size())) + \"; Input Size = \") + (networkPair.getInput().size()))); continue; } }else { if ((network.getInputCount()) != (networkPair.getInput().size())) { ml.shifu.shifu.core.Scorer.log.error((((\"Network and input size mismatch: Network Size = \" + (network.getInputCount())) + \"; Input Size = \") + (pair.getInput().size()))); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2797/buggy-version/src.main.java.ml.shifu.shifu.core.Scorer.java", "BodyUseAPI": ["ml.shifu.shifu.core.dtrain.dataset.BasicFloatNetwork.getFeatureSet()", "org.slf4j.Logger.error((((\"Network and input size mismatch: Network Size = \" + (network.getInputCount())) + \"; Input Size = \") + (pair.getInput().size())))", "ml.shifu.shifu.core.dtrain.dataset.BasicFloatNetwork.getInputCount()", "ml.shifu.shifu.core.dtrain.dataset.BasicFloatNetwork.getFeatureSet()", "network.getFeatureSet().size()", "org.slf4j.Logger.error((((\"Network and input size mismatch: Network Size = \" + (network.getFeatureSet().size())) + \"; Input Size = \") + (networkPair.getInput().size())))", "ml.shifu.shifu.core.dtrain.dataset.BasicFloatNetwork.getInputCount()", "network.getFeatureSet().size()"], "Fixed commit": "214ad2c2c859b7a57a961ebaa8ea3cc45bd8e4e2", "Url": "https://api.github.com/repos/huzza/shifu", "Date": "2017-06-17T20:32:08Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model instanceof org.encog.neural.networks.BasicNetwork) { final org.encog.neural.networks.BasicNetwork network = ((org.encog.neural.networks.BasicNetwork) (model)); final org.encog.ml.data.MLDataPair networkPair = ml.shifu.shifu.util.CommonUtils.assembleNsDataPair(binCategoryMap, noVarSelect, modelConfig, columnConfigList, rawNsDataMap, cutoff, alg, null); if ((network.getInputCount()) != (networkPair.getInput().size())) { ml.shifu.shifu.core.Scorer.log.error((((\"Network and input size mismatch: Network Size = \" + (network.getInputCount())) + \"; Input Size = \") + (pair.getInput().size()))); continue; } tasks.add(new java.util.concurrent.Callable<org.encog.ml.data.MLData>() { @java.lang.Override public org.encog.ml.data.MLData call() throws java.lang.Exception { return network.compute(networkPair.getInput()); } }); }else if (model instanceof org.encog.ml.svm.SVM) { final org.encog.ml.svm.SVM svm = ((org.encog.ml.svm.SVM) (model)); if ((svm.getInputCount()) != (pair.getInput().size())) { ml.shifu.shifu.core.Scorer.log.error((((\"SVM and input size mismatch: SVM Size = \" + (svm.getInputCount())) + \"; Input Size = \") + (pair.getInput().size()))); continue; } tasks.add(new java.util.concurrent.Callable<org.encog.ml.data.MLData>() { @java.lang.Override public org.encog.ml.data.MLData call() throws java.lang.Exception { return svm.compute(pair.getInput()); } }); }else if (model instanceof ml.shifu.shifu.core.LR) { final ml.shifu.shifu.core.LR lr = ((ml.shifu.shifu.core.LR) (model)); if ((lr.getInputCount()) != (pair.getInput().size())) { ml.shifu.shifu.core.Scorer.log.error((((\"LR and input size mismatch: LR Size = \" + (lr.getInputCount())) + \"; Input Size = \") + (pair.getInput().size()))); continue; } tasks.add(new java.util.concurrent.Callable<org.encog.ml.data.MLData>() { @java.lang.Override public org.encog.ml.data.MLData call() throws java.lang.Exception { return lr.compute(pair.getInput()); } }); }else if (model instanceof ml.shifu.shifu.core.TreeModel) { final ml.shifu.shifu.core.TreeModel tm = ((ml.shifu.shifu.core.TreeModel) (model)); if ((tm.getInputCount()) != (pair.getInput().size())) { throw new java.lang.RuntimeException((((\"GBDT and input size mismatch: tm input Size = \" + (tm.getInputCount())) + \"; data input Size = \") + (pair.getInput().size()))); } tasks.add(new java.util.concurrent.Callable<org.encog.ml.data.MLData>() { @java.lang.Override public org.encog.ml.data.MLData call() throws java.lang.Exception { org.encog.ml.data.MLData result = tm.compute(pair.getInput()); return result; } }); }else { throw new java.lang.RuntimeException(\"unsupport models\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2797/buggy-version/src.main.java.ml.shifu.shifu.core.Scorer.java", "BodyUseAPI": [], "Fixed commit": "214ad2c2c859b7a57a961ebaa8ea3cc45bd8e4e2", "Url": "https://api.github.com/repos/huzza/shifu", "Date": "2017-06-17T20:32:08Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(retVal.getOwner().equalsIgnoreCase(requestingPlayer.getDisplayName()))) && ((retVal.getType()) == (Warp.Type.PRIVATE))) { retVal = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2539/buggy-version/src.main.java.net.niftymonkey.niftywarp.WarpManager.java", "BodyUseAPI": [], "Fixed commit": "096f76085fbfc4a6bc785f884c0edbb0ab1b9867", "Url": "https://api.github.com/repos/niftymonkey/NiftyWarp", "Date": "2011-06-17T07:51:13Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.libs.WS.HttpResponse.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseString.contains(\"Refresh token not valid\")) { play.Logger.error(\"No way to re-authenticate user. Refresh token not valid .clearing tokens\"); user.performedNapsterCheck = false; user.rdioCreds = null; user.save(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6909/buggy-version/app.controllers.Rdio.java", "BodyUseAPI": [], "Fixed commit": "0cf4295c07cbc6403cf0396e2c1fec0f75e63db7", "Url": "https://api.github.com/repos/eltmon/auricle", "Date": "2017-04-26T02:53:05Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpen()) helper.add(\"numberOfPages\", numberOfPages());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/927/buggy-version/src.main.java.com.freshbourne.io.FileResourceManager.java", "BodyUseAPI": [], "Fixed commit": "afe9e19e344f922d509329c29f8428c5395ef84a", "Url": "https://api.github.com/repos/rweng/jb-tree", "Date": "2011-11-04T05:29:01Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1156/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "18833a0c975f347d83fa7d60bc75d3ed7f461fa6", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1156/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "18833a0c975f347d83fa7d60bc75d3ed7f461fa6", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset + count) > length) { return new java.lang.String(document.characters, (inDocOffset + offset), (length - offset)); }else { return new java.lang.String(document.characters, (inDocOffset + offset), length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1156/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "18833a0c975f347d83fa7d60bc75d3ed7f461fa6", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1156/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "18833a0c975f347d83fa7d60bc75d3ed7f461fa6", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:13:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (noisy == true) java.lang.System.out.println(((((\"Snap Mismatch: |\" + myValue) + \"|\") + otherValue) + \"|\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6835/buggy-version/src.main.java.org.geepawhill.contentment.core.Snap.java", "BodyUseAPI": [], "Fixed commit": "3953ef78b29ff38a6e6ce32f54a7c1bbd17542f3", "Url": "https://api.github.com/repos/GeePawHill/contentment", "Date": "2016-10-09T00:30:41Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pivot < 0) pivot = depth % mod;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2568/buggy-version/JSAT.src.jsat.linear.vectorcollection.KDTree.java", "BodyUseAPI": [], "Fixed commit": "0bfd64b1fde67c85cb3c4a55ddf527dbcebb9313", "Url": "https://api.github.com/repos/TKlerx/JSAT", "Date": "2015-04-13T00:53:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.themappinator.grouponcalandar.model.Room>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(room.name.isEmpty())) { holder.tvRoomName.setText(title); }else { android.util.Log.e(\"RLA\", ((\"room:\" + (room.roomid)) + \" is mis- configured\")); holder.tvRoomName.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8729/buggy-version/app.src.main.java.com.themappinator.grouponcalandar.adapters.RoomListAdapter.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,((\"room:\" + (room.roomid)) + \" is mis- configured\"))"], "Fixed commit": "3a6147c932f408d9f0edb6b35d8782272e041bee", "Url": "https://api.github.com/repos/the-mappinator-3000/groupon-maps-android", "Date": "2015-12-07T05:35:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.TypedArray.getColor(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tintColor != 0) { mGroupIndicator.setTint(tintColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7964/buggy-version/PeriodicTable.src.main.java.com.frozendevs.periodictable.view.ExpandableIndicatorView.java", "BodyUseAPI": ["android.graphics.drawable.StateListDrawable.setTint(int)"], "Fixed commit": "c734a8b4231b715284948c466b0ca4bb71294e6c", "Url": "https://api.github.com/repos/Frozen-Developers/android-periodic-table", "Date": "2015-08-20T07:45:01Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pandora) == null) { com.aregner.android.pandoroid.PandoraRadioService.createPandoraRadioService(getApplicationContext()); pandora = com.aregner.android.pandoroid.PandoraRadioService.getInstance(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7488/buggy-version/src.com.aregner.android.pandoroid.PandoroidPlayer.java", "BodyUseAPI": [], "Fixed commit": "9d7d37ddddddc38b63bdc47d513cbef9d2f02f29", "Url": "https://api.github.com/repos/dylanPowers/pandoroid", "Date": "2012-06-01T01:59:40Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.contains(\"System\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1204/buggy-version/src.mvc.ZoneModel.java", "BodyUseAPI": [], "Fixed commit": "57a706fe6ea7bbeda1a43b273be194114ed6ca54", "Url": "https://api.github.com/repos/mikaala/TimeZoneConverter", "Date": "2014-12-23T10:06:25Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.TimeZone.getID()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tzPlace.contains(\"GMT+\")) { tzPlace = new java.lang.String((\"GMT-\" + (tzPlace.substring(((tzPlace.lastIndexOf(\"+\")) + 1))))); }else if (tzPlace.contains(\"GMT-\")) { tzPlace = new java.lang.String((\"GMT+\" + (tzPlace.substring(((tzPlace.lastIndexOf(\"-\")) + 1))))); }else if (tzPlace.contains(\"US\")) { tzPlace = new java.lang.String(tzPlace.replace(\"US\", \"America\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1204/buggy-version/src.core.Time.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int)", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "57a706fe6ea7bbeda1a43b273be194114ed6ca54", "Url": "https://api.github.com/repos/mikaala/TimeZoneConverter", "Date": "2014-12-23T10:06:25Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((browserName) == null) || ((browserName) == \"\")) { driver = new org.openqa.selenium.firefox.FirefoxDriver(); }else if (browserName.equals(\"chrome\")) { java.lang.System.setProperty(\"webdriver.chrome.driver\", chromedriverPath); driver = new org.openqa.selenium.chrome.ChromeDriver(); }else if (browserName.equals(\"firefox\")) { driver = new org.openqa.selenium.firefox.FirefoxDriver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1177/buggy-version/src.main.java.framework.DriverManager.java", "BodyUseAPI": [], "Fixed commit": "627584d85d6e67025008561e0a04ba773cc5b25e", "Url": "https://api.github.com/repos/joseSuper/RoomManager-Automation", "Date": "2015-12-12T15:51:21Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other instanceof WPI.CampusMap.AStar.Coord) { WPI.CampusMap.AStar.Coord that = ((WPI.CampusMap.AStar.Coord) (other)); boolean X = (this.getX()) == (that.getX()); boolean Y = (this.getY()) == (that.getY()); result = X && Y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3573/buggy-version/src.main.java.WPI.CampusMap.AStar.Coord.java", "BodyUseAPI": [], "Fixed commit": "aa557fca3578652c58b915a80fa59e1ab2a6b248", "Url": "https://api.github.com/repos/Team11b/CampusMap", "Date": "2015-11-07T04:02:18Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainActivity.itself) != null) { if (!(MainActivity.itself.isInitialising)) { StartMeasuring(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3966/buggy-version/app.src.main.java.com.michael.spotifyapi.SensorService.java", "BodyUseAPI": [], "Fixed commit": "a2158860ee7b2c25c728e120030f34433c685d96", "Url": "https://api.github.com/repos/michael-paulus/SpotifyAPITest", "Date": "2017-03-16T23:27:21Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.google.cloud.tools.intellij.appengine.cloud.AppEngineDeployable) (source)).getEnvironment().equals(AppEngineEnvironment.APP_ENGINE_FLEX)) { return new com.google.cloud.tools.intellij.appengine.cloud.flexible.AppEngineFlexibleDeploymentEditor(project); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3694/buggy-version/google-cloud-tools-plugin.src.com.google.cloud.tools.intellij.appengine.cloud.AppEngineDeploymentConfigurator.java", "BodyUseAPI": [], "Fixed commit": "799c5bc1ba474c8a2e6b2c90c39271ede875b8e2", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-12-23T15:59:47Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (denominatore != 0) risultato = numeratore / denominatore; else risultato = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7210/buggy-version/src.statisticheGuasti.ProbabilitaMetodo2.java", "BodyUseAPI": [], "Fixed commit": "861e05c614aa908d3281306f3d1c487f3d0e181d", "Url": "https://api.github.com/repos/unibs-cristian/ElaboratoIngSW_Parte2", "Date": "2015-01-19T10:25:37Z"},
{"Line": "=>2774", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockObject instanceof com.emc.storageos.model.block.BlockMirrorRestRep) { com.emc.storageos.model.block.BlockMirrorRestRep mirror = ((com.emc.storageos.model.block.BlockMirrorRestRep) (blockObject)); return getMessage(\"block.mirror\", mirror.getName()); }else { com.emc.storageos.model.block.VolumeRestRep volume = ((com.emc.storageos.model.block.VolumeRestRep) (blockObject)); return getMessage(\"block.volume\", volume.getName(), volume.getProvisionedCapacity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6244/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.asset.providers.BlockProvider.java", "BodyUseAPI": [], "Fixed commit": "d36926cee440f739fed382e50f72023118072d3c", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-05-27T17:27:02Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (props.secureJson) { prefix = pc.getApplicationContext().getSecureJsonPrefix(); if (prefix == null) prefix = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2681/buggy-version/railo-java.railo-core.src.railo.runtime.ComponentPage.java", "BodyUseAPI": [], "Fixed commit": "64656aeded319d481ef40a3909873d691ed0399e", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-06-27T09:42:08Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vector.model.RelevantProperties.sizeOfIntersect(vector.model.RelevantProperties)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rpIntersect == 0) { return java.lang.Double.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8492/buggy-version/src.vector.model.Entity.java", "BodyUseAPI": [], "Fixed commit": "fed0185afe0d8b835c6232973ec593776f91a869", "Url": "https://api.github.com/repos/kivi239/MetricsReloaded", "Date": "2017-05-15T15:48:24Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (addedSmartPosts.contains(post)) { java.lang.System.out.println(\"Smart Post already added.\"); }else { addedSmartPosts.add(post); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2143/buggy-version/Javafx1.src.timo.MyController.java", "BodyUseAPI": ["javafx.collections.ObservableList<timo.SmartPost>.add(timo.SmartPost)"], "Fixed commit": "d643eabaf7abec98d2912eea175c5c7bf6489404", "Url": "https://api.github.com/repos/purkkilo/Oliot", "Date": "2017-12-16T22:48:25Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (identifierCriterion != null) { criteria.add(identifierCriterion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2293/buggy-version/api.src.main.java.org.openmrs.api.db.hibernate.PatientSearchCriteria.java", "BodyUseAPI": ["org.hibernate.Criteria.add(org.hibernate.criterion.Criterion)"], "Fixed commit": "ecff36dd82c625554627025f02ef2013bc9831d8", "Url": "https://api.github.com/repos/wluyima/openmrs-core", "Date": "2013-02-07T22:37:37Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tenantId == (-1L)) { resolvedTenantId = org.bonitasoft.console.common.server.utils.TenantsManagementUtils.getDefaultTenantId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5688/buggy-version/server.src.main.java.org.bonitasoft.console.common.server.login.impl.oauth.OAuthLoginManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "a418f95a92e221691fdbe0a53e02b18586f09343", "Url": "https://api.github.com/repos/bonitasoft/bonita-web", "Date": "2015-01-19T15:43:41Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (starNum == 1) { stars.setText((starNum + \" Star, set your target!\")); }else stars.setText((starNum + \" Stars, set your target!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2469/buggy-version/AppProject.app.src.main.java.settings.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "c5b2d7bde51abe3c0856f27f21b40a0967ed6fcf", "Url": "https://api.github.com/repos/nikolasjchaconas/FlashMath", "Date": "2015-08-13T12:11:15Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(input.isCommandPressed(Command.ATTACK))) && (player.isBeingDamaged())) { attackStateTime = 0; player.isCharging = false; player.fullyCharged = false; player.almostFullyCharged = false; }else if ((input.isCommandPressed(Command.ATTACK)) && ((attackStateTime) >= (com.sideprojects.megamanxphantomblade.physics.player.x.PlayerXPhysics.waitBeforeCharging))) { player.isCharging = true; playerXSound.startPlayingCharge(delta); if ((attackStateTime) >= (com.sideprojects.megamanxphantomblade.physics.player.x.PlayerXPhysics.timeToAlmostFullyCharged)) { player.almostFullyCharged = true; } if ((attackStateTime) >= (com.sideprojects.megamanxphantomblade.physics.player.x.PlayerXPhysics.timeToFullyCharged)) { player.fullyCharged = true; player.almostFullyCharged = false; } }else { playerXSound.stopPlayingCharge(); if (player.isCharging) { if ((attackStateTime) < (com.sideprojects.megamanxphantomblade.physics.player.x.PlayerXPhysics.timeToFullyCharged)) { mediumAttack(map); }else { heavyAttack(map); } } player.isCharging = false; player.fullyCharged = false; player.almostFullyCharged = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2077/buggy-version/core.src.com.sideprojects.megamanxphantomblade.physics.player.x.PlayerXPhysics.java", "BodyUseAPI": ["com.sideprojects.megamanxphantomblade.physics.player.x.PlayerXPhysics.isCommandPressed(Command.ATTACK)"], "Fixed commit": "041fefd3233dcf8fb240c3a87f0a38478ba6dad1", "Url": "https://api.github.com/repos/hoangbv15/PhantomBlade", "Date": "2017-05-30T19:17:49Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pf.database.merchant.SubMerchantUser.getSubMerchantUserById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (subMerchantUser == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3363/buggy-version/src.pf.swiftpass.action.PayAction.java", "BodyUseAPI": [], "Fixed commit": "307e52bd9d2dc183cbdd7d664c4ccacf4f73039e", "Url": "https://api.github.com/repos/zyga501/QimPayment", "Date": "2016-11-20T12:56:30Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((image.getHeight()) < (((image.getWidth()) / 16.0F) * 9.0F)) { scaledDimension = new at.ac.tuwien.media.io.file.model.Dimension((((image.getHeight()) * 16.0F) / 9.0F), image.getHeight()); }else { scaledDimension = new at.ac.tuwien.media.io.file.model.Dimension(image.getWidth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4783/buggy-version/Ethanol.src.at.ac.tuwien.media.io.file.bitmap.BitmapManipulator.java", "BodyUseAPI": ["android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getHeight()", "android.graphics.Bitmap.getWidth()"], "Fixed commit": "3f8a0199fecc12d22b3be211acccaab9fbd52353", "Url": "https://api.github.com/repos/jakob-f/fdts", "Date": "2014-03-23T09:53:59Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((selection) != null) && ((selection.size()) > 0)) com.palmergames.bukkit.towny.TownyMessaging.sendMsg(player, ((com.palmergames.bukkit.towny.TownySettings.getLangString(\"msg_claimed\")) + ((selection.size()) > 5 ? \"Total TownBlocks: \" + (selection.size()) : java.util.Arrays.toString(selection.toArray(new com.palmergames.bukkit.towny.object.WorldCoord[0]))))); else com.palmergames.bukkit.towny.TownyMessaging.sendMsg(player, com.palmergames.bukkit.towny.TownySettings.getLangString(\"msg_not_claimed_1\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9161/buggy-version/src.com.palmergames.bukkit.towny.tasks.PlotClaim.java", "BodyUseAPI": ["com.palmergames.bukkit.towny.TownyMessaging.sendMsg(org.bukkit.entity.Player,((com.palmergames.bukkit.towny.TownySettings.getLangString(\"msg_claimed\")) + ((selection.size()) > 5 ? \"Total TownBlocks: \" + (selection.size()) : java.util.Arrays.toString(selection.toArray(new com.palmergames.bukkit.towny.object.WorldCoord[0])))))", "java.util.List<com.palmergames.bukkit.towny.object.WorldCoord>.toArray(com.palmergames.bukkit.towny.object.WorldCoord[])", "java.util.List<com.palmergames.bukkit.towny.object.WorldCoord>.size()", "java.util.Arrays.toString(selection.toArray(new com.palmergames.bukkit.towny.object.WorldCoord[0]))", "java.util.List<com.palmergames.bukkit.towny.object.WorldCoord>.size()"], "Fixed commit": "e8bea1c8563d0d6b71a78819f2733d9f9131908d", "Url": "https://api.github.com/repos/ElgarL/Towny", "Date": "2012-09-10T14:43:10Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.isEmpty()) || (!(values.iterator().next().isEmpty()))) comboBox.addItem(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2651/buggy-version/widgets.src.main.java.org.jboss.ballroom.client.widgets.forms.ComboBoxItem.java", "BodyUseAPI": [], "Fixed commit": "fb0e5cfe68cbecb4920f57e82ab1e7c3fcfa1cc8", "Url": "https://api.github.com/repos/pgier/ballroom", "Date": "2012-02-01T19:20:44Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((values.length) == 0) || (!(values[0].isEmpty()))) comboBox.addItem(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2651/buggy-version/widgets.src.main.java.org.jboss.ballroom.client.widgets.forms.ComboBoxItem.java", "BodyUseAPI": [], "Fixed commit": "fb0e5cfe68cbecb4920f57e82ab1e7c3fcfa1cc8", "Url": "https://api.github.com/repos/pgier/ballroom", "Date": "2012-02-01T19:20:44Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isPlaying) && (!(currentFilePath.equals(path)))) { mMediaPlayer.stop(); currentAudioBtn.stopAnim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4502/buggy-version/app.src.main.java.com.ssthouse.moduo.moduo.control.util.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "3cad2ceff0f48c881f94b793e85035c885b2a64f", "Url": "https://api.github.com/repos/ssthouse/moduo", "Date": "2016-02-03T13:39:05Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.shonshampain.streamrecorder.services.StreamProxy.DBG) android.util.Log.d(com.shonshampain.streamrecorder.services.StreamProxy.TAG, ((\"Raw read: \" + readBytes) + \" bytes\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5403/buggy-version/app.src.main.java.com.shonshampain.streamrecorder.services.StreamProxy.java", "BodyUseAPI": [], "Fixed commit": "4b36afff2d45eee179e68995db81cdff7e2efd75", "Url": "https://api.github.com/repos/shonshampain/StreamRecord", "Date": "2015-07-22T20:00:53Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((joshuaConfiguration.lms.size()) != 0) { joshua.decoder.Decoder.LOG(1, \"You seem to be using an old version of the Joshua config file\"); joshua.decoder.Decoder.LOG(1, \"Language models should be defined as regular feature functions.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/256/buggy-version/src.joshua.decoder.Decoder.java", "BodyUseAPI": [], "Fixed commit": "9a4de7eed19a79ff2fb9f0a71b68defd390ca67b", "Url": "https://api.github.com/repos/noisychannel/joshua", "Date": "2015-01-15T16:00:46Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<thirdparty.edu.princeton.cs.algs4.QuadTreeInterval2D<T, Value>.Node<T>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parent.xy.equals(box)) { removeNodeReattachChildren(parentParent, box); return; }else if (isH) { removeNodeReattachChildren(parent, box); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3854/buggy-version/src.thirdparty.edu.princeton.cs.algs4.QuadTreeInterval2D.java", "BodyUseAPI": ["thirdparty.edu.princeton.cs.algs4.QuadTreeInterval2D<T, Value>.removeNodeReattachChildren(thirdparty.edu.princeton.cs.algs4.QuadTreeInterval2D<T, Value>.Node<T>,thirdparty.edu.princeton.cs.algs4.Interval2D<T>)", "thirdparty.edu.princeton.cs.algs4.QuadTreeInterval2D<T, Value>.removeNodeReattachChildren(thirdparty.edu.princeton.cs.algs4.QuadTreeInterval2D<T, Value>.Node<T>,thirdparty.edu.princeton.cs.algs4.Interval2D<T>)"], "Fixed commit": "878d3efb9aded6bdd6531ce0f6604ffac980d521", "Url": "https://api.github.com/repos/nking/curvature-scale-space-corners-and-transformations", "Date": "2016-07-22T01:20:37Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.get(\"NanoHttpd.QUERY_STRING\")) != null) is = new java.io.ByteArrayInputStream(params.get(\"NanoHttpd.QUERY_STRING\").getBytes()); else if ((files.get(\"postData\")) != null) is = new java.io.ByteArrayInputStream(files.get(\"postData\").getBytes()); else return new com.github.uiautomatorstub.Response(Response.Status.INTERNAL_ERROR, MIME_PLAINTEXT, \"Invalid http post data!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7780/buggy-version/src.com.github.uiautomatorstub.AutomatorHttpServer.java", "BodyUseAPI": ["java.lang.String.getBytes()", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "9a3a4453381d1bb84bc092b68bef00ca765d215c", "Url": "https://api.github.com/repos/PATHocong/android-uiautomator-jsonrpcserver", "Date": "2014-07-15T11:04:58Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<java.lang.String>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (current_dir.equals(\"\")) { actionBar.setTitle(getString(R.string.default_display_name_for_root_folder)); }else { actionBar.setTitle(current_dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7612/buggy-version/src.com.owncloud.android.ui.activity.Uploader.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "150b6f7f1abb90747adfbc8a51b792df9c8ccaad", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-03-23T15:17:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (topGroupIdLevel.contains(\".\")) { org.pentaho.engops.nexus.plugin.ivysnapshot.IvySnapshotServletFilter.logger.debug((\"requested path contains an Ivy group: \" + topGroupIdLevel)); java.lang.StringBuilder stringBuilder = new java.lang.StringBuilder(path); topGroupIdLevel = topGroupIdLevel.replace(\".\", \"/\"); stringBuilder.replace(1, path.indexOf(\"/\", 1), topGroupIdLevel); path = stringBuilder.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2462/buggy-version/src.main.java.org.pentaho.engops.nexus.plugin.ivysnapshot.IvySnapshotServletFilter.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "be64cd8084c011a45df195f7cf24201c43fe3f36", "Url": "https://api.github.com/repos/pentaho/ivy-snapshot-servlet-filter", "Date": "2017-08-25T16:49:21Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (initialpos != (ch.pos)) { ch.sprite.place(ch.pos); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4020/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.items.wands.WandOfBlastWave.java", "BodyUseAPI": ["ch.sprite.place(ch.pos)"], "Fixed commit": "4715b42b77ce45ee2631754ce403ae5be63afcbe", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-11-18T20:51:35Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (period == (org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.Period.WEEK)) { calendar.set(java.util.Calendar.DAY_OF_WEEK, calendar.getFirstDayOfWeek()); }else { calendar.clear(java.util.Calendar.DAY_OF_WEEK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5322/buggy-version/src.main.java.org.jboss.logmanager.handlers.PeriodicRotatingFileHandler.java", "BodyUseAPI": [], "Fixed commit": "cdf6fd669cc38e8819a832e99ca37525ea2a65d6", "Url": "https://api.github.com/repos/jboss-logging/jboss-logmanager", "Date": "2013-07-08T20:55:07Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sendSamplesThread) != null) { while (sendSamplesThread.isAlive()) { try { java.lang.Thread.sleep(10); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/189/buggy-version/SputifyGUI.src.se.mah.patmic.sputifygui.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "5be7a29148dba88c44184ebab7a38a1ac22f98e6", "Url": "https://api.github.com/repos/P1-Sputify/SputifyGUI", "Date": "2014-06-01T12:03:41Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ex.isShouldLogged()) { com.crashlytics.android.Crashlytics.logException(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6975/buggy-version/app.src.main.java.com.czbix.v2ex.util.ExceptionUtils.java", "BodyUseAPI": ["com.crashlytics.android.Crashlytics.logException(com.czbix.v2ex.common.exception.RequestException)"], "Fixed commit": "265e299014776d95aea4e60691dc6888e5aeaddd", "Url": "https://api.github.com/repos/CzBiX/v2ex-android", "Date": "2015-11-19T06:49:35Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((builder.isTypeManaged(cls)) && ((builder.getOriginal(cloneValue)) != null)) { cz.cvut.kbss.jopa.utils.EntityPropertiesUtils.setFieldValue(field, target, builder.getOriginal(cloneValue)); }else { mergeFieldChanges(originalValue, cloneValue, cls); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1089/buggy-version/jopa-impl.src.main.java.cz.cvut.kbss.jopa.sessions.DefaultInstanceBuilder.java", "BodyUseAPI": ["cz.cvut.kbss.jopa.sessions.DefaultInstanceBuilder.mergeFieldChanges(java.lang.Object,java.lang.Object,java.lang.Class<?>)", "cz.cvut.kbss.jopa.sessions.DefaultInstanceBuilder.getOriginal(java.lang.Object)", "cz.cvut.kbss.jopa.utils.EntityPropertiesUtils.setFieldValue(java.lang.reflect.Field,java.lang.Object,builder.getOriginal(cloneValue))"], "Fixed commit": "e992c3423b841b6ee5cca279849d2ee408910e6f", "Url": "https://api.github.com/repos/kbss-cvut/jopa", "Date": "2016-06-07T12:23:08Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mBackgroundSound.isCancelled()) { mBackgroundSound.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4292/buggy-version/app.src.main.java.askim.eratactics.activities.TacticsGame.java", "BodyUseAPI": ["askim.eratactics.activities.TacticsGame.BackgroundSound.execute()"], "Fixed commit": "2d19e18864fd6ae736166d934c51052ba383ee73", "Url": "https://api.github.com/repos/addykim/Era-Tactics", "Date": "2016-04-04T03:20:47Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((list_group.size()) == 0) { return list; }else { for (int i = 0; i < (list_group.size()); i++) { java.lang.String pgramname = list_group.get(i).get(\"pname\").toString(); java.lang.String appname = list_group.get(i).get(\"appname\").toString(); sqlstr_pname += (\"'\" + pgramname) + \"',\"; sqlstr_appname += (\"'\" + appname) + \"',\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/253/buggy-version/src.main.java.com.nice.confX.service.manager.impl.ProjectServiceImpl.java", "BodyUseAPI": ["java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)", "java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.get(int)", "java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.size()", "java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "33d9e2b1aa4a820e25e5e5bb2a68f5721ccfe838", "Url": "https://api.github.com/repos/yxb0926/confX", "Date": "2016-10-12T03:11:27Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { sb.replace(((sb.length()) - 1), sb.length(), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2795/buggy-version/compiler.src.main.java.com.young.util.jni.generator.template.FileTemplateLoader.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.replace(int,int,java.lang.String)"], "Fixed commit": "2b8d3effb642b03fc0ec64aba87dd879af86bd20", "Url": "https://api.github.com/repos/LanderlYoung/Jenny", "Date": "2016-06-03T16:23:18Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ctx.buffer.hasRemaining())) { org.neo4j.driver.internal.connector.socket.BufferingChunkedInput.State.readNextPacket(ctx.channel, ctx.buffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6791/buggy-version/driver.src.main.java.org.neo4j.driver.internal.connector.socket.BufferingChunkedInput.java", "BodyUseAPI": ["org.neo4j.driver.internal.connector.socket.BufferingChunkedInput.State.readNextPacket(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)"], "Fixed commit": "b14cb1c9a15098c37b1631398604bb7f88e88ce6", "Url": "https://api.github.com/repos/neo4j/neo4j-java-driver", "Date": "2016-04-25T06:25:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userInput.equalsIgnoreCase(cardRearSide)) { mListener.displayCorrectAnswerAnimation(); }else { mListener.flipToBack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/200/buggy-version/app.src.main.java.com.github.androidpirate.flipcard.FrontCardFragment.java", "BodyUseAPI": [], "Fixed commit": "b61d43c469b76eeb6e1618f888c20d4cdebc7225", "Url": "https://api.github.com/repos/androidpirate/FlipIt", "Date": "2017-10-10T16:45:24Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tokenStorage.getAccessToken()) != null) && ((tokenStorage.getAccessToken().getToken()) != null)) { setBearerToken(builder, tokenStorage.getAccessToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3054/buggy-version/uber-core.src.main.java.com.uber.sdk.core.auth.AccessTokenAuthenticator.java", "BodyUseAPI": ["com.uber.sdk.core.auth.AccessTokenAuthenticator.setBearerToken(Request.Builder,tokenStorage.getAccessToken())", "com.uber.sdk.core.auth.AccessTokenStorage.getAccessToken()"], "Fixed commit": "5f12bef9ae248814589ddebd5c36f94557b65411", "Url": "https://api.github.com/repos/uber/rides-java-sdk", "Date": "2017-11-28T21:10:35Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opensaml.core.xml.io.Unmarshaller.unmarshall(org.w3c.dom.Element)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (StatusCode.SUCCESS.equals(resp.getStatus().getStatusCode().getValue())) { eidasResp.metadataDestination = eidassaml.starterkit.EidasResponse.getAudience(resp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4681/buggy-version/src.main.java.eidassaml.starterkit.EidasResponse.java", "BodyUseAPI": ["eidassaml.starterkit.EidasResponse.getAudience(org.opensaml.saml.saml2.core.Response)"], "Fixed commit": "1acecead7aa6af1a8dcc730d35b5e8ee59e11427", "Url": "https://api.github.com/repos/Dictu/eIDAS-Node-SDK-3", "Date": "2017-05-31T10:10:14Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openrdf.model.Literal.getDatatype()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dataType == null) dataType = org.openrdf.model.vocabulary.XMLSchema.STRING;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3045/buggy-version/src.main.java.net.trustyuri.rdf.RdfHasher.java", "BodyUseAPI": [], "Fixed commit": "8101358be9364be10ab38ae19e40522b2a07a08a", "Url": "https://api.github.com/repos/trustyuri/trustyuri-java", "Date": "2015-02-20T16:55:20Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JFileChooser.showSaveDialog(javax.swing.JPanel)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret == (javax.swing.JFileChooser.APPROVE_OPTION)) { path = fileChooser.getSelectedFile().getAbsolutePath(); }else { java.lang.System.out.println(\"No directories selected\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4526/buggy-version/src.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "2a742f6db7511f77650fedeeca3f6db56d2a95a8", "Url": "https://api.github.com/repos/genomizer/genomizer-desktop", "Date": "2014-05-07T08:57:34Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (playersTeam.isMax()) { playersTeam.setMax(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7644/buggy-version/src.gameLogic.TransferLogic.java", "BodyUseAPI": ["gameLogic.Team.setMax(boolean)"], "Fixed commit": "6bc60854f1d373882acea547e958ca37b1c92e94", "Url": "https://api.github.com/repos/geenen124/psychobabble5", "Date": "2015-01-20T18:13:13Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shopbilling.services.AppLicenseServices.getAppSecurityData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (lastRun != null) { java.util.Date prevDate = com.shopbilling.services.AppLicenseServices.sdf.parse(lastRun); if ((currentTime.compareTo(prevDate)) < 0) { isSystemDateChanged = true; } }else { com.shopbilling.services.AppLicenseServices.logger.error(\"## Configuration Missing ## :: Database Entry Missing for APP_SECURITY_DATA\"); isSystemDateChanged = true; return isSystemDateChanged; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8537/buggy-version/src.com.shopbilling.services.AppLicenseServices.java", "BodyUseAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Fixed commit": "3d7c8e800f3ce8c8b3f2465f1cec2457abb243fe", "Url": "https://api.github.com/repos/kumbharvish/MysStore-Base", "Date": "2017-12-21T17:00:48Z"},
{"Line": "=>1035", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.ChatColor.stripColor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (types.contains(\":\")) types = type.substring(((type.indexOf(\":\")) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4728/buggy-version/src.com.modcrafting.diablodrops.drops.DropsAPI.java", "BodyUseAPI": [], "Fixed commit": "62def1ecddf7e342558cd4ced12bb523b98b2d8f", "Url": "https://api.github.com/repos/deathmarine/DiabloDrops", "Date": "2013-03-10T14:54:39Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (acceptType.equals(Constants.MEDIA_TYPE_HTML)) { acceptType = org.occiware.mart.server.utils.Constants.MEDIA_TYPE_JSON; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1394/buggy-version/org.occiware.mart.servlet.src.main.java.org.occiware.mart.servlet.impl.ServletEntry.java", "BodyUseAPI": [], "Fixed commit": "b777f668f1da6b020838e9a8283f57d89af8dadb", "Url": "https://api.github.com/repos/occiware/MartServer", "Date": "2017-07-31T06:05:44Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (model == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/100/buggy-version/dashboard-back.src.main.java.com.excilys.shooflers.dashboard.server.dto.mapper.ValidityDtoMapperImpl.java", "BodyUseAPI": [], "Fixed commit": "579b2a49d3da45165047a981d0143491013f36c4", "Url": "https://api.github.com/repos/resourcepool/dashboard", "Date": "2016-06-07T13:44:15Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiDirectory.getVirtualFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((dirFile.getFileSystem()) instanceof com.intellij.openapi.vfs.ArchiveFileSystem) && ((dirFile.getParent()) == null)) { com.intellij.openapi.vfs.VirtualFile virtualFileForArchive = com.intellij.openapi.vfs.util.ArchiveVfsUtil.getVirtualFileForArchive(dirFile); if (virtualFileForArchive != null) { name = virtualFileForArchive.getName(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8702/buggy-version/platform.lang-impl.src.com.intellij.ide.projectView.impl.DefaultProjectViewDirectoryHelper.java", "BodyUseAPI": ["com.intellij.openapi.vfs.util.ArchiveVfsUtil.getVirtualFileForArchive(com.intellij.openapi.vfs.VirtualFile)"], "Fixed commit": "891fce068c61c18c6f9b1a1b5504ba6d8bd068fd", "Url": "https://api.github.com/repos/consulo/consulo", "Date": "2014-08-01T11:01:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.isFinished()) { com.emc.storageos.systemservices.impl.jobs.consumer.DbConsistencyJobConsumer.log.info(\"there is finished state, move it to previous\"); status.moveToPrevious(); }else if (status.isCancelled()) { com.emc.storageos.systemservices.impl.jobs.consumer.DbConsistencyJobConsumer.log.info(\"current status is cancel, restart db consistency check\"); status.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2237/buggy-version/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.consumer.DbConsistencyJobConsumer.java", "BodyUseAPI": ["com.emc.storageos.coordinator.client.model.DbConsistencyStatus.moveToPrevious()", "com.emc.storageos.coordinator.client.model.DbConsistencyStatus.isCancelled()", "com.emc.storageos.coordinator.client.model.DbConsistencyStatus.init()"], "Fixed commit": "0084de72bd9111a4daa8d6eaeaccf3c191d98d12", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-11-25T14:24:54Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (screenEnum == (ScreenEnum.GAME)) { com.cs110.app.CS110App app = ((com.cs110.app.CS110App) (game)); app.startGame(((com.cs110.app.Screens.GameScreen) (newScreen))); java.lang.System.out.println(\"STARTED THE GAME AHAHH\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2848/buggy-version/core.src.com.cs110.app.Screens.ScreenManager.java", "BodyUseAPI": [], "Fixed commit": "d3526d15f55a6e97f3bb822238c94520f011eb78", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110M260T1", "Date": "2016-03-04T01:11:01Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fromKind == (K_ANY)) || (toKind == (K_ANY))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1032/buggy-version/src.wyil.lang.IntersectionOperator.java", "BodyUseAPI": [], "Fixed commit": "b27e21ffaffc0e1d0c4ae8487f49429e09cc4115", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-09-10T04:27:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((originalPlace.isOrthogonallyAdjacentTo(newPlace)) && ((this.originalBoard.getPieceAt(originalPlace).getOwner()) == (this.turn)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5162/buggy-version/src.move_commands.RegularMove.java", "BodyUseAPI": [], "Fixed commit": "089dbdc8081da19621c557798ff25bb06d079a5d", "Url": "https://api.github.com/repos/Jernik/Arimaa", "Date": "2016-04-27T13:57:20Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((item.hasItemMeta()) && (item.getItemMeta().hasLore())) && (item.getItemMeta().getLore().contains(\"mcMMO Ability Tool\"))) lore.add(\"mcMMO Ability Tool\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5147/buggy-version/src.main.java.think.rpgitems.item.RPGItem.java", "BodyUseAPI": [], "Fixed commit": "b1c99a325895ca1616e3373e532c66f7291abada", "Url": "https://api.github.com/repos/NyaaCat/RPGitems-reloaded", "Date": "2016-04-03T05:40:56Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((metricInfos[metricIndex].type) == (org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.MetricType.Count)) { measureAggrs[metricIndex].aggregate(ONE); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/146/buggy-version/storage.src.main.java.org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.java", "BodyUseAPI": ["measureAggrs[metricIndex].aggregate(org.apache.hadoop.io.LongWritable)"], "Fixed commit": "a864ba2d2c3e7354dac0f66e7c315563a0e71b88", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-02-12T05:02:57Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metricInfos[metricIndex].type) == (org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.MetricType.DimensionAsMetric)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/146/buggy-version/storage.src.main.java.org.apache.kylin.storage.hbase.coprocessor.endpoint.EndpointAggregators.java", "BodyUseAPI": [], "Fixed commit": "a864ba2d2c3e7354dac0f66e7c315563a0e71b88", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-02-12T05:02:57Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["authzToken.getClaimsMap().get(Constants.USER_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (subject.contains(\"@\")) { subject = subject.split(\"@\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1934/buggy-version/airavata-api.airavata-api-server.src.main.java.org.apache.airavata.api.server.security.DefaultAiravataSecurityManager.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "67e1f7bd16e0bcf1147947e13823fc51dbb64d07", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2016-07-20T17:29:49Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index != 0) { tempValue += \"<td>\"; tempValue += cell.getText(); tempValue += \"</td>\"; }else { tempValue += \"<th>\"; tempValue += cell.getText(); tempValue += \"</th>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4311/buggy-version/doc2md.src.main.java.com.jackwang.xwpf.Doc2MD.java", "BodyUseAPI": [], "Fixed commit": "29cffaa43809df0168da78ad5e593208eb6b2664", "Url": "https://api.github.com/repos/34benma/doc2md", "Date": "2017-09-27T10:00:46Z"},
{"Line": "=>1133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getParentOfType(org.ballerinalang.plugins.idea.psi.ParameterNode,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(scope.equals(parentScope))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1138/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.java", "BodyUseAPI": [], "Fixed commit": "0cb57afa2c83a2cc07dadeb9aff86ca16d9aeb35", "Url": "https://api.github.com/repos/Shan1024/plugin-intellij", "Date": "2017-10-11T12:38:27Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (btAdapter.isEnabled()) { startOpen(); setContentView(R.layout.activity_bt_create); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5969/buggy-version/src.com.example.isola.BtGameActivity.java", "BodyUseAPI": [], "Fixed commit": "1169884dbc2aff8ad7ff2606fbc3916074d781ca", "Url": "https://api.github.com/repos/dsuedholt/isola", "Date": "2014-03-12T11:48:21Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mattvoget.infomanager.services.NoteOrderRepository.findByFolderId(noteOrder.getFolderId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (existingNoteOrder != null) { noteOrder.setId(existingNoteOrder.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6165/buggy-version/src.main.java.com.mattvoget.infomanager.services.FolderService.java", "BodyUseAPI": ["com.mattvoget.infomanager.services.NoteOrder.setId(existingNoteOrder.getId())", "com.mattvoget.infomanager.services.NoteOrder.getId()"], "Fixed commit": "c4e5645464911efba96a0582d9e690dd4c5db910", "Url": "https://api.github.com/repos/The-Lando-System/info-manager", "Date": "2017-04-15T17:32:52Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (rootDir == null) { throw new java.lang.IllegalArgumentException(\"Root directory required for running the tool\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/116/buggy-version/src.org.sosy_lab.cpachecker.cmdline.TsmartAnalyze.java", "BodyUseAPI": [], "Fixed commit": "e64c001140a30b0a01fec229985e5b7ad8918861", "Url": "https://api.github.com/repos/45258E9F/IntPTI", "Date": "2017-06-03T09:11:38Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof java.lang.String[]) { java.lang.String[] arr = ((java.lang.String[]) (obj)); obj = ((arr.length) > 0) ? arr[0] : null; }else if (obj instanceof java.util.List) { java.util.List l = ((java.util.List) (obj)); obj = ((l.size()) > 0) ? l.get(0) : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6907/buggy-version/jpos.src.main.java.org.jpos.core.SimpleConfiguration.java", "BodyUseAPI": [], "Fixed commit": "05b88a3b1465346b292c18a9d495967558f9251c", "Url": "https://api.github.com/repos/demsey/jPOS", "Date": "2015-09-24T17:05:43Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { dismiss(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7940/buggy-version/app.src.main.java.ch.bfh.mobisys.rating4you.fragment.dialog.RatingDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "4d063b4f15877e989b094e4b2bbc41da0cd4209b", "Url": "https://api.github.com/repos/kofmp1/Rating4You", "Date": "2016-06-02T20:05:44Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAppData.getOperateState()) == (com.example.swiftdatahop.Constants.State.OFF)) { com.example.swiftdatahop.Fragment_PeerDetails fragment = ((com.example.swiftdatahop.Fragment_PeerDetails) (getSupportFragmentManager().findFragmentByTag(Constants.FRAG_PEERDETAILS_NAME))); fragment.resetViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5317/buggy-version/SwiftDataHop.src.com.example.swiftdatahop.TaskListActivity.java", "BodyUseAPI": [], "Fixed commit": "6121e584543daaffaddfe57fa154e802825aa7f1", "Url": "https://api.github.com/repos/kristina-hager/SwiftProject", "Date": "2014-04-09T00:05:47Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.byteshaft.silentrecord.utils.Helpers.getTimeFormat().parse(mHelpers.getAmPm())", "com.byteshaft.silentrecord.utils.Helpers.getTimeFormat().parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (date.after(now)) { mHelpers.setAlarm(com.byteshaft.silentrecord.utils.Helpers.getCurrentAlarmDetails(\"year\"), com.byteshaft.silentrecord.utils.Helpers.getCurrentAlarmDetails(\"month\"), com.byteshaft.silentrecord.utils.Helpers.getCurrentAlarmDetails(\"day\"), com.byteshaft.silentrecord.utils.Helpers.getCurrentAlarmDetails(\"hours\"), com.byteshaft.silentrecord.utils.Helpers.getCurrentAlarmDetails(\"minutes\"), com.byteshaft.silentrecord.utils.Helpers.getLastCameraEvent()); }else { if (com.byteshaft.silentrecord.utils.Helpers.getLastCameraEvent().equals(\"pic\")) { com.byteshaft.silentrecord.utils.Helpers.setPicAlarm(false); }else if (com.byteshaft.silentrecord.utils.Helpers.getLastCameraEvent().equals(\"video\")) { com.byteshaft.silentrecord.utils.Helpers.setVideoAlarm(false); } com.byteshaft.silentrecord.utils.Helpers.setTime(false); com.byteshaft.silentrecord.utils.Helpers.setDate(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/5448/buggy-version/app.src.main.java.com.byteshaft.silentrecord.receivers.BootStateReceiver.java", "BodyUseAPI": [], "Fixed commit": "401d54fa1eeaa130ed3971087a04d7eb3dc5bf9c", "Url": "https://api.github.com/repos/imranhakeem/silent-record", "Date": "2015-07-08T13:57:22Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultCommand) != null) { defaultCommand.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6139/buggy-version/src.libraries.commandBased.Subsystem.java", "BodyUseAPI": [], "Fixed commit": "8054731154adcbc91e11f11912f6fecbec7abad7", "Url": "https://api.github.com/repos/Spikes-2212/FLFL2014Junit", "Date": "2014-11-22T17:06:42Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(company.getLogo().equals(\"link-to-picture\"))) { final java.lang.String encodedString = company.getLogo(); final java.lang.String pureBase64Encoded = encodedString.substring(((encodedString.indexOf(\",\")) + 1)); final byte[] decodedBytes = android.util.Base64.decode(pureBase64Encoded, Base64.DEFAULT); com.bumptech.glide.Glide.with(mContext).load(decodedBytes).into(profileImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2826/buggy-version/app.src.main.java.com.example.phil.httppost.JobCard.java", "BodyUseAPI": ["com.example.phil.httppost.data.model.Company.getLogo()"], "Fixed commit": "8a0bdd6ff6de15568ef227bac8d668210b304637", "Url": "https://api.github.com/repos/SoftwarePhil/GoodJobAndroid", "Date": "2017-05-01T14:59:44Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mData.getImgPerson()))) { com.squareup.picasso.Picasso.with(this).load(new java.io.File(mData.getImgPerson())).into(mImgUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/775/buggy-version/app.src.main.java.com.example.nhungnguyen.firstproject.Activities.ChangeDbActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(this).load(java.io.File)", "com.example.nhungnguyen.firstproject.Models.UserItem.getImgPerson()", "com.squareup.picasso.Picasso.with(this).load(new java.io.File(mData.getImgPerson())).into(android.widget.ImageView)"], "Fixed commit": "6032b02d305cd0702e8599ae9468301ee4c46f31", "Url": "https://api.github.com/repos/ToanNguyenDN/FirstProject", "Date": "2017-03-27T09:03:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(mData.getImgPerson()))) { com.squareup.picasso.Picasso.with(this).load(new java.io.File(mData.getImgPerson())).centerCrop().fit().error(R.drawable.img_person1).into(mImgPerson); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/775/buggy-version/app.src.main.java.com.example.nhungnguyen.firstproject.Activities.DetailPersonActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(this).load(new java.io.File(mData.getImgPerson())).centerCrop()", "com.squareup.picasso.Picasso.with(this).load(new java.io.File(mData.getImgPerson())).centerCrop().fit().error(R.drawable.img_person1).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(this).load(new java.io.File(mData.getImgPerson())).centerCrop().fit().error(R.drawable.img_person1)", "com.squareup.picasso.Picasso.with(this).load(new java.io.File(mData.getImgPerson())).centerCrop().fit()", "com.example.nhungnguyen.firstproject.Models.UserItem.getImgPerson()", "com.squareup.picasso.Picasso.with(this).load(java.io.File)"], "Fixed commit": "6032b02d305cd0702e8599ae9468301ee4c46f31", "Url": "https://api.github.com/repos/ToanNguyenDN/FirstProject", "Date": "2017-03-27T09:03:52Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (mBuilder == null) { android.util.Log.e(edu.kit.isco.kitalumniapp.gcm.GcmIntentService.TAG, \"NotificationCompat.Builder is not initialized!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1686/buggy-version/app.src.main.java.edu.kit.isco.kitalumniapp.gcm.GcmIntentService.java", "BodyUseAPI": [], "Fixed commit": "edf288a86bec2fa1e8ebc5e454789f63826bc041", "Url": "https://api.github.com/repos/maksim-m/KitAlumniApp-Client", "Date": "2015-03-25T17:04:55Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(inputAnswer))) { setAnswered(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9140/buggy-version/Android_App.MindRate.app.src.main.java.com.example.mindrate.gson.TextAnswer.java", "BodyUseAPI": [], "Fixed commit": "1ea3c0ea344e44b055aae1229acfa8e261da7391", "Url": "https://api.github.com/repos/apm1467/mind-rate", "Date": "2017-03-16T09:10:56Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getRegisterClassStore().containsKey(serviceClass.getName()))) { updateServiceClass(serviceClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/9110/buggy-version/app.src.main.java.org.onosproject.yms.app.ysr.DefaultYangSchemaRegistry.java", "BodyUseAPI": ["org.onosproject.yms.app.ysr.DefaultYangSchemaRegistry.updateServiceClass(java.lang.Class<?>)"], "Fixed commit": "a69e82f33bbd480aa1cac46eb8c91509b0e3a018", "Url": "https://api.github.com/repos/GauravAgrawal-Huawei/ymsm", "Date": "2016-09-07T05:05:59Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getMode()) != (game.GameState.STOCK)) || ((a.getLives()) > 0)) { a.setHCenter(getSpawnX(a.getId())); a.setVCenter(getSpawnX(a.getId())); a.setVx(0); a.setVy(0); a.setPowerup(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4787/buggy-version/Arena.src.game.GameState.java", "BodyUseAPI": ["game.GameState.getSpawnX(a.getId())", "game.Actor.getId()", "game.Actor.setVCenter(int)", "game.Actor.setVy(int)", "game.Actor.setPowerup(int)", "game.Actor.setHCenter(int)", "game.Actor.getId()", "game.GameState.getSpawnX(a.getId())", "game.Actor.setVx(int)"], "Fixed commit": "b759bbf8e64c1f844da9ed334b226811720cfaf9", "Url": "https://api.github.com/repos/pyrotech911/TSPSmashArena", "Date": "2013-10-27T23:55:29Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ($(\"span.btn-opener1\").isDisplayed()) { $(\"span.btn-opener1\").click(); $(\"#text-01\").waitUntil(visible, 1000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2924/buggy-version/src.main.java.hromadske.pages.HomePage.java", "BodyUseAPI": [], "Fixed commit": "cb39b4d8566e13d777fa7602e6dbca4ce6ac9fc3", "Url": "https://api.github.com/repos/Xotabu4/hromadskeTV", "Date": "2015-03-28T12:47:22Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.hasErrors()) { model.addAttribute(\"editProjectFrm\", projectDto); return \"edit-project\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4713/buggy-version/src.main.java.com.webapp.controllers.secure.ProjectController.java", "BodyUseAPI": [], "Fixed commit": "e24414c70e734f6c2edaffe5819e402817cd8451", "Url": "https://api.github.com/repos/karwashyam/varadaproject", "Date": "2016-09-22T17:00:03Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.webapp.dbsession.DbSession.isValidLogin(getDbSession(), sessionService))) { java.lang.String url = \"/login.do\"; return \"redirect:\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/4713/buggy-version/src.main.java.com.webapp.controllers.secure.ProjectController.java", "BodyUseAPI": [], "Fixed commit": "e24414c70e734f6c2edaffe5819e402817cd8451", "Url": "https://api.github.com/repos/karwashyam/varadaproject", "Date": "2016-09-22T17:00:03Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.contains(\"?code=\"))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7481/buggy-version/oauthLibGithub.src.main.java.com.hardikgoswami.oauthLibGithub.OauthActivity.java", "BodyUseAPI": [], "Fixed commit": "be905233276c2b2a58045b7419141b50022d9610", "Url": "https://api.github.com/repos/jdamacena/github-oauth", "Date": "2017-07-25T14:51:40Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first) { first = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3925/buggy-version/plugins.de.hub.jstattrack.src.de.hub.jstattrack.AbstractStatistic.java", "BodyUseAPI": [], "Fixed commit": "de85d48a05fc86a3b0e05dffda34d4ab06f710f3", "Url": "https://api.github.com/repos/markus1978/jstattrack", "Date": "2015-12-04T09:55:08Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNsdHelper) == null) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { getInternetPermission(); }else { initializeNsd(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8433/buggy-version/app.src.main.java.sxccal.edu.android.remouse.ConnectionFragment.java", "BodyUseAPI": [], "Fixed commit": "d378f401e584c9b631f9461b1d004911644d6ac7", "Url": "https://api.github.com/repos/montimaj/Remouse", "Date": "2016-07-26T06:34:34Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sxccal.edu.android.remouse.ConnectionFragment.sActiveDiscoveryListener)) { mNsdHelper.discoverServices(); sxccal.edu.android.remouse.ConnectionFragment.sActiveDiscoveryListener = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/8433/buggy-version/app.src.main.java.sxccal.edu.android.remouse.ConnectionFragment.java", "BodyUseAPI": [], "Fixed commit": "d378f401e584c9b631f9461b1d004911644d6ac7", "Url": "https://api.github.com/repos/montimaj/Remouse", "Date": "2016-07-26T06:34:34Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.common.DimensionManager.getWorld(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (world == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3850/buggy-version/src.main.java.ZombieAwareness.WorldEventListener.java", "BodyUseAPI": [], "Fixed commit": "84cf9a03b0e43c67460534aa02c81ce7f5cd2e32", "Url": "https://api.github.com/repos/Corosauce/ZombieAwareness", "Date": "2017-02-12T22:42:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.common.DimensionManager.getWorld(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (world == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3850/buggy-version/src.main.java.ZombieAwareness.WorldEventListener.java", "BodyUseAPI": [], "Fixed commit": "84cf9a03b0e43c67460534aa02c81ce7f5cd2e32", "Url": "https://api.github.com/repos/Corosauce/ZombieAwareness", "Date": "2017-02-12T22:42:25Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/312/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "e2c8b4e681f972edf52750ec4baf20df2c1c5a6d", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/312/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "e2c8b4e681f972edf52750ec4baf20df2c1c5a6d", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOwner()) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7587/buggy-version/server.src.main.java.org.candlepin.model.Product.java", "BodyUseAPI": [], "Fixed commit": "4486e10c7c52f76ab4685955996fc7faf2d0e042", "Url": "https://api.github.com/repos/candlepin/candlepin", "Date": "2015-03-10T19:01:21Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (exCol == null) { exCol = new org.owasp.dependencycheck.exception.ExceptionCollection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6473/buggy-version/dependency-check-maven.src.main.java.org.owasp.dependencycheck.maven.BaseDependencyCheckMojo.java", "BodyUseAPI": [], "Fixed commit": "6d2a6bbd3d07af89bbf2fe978fe7324f9c92fa82", "Url": "https://api.github.com/repos/aikebah/DependencyCheck", "Date": "2017-07-12T19:40:31Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preview == false) outputFile.setLastModified(java.lang.System.currentTimeMillis());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6607/buggy-version/src.main.java.net.easymodo.asagi.Local.java", "BodyUseAPI": [], "Fixed commit": "34780f5318609371c660fca789407e5e70206337", "Url": "https://api.github.com/repos/eksopl/asagi", "Date": "2012-11-11T16:31:24Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pj.getNo()) == 0) { throw new net.easymodo.asagi.exception.ContentParseException(\"Could not parse post (post num missing and could not be zero)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6607/buggy-version/src.main.java.net.easymodo.asagi.YotsubaJSON.java", "BodyUseAPI": [], "Fixed commit": "34780f5318609371c660fca789407e5e70206337", "Url": "https://api.github.com/repos/eksopl/asagi", "Date": "2012-11-11T16:31:24Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pj.getTime()) == 0) { throw new net.easymodo.asagi.exception.ContentParseException(\"Could not parse post (post timestamp missing and could not be zero)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6607/buggy-version/src.main.java.net.easymodo.asagi.YotsubaJSON.java", "BodyUseAPI": [], "Fixed commit": "34780f5318609371c660fca789407e5e70206337", "Url": "https://api.github.com/repos/eksopl/asagi", "Date": "2012-11-11T16:31:24Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pj.getNo()) == 0) { throw new net.easymodo.asagi.exception.ContentParseException(\"Could not parse thread (thread post num missing and could not be zero)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6607/buggy-version/src.main.java.net.easymodo.asagi.YotsubaJSON.java", "BodyUseAPI": [], "Fixed commit": "34780f5318609371c660fca789407e5e70206337", "Url": "https://api.github.com/repos/eksopl/asagi", "Date": "2012-11-11T16:31:24Z"},
{"Line": "=>1076", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (routeId.isEmpty()) { routeId = getGTFSRouteIdFromRouteShortName(pdfRouteId.substring(0, pdfRouteId.indexOf(\"/\"))); if (((routeId) != null) && (!(routeId.isEmpty()))) { columnGTFSRSName.put(colInPdf, pdfRouteId.substring(0, pdfRouteId.indexOf(\"/\"))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/6408/buggy-version/sayservice.it.src.main.java.sayservice.AnnotatedTTGenerator.java", "BodyUseAPI": [], "Fixed commit": "ad32f3edea752abc3b38b6c8f9468ed796a38bfb", "Url": "https://api.github.com/repos/nawaz2013/annotated.timetable", "Date": "2015-07-07T11:16:24Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current) == null) { current = new de.gdevelop.ibb.business.kalk.entity.Kalkulation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/2035/buggy-version/src.main.java.de.gdevelop.ibb.view.kalk.KalkWizardBacking.java", "BodyUseAPI": [], "Fixed commit": "5bb934ac4b639b7525b187c1d8e829a268baedc2", "Url": "https://api.github.com/repos/gdevelop2017/ibb-ui", "Date": "2017-07-22T18:31:41Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_prices.containsKey(name)) && (amount >= (_prices.get(name)))) { return new com.macadamian.jbehave_tutorial.Product(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3618/buggy-version/src.main.java.com.macadamian.jbehave_tutorial.Machine.java", "BodyUseAPI": [], "Fixed commit": "6ccce78331993217b1353747e4473d11909be0ed", "Url": "https://api.github.com/repos/dkelly/jbehave_tutorial", "Date": "2013-09-11T22:38:38Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_parent.getDesiredState()) == (OoyalaPlayer.DesiredState.DESIRED_PLAY)) { setState(OoyalaPlayer.State.PLAYING); }else { setState(OoyalaPlayer.State.READY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/7377/buggy-version/AdvancedPlaybackSampleApp.app.src.main.java.com.ooyala.sample.utils.SampleVideoStreamPlayer.java", "BodyUseAPI": [], "Fixed commit": "1c57a2831223c1d9830d11e0283edf4051a239e6", "Url": "https://api.github.com/repos/ooyala/android-sample-apps", "Date": "2016-09-15T20:44:57Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(move)) < 1) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/1320/buggy-version/WheelPicker.src.main.java.com.aigestudio.wheelpicker.WheelPicker.java", "BodyUseAPI": [], "Fixed commit": "c3104ee5ea36d2299d43309e5cedb0e5da0177b0", "Url": "https://api.github.com/repos/AigeStudio/WheelPicker", "Date": "2016-07-13T07:12:02Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom2.Element.getTextTrim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((text != null) && ((text.length()) == 0)) text = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3132/buggy-version/cadcDALI.src.ca.nrc.cadc.dali.tables.votable.VOTableReader.java", "BodyUseAPI": [], "Fixed commit": "3b272c810b92e5e7fac9cec79fc26bf37b4f3064", "Url": "https://api.github.com/repos/opencadc/dal", "Date": "2016-05-20T23:48:18Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkSourceFiles()) { generateCustomStructureToFile(); if (clummy.classes.MainScreen.customStructExist) joptionFileCreatedSuccessMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V15/3222/buggy-version/src.clummy.classes.GenerateFileDataScreen.java", "BodyUseAPI": [], "Fixed commit": "d1b349ecded01efebc8f632452aca5eb73f74529", "Url": "https://api.github.com/repos/syariffudinzo/clummy", "Date": "2015-09-04T10:20:56Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kRunOptions.pattern.equals(\"<tasks> .TaskCellBag </tasks>\")) { kRunOptions.pattern = \"<tasks> .Bag </tasks>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1304/buggy-version/kernel.src.main.java.org.kframework.krun.modes.KRunExecutionMode.java", "BodyUseAPI": [], "Fixed commit": "d0444a73c49598418f543d1033951d76435a48e5", "Url": "https://api.github.com/repos/PATHnzezhan/k", "Date": "2016-11-30T04:31:41Z"},
{"Line": "=>772", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listSize == 0) { listSize = 10000; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7559/buggy-version/intermine.api.main.src.org.intermine.api.lucene.KeywordSearch.java", "BodyUseAPI": [], "Fixed commit": "1e2e24daf1b118493170325d03cbb4de2a0e76df", "Url": "https://api.github.com/repos/alexkalderimis/intermine", "Date": "2014-12-16T10:40:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayHomeAsUpEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5424/buggy-version/app.src.main.java.org.openlmis.core.view.activity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "2e6141de483fab3cff030f08504ba9822da7ae06", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2015-10-08T07:30:44Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 21) finishAfterTransition();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2083/buggy-version/newsreader.src.main.java.com.wmendez.newsreader.lib.ui.NewsActivity.java", "BodyUseAPI": [], "Fixed commit": "752431c4dce4395ebd30768eaedcb014cb54f90c", "Url": "https://api.github.com/repos/wm3ndez/NewsReaders", "Date": "2015-08-17T19:48:44Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.contains(\"..\")) { iResponse.sendStream(404, \"File not found\", null, null, 0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7630/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.get.OServerCommandGetStaticContent.java", "BodyUseAPI": [], "Fixed commit": "24c5aec36d4d5fcb1f465d8ca1c7e7b64bb68d75", "Url": "https://api.github.com/repos/aheintz/orientdb", "Date": "2015-06-17T16:59:12Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.warlords.util.PlayerUtil.getWlPlayer(com.warlords.main.Warlords.getPlugin(com.warlords.main.Warlords.class).getDataFolder(),(\"/players/\" + (p.getUniqueId())))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (wp != null) { if (wp.getMode()) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1009/buggy-version/Warlords.src.com.warlords.main.EventManager.java", "BodyUseAPI": ["com.warlords.util.WarlordsPlayer.getMode()"], "Fixed commit": "718c0929df3074c3208150f01809c11e012f42bc", "Url": "https://api.github.com/repos/Niconator1/Warlords", "Date": "2016-07-14T19:42:48Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numFriends == 0) { java.lang.System.out.println(\"Wow sorry to hear it...\\n*cough* Onward.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1281/buggy-version/Game.java", "BodyUseAPI": [], "Fixed commit": "f32a05d86407b204097b9a66c2f86b88f6f17a0f", "Url": "https://api.github.com/repos/evookelj/TeamBerkelj", "Date": "2016-01-20T03:47:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((values.length) != 2) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1590/buggy-version/ninor15_VOP_opg2.src.opg2_numberplates.NumberPlates.java", "BodyUseAPI": [], "Fixed commit": "66c0e8a39beb5bda07131fab5d28d1fa98fa4459", "Url": "https://api.github.com/repos/fotoply/VideregaaendeObjektorienteredeProgrammering", "Date": "2016-04-12T11:22:06Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tableCount == 3) { findDiscard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7322/buggy-version/src.player.Player.java", "BodyUseAPI": [], "Fixed commit": "a25ab6b14227c461412e50cb2c2538ea0ae3ac13", "Url": "https://api.github.com/repos/jashper/zetebot", "Date": "2013-01-16T01:16:26Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((advancementId != null) && (advancementId >= 0)) { query.append(\" AND id != \").append(advancementId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5346/buggy-version/src.main.java.objects.objectLogic.LogicAdvancement.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.Integer)"], "Fixed commit": "79e14c7a9fae145703f800f30a604e416f45d141", "Url": "https://api.github.com/repos/nickFr0st/bsaDB", "Date": "2016-09-13T02:53:09Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((splitter.length) != 13) { logger.Log.getInstance().log(java.util.logging.Level.WARNING, ((((\"Row number \" + count) + \" in \") + (nodesDmpFile.getName())) + \" is inconsistent:\")); logger.Log.getInstance().log(java.util.logging.Level.WARNING, ((((nodesDmpFile.getName()) + count) + \": \") + line)); logger.Log.getInstance().log(java.util.logging.Level.WARNING, \"Skipping inconsistent line.\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2043/buggy-version/src.helper.nodes.NodesDBDeployer.java", "BodyUseAPI": [], "Fixed commit": "b07d7fb56d07edf6c781c8aea429f3d30ed7f176", "Url": "https://api.github.com/repos/axrt/TUIT", "Date": "2014-03-19T17:04:47Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(connected)) { throw new org.mariadb.jdbc.internal.util.dao.QueryException(\"Could not send query: Connection is closed\", (-1), ExceptionMapper.SqlStates.CONNECTION_EXCEPTION.getSqlState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4794/buggy-version/src.main.java.org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.java", "BodyUseAPI": [], "Fixed commit": "dab4b67b844a6637f20d2d7a207ad485d8558d77", "Url": "https://api.github.com/repos/andyjojo/mariadb-connector-j", "Date": "2016-01-12T08:50:03Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == 5) newLine.append(((rand.nextInt(1000)) + \" \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5381/buggy-version/src.com.untamedears.PrisonPearl.PrisonPearlPlugin.java", "BodyUseAPI": [], "Fixed commit": "a6b93a307785fa0e62fe73392d2810a6d5c7522a", "Url": "https://api.github.com/repos/Civcraft/PrisonPearl", "Date": "2015-09-01T15:18:24Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getClob(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (clob == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5563/buggy-version/src.org.nutz.dao.impl.jdbc.ClobValueAdaptor.java", "BodyUseAPI": [], "Fixed commit": "c372d7b6c2efc8b14fb9d1045978016e1e513157", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-10-21T02:58:48Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getBlob(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (blob == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5563/buggy-version/src.org.nutz.dao.impl.jdbc.BlobValueAdaptor.java", "BodyUseAPI": [], "Fixed commit": "c372d7b6c2efc8b14fb9d1045978016e1e513157", "Url": "https://api.github.com/repos/nutzam/nutz", "Date": "2011-10-21T02:58:48Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (added > 0) { org.elasticsearch.action.bulk.BulkResponse resp = bulk.execute().actionGet(); if (resp.hasFailures()) { for (org.elasticsearch.action.bulk.BulkItemResponse br : org.sakaiproject.nakamura.api.lite.util.Iterables.adaptTo(resp.iterator())) { if (br.failed()) { uk.co.tfd.sm.search.es.ContentEventListener.LOGGER.error(\"Failed {} {} \", br.getId(), br.getFailureMessage()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/690/buggy-version/extensions.search.src.main.java.uk.co.tfd.sm.search.es.ContentEventListener.java", "BodyUseAPI": [], "Fixed commit": "883eb11a35d81db49c26b33f28d717e518adb272", "Url": "https://api.github.com/repos/ieb/sparsemapcontent", "Date": "2012-10-01T03:22:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processMetaFile.createNewFile())) { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7312/buggy-version/Kitodo-FileManagement.src.main.java.org.kitodo.filemanagement.FileManagement.java", "BodyUseAPI": [], "Fixed commit": "f4bc034624b5d45d929e2f7810ff680abbd60d94", "Url": "https://api.github.com/repos/Kathrin-Huber/kitodo-production", "Date": "2017-04-21T08:38:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processMetaFile.getParentFile().mkdirs())) { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7312/buggy-version/Kitodo-FileManagement.src.main.java.org.kitodo.filemanagement.FileManagement.java", "BodyUseAPI": [], "Fixed commit": "f4bc034624b5d45d929e2f7810ff680abbd60d94", "Url": "https://api.github.com/repos/Kathrin-Huber/kitodo-production", "Date": "2017-04-21T08:38:00Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof io.netty.handler.codec.http.websocketx.PingWebSocketFrame) { io.netty.handler.codec.http.websocketx.PingWebSocketFrame pingWebSocketFrame = ((io.netty.handler.codec.http.websocketx.PingWebSocketFrame) (msg)); ctx.channel().writeAndFlush(new io.netty.handler.codec.http.websocketx.PongWebSocketFrame(pingWebSocketFrame.content())); }else if (msg instanceof io.netty.handler.codec.http.websocketx.PongWebSocketFrame) { io.netty.handler.codec.http.websocketx.PongWebSocketFrame pongWebSocketFrame = ((io.netty.handler.codec.http.websocketx.PongWebSocketFrame) (msg)); boolean finalFragment = pongWebSocketFrame.isFinalFragment(); io.netty.buffer.ByteBuf byteBuf = pongWebSocketFrame.content(); java.nio.ByteBuffer byteBuffer = byteBuf.nioBuffer(); cMsg = new org.wso2.carbon.messaging.ControlCarbonMessage(org.wso2.carbon.transport.http.netty.common.Constants.CONTROL_SIGNAL_HEARTBEAT, byteBuffer, finalFragment); setupCarbonMessage(ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5556/buggy-version/http.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.listener.WebSocketSourceHandler.java", "BodyUseAPI": [], "Fixed commit": "9f447b22e61afcba270f03733a33e28f4093b00b", "Url": "https://api.github.com/repos/wso2/carbon-transports", "Date": "2017-04-17T10:29:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { menu.setHeaderTitle(mAdapter.getItem(((int) (v.getTag()))).getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6656/buggy-version/app.src.main.java.ar.rulosoft.mimanganu.ServerFilteredNavigationFragment.java", "BodyUseAPI": [], "Fixed commit": "96d1fa7502985b8cedbc749ef00123b70d103ccf", "Url": "https://api.github.com/repos/raulhaag/MiMangaNu", "Date": "2017-02-07T14:22:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { for (ar.rulosoft.mimanganu.componentes.Manga m : mangas) { if (m.getPath().equals(mAdapter.getItem(lastContextMenuIndex).getPath())) mangaAlreadyAdded = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6656/buggy-version/app.src.main.java.ar.rulosoft.mimanganu.ServerFilteredNavigationFragment.java", "BodyUseAPI": [], "Fixed commit": "96d1fa7502985b8cedbc749ef00123b70d103ccf", "Url": "https://api.github.com/repos/raulhaag/MiMangaNu", "Date": "2017-02-07T14:22:16Z"},
{"Line": "=>663", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.storagedriver.model.StoragePool.getCapabilities()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (capabilities == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5146/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.ExternalDeviceCommunicationInterface.java", "BodyUseAPI": [], "Fixed commit": "3e45af675957faab26e91b3d148afa1666bc75f3", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-09-27T14:03:27Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eol.globi.service.Dataset.getArchiveURI()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (archiveURI != null) { datasetNode.setProperty(\"archiveURI\", archiveURI.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6263/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.data.NodeFactoryNeo4j.java", "BodyUseAPI": ["java.net.URI.toString()", "org.neo4j.graphdb.Node.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "0e5da6b6c2a8ef63de6aa0c0e85bbab1cdf90f02", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2017-01-13T00:22:40Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (containsPointInVector((color ? black_control : white_control), x_position, y_position)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6102/buggy-version/src.Pieces.King.java", "BodyUseAPI": [], "Fixed commit": "426d02303816bad449304c8bc35e9d6668339cb3", "Url": "https://api.github.com/repos/krishkalai07/Chess", "Date": "2017-10-21T21:48:52Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cacheHashMap.containsKey(parsedLine[0])) { java.util.Date savedModified = cacheHashMap.get(parsedLine[0]); if ((lastModified.getTime()) > (savedModified.getTime())) { cacheHashMap.remove(parsedLine[0]); cacheHashMap.put(parsedLine[0], lastModified); } }else { cacheHashMap.put(parsedLine[0], lastModified); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7830/buggy-version/TCPClient.src.UrlCache.java", "BodyUseAPI": [], "Fixed commit": "dd32fccbd20ef898810212fb0ef767baaa94ad3b", "Url": "https://api.github.com/repos/rsbarhey/CPSC501-A1", "Date": "2015-10-09T15:12:38Z"},
{"Line": "=>1156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.api.context.Context.getVisitService().getActiveVisitsByPatient(org.openmrs.Patient)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(vis.isEmpty())) { for (org.openmrs.Visit v : vis) { o.setObsDatetime(v.getStartDatetime()); } }else { java.util.List<org.openmrs.Visit> visit = org.openmrs.api.context.Context.getVisitService().getVisitsByPatient(patient); if (visit != null) { if ((visit.size()) > 0) { org.openmrs.Visit v = visit.get(0); o.setObsDatetime(v.getStartDatetime()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6115/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.patient.EditPatientFragmentController.java", "BodyUseAPI": [], "Fixed commit": "c619968e6ed1bec8bc5ed715a2049b992291151d", "Url": "https://api.github.com/repos/hispindia/his-hiv-emr", "Date": "2016-10-04T11:53:21Z"},
{"Line": "=>910", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listDisplay.getCurrentPageIndex()) == (view.MainViewController.TODAY_TASKS_PAGE_INDEX)) { displayTodayTasks(); }else if ((listDisplay.getCurrentPageIndex()) == (view.MainViewController.UNDONE_TASKS_PAGE_INDEX)) { setOnePageView(view.MainViewController.UNDONE_TASKS_PAGE_INDEX); }else if ((listDisplay.getCurrentPageIndex()) == (view.MainViewController.DONE_TASKS_PAGE_INDEX)) { setOnePageView(view.MainViewController.DONE_TASKS_PAGE_INDEX, taskList.getFinishedTasks()); }else if ((listDisplay.getCurrentPageIndex()) == (view.MainViewController.SEARCH_RESULT_PAGE_INDEX)) { if ((searchKey) != null) { setOnePageView(view.MainViewController.SEARCH_RESULT_PAGE_INDEX, taskList.searchTaskByKeyword(searchKey)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3616/buggy-version/src.view.MainViewController.java", "BodyUseAPI": ["javafx.scene.control.Pagination.getCurrentPageIndex()", "javafx.scene.control.Pagination.getCurrentPageIndex()", "javafx.scene.control.Pagination.getCurrentPageIndex()"], "Fixed commit": "db2e56b04a463644a06c9a6a1839822615dcc13b", "Url": "https://api.github.com/repos/CS2103TAug2014-W15-4J/main", "Date": "2014-11-03T14:17:12Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!silent) { javax.swing.JOptionPane.showConfirmDialog(Main.frame, \"Up to date!\", \"Up to date\", javax.swing.JOptionPane.DEFAULT_OPTION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8162/buggy-version/main.ToS_Fourm_Mafia_Note_Taker.src.assets.UpdateHandler.java", "BodyUseAPI": [], "Fixed commit": "f4cca5b4be84f1b851c0eefaab61128d1ea9163f", "Url": "https://api.github.com/repos/Coolway99/ToS_Forum_Mafia_Note_Taker", "Date": "2014-08-18T22:50:00Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (responseReceivedTimestamp > 0) { delay = (responseReceivedTimestamp - taskSentTimestamp) / 1000.0; this.setSumTaskDelay(((this.getSumTaskDelay()) + delay)); ++(this.delayCounter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4486/buggy-version/src.main.java.org.hobbit.odin.odinevaluationmodule.OdinEvaluationModule.java", "BodyUseAPI": [], "Fixed commit": "9e8590cc9c9477e5cb1e5bc094389a9c6b3b2b4f", "Url": "https://api.github.com/repos/hobbit-project/odin", "Date": "2017-05-23T12:15:23Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != topicStr) { gov.usgswim.sparrow.domain.PredefinedSessionTopic topic = gov.usgswim.sparrow.domain.PredefinedSessionTopic.fromString(topicStr); if (null != topic) { s.setTopic(topic); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7554/buggy-version/sparrow-business.src.main.java.gov.usgswim.sparrow.action.LoadPredefinedSessions.java", "BodyUseAPI": ["gov.usgswim.sparrow.domain.PredefinedSessionTopic.fromString(java.lang.String)"], "Fixed commit": "0ad76219b784b1cbf2833f392884df0f7a9d309a", "Url": "https://api.github.com/repos/USGS-CIDA/sparrow-dss", "Date": "2016-04-27T22:18:42Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.isActive()) { sortableEntities.add(new fr.kohen.alexandre.framework.systems.DefaultCameraSystem.SortableEntity(e, transformMapper.get(e).getPosition().z)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7284/buggy-version/src.fr.kohen.alexandre.framework.systems.DefaultCameraSystem.java", "BodyUseAPI": ["java.util.List<fr.kohen.alexandre.framework.systems.DefaultCameraSystem.SortableEntity>.add(fr.kohen.alexandre.framework.systems.DefaultCameraSystem.SortableEntity)", "com.artemis.ComponentMapper<fr.kohen.alexandre.framework.systems.Transform>.get(com.artemis.Entity)", "transformMapper.get(e).getPosition()"], "Fixed commit": "c49f7d797b1a794506cd2a14c1017e353c45e099", "Url": "https://api.github.com/repos/akohen/Merkurius", "Date": "2013-08-24T07:47:11Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((felix) != null) && ((adapter) != null)) && ((progress) != null)) { java.util.List<com.james.felixlauncher.data.AppDetail> apps = felix.getFavorites(); if ((apps.size()) > 0) progress.setVisibility(View.GONE); if ((adapter.getList().size()) != (apps.size())) adapter.setList(apps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3830/buggy-version/app.src.main.java.com.james.felixlauncher.fragments.FavFragment.java", "BodyUseAPI": [], "Fixed commit": "1a0adaccf9c51e553f8351b1e574b42b21c81748", "Url": "https://api.github.com/repos/TheAndroidMaster/FelixLauncher", "Date": "2016-11-05T00:58:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((felix) != null) && ((adapter) != null)) && ((progress) != null)) { java.util.List<com.james.felixlauncher.data.AppDetail> apps = felix.getApps(); if ((apps.size()) > 0) progress.setVisibility(View.GONE); if ((adapter.getList().size()) != (apps.size())) adapter.setList(apps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3830/buggy-version/app.src.main.java.com.james.felixlauncher.fragments.AppsFragment.java", "BodyUseAPI": [], "Fixed commit": "1a0adaccf9c51e553f8351b1e574b42b21c81748", "Url": "https://api.github.com/repos/TheAndroidMaster/FelixLauncher", "Date": "2016-11-05T00:58:35Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.util.EntityUtils.toString(httpResponse.getEntity(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((responseString != null) && (!(responseString.isEmpty()))) { return responseString.split(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/49/buggy-version/modules.siddhi-extensions.event-table.src.main.java.org.wso2.siddhi.extension.eventtable.sync.SyncTableHandler.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "558810079d0ee83e7d9743c2b35d2d888f699c60", "Url": "https://api.github.com/repos/wso2/siddhi", "Date": "2016-03-04T08:41:35Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((layersBuilder) != null) { out.println(); int maxLayer = layersBuilder.getMaxLayer(); for (int layer = 0; layer <= maxLayer; layer++) { java.util.Set<org.isatools.tablib.export.graph_algorithm.Node> lnodes = layersBuilder.getLayerNodes(layer); if ((lnodes == null) || (lnodes.isEmpty())) continue; out.println((\" // layer \" + layer)); out.print(\" { rank = same\"); for (org.isatools.tablib.export.graph_algorithm.Node node : lnodes) { int nodeid = ids.get(node); out.print((\"; \" + nodeid)); } out.println(\" }\\n\"); } out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/42/buggy-version/graph2tab.src.main.java.org.isatools.tablib.export.graph_algorithm.ChainsBuilder.java", "BodyUseAPI": [], "Fixed commit": "cd155453579ac4ac10d52212ba3c910d53d060ac", "Url": "https://api.github.com/repos/marco-brandizi/ISAvalidator-ISAconverter-BIImanager", "Date": "2011-03-16T19:06:11Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (var instanceof org.eclipse.jdt.core.dom.SimpleName) { varValue = core.common.util.Abacus.computeHelper(((org.eclipse.jdt.core.dom.Expression) (var)), fields); }else if (var instanceof org.eclipse.jdt.core.dom.NumberLiteral) { varValue = java.lang.Integer.parseInt(var.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8268/buggy-version/src.core.common.util.Abacus.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "68579a2c2f4ff52f1e5c74df5242fe59341b3883", "Url": "https://api.github.com/repos/Jtester2013/Jtester", "Date": "2013-05-02T12:43:07Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (changeData.isSubmitted()) { if (image != null) { changeData.toImage(image); facade.getImageService().updateData(image, changeData.getCategoryIds(), changeData.getImageKeywordNames()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5817/buggy-version/src.main.java.com.imcode.imcms.addon.imagearchive.controller.AddImageController.java", "BodyUseAPI": ["facade.getImageService().updateData(com.imcode.imcms.addon.imagearchive.entity.Images,changeData.getCategoryIds(),changeData.getImageKeywordNames())", "com.imcode.imcms.addon.imagearchive.command.ChangeImageDataCommand.toImage(com.imcode.imcms.addon.imagearchive.entity.Images)", "com.imcode.imcms.addon.imagearchive.command.ChangeImageDataCommand.getImageKeywordNames()", "com.imcode.imcms.addon.imagearchive.command.ChangeImageDataCommand.getCategoryIds()"], "Fixed commit": "39b61714cc3e023c33bae992e71acd425720cec0", "Url": "https://api.github.com/repos/imCodePartnerAB/imcms", "Date": "2015-02-25T15:02:55Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((otherEntity instanceof asteroids.model.Ship) && (entity instanceof asteroids.model.Bullet)) { if ((((asteroids.model.Bullet) (entity)).getBulletSource()) == otherEntity) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2623/buggy-version/src.asteroids.model.World.java", "BodyUseAPI": [], "Fixed commit": "52a4b369a0d60355f02a4c7b1ec2a56b64e8966e", "Url": "https://api.github.com/repos/DriesDM/OOPProject", "Date": "2017-04-20T13:17:41Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity instanceof asteroids.model.Ship) && (otherEntity instanceof asteroids.model.Bullet)) { if ((((asteroids.model.Bullet) (otherEntity)).getBulletSource()) == entity) continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2623/buggy-version/src.asteroids.model.World.java", "BodyUseAPI": [], "Fixed commit": "52a4b369a0d60355f02a4c7b1ec2a56b64e8966e", "Url": "https://api.github.com/repos/DriesDM/OOPProject", "Date": "2017-04-20T13:17:41Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (otherShip == null) { throw new java.lang.IllegalArgumentException(\"otherShip must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2623/buggy-version/src.asteroids.model.Ship.java", "BodyUseAPI": [], "Fixed commit": "52a4b369a0d60355f02a4c7b1ec2a56b64e8966e", "Url": "https://api.github.com/repos/DriesDM/OOPProject", "Date": "2017-04-20T13:17:41Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((at.scch.teclo.src.BugzillaSetup.driver) != null) at.scch.teclo.src.BugzillaSetup.driver.quit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4438/buggy-version/Teclo-00-Base.src.at.scch.teclo.src.BugzillaSetup.java", "BodyUseAPI": [], "Fixed commit": "edede8bba336157ebd717ddc46f80bf33fb2a945", "Url": "https://api.github.com/repos/rramler/teclo", "Date": "2017-05-22T17:29:08Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clazz.equals(org.bukkit.inventory.ItemStack.class)) return ((T) (new org.bukkit.inventory.ItemStack(org.bukkit.Material.DIRT)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7192/buggy-version/src.net.kineticraft.lostcity.utils.ReflectionUtil.java", "BodyUseAPI": [], "Fixed commit": "42088ff1af0c0ea9118c3ad7c2ac1f752ec7e84f", "Url": "https://api.github.com/repos/Kneesnap/Kineticraft", "Date": "2017-10-21T02:10:26Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minParams == (java.lang.Integer.MAX_VALUE)) { net.kineticraft.lostcity.Core.alertStaff(((\"Failed to force-construct \" + (clazz.getSimpleName())) + \". No constructor found.\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7192/buggy-version/src.net.kineticraft.lostcity.utils.ReflectionUtil.java", "BodyUseAPI": [], "Fixed commit": "42088ff1af0c0ea9118c3ad7c2ac1f752ec7e84f", "Url": "https://api.github.com/repos/Kneesnap/Kineticraft", "Date": "2017-10-21T02:10:26Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (playlist.isStarred()) { playlist.refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5619/buggy-version/desktop.src.com.frostwire.gui.library.LibraryUtils.java", "BodyUseAPI": ["com.frostwire.alexandria.Playlist.refresh()"], "Fixed commit": "ae5da51bb9f09f07c86f662371fd31a6ca43fc75", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-12-08T08:22:48Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pwmApplication.getLocalDB()) == null) || ((pwmApplication.getLocalDB().status()) != (LocalDB.Status.OPEN))) { password.pwm.util.queue.EmailQueueManager.LOGGER.warn(\"localdb is not open, EmailQueueManager will remain closed\"); status = STATUS.CLOSED; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2123/buggy-version/src.main.java.password.pwm.util.queue.EmailQueueManager.java", "BodyUseAPI": [], "Fixed commit": "2179600954b887694bb58c578883d14de375884c", "Url": "https://api.github.com/repos/idwright/pwm", "Date": "2016-07-13T01:05:10Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eclipseExists) { if (dir && (!(eclipseResource instanceof org.eclipse.core.resources.IContainer))) { wrongType = true; }else if ((!dir) && (!(eclipseResource instanceof org.eclipse.core.resources.IFile))) { wrongType = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4932/buggy-version/com.soartech.soar.ide.core.src.com.soartech.soar.ide.core.model.impl.TclFileReferenceBuilder.java", "BodyUseAPI": [], "Fixed commit": "971fd6a512bb09a8dc44e7d28e844fc1ddba7ccd", "Url": "https://api.github.com/repos/soartech/soaride", "Date": "2016-08-25T15:04:27Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.fi.muni.pa165.teamred.dao.RideDao.findById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Objects.equals(userId, ride.getDriver().getId())) { throw new java.lang.IllegalArgumentException(\"Cannot add driver to his own ride\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7680/buggy-version/blablacar-service.src.main.java.cz.fi.muni.pa165.teamred.service.PassengerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "36615f619d1232c9456a746b6c91a35497a5b029", "Url": "https://api.github.com/repos/ChesterSVK/PA165-RedTeamProject", "Date": "2017-12-17T14:09:52Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(opponent.equalsIgnoreCase(potVictim.getCustomName()))) && (i == ((orderedPlayers.length) - 1))) { java.lang.System.out.println(\"No such player.\"); i = 0; java.lang.System.out.println(\"Select your victim: \"); opponent = scan.next(); }else { current.triggerEffect(potVictim.getCharacter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/415/buggy-version/src.jftha.main.Main.java", "BodyUseAPI": ["jftha.main.Space.triggerEffect(potVictim.getCharacter())", "jftha.main.Player.getCharacter()"], "Fixed commit": "2f469ed08e8ba693bafd1075377981fa672c8d71", "Url": "https://api.github.com/repos/BlackNinja0001/Board-Game-JFTHA", "Date": "2014-04-18T21:45:37Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tbsc.techy.block.BlockBaseFacingMachine.isCorrectBlock(worldObj, pos, tbsc.techy.block.BlockBaseFacingMachine.class)) { if (((((handleRedstone()) || (handleBoosters())) || (handleProcessing())) || (handleInsertion())) || (handleExtraction())) { this.markDirty(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8642/buggy-version/src.main.java.tbsc.techy.tile.TileMachineBase.java", "BodyUseAPI": [], "Fixed commit": "f40b7cd7778b30c78aa9f63c9f989504e113429b", "Url": "https://api.github.com/repos/Tbsc/Techy", "Date": "2016-06-03T18:50:24Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.cpsc434.stroboscopik.StrobeActivity.trans) != (com.cpsc434.stroboscopik.StrobeActivity.Transition.SUBNODE_PENDING_GCM)) com.cpsc434.stroboscopik.StrobeActivity.trans = com.cpsc434.stroboscopik.StrobeActivity.Transition.SUBNODE_PENDING_SERVER_VALIDATION;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5059/buggy-version/src.com.cpsc434.stroboscopik.StrobeActivity.java", "BodyUseAPI": [], "Fixed commit": "15dc617f71944175a6216154158436c0dd18d5d2", "Url": "https://api.github.com/repos/nvedire/Stroboscopik", "Date": "2012-12-13T04:42:00Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.cpsc434.stroboscopik.StrobeActivity.trans) != (com.cpsc434.stroboscopik.StrobeActivity.Transition.SUPERNODE_PENDING_GCM)) com.cpsc434.stroboscopik.StrobeActivity.trans = com.cpsc434.stroboscopik.StrobeActivity.Transition.SUPERNODE_PENDING_SERVER_VALIDATION;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5059/buggy-version/src.com.cpsc434.stroboscopik.StrobeActivity.java", "BodyUseAPI": [], "Fixed commit": "15dc617f71944175a6216154158436c0dd18d5d2", "Url": "https://api.github.com/repos/nvedire/Stroboscopik", "Date": "2012-12-13T04:42:00Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (base != null) { return base; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2971/buggy-version/RHive.inst.javasrc.src.com.nexr.rhive.hive.udf.UDFUtils.java", "BodyUseAPI": [], "Fixed commit": "2cab0285173d6bf210366d12cb679879dde9db05", "Url": "https://api.github.com/repos/nexr/RHive", "Date": "2014-12-10T08:03:12Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { throw new java.lang.IllegalStateException(\"Missing chunk-size\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4372/buggy-version/rawhttp-core.src.main.java.com.athaydes.rawhttp.core.EagerBodyReader.java", "BodyUseAPI": [], "Fixed commit": "7dff9206647cba5e490200d357ea40b211bf154a", "Url": "https://api.github.com/repos/renatoathaydes/rawhttp", "Date": "2017-12-05T19:50:40Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((touchCount) == 2) && ((state) == (com.googlecode.mgwt.dom.client.recognizer.pinch.PinchRecognizer.State.READY))) { state = com.googlecode.mgwt.dom.client.recognizer.pinch.PinchRecognizer.State.ONE_FINGER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4697/buggy-version/lib.mgwt.mgwt-2.0.0.com.googlecode.mgwt.dom.client.recognizer.pinch.PinchRecognizer.java", "BodyUseAPI": [], "Fixed commit": "ce46f3c98eb0155acd25c5f7c70f3501ca237a8a", "Url": "https://api.github.com/repos/BodyTrack/Grapher", "Date": "2015-02-18T21:18:24Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4050/buggy-version/src.problemset._003LongestSubstring.java", "BodyUseAPI": [], "Fixed commit": "1abe1cd1d33000e351c0bd736ec3cb5cfd3305ca", "Url": "https://api.github.com/repos/ShaishavJogani/LeetCodeSolutions", "Date": "2017-08-11T05:41:59Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delegate) != null) { return delegate.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2954/buggy-version/src.community.backup-restore.core.src.main.java.org.geoserver.backuprestore.AbstractExecutionAdapter.java", "BodyUseAPI": [], "Fixed commit": "be80689c2a91cf859be63166c91f6e507b128b1f", "Url": "https://api.github.com/repos/dvntucker/geoserver", "Date": "2017-04-14T16:23:59Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob) (ch)).state) == (((com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob) (ch)).HUNTING)) ((com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob) (ch)).state = ((com.shatteredpixel.shatteredpixeldungeon.actors.mobs.Mob) (ch)).WANDERING;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3422/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.plants.Blindweed.java", "BodyUseAPI": [], "Fixed commit": "d3899871ac292e88b98fe0cadc285c1660ebca0d", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-03-19T07:29:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mob.state) == (mob.HUNTING)) mob.state = mob.WANDERING;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3422/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.items.armor.RogueArmor.java", "BodyUseAPI": [], "Fixed commit": "d3899871ac292e88b98fe0cadc285c1660ebca0d", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2015-03-19T07:29:33Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cloudml.deployer.JCloudsConnector.getNodeByName(a.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cm != null) { a.setPublicAddress(getNodeById(cm.getId()).getPublicAddresses().iterator().next()); a.setId(cm.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1527/buggy-version/deployer.src.main.java.org.cloudml.deployer.JCloudsConnector.java", "BodyUseAPI": ["org.jclouds.compute.domain.ComputeMetadata.getId()", "getNodeById(cm.getId()).getPublicAddresses().iterator()", "org.cloudml.deployer.JCloudsConnector.getNodeById(cm.getId())", "org.jclouds.compute.domain.ComputeMetadata.getId()", "org.jclouds.compute.domain.NodeMetadata.getPublicAddresses()", "org.cloudml.deployer.NodeInstance.setPublicAddress(getNodeById(cm.getId()).getPublicAddresses().iterator().next())", "getNodeById(cm.getId()).getPublicAddresses().iterator().next()", "org.cloudml.deployer.NodeInstance.setId(cm.getId())"], "Fixed commit": "e927faa33415613ccf81d61f1b49d5b4d30cf656", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2013-08-02T12:31:59Z"},
{"Line": "=>905", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.zhour.fragments.PartyAndIEventInviteFragment.addContactList) == null) { com.zhour.fragments.PartyAndIEventInviteFragment.addContactList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3552/buggy-version/app.src.main.java.com.zhour.fragments.PartyAndIEventInviteFragment.java", "BodyUseAPI": [], "Fixed commit": "5c571a7387b12d0c08bf6ccc6b8a170406c29f26", "Url": "https://api.github.com/repos/sixscorpions/Zhour", "Date": "2017-08-26T14:59:06Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pokeraidbot.domain.raid.RaidRepository.getActiveRaidOrFallbackToExRaid(pokeraidbot.domain.gym.Gym,config.getRegion(),net.dv8tion.jda.core.entities.User)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(pokemonRaid.getPokemon().isEgg())) { verifyPermission(localeService, commandEvent, user, pokemonRaid, config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/564/buggy-version/src.main.java.pokeraidbot.commands.AlterRaidCommand.java", "BodyUseAPI": ["pokeraidbot.commands.AlterRaidCommand.verifyPermission(pokeraidbot.domain.config.LocaleService,com.jagrosh.jdautilities.commandclient.CommandEvent,net.dv8tion.jda.core.entities.User,pokeraidbot.domain.raid.Raid,pokeraidbot.infrastructure.jpa.config.Config)"], "Fixed commit": "b81c38e729fc6f06a7aee07d5e9702f8d414451e", "Url": "https://api.github.com/repos/magnusmickelsson/pokeraidbot", "Date": "2017-11-30T11:48:32Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toWrap > 0) { content.setText(((note.getContent().substring(0, toWrap)) + \"...\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4802/buggy-version/app.src.main.java.com.embedonix.notetaker.NoteAdapter.java", "BodyUseAPI": ["note.getContent().substring(int,int)", "android.widget.TextView.setText(((note.getContent().substring(0, toWrap)) + \"...\"))"], "Fixed commit": "8f947fbbc6eb0a0049509869ab62bd66056acef8", "Url": "https://api.github.com/repos/EMBEDONIX/AndroidNoteTaker", "Date": "2017-03-19T00:03:56Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mgproject.inftel.mgproject.model.User) (spinner.getSelectedItem())) != null) { java.lang.String url = ((mgproject.inftel.mgproject.activities.MGApp.getServerUri()) + \"project/\") + (mgproject.inftel.mgproject.activities.MGApp.getmInstance().getProject().getIdProject()); new mgproject.inftel.mgproject.util.RequestProject(this, \"addCollaborator\", jsonUser).execute(url); }else { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), \"No se ha seleccionado ningun usuario\", Toast.LENGTH_LONG); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5416/buggy-version/app.src.main.java.mgproject.inftel.mgproject.activities.AddCollaboratorActivity.java", "BodyUseAPI": [], "Fixed commit": "7a1cfa2a2f2e908be2d678a8e9b366fe9296fbb5", "Url": "https://api.github.com/repos/Billygaliano/MgProjectMobile", "Date": "2016-04-13T15:22:40Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.unibas.medizin.osce.domain.StandardizedRole.findStandardizedRole(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((oldStandardizedRole.getRoleTemplate()) != null) { flag = ch.unibas.medizin.osce.domain.RoleBaseItem.createRoleBaseItemValueForStandardizedRole(newStandardizedRole.getId(), oldStandardizedRole.getRoleTemplate().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3955/buggy-version/OsceManager.src.main.java.ch.unibas.medizin.osce.domain.StandardizedRole.java", "BodyUseAPI": ["oldStandardizedRole.getRoleTemplate().getId()", "ch.unibas.medizin.osce.domain.RoleBaseItem.createRoleBaseItemValueForStandardizedRole(newStandardizedRole.getId(),oldStandardizedRole.getRoleTemplate().getId())", "ch.unibas.medizin.osce.domain.StandardizedRole.getRoleTemplate()"], "Fixed commit": "62fbbe4ed02365c618d05198a585b346029b95ab", "Url": "https://api.github.com/repos/nikotsunami/osce", "Date": "2013-08-27T05:56:32Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((phaseGroup.get(i).getStartDate()) != null) { builder.append((((\"Projektphase: \" + sep) + (phaseGroup.get(i).getPhaseName())) + \"\\n\")); builder.append(((((((phaseGroup.get(i).getStartDate()) + sep) + \"-\") + sep) + (phaseGroup.get(i).getEndDate())) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3916/buggy-version/src.server.core.ExportCSV.java", "BodyUseAPI": ["java.lang.StringBuilder.append((((\"Projektphase: \" + sep) + (phaseGroup.get(i).getPhaseName())) + \"\\n\"))", "java.lang.StringBuilder.append(((((((phaseGroup.get(i).getStartDate()) + sep) + \"-\") + sep) + (phaseGroup.get(i).getEndDate())) + \"\\n\"))", "phaseGroup.get(i).getStartDate()", "phaseGroup.get(i).getEndDate()", "java.util.ArrayList<model.project.Phase>.get(int)", "phaseGroup.get(i).getPhaseName()", "java.util.ArrayList<model.project.Phase>.get(int)", "java.util.ArrayList<model.project.Phase>.get(int)"], "Fixed commit": "eed955610ba09e32af7539184b2a6c8a3b262882", "Url": "https://api.github.com/repos/mammo0/PROJECT", "Date": "2015-01-29T07:45:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (repoCache.containsKey(repoName)) { java.util.Map<java.lang.String, org.jenkinsci.plugins.ghprb.GhprbRepository> map = repoCache.get(repoName); set = com.google.common.collect.ImmutableSet.copyOf(map.values()); }else { set = java.util.Collections.<org.jenkinsci.plugins.ghprb.GhprbRepository>emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2864/buggy-version/src.main.java.org.jenkinsci.plugins.ghprb.GhprbRepositoryCache.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.jenkinsci.plugins.ghprb.GhprbRepository>>.get(java.lang.String)"], "Fixed commit": "546f79fbf1ad28fdc06e58fec94b5c0ed0368315", "Url": "https://api.github.com/repos/pgressa/ghprb-plugin", "Date": "2014-03-18T13:45:35Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sakaiproject.nakamura.api.lite.content.ContentManager.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (content != null) { content.removeProperty(property.getName()); contentManager.update(content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/638/buggy-version/bundles.resource.src.main.java.org.sakaiproject.nakamura.resource.lite.servlet.post.operations.ModifyOperation.java", "BodyUseAPI": ["org.sakaiproject.nakamura.api.lite.content.Content.removeProperty(property.getName())", "org.sakaiproject.nakamura.api.lite.content.ContentManager.update(org.sakaiproject.nakamura.api.lite.content.Content)"], "Fixed commit": "d84383713e864984af3b27e11da65cbeda6e3b4f", "Url": "https://api.github.com/repos/savithap/nakamura", "Date": "2011-06-23T15:37:15Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collections.binarySearch(this.directorsPanel.getAuthors(),model.entity.Author,java.util.Comparator<model.entity.Author>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index < 0) { this.directorsPanel.addRow(a); this.directorsPanel.getAuthors().add(a); a.setType(AuthorType.MOVIE_DIRECTOR); }else { a.setPrimaryKey(this.directorsPanel.getAuthors().get(index).getPrimaryKey()); this.directorsPanel.addRow(a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1727/buggy-version/view.items.creators.MovieCreator.java", "BodyUseAPI": ["this.directorsPanel.getAuthors().get(int)", "model.entity.Author.setPrimaryKey(this.directorsPanel.getAuthors().get(index).getPrimaryKey())", "this.directorsPanel.getAuthors().get(index).getPrimaryKey()"], "Fixed commit": "eb46f8c405f7204bae8704b5ed1d804f2831eb66", "Url": "https://api.github.com/repos/kornicameister/Mabis", "Date": "2012-05-28T00:14:53Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kevin.de.persistence.MessagePersistence.dbIsClustered())) { new kevin.de.persistence.MessagePersistence().persistMessage(systemMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2535/buggy-version/src.main.java.kevin.de.server.Handler.QueueHandler.java", "BodyUseAPI": [], "Fixed commit": "53dd0f2291d7f227d3b38881829ce316de894881", "Url": "https://api.github.com/repos/KevinHuebner/DistributedChat", "Date": "2015-04-25T16:35:33Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kevin.de.persistence.MessagePersistence.dbIsClustered())) { new kevin.de.persistence.MessagePersistence().persistMessage(chatMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2535/buggy-version/src.main.java.kevin.de.server.Handler.QueueHandler.java", "BodyUseAPI": [], "Fixed commit": "53dd0f2291d7f227d3b38881829ce316de894881", "Url": "https://api.github.com/repos/KevinHuebner/DistributedChat", "Date": "2015-04-25T16:35:33Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null != statisticalSearchCode) { org.kuali.ole.docstore.engine.service.storage.rdbms.pojo.HoldingsStatisticalSearchRecord holdingsStatisticalSearchRecord = new org.kuali.ole.docstore.engine.service.storage.rdbms.pojo.HoldingsStatisticalSearchRecord(); holdingsStatisticalSearchRecord.setStatisticalSearchId(statisticalSearchRecord.getStatisticalSearchId()); holdingsStatisticalSearchRecord.setStatisticalSearchRecord(statisticalSearchRecord); holdingsStatisticalSearchRecord.setHoldingsId(holdingsRecord.getHoldingsId()); holdingsStatisticalSearchRecord.setHoldingsRecord(holdingsRecord); holdingsStatisticalSearchRecords.add(holdingsStatisticalSearchRecord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3649/buggy-version/ole-docstore.ole-docstore-webapp.src.main.java.org.kuali.ole.dsng.rest.handler.eholdings.StatisticalSearchCodeHandler.java", "BodyUseAPI": [], "Fixed commit": "5c7071806a839c219469b6e9d469d92e9d9a92ff", "Url": "https://api.github.com/repos/hemalathaselvaraj/ole", "Date": "2016-03-11T14:44:28Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isSchemaInCache(schemaName)) { java.util.ArrayList<java.lang.String> tableNames = cache.get(schemaName); tableNames.add(tableName); cache.put(schemaName, tableNames); }else { LOGGER.debug(\"Schema doesn't exist. Table couldn't be created\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8039/buggy-version/cygnus-common.src.main.java.com.telefonica.iot.cygnus.backends.postgresql.PostgreSQLCache.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.put(java.lang.String,java.util.ArrayList<java.lang.String>)", "java.util.HashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "ef962c870b8d227683c1ab1b4b7e40cfc10490a6", "Url": "https://api.github.com/repos/telefonicaid/fiware-cygnus", "Date": "2016-09-30T09:57:36Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((propertySetsDefault) == null) { propertySetsDefault = new org.bitstrings.maven.plugins.dependencypath.PropertySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7746/buggy-version/src.main.java.org.bitstrings.maven.plugins.dependencypath.DependencyPathMojo.java", "BodyUseAPI": [], "Fixed commit": "4c81e1756eeb3033f2c9a377d421d42e332b9d01", "Url": "https://api.github.com/repos/bitstrings/dependencypath-maven-plugin", "Date": "2011-11-11T01:40:08Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((propertySets) == null) { propertySets = new org.bitstrings.maven.plugins.dependencypath.PropertySet[]{ new org.bitstrings.maven.plugins.dependencypath.PropertySet() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7746/buggy-version/src.main.java.org.bitstrings.maven.plugins.dependencypath.DependencyPathMojo.java", "BodyUseAPI": [], "Fixed commit": "4c81e1756eeb3033f2c9a377d421d42e332b9d01", "Url": "https://api.github.com/repos/bitstrings/dependencypath-maven-plugin", "Date": "2011-11-11T01:40:08Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (caseInsensitive) { c.invokestatic(java.lang.Character.class.getName(), \"toLowerCase\", \"(C)C\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1919/buggy-version/parser-generator.src.main.java.io.undertow.annotationprocessor.ParserGenerator.java", "BodyUseAPI": [], "Fixed commit": "1d1696ca815b9d719b528ca0307fd92b30714ff7", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2013-02-17T22:07:17Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (HttpServer.ApiType.HEARTBEAT)) { return new org.apache.bookkeeper.http.service.HeartbeatService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2701/buggy-version/bookkeeper-http.http-server.src.main.java.org.apache.bookkeeper.http.NullHttpServiceProvider.java", "BodyUseAPI": [], "Fixed commit": "51f9bb6ed60a9afd39e75306ae4530bec88b8c2a", "Url": "https://api.github.com/repos/zhaijack/bookkeeper", "Date": "2017-10-07T14:59:13Z"},
{"Line": "=>1510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inaturalist.android.INaturalistService.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (json == null) return new org.inaturalist.android.BetterJSONObject();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/499/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": [], "Fixed commit": "ecaced913b052dccdc42aa8ae0d9a736dd3bbc2e", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-08-08T10:56:01Z"},
{"Line": "=>1534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inaturalist.android.INaturalistService.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (json == null) return new org.inaturalist.android.SerializableJSONArray();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/499/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": [], "Fixed commit": "ecaced913b052dccdc42aa8ae0d9a736dd3bbc2e", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-08-08T10:56:01Z"},
{"Line": "=>1522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inaturalist.android.INaturalistService.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (json == null) return new org.inaturalist.android.BetterJSONObject();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/499/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.INaturalistService.java", "BodyUseAPI": [], "Fixed commit": "ecaced913b052dccdc42aa8ae0d9a736dd3bbc2e", "Url": "https://api.github.com/repos/budowski/iNaturalistAndroid", "Date": "2016-08-08T10:56:01Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fs.rename(path, ((com.continuuity.weave.filesystem.HDFSLocation) (destination)).path)) { return new com.continuuity.weave.filesystem.HDFSLocation(fs, new org.apache.hadoop.fs.Path(destination.toURI())); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2342/buggy-version/yarn.src.main.java.com.continuuity.weave.filesystem.HDFSLocation.java", "BodyUseAPI": [], "Fixed commit": "d13dd06776f13f80edf4599c49885664069c80e5", "Url": "https://api.github.com/repos/chtyim/weave", "Date": "2013-06-01T07:18:56Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((message.getFrom().length) > 0) { au.com.wallaceit.voicemail.helper.VvmContacts vvmContacts = new au.com.wallaceit.voicemail.helper.VvmContacts(context); phone = vvmContacts.extractPhoneFromVoicemailAddress(message.getFrom()[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8738/buggy-version/app.src.main.java.au.com.wallaceit.voicemail.helper.VoicemailAttachmentHelper.java", "BodyUseAPI": [], "Fixed commit": "5c10d31f17eadb1b1df790a5799dee8f778e5a9f", "Url": "https://api.github.com/repos/micwallace/visualvoicemail", "Date": "2015-09-18T15:41:57Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (unit.getAbsolutePath().startsWith(project.getSourceRootPath().getAbsolutePath())) { path = unit.getAbsolutePath().substring(((project.getSourceRootPath().getAbsolutePath().length()) + 1)); }else { int index = unit.getAbsolutePath().indexOf(java.io.File.separatorChar); path = unit.getAbsolutePath().substring((index + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7253/buggy-version/core.fmu-import-export.src.main.java.org.overturetool.fmi.export.FmuExporter.java", "BodyUseAPI": ["org.overturetool.fmi.IProject.getSourceRootPath()", "java.io.File.getAbsolutePath()", "java.lang.String.indexOf(char)", "java.io.File.getAbsolutePath()", "project.getSourceRootPath().getAbsolutePath().length()", "project.getSourceRootPath().getAbsolutePath()", "java.io.File.getAbsolutePath()", "java.lang.String.substring(int)", "java.lang.String.substring(((project.getSourceRootPath().getAbsolutePath().length()) + 1))"], "Fixed commit": "8fba22e6ea5694ae70df3fdc8e6f359d58857bc4", "Url": "https://api.github.com/repos/overturetool/overture-fmu", "Date": "2017-03-08T13:11:44Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Registry.urlvalidator.isValid(arg)) { org.jsoup.nodes.Document doc = org.jsoup.Jsoup.connect(arg).userAgent(\"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.57 Safari/537.17\").get(); java.lang.String title = doc.title(); if (!(title.isEmpty())) { com.techcavern.wavetact.eventListeners.IRCUtils.sendMessage(event.getBot(), event.getChannel(), (((\"[\" + (event.getUser().getNick())) + \"] - \") + title), \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5205/buggy-version/src.main.java.com.techcavern.wavetact.eventListeners.FunMsgListener.java", "BodyUseAPI": ["org.jsoup.Jsoup.connect(arg).userAgent(java.lang.String)", "org.jsoup.Jsoup.connect(arg).userAgent(\"Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.57 Safari/537.17\").get()", "org.jsoup.Jsoup.connect(java.lang.String)"], "Fixed commit": "43b4347ba1a7ad526085e04b7249c979009fb44a", "Url": "https://api.github.com/repos/TechCavern/WaveTact", "Date": "2015-06-19T21:14:37Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((deviceInfo.getUser()) == null) { fillUser(headers, deviceInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9198/buggy-version/atup-device.src.main.java.org.feuyeux.jaxrs2.atup.device.resource.AtupDeviceResource.java", "BodyUseAPI": ["org.feuyeux.jaxrs2.atup.device.resource.AtupDeviceResource.fillUser(javax.ws.rs.core.HttpHeaders,org.feuyeux.jaxrs2.atup.core.domain.AtupDevice)"], "Fixed commit": "b949a04e5b992037117c1789320b321946e48b1d", "Url": "https://api.github.com/repos/feuyeux/jax-rs2-atup", "Date": "2014-01-07T04:51:36Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ctrip.platform.dal.daogen.host.csharp.CSharpParameterHost.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n.equals(null)) n = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2834/buggy-version/dao-gen-core.src.main.java.com.ctrip.platform.dal.daogen.host.csharp.CSharpParameterHost.java", "BodyUseAPI": [], "Fixed commit": "673caf575c4408dd1ea5ff8501e099390ebaaca3", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2017-02-17T08:36:43Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (builder.getCrud_type().equals(\"select\")) { com.ctrip.platform.dal.daogen.generator.processor.csharp.CSharpParameterHost host = new com.ctrip.platform.dal.daogen.generator.processor.csharp.CSharpParameterHost(); host.setConditionType(com.ctrip.platform.dal.daogen.enums.ConditionType.valueOf(java.lang.Integer.parseInt(tokens[0]))); parameters.add(host); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2834/buggy-version/dal-dao-gen.src.main.java.com.ctrip.platform.dal.daogen.generator.processor.csharp.AbstractCSharpDataPreparer.java", "BodyUseAPI": [], "Fixed commit": "673caf575c4408dd1ea5ff8501e099390ebaaca3", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2017-02-17T08:36:43Z"},
{"Line": "=>697", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastImage.position) + (lastImage.length)) >= (in.length())) { in.seek(((lastImage.position) + 16)); }else { in.seek(((lastImage.position) + (lastImage.length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1121/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["loci.formats.in.NativeND2Reader.seek(long)", "loci.formats.in.NativeND2Reader.seek(long)"], "Fixed commit": "6672c7b4fd268c25d289869e0af1df9ae47adc23", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-25T00:01:09Z"},
{"Line": "=>1137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((imageOffsets.get(i)) - length) != (offsetDiff + 8)) { if (i == 0) { fixByteCounts = true; } imageOffsets.remove(i); imageLengths.remove(i); i--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1121/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Long>.remove(int)", "java.util.ArrayList<int[]>.remove(int)"], "Fixed commit": "6672c7b4fd268c25d289869e0af1df9ae47adc23", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-25T00:01:09Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dcache.xrootd.protocol.messages.OpenResponse.getFileStatus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (fileStatus == null) { fs.filesize = 0; }else { fs.filesize = fileStatus.getSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2733/buggy-version/monitor.src.main.java.edu.uchicago.monitor.MonitorChannelHandler.java", "BodyUseAPI": ["org.dcache.xrootd.util.FileStatus.getSize()"], "Fixed commit": "49a13453b807e0ba7a3f33e4c987293cf272e647", "Url": "https://api.github.com/repos/ivukotic/plugins", "Date": "2015-12-11T17:47:20Z"},
{"Line": "=>797", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!keyClassMatches) org.apache.gora.hbase.store.HBaseStore.LOG.error(\"KeyClass in gora-hbase-mapping is not the same as the one in the databean.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6679/buggy-version/gora-hbase.src.main.java.org.apache.gora.hbase.store.HBaseStore.java", "BodyUseAPI": [], "Fixed commit": "7c0e34eb942ae2fb990795c6ffce1632edfdccac", "Url": "https://api.github.com/repos/nishadi/gora", "Date": "2017-05-27T06:59:35Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { final okhttp3.logging.HttpLoggingInterceptor logging = new okhttp3.logging.HttpLoggingInterceptor(); logging.setLevel(HttpLoggingInterceptor.Level.BODY); clientBuilder.addNetworkInterceptor(logging); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9109/buggy-version/src.main.java.com.mapzen.pelias.Pelias.java", "BodyUseAPI": [], "Fixed commit": "1cbc6ce57b1994582940307ddcd24737f4552546", "Url": "https://api.github.com/repos/pelias/pelias-android-sdk", "Date": "2016-12-28T21:56:35Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (reqMdc != null) { logMessage = reqMdc.get(\"req.logMessage\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2288/buggy-version/src.it.tecla.utils.web.ErrorHandlerServlet.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "e08f74cbeb268345075c530017b98cf70b30aac4", "Url": "https://api.github.com/repos/nchieffo/RestProjectTemplate", "Date": "2017-04-19T15:21:22Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (logMessage != null) { sb.append(logMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2288/buggy-version/src.it.tecla.utils.web.ErrorHandlerServlet.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "e08f74cbeb268345075c530017b98cf70b30aac4", "Url": "https://api.github.com/repos/nchieffo/RestProjectTemplate", "Date": "2017-04-19T15:21:22Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.espertech.esper.epl.named.NamedWindowProcessor.getProcessorInstance(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (instance != null) { instance.removeExplicitIndex(spec.getIndexName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/178/buggy-version/esper.src.main.java.com.espertech.esper.core.context.factory.StatementAgentInstanceFactoryCreateIndex.java", "BodyUseAPI": ["com.espertech.esper.epl.named.NamedWindowProcessorInstance.removeExplicitIndex(spec.getIndexName())"], "Fixed commit": "4d6f273cb0e32b87e9fde6145b1ed18398b6617e", "Url": "https://api.github.com/repos/espertechinc/esper", "Date": "2015-12-18T21:42:21Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["services.getTableService().getState(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (instance != null) { instance.removeExplicitIndex(spec.getIndexName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/178/buggy-version/esper.src.main.java.com.espertech.esper.core.context.factory.StatementAgentInstanceFactoryCreateIndex.java", "BodyUseAPI": ["com.espertech.esper.epl.table.mgmt.TableStateInstance.removeExplicitIndex(spec.getIndexName())"], "Fixed commit": "4d6f273cb0e32b87e9fde6145b1ed18398b6617e", "Url": "https://api.github.com/repos/espertechinc/esper", "Date": "2015-12-18T21:42:21Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(GUI.BoardFrame,java.lang.String,java.lang.String,int,<nulltype>,java.lang.Object[],java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (numPlayers == null) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6672/buggy-version/src.GUI.BoardFrame.java", "BodyUseAPI": [], "Fixed commit": "f4711d4e42c1eb6ee83e9254744bde7dabd02be1", "Url": "https://api.github.com/repos/hamishBUrns/Cluedo", "Date": "2016-08-21T07:43:44Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (repo != null) { repo.getRepository().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5628/buggy-version/git.impl.src.main.java.org.jboss.forge.addon.git.GitUtilsImpl.java", "BodyUseAPI": ["org.eclipse.jgit.api.Git.getRepository()", "repo.getRepository().close()"], "Fixed commit": "76578b760c4d0374fe84454a0a1df73dffae9f6a", "Url": "https://api.github.com/repos/gastaldi/core", "Date": "2014-04-04T02:16:26Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t instanceof java.lang.UnsatisfiedLinkError) && (t.getMessage().contains(\"splashscreen\"))) { java.lang.System.err.println(\"ERROR: Your version of java does not support a GUI\"); java.lang.System.err.println(((\" Please, install in non-headless version of \" + (net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.JAVA)) + \" (or later) to run jEveAssets\")); java.lang.System.out.println(\"ERROR: Your version of java does not support a GUI\"); java.lang.System.out.println(((\" Please, install in non-headless version of \" + (net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.JAVA)) + \" (or later) to run jEveAssets\")); try { javax.swing.JOptionPane.showMessageDialog(null, ((\"Your version of java does not support a GUI\\r\\nPlease, install in non-headless version of \" + (net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.JAVA)) + \" (or later) to run jEveAssets\"), \"Critical Error\", javax.swing.JOptionPane.ERROR_MESSAGE); } catch (java.lang.Throwable ex) { } }else { if (net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.isJavaBug(t)) { javax.swing.JOptionPane.showMessageDialog(null, (\"You have encountered a bug that is most likely a java bug.\\r\\n\" + (((((\"Updating to the latest version of java may fix this problem.\\r\\n\" + \"It\\'s still very helpful to send the the bug report.\\r\\n\") + \"\\r\\n\") + \"Press OK to continue\\r\\n\") + \"\\r\\n\") + \"\\r\\n\")), \"Critical Error\", javax.swing.JOptionPane.ERROR_MESSAGE); } int value = javax.swing.JOptionPane.showConfirmDialog(null, (\"Send bug report?\\r\\n\" + ((((((((\"\\r\\n\" + \"Data send and saved:\\r\\n\") + \"-OS (name and version)\\r\\n\") + \"-Java (vendor and version)\\r\\n\") + \"-Program (name and version)\\r\\n\") + \"-Date (current)\\r\\n\") + \"-Java stack trace (bug)\\r\\n\") + \"\\r\\n\") + \"\\r\\n\")), \"Critical Error\", javax.swing.JOptionPane.OK_CANCEL_OPTION, javax.swing.JOptionPane.ERROR_MESSAGE); if (value == (javax.swing.JOptionPane.OK_OPTION)) { java.lang.String result = send(t); javax.swing.JOptionPane.showMessageDialog(null, result, \"Bug Report\", javax.swing.JOptionPane.PLAIN_MESSAGE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5477/buggy-version/src.main.java.net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.java", "BodyUseAPI": ["net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.isJavaBug(java.lang.Throwable)", "net.nikr.eve.jeveasset.NikrUncaughtExceptionHandler.send(java.lang.Throwable)"], "Fixed commit": "b174dbe06a7dd03a4644049e64dd649265e0b1b7", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-20T20:00:44Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(p1id.equals(PID))) { turnNum = 1; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1881/buggy-version/src.com.voracious.dragons.server.DBHandler.java", "BodyUseAPI": [], "Fixed commit": "96db275daf12af1733525fcd057218be6ec4e06d", "Url": "https://api.github.com/repos/VoraciousSoftworks/Here-There-Be-Dragons", "Date": "2013-05-02T02:36:27Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.hkb48.keepdo.Settings.sDateChangeTime) == null) { com.hkb48.keepdo.Settings.sDateChangeTime = new java.lang.String(\"24:00\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2771/buggy-version/src.com.hkb48.keepdo.Settings.java", "BodyUseAPI": [], "Fixed commit": "5c35f1cc428b5a16104b772c22d2a46d7cf84545", "Url": "https://api.github.com/repos/giza10/keep-doing", "Date": "2013-03-19T21:17:25Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (op != (Operation.NOP)) { Operation.opMap.put(op.opValue, op); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5520/buggy-version/Assembler.src.Operation.java", "BodyUseAPI": [], "Fixed commit": "9bb823547d7bf9cb1fd95c259c0816f924f0d0f4", "Url": "https://api.github.com/repos/bcooper94/Assembler", "Date": "2015-05-15T04:21:48Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Banks.BankManagerComponent.TransferAction.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (transferAction.equals(TransferAction.COMMIT)) this.state = TransactionState.COMMITED; else if (transferAction.equals(TransferAction.ROLLBACK)) { this.state = TransactionState.ROLLBACK; runRollback(); }else throw new Common.Exceptions.IllegalTransactionStateException(\"ung\u00fcltiger Transaktion Status\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8441/buggy-version/Restopoly.src.main.java.Banks.BankManagerComponent.Transaction.java", "BodyUseAPI": ["Banks.BankManagerComponent.TransferAction.equals(TransferAction.ROLLBACK)"], "Fixed commit": "62fb738118a458623e3906e62cbaa82e7b02f8c7", "Url": "https://api.github.com/repos/mcmyffin/VSP", "Date": "2016-06-04T15:44:32Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.alee.utils.XmlUtils.class.getClassLoader()) != (com.alee.utils.XmlUtils.xStream.getClass().getClassLoader())) { java.lang.ClassLoader classLoader = com.alee.utils.XmlUtils.xStream.getClassLoader(); if (classLoader instanceof com.thoughtworks.xstream.core.util.CompositeClassLoader) { ((com.thoughtworks.xstream.core.util.CompositeClassLoader) (classLoader)).add(com.alee.utils.XmlUtils.class.getClassLoader()); }else { com.thoughtworks.xstream.core.util.CompositeClassLoader compositeClassLoader = new com.thoughtworks.xstream.core.util.CompositeClassLoader(); compositeClassLoader.add(com.alee.utils.XmlUtils.class.getClassLoader()); com.alee.utils.XmlUtils.xStream.setClassLoader(compositeClassLoader); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5120/buggy-version/modules.core.src.com.alee.utils.XmlUtils.java", "BodyUseAPI": ["java.lang.ClassLoader.add(java.lang.ClassLoader)", "java.lang.Class.getClassLoader()", "java.lang.Class.getClassLoader()", "com.thoughtworks.xstream.XStream.setClassLoader(com.thoughtworks.xstream.core.util.CompositeClassLoader)", "com.thoughtworks.xstream.core.util.CompositeClassLoader.add(java.lang.ClassLoader)", "com.thoughtworks.xstream.XStream.getClassLoader()"], "Fixed commit": "2e921610ed9138db57f0ab4c94c6fbee56ecaf95", "Url": "https://api.github.com/repos/mgarin/weblaf", "Date": "2016-04-29T09:41:13Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (key.equalsIgnoreCase(\"max_node_id\")) { max_node_id = java.lang.Integer.valueOf(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8248/buggy-version/src.benchmarks.edu.sjtu.benchmark.linkbench.LinkbenchLoader.java", "BodyUseAPI": [], "Fixed commit": "2ced6be327718eba16f0db3f9c00c0cad676e42f", "Url": "https://api.github.com/repos/CompassHXM/h-store-origin", "Date": "2017-01-05T03:22:37Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCode()) == 203) { android.widget.Toast.makeText(getApplicationContext(), \"An account with this email already exists\", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(this, e.getLocalizedMessage(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/358/buggy-version/src.com.a04.cabpool.EditProfileGUI.java", "BodyUseAPI": ["android.widget.Toast.makeText(this, e.getLocalizedMessage(), Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(com.a04.cabpool.EditProfileGUI,e.getLocalizedMessage(),Toast.LENGTH_SHORT)", "com.parse.ParseException.getLocalizedMessage()"], "Fixed commit": "43b045cd5efeea347062578e89376be70a649543", "Url": "https://api.github.com/repos/chin-andrew/CabPool", "Date": "2014-12-02T08:50:15Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shortest && (joinedEntities.contains(entity))) { return aliases.get(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8854/buggy-version/src.main.java.me.hurel.hqlbuilder.builder.HQBQueryStringVisitor.java", "BodyUseAPI": ["java.util.Map<java.lang.Object, java.lang.String>.get(java.lang.Object)"], "Fixed commit": "c1ddc3d40b44078ecf08566884b93f8b6ad54182", "Url": "https://api.github.com/repos/nhurel/yaqapi", "Date": "2014-03-24T12:50:55Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(consoleProcess_.getProcessInfo().getAltBufferActive())) && (altBufferActive())) { showPrimaryBuffer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3232/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.terminal.TerminalSession.java", "BodyUseAPI": [], "Fixed commit": "ba4feedfc66cb2e5cbf6f6b0fa654f004a153b12", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2017-06-27T00:14:32Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (supertypes.containsKey(ONTOLOGY)) { java.util.Set<javax.lang.model.element.AnnotationMirror> ontologyTopSupers = supertypes.get(ONTOLOGY); supertypes.put(ONTOLOGY_TOP, ontologyTopSupers); supertypes.remove(ONTOLOGY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4628/buggy-version/src.ontology.OntologyAnnotatedTypeFactory.java", "BodyUseAPI": ["java.util.Map<javax.lang.model.element.AnnotationMirror, java.util.Set<javax.lang.model.element.AnnotationMirror>>.remove(javax.lang.model.element.AnnotationMirror)", "java.util.Map<javax.lang.model.element.AnnotationMirror, java.util.Set<javax.lang.model.element.AnnotationMirror>>.get(javax.lang.model.element.AnnotationMirror)", "java.util.Map<javax.lang.model.element.AnnotationMirror, java.util.Set<javax.lang.model.element.AnnotationMirror>>.put(javax.lang.model.element.AnnotationMirror,java.util.Set<javax.lang.model.element.AnnotationMirror>)"], "Fixed commit": "bca6ce324c86cfa6c846248714f6882d75454941", "Url": "https://api.github.com/repos/opprop/ontology", "Date": "2016-08-28T20:37:58Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { webView.getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3642/buggy-version/app.src.main.java.jzfp.gs.com.juhenews.activity.WebActivity.java", "BodyUseAPI": [], "Fixed commit": "14af126367e149bdfa0b230fac7e5a00f17a4f7c", "Url": "https://api.github.com/repos/onlyloveyd/JuheNews", "Date": "2016-12-13T09:31:36Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (where.toLowerCase().startsWith(\" where \")) { this.where = where; }else { this.where = \" where \" + where; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8606/buggy-version/androorm.src.main.java.palashk1234.androorm.builders.SelectQuery.java", "BodyUseAPI": [], "Fixed commit": "c82b8096b90e7602c685bf24a0d138bfb6199954", "Url": "https://api.github.com/repos/palashk1234/AndroORM", "Date": "2017-02-28T13:04:25Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bytes == (org.itxtech.synapseapi.network.synlib.ServerConnection.MAGIC_BYTES)) { if ((buffer.length) > 4) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4865/buggy-version/src.org.itxtech.synapseapi.network.synlib.ServerConnection.java", "BodyUseAPI": [], "Fixed commit": "328854c5d10dc7a07aeba2947f867b6ab80a0979", "Url": "https://api.github.com/repos/iTXTech/SynapseAPI", "Date": "2016-06-28T08:04:18Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(deviceIsTablet)) getSupportActionBar().setSelectedNavigationItem(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8554/buggy-version/BixiTO.src.com.bixito.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "74f185d6aea5e4a296a5abba2e4365d728542fd2", "Url": "https://api.github.com/repos/BixiTO/android", "Date": "2013-03-25T15:01:17Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((rightSon) instanceof WAVLTree.WAVLExternalNode) && ((leftSon) instanceof WAVLTree.WAVLExternalNode)) { return (rank) == 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7965/buggy-version/src.WAVLTree.java", "BodyUseAPI": [], "Fixed commit": "98d226e795ef860b26e0780f3bfaae70a08f8a94", "Url": "https://api.github.com/repos/tami28/WAVLTree", "Date": "2016-12-18T21:39:14Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["1.getPeerListFragment()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragment != null) getPeerListFragment().setConnected(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7398/buggy-version/app.src.main.java.com.seniordesign.wolfpack.quizinator.activities.HostGameActivity.java", "BodyUseAPI": [], "Fixed commit": "48c19875c909ff06a931c481232e825ce683ff4c", "Url": "https://api.github.com/repos/TeamWolfpack/Quizinator", "Date": "2017-04-03T16:01:58Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BLSkyRenderer.INSTANCE.clipPlaneBuffer.getGeometryDepthBuffer()", "thebetweenlands.client.render.shader.MainShader.getDepthBuffer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((worldDepthBuffer == null) || (clipPlaneBuffer == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8506/buggy-version/java.thebetweenlands.client.render.shader.MainShader.java", "BodyUseAPI": [], "Fixed commit": "038767ee10c92936d4faa8b4cbfb3a688d29108c", "Url": "https://api.github.com/repos/Angry-Pixel/The-Betweenlands", "Date": "2015-10-18T12:03:45Z"},
{"Line": "=>703", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkJumpStatus) != null) { if ((checkJumpStatus.getBike_status()) == 0) { startActivity(com.school.bicycle.ui.ZxingActivity.class, \"location\", location, \"status\", \"0\"); }else { startActivity(com.school.bicycle.ui.ZxingActivity.class, \"location\", location, \"status\", \"1\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6509/buggy-version/Bicycle.src.main.java.com.school.bicycle.ui.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5b2d48fe6586608807cc16e9f7383ccc92b5eb2d", "Url": "https://api.github.com/repos/ytzht/SchoolBicycle", "Date": "2017-08-03T01:15:50Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aMap) != null) aMap.moveCamera(cameraUpdate);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6509/buggy-version/Bicycle.src.main.java.com.school.bicycle.ui.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5b2d48fe6586608807cc16e9f7383ccc92b5eb2d", "Url": "https://api.github.com/repos/ytzht/SchoolBicycle", "Date": "2017-08-03T01:15:50Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buffer) != null) { final java.awt.Graphics bg = buffer.getGraphics(); if ((model) != null) { draw(bg); }else { bg.setColor(java.awt.Color.WHITE); bg.fillRect(0, 0, buffer.getWidth(), buffer.getHeight()); } bg.dispose(); g.drawImage(buffer, 0, 0, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7862/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.explore.ViewLattice.java", "BodyUseAPI": [], "Fixed commit": "a03947a040f886b8ec4c88e93dc213aa85d96c07", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-02-18T12:51:16Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (packingAction == (DeploymentAction.UNPACK_ENTRY)) { if (archiveResource.archiveLocation().getScheme().startsWith(\"file\")) { org.atomnuke.container.classloader.archive.ArchiveEntryProcessor.checkParentDirectory(unpackDirectory, archiveResource); } outputStreamReference = new com.rackspace.papi.commons.util.io.OutputStreamSplitter(byteArrayOutput, new java.io.FileOutputStream(org.atomnuke.container.classloader.archive.ArchiveEntryProcessor.unpackTargetFor(unpackDirectory, archiveResource))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8947/buggy-version/container.src.main.java.org.atomnuke.container.classloader.archive.ArchiveEntryProcessor.java", "BodyUseAPI": [], "Fixed commit": "1af50ca413563b4039f875cc9136582f48f9c74f", "Url": "https://api.github.com/repos/zinic/atom-nuke", "Date": "2012-10-05T18:57:07Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { sb.append(' '); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1812/buggy-version/src.main.java.com.github.alexfalappa.nbspringboot.Utils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "17c2b15cdf1ce04905daf233922f07b19f6e3e11", "Url": "https://api.github.com/repos/AlexFalappa/nb-springboot", "Date": "2017-01-16T18:48:26Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Parser.TNotesParser.checkTime(arr[(j + 1)])) == 0) { list.add(Parser.TNotesParser.formatDate(arr[(j + 1)])); }else { if ((arr.length) >= (j + 3)) { atTimePMAM = arr[(j + 2)]; java.lang.String temp = ((arr[(j + 1)]) + \" \") + (Parser.TNotesParser.timeAMPM(atTimePMAM)); list.add(Parser.TNotesParser.formatTime(temp.trim()).toString()); }else { list.add(Parser.TNotesParser.formatTime(arr[(j + 1)]).toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8051/buggy-version/src.Parser.TNotesParser.java", "BodyUseAPI": ["java.time.LocalTime.toString()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "Parser.TNotesParser.formatDate(java.lang.String)", "Parser.TNotesParser.formatTime(java.lang.String)"], "Fixed commit": "c7a2f125f72522f2b65f6e1548fb0fa7093c73ef", "Url": "https://api.github.com/repos/cs2103jan2016-t09-3j/main", "Date": "2016-03-22T07:40:45Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Parser.TNotesParser.checkTime(arr[(j + 1)])) == 0) { list.add(Parser.TNotesParser.formatDate(arr[(j + 1)])); }else { if ((arr.length) >= (j + 3)) { atTimePMAM = arr[(j + 2)]; java.lang.String temp = ((arr[(j + 1)]) + \" \") + (Parser.TNotesParser.timeAMPM(atTimePMAM)); list.add(Parser.TNotesParser.formatTime(temp.trim()).toString()); }else { list.add(Parser.TNotesParser.formatTime(arr[(j + 1)]).toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8051/buggy-version/src.Parser.TNotesParser.java", "BodyUseAPI": ["java.time.LocalTime.toString()", "Parser.TNotesParser.formatDate(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "Parser.TNotesParser.formatTime(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c7a2f125f72522f2b65f6e1548fb0fa7093c73ef", "Url": "https://api.github.com/repos/cs2103jan2016-t09-3j/main", "Date": "2016-03-22T07:40:45Z"},
{"Line": "=>2098", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.beans.PropertyChangeEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (model.getName().equals(getModelBuilder().getSelectedName())) { startFrameSpinner.setValue(e.getNewValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2583/buggy-version/src.org.opensourcephysics.cabrillo.tracker.TrackerPanel.java", "BodyUseAPI": [], "Fixed commit": "412effe1167b86ca9a500103e447f5c044da2995", "Url": "https://api.github.com/repos/OpenSourcePhysics/tracker", "Date": "2014-02-03T16:09:48Z"},
{"Line": "=>2104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.beans.PropertyChangeEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (model.getName().equals(getModelBuilder().getSelectedName())) { int end = ((java.lang.Integer) (e.getNewValue())); if (end == (java.lang.Integer.MAX_VALUE)) { end = (getPlayer().getVideoClip().getFrameCount()) - 1; } endFrameSpinner.setValue(end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2583/buggy-version/src.org.opensourcephysics.cabrillo.tracker.TrackerPanel.java", "BodyUseAPI": [], "Fixed commit": "412effe1167b86ca9a500103e447f5c044da2995", "Url": "https://api.github.com/repos/OpenSourcePhysics/tracker", "Date": "2014-02-03T16:09:48Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datatorrent.demos.dimensions.schemas.AdsDataQuery.AdsDataQueryData.getTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((atrb.getLatestNumBuckets()) == null) { com.datatorrent.demos.dimensions.schemas.AdsDataQueryValidator.logger.error(\"Either from and to must be specified or lastestNumBuckets.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2417/buggy-version/demos.dimensions.src.main.java.com.datatorrent.demos.dimensions.schemas.AdsDataQueryValidator.java", "BodyUseAPI": [], "Fixed commit": "8150fec9478a1e5e3edd4b90ccf3be2b3926a3cc", "Url": "https://api.github.com/repos/apache/apex-malhar", "Date": "2015-03-24T21:07:44Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activeService && activeUnit) { activitySvc.run(service, \"du.trigger\", \"Re-evaluating deployment unit state\", new java.lang.Runnable() { @java.lang.Override public void run() { reconcile(unit); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4702/buggy-version/code.iaas.service-discovery.server.src.main.java.io.cattle.platform.servicediscovery.deployment.impl.DeploymentUnitManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "e82705a0f4b695f61b10c8b277a49aee63a4531e", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2017-02-02T01:37:49Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (submitted == true) { deleteQuery = \"delete from submittedSurveyAnswers where submittedSurveyId = \" + submittedSurveyId; }else { deleteQuery = ((\"delete from submittedSurveyAnswers where surveyPageId = \" + (survey.getPageId())) + \" and submittedSurveyId = \") + submittedSurveyId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6277/buggy-version/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyDAO.java", "BodyUseAPI": [], "Fixed commit": "717c561a0b132b6a15bec15dcf5c11d632aebe88", "Url": "https://api.github.com/repos/bowlinktech/rr-mvn-repo", "Date": "2016-06-10T03:33:33Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["encode.GenSet.getCode(int)", "encode.GenSet.getCode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (gsCode1 != gsCode2) { diffResult += diffDictionary[(((gs1.getCode(i)) * 256) + (gs2.getCode(i)))]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4935/buggy-version/src.encode.MatchManager.java", "BodyUseAPI": [], "Fixed commit": "71f98fc66701203e3dac465c802aa9b3f97d8c4d", "Url": "https://api.github.com/repos/HalforcNull/NucleotideSequenceMatch", "Date": "2016-05-27T06:02:01Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (documentClass.getName().startsWith(\"edu.arizona.kim\")) { return \"KR-IDM\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1937/buggy-version/impl.src.main.java.org.kuali.rice.krad.service.impl.KualiModuleServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6c97858d025ca8ce235268c7978bb39cbec204db", "Url": "https://api.github.com/repos/ua-eas/ksd-kc5.2.1-rice", "Date": "2015-12-04T21:35:28Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device) != null) { mac = device.getMac(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3395/buggy-version/src.de.uniulm.bagception.client.ui.launcher.EditLocationFragment.java", "BodyUseAPI": [], "Fixed commit": "962b1f4c273ac76317a8d1719ac6dd929bdc5834", "Url": "https://api.github.com/repos/Bagception/BagceptionClient", "Date": "2014-02-23T16:24:42Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xmlsocket) != null) { xmlsocket.close(); xmlsocket = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1383/buggy-version/app.src.main.java.core.ControllerCommunication.java", "BodyUseAPI": [], "Fixed commit": "a5ebd6c43a2fdece54859b07123a9b20cde7138e", "Url": "https://api.github.com/repos/kevinQuercy/AndroidGC2", "Date": "2015-07-22T17:29:14Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9148/buggy-version/src.main.java.com.deanveloper.playtime.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "e920f0ca906a0a607cca8c951e1fdc93ce03b74c", "Url": "https://api.github.com/repos/deanveloper/PlayTimePlus", "Date": "2016-05-21T20:22:18Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((port) != null) { device = port.getDevice(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5104/buggy-version/src.com.zephyrus.wind.commands.sql.DeleteConnectionPropertiesCommand.java", "BodyUseAPI": [], "Fixed commit": "0f715cfdecd0c467e3f2aef9320e7ff71650455c", "Url": "https://api.github.com/repos/Faustyachka/Zephyrus", "Date": "2014-05-02T16:31:59Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) > 0) { for (java.lang.String s : list) { if (t != null) sb.append(t.transliterate(s)); else sb.append(s); sb.append(\" \"); } sb.deleteCharAt(((sb.length()) - 1)); ret2.add(new palilemmatizingserver.handler.conv.JValue(sb.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4689/buggy-version/src.palilemmatizingserver.handler.conv.ConverterSandhiSolver.java", "BodyUseAPI": [], "Fixed commit": "d6d243ef0c270afbaebf37b6db0a3499f85bfdbe", "Url": "https://api.github.com/repos/daalft/PaliLemmatizingServer", "Date": "2015-02-02T16:32:56Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trimSpace(arguments).split(seedu.addressbook.parser.Parser.SPACE).length) <= 1) { throw new seedu.addressbook.parser.Parser.ParseException(arguments); }else { return trimSpace(arguments).split(seedu.addressbook.parser.Parser.SPACE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4272/buggy-version/src.seedu.addressbook.parser.Parser.java", "BodyUseAPI": ["seedu.addressbook.parser.Parser.trimSpace(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "ee3726dd741d6083d2214f436280060a054d56e0", "Url": "https://api.github.com/repos/ChaseTiong/addressbook-level3", "Date": "2016-09-24T06:58:07Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (audioBuffer == null) { android.util.Log.d(com.mantz_it.rfanalyzer.Demodulator.LOGTAG, \"run: Audio buffer is null. skip this round...\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/764/buggy-version/app.src.main.java.com.mantz_it.rfanalyzer.Demodulator.java", "BodyUseAPI": [], "Fixed commit": "39d568b45b4e807da41594a490dd32ee08bee03e", "Url": "https://api.github.com/repos/demantz/RFAnalyzer", "Date": "2014-12-07T03:24:38Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(subclasses.containsKey(s))) { subclasses.put(s, count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5887/buggy-version/src.main.java.model.CategoryTree.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)"], "Fixed commit": "4223c4045f5ca5aff6287db5dceb718e539b930b", "Url": "https://api.github.com/repos/fmoghaddam/CategoryTreeGeneration", "Date": "2017-09-12T16:09:06Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((firstChild.getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.RESOURCE_SPECIFICATION)) { firstChild = firstChild.getNextSibling(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4598/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.coding.FallThroughCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getNextSibling()"], "Fixed commit": "0a54c8319d5c9fc4fd1af163a165c77974d4d41e", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-05T21:02:04Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.student.gefriertruhapp.Model.DataBaseSingleton.getInstance().getItemByID(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/80/buggy-version/app.src.main.java.com.example.student.gefriertruhapp.Notifications.Notifier.java", "BodyUseAPI": [], "Fixed commit": "e7a6731522cb6ad7fc46397bb541d53f18a6e8aa", "Url": "https://api.github.com/repos/DerGary/FridgeApp", "Date": "2017-11-01T18:21:45Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.apache.poi.ss.usermodel.Cell>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cell.getColumnIndex()) == 3) { saveToCol = cell.getStringCellValue(); }else if ((cell.getColumnIndex()) == 4) { popTable = cell.getStringCellValue(); }else if ((cell.getColumnIndex()) == 5) { popCol = cell.getStringCellValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1856/buggy-version/src.main.java.com.ut.dph.service.impl.messageTypeManagerImpl.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.getStringCellValue()", "org.apache.poi.ss.usermodel.Cell.getStringCellValue()", "org.apache.poi.ss.usermodel.Cell.getStringCellValue()", "org.apache.poi.ss.usermodel.Cell.getColumnIndex()", "org.apache.poi.ss.usermodel.Cell.getColumnIndex()"], "Fixed commit": "bc43b9854d47108a133f11027853d9d1159782b8", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2014-12-05T03:10:16Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((duration == null) && (duration == (this.duration))) return; else if (duration.equals(this.duration)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5443/buggy-version/app.org.tdl.vireo.model.jpa.JpaEmbargoTypeImpl.java", "BodyUseAPI": ["java.lang.Integer.equals(java.lang.Integer)"], "Fixed commit": "987c5d5aa5a24a34739dd0b62b1bdf478777211d", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2015-02-17T22:30:53Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (guarantor == null) throw new java.lang.IllegalArgumentException(\"Guarantor is required\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5443/buggy-version/app.org.tdl.vireo.model.jpa.JpaEmbargoTypeImpl.java", "BodyUseAPI": [], "Fixed commit": "987c5d5aa5a24a34739dd0b62b1bdf478777211d", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2015-02-17T22:30:53Z"},
{"Line": "=>4773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Constructor<T>.getParameterTypes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((pts.length) != 1) && (!(ct.isVarArgs()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7386/buggy-version/src.main.java.org.osgl._.java", "BodyUseAPI": [], "Fixed commit": "81fd238b964d8e520642eebe5aca7e10eb2a276b", "Url": "https://api.github.com/repos/osglworks/java-tool", "Date": "2015-10-02T00:35:40Z"},
{"Line": "=>4814", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Constructor<T>.getParameterTypes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((pts.length) != 3) && (!(ct.isVarArgs()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7386/buggy-version/src.main.java.org.osgl._.java", "BodyUseAPI": [], "Fixed commit": "81fd238b964d8e520642eebe5aca7e10eb2a276b", "Url": "https://api.github.com/repos/osglworks/java-tool", "Date": "2015-10-02T00:35:40Z"},
{"Line": "=>4839", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Constructor<T>.getParameterTypes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((pts.length) != 4) && (!(ct.isVarArgs()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7386/buggy-version/src.main.java.org.osgl._.java", "BodyUseAPI": [], "Fixed commit": "81fd238b964d8e520642eebe5aca7e10eb2a276b", "Url": "https://api.github.com/repos/osglworks/java-tool", "Date": "2015-10-02T00:35:40Z"},
{"Line": "=>4867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Constructor<T>.getParameterTypes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((pts.length) != 5) && (!(ct.isVarArgs()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7386/buggy-version/src.main.java.org.osgl._.java", "BodyUseAPI": [], "Fixed commit": "81fd238b964d8e520642eebe5aca7e10eb2a276b", "Url": "https://api.github.com/repos/osglworks/java-tool", "Date": "2015-10-02T00:35:40Z"},
{"Line": "=>4792", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Constructor<T>.getParameterTypes()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((pts.length) != 2) && (!(ct.isVarArgs()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7386/buggy-version/src.main.java.org.osgl._.java", "BodyUseAPI": [], "Fixed commit": "81fd238b964d8e520642eebe5aca7e10eb2a276b", "Url": "https://api.github.com/repos/osglworks/java-tool", "Date": "2015-10-02T00:35:40Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.duggan.workflow.client.ui.component.DropDownList.isNullOrEmpty(key)) { setValue(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1340/buggy-version/src.main.java.com.duggan.workflow.client.ui.component.DropDownList.java", "BodyUseAPI": [], "Fixed commit": "e5d3d453a241fb778455f283284ef0507746609c", "Url": "https://api.github.com/repos/duggankimani/WIRA", "Date": "2016-03-09T08:10:35Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.isFunctionName()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5129/buggy-version/vaadin-spreadsheet.src.main.java.com.vaadin.addon.spreadsheet.NamedRangeUtils.java", "BodyUseAPI": [], "Fixed commit": "0c7d8abb1cb8a5b2dde8b087520bbc80269282f2", "Url": "https://api.github.com/repos/ianscriven/spreadsheet", "Date": "2017-10-24T04:15:14Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (date != null) { return ((dateFormat.format(date)) + \" \") + (simpleDateFormat.format(date)); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4674/buggy-version/app.src.main.java.de.hof.university.app.data.DataManager.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(java.util.Date)", "java.text.DateFormat.format(java.util.Date)"], "Fixed commit": "6b3ec5e8d06365f2ee23fe1c0b3a59ef2b38dc52", "Url": "https://api.github.com/repos/HochschuleHofStundenplanapp/AndroidStundenplanHof", "Date": "2017-04-23T09:07:06Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.resourcesManager.music2.isPlaying()) { this.resourcesManager.music2.pause(); this.resourcesManager.music.resume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/910/buggy-version/src.se.chalmers.segway.scenes.GameScene.java", "BodyUseAPI": ["this.resourcesManager.music.resume()", "this.resourcesManager.music2.pause()"], "Fixed commit": "da9f814696d055d2a6af321118371b4c1fdae053", "Url": "https://api.github.com/repos/Meddan/SegwaySimulator", "Date": "2013-10-04T08:53:30Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (errorResponse != null) { android.util.Log.e(com.gustavok.peach.RestClient.TAG, java.lang.String.format(\"Failure 2. statusCode: %d; errorResponse: %s\", statusCode, errorResponse.toString()), throwable); }else { android.util.Log.e(com.gustavok.peach.RestClient.TAG, java.lang.String.format(\"Failure 2. statusCode: %d; errorResponse: null\", statusCode), throwable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8137/buggy-version/app.src.main.java.com.gustavok.peach.RestClient.java", "BodyUseAPI": ["android.util.Log.e(java.lang.String,java.lang.String,java.lang.Throwable)", "java.lang.String.format(java.lang.String,int,errorResponse.toString())", "org.json.JSONObject.toString()"], "Fixed commit": "8c04d0bfac82b0525b644a1f8e54c68f232c404f", "Url": "https://api.github.com/repos/gustavoknz/peach", "Date": "2016-08-29T03:30:11Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstBpp) { rdBtn.setSelected(true); firstBpp = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2068/buggy-version/asrs.ExecutionPanel.java", "BodyUseAPI": [], "Fixed commit": "5d5b62dc9e9a2c7d84f383026b14891d43ce53c7", "Url": "https://api.github.com/repos/luukholleman/ASRSJava", "Date": "2013-05-14T11:11:15Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstTsp) { rdBtn.setSelected(true); firstTsp = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2068/buggy-version/asrs.ExecutionPanel.java", "BodyUseAPI": [], "Fixed commit": "5d5b62dc9e9a2c7d84f383026b14891d43ce53c7", "Url": "https://api.github.com/repos/luukholleman/ASRSJava", "Date": "2013-05-14T11:11:15Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Obj != null) { if ((triggeredBy.getCurrentState()) instanceof state.object.PlayerOneState) { Engine.currentInstance.getCurrentState().removeObj(triggeredBy); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5061/buggy-version/src.triggers.KillOnCollideTrigger.java", "BodyUseAPI": [], "Fixed commit": "f6d18abbe49d04197a28f220a339337db468d226", "Url": "https://api.github.com/repos/MrNex/GDD2Game3", "Date": "2014-11-12T14:45:28Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.format.equalsIgnoreCase(\"-t\")) { strPattern = \".*\\nd\\t.+\"; }else { strPattern = \".*\\nd, .+\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7295/buggy-version/src.project_tortoise.Main.java", "BodyUseAPI": [], "Fixed commit": "44a10dc712a5a6efc2f0881ab3b0f8287ace0a50", "Url": "https://api.github.com/repos/vincetang/XMLParser", "Date": "2016-06-19T20:47:15Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logEntry.hasAttached()) { int amount = logEntry.getAttached().size(); user.sendTranslated(\"%s&aWater flooded &6%dx&a the block%s&a!\", time, amount, loc); }else { user.sendTranslated(\"%s&aWater flooded the block%s&a!\", time, loc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9170/buggy-version/log.src.main.java.de.cubeisland.cubeengine.log.action.logaction.block.flow.WaterFlow.java", "BodyUseAPI": ["logEntry.getAttached().size()", "de.cubeisland.cubeengine.log.storage.LogEntry.getAttached()"], "Fixed commit": "a9d4af40bb499642b2394709e20313ead680fb52", "Url": "https://api.github.com/repos/CubeEngineDev/CubeEngine", "Date": "2013-04-13T11:16:08Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(imageAlreadyClicked)) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { com.appmatic.baseapp.gallery.adapters.GalleryAdapter.ImageViewHolder imageViewHolder = ((com.appmatic.baseapp.gallery.adapters.GalleryAdapter.ImageViewHolder) (imagesRecyclerView.findViewHolderForAdapterPosition(position))); android.support.v4.app.ActivityOptionsCompat activityOptionsCompat = android.support.v4.app.ActivityOptionsCompat.makeSceneTransitionAnimation(getActivity(), imageViewHolder.itemImage, images.get(position).getUrl()); android.support.v4.app.ActivityCompat.startActivity(getActivity(), previewActivityIntent, activityOptionsCompat.toBundle()); }else { startActivity(previewActivityIntent); } imageAlreadyClicked = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5252/buggy-version/app.src.main.java.com.appmatic.baseapp.gallery.GalleryFragment.java", "BodyUseAPI": [], "Fixed commit": "6f884bb6c9fa96510fe6e181faa7b4d1bd2ebdb0", "Url": "https://api.github.com/repos/Nulltilus/Appmatic-Android", "Date": "2017-11-21T17:34:54Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigDecimal.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(r.contains(\".\"))) { return r + \".0\"; }else { return r; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6145/buggy-version/modules.wyil.src.wyil.lang.Constant.java", "BodyUseAPI": [], "Fixed commit": "63afd291e8f837486442199086b82cb996cdd98c", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2014-06-28T00:02:15Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigDecimal.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(r.contains(\".\"))) { return r + \".0\"; }else { return r; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6145/buggy-version/modules.wycs.src.wycs.core.Value.java", "BodyUseAPI": [], "Fixed commit": "63afd291e8f837486442199086b82cb996cdd98c", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2014-06-28T00:02:15Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageView.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (viewSize == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2761/buggy-version/OpenKeychain.src.main.java.org.sufficientlysecure.keychain.ui.transfer.view.TransferFragment.java", "BodyUseAPI": [], "Fixed commit": "71d02713aaf1277dec3b5466379f812ef2c157e2", "Url": "https://api.github.com/repos/open-keychain/open-keychain", "Date": "2017-06-13T09:00:47Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.Resources.getStringArray(R.array.hisPresent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((titlePresent.length) == (presentResult.length)) { for (int j = 3; j < (presentResult.length); j++) { arrayList.add((((titlePresent[j]) + \" : \") + (presentResult[j]))); } }else { arrayList.add(\"\u7121\u8a72\u80a1\u7968\u8cc7\u6599\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7704/buggy-version/app.src.main.java.com.james.stockparser.Fragment.DummyFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b6a33c5bf850f04569436bc2c43559c930cc45cd", "Url": "https://api.github.com/repos/empirejames/StockParser", "Date": "2017-08-04T01:06:39Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.Resources.getStringArray(R.array.hisGuLi)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((titleGuli.length) == (gushiResult.length)) { for (int j = 3; j < (gushiResult.length); j++) { arrayList.add((((titleGuli[j]) + \" : \") + (gushiResult[j]))); } }else { arrayList.add(\"\u7121\u8a72\u80a1\u7968\u8cc7\u6599\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7704/buggy-version/app.src.main.java.com.james.stockparser.Fragment.DummyFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b6a33c5bf850f04569436bc2c43559c930cc45cd", "Url": "https://api.github.com/repos/empirejames/StockParser", "Date": "2017-08-04T01:06:39Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.Resources.getStringArray(R.array.hisEPS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((titleEPS.length) == (epsResult.length)) { for (int j = 3; j < (epsResult.length); j++) { arrayList.add((((titleEPS[j]) + \" : \") + (epsResult[j]))); } }else { arrayList.add(\"\u7121\u8a72\u80a1\u7968\u8cc7\u6599\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7704/buggy-version/app.src.main.java.com.james.stockparser.Fragment.DummyFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b6a33c5bf850f04569436bc2c43559c930cc45cd", "Url": "https://api.github.com/repos/empirejames/StockParser", "Date": "2017-08-04T01:06:39Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.Resources.getStringArray(R.array.hisGuShi)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((titleGuShi.length) == (guliResult.length)) { for (int j = 3; j < (guliResult.length); j++) { arrayList.add((((titleGuShi[j]) + \" : \") + (guliResult[j]))); } }else { arrayList.add(\"\u7121\u8a72\u80a1\u7968\u8cc7\u6599\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7704/buggy-version/app.src.main.java.com.james.stockparser.Fragment.DummyFragment.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b6a33c5bf850f04569436bc2c43559c930cc45cd", "Url": "https://api.github.com/repos/empirejames/StockParser", "Date": "2017-08-04T01:06:39Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["f.getProjectile().getShooter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!((e.getEntity()) instanceof org.bukkit.entity.Player)) || (p.getWorld().getPVP())) e.getEntity().setFireTicks(shadowlauch.advancedbow.main.ArrowDamageListener.plugin.config.ft);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7731/buggy-version/src.shadowlauch.advancedbow.main.ArrowDamageListener.java", "BodyUseAPI": ["e.getEntity().setFireTicks(shadowlauch.advancedbow.main.ArrowDamageListener.plugin.config.ft)", "org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Fixed commit": "f9209c08ddb5c7cde592f7e8301b55905d2c76ab", "Url": "https://api.github.com/repos/Shadowlauch/AdvancedBow", "Date": "2011-07-20T17:57:13Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getItem()) != null) { type = e.getItem().getTypeId(); }else return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7731/buggy-version/src.shadowlauch.advancedbow.main.BowListener.java", "BodyUseAPI": ["e.getItem().getTypeId()", "org.bukkit.event.player.PlayerInteractEvent.getItem()"], "Fixed commit": "f9209c08ddb5c7cde592f7e8301b55905d2c76ab", "Url": "https://api.github.com/repos/Shadowlauch/AdvancedBow", "Date": "2011-07-20T17:57:13Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["readTemperature().getTempOfWater()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (waterTemp != 0.0F) { if (hu.barbar.util.FileHandler.appendToFile(this.temperatureLogFile, line)) { }else { hu.barbar.util.logger.Log.e((\"TempLogger4 :: Error while try to write temp log to file: \" + (temperatureLogFile))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7483/buggy-version/TaskerApp.src.main.java.hu.barbar.tasker.todo.items.TempLogger4.java", "BodyUseAPI": [], "Fixed commit": "0a2a7fa82ab6e4c460691cafc93ecf0f78ce6640", "Url": "https://api.github.com/repos/bbkbarbar/pi-tasker", "Date": "2017-06-24T05:24:12Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["er.groupware.calendar.ERGWCalendarObject.recurrenceRule()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((recurrenceRule.interval()) != null) { pattern.setInterval(recurrenceRule.interval()); }else { pattern.setInterval(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/184/buggy-version/Sources.er.groupware.exchange.ews.ExchangeStore.java", "BodyUseAPI": ["com.microsoft.schemas.exchange.services._2006.types.AbsoluteMonthlyRecurrencePatternType.setInterval(recurrenceRule.interval())", "er.groupware.calendar.ERGWRecurrenceRule.interval()"], "Fixed commit": "03ff00f3bc76ebc3d57b9b20948c548c4b499d7c", "Url": "https://api.github.com/repos/pascalrobert/ERGroupware", "Date": "2012-11-07T15:58:27Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((attributes.repeatType) == null) { getAlarmManager().set(AlarmManager.RTC_WAKEUP, attributes.sendAt, pendingIntent); android.util.Log.i(\"ReactSystemNotification\", (\"Set One-Time Alarm: \" + (id))); }else if (attributes.repeatType.equals(\"time\")) { getAlarmManager().setRepeating(AlarmManager.RTC_WAKEUP, attributes.sendAt, attributes.repeatTime, pendingIntent); android.util.Log.i(\"ReactSystemNotification\", (((\"Set \" + (attributes.repeatTime)) + \"ms Alarm: \") + (id))); }else if (attributes.repeatType.equals(\"minute\")) { getAlarmManager().setRepeating(AlarmManager.RTC_WAKEUP, attributes.sendAt, 60000, pendingIntent); android.util.Log.i(\"ReactSystemNotification\", (\"Set Minute Alarm: \" + (id))); }else if (attributes.repeatType.equals(\"hour\")) { getAlarmManager().setRepeating(AlarmManager.RTC_WAKEUP, attributes.sendAt, AlarmManager.INTERVAL_HOUR, pendingIntent); android.util.Log.i(\"ReactSystemNotification\", (\"Set Hour Alarm: \" + (id))); }else if (attributes.repeatType.equals(\"halfDay\")) { getAlarmManager().setRepeating(AlarmManager.RTC_WAKEUP, attributes.sendAt, AlarmManager.INTERVAL_HALF_DAY, pendingIntent); android.util.Log.i(\"ReactSystemNotification\", (\"Set Half-Day Alarm: \" + (id))); }else if (attributes.repeatType.equals(\"day\")) { getAlarmManager().setRepeating(AlarmManager.RTC_WAKEUP, attributes.sendAt, AlarmManager.INTERVAL_DAY, pendingIntent); android.util.Log.i(\"ReactSystemNotification\", (\"Set Day Alarm: \" + (id))); }else if (attributes.repeatType.equals(\"week\")) { getAlarmManager().setRepeating(AlarmManager.RTC_WAKEUP, attributes.sendAt, AlarmManager.INTERVAL_DAY, pendingIntent); android.util.Log.i(\"ReactSystemNotification\", (\"Set Week Alarm: \" + (id))); }else if (attributes.repeatType.equals(\"month\")) { getAlarmManager().setRepeating(AlarmManager.RTC_WAKEUP, attributes.sendAt, AlarmManager.INTERVAL_DAY, pendingIntent); android.util.Log.i(\"ReactSystemNotification\", (\"Set Month Alarm: \" + (id))); }else if (attributes.repeatType.equals(\"year\")) { getAlarmManager().setRepeating(AlarmManager.RTC_WAKEUP, attributes.sendAt, AlarmManager.INTERVAL_DAY, pendingIntent); android.util.Log.i(\"ReactSystemNotification\", (\"Set Year Alarm: \" + (id))); }else { getAlarmManager().set(AlarmManager.RTC_WAKEUP, attributes.sendAt, pendingIntent); android.util.Log.i(\"ReactSystemNotification\", (\"Set One-Time Alarm: \" + (id))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8739/buggy-version/android.src.main.java.io.neson.react-native.notification.Notification.java", "BodyUseAPI": ["attributes.repeatType.equals(java.lang.String)", "android.app.AlarmManager.setRepeating(AlarmManager.RTC_WAKEUP,attributes.sendAt,AlarmManager.INTERVAL_DAY,android.app.PendingIntent)", "attributes.repeatType.equals(java.lang.String)", "attributes.repeatType.equals(java.lang.String)", "android.app.AlarmManager.setRepeating(AlarmManager.RTC_WAKEUP,attributes.sendAt,AlarmManager.INTERVAL_DAY,android.app.PendingIntent)", "attributes.repeatType.equals(java.lang.String)", "attributes.repeatType.equals(java.lang.String)", "android.app.AlarmManager.set(AlarmManager.RTC_WAKEUP,attributes.sendAt,android.app.PendingIntent)", "attributes.repeatType.equals(java.lang.String)", "android.app.AlarmManager.set(AlarmManager.RTC_WAKEUP,attributes.sendAt,android.app.PendingIntent)", "android.app.AlarmManager.setRepeating(AlarmManager.RTC_WAKEUP,attributes.sendAt,AlarmManager.INTERVAL_HOUR,android.app.PendingIntent)", "attributes.repeatType.equals(java.lang.String)", "android.app.AlarmManager.setRepeating(AlarmManager.RTC_WAKEUP,attributes.sendAt,AlarmManager.INTERVAL_DAY,android.app.PendingIntent)", "attributes.repeatType.equals(java.lang.String)", "android.util.Log.i(java.lang.String,(((\"Set \" + (attributes.repeatTime)) + \"ms Alarm: \") + (id)))", "android.app.AlarmManager.setRepeating(AlarmManager.RTC_WAKEUP,attributes.sendAt,attributes.repeatTime,android.app.PendingIntent)", "android.app.AlarmManager.setRepeating(AlarmManager.RTC_WAKEUP,attributes.sendAt,int,android.app.PendingIntent)", "android.app.AlarmManager.setRepeating(AlarmManager.RTC_WAKEUP,attributes.sendAt,AlarmManager.INTERVAL_DAY,android.app.PendingIntent)", "android.app.AlarmManager.setRepeating(AlarmManager.RTC_WAKEUP,attributes.sendAt,AlarmManager.INTERVAL_HALF_DAY,android.app.PendingIntent)"], "Fixed commit": "9a9e1a3921c8b2a68019ae6e1e32478c92807de8", "Url": "https://api.github.com/repos/neson/react-native-system-notification", "Date": "2015-12-13T13:39:47Z"},
{"Line": "=>1169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codename1.tools.translator.BytecodeMethod.localsOffsetToArgOffset(((com.codename1.tools.translator.bytecodes.VarOp) (next)).getIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (localOff < 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1533/buggy-version/vm.ByteCodeTranslator.src.com.codename1.tools.translator.BytecodeMethod.java", "BodyUseAPI": [], "Fixed commit": "2cf04e9123bdeb296b7efebecbba8170feb7e493", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-05-18T12:08:23Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeIndexBeforeStop) > 0) { (timeIndexBeforeStop)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5109/buggy-version/app.src.main.java.sg.edu.nus.taptask.AccelerometerRecorder.java", "BodyUseAPI": [], "Fixed commit": "7c851fe1c2629bc55c5360682314a71be9e836c4", "Url": "https://api.github.com/repos/mushopea/Taptask", "Date": "2015-04-06T07:12:07Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.team3128.main.MainFerb.INTAKE_LOCKED) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString(\"Shovel State\", gearShovel.getState().name()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8977/buggy-version/src.org.team3128.main.MainFerb.java", "BodyUseAPI": [], "Fixed commit": "f0ec3be7256fb77253f303005f79808512f0bb80", "Url": "https://api.github.com/repos/Team3128/robot-Ferb", "Date": "2017-05-04T05:22:25Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calendarMainFragment) != null) { calendarMainFragment.selectDay(com.byagowi.persiancalendar.Utils.getToday()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9066/buggy-version/PersianCalendar.src.main.java.com.byagowi.persiancalendar.view.Fragment.MonthNewFragment.java", "BodyUseAPI": [], "Fixed commit": "6b4f051a7a573c6987d9e2bf6ce1d51d8b3891d1", "Url": "https://api.github.com/repos/behdad222/DroidPersianCalendar", "Date": "2015-11-28T18:35:28Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (priceToFormat.equals(\"null\")) { return \"-\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1405/buggy-version/src.de.htwk_leipzig.ridefinder.model.RideLoopHelper.java", "BodyUseAPI": [], "Fixed commit": "66acff9929a253f06717454876fd3cbec175686f", "Url": "https://api.github.com/repos/IVleafclover/RideFinder", "Date": "2016-03-05T07:03:14Z"},
{"Line": "=>900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof javafx.scene.control.Control) { ((javafx.scene.control.Control) (node)).setMinSize(width, height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4114/buggy-version/entirej-fx.src.org.entirej.applicationframework.fx.renderers.form.EJFXFormRenderer.java", "BodyUseAPI": [], "Fixed commit": "cde1ef218170eec4fd23f1bf9161c32c405d9e46", "Url": "https://api.github.com/repos/entirej/javafx", "Date": "2015-01-05T09:29:33Z"},
{"Line": "=>895", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof javafx.scene.layout.Region) { ((javafx.scene.layout.Region) (node)).setPadding(new javafx.geometry.Insets(0, 0, 0, 0)); ((javafx.scene.layout.Region) (node)).setMinSize(width, height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4114/buggy-version/entirej-fx.src.org.entirej.applicationframework.fx.renderers.form.EJFXFormRenderer.java", "BodyUseAPI": [], "Fixed commit": "cde1ef218170eec4fd23f1bf9161c32c405d9e46", "Url": "https://api.github.com/repos/entirej/javafx", "Date": "2015-01-05T09:29:33Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springfield.lou.controllers.apps.photoexplore.PhotoExploreController.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((type == null) || (type.equals(\"\"))) || (type.equals(\"none\"))) { model.setProperty(\"/screen/state\", \"apptimeout\"); }else { model.setProperty(\"/screen/state\", \"contentselectforce\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7590/buggy-version/src.org.springfield.lou.controllers.apps.photoexplore.PhotoExploreController.java", "BodyUseAPI": [], "Fixed commit": "eac28e023e87106b099c5666e72de68b20cbba7f", "Url": "https://api.github.com/repos/Noterik/smt_mupopapp", "Date": "2017-12-13T11:09:04Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springfield.fs.FsNode.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (command == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7590/buggy-version/src.org.springfield.lou.controllers.apps.photoexplore.PhotoExploreController.java", "BodyUseAPI": [], "Fixed commit": "eac28e023e87106b099c5666e72de68b20cbba7f", "Url": "https://api.github.com/repos/Noterik/smt_mupopapp", "Date": "2017-12-13T11:09:04Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curr == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7309/buggy-version/src.struct.Trie.java", "BodyUseAPI": [], "Fixed commit": "8c4f6f3cfca0a080de94b886f849753f10233f93", "Url": "https://api.github.com/repos/haeroe/WordIndex", "Date": "2012-05-21T12:51:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.simulator) != null) { this.simulator.stop(); this.isOnStopCommand = true; try { this.simulationThread.join(); this.updateThread.join(); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3633/buggy-version/RailViewLibrary.src.railview.controller.framework.AbstractSimulationController.java", "BodyUseAPI": [], "Fixed commit": "5ddea9b65f677f04a21a8a4ed5d8e2660d05cdf2", "Url": "https://api.github.com/repos/herrcui/RailView", "Date": "2017-12-14T20:12:21Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(presentationNames.contains(presentationName))) { org.bigbluebutton.conference.service.presentation.PresentationRoom.log.debug(((\"Adding [\" + presentationName) + \"] to list of presentations.\")); presentationNames.add(presentationName); }else { org.bigbluebutton.conference.service.presentation.PresentationRoom.log.debug(((\"[\" + presentationName) + \"] is already in list of presentations.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3972/buggy-version/bigbluebutton-apps.src.main.java.org.bigbluebutton.conference.service.presentation.PresentationRoom.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "c4abeb827f3607dc985a8e86cca7d8854f2ec897", "Url": "https://api.github.com/repos/bigbluebutton/bigbluebutton", "Date": "2013-06-18T14:47:30Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<html2windows.dom.AttrInter>.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) attributeList.add(newAttr); else attributeList.set(index, newAttr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1278/buggy-version/src.html2windows.dom.ElementInter.java", "BodyUseAPI": ["java.util.ArrayList<html2windows.dom.AttrInter>.set(int,html2windows.dom.AttrInter)"], "Fixed commit": "32402e8ea2e82df7d14cb7a3a1c768451f3b453a", "Url": "https://api.github.com/repos/HtmlToJavaWindowsBuilder/HtmlToJavaWindowsBuilder", "Date": "2013-01-15T13:17:32Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lastNotNullIdx == 0) && ((rpcAddrKeys.length) > 1)) { conf.set(rpcAddrKeys[1], nnRpcAddr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4196/buggy-version/smart-server.src.main.java.org.smartdata.server.SmartServer.java", "BodyUseAPI": ["org.smartdata.conf.SmartConf.set(java.lang.String,java.lang.String)"], "Fixed commit": "b7fe83b494ed8046516d3614e54f3b607ec0d372", "Url": "https://api.github.com/repos/qiyuangong/SSM", "Date": "2017-06-06T11:18:37Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset % 2) == 1) offset--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8851/buggy-version/Garble_Me_Project.src.main.java.com.codepotato.model.SampleReader.java", "BodyUseAPI": [], "Fixed commit": "eae5c6e9aaa6034f98d33334bb9028e19c173854", "Url": "https://api.github.com/repos/code-potato/Garble_Me_Project", "Date": "2014-05-01T19:54:09Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paymentIntent.isBluetoothPaymentUrl()) directPaymentEnableView.setChecked((resultCode == (android.app.Activity.RESULT_OK)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7899/buggy-version/wallet.src.de.schildbach.wallet.ui.SendCoinsFragment.java", "BodyUseAPI": [], "Fixed commit": "6725f5444d6df8206d4fb138d3ac2749cc1297b2", "Url": "https://api.github.com/repos/langerhans/dogecoin-wallet-new", "Date": "2014-03-01T11:36:54Z"},
{"Line": "=>1254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (paymentIntent.isBluetoothPaymentUrl()) directPaymentEnableView.setChecked((((bluetoothAdapter) != null) && (bluetoothAdapter.isEnabled()))); else if (paymentIntent.isHttpPaymentUrl()) directPaymentEnableView.setChecked(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7899/buggy-version/wallet.src.de.schildbach.wallet.ui.SendCoinsFragment.java", "BodyUseAPI": ["de.schildbach.wallet.PaymentIntent.isHttpPaymentUrl()"], "Fixed commit": "6725f5444d6df8206d4fb138d3ac2749cc1297b2", "Url": "https://api.github.com/repos/langerhans/dogecoin-wallet-new", "Date": "2014-03-01T11:36:54Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((episodes) != null) new com.workingagenda.democracydroid.MainActivity.PodcastFragment.GetAudioFeed().execute(\"https://www.democracynow.org/podcast.xml\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5340/buggy-version/app.src.main.java.com.workingagenda.democracydroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a94a010d486de010702e2da5d0d06148604a8372", "Url": "https://api.github.com/repos/fenimore/DemocracyDroid", "Date": "2017-01-28T22:44:09Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((episodes) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5340/buggy-version/app.src.main.java.com.workingagenda.democracydroid.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a94a010d486de010702e2da5d0d06148604a8372", "Url": "https://api.github.com/repos/fenimore/DemocracyDroid", "Date": "2017-01-28T22:44:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deadBee.isWorker()) { (_currentWorkerBeePopulation)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/550/buggy-version/src.de.unihalle.sim.entities.BeeHive.java", "BodyUseAPI": [], "Fixed commit": "e4b34c0c3c9584d1ce07d041cfaf6851268b6975", "Url": "https://api.github.com/repos/FRosner/BeeHive", "Date": "2013-06-14T17:45:32Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mConnectionBroke)) { refreshGallery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8918/buggy-version/Android.src.com.brousalis.ItemDetails.java", "BodyUseAPI": [], "Fixed commit": "2deb7209fb9c87d5a0f8438c19b16d978f2e21c5", "Url": "https://api.github.com/repos/Mobile-Trail-Mapping/Android", "Date": "2011-02-16T00:40:33Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (msg.startsWith(\"react allow \")) { synchronized(mQueue) { mQueue.deque(); controller.decreaseReactReq(); } java.lang.String[] cmds = msg.split(\" \"); if ((cmds.length) > 4) { if (((cmds[2].equals(fileName)) && (cmds[3].equals(\"from\"))) && (cmds[4].equals(sso))) { java.nio.file.Path filePath = java.nio.file.Paths.get((((mHomeDirectory) + \"/\") + fileName)); edu.umkc.cs5573.isa.FileInfo info = sql.getFileInfo(filePath); if (info != null) { info.setType(((FileInfo.TYPE_ORIGINAL) | (FileInfo.WRITE_ALLOWED))); sql.updateFileInfo(filePath, info.getExpiresOnStr(), info.getType(), info.getHash(), FileInfo.UNLOCK); } return ((((edu.umkc.cs5573.isa.CyborgTcpService.RESPONSE_REACTION) + (edu.umkc.cs5573.isa.CyborgTcpService.DELIMITER)) + (edu.umkc.cs5573.isa.CyborgTcpService.REACTION_ALLOW)) + (edu.umkc.cs5573.isa.CyborgTcpService.DELIMITER)) + fileName; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1796/buggy-version/src.edu.umkc.cs5573.isa.CyborgTcpService.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "47017bef56c21756a96a0ece0be2ce113b64e86e", "Url": "https://api.github.com/repos/ISA-FS2015/ISA_FS2015", "Date": "2015-10-31T07:30:56Z"},
{"Line": "=>2328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((params.aid.getDelay()) != 0) && ((params.timeseek) == 0)) { timeshift = (\"timeshift=\" + (params.aid.getDelay())) + \"ms, \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6851/buggy-version/src.main.java.net.pms.encoders.MEncoderVideo.java", "BodyUseAPI": ["params.aid.getDelay()"], "Fixed commit": "42cdbde2b2086200314999a237b48db5ae850e46", "Url": "https://api.github.com/repos/Raptor399/ps3mediaserver", "Date": "2012-07-14T00:39:12Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((commandDetail.getDate(CommandProperties.TIME_TO)) != null) { setEndDate(commandDetail.getDate(CommandProperties.TIME_TO)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3827/buggy-version/src.katnote.Task.java", "BodyUseAPI": [], "Fixed commit": "8056906cded8a60e13dfe42be2a2cdd22f273489", "Url": "https://api.github.com/repos/cs2103aug2015-t09-2j/main", "Date": "2015-10-07T15:28:50Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((commandDetail.getDate(CommandProperties.TIME_BY)) != null) { setEndDate(commandDetail.getDate(CommandProperties.TIME_BY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3827/buggy-version/src.katnote.Task.java", "BodyUseAPI": [], "Fixed commit": "8056906cded8a60e13dfe42be2a2cdd22f273489", "Url": "https://api.github.com/repos/cs2103aug2015-t09-2j/main", "Date": "2015-10-07T15:28:50Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ThreadLocal<java.util.List<com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.Entry>>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entries != null) { for (com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.Entry entry : entries) { final boolean afterStart = ((entry.getFirstLine()) < line) || (((entry.getFirstLine()) == line) && ((entry.getFirstColumn()) <= column)); final boolean beforeEnd = ((entry.getLastLine()) > line) || (((entry.getLastLine()) == line) && ((entry.getLastColumn()) >= column)); final boolean nameMatches = entry.getCheckName().equals(checkAlias); if ((afterStart && beforeEnd) && nameMatches) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9134/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.SuppressWarningsHolder.java", "BodyUseAPI": [], "Fixed commit": "593134b60f96ed22ee3d3c2bf4513b8e701c72c7", "Url": "https://api.github.com/repos/MEZk/checkstyle", "Date": "2015-08-31T15:53:12Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (expand) { java.lang.String expanded = org.nosreme.app.urlhelper.URLHelperActivity.expandUrl(url, true); if (expanded != null) { url = expanded; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5479/buggy-version/URLHelper.src.org.nosreme.app.urlhelper.URLHelperActivity.java", "BodyUseAPI": [], "Fixed commit": "c960162e1864062d0052fceaec3e5df23f94af51", "Url": "https://api.github.com/repos/jugglerchris/URLHelper", "Date": "2012-10-30T21:09:28Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origin.getRow()) == firstPawnRow) { org.jboard.jboard.chess.SquareCoordinates jumpAhead = new org.jboard.jboard.chess.SquareCoordinates(origin.getColumn(), ((origin.getRow()) + (2 * addToRow))); if ((!(board.getPositions().containsKey(ahead))) && (!(board.getPositions().containsKey(jumpAhead)))) { destinationCandidates.add(jumpAhead); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6489/buggy-version/src.org.jboard.jboard.chess.play.PawnPlayOneStep.java", "BodyUseAPI": ["org.jboard.jboard.chess.play.PawnPlayOneStep.getRow()", "org.jboard.jboard.chess.play.PawnPlayOneStep.getColumn()"], "Fixed commit": "2a6a49839f95e72abdeddb60e1051ef9ac447d91", "Url": "https://api.github.com/repos/astern7/jboard", "Date": "2014-09-21T14:07:54Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shared) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5419/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.BroadcasterConfig.java", "BodyUseAPI": [], "Fixed commit": "1cfd34939b427a8b5b2e94f2358178e8f60ecf6f", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2011-12-15T22:55:01Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (file != null) { org.eclipse.core.resources.IFile[] files = org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().findFilesForLocationURI(file.getLocationURI()); if (files != null) { for (org.eclipse.core.resources.IFile f : files) { if ((com.alibaba.ide.plugin.eclipse.springext.util.SpringExtPluginUtil.getJavaProject(f.getProject(), false)) != null) { file = f; break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6548/buggy-version/eclipse.springext-eclipse-plugin.src.main.java.com.alibaba.ide.plugin.eclipse.springext.resolver.SpringExtSchemaResolver.java", "BodyUseAPI": ["org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot().findFilesForLocationURI(file.getLocationURI())", "org.eclipse.core.resources.IFile.getLocationURI()"], "Fixed commit": "b3a704c8e9b1d7270c49c1e49ef335dead7f0363", "Url": "https://api.github.com/repos/webx/citrus-tool", "Date": "2014-04-04T06:31:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dk.lockfuglsang.minecraft.perm.PermissionUtil.hasPermission(onlinePlayer, \"usb.mod.bypassprotection\"))) { onlinePlayer.sendMessage(new java.lang.String[]{ dk.lockfuglsang.minecraft.po.I18nUtil.tr(\"\\u00a7eThe island has been \\u00a7cLOCKED\\u00a7e.\", islandInfo.getLeader()), dk.lockfuglsang.minecraft.po.I18nUtil.tr(\"\\u00a7eSending you to spawn.\") }); plugin.spawnTeleport(onlinePlayer, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4371/buggy-version/uSkyBlock-Core.src.main.java.us.talabrek.ultimateskyblock.player.PlayerLogic.java", "BodyUseAPI": ["us.talabrek.ultimateskyblock.uSkyBlock.spawnTeleport(org.bukkit.entity.Player,boolean)", "org.bukkit.entity.Player.sendMessage(java.lang.String[])"], "Fixed commit": "3aca6ae8958e148da047857cf397167698fdb1d6", "Url": "https://api.github.com/repos/rlf/uSkyBlock", "Date": "2016-08-02T08:01:00Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (futils.canListFiles(new java.io.File(path))) { a = com.amaze.filemanager.utils.RootHelper.getFilesList(path, showHidden); }else { a = new java.util.ArrayList<java.lang.String[]>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6954/buggy-version/src.com.amaze.filemanager.utils.RootHelper.java", "BodyUseAPI": ["com.amaze.filemanager.utils.RootHelper.getFilesList(java.lang.String,boolean)"], "Fixed commit": "fc91c66ecb180128c2c43afbcfc33b0605df775b", "Url": "https://api.github.com/repos/TeamAmaze/AmazeFileManager", "Date": "2015-02-01T05:30:18Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemsOnPage == 0) { itemsOnPage = uhmanoa.droid_sch.Available_Schedules.ITEMS_PER_PAGE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7826/buggy-version/app.src.main.java.uhmanoa.droid_sch.Available_Schedules.java", "BodyUseAPI": [], "Fixed commit": "faf04d34b7eb89f78214c28ae7380fb16a633cd1", "Url": "https://api.github.com/repos/1andyn/droid_sch", "Date": "2015-04-21T02:07:48Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index >= 0) todo.push(index);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5352/buggy-version/practical1.src.workshop.Topology.java", "BodyUseAPI": ["java.util.Stack<java.lang.Integer>.push(int)"], "Fixed commit": "8070a3dc4d2dda78ca4df4a534d1b3d84b2c1825", "Url": "https://api.github.com/repos/Dortund/IN4255", "Date": "2017-05-17T14:40:23Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (width < (this.width)) { firstPartOfWord.append((\"\" + c)); firstPartWordWidth = java.lang.Math.max(width, firstPartWordWidth); }else { if (i == 0) { firstPartOfWord.append((\"\" + c)); for (int j = 1; j < (lastTextToken.length()); j++) { restOfTheWord.append((\"\" + (lastTextToken.charAt(j)))); } break; }else { restOfTheWord.append((\"\" + c)); restOfTheWordWidth = java.lang.Math.max(width, restOfTheWordWidth); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1141/buggy-version/src.main.java.be.quodlibet.boxable.Paragraph.java", "BodyUseAPI": ["java.lang.Math.max(float,float)", "java.lang.Math.max(float,float)"], "Fixed commit": "59e2fc6542627fc1dac802a6f4f4d81ff0cb94ce", "Url": "https://api.github.com/repos/dhorions/boxable", "Date": "2016-05-20T12:49:36Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNextCity()) == null) { java.lang.System.out.println(\"5. Return to the North Pole\"); }else { java.lang.System.out.println((\"5. Travel to \" + (getNextCity().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6142/buggy-version/src.main.java.City.java", "BodyUseAPI": [], "Fixed commit": "2edf89fb07b12f4efe380aaa3ae696088b7528a1", "Url": "https://api.github.com/repos/cbrown83/fall2016-project-cbrown83", "Date": "2016-12-09T10:47:07Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((matName.startsWith(\"\\\"\")) && (matName.endsWith(\"\\\"\"))) { matName = matName.substring(1, ((matName.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1086/buggy-version/jme3-plugins.src.ogre.java.com.jme3.scene.plugins.ogre.MaterialLoader.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "c3542649b53ad4f99268b9effe5764aecfca0e67", "Url": "https://api.github.com/repos/zzuegg/jmonkeyengine", "Date": "2014-11-13T03:11:46Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.staxnav.StaxNavigatorImpl<N>.getAttributes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(attributes.isEmpty())) { if (qualifiedAttributes.isEmpty()) { qualifiedAttributes = new java.util.HashMap<javax.xml.namespace.QName, java.lang.String>(qualifiedAttributes); } for (java.lang.String key : attributes.keySet()) { qualifiedAttributes.put(new javax.xml.namespace.QName(key), attributes.get(key)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6309/buggy-version/core.src.main.java.org.staxnav.StaxNavigatorImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.keySet()", "java.util.Map<javax.xml.namespace.QName, java.lang.String>.put(javax.xml.namespace.QName,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "356d5326602d34fb84976527198600d74fb18626", "Url": "https://api.github.com/repos/exoplatform/staxnav", "Date": "2011-08-01T07:54:51Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<game.menu.Entity>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (b instanceof game.menu.Bullet) { if (((game.menu.Bullet) (a)).getShooter().equals(((game.menu.Bullet) (b)).getShooter())) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6486/buggy-version/src.main.java.game.menu.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "5853fdf180cb3062f399d1b15859d8ecc106ab9b", "Url": "https://api.github.com/repos/GuusHamm/Call-of-Cactus", "Date": "2015-11-01T13:35:39Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (common.Config.debugFrames) common.Log.println(header);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5960/buggy-version/src.telemetry.Frame.java", "BodyUseAPI": [], "Fixed commit": "515cbbd6feb2aabd254abc7e3d1deabde3cea8dc", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2015-10-01T00:54:27Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameter.getParent().getParent()) instanceof org.mustbe.consulo.csharp.lang.psi.impl.source.CSharpAnonymMethodExpressionImpl) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1296/buggy-version/csharp-impl.src.org.mustbe.consulo.csharp.ide.codeInspection.unusedSymbol.impl.DefaultUnusedElementPolicy.java", "BodyUseAPI": [], "Fixed commit": "995dd02022ac9897aa7655fb4bcae527ac514086", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2014-12-04T04:37:17Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sb.length()) > 0) sb2.deleteCharAt(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7875/buggy-version/src.main.java.hu.sztaki.ilab.longneck.weblog.parser.postprocessor.UrlParamsPostProcessor.java", "BodyUseAPI": [], "Fixed commit": "60a4567f0b1354807226275dab3544c4a64dcd1b", "Url": "https://api.github.com/repos/MTA-SZTAKI/longneck-weblog", "Date": "2013-08-15T15:28:40Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { sb.deleteCharAt(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7875/buggy-version/src.main.java.hu.sztaki.ilab.longneck.weblog.parser.postprocessor.UrlParamsPostProcessor.java", "BodyUseAPI": ["java.lang.StringBuffer.deleteCharAt(int)"], "Fixed commit": "60a4567f0b1354807226275dab3544c4a64dcd1b", "Url": "https://api.github.com/repos/MTA-SZTAKI/longneck-weblog", "Date": "2013-08-15T15:28:40Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletContext.getInitParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (dataHandlerProviderClass != null) { com.jukta.jtahoe.DataHandlerProvider dataHandlerProvider = ((com.jukta.jtahoe.DataHandlerProvider) (java.lang.Class.forName(dataHandlerProviderClass).newInstance())); context.setAttribute(\"_jTahoe_dataHandlerProvider\", dataHandlerProvider); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6977/buggy-version/j-tahoe-taglib.src.main.java.com.jukta.jtahoe.taglib.ContextListener.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)", "java.lang.Class<?>.newInstance()"], "Fixed commit": "0a327f84be2601397b0eed0cd1939d874d7756eb", "Url": "https://api.github.com/repos/jukta/j-tahoe", "Date": "2016-09-11T03:17:58Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newFormat) { rawId = buf.readBytes(12); }else { rawId = buf.readBytes(11); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6709/buggy-version/src.org.traccar.protocol.NoranProtocolDecoder.java", "BodyUseAPI": [], "Fixed commit": "7b103b43754de283e423df03042c6f75307c8466", "Url": "https://api.github.com/repos/traccar/traccar", "Date": "2015-10-19T22:25:37Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in == 0) { out.writeByte(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5194/buggy-version/src.main.java.cofh.lib.network.ByteBufHelper.java", "BodyUseAPI": [], "Fixed commit": "dd682c0e3d7c06f31fb3432725fbb074b9261188", "Url": "https://api.github.com/repos/CoFH/CoFHLib", "Date": "2015-07-29T22:17:07Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (money.mezu.mezu.BudgetsActivity.budgetsLoadedFromDB) { setNoBudgetsIndication(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4563/buggy-version/Mezu.app.src.main.java.money.mezu.mezu.BudgetsActivity.java", "BodyUseAPI": [], "Fixed commit": "ee265dd047eace5be571a27815626fdd3969b8f6", "Url": "https://api.github.com/repos/Assafbs/Mezu", "Date": "2017-08-11T14:09:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["todo.model.ItemList.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (c.getLocation().equals(\"\")) { java.lang.System.out.println(\"c.getLocation() is empty\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/999/buggy-version/src.todo.model.StateHistory.java", "BodyUseAPI": [], "Fixed commit": "2adced95753374a5dd8a1bddb0894932e66c5267", "Url": "https://api.github.com/repos/cs2103aug2014-t15-2j/todo", "Date": "2014-10-23T14:51:41Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location.equals(\"\")) { java.lang.System.out.println(\"location is emtpy\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/999/buggy-version/src.todo.model.StateHistory.java", "BodyUseAPI": [], "Fixed commit": "2adced95753374a5dd8a1bddb0894932e66c5267", "Url": "https://api.github.com/repos/cs2103aug2014-t15-2j/todo", "Date": "2014-10-23T14:51:41Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instr.getLine()) != 0) { sproclCode.append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5689/buggy-version/src.sprocl.Assembler.java", "BodyUseAPI": [], "Fixed commit": "ffbdabb6656788deb958ab7431b9b7968435836a", "Url": "https://api.github.com/repos/Charrey/BoogyQ", "Date": "2016-06-24T10:15:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(com.wenweihu86.rpc.client.RPCClient.isInit)) { com.wenweihu86.rpc.client.RPCClient.init(option); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8710/buggy-version/src.main.java.com.wenweihu86.rpc.client.RPCClient.java", "BodyUseAPI": [], "Fixed commit": "fb955ff42019d6e15cb5b077badbff8f12463e39", "Url": "https://api.github.com/repos/wenweihu86/rpc-java", "Date": "2017-04-27T16:44:43Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fromViewPropertyAnimator) != null) { fromViewPropertyAnimator.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7380/buggy-version/flipLayout.src.main.java.com.csot.fliplayout.lib.FlipLayout.java", "BodyUseAPI": [], "Fixed commit": "0b8d7be03394c8a30e203b1524e182dda03fa763", "Url": "https://api.github.com/repos/cmfsotelo/FlipLayout", "Date": "2017-06-06T22:13:00Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evilcorp.hristo.movielibrary.CustomArrayAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(movie.imdbRating.equals(\"N/A\"))) ratingBar.setRating(java.lang.Float.valueOf(movie.imdbRating));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3679/buggy-version/app.src.main.java.com.evilcorp.hristo.movielibrary.CustomArrayAdapter.java", "BodyUseAPI": ["java.lang.Float.valueOf(movie.imdbRating)", "android.widget.RatingBar.setRating(java.lang.Float)"], "Fixed commit": "e97d7d8a9033e3c1fc3605efa85bc0242c685a0f", "Url": "https://api.github.com/repos/HristoJS/MovieLibrary", "Date": "2016-10-23T22:38:56Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (0 == model) { mImageViewReplaceLocate.setBackgroundResource(R.drawable.bg_edit_orange); }else { mImageViewReplaceLocate.setBackgroundResource(R.color.colorNull); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4811/buggy-version/app.src.main.java.com.tianyigps.dispatch2.activity.OperateRepairActivity.java", "BodyUseAPI": [], "Fixed commit": "49125898e3240408e0170c8b8df6b541c10c8fa5", "Url": "https://api.github.com/repos/cookiemouse/Paigong", "Date": "2017-08-24T06:14:43Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tiles.get((i - 1)).matrix(ctx).centerPoint()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((prev.x) > 0) && ((prev.y) > 0)) { g.drawLine(point.x, point.y, prev.x, prev.y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2598/buggy-version/src.main.java.com.ac1d.rsbot.iceskate.SkateManager.java", "BodyUseAPI": ["java.awt.Graphics.drawLine(int,int,int,int)"], "Fixed commit": "49675b08980aa5476ae32cf4354c3c3073cc8023", "Url": "https://api.github.com/repos/ac1d8lank/rsbot", "Date": "2015-12-11T21:41:04Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seabattle.game.gamesession.GameSessionService.getGameSession(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(gameSession.toGamePhase())) { try { webSocketService.sendMessage(id, new seabattle.game.messages.MsgError(\"The player does not play yet! \")); } catch (java.io.IOException ex) { seabattle.msgsystem.MsgFireCoordinatesHandler.LOGGER.warn(\"Unnable to send message\"); } throw new java.lang.IllegalStateException(\"It's not currently this player's move!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1634/buggy-version/src.main.java.seabattle.msgsystem.MsgFireCoordinatesHandler.java", "BodyUseAPI": [], "Fixed commit": "833a616d1d00a95c39b3cad1c0cc6e98d593a2c4", "Url": "https://api.github.com/repos/java-park-mail-ru/SeaBattle-09-2017", "Date": "2017-11-23T23:54:15Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((b != null) && (b.containsKey(\"food\"))) { return ((com.openfridge.FridgeFood) (b.getSerializable(\"food\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3688/buggy-version/OpenFridge_ZH.src.com.openfridge.FridgeFood.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "e1d2495293da5f16d28e4beb607626ae5abc02f9", "Url": "https://api.github.com/repos/zh3/openfridge", "Date": "2011-11-12T07:00:37Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (imageUri != null) { originalImagePath = imageUri.getPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3421/buggy-version/catroid.src.org.catrobat.catroid.ui.controller.LookController.java", "BodyUseAPI": ["android.net.Uri.getPath()"], "Fixed commit": "bc2bb6c754cc1c74cc91f88404e9037db99f886e", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2015-02-02T14:49:27Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.contains(registro, \".\")) { registro = org.apache.commons.lang3.StringUtils.substringAfterLast(registro, \".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3359/buggy-version/pic-project.pic-web.src.main.java.pe.com.bbva.pic.ui.PicUI.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)"], "Fixed commit": "bd19b3ad3a96c71e29f5aab3baa8b1bc66b47029", "Url": "https://api.github.com/repos/stormenta/pic", "Date": "2015-06-25T17:27:11Z"},
{"Line": "=>847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSuggestion) == null) { android.widget.Toast.makeText(getContext(), \"Unable to show suggestions.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3398/buggy-version/Dobby.app.src.main.java.com.inceptai.dobby.ui.WifiDocMainFragment.java", "BodyUseAPI": [], "Fixed commit": "ea6f8e165fdd039b04c13421f7dcf77ea043fc78", "Url": "https://api.github.com/repos/InceptAi/dobby-android", "Date": "2017-07-05T21:09:04Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (glossaryType.equalsIgnoreCase(\"Algae\")) { glossaryType = \"Algea\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1845/buggy-version/oto-client.src.main.java.edu.arizona.biosemantics.oto.client.oto.OTOClient.java", "BodyUseAPI": [], "Fixed commit": "5897140ddde8c8f19f7feb86eaffc5973b3aab05", "Url": "https://api.github.com/repos/biosemantics/oto", "Date": "2015-01-27T16:57:25Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (glossaryType.equalsIgnoreCase(\"Algae\")) { glossaryType = \"Algea\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1845/buggy-version/oto-client.src.main.java.edu.arizona.biosemantics.oto.client.oto.OTOClient.java", "BodyUseAPI": [], "Fixed commit": "5897140ddde8c8f19f7feb86eaffc5973b3aab05", "Url": "https://api.github.com/repos/biosemantics/oto", "Date": "2015-01-27T16:57:25Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.typed.model.Model.getTotalTasks()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (total != 0) { percentage.setText(((java.lang.Math.abs(((completed * 100) / total))) + \" %\")); }else { percentage.setText((0 + \" %\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5579/buggy-version/src.main.java.seedu.typed.ui.Chart.java", "BodyUseAPI": ["javafx.scene.text.Text.setText(java.lang.String)", "java.lang.Math.abs(int)"], "Fixed commit": "9e9814d06fbadd10021f3e950213d9ad859995ac", "Url": "https://api.github.com/repos/CS2103JAN2017-W09-B2/main", "Date": "2017-03-31T05:04:03Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefix.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/296/buggy-version/src.main.java.com.matthewprenger.servertools.permission.handlers.EventHandler.java", "BodyUseAPI": [], "Fixed commit": "3392f1f22dd9f11c11e465bcde3bfb655529377d", "Url": "https://api.github.com/repos/MCServerTools/ServerTools-PERMISSION", "Date": "2014-08-14T00:47:45Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mergedResults.isEmpty())) { startColumn = mergedResults.last(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2181/buggy-version/stack.corepersistence.common.src.main.java.org.apache.usergrid.persistence.core.astyanax.MultiRowColumnIterator.java", "BodyUseAPI": ["java.util.TreeSet<T>.last()"], "Fixed commit": "bc70fe7e1c6c493b6b1abca8b2e9c1db2c468f50", "Url": "https://api.github.com/repos/snoopdave/incubator-usergrid", "Date": "2014-08-28T03:45:20Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { return java.lang.String.format(getLocalizationFromKey(key), args); }else { return getLocalizationFromKey(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6926/buggy-version/Core.src.main.java.mytown.core.Localization.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.Object[])"], "Fixed commit": "323d15f1f22071ef5a7a27e6e30ae7859574e6d0", "Url": "https://api.github.com/repos/nylser/MyTown2", "Date": "2014-04-21T17:46:36Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.andes.kernel.OnflightMessageTracker.getInstance().getNotAckedMessageCount(localSubscription.getChannelID())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (notAckedMsgCount < 0) { if (org.wso2.andes.kernel.MessageFlusher.log.isDebugEnabled()) { org.wso2.andes.kernel.MessageFlusher.log.debug(\"Invalid local subscription selected to send messages\"); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8760/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.MessageFlusher.java", "BodyUseAPI": [], "Fixed commit": "b0e013e9384082279d25ec608de3ba82ea88109b", "Url": "https://api.github.com/repos/AnujaLK/andes", "Date": "2015-04-07T12:41:40Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((unAckedMsgCountMap.get(channelID)) != null) { return unAckedMsgCountMap.get(channelID).get(); }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8760/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.OnflightMessageTracker.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicInteger.get()", "java.util.concurrent.ConcurrentMap<java.util.UUID, java.util.concurrent.atomic.AtomicInteger>.get(java.util.UUID)"], "Fixed commit": "b0e013e9384082279d25ec608de3ba82ea88109b", "Url": "https://api.github.com/repos/AnujaLK/andes", "Date": "2015-04-07T12:41:40Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.psi.JetDeclarationImpl.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.jetbrains.jet.lang.psi.JetDeclarationImpl.isClassObject(parent)) { assert parent instanceof org.jetbrains.jet.lang.psi.JetDeclaration; return ((org.jetbrains.jet.lang.psi.JetDeclaration) (parent)).getModifierList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/877/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.psi.JetDeclarationImpl.java", "BodyUseAPI": [], "Fixed commit": "2975cda4d6f148db61f537e057488af27bbfb90f", "Url": "https://api.github.com/repos/Frostman/kotlin", "Date": "2012-06-29T17:32:54Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((width) == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7821/buggy-version/core.src.main.java.org.lemurproject.galago.core.retrieval.iterator.OrderedWindowIterator.java", "BodyUseAPI": [], "Fixed commit": "814a3357f4b7e6c130b5b8c2243ae7db80e83bca", "Url": "https://api.github.com/repos/jjfiv/galago-git", "Date": "2017-11-08T19:08:28Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parameters[i].isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8166/buggy-version/dal-dao-gen.src.main.java.com.ctrip.platform.dal.daogen.resource.GenTaskByFreeSqlResource.java", "BodyUseAPI": [], "Fixed commit": "ad0d0f054aacedb472aeab741f677a7ef2391082", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2017-03-29T03:39:42Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((liquibase.util.SystemUtils.IS_OS_MAC) || (liquibase.util.SystemUtils.IS_OS_MAC_OSX)) { org.openqa.selenium.interactions.Actions action = new org.openqa.selenium.interactions.Actions(webDriverGeePlayground); action.contextClick(textArea).clickAndHold().sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.RETURN).release(); action.contextClick(textArea).clickAndHold().sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.RETURN).release(); }else { textArea.sendKeys(org.openqa.selenium.Keys.chord(Keys.CONTROL, \"a\")); textArea.sendKeys(org.openqa.selenium.Keys.chord(Keys.CONTROL, \"v\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/613/buggy-version/collect-earth.collect-earth-app.src.main.java.org.openforis.collect.earth.app.service.BrowserService.java", "BodyUseAPI": [], "Fixed commit": "93c43b62d68b332605d20caffb98f0f87e0eff34", "Url": "https://api.github.com/repos/openforis/collect-earth", "Date": "2015-07-14T10:04:18Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (liquibase.util.SystemUtils.IS_OS_UNIX) { props.setProperty(\"webdriver.chrome.driver\", \"resources/chromedriver\"); }else if (liquibase.util.SystemUtils.IS_OS_WINDOWS) { props.setProperty(\"webdriver.chrome.driver\", \"resources/chromedriver.exe\"); }else { throw new java.lang.RuntimeException(\"Chromedriver is not supported in the current OS\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/613/buggy-version/collect-earth.collect-earth-app.src.main.java.org.openforis.collect.earth.app.service.BrowserService.java", "BodyUseAPI": [], "Fixed commit": "93c43b62d68b332605d20caffb98f0f87e0eff34", "Url": "https://api.github.com/repos/openforis/collect-earth", "Date": "2015-07-14T10:04:18Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["yarangi.spatial.GridMap<K, O>.indexAtCell(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((idx < 0) || (idx >= (map.length))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5903/buggy-version/quadraturin-utils.src.main.java.yarangi.spatial.GridMap.java", "BodyUseAPI": [], "Fixed commit": "9f217b4aa091a5e5d3e4e69c151dc7df36f12399", "Url": "https://api.github.com/repos/dveyarangi/quadraturin", "Date": "2011-10-01T11:55:43Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format == null) { csvFormat = org.apache.commons.csv.CSVFormat.DEFAULT; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5456/buggy-version/hdata-csv.src.main.java.com.github.stuxuhai.hdata.plugin.FormatConf.java", "BodyUseAPI": [], "Fixed commit": "da5aa760e9b141307c2e0eb8f11503048b986d5b", "Url": "https://api.github.com/repos/dlnufox/HData", "Date": "2017-06-18T16:23:54Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mariotaku.twidere.fragment.UserProfileFragment.getOriginalTwitterProfileImage(mUser.profile_image_url)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (profile_image_url_string == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6152/buggy-version/src.org.mariotaku.twidere.fragment.UserProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "7ed04704a0384b94daf77b6340412e8bc7e6e43f", "Url": "https://api.github.com/repos/mariotaku/twidere", "Date": "2013-01-04T09:34:29Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.killbill.billing.invoice.api.user.DefaultInvoiceUserApi.5.getInvoice(java.util.UUID,org.killbill.billing.util.callcontext.CallContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (InvoiceStatus.COMMITTED.equals(existingInvoiceForExternalCharge.getStatus())) { throw new org.killbill.billing.invoice.api.InvoiceApiException(org.killbill.billing.ErrorCode.INVOICE_ALREADY_COMMITTED, existingInvoiceForExternalCharge.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6143/buggy-version/invoice.src.main.java.org.killbill.billing.invoice.api.user.DefaultInvoiceUserApi.java", "BodyUseAPI": ["org.killbill.billing.invoice.api.Invoice.getId()"], "Fixed commit": "af7214c939aecd5cc0a2f4db46d4fc44f65a4bbe", "Url": "https://api.github.com/repos/javier-gomez-github/killbill", "Date": "2017-08-04T21:03:17Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.dieterdepaepe.jsearch.problem.npuzzle.PuzzleEnvironment.getPuzzle()", "com.github.dieterdepaepe.jsearch.problem.npuzzle.SlidingPuzzle.getValue(com.github.dieterdepaepe.jsearch.problem.npuzzle.PuzzleFields,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldValue == (puzzle.getEmptyFieldValue())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/489/buggy-version/examples.src.main.java.com.github.dieterdepaepe.jsearch.problem.npuzzle.ManhattanDistance.java", "BodyUseAPI": [], "Fixed commit": "49f65e6c06147a240f4bb7a5b477b0bcf47f56be", "Url": "https://api.github.com/repos/DieterDePaepe/JSearch", "Date": "2014-06-08T21:02:24Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (ValidationType.REVERSE_CLI)) map.put(\"use_server_hangup\", java.lang.Boolean.valueOf(this.useServerHangup));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6040/buggy-version/checkmobi_sdk.src.main.java.com.checkmobi.sdk.CheckMobiService.java", "BodyUseAPI": [], "Fixed commit": "db140490b27b5c13f420ed9d610775de3127d7ae", "Url": "https://api.github.com/repos/checkmobi/checkmobi_android", "Date": "2015-10-12T18:25:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((cargo.length) - 2) % 18) != 0) java.lang.System.out.println(((\"[GC] Warning: strange cargo size \" + (cargo.length)) + \" for Parachest.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3885/buggy-version/common.micdoodle8.mods.galacticraft.core.entities.GCCoreEntityParaChest.java", "BodyUseAPI": [], "Fixed commit": "0785386c5df5471cb33e1e8f05184077ead5f1aa", "Url": "https://api.github.com/repos/EzerArch/Galacticraft", "Date": "2014-06-12T03:12:21Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.terminal) && (((node.children) == null) || ((node.children.length) == 0))) { return false; }else { final boolean aChildNodeWasDeleted = deleteWordRec(node.children, word, (offset + 1), length); if (aChildNodeWasDeleted) { if ((node.children.length) == 0) { children.deleteNode(j); return true; }else { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9209/buggy-version/src.com.anysoftkeyboard.dictionaries.BTreeDictionary.java", "BodyUseAPI": ["com.anysoftkeyboard.dictionaries.BTreeDictionary.deleteWordRec(com.anysoftkeyboard.dictionaries.BTreeDictionary.NodeArray,java.lang.CharSequence,int,int)"], "Fixed commit": "10cf4980c3d18a7a9b7e01f0c86e735c0a13059d", "Url": "https://api.github.com/repos/AnySoftKeyboard/AnySoftKeyboard", "Date": "2013-05-04T01:38:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataType != null) { return new io.crate.metadata.ReferenceInfo(referenceInfo.ident(), referenceInfo.granularity(), dataType, referenceInfo.columnPolicy(), referenceInfo.indexType()); }else { return referenceInfo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5172/buggy-version/sql.src.main.java.io.crate.analyze.relations.AbstractTableRelation.java", "BodyUseAPI": [], "Fixed commit": "c198feca0b407326f5af4da8d0f736ee986537df", "Url": "https://api.github.com/repos/rlugojr/crate", "Date": "2016-06-16T20:26:46Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bought > 0) { item.setAmount(bought); im.addItem(item); org.blockface.virtualshop.Chatty.SendSuccess(player, (((((\"Managed to buy \" + (org.blockface.virtualshop.Chatty.FormatAmount(bought))) + \" \") + (org.blockface.virtualshop.Chatty.FormatItem(args[1]))) + \" for \") + (org.blockface.virtualshop.Chatty.FormatPrice(spent)))); }else { org.blockface.virtualshop.Chatty.SendError(player, (\"Unable to buy any \" + (org.blockface.virtualshop.Chatty.FormatItem(args[1])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6855/buggy-version/src.main.java.org.blockface.virtualshop.commands.Buy.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.setAmount(int)", "org.blockface.virtualshop.Chatty.SendSuccess(org.bukkit.entity.Player,(((((\"Managed to buy \" + (org.blockface.virtualshop.Chatty.FormatAmount(bought))) + \" \") + (org.blockface.virtualshop.Chatty.FormatItem(args[1]))) + \" for \") + (org.blockface.virtualshop.Chatty.FormatPrice(spent))))", "org.blockface.virtualshop.Chatty.FormatAmount(int)"], "Fixed commit": "fb3640c7bc38340cca8db3bd9b50e4dfc7766015", "Url": "https://api.github.com/repos/azkedar/VirtualShop", "Date": "2011-10-11T03:26:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (module.existAvailabilityRequirement()) { toReturn.getMonitoringRules().addAll(eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"appAvailableSLARule___\" + (module.getModuleName())), \"10\", \"10\", \"InternalComponent\", module.getModuleName(), \"PaaSModuleAvailability\", parameters, null, null, (\"METRIC < \" + (module.getAvailability())), ((\"AppAvailabilityViolation_\" + (module.getModuleName())) + \"\")).getMonitoringRules()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6173/buggy-version/monitor.monitoring-dam-generator-core.src.main.java.eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.NuroRulesGenerator.java", "BodyUseAPI": ["toReturn.getMonitoringRules().addAll(eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"appAvailableSLARule___\" + (module.getModuleName())), \"10\", \"10\", \"InternalComponent\", module.getModuleName(), \"PaaSModuleAvailability\", parameters, null, null, (\"METRIC < \" + (module.getAvailability())), ((\"AppAvailabilityViolation_\" + (module.getModuleName())) + \"\")).getMonitoringRules())", "java.lang.Module.getModuleName()", "eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"appAvailableSLARule___\" + (module.getModuleName())), \"10\", \"10\", \"InternalComponent\", module.getModuleName(), \"PaaSModuleAvailability\", parameters, null, null, (\"METRIC < \" + (module.getAvailability())), ((\"AppAvailabilityViolation_\" + (module.getModuleName())) + \"\")).getMonitoringRules()", "java.lang.Module.getModuleName()", "eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"appAvailableSLARule___\" + (module.getModuleName())),java.lang.String,java.lang.String,java.lang.String,module.getModuleName(),java.lang.String,java.util.Map<java.lang.String, java.lang.String>,<nulltype>,<nulltype>,(\"METRIC < \" + (module.getAvailability())),((\"AppAvailabilityViolation_\" + (module.getModuleName())) + \"\"))", "java.lang.Module.getAvailability()", "java.lang.Module.getModuleName()"], "Fixed commit": "5a6c77d0515c4f738a13ef53dc2e936ea22f415d", "Url": "https://api.github.com/repos/MicheleGuerriero/SeaCloudsPlatform", "Date": "2016-05-06T09:29:48Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (module.existResponseTimeRequirement()) { toReturn.getMonitoringRules().addAll(eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"nuroThirtySecondsSlaRuntimeRule\" + (module.getModuleName())), \"30\", \"30\", \"InternalComponent\", module.getModuleName(), \"NUROServerLastTenSecondsAverageRunTime\", parameters, \"Average\", \"InternalComponent\", (\"METRIC > \" + ((module.getResponseTime()) / 1000)), (\"NUROServerLastThirtySecondsAverageRunTime_Violation_\" + (module.getModuleName()))).getMonitoringRules()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6173/buggy-version/monitor.monitoring-dam-generator-core.src.main.java.eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.NuroRulesGenerator.java", "BodyUseAPI": ["java.lang.Module.getResponseTime()", "java.lang.Module.getModuleName()", "eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"nuroThirtySecondsSlaRuntimeRule\" + (module.getModuleName())), \"30\", \"30\", \"InternalComponent\", module.getModuleName(), \"NUROServerLastTenSecondsAverageRunTime\", parameters, \"Average\", \"InternalComponent\", (\"METRIC > \" + ((module.getResponseTime()) / 1000)), (\"NUROServerLastThirtySecondsAverageRunTime_Violation_\" + (module.getModuleName()))).getMonitoringRules()", "eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"nuroThirtySecondsSlaRuntimeRule\" + (module.getModuleName())),java.lang.String,java.lang.String,java.lang.String,module.getModuleName(),java.lang.String,java.util.Map<java.lang.String, java.lang.String>,java.lang.String,java.lang.String,(\"METRIC > \" + ((module.getResponseTime()) / 1000)),(\"NUROServerLastThirtySecondsAverageRunTime_Violation_\" + (module.getModuleName())))", "java.lang.Module.getModuleName()", "java.lang.Module.getModuleName()", "toReturn.getMonitoringRules().addAll(eu.seaclouds.monitor.monitoringdamgenerator.rulesgenerators.RuleSchemaGenerator.fillMonitoringRuleSchema((\"nuroThirtySecondsSlaRuntimeRule\" + (module.getModuleName())), \"30\", \"30\", \"InternalComponent\", module.getModuleName(), \"NUROServerLastTenSecondsAverageRunTime\", parameters, \"Average\", \"InternalComponent\", (\"METRIC > \" + ((module.getResponseTime()) / 1000)), (\"NUROServerLastThirtySecondsAverageRunTime_Violation_\" + (module.getModuleName()))).getMonitoringRules())"], "Fixed commit": "5a6c77d0515c4f738a13ef53dc2e936ea22f415d", "Url": "https://api.github.com/repos/MicheleGuerriero/SeaCloudsPlatform", "Date": "2016-05-06T09:29:48Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (prevRideTime != null) { long diff = (rideTime - prevRideTime) / (servingSpeed); java.lang.Thread.sleep(diff); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2959/buggy-version/src.main.java.com.dataartisans.flinktraining.exercises.datastream_java.sources.CheckpointedTaxiRideSource.java", "BodyUseAPI": [], "Fixed commit": "574bba331636c2dbab8050b29377fd3172df6146", "Url": "https://api.github.com/repos/dataArtisans/flink-training-exercises", "Date": "2017-09-04T08:36:51Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.isOp()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!wasOp) player.setOp(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3648/buggy-version/src.main.java.com.sk89q.craftbook.mech.items.CommandItems.java", "BodyUseAPI": [], "Fixed commit": "8bedc8a32b23b034811e2599b1ea63f3f6142565", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2014-02-09T08:03:37Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.isOp()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!wasOp) player.setOp(wasOp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3648/buggy-version/src.main.java.com.sk89q.craftbook.mech.items.CommandItems.java", "BodyUseAPI": ["org.bukkit.entity.Player.setOp(boolean)"], "Fixed commit": "8bedc8a32b23b034811e2599b1ea63f3f6142565", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2014-02-09T08:03:37Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player.getCurrentPosition().getX()) == 0) & ((player.getCurrentPosition().getY()) == 0)) { frame.mazeText.clearText(); frame.mazeText.updateText((((((\"Inventory:\" + (player.displayInventory())) + \"\\nNumber of Steps: \") + (player.getNbOfSteps())) + \"\\nScore: \") + (player.getScore()))); frame.mazeText.updateText(\"\\nYou cannot escape the maze by trying to go back in time!\"); }else { frame.buttonListener.resetWasPressed(); player.undoMove(); frame.mazeText.clearText(); frame.mazeText.updateText((((((\"Inventory:\" + (player.displayInventory())) + \"\\nNumber of Steps: \") + (player.getNbOfSteps())) + \"\\nScore: \") + (player.getScore()))); frame.mazeText.updateText(\"\\nYou went back in time\"); myMaze.display(player.getCurrentPosition(), frame.mazeConsole); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1450/buggy-version/MAZED.src.maze.Game.java", "BodyUseAPI": ["frame.mazeText.updateText((((((\"Inventory:\" + (player.displayInventory())) + \"\\nNumber of Steps: \") + (player.getNbOfSteps())) + \"\\nScore: \") + (player.getScore())))", "player.Player.getCurrentPosition()", "frame.mazeText.updateText((((((\"Inventory:\" + (player.displayInventory())) + \"\\nNumber of Steps: \") + (player.getNbOfSteps())) + \"\\nScore: \") + (player.getScore())))", "player.Player.getNbOfSteps()", "maze.Maze.display(player.getCurrentPosition(),frame.mazeConsole)", "player.Player.getScore()", "player.Player.displayInventory()", "player.Player.undoMove()", "player.Player.getScore()", "player.Player.getNbOfSteps()", "player.Player.displayInventory()"], "Fixed commit": "a566897a33dcd51599975eb37752c93cab4ede67", "Url": "https://api.github.com/repos/Bolo1/JavaProject", "Date": "2017-12-30T14:33:47Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/121/buggy-version/src.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "9dd89462feded8d5b8cf863f1d2405f7f2f99b17", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reportError) { if (member != null) { myErrorReporter.report(new com.jetbrains.jetpad.vclang.parser.ParserError(myNamespace, position, ((\"Cannot find '\" + name) + \"'\"))); }else { myErrorReporter.report(new com.jetbrains.jetpad.vclang.parser.ParserError(myNamespace, position, (\"Not in scope: \" + name))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1053/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.parser.BuildVisitor.java", "BodyUseAPI": [], "Fixed commit": "94b4c5748231259a887979d6d6aaaae64d939a7f", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-09-01T11:05:03Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.jetpad.vclang.parser.BuildVisitor.findId(java.lang.String,boolean,Concrete.Position,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((((constructor != null) && (constructor instanceof com.jetbrains.jetpad.vclang.term.Concrete.DefCallExpression)) && ((((com.jetbrains.jetpad.vclang.term.Concrete.DefCallExpression) (constructor)).getDefinition()) instanceof com.jetbrains.jetpad.vclang.parser.Constructor)) && (((com.jetbrains.jetpad.vclang.parser.Constructor) (((com.jetbrains.jetpad.vclang.term.Concrete.DefCallExpression) (constructor)).getDefinition())).getArguments().isEmpty())) { return new com.jetbrains.jetpad.vclang.term.Concrete.ConstructorPattern(pos, new com.jetbrains.jetpad.vclang.parser.BuildVisitor.Name(name), new java.util.ArrayList<com.jetbrains.jetpad.vclang.term.Concrete.Pattern>()); }else { return new com.jetbrains.jetpad.vclang.term.Concrete.NamePattern(pos, name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1053/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.parser.BuildVisitor.java", "BodyUseAPI": [], "Fixed commit": "94b4c5748231259a887979d6d6aaaae64d939a7f", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2015-09-01T11:05:03Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rMap != null) itemSortedMap = com.ccec.dexterservice.AcceptedFragment.sortByComparator(rMap, com.ccec.dexterservice.AcceptedFragment.DESC);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8421/buggy-version/app.src.main.java.com.ccec.dexterservice.AcceptedFragment.java", "BodyUseAPI": ["com.ccec.dexterservice.AcceptedFragment.sortByComparator(java.util.Map<java.lang.String, java.lang.Object>,boolean)"], "Fixed commit": "ad6b71f2d9ad06b56b0fa42598132db05d37cd72", "Url": "https://api.github.com/repos/bikrathor/DexterService", "Date": "2017-01-31T14:14:45Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rMap != null) itemSortedMap = com.ccec.dexterservice.CompletedFragment.sortByComparator(rMap, com.ccec.dexterservice.CompletedFragment.DESC);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8421/buggy-version/app.src.main.java.com.ccec.dexterservice.CompletedFragment.java", "BodyUseAPI": ["com.ccec.dexterservice.CompletedFragment.sortByComparator(java.util.Map<java.lang.String, java.lang.Object>,boolean)"], "Fixed commit": "ad6b71f2d9ad06b56b0fa42598132db05d37cd72", "Url": "https://api.github.com/repos/bikrathor/DexterService", "Date": "2017-01-31T14:14:45Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (rMap != null) itemSortedMap = com.ccec.dexterservice.OpenFragment.sortByComparator(rMap, com.ccec.dexterservice.OpenFragment.DESC);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8421/buggy-version/app.src.main.java.com.ccec.dexterservice.OpenFragment.java", "BodyUseAPI": ["com.ccec.dexterservice.OpenFragment.sortByComparator(java.util.Map<java.lang.String, java.lang.Object>,boolean)"], "Fixed commit": "ad6b71f2d9ad06b56b0fa42598132db05d37cd72", "Url": "https://api.github.com/repos/bikrathor/DexterService", "Date": "2017-01-31T14:14:45Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConfiguration().getSecurityConfiguration()) != null) { addFilter(new org.minnal.security.filter.basic.BasicAuthenticationFilter(new org.minnal.example.auth.BasicAuthenticator(), getConfiguration().getSecurityConfiguration())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7065/buggy-version/minnal-example.src.main.java.org.minnal.example.OrderApplication.java", "BodyUseAPI": [], "Fixed commit": "83ea3af6b6ad60b9d524ae5a14b2923022ec97db", "Url": "https://api.github.com/repos/minnal/minnal", "Date": "2013-11-08T08:37:20Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.realm.MutableRealmSchema.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (objectSchema == null) { objectSchema = new io.realm.MutableRealmObjectSchema(realm, this, table); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/350/buggy-version/realm.realm-library.src.main.java.io.realm.MutableRealmSchema.java", "BodyUseAPI": [], "Fixed commit": "6b12a42eb92c16fd2552c3c6ee350b3856df9eb8", "Url": "https://api.github.com/repos/realm/realm-java", "Date": "2017-07-28T08:14:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.VERSION_NAME.equals(com.huhx0015.builditbigger.MainActivityFragment.BUILD_FREE)) { com.google.android.gms.ads.AdView mAdView = ((com.google.android.gms.ads.AdView) (fragmentView.findViewById(R.id.adView))); com.google.android.gms.ads.AdRequest adRequest = new com.google.android.gms.ads.AdRequest.Builder().addTestDevice(AdRequest.DEVICE_ID_EMULATOR).build(); mAdView.loadAd(adRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8250/buggy-version/app.src.main.java.com.huhx0015.builditbigger.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "027c98e0228688726fbf828564f501703a1ac173", "Url": "https://api.github.com/repos/huhx0015/AN4_BuildItBigger", "Date": "2016-04-07T15:15:50Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ctx.getBaseLocator()) == null) { throw new net.ontopia.topicmaps.db2tm.DB2TMException(((\"Cannot resolve locator '\" + value) + \"', missing a base locator\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5000/buggy-version/ontopia-db2tm.src.main.java.net.ontopia.topicmaps.db2tm.Utils.java", "BodyUseAPI": [], "Fixed commit": "5fd39166f8d7ca404e19a89d56d6335d22603632", "Url": "https://api.github.com/repos/ontopia/ontopia", "Date": "2017-05-09T17:40:55Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ctx.getBaseLocator()) == null) { throw new net.ontopia.topicmaps.db2tm.DB2TMException(((\"Cannot resolve locator '\" + relloc) + \"', missing a base locator\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5000/buggy-version/ontopia-db2tm.src.main.java.net.ontopia.topicmaps.db2tm.Utils.java", "BodyUseAPI": [], "Fixed commit": "5fd39166f8d7ca404e19a89d56d6335d22603632", "Url": "https://api.github.com/repos/ontopia/ontopia", "Date": "2017-05-09T17:40:55Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (partSales.isVip()) { com.co.lane.card.jni.RFCardManager frCardMgmt = com.co.lane.card.jni.RFCardManager.getInstance(); com.topsun.posclient.datamodel.VipUser vipuser = partSales.getVipUser(); java.math.BigDecimal oldPoint = vipuser.getPoint(); java.math.BigDecimal usePointVal = com.topsun.posclient.common.ProjectUtil.formatString(usePoint.getText()); oldPoint = oldPoint.subtract(usePointVal); vipuser.setPoint(oldPoint); frCardMgmt.writeCardData(vipuser); com.topsun.posclient.sales.ui.gold.PartSalesFacade.restSalesView(); org.eclipse.jface.dialogs.MessageDialog.openInformation(this.getShell(), \"\u6210\u529f\", ((((\"\u4ea4\u6613\u6210\u529f\uff0c\u672c\u6b21\u4ea4\u6613\u4f7f\u7528\u79ef\u5206\u3010\" + usePointVal) + \"\u3011\uff0c\u5269\u4f59\u79ef\u5206\u3010\") + oldPoint) + \"\u3011\")); }else { org.eclipse.jface.dialogs.MessageDialog.openInformation(this.getShell(), \"\u6210\u529f\", \"\u4ea4\u6613\u6210\u529f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9158/buggy-version/com.topsun.posclient.sales.ui.src.com.topsun.posclient.sales.dialog.SalesPayDialog.java", "BodyUseAPI": ["com.topsun.posclient.datamodel.PartSales.getVipUser()"], "Fixed commit": "156bf3602d3424ff7c6a4191625c89e1d81ba1b7", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-11-18T06:31:02Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.topsun.posclient.datamodel.CardRule.getMatnr()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(item.getMATNR().startsWith(matnr))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9158/buggy-version/com.topsun.posclient.sales.core.src.com.topsun.posclient.sales.core.service.impl.PartSaleServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "156bf3602d3424ff7c6a4191625c89e1d81ba1b7", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2013-11-18T06:31:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinished())) { iterateUntilNextCard(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5006/buggy-version/Listo.app.src.main.java.com.cameronvoell.listo.model.ReviewWordsSession.java", "BodyUseAPI": [], "Fixed commit": "529335a40ec9e4d1ed7b5fa5e9bc4b701055994c", "Url": "https://api.github.com/repos/cameronvoell/listo-spanish-learning-android-app", "Date": "2017-01-28T10:00:04Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.creativecomputing.io.data.CCDataObject.getObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (myData == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5277/buggy-version/cc-control.src.main.java.cc.creativecomputing.control.handles.CCObjectPropertyHandle.java", "BodyUseAPI": [], "Fixed commit": "29ae0d87d0437bc18ab2813054cfeb1bdb302152", "Url": "https://api.github.com/repos/texone/creativecomputing", "Date": "2015-11-10T09:13:30Z"},
{"Line": "=>1126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.ednovo.gooru.client.mvp.gshelf.righttabs.MyCollectionsRightClusterView.COURSE.equalsIgnoreCase(currentTypeView)) || (org.ednovo.gooru.client.mvp.gshelf.righttabs.MyCollectionsRightClusterView.UNIT.equalsIgnoreCase(currentTypeView))) || (org.ednovo.gooru.client.mvp.gshelf.righttabs.MyCollectionsRightClusterView.LESSON.equalsIgnoreCase(currentTypeView))) { moveLbl.setVisible(false); }else { moveLbl.setVisible(hide); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8829/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.righttabs.MyCollectionsRightClusterView.java", "BodyUseAPI": [], "Fixed commit": "a273b195d7798ea488dcb1d481c2b8381235d75d", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-19T11:47:30Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((searchedLocation) == null)) { mapzenMap.drawSearchResult(searchedLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6451/buggy-version/app.src.main.java.www.weride.com.fragments.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "5f209c7626f3fe83e3617e6b11fd08f034e9f7a3", "Url": "https://api.github.com/repos/bryanherrera72/WeRide", "Date": "2017-03-23T19:19:18Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((list.get((i + 1))) - (list.get(i))) == 2) && (successive == 1)) { return false; }else if ((((list.get((i + 1))) - (list.get(i))) == 2) && (successive == 2)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8272/buggy-version/src.yahtzee.Yahtzee.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)", "java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "df93c96c36c459433fbfa119fe419f2827a1c77f", "Url": "https://api.github.com/repos/devadv/Yahtzee", "Date": "2017-05-24T09:36:38Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (address != null) { searchIntent.putExtra(SearchActivity.SEARCH_ADDRESS_EXTRA, address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7867/buggy-version/app.src.main.java.com.mybus.activity.MainActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(SearchActivity.SEARCH_ADDRESS_EXTRA,java.lang.String)"], "Fixed commit": "7014b3f7bdbad50910fbe643f8da274995f50b13", "Url": "https://api.github.com/repos/sparkdigital/mybus-android", "Date": "2016-10-28T15:27:05Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((edit.getText().length()) > 0) { dish.setDishName(edit.getText().toString()); db.insertDish(dish); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/651/buggy-version/app.src.main.java.com.example.mateu_000.foodieapp.AddMealActivity.java", "BodyUseAPI": ["com.example.mateu_000.foodieapp.Dish.setDishName(edit.getText().toString())", "android.widget.EditText.getText()", "edit.getText().toString()"], "Fixed commit": "86386814ab8024ed528d0650968a8ecaaea9fccf", "Url": "https://api.github.com/repos/Tymoteuszauke/FoodieApp", "Date": "2016-05-23T13:00:51Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AuthorizationConstants.ANONYMOUS_USER_ID.equals(name)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2214/buggy-version/services.repository.src.main.java.org.sagebionetworks.repo.manager.backup.PrincipalBackupDriver.java", "BodyUseAPI": [], "Fixed commit": "b0f8daf6b8c3d32f4fcafa2422c1f0b08996be43", "Url": "https://api.github.com/repos/eric-wu/Synapse-Repository-Services", "Date": "2012-08-10T17:41:30Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateWithEnableSendPayload) { updateBuilder.updateColumnValue(\"enableSendPayload\", sensor.getEnableSendPayloadRaw()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7714/buggy-version/src.main.java.org.mycontroller.standalone.db.dao.SensorDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "761137d2d54f35c0811902b970528ea543a9edcd", "Url": "https://api.github.com/repos/arturmon/mycontroller", "Date": "2015-10-19T16:55:56Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((totalProducts.get(j)) != null) { if ((((totalProducts.get(j)) instanceof MovieTicket) && ((((ParkingPass) (totalProducts.get(i))).getTicket().compareTo(((MovieTicket) (totalProducts.get(j))).getProductCode())) == 0)) || (((totalProducts.get(j)) instanceof SeasonPass) && ((((ParkingPass) (totalProducts.get(i))).getTicket().compareTo(((SeasonPass) (totalProducts.get(j))).getProductCode())) == 0))) { ((ParkingPass) (totalProducts.get(i))).setTicketAmount(totalProducts.get(j).getAmount()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3950/buggy-version/src.FlatFileReader.java", "BodyUseAPI": ["java.util.ArrayList<Product>.get(int)", "((ParkingPass) (totalProducts.get(i))).setTicketAmount(totalProducts.get(j).getAmount())", "java.util.ArrayList<Product>.get(int)", "java.util.ArrayList<Product>.get(int)", "((ParkingPass) (totalProducts.get(i))).getTicket()", "java.util.ArrayList<Product>.get(int)", "((ParkingPass) (totalProducts.get(i))).getTicket().compareTo(((MovieTicket) (totalProducts.get(j))).getProductCode())", "java.util.ArrayList<Product>.get(int)", "totalProducts.get(j).getAmount()", "((MovieTicket) (totalProducts.get(j))).getProductCode()", "java.util.ArrayList<Product>.get(int)", "((ParkingPass) (totalProducts.get(i))).getTicket().compareTo(((SeasonPass) (totalProducts.get(j))).getProductCode())", "java.util.ArrayList<Product>.get(int)", "java.util.ArrayList<Product>.get(int)", "((SeasonPass) (totalProducts.get(j))).getProductCode()", "((ParkingPass) (totalProducts.get(i))).getTicket()"], "Fixed commit": "874e5aa19d13671b108c06bb994249cc19e77ed9", "Url": "https://api.github.com/repos/vdoan98/MovieTheater", "Date": "2017-10-19T21:12:21Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.core.db.DatabaseFacade.findByUuid(spec.getDestRootVolume().getPrimaryStorageUuid(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (cephPrimaryStorageVO != null) { cmd.getAddons().put(CephConstants.CEPH_SCECRET_KEY, cephPrimaryStorageVO.getUserKey()); cmd.getAddons().put(CephConstants.CEPH_SECRECT_UUID, CephSystemTags.KVM_SECRET_UUID.getTokenByResourceUuid(cephPrimaryStorageVO.getUuid(), CephSystemTags.KVM_SECRET_UUID_TOKEN)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4081/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.primary.CephPrimaryStorageFactory.java", "BodyUseAPI": ["cmd.getAddons().put(CephConstants.CEPH_SECRECT_UUID,CephSystemTags.KVM_SECRET_UUID.getTokenByResourceUuid(cephPrimaryStorageVO.getUuid(), CephSystemTags.KVM_SECRET_UUID_TOKEN))", "org.zstack.storage.ceph.primary.CephPrimaryStorageVO.getUserKey()", "org.zstack.storage.ceph.primary.CephPrimaryStorageVO.getUuid()", "cmd.getAddons().put(CephConstants.CEPH_SCECRET_KEY,cephPrimaryStorageVO.getUserKey())", "CephSystemTags.KVM_SECRET_UUID.getTokenByResourceUuid(cephPrimaryStorageVO.getUuid(),CephSystemTags.KVM_SECRET_UUID_TOKEN)"], "Fixed commit": "6faa02682f62fa6e0c6478c29ae25f1a159d95f2", "Url": "https://api.github.com/repos/MatheMatrix/zstack", "Date": "2017-05-11T13:46:41Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((func) instanceof liwenhaosuper.sjtu.simpl.syntax.Variable) { java.lang.Integer id = rst.get(((liwenhaosuper.sjtu.simpl.syntax.Variable) (func)).name); liwenhaosuper.sjtu.simpl.syntax.Value vfunc = liwenhaosuper.sjtu.simpl.runtime.Memory.getInstance().getValue(id); if (vfunc instanceof liwenhaosuper.sjtu.simpl.syntax.AnonymousFunction) { return ((liwenhaosuper.sjtu.simpl.syntax.AnonymousFunction) (vfunc)).invokeFunc(par, rst); } }else if ((func) instanceof liwenhaosuper.sjtu.simpl.syntax.AnonymousFunction) { return ((liwenhaosuper.sjtu.simpl.syntax.AnonymousFunction) (func)).invokeFunc(par, rst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3423/buggy-version/simPL.src.liwenhaosuper.sjtu.simpl.syntax.Application.java", "BodyUseAPI": [], "Fixed commit": "6825b9d4ac317970b42d74a8d4fa07a0c6328269", "Url": "https://api.github.com/repos/liwenhaosuper/simPL", "Date": "2013-06-10T08:24:27Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphicsDefinition) != null) { for (us.ihmc.graphics3DAdapter.graphics.instructions.Graphics3DPrimitiveInstruction instruction : graphicsDefinition.getGraphics3DInstructions()) { returnString += instruction; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9102/buggy-version/SimulationConstructionSet.src.us.ihmc.simulationconstructionset.robotdefinition.LinkDefinitionFixedFrame.java", "BodyUseAPI": [], "Fixed commit": "8377b0cd92e912795c0b2be1a8f9de29002a556e", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-10-07T22:34:00Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion == newVersion) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4209/buggy-version/app.src.main.java.de.struckmeierfliesen.ds.wochenbericht.MySQLiteHelper.java", "BodyUseAPI": [], "Fixed commit": "12efb5ca3d5b849255fc1771b10b2bc68197c287", "Url": "https://api.github.com/repos/JohnAZoidberg/WochenBericht", "Date": "2015-12-16T17:43:00Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lt == (de.ub0r.android.callmeter.data.DataProvider.LIMIT_TYPE_NONE)) { if ((t == (de.ub0r.android.callmeter.data.DataProvider.TYPE_CALL)) && advanced) { ep2.setSummary(R.string.cost_per_amount_no_limit_help2); }else { ep2.setSummary(R.string.cost_per_amount_no_limit_help1); } }else { if ((t == (de.ub0r.android.callmeter.data.DataProvider.TYPE_CALL)) && advanced) { ep2.setSummary(R.string.cost_per_amount_help2); }else { ep2.setSummary(R.string.cost_per_amount_help1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3425/buggy-version/src.de.ub0r.android.callmeter.ui.prefs.PlanEdit.java", "BodyUseAPI": [], "Fixed commit": "27cbd0112f2a8accf27e15547cea8c973078ceda", "Url": "https://api.github.com/repos/felixb/callmeter", "Date": "2012-12-01T12:17:39Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lt == (de.ub0r.android.callmeter.data.DataProvider.LIMIT_TYPE_NONE)) { ep.setSummary(R.string.cost_per_item_no_limit_help); }else { ep.setSummary(R.string.cost_per_item_help); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3425/buggy-version/src.de.ub0r.android.callmeter.ui.prefs.PlanEdit.java", "BodyUseAPI": [], "Fixed commit": "27cbd0112f2a8accf27e15547cea8c973078ceda", "Url": "https://api.github.com/repos/felixb/callmeter", "Date": "2012-12-01T12:17:39Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (future.isSuccess()) { ctx.sendUpstream(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3127/buggy-version/src.main.java.com.spotify.netty.handler.codec.zmtp.ZMTPFramingDecoder.java", "BodyUseAPI": [], "Fixed commit": "3d16d3b0a7dac0ff555177a0e9d7a61d4ba08aaf", "Url": "https://api.github.com/repos/noaresare/netty-zmtp", "Date": "2013-11-14T16:23:25Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<telemetry.FramePart>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (f instanceof telemetry.PayloadCameraData) addToPictureFile(f.id, f.uptime, f.resets, ((telemetry.PayloadCameraData) (f))); else if (addToDb(f.id, f.uptime, f.resets, f)) { common.Log.println((((((((\"ERROR: Could not add record to the database: \" + (f.id)) + \" \") + (f.uptime)) + \" \") + (f.resets)) + \" \") + f)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8865/buggy-version/src.telemetry.PayloadDbStore.java", "BodyUseAPI": ["telemetry.PayloadDbStore.addToPictureFile(f.id,f.uptime,f.resets,telemetry.FramePart)", "common.Log.println((((((((\"ERROR: Could not add record to the database: \" + (f.id)) + \" \") + (f.uptime)) + \" \") + (f.resets)) + \" \") + f))", "telemetry.PayloadDbStore.addToDb(f.id,f.uptime,f.resets,telemetry.FramePart)"], "Fixed commit": "1e82cdaabaaa15a6b1d90234614c7d4477979e1d", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2016-01-10T02:23:52Z"},
{"Line": "=>751", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["telemetry.PayloadDbStore.getPictureStoreById(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (store != null) { java.util.ArrayList<telemetry.PictureScanLine> lines = f.pictureLines; for (telemetry.PictureScanLine line : lines) { line.id = id; line.resets = resets; line.uptime = uptime; try { if (!(store.add(id, resets, uptime, line))) return false; } catch (java.io.IOException e) { common.Log.println((((((((\"File Error writting CAMERA DATA, line not written: \" + id) + \" \") + resets) + \" \") + uptime) + \"\\n\") + (e.getMessage()))); e.printStackTrace(common.Log.getWriter()); } catch (java.lang.ArrayIndexOutOfBoundsException e) { common.Log.println((((((\"CORRUPT CAMERA DATA, line not written: \" + id) + \" \") + resets) + \" \") + uptime)); e.printStackTrace(common.Log.getWriter()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8865/buggy-version/src.telemetry.PayloadDbStore.java", "BodyUseAPI": ["telemetry.SatPictureStore.add(int,int,long,telemetry.PictureScanLine)"], "Fixed commit": "1e82cdaabaaa15a6b1d90234614c7d4477979e1d", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2016-01-10T02:23:52Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (value != null) { length = value.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4458/buggy-version/src.com.comcast.cmb.common.controller.CMBControllerServlet.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "d95f4013e0fe96a66483ea6adc36fb2244b3968a", "Url": "https://api.github.com/repos/Comcast/cmb", "Date": "2014-03-10T20:57:55Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSpecializedResourceDataClass()) != null) { metaDataManager.setProperty(\"virtualModelClassName\", getSpecializedResourceDataClass().getName(), file, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7673/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.fml.rm.VirtualModelResourceImpl.java", "BodyUseAPI": [], "Fixed commit": "59e7d46f96baac5b01e7b9a091be0a54391bb908", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2017-11-28T20:31:18Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pumpLiquid()) { powercrystals.minefactoryreloaded.core.MFRUtil.pumpLiquid(getTank(), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4276/buggy-version/src.powercrystals.minefactoryreloaded.core.TileEntityFactoryPowered.java", "BodyUseAPI": [], "Fixed commit": "faa259e3c5d0d4182f64df9161943f9c3726d49c", "Url": "https://api.github.com/repos/powercrystals/MineFactoryReloaded", "Date": "2013-01-06T00:45:13Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cause instanceof javax.ws.rs.WebApplicationException) { return ((javax.ws.rs.WebApplicationException) (cause)).getResponse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4333/buggy-version/modules.wem-admin.src.main.java.com.enonic.wem.admin.rest.exception.DefaultExceptionMapper.java", "BodyUseAPI": [], "Fixed commit": "b63584d0a404740107a80be5480505a08bba6225", "Url": "https://api.github.com/repos/enonic/wem-ce", "Date": "2014-06-23T05:47:50Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDaoService().getEntityById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entity instanceof scrum.server.project.Project) { scrum.server.project.Project project = ((scrum.server.project.Project) (entity)); java.util.Set<scrum.server.admin.User> users = project.getCurrentProjectUsers(); for (scrum.server.admin.User u : users) { u.setCurrentProject(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/897/buggy-version/src.main.java.scrum.server.ScrumServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "02ccfba0cf24894d0e61a75185d7630568def687", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2013-12-19T16:32:07Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { slaves.add(newSlave); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5975/buggy-version/src.main.java.refinedstorage.tile.controller.TileController.java", "BodyUseAPI": [], "Fixed commit": "1287fab805d6a241a36f1c6fb03f3b77a17daa5d", "Url": "https://api.github.com/repos/raoulvdberge/refinedstorage", "Date": "2016-06-24T17:11:11Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cjra.battleships.ShipDetails.getShipForLength(selection.size())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(availableShips.contains(shipOffer))) { return ShipType.NONE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4415/buggy-version/src.com.cjra.battleships.DeploymentModel.java", "BodyUseAPI": [], "Fixed commit": "93520247d173bec1233353a4ba93eefd216658ec", "Url": "https://api.github.com/repos/charlesarmitage/battleship-game", "Date": "2013-09-03T21:37:21Z"},
{"Line": "=>1089", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mavenIgnoreTestFailure) { return (testErrorCount) > 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4640/buggy-version/src.main.java.com.jayway.maven.plugins.android.AbstractInstrumentationMojo.java", "BodyUseAPI": [], "Fixed commit": "aed04dc6a1820e08643d85becd78efde77c0eed2", "Url": "https://api.github.com/repos/OlivierGonthier/maven-android-plugin", "Date": "2013-02-27T14:47:03Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lstLexicon.getModel().getSize()) < (core.getWordCollection().getWordCount())) { populateLexicon(); lstLexicon.setSelectedIndex(0); populateProperties(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2219/buggy-version/src.PolyGlot.Screens.ScrLexicon.java", "BodyUseAPI": ["javax.swing.JList.setSelectedIndex(int)"], "Fixed commit": "061d6120cad19284deefd72e00a1f133f7ab1f5b", "Url": "https://api.github.com/repos/DraqueT/PolyGlot", "Date": "2015-07-21T15:17:56Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(path)) { return org.mvnsearch.zookeeper.shell.commands.ZkShellOperationCommands.currentPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6574/buggy-version/src.main.java.org.mvnsearch.zookeeper.shell.commands.ZkShellOperationCommands.java", "BodyUseAPI": [], "Fixed commit": "c50d29f2b633cbf7987c88a6a668c800328b2e16", "Url": "https://api.github.com/repos/linux-china/zookeeper-shell", "Date": "2013-12-23T06:53:40Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPlayerExact(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (from == null) { player.sendMessage(net.edgecraft.edgecore.EdgeCoreAPI.languageAPI().getColoredMessage(user.getLanguage(), \"notfound\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3523/buggy-version/src.net.edgecraft.edgecore.mod.TeleportCommand.java", "BodyUseAPI": [], "Fixed commit": "2a0b22f1274c491a9c9d8b5ec7c896cb16c0ad3c", "Url": "https://api.github.com/repos/EdgeCraft/EdgeCore", "Date": "2014-03-04T14:42:31Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DEBUG) { java.lang.System.out.println((((thisNode.getDistanceFrom(node)) + \" \") + distance)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1092/buggy-version/server.src.main.java.com.hackbridge.viral.LocationState.java", "BodyUseAPI": [], "Fixed commit": "ca31cd2d62d2b2e38a3326bb8467661d043d6fcc", "Url": "https://api.github.com/repos/PetarV-/viral", "Date": "2016-01-31T00:17:29Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == j) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1092/buggy-version/server.src.main.java.com.hackbridge.viral.LocationState.java", "BodyUseAPI": [], "Fixed commit": "ca31cd2d62d2b2e38a3326bb8467661d043d6fcc", "Url": "https://api.github.com/repos/PetarV-/viral", "Date": "2016-01-31T00:17:29Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, com.hackbridge.viral.Node>.get(int)", "java.util.HashMap<java.lang.Integer, com.hackbridge.viral.Node>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ni == null) || (nj == null)) { java.lang.System.err.println((((\"Tried to active null nodes \" + i) + \" \") + j)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1092/buggy-version/server.src.main.java.com.hackbridge.viral.LocationState.java", "BodyUseAPI": [], "Fixed commit": "ca31cd2d62d2b2e38a3326bb8467661d043d6fcc", "Url": "https://api.github.com/repos/PetarV-/viral", "Date": "2016-01-31T00:17:29Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tabs.getTabCount()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1223/buggy-version/src.texteditor.Tabs.java", "BodyUseAPI": [], "Fixed commit": "a88525421c4dddf567d83de4a8601db3c4c5efcf", "Url": "https://api.github.com/repos/chrisstopher/TextEditor", "Date": "2013-11-06T23:37:51Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_points.size()) > 0) this.setExtent(org.meteoinfo.global.MIMath.getPointsExtent(_points));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3617/buggy-version/src.org.meteoinfo.shape.PolygonShape.java", "BodyUseAPI": ["org.meteoinfo.shape.PolygonShape.setExtent(org.meteoinfo.global.MIMath.getPointsExtent(_points))", "org.meteoinfo.global.MIMath.getPointsExtent(java.util.List<? extends org.meteoinfo.global.PointD>)"], "Fixed commit": "d75cd6bbbee08b261af00cbfb9ccb3e8ef85f7e8", "Url": "https://api.github.com/repos/meteoinfo/MeteoInfoLib", "Date": "2017-08-30T13:30:25Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.seafile.seadroid2.ui.activity.BrowserActivity.handleEncryptedRepo(com.seafile.seadroid2.data.SeafRepo,com.seafile.seadroid2.ui.dialog.TaskDialog.TaskDialogListener)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!continueProcess) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3432/buggy-version/app.src.main.java.com.seafile.seadroid2.ui.fragment.ActivitiesFragment.java", "BodyUseAPI": [], "Fixed commit": "6b3b308588667626fb23b34eb72659a1da98aa70", "Url": "https://api.github.com/repos/Logan676/seadroid", "Date": "2016-08-06T03:12:30Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.gtn.dimensionalpocket.common.core.pocket.PocketRegistry.getPocket(new net.gtn.dimensionalpocket.common.core.utils.CoordSet(x, y, z).asChunkCoords())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pocket.getBlockDim()) != (net.gtn.dimensionalpocket.common.lib.Reference.DIMENSION_ID)) { player.setSneaking(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1901/buggy-version/java.net.gtn.dimensionalpocket.common.block.BlockDimensionalPocketFrame.java", "BodyUseAPI": [], "Fixed commit": "040e3e04de28e9dd194d0b413ca7d6eaf07fc8fc", "Url": "https://api.github.com/repos/NPException42/Modjam-4", "Date": "2014-07-07T17:45:02Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNumeric(authorId)) commentMeta.put(\"author-id\", authorId); else commentMeta.put(\"author-id\", \"-1\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/169/buggy-version/web.StatisticReader.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "0401b858c33098c4d80bb3a8cb1579d96abd6436", "Url": "https://api.github.com/repos/joausaga/ideascalecrawler", "Date": "2014-03-09T17:44:57Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNumeric(authorId)) voteMeta.put(\"author-id\", authorId); else voteMeta.put(\"author-id\", \"-1\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/169/buggy-version/web.StatisticReader.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "0401b858c33098c4d80bb3a8cb1579d96abd6436", "Url": "https://api.github.com/repos/joausaga/ideascalecrawler", "Date": "2014-03-09T17:44:57Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ColumnNumber) == 0) { ColumnNumber = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/607/buggy-version/src.VC.Scanner.Scanner.java", "BodyUseAPI": [], "Fixed commit": "f1824a72ed2a9ab46dd899e100ad959072f36283", "Url": "https://api.github.com/repos/NielsAlston/VC", "Date": "2017-03-17T06:11:55Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((taskToFind.getDescription()) != null) && (!(taskToFind.getDescription().isEmpty()))) { if (taskToFind.getDescription().equalsIgnoreCase(\"all\")) { execute(Command.COMMAND_TYPE.HOME, null, null); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/281/buggy-version/src.Logic.Logic.java", "BodyUseAPI": ["taskToFind.getDescription().equalsIgnoreCase(java.lang.String)", "ScheduleHacks.Task.getDescription()"], "Fixed commit": "0b846a19ed5cfd79a75ab44c5fc6daac8c24eec7", "Url": "https://api.github.com/repos/cs2103jan2016-t09-2j/main", "Date": "2016-03-28T18:10:54Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["taskToFind.getDescription().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((descToFind.length()) == 1) { if (taskToCheck.getDescription().toLowerCase().startsWith(descToFind)) { destinationList.add(taskToCheck); } }else { if (taskToCheck.getDescription().toLowerCase().contains(descToFind)) { destinationList.add(taskToCheck); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/281/buggy-version/src.Logic.search_Snigdha.java", "BodyUseAPI": ["taskToCheck.getDescription().toLowerCase().contains(java.lang.String)", "taskToCheck.getDescription().toLowerCase().startsWith(java.lang.String)"], "Fixed commit": "0b846a19ed5cfd79a75ab44c5fc6daac8c24eec7", "Url": "https://api.github.com/repos/cs2103jan2016-t09-2j/main", "Date": "2016-03-28T18:10:54Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (expectedException != (Scenario.None.class)) { notifier.fireTestFailure(new org.uniknow.agiledev.junitbdd.Failure(description, new java.lang.Exception((\"Expected exception of type \" + expectedException)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2569/buggy-version/junitBdd.src.main.java.org.uniknow.agiledev.junitbdd.BDDRunner.java", "BodyUseAPI": ["org.uniknow.agiledev.junitbdd.RunNotifier.fireTestFailure(org.uniknow.agiledev.junitbdd.Failure)"], "Fixed commit": "ef0cac0908893469916d5085693d403f95bfd8d4", "Url": "https://api.github.com/repos/UniKnow/AgileDev", "Date": "2014-09-23T17:51:38Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!worldChange) spawnPlayer(spectator);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4778/buggy-version/SpectatorPlus.src.com.pgcraft.spectatorplus.SpectatorPlus.java", "BodyUseAPI": [], "Fixed commit": "65bfd4e03b0359cf26ac4ac137c4f8cb1f4a4097", "Url": "https://api.github.com/repos/pgmann/SpectatorPlus", "Date": "2014-11-08T19:08:00Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nutz.dao.impl.entity.info._Infos.create(java.lang.Class,java.lang.reflect.Field)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((info.annName) != null) if (!(org.nutz.lang.Mirror.me(field.getType()).isStringLike())) throw org.nutz.lang.Lang.makeThrow(org.nutz.dao.DaoException.class, \"Field(%s) annotation @Name , but not String type!!\", field);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7809/buggy-version/src.org.nutz.dao.impl.entity.info._Infos.java", "BodyUseAPI": [], "Fixed commit": "b88dc04a3723bae0333c47b5966f593771455852", "Url": "https://api.github.com/repos/WenWu/nutz", "Date": "2012-08-18T09:01:46Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nutz.dao.impl.entity.info._Infos.create(java.lang.Class,java.lang.reflect.Field)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((info.annId) != null) { if (!(org.nutz.lang.Mirror.me(field.getType()).isIntLike())) throw org.nutz.lang.Lang.makeThrow(org.nutz.dao.DaoException.class, \"Field(%s) annotation @Id , but not Number type!!\", field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7809/buggy-version/src.org.nutz.dao.impl.entity.info._Infos.java", "BodyUseAPI": [], "Fixed commit": "b88dc04a3723bae0333c47b5966f593771455852", "Url": "https://api.github.com/repos/WenWu/nutz", "Date": "2012-08-18T09:01:46Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((entity.getTask()) != null) && ((entity.getTask().getCustomData()) != null)) { entity.getTask().getCustomData().setTask(entity.getTask()); entity.getTask().getCustomData().setTaskId(entity.getTask().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7529/buggy-version/src.main.java.com.livingprogress.mentorme.services.springdata.MenteeMentorTaskServiceImpl.java", "BodyUseAPI": ["com.livingprogress.mentorme.services.springdata.MenteeMentorTask.getTask()", "com.livingprogress.mentorme.services.springdata.MenteeMentorTask.getTask()", "entity.getTask().getId()", "com.livingprogress.mentorme.services.springdata.MenteeMentorTask.getTask()", "com.livingprogress.mentorme.services.springdata.MenteeMentorTask.getTask()", "entity.getTask().getCustomData().setTaskId(entity.getTask().getId())", "entity.getTask().getCustomData()", "entity.getTask().getCustomData().setTask(entity.getTask())", "entity.getTask().getCustomData()"], "Fixed commit": "279cbf57adccba12e73a7b8d15ead46952fafcc2", "Url": "https://api.github.com/repos/kinfkong/HPE-LP-MentorMe-Services", "Date": "2017-01-10T09:39:11Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (category.equals(\"All Categories\")) { for (plus1s.app.model.Item i : allItem) { output.add(i.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8922/buggy-version/App.app.src.main.java.plus1s.app.controllers.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "7ef9c8c53d62d16b6fde5440d4fe2b7d72d42b1b", "Url": "https://api.github.com/repos/IvoryCandy/Plus1s", "Date": "2017-07-06T21:34:14Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.abiquo.server.core.infrastructure.InfrastructureRep.findById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (datacenter == null) { addNotFoundErrors(APIError.DATASTORE_NON_EXISTENT); flushErrors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8348/buggy-version/api.src.main.java.com.abiquo.api.services.DatacenterService.java", "BodyUseAPI": [], "Fixed commit": "89062fdb7f2f7e59b32ba0c96c79d2ec57f84d84", "Url": "https://api.github.com/repos/abiquo/abiquo", "Date": "2011-08-01T12:49:48Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (avgAskPrice == 0) { int mostRecentMinute = currentGame.mostRecentInfo; float pricePerMinute = currentAskPrice / mostRecentMinute; double avgMinRemaining = (8.0 - mostRecentMinute) / 2; estNextPrices[aucID] = ((float) (pricePerMinute * (mostRecentMinute + avgMinRemaining))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5891/buggy-version/agent.hotel.HotelHistory.java", "BodyUseAPI": [], "Fixed commit": "83348a421fcac4e0d8b16bb621a3c4d7f9836f57", "Url": "https://api.github.com/repos/aelred/TheGreaterFool", "Date": "2014-12-11T20:29:40Z"},
{"Line": "=>829", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params.length) < 4) { main.Application.targetOS.println(\"Nincs eleg parameter!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8047/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "534b8ffde5824c13ada8b9a5d9cff4d53900b938", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T03:04:11Z"},
{"Line": "=>850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSimultan) { main.Application.simultanStations.put(params[2], new main.SimultanStation(station.railway, station.color)); main.Application.targetOS.println(\"Sikerult! Az allomason mostmar felszalhatnak az utasok.\"); }else { main.Application.stations.put(params[2], new main.Station(station.railway, station.color)); main.Application.targetOS.println(\"Sikerult! Az allomason mostmar nem szallhatnak fel az utasok.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8047/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "534b8ffde5824c13ada8b9a5d9cff4d53900b938", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T03:04:11Z"},
{"Line": "=>790", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params.length) < 4) { main.Application.targetOS.println(\"Nincs eleg parameter!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8047/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "534b8ffde5824c13ada8b9a5d9cff4d53900b938", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T03:04:11Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (station == null) { main.Application.targetOS.println(\"Sikertelen. A megadott allomas nem letezik.\"); return; }else main.Application.simultanStations.remove(params[2]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8047/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "534b8ffde5824c13ada8b9a5d9cff4d53900b938", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T03:04:11Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, main.Switch>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (sw == null) { main.Application.targetOS.println(\"Sikertelen. A megadott valto nem letezik.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8047/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "534b8ffde5824c13ada8b9a5d9cff4d53900b938", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T03:04:11Z"},
{"Line": "=>842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, main.Station>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (station == null) station = main.Application.simultanStations.get(params[2]); else main.Application.stations.remove(params[2]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8047/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "534b8ffde5824c13ada8b9a5d9cff4d53900b938", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T03:04:11Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params[3].equalsIgnoreCase(\"true\")) || (params[3].equalsIgnoreCase(\"false\"))) isSimultan = java.lang.Boolean.parseBoolean(params[3]); else { main.Application.targetOS.println(\"A negyedik parameter erteke hibas.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8047/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Fixed commit": "534b8ffde5824c13ada8b9a5d9cff4d53900b938", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T03:04:11Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.Switch.getThatNeighbour()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((railList.size()) > where) switchTo = railList.get(where);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8047/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": ["java.util.List<main.Railway>.get(int)"], "Fixed commit": "534b8ffde5824c13ada8b9a5d9cff4d53900b938", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T03:04:11Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (switchTo != null) { sw.switchTo(switchTo); main.Application.targetOS.println(\"Sikerult!\"); }else { main.Application.targetOS.println(\"Sikertelen. A valto nem allithato a kert helyzetbe, mert nincs ilyen helyzet.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8047/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": ["main.Switch.switchTo(main.Railway)"], "Fixed commit": "534b8ffde5824c13ada8b9a5d9cff4d53900b938", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T03:04:11Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(spii.getSupplierInitials())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/664/buggy-version/dps-web-service.src.main.java.com.dps.web.service.controller.ProductController.java", "BodyUseAPI": [], "Fixed commit": "5ee0a2c0f844c0f32acd8d20eb825fe0a8375606", "Url": "https://api.github.com/repos/ashanbhag12/dps", "Date": "2016-08-27T16:20:25Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((battleHealth[0]) < 0) { battleHealth[0] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7798/buggy-version/tactics.src.com.slauson.tactics.utils.BattleUtils.java", "BodyUseAPI": [], "Fixed commit": "32eb463a2b3fcd4aca7911915e60fd95d91c18b2", "Url": "https://api.github.com/repos/slauson/Tactics", "Date": "2014-03-21T03:53:07Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((battleHealth[1]) < 0) { battleHealth[1] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7798/buggy-version/tactics.src.com.slauson.tactics.utils.BattleUtils.java", "BodyUseAPI": [], "Fixed commit": "32eb463a2b3fcd4aca7911915e60fd95d91c18b2", "Url": "https://api.github.com/repos/slauson/Tactics", "Date": "2014-03-21T03:53:07Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kitfox.svg.SVGElement.getStyleAbsolute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((visibility != null) && (\"hidden\".equals(visibility.getStringValue()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5077/buggy-version/src.com.t_oster.visicut.model.graphicelements.svgsupport.SVGImporter.java", "BodyUseAPI": [], "Fixed commit": "a149cf11be2ee2a34dd103cff099f7d0141ba4cf", "Url": "https://api.github.com/repos/t-oster/VisiCut", "Date": "2012-07-28T18:34:24Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kitfox.svg.SVGElement.getStyleAbsolute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((display != null) && (\"none\".equals(display.getStringValue()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5077/buggy-version/src.com.t_oster.visicut.model.graphicelements.svgsupport.SVGImporter.java", "BodyUseAPI": [], "Fixed commit": "a149cf11be2ee2a34dd103cff099f7d0141ba4cf", "Url": "https://api.github.com/repos/t-oster/VisiCut", "Date": "2012-07-28T18:34:24Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<android.support.v4.app.Fragment>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (f instanceof net.osmand.plus.download.LocalIndexesFragment) { if (!(f.isDetached())) { ((net.osmand.plus.download.LocalIndexesFragment) (f)).reloadData(); } }else if (f instanceof net.osmand.plus.download.DownloadIndexFragment) { if (!(f.isDetached())) { net.osmand.plus.download.DownloadIndexAdapter adapter = ((net.osmand.plus.download.DownloadIndexAdapter) (((net.osmand.plus.download.DownloadIndexFragment) (f)).getExpandableListAdapter())); if (adapter != null) { adapter.setLoadedFiles(getIndexActivatedFileNames(), getIndexFileNames()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/817/buggy-version/OsmAnd.src.net.osmand.plus.download.DownloadActivity.java", "BodyUseAPI": ["android.support.v4.app.Fragment.isDetached()", "android.support.v4.app.Fragment.isDetached()"], "Fixed commit": "5073e829184eb15c471f1b8d9b11d41463ce5818", "Url": "https://api.github.com/repos/poretsky/Osmand", "Date": "2014-11-17T11:27:44Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isBuilt())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6174/buggy-version/src.view.CustosMainFrame.java", "BodyUseAPI": [], "Fixed commit": "20eecfa8d8e0020e3262027b8b71f29e0953b874", "Url": "https://api.github.com/repos/nhochberger/Custos", "Date": "2015-07-09T14:33:59Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((termsView.getVisibility()) == (android.view.View.VISIBLE)) { termsView.setVisibility(View.GONE); }else { termsView.setVisibility(View.VISIBLE); termsView.setText(sb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5601/buggy-version/app.src.main.java.com.ucarry.developer.android.activity.LegalListActivity.java", "BodyUseAPI": ["android.widget.TextView.setVisibility(View.GONE)", "android.widget.TextView.setVisibility(View.VISIBLE)", "android.widget.TextView.setText(java.lang.StringBuilder)"], "Fixed commit": "717fe6974daf528e5eb2ccaad59e43557d956e37", "Url": "https://api.github.com/repos/amoebiq/Karrier-Bay", "Date": "2017-07-11T17:47:09Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((privacyView.getVisibility()) == (android.view.View.VISIBLE)) { privacyView.setVisibility(View.GONE); }else { privacyView.setVisibility(View.VISIBLE); privacyView.setText(sb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5601/buggy-version/app.src.main.java.com.ucarry.developer.android.activity.LegalListActivity.java", "BodyUseAPI": ["android.widget.TextView.setVisibility(View.GONE)", "android.widget.TextView.setText(java.lang.StringBuilder)", "android.widget.TextView.setVisibility(View.VISIBLE)"], "Fixed commit": "717fe6974daf528e5eb2ccaad59e43557d956e37", "Url": "https://api.github.com/repos/amoebiq/Karrier-Bay", "Date": "2017-07-11T17:47:09Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tree == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7068/buggy-version/src.main.java.net.dmulloy2.swornbackup.BackupHandler.java", "BodyUseAPI": [], "Fixed commit": "b5c0fc907efecc64c3089c696b4b866da10dea93", "Url": "https://api.github.com/repos/dmulloy2/SwornBackup", "Date": "2015-06-10T19:11:45Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(folder.isDirectory())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7068/buggy-version/src.main.java.net.dmulloy2.swornbackup.BackupHandler.java", "BodyUseAPI": [], "Fixed commit": "b5c0fc907efecc64c3089c696b4b866da10dea93", "Url": "https://api.github.com/repos/dmulloy2/SwornBackup", "Date": "2015-06-10T19:11:45Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(xid)) response.addContextualMessage(\"xid\", \"validate.required\"); else if (com.serotonin.validation.StringValidation.isLengthGreaterThan(xid, 50)) response.addMessage(\"xid\", new com.serotonin.m2m2.i18n.TranslatableMessage(\"validate.notLongerThan\", 50)); else if (!(ReportDao.instance.isXidUnique(xid, id))) response.addContextualMessage(\"xid\", \"validate.xidUsed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3406/buggy-version/Reports.src.com.serotonin.m2m2.reports.web.ReportsDwr.java", "BodyUseAPI": ["com.serotonin.validation.StringValidation.isLengthGreaterThan(java.lang.String,int)", "ReportDao.instance.isXidUnique(java.lang.String,int)"], "Fixed commit": "6125141ac97b08e7fbaa2e7cfc33a1ba93511ac8", "Url": "https://api.github.com/repos/infiniteautomation/ma-modules-public", "Date": "2016-05-24T20:06:45Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (templateDirectory.exists()) { loader = new com.github.jknack.handlebars.io.CompositeTemplateLoader(new com.github.jknack.handlebars.io.FileTemplateLoader(templateDirectory), new com.github.jknack.handlebars.io.ClassPathTemplateLoader(\"/templates\")); }else { loader = new com.github.jknack.handlebars.io.ClassPathTemplateLoader(\"/templates\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4566/buggy-version/magnolia-handlebars.src.main.java.com.magnoliales.handlebars.renderer.HandlebarsRenderer.java", "BodyUseAPI": [], "Fixed commit": "a7a00c01b158cac546de96a0946d16b2ce7f414d", "Url": "https://api.github.com/repos/magnoliales/magnolia-handlebars", "Date": "2014-12-11T14:51:31Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arguments.isEmpty()) throw new java.lang.IllegalArgumentException(\"Must specify a damage value.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/756/buggy-version/src.main.java.org.shininet.bukkit.itemrenamer.configuration.DamageValues.java", "BodyUseAPI": [], "Fixed commit": "1f6ad27adfe2808324249953ca82dcb4544dd2bf", "Url": "https://api.github.com/repos/meiskam/ItemRenamer", "Date": "2013-02-16T22:39:31Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collection == null) { return com.palantir.atlasdb.keyvalue.cassandra.ThriftObjectSizeUtils.getNullSize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/846/buggy-version/atlasdb-cassandra.src.main.java.com.palantir.atlasdb.keyvalue.cassandra.ThriftObjectSizeUtils.java", "BodyUseAPI": [], "Fixed commit": "dd73344534b8a10f3f45076ea36240e4498e3c84", "Url": "https://api.github.com/repos/palantir/atlasdb", "Date": "2017-11-09T15:04:20Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((main.ToolBar) (main.VisualizationGenerator.widgets.get(parent))).getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((toolbarParent != null) && ((toolbarParent.getLayout()) != null)) { toolbarParent.setLayout(new org.eclipse.swt.layout.RowLayout(org.eclipse.swt.SWT.HORIZONTAL)); item = new main.Text(toolbarParent, org.eclipse.swt.SWT.BORDER); }else item = new main.Text(((main.ToolBar) (main.VisualizationGenerator.widgets.get(parent))), org.eclipse.swt.SWT.BORDER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/309/buggy-version/Stage3.SWTVisualization.src.main.VisualizationGenerator.java", "BodyUseAPI": ["main.Composite.setLayout(org.eclipse.swt.layout.RowLayout)"], "Fixed commit": "cdeec1a8068b6e7cad6b9b91dee397a6afdc780c", "Url": "https://api.github.com/repos/mbigigns/SWTGuitar", "Date": "2012-03-24T19:09:25Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.realm.internal.Collection.nativeFirstRow(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rowPtr != 0) { return table.getUncheckedRowByPointer(rowPtr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5687/buggy-version/realm.realm-library.src.main.java.io.realm.internal.Collection.java", "BodyUseAPI": ["io.realm.internal.Table.getUncheckedRowByPointer(long)"], "Fixed commit": "f1522f91813273c4c69b85ac2aa2d54c041a19d3", "Url": "https://api.github.com/repos/realm/realm-java", "Date": "2017-01-25T10:24:25Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trie.Trie.hasMatch(allWords, ptr, prefix)) { completeList.addAll(trie.Trie.recCompList(allWords, ptr, prefix)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4672/buggy-version/Trie.java", "BodyUseAPI": ["trie.Trie.recCompList(java.lang.String[],trie.TrieNode,java.lang.String)", "java.util.ArrayList<trie.TrieNode>.addAll(java.util.ArrayList<trie.TrieNode>)"], "Fixed commit": "32c8f503726463fefbd22adbd267f5c36980dacf", "Url": "https://api.github.com/repos/AaronMagras/CS112Trie", "Date": "2017-11-03T17:21:36Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trie.Trie.hasMatch(allWords, ptr, compare)) { completeList.addAll(trie.Trie.recCompList(allWords, ptr, compare)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4672/buggy-version/Trie.java", "BodyUseAPI": ["java.util.ArrayList<trie.TrieNode>.addAll(java.util.ArrayList<trie.TrieNode>)", "trie.Trie.recCompList(java.lang.String[],trie.TrieNode,java.lang.String)"], "Fixed commit": "32c8f503726463fefbd22adbd267f5c36980dacf", "Url": "https://api.github.com/repos/AaronMagras/CS112Trie", "Date": "2017-11-03T17:21:36Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"FLOAT\".equals(current.getJava_type())) { result.add(new eu.cloudtm.wpm.logService.remote.events.PublishAttribute<java.lang.Float>(rt, current.getResource_index(), current.getShort_name(), java.lang.Float.parseFloat(current.getValue()))); }else if (\"LONG\".equals(current.getJava_type())) { result.add(new eu.cloudtm.wpm.logService.remote.events.PublishAttribute<java.lang.Long>(rt, current.getResource_index(), current.getShort_name(), java.lang.Long.parseLong(current.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1508/buggy-version/src.eu.cloudtm.wpm.logService.remote.observables.StatsSubscriptionEntry.java", "BodyUseAPI": ["eu.cloudtm.wpm.parser.MeasurementAttribute.getResource_index()", "java.lang.Float.parseFloat(current.getValue())", "eu.cloudtm.wpm.parser.MeasurementAttribute.getValue()", "java.util.List<eu.cloudtm.wpm.logService.remote.events.PublishAttribute>.add(eu.cloudtm.wpm.logService.remote.events.PublishAttribute<java.lang.Float>)", "eu.cloudtm.wpm.parser.MeasurementAttribute.getShort_name()", "eu.cloudtm.wpm.parser.MeasurementAttribute.getJava_type()", "java.util.List<eu.cloudtm.wpm.logService.remote.events.PublishAttribute>.add(eu.cloudtm.wpm.logService.remote.events.PublishAttribute<java.lang.Long>)", "java.lang.Long.parseLong(current.getValue())", "java.lang.String.equals(current.getJava_type())", "eu.cloudtm.wpm.parser.MeasurementAttribute.getShort_name()", "eu.cloudtm.wpm.parser.MeasurementAttribute.getValue()", "eu.cloudtm.wpm.parser.MeasurementAttribute.getResource_index()"], "Fixed commit": "19e57b6978682f1ed4e5fe3841a0a654d08a9f21", "Url": "https://api.github.com/repos/cloudtm/wpm", "Date": "2013-01-30T13:25:03Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((thread) != null) { if (thread.isAlive()) { thread.interrupt(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8172/buggy-version/app.src.main.java.de.appphil.categories.activities.game.turnbased.TGameActivity.java", "BodyUseAPI": [], "Fixed commit": "57faa5f48633564d7c11be4c5d0e21d73eb3a592", "Url": "https://api.github.com/repos/PhilippDE/Categories", "Date": "2017-02-12T10:33:11Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(node1edges2.isEmpty())) { java.util.List<edu.cmu.tetrad.graph.Edge> edges12 = new java.util.ArrayList(node1edges2); for (edu.cmu.tetrad.graph.Edge thisedge : edges12) { if (thisedge.isDirected()) node1edges2.remove(thisedge); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2242/buggy-version/tetrad-lib.src.main.java.edu.cmu.tetrad.simulation.Vicinity4.java", "BodyUseAPI": ["java.util.Set<edu.cmu.tetrad.graph.Edge>.remove(edu.cmu.tetrad.graph.Edge)"], "Fixed commit": "fc0f337baf8171a2c6cb26c30079b78ea3f26ef2", "Url": "https://api.github.com/repos/ekummerfeld/gDistance", "Date": "2016-10-11T04:53:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.String>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(pair.getKey().endsWith(\"_LC\"))) { inverted.put(pair.getValue(), pair.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8622/buggy-version/solr-search.src.main.java.edu.unc.lib.dl.search.solr.util.AbstractSettings.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "9f13e171a00a114c01030b744a1417c8c34a95f9", "Url": "https://api.github.com/repos/UNC-Libraries/Carolina-Digital-Repository", "Date": "2016-08-04T19:36:45Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ans.getAnswer_text().replace(\"dtmfKey://\", \"\").equalsIgnoreCase(answer_input)) { answer = ans; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2235/buggy-version/dialoghandler.src.main.java.com.almende.dialog.model.Question.java", "BodyUseAPI": [], "Fixed commit": "a0441b266fdaca06f354884c49e5ad5593c131e2", "Url": "https://api.github.com/repos/almende/dialog", "Date": "2015-06-16T13:59:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.engstuff.coloriphornia.fragments.FragmentColorBox.getInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != info) { info.setImageResource((box.isWhiteText() ? R.drawable.ic_info_white : R.drawable.ic_info_black)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2616/buggy-version/app.src.main.java.com.engstuff.coloriphornia.helpers.AppHelper.java", "BodyUseAPI": ["android.widget.ImageView.setImageResource((box.isWhiteText() ? R.drawable.ic_info_white : R.drawable.ic_info_black))"], "Fixed commit": "ded2ac3e098b6d283bcf27d795da478bbba58131", "Url": "https://api.github.com/repos/ruan65/Colorifornia", "Date": "2015-04-09T07:34:26Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (currentColorBox)) com.engstuff.coloriphornia.helpers.AppHelper.setInfoIcon(currentColorBox);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2616/buggy-version/app.src.main.java.com.engstuff.coloriphornia.activities.BaseColorActivity.java", "BodyUseAPI": [], "Fixed commit": "ded2ac3e098b6d283bcf27d795da478bbba58131", "Url": "https://api.github.com/repos/ruan65/Colorifornia", "Date": "2015-04-09T07:34:26Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.getTimeHorizon().equals(TimeHorizon.FOREVER)) { cal.setTimeInMillis(java.lang.System.currentTimeMillis()); return cal.getTime(); }else { return StreamAggregator.dateFormatter.parse(com.amazonaws.services.kinesis.aggregators.StreamAggregatorUtils.extractDateFromMultivalue(this.getTimeHorizon(), this.getDateValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/34/buggy-version/src.com.amazonaws.services.kinesis.aggregators.cache.UpdateKey.java", "BodyUseAPI": [], "Fixed commit": "e576691c4711c6f917372a32003dce0837549302", "Url": "https://api.github.com/repos/workanandr/amazon-kinesis-aggregators", "Date": "2015-09-17T13:28:41Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((marker.getTitle()) == null) && ((marker.getSnippet()) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3360/buggy-version/app.src.main.java.ru.nbakaev.cityguide.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "b356ba9b785045ccdd5f645f886e522949c0f542", "Url": "https://api.github.com/repos/NBakaev/cityguide", "Date": "2016-12-09T07:07:14Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state.getCurrentNode().getTile().getGold()) > 0) { state.pickUpGold(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1377/buggy-version/src.student.Explorer.java", "BodyUseAPI": ["student.EscapeState.pickUpGold()"], "Fixed commit": "6407e47fd739417e68b3fa5497b6d2e7dd285324", "Url": "https://api.github.com/repos/BBK-PiJ-2015-89/cw-temple", "Date": "2016-04-18T09:49:00Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.JSONObject.parseObject(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (t != null) { wm.setMedia_id(t.getMedia_id()); com.guhanjie.weixin.media.MediaKit.LOGGER.info(\"Success to post media:[{}].\", t.getMedia_id()); }else { com.guhanjie.weixin.media.MediaKit.LOGGER.error(\"Failed to post media.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4234/buggy-version/src.main.java.com.guhanjie.weixin.media.MediaKit.java", "BodyUseAPI": ["com.guhanjie.weixin.model.WeixinMedia.getMedia_id()", "org.slf4j.Logger.info(java.lang.String,t.getMedia_id())", "com.guhanjie.weixin.model.WeixinMedia.getMedia_id()", "com.guhanjie.weixin.model.WeixinMedia.setMedia_id(t.getMedia_id())"], "Fixed commit": "b73329d352cfb22018d9780f51a6f888cd654366", "Url": "https://api.github.com/repos/guhanjie/weixin-boot", "Date": "2016-09-04T15:55:41Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectedLevel) != null) { android.content.Intent startLevelIntent = new android.content.Intent(THIS, com.beep_boop.Beep.startScreen.StartLevelActivity.class); startLevelIntent.putExtra(StartLevelActivity.EXTRA_LEVEL_KEY, mSelectedLevel.levelKey); startActivity(startLevelIntent); }else { android.content.Intent randomIntent = new android.content.Intent(THIS, com.beep_boop.Beep.random.RandomActivity.class); randomIntent.putExtra(RandomActivity.EXTRA_FROM_WORD, mFromWord); randomIntent.putExtra(RandomActivity.EXTRA_TO_WORD, mToWord); startActivity(randomIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5591/buggy-version/Beep.src.com.beep_boop.Beep.game.PlayScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "1edbc4644c85cdb9b82b47ec290269030659f1b8", "Url": "https://api.github.com/repos/Dig-Doug/EC327-Project", "Date": "2014-12-09T20:15:55Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files = org.parabot.core.Directories.getScreenshotDir().listFiles()) != null) { for (java.io.File f : files) { if (f.getAbsoluteFile().getName().contains(randString)) { duplicate = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6517/buggy-version/src.main.java.org.parabot.core.ui.BotUI.java", "BodyUseAPI": [], "Fixed commit": "5b79000bf5d20d9e9b04957238cfa61dcf9ed662", "Url": "https://api.github.com/repos/Parabot/Parabot", "Date": "2016-06-11T23:54:41Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == (-1)) { throw new java.lang.Exception(jsonError(\"JSON STRING ERROR\", \"no closing \\\" before end of input\", buffer)); }else { throw new java.lang.Exception(jsonError(\"JSON STRING ERROR\", (\"invalid escape character \\\\\" + ((char) (c))), buffer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6632/buggy-version/src.edu.grinnell.callaway.JSONParser.java", "BodyUseAPI": [], "Fixed commit": "2a7582028bb79357aff4c8a2e714b29337abee2d", "Url": "https://api.github.com/repos/mulias/csc207-JSONProject", "Date": "2014-04-25T16:19:06Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sismics.docs.core.dao.jpa.ShareDao.getShare(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (share == null) { throw new com.sismics.rest.exception.ClientException(\"ShareNotFound\", java.text.MessageFormat.format(\"Share not found: {0}\", id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2617/buggy-version/docs-web.src.main.java.com.sismics.docs.rest.resource.ShareResource.java", "BodyUseAPI": [], "Fixed commit": "745766a2c34ae2cdd3d01c463e87011d23d169d3", "Url": "https://api.github.com/repos/sismics/docs", "Date": "2014-12-01T00:21:38Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (semaphore.tryAcquire()) { sendMessagePoolExecutor.submit(new java.lang.Runnable() { @java.lang.Override public void run() { try { defaultMQProducer.send(msg, new com.alibaba.rocketmq.client.producer.concurrent.SendMessageCallback(com.alibaba.rocketmq.client.producer.concurrent.MultiThreadMQProducer.this, sendCallback, msg)); } catch (java.lang.Exception e) { handleSendMessageFailure(msg, e); } } }); }else { localMessageStore.stash(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8161/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.producer.concurrent.MultiThreadMQProducer.java", "BodyUseAPI": [], "Fixed commit": "ba13196f2a39e421fbdfaa7316eb60db20ee4c9d", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2014-12-12T02:54:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbPublis <= 0) { nbPublis = 5; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2070/buggy-version/kmelia.kmelia-war.src.main.java.org.silverpeas.components.kmelia.portlets.LastPublicationsPortlet.java", "BodyUseAPI": [], "Fixed commit": "b0cf143b33f911ef68a0cfc61d1333c5a52c3317", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Components", "Date": "2017-02-09T16:17:46Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.model.Model.getFilteredToDoList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((toDoIndex) - 1) < 0) || (((toDoIndex) - 1) >= (lastShownList.size()))) { return new seedu.address.logic.commands.CommandResult(java.lang.String.format(Messages.MESSAGE_TODO_ITEM_INDEX_INVALID, toDoIndex), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8004/buggy-version/src.main.java.seedu.address.logic.commands.FinishCommand.java", "BodyUseAPI": [], "Fixed commit": "2cac4f25191143cce7fe309d7055fbfb4d00cf79", "Url": "https://api.github.com/repos/CS2103AUG2016-W13-C3/main", "Date": "2016-10-11T12:15:32Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((args.length) == 1) && (\"nogs\".equalsIgnoreCase(args[0]))) { choice = at.jku.oracle.Oracle.Restaurant.A2ChinaRestaurant.name(); }else { choice = args[r.nextInt(args.length)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6549/buggy-version/src.at.jku.oracle.Oracle.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "bbbef19b63c9c359c721b7eb76e15ad76e9eb226", "Url": "https://api.github.com/repos/pangratz/lunch-oracle", "Date": "2011-06-05T20:53:48Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openforis.calc.schema.Cube.getStratumField()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (stratumField != null) { org.openforis.calc.schema.Cube.AggForeignKey aggFK = new org.openforis.calc.schema.Cube.AggForeignKey(stratumField.getName(), stratumField.getName()); aggForeignKeys.add(aggFK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8230/buggy-version/calc-core.src.main.java.org.openforis.calc.schema.Cube.java", "BodyUseAPI": ["org.jooq.Field<java.lang.Integer>.getName()", "org.jooq.Field<java.lang.Integer>.getName()"], "Fixed commit": "39480599ae38c8c2a60d393a66c71667cc83f6cc", "Url": "https://api.github.com/repos/openforis/calc", "Date": "2014-02-17T16:34:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getItemInUseDuration()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (usingItem == 0) { model.setupRest(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7666/buggy-version/src.main.java.mhfc.net.client.render.weapon.bow.RenderBow.java", "BodyUseAPI": [], "Fixed commit": "9b8f7129e612a2f71ac6766a2f7925c7c274f74f", "Url": "https://api.github.com/repos/Guild-Hall/MHFC", "Date": "2016-02-20T23:05:37Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((rssItem != null) && (rssItem.getMedia().isPicture())) { bm = rssItem.getMedia().getAsBitmap(getContext(), listeners, Media.Folder.INTERNAL_ITEMS_PICS); }else if (rssChannel != null) { bm = rssChannel.getBitmap(getContext(), listeners); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3471/buggy-version/app.src.main.java.fr.vpm.audiorss.process.RSSItemArrayAdapter.java", "BodyUseAPI": ["fr.vpm.audiorss.rss.RSSItem.getMedia()", "rssItem.getMedia().getAsBitmap(getContext(),java.util.List<fr.vpm.audiorss.media.PictureLoadedListener>,Media.Folder.INTERNAL_ITEMS_PICS)"], "Fixed commit": "67a1ed9490c71a2339cf941a3c8354dbe240da47", "Url": "https://api.github.com/repos/vpmalley/radiofeedz", "Date": "2014-11-27T05:37:45Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Character>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firstCh == 'a') || (firstCh == 'A')) { java.awt.Rectangle aRectangle = patches.get(0).labelRect; for (int i = 1; i < (patches.size()); i++) { java.awt.Rectangle rectangle = patches.get(i).labelRect; if (((rectangle.y) + (rectangle.height)) < (aRectangle.y)) return false; if (((rectangle.x) + (rectangle.width)) < (aRectangle.x)) return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2868/buggy-version/FigureProcessing.src.gov.nih.nlm.iti.figure.BeamSearch.java", "BodyUseAPI": [], "Fixed commit": "c65c24927b7d773e4ddc7a7e01cfc6818fd3bb07", "Url": "https://api.github.com/repos/JieZou1/FigureProcessing", "Date": "2016-04-20T20:49:15Z"},
{"Line": "=>846", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { android.graphics.drawable.VectorDrawable drawable = ((android.graphics.drawable.VectorDrawable) (android.support.v4.content.ContextCompat.getDrawable(this, drawableRes))); drawable.setTintList(colorStateList); icon.setImageDrawable(drawable); }else { android.support.graphics.drawable.VectorDrawableCompat drawable = ((android.support.graphics.drawable.VectorDrawableCompat) (android.support.v4.content.ContextCompat.getDrawable(this, drawableRes))); drawable.setTintList(colorStateList); icon.setImageDrawable(drawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2284/buggy-version/library.src.main.java.com.thefinestartist.finestwebview.FinestWebViewActivity.java", "BodyUseAPI": [], "Fixed commit": "51c4b1e6f301d1eff1f747157ec0a7a3bceda09d", "Url": "https://api.github.com/repos/TheFinestArtist/FinestWebView-Android", "Date": "2016-03-15T03:12:00Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.headsupdev.agile.storage.HibernateStorage) (org.headsupdev.agile.api.Manager.getStorageInstance())).getResourceManager().getMilestoneDates(org.headsupdev.agile.app.milestones.Milestone,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dates.size()) > 0) { java.util.Date firstDay = dates.get(0); for (org.headsupdev.agile.storage.resource.DurationWorked worked : issue.getTimeWorked()) { if (((worked.getDay().before(firstDay)) && ((worked.getUpdatedRequired()) != null)) && ((worked.getUpdatedRequired().getHours()) > (estimate.getHours()))) { estimate = worked.getUpdatedRequired(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6117/buggy-version/agile-apps.agile-app-milestones.src.main.java.org.headsupdev.agile.app.milestones.ExportDurationWorked.java", "BodyUseAPI": ["java.util.List<java.util.Date>.get(int)"], "Fixed commit": "f56876fa5b6ec32fe4640aad6fbf8709ed13ff48", "Url": "https://api.github.com/repos/headsupdev/agile", "Date": "2013-04-11T21:33:54Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.headsupdev.agile.storage.HibernateStorage) (org.headsupdev.agile.api.Manager.getStorageInstance())).getResourceManager().getMilestoneDates(org.headsupdev.agile.app.milestones.Milestone,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dates.size()) > 0) { dates.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6117/buggy-version/agile-apps.agile-app-milestones.src.main.java.org.headsupdev.agile.app.milestones.ExportDurationWorked.java", "BodyUseAPI": ["java.util.List<java.util.Date>.remove(int)"], "Fixed commit": "f56876fa5b6ec32fe4640aad6fbf8709ed13ff48", "Url": "https://api.github.com/repos/headsupdev/agile", "Date": "2013-04-11T21:33:54Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.headsupdev.agile.storage.HibernateStorage) (org.headsupdev.agile.api.Manager.getStorageInstance())).getResourceManager().getMilestoneDates(org.headsupdev.agile.app.milestones.Milestone,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dates.size()) > 0) { java.util.Date firstDay = dates.get(0); for (org.headsupdev.agile.storage.resource.DurationWorked worked : issue.getTimeWorked()) { if ((estimate == null) || (((worked.getDay().before(firstDay)) && ((worked.getUpdatedRequired()) != null)) && ((worked.getUpdatedRequired().getHours()) < (estimate.getHours())))) { estimate = worked.getUpdatedRequired(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6117/buggy-version/agile-apps.agile-app-milestones.src.main.java.org.headsupdev.agile.app.milestones.ExportDurationWorked.java", "BodyUseAPI": ["java.util.List<java.util.Date>.get(int)"], "Fixed commit": "f56876fa5b6ec32fe4640aad6fbf8709ed13ff48", "Url": "https://api.github.com/repos/headsupdev/agile", "Date": "2013-04-11T21:33:54Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"END CONSENSUS\".equals(line.trim())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8579/buggy-version/src.main.java.uk.ac.ebi.pride.spectracluster.io.ParserUtilities.java", "BodyUseAPI": [], "Fixed commit": "d5465015de222230c3d98566a14ebeb5b28eba2b", "Url": "https://api.github.com/repos/spectra-cluster/spectra-cluster", "Date": "2015-05-13T06:19:31Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hour == 0) return midNight;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4898/buggy-version/wear.src.main.java.co.mobiwise.holywatchface.HolyWatchface.java", "BodyUseAPI": [], "Fixed commit": "e3587724d0bd456b69e34b3f946bfa797e2166cc", "Url": "https://api.github.com/repos/iammert/HolyWatchFace", "Date": "2015-10-12T18:42:04Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getHand().size()", "mage.abilities.dynamicvalue.DynamicValue.calculate(mage.game.Game,mage.abilities.Ability,mage.abilities.effects.common.discard.DiscardTargetEffect)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetAmount > cardsInHand) { finalAmount = cardsInHand; }else { finalAmount = targetAmount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5482/buggy-version/Mage.src.mage.abilities.effects.common.discard.DiscardTargetEffect.java", "BodyUseAPI": [], "Fixed commit": "e32c7676b4ac632a1c3ab33ed20fab5b2f4471c9", "Url": "https://api.github.com/repos/wanderer120/mage", "Date": "2015-06-16T16:34:24Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9011/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "493bb9b1144f5ff21390d62effeb9a46616848b5", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-25T07:56:00Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children) == null) { children = com.google.common.collect.Lists.newArrayList(otherChildren); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1110/buggy-version/src.main.java.macrobase.analysis.summary.itemset.StreamingFPGrowth.java", "BodyUseAPI": [], "Fixed commit": "a0719a9767ae18665c67a5943453fbeb195fcfb5", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2016-01-08T02:41:55Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (albumArtUri != null) { ((android.widget.ImageView) (convertView.findViewById(R.id.AlbumArtThumb))).setImageURI(albumArtUri); }else { ((android.widget.ImageView) (convertView.findViewById(R.id.AlbumArtThumb))).setImageResource(R.drawable.no_album_art_thumb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8709/buggy-version/src.com.ideabag.playtunes.adapter.ArtistsOneAdapter.java", "BodyUseAPI": ["((android.widget.ImageView) (convertView.findViewById(R.id.AlbumArtThumb))).setImageURI(android.net.Uri)"], "Fixed commit": "cd5628c29451666e1b783bb27e78724f5ac9904e", "Url": "https://api.github.com/repos/jeffington/PlayTunes", "Date": "2014-08-04T20:03:42Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(possibleDuplicate.isVoided())) { if (((org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getGivenName(), personName.getGivenName())) && (org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getMiddleName(), personName.getMiddleName()))) && (org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getFamilyName(), personName.getFamilyName()))) { errors.reject(\"Patient.duplicateName\", new java.lang.Object[]{ personName.getFullName() }, ((personName.getFullName()) + \" is a duplicate name for the same patient\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7251/buggy-version/omod.src.main.java.org.openmrs.web.controller.patient.ShortPatientFormValidator.java", "BodyUseAPI": ["org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getMiddleName(),personName.getMiddleName())", "org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getFamilyName(),personName.getFamilyName())", "org.openmrs.PersonName.getGivenName()", "org.openmrs.PersonName.getFamilyName()", "org.openmrs.util.OpenmrsUtil.nullSafeEqualsIgnoreCase(possibleDuplicate.getGivenName(),personName.getGivenName())", "org.openmrs.PersonName.getMiddleName()"], "Fixed commit": "35a4d85229fe6c03001239e69f76d4983b728f79", "Url": "https://api.github.com/repos/rasanjanap/openmrs-module-legacyui", "Date": "2016-01-23T19:08:58Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectionThread) != null) { throw new java.lang.RuntimeException(\"Previous connection has not yet been closed!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/376/buggy-version/src.com.mobicage.rogerthat.xmpp.CallBackApiXMPPListener.java", "BodyUseAPI": [], "Fixed commit": "a011319bf3e4e3e07000e04bf73e513989837c0e", "Url": "https://api.github.com/repos/fastgeert/Rogerth.at-Messenger-java-api-bindings", "Date": "2013-02-07T21:03:22Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evt.getSource()) == (backBtn)) { if ((addit) == 1) { dispose(); new view.sa.SAMenu(); }else { dispose(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3843/buggy-version/src.view.sa.Addit.java", "BodyUseAPI": [], "Fixed commit": "f6fd5099e5288a48b42c1c3e6f216596fd51a431", "Url": "https://api.github.com/repos/nekocchi/payroll", "Date": "2015-05-25T06:00:12Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bf.shouldRemoveFromHeapCollection()) { if (((bf.getType()) != null) && (bf.getType().endsWith(\"String\"))) { b.append(\" = __cn1StaticVal;\\n removeObjectFromHeapCollection(threadStateData, __cn1StaticVal);\\n removeObjectFromHeapCollection(threadStateData, ((struct obj__java_lang_String*)__cn1StaticVal)->java_lang_String_value);\\n}\\n\\n\"); }else { b.append(\" = __cn1StaticVal;\\n removeObjectFromHeapCollection(threadStateData, __cn1StaticVal);\\n}\\n\\n\"); } }else { b.append(\" = __cn1StaticVal;\\n}\\n\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8123/buggy-version/vm.ByteCodeTranslator.src.com.codename1.tools.translator.ByteCodeClass.java", "BodyUseAPI": ["bf.getType().endsWith(java.lang.String)", "com.codename1.tools.translator.ByteCodeField.getType()", "com.codename1.tools.translator.ByteCodeField.getType()"], "Fixed commit": "9835f23c9a9549879817b8711f6e9bfa6882240f", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2015-05-21T07:06:26Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (vPos < 0) { return 0; }else { return net.sf.cb2java.types.Numeric.getLength(pic.substring(vPos)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/820/buggy-version/src.main.java.net.sf.cb2java.types.Numeric.java", "BodyUseAPI": ["net.sf.cb2java.types.Numeric.getLength(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "ee287b5d4f176c62addb20340f45589162a021ac", "Url": "https://api.github.com/repos/BertKoor/cb2java", "Date": "2017-03-15T14:11:46Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (str.equals(\"follow-enable\")) { global.userManager.setFollowing(global.firebaseAuth.getCurrentUser().getUid(), nowList.get(position).uid, false); }else if (str.equals(\"follow-disable\")) { global.userManager.setFollowing(global.firebaseAuth.getCurrentUser().getUid(), nowList.get(position).uid, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4469/buggy-version/app.src.main.java.com.icaynia.soundki.Activity.FindUserActivity.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "f8302c5afec4f2850c347b0dd1d3a1e93af47033", "Url": "https://api.github.com/repos/sionuuu/pracler", "Date": "2017-03-27T06:59:31Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.core.api.security.ACP.getACL(ACL.INHERITED_ACL)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (acl == null) { acl = acp.getACL(ACL.LOCAL_ACL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1659/buggy-version/nuxeo-automation.nuxeo-automation-io.src.main.java.org.nuxeo.ecm.automation.jaxrs.io.documents.JsonESDocumentWriter.java", "BodyUseAPI": [], "Fixed commit": "768d6b2c33a7847f24bccf0cc6c7c44d15f8c726", "Url": "https://api.github.com/repos/nuxeo/nuxeo-features", "Date": "2014-03-26T00:40:34Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"PayLinkXML\".equals(pc.getIdentifier())) { pc.setPassword(\"0nl1n\ufffdP@ym\ufffdnt$\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7910/buggy-version/WEB-INF.classes.uk.gov.selfserve.PWCallback.java", "BodyUseAPI": ["org.apache.ws.security.WSPasswordCallback.setPassword(java.lang.String)"], "Fixed commit": "357af4d0c714d5583deb4307fde9c4fbb4685f26", "Url": "https://api.github.com/repos/KevinWhite/MyCouncil", "Date": "2013-06-05T13:40:37Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinishing()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4215/buggy-version/Simperium.src.main.java.com.simperium.android.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "22adc7293db59d5c00a24cdf477ee59f4cc094c9", "Url": "https://api.github.com/repos/Simperium/simperium-android", "Date": "2013-09-10T19:13:27Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list == null) || ((list.size()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6940/buggy-version/MetroBike.src.com.HuskySoft.metrobike.backend.Utility.java", "BodyUseAPI": [], "Fixed commit": "b353906d4a3fd664450b202f6ba5447e4f9ca6ec", "Url": "https://api.github.com/repos/alaurenz/metrobike", "Date": "2013-05-16T16:05:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (r.next()) { value = r.getString(\"value\"); }else value = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1074/buggy-version/src.dal.admin.ConfigsStore.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "75e80d8abcff88fddb0dceb66242ea16bbebc861", "Url": "https://api.github.com/repos/progutvikling/prosjekt", "Date": "2013-10-17T11:34:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (esType == null) esType = trackId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3658/buggy-version/src.main.java.com.ss.es.EsForward.java", "BodyUseAPI": [], "Fixed commit": "96429d395396a25b1e22e27e139018f976b8f4a6", "Url": "https://api.github.com/repos/zerocoolys/relog", "Date": "2015-06-10T03:12:38Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(chargeMoney(player.getName(), money))) { player.sendMessage(((((((\"You do not have \" + (org.bukkit.ChatColor.GREEN)) + \"$\") + money) + (org.bukkit.ChatColor.WHITE)) + \" to give to \") + target)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2073/buggy-version/Economy.src.iggy.Economy.Economy.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((((((\"You do not have \" + (org.bukkit.ChatColor.GREEN)) + \"$\") + money) + (org.bukkit.ChatColor.WHITE)) + \" to give to \") + target))"], "Fixed commit": "c09123b3ff5aa433ea008ec8e758e657ca51f096", "Url": "https://api.github.com/repos/AsherGlick/Minecraft-Bukkit-Plugins", "Date": "2012-08-04T05:39:42Z"},
{"Line": "=>1074", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.griefcraft.lwc.LWC.resolvePlugin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (legacy != null) { permissions = new com.griefcraft.integration.permissions.NijiPermissions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6361/buggy-version/src.main.java.com.griefcraft.lwc.LWC.java", "BodyUseAPI": [], "Fixed commit": "2643b43ecbdef9758f82863ce85ef73205e1a785", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2011-09-20T19:36:51Z"},
{"Line": "=>1067", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.griefcraft.lwc.LWC.resolvePlugin(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (legacy != null) { if ((((com.nijikokun.bukkit.Permissions.Permissions) (legacy)).getHandler()) instanceof com.platymuus.bukkit.permcompat.PermissionHandler) { permissions = new com.griefcraft.integration.permissions.SuperPermsPermissions(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6361/buggy-version/src.main.java.com.griefcraft.lwc.LWC.java", "BodyUseAPI": [], "Fixed commit": "2643b43ecbdef9758f82863ce85ef73205e1a785", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2011-09-20T19:36:51Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((service == null) || (hostInfo == null)) || (syncTypes == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1754/buggy-version/app.src.main.java.org.xbmc.kore.service.SyncUtils.java", "BodyUseAPI": [], "Fixed commit": "8eec0c7985f41e243563fd12f67501fb23d4d648", "Url": "https://api.github.com/repos/poisdeux/Kore", "Date": "2015-09-01T08:20:49Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, jask.Variable>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((var.getType()) == (VariableType.Number)) { java.lang.System.out.println(temp); }else { java.lang.System.out.println(temp.substring(1, ((temp.length()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/622/buggy-version/src.jask.Executer.java", "BodyUseAPI": [], "Fixed commit": "f20671c301ff0bf563171fea9180b3106e03994a", "Url": "https://api.github.com/repos/jpaffrath/jask", "Date": "2016-09-08T13:45:09Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, jask.Variable>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (var == null) { java.lang.Error.printErrorVariableNotDefined(param); }else { if (var instanceof jask.VariableList) { java.lang.System.out.print(((jask.VariableList) (var)).getPrintString()); }else { temp = var.toString(); if ((var.getType()) == (VariableType.Number)) { java.lang.System.out.print(temp); }else { java.lang.System.out.print(temp.substring(1, ((temp.length()) - 1))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/622/buggy-version/src.jask.Executer.java", "BodyUseAPI": ["jask.Variable.getType()", "jask.Variable.toString()"], "Fixed commit": "f20671c301ff0bf563171fea9180b3106e03994a", "Url": "https://api.github.com/repos/jpaffrath/jask", "Date": "2016-09-08T13:45:09Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(io.descoped.container.module.factory.DefaultInstanceFactory.INSTANCES.containsKey(factoryClass))) { throw new io.descoped.container.exception.DescopedServerException(((\"Something went wrong in \" + factoryClass) + \".init()! Make sure DefaultInstanceFactory.register(factoryClass, factory) is invoked from this method!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5010/buggy-version/core.src.main.java.io.descoped.container.module.factory.DefaultInstanceFactory.java", "BodyUseAPI": [], "Fixed commit": "f71d009d313b0f2392da5d7a364cc8e0ee775bbc", "Url": "https://api.github.com/repos/descoped/descoped-container", "Date": "2017-02-07T16:26:29Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.core.issue.tracking.BlockRecognizer.lengthOfMaximalBlock(baseInput.getLineHashSequence(),java.lang.Integer,rawInput.getLineHashSequence(),java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (weight > 0) { possibleLinePairs.add(new org.sonar.core.issue.tracking.BlockRecognizer.LinePair(baseLine, rawLine, weight)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1637/buggy-version/sonar-core.src.main.java.org.sonar.core.issue.tracking.BlockRecognizer.java", "BodyUseAPI": ["java.util.List<org.sonar.core.issue.tracking.BlockRecognizer.LinePair>.add(org.sonar.core.issue.tracking.BlockRecognizer.LinePair)"], "Fixed commit": "7f6004f914450d45aa6d4b3a5e60c21b3e6af53f", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2017-12-12T10:37:10Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRunning) { gameModel.gameUpdate(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4791/buggy-version/v7.GameController.java", "BodyUseAPI": [], "Fixed commit": "04ebee703ee28a57a988dfa71c5e44295fc16341", "Url": "https://api.github.com/repos/Mrmiffo/Lab3Grp18", "Date": "2014-12-15T11:42:28Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activeProgram.getVisitForms()) != null) { forms.addAll(activeProgram.getVisitForms()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1242/buggy-version/api.src.main.java.org.openmrs.module.kenyacore.form.FormManager.java", "BodyUseAPI": ["java.util.Set<org.openmrs.module.kenyacore.form.FormDescriptor>.addAll(activeProgram.getVisitForms())", "org.openmrs.module.kenyacore.program.ProgramDescriptor.getVisitForms()"], "Fixed commit": "82f1686cf0a752c9e2e4ddbf884bd8cfa5d28923", "Url": "https://api.github.com/repos/I-TECH/openmrs-module-kenyacore", "Date": "2013-09-26T13:50:36Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type != null) { if ((mapValues.peek()) instanceof java.util.TreeMap) { @java.lang.SuppressWarnings(\"unchecked\") java.util.TreeMap<java.lang.String, java.lang.Object> treeMap = ((java.util.TreeMap<java.lang.String, java.lang.Object>) (mapValues.peek())); treeMap.put(command.name, command.value); }else if ((mapValues.peek()) instanceof java.util.ArrayList) { @java.lang.SuppressWarnings(\"unchecked\") java.util.ArrayList<java.lang.Object> arrayList = ((java.util.ArrayList<java.lang.Object>) (mapValues.peek())); arrayList.add(command.value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/144/buggy-version/src.me.gerenciar.sjson.parser.Reader.java", "BodyUseAPI": [], "Fixed commit": "6a7a0c523f230a22322968cb03e046d4dc9c83f1", "Url": "https://api.github.com/repos/daviarimateia93/GerenciarmeSJSON", "Date": "2016-01-12T19:20:25Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getViewer()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6068/buggy-version/applications.plugins.org.csstudio.opibuilder.widgets.src.org.csstudio.opibuilder.widgets.editparts.LinkingContainerEditpart.java", "BodyUseAPI": [], "Fixed commit": "bf5bdebe9b2e6073c186ca8a98911eae1640b91a", "Url": "https://api.github.com/repos/ControlSystemStudio/cs-studio", "Date": "2014-12-10T16:10:27Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTasksFragment()) != null) { getTasksFragment().updateButtons(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4494/buggy-version/src.de.azapps.mirakel.main_activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3b0f1a780308760278ac25c8863be4d1510a58d8", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2014-02-04T22:32:12Z"},
{"Line": "=>747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTaskFragment()) != null) { getTaskFragment().update(this.currentTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4494/buggy-version/src.de.azapps.mirakel.main_activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3b0f1a780308760278ac25c8863be4d1510a58d8", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2014-02-04T22:32:12Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hero.isDying())) { hero.damage(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4004/buggy-version/src.mr.model.Projectile.java", "BodyUseAPI": ["mr.controller.entity.Hero.damage(int)"], "Fixed commit": "2f16d0584d084eed24d7be74c4cbfac7143f3a89", "Url": "https://api.github.com/repos/SimonPiCarter/MarioRewind", "Date": "2016-04-22T18:42:53Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hero.isDying())) { hero.damage(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4004/buggy-version/src.mr.controller.entity.Enemy.java", "BodyUseAPI": ["mr.controller.entity.Hero.damage(int)"], "Fixed commit": "2f16d0584d084eed24d7be74c4cbfac7143f3a89", "Url": "https://api.github.com/repos/SimonPiCarter/MarioRewind", "Date": "2016-04-22T18:42:53Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.matsim.utils.objectattributes.ObjectAttributes.getAttribute(decisionMaker.getId().toString(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (birth.equals(\"Unknown\")) return -99;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5827/buggy-version/playgrounds.ivtExt.src.main.java.playground.ivt.maxess.prepareforbiogeme.tripbased.capetown.CapeTownChoiceSetRecordFiller.java", "BodyUseAPI": [], "Fixed commit": "edcc2147f125738ce01b6b76e9f1aab803b8a6d1", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2016-02-08T11:21:36Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.BitmapRegionDecoder.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((region.endLine) < (bmpHeight - 1)) { bmp = new info.papdt.pano.support.FastBitmapReader(decoder.decodeRegion(new android.graphics.Rect(0, region.endLine, fullWidth, bmpHeight), null)); writer.writeBitmapRegion(bmp, 0, (fullHeight - (bmpHeight - (region.endLine))), (bmpHeight - (region.endLine))); bmp.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4746/buggy-version/app.src.main.java.info.papdt.pano.processor.ScreenshotComposer.java", "BodyUseAPI": ["info.papdt.pano.support.FastBitmapWriter.writeBitmapRegion(info.papdt.pano.support.FastBitmapReader,int,int,int)", "android.graphics.BitmapRegionDecoder.decodeRegion(android.graphics.Rect,<nulltype>)"], "Fixed commit": "bc4790a28bfc7d38ac16c987671989d2f5e87446", "Url": "https://api.github.com/repos/PaperAirplane-Dev-Team/Panoramic-Screenshot", "Date": "2015-06-18T12:33:15Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cascading.pipe.Operator.getFieldDeclaration()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldDeclaration.isArguments()) return arguments;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9099/buggy-version/src.core.cascading.pipe.Operator.java", "BodyUseAPI": [], "Fixed commit": "083dad72b5ef5a37791f3ce83619a6ac400c527b", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2011-03-13T18:33:02Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["req.getRequestURI().substring(req.getContextPath().length())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (path.equals(\"/\")) { request.getRequestDispatcher(\"/WEB-INF/views/pages/index.jsp\").forward(request, response); }else { request.getRequestDispatcher((\"/store\" + path)).forward(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/279/buggy-version/webapp.src.main.java.com.iquestgroup.webApp.filters.DispatcherFilter.java", "BodyUseAPI": ["javax.servlet.ServletRequest.getRequestDispatcher(java.lang.String)", "request.getRequestDispatcher((\"/store\" + path)).forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"], "Fixed commit": "653bd07ec11b5e2c6a90611b0ff7d4fb7f848483", "Url": "https://api.github.com/repos/Stefan-Pamparau/OnlineBookStore", "Date": "2016-05-07T20:44:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.z3.Model.eval(com.microsoft.z3.Expr,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((value.equals(f)) && (!(((value.isNumeral()) || (value.isTrue())) || (value.isFalse())))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4205/buggy-version/src.org.sosy_lab.solver.z3java.Z3Model.java", "BodyUseAPI": [], "Fixed commit": "075d2b64bd0754276de8ccc0e411697f2a7e200f", "Url": "https://api.github.com/repos/sosy-lab/java-smt", "Date": "2016-03-24T16:03:40Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<org.activityinfo.model.resource.ResourceId>.isEmpty()", "org.activityinfo.model.expr.functions.Casting.toSet(arguments.get(i))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(nextArg.isEmpty())) && arg1IsEmpty) { return org.activityinfo.model.type.primitive.BooleanFieldValue.FALSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3080/buggy-version/core.model.src.main.java.org.activityinfo.model.expr.functions.ContainsAllFunction.java", "BodyUseAPI": [], "Fixed commit": "4cb43670e021766187587c5d308035781ba7f624", "Url": "https://api.github.com/repos/bedatadriven/activityinfo", "Date": "2016-08-30T12:26:30Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (txt.equals(\"\")) return txt;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2207/buggy-version/src.org.brandroid.openmanager.activities.ServerSetupActivity.java", "BodyUseAPI": [], "Fixed commit": "80a1429644092e784eb1143b5eebab7a28192036", "Url": "https://api.github.com/repos/BrandoCommando/OpenExplorer", "Date": "2013-05-11T00:00:40Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.modelRender.isDebugging()) { gl.glPushMatrix(); gl.glTranslated(((c.getCenter().x) + (this.getGlobalX())), 2, ((c.getCenter().z) - (this.getGlobalY()))); kendzi.jogl.DrawUtil.drawDotY(gl, 6.0, 6); gl.glPopMatrix(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1031/buggy-version/kendzi.josm.plugin3d.src.kendzi.josm.kendzi3d.jogl.model.trees.Forest.java", "BodyUseAPI": [], "Fixed commit": "30ef214c6a33012336c24301f8720bd3b34f643b", "Url": "https://api.github.com/repos/kendzi/kendzi3d", "Date": "2013-02-17T10:06:19Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 2) { throw new java.lang.IllegalArgumentException(((\"Two arguments were expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7303/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionDaysBetween.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "779c44c063754231ba39bbb7f865de86cc535e35", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-21T11:30:29Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.hisp.dhis.rules.functions.RuleFunctionDaysBetween.isEmpty(start)) || (org.hisp.dhis.rules.functions.RuleFunctionDaysBetween.isEmpty(end))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7303/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionDaysBetween.java", "BodyUseAPI": [], "Fixed commit": "779c44c063754231ba39bbb7f865de86cc535e35", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-21T11:30:29Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.GINGERBREAD_MR1)) { socket = device.createInsecureRfcommSocketToServiceRecord(uuid); }else { socket = device.createRfcommSocketToServiceRecord(uuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2009/buggy-version/auto-tethering-app.src.main.java.com.labs.dm.auto_tethering.service.BluetoothTask.java", "BodyUseAPI": [], "Fixed commit": "ebc550a3f42ccfe0927be12fa0481d0e6b2eb372", "Url": "https://api.github.com/repos/danielmroczka/auto-tethering", "Date": "2017-01-21T18:01:42Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.api.service.impl.resource.utils.PropertySetterUtil.extractValuesFromStringSet(SupportedVolumeInformation.EMC_MAXIMUM_IO_BANDWIDTH.name(),unManagedVolume.getVolumeInformation())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (hostIoBws == null) { hostIoBws = new java.util.HashSet<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4157/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.blockingestorchestration.BlockIngestOrchestrator.java", "BodyUseAPI": [], "Fixed commit": "17637f7e911ea561cad242c471113f0b8dfc9454", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-03T14:57:48Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hostIoPs.isEmpty()) { hostIoPs.add(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4157/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.blockingestorchestration.BlockIngestOrchestrator.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "17637f7e911ea561cad242c471113f0b8dfc9454", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-03T14:57:48Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (hostIoBws.isEmpty()) { hostIoBws.add(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4157/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.blockingestorchestration.BlockIngestOrchestrator.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)"], "Fixed commit": "17637f7e911ea561cad242c471113f0b8dfc9454", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-03T14:57:48Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.api.service.impl.resource.utils.PropertySetterUtil.extractValuesFromStringSet(SupportedVolumeInformation.EMC_MAXIMUM_IOPS.name(),unManagedVolume.getVolumeInformation())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (hostIoPs == null) { hostIoPs = new java.util.HashSet<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4157/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.blockingestorchestration.BlockIngestOrchestrator.java", "BodyUseAPI": [], "Fixed commit": "17637f7e911ea561cad242c471113f0b8dfc9454", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-03T14:57:48Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startJump) { audio.play(\"Jump\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6537/buggy-version/IH11-Game.src.entity.EntityPlayer.java", "BodyUseAPI": [], "Fixed commit": "1482795cf58919a8bbb15b97bcbb03361db5ca89", "Url": "https://api.github.com/repos/TobiasBodewig/IH11-Game", "Date": "2014-06-01T10:43:14Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getBoard().getHex(c.translated(dir))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nextHex == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/724/buggy-version/megamek.src.megamek.common.Dropship.java", "BodyUseAPI": [], "Fixed commit": "79e2a90c1b43d2f7c998d19880a8f0fdd41f5dd4", "Url": "https://api.github.com/repos/wildj79/megamek", "Date": "2016-07-25T17:47:37Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.getBoard().getHex(c.translated(5))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (currHex == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/724/buggy-version/megamek.src.megamek.common.Dropship.java", "BodyUseAPI": [], "Fixed commit": "79e2a90c1b43d2f7c998d19880a8f0fdd41f5dd4", "Url": "https://api.github.com/repos/wildj79/megamek", "Date": "2016-07-25T17:47:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<io.coreflodev.openchat.api.ChatMessage>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (oldSize < (chatMessages.size())) { notifyItemRangeChanged(0, oldSize); notifyItemRangeInserted(oldSize, chatMessages.size()); }else { notifyItemRangeRemoved(0, oldSize); notifyItemRangeInserted(0, chatMessages.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1370/buggy-version/app.src.main.java.io.coreflodev.openchat.chat.ChatAdapter.java", "BodyUseAPI": ["io.coreflodev.openchat.chat.ChatAdapter.notifyItemRangeInserted(int,chatMessages.size())", "io.coreflodev.openchat.chat.ChatAdapter.notifyItemRangeInserted(int,chatMessages.size())", "io.coreflodev.openchat.chat.ChatAdapter.notifyItemRangeRemoved(int,int)", "java.util.List<io.coreflodev.openchat.api.ChatMessage>.size()", "io.coreflodev.openchat.chat.ChatAdapter.notifyItemRangeChanged(int,int)", "java.util.List<io.coreflodev.openchat.api.ChatMessage>.size()"], "Fixed commit": "f40057d32d8461cd0da9d8ae2f4747a703bb74fe", "Url": "https://api.github.com/repos/CoreFloDev/OpenChat", "Date": "2017-01-16T22:49:12Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction.equals(Direction.DOWN)) { new java.lang.Exception().printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5178/buggy-version/Mutants.src.com.se1by.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "ee6b247a5bbe52db7eb0035e32743e26389c4330", "Url": "https://api.github.com/repos/se1by/Mutants", "Date": "2012-09-07T20:03:43Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeHasChanged) { systemMessage.setReminderDone(false); systemMessage.setSendReminder(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4610/buggy-version/src.main.java.ch.alv.sysinfos.web.rest.system.SystemMessageResource.java", "BodyUseAPI": [], "Fixed commit": "94477b0e4ffb47042014569065b45570b9efa283", "Url": "https://api.github.com/repos/alv-ch/alv-ch-sysinfos.api", "Date": "2017-06-24T11:23:31Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.javagil.columbo.internal.BytecodeUtil.taggedTypeNameToClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isPseudoClass(clazz)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7953/buggy-version/src.main.java.de.javagil.columbo.internal.MethodVisitor.java", "BodyUseAPI": [], "Fixed commit": "5215b63b55334b0a397f87bad69156b348f46cae", "Url": "https://api.github.com/repos/mhoennig/columbo", "Date": "2015-04-23T05:56:20Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adjustedASTSelection.getSubtermCount()) <= i) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7222/buggy-version/org.spoofax.modelware.emf.src.org.spoofax.modelware.emf.utils.Subterm2Subobject.java", "BodyUseAPI": [], "Fixed commit": "ce9d940253ef6b4565a3a11de9748dfd0f25b159", "Url": "https://api.github.com/repos/metaborg/spoofax-modelware", "Date": "2014-01-23T05:44:34Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key == (java.awt.event.KeyEvent.VK_1)) { Util.DebugGuiHandler.changeDebugGUIStatus(); Input.KeyInput.N1 = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1139/buggy-version/src.Input.KeyInput.java", "BodyUseAPI": [], "Fixed commit": "b30df209d1552a4c7c9a93b95a055d42dcdae912", "Url": "https://api.github.com/repos/agupta231/doodle-jump-java", "Date": "2015-03-04T02:19:43Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key == (java.awt.event.KeyEvent.VK_1)) { Input.KeyInput.D = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1139/buggy-version/src.Input.KeyInput.java", "BodyUseAPI": [], "Fixed commit": "b30df209d1552a4c7c9a93b95a055d42dcdae912", "Url": "https://api.github.com/repos/agupta231/doodle-jump-java", "Date": "2015-03-04T02:19:43Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.uwaterloo.asw.internal.InstructionNode.getInstructionActualParameterizedArgumentAtIndex(java.lang.Class<? extends ca.uwaterloo.asw.Instruction<?, ?>>,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type != null) { return ((java.lang.Class<?>) (type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7901/buggy-version/src.main.java.ca.uwaterloo.asw.internal.InstructionNode.java", "BodyUseAPI": [], "Fixed commit": "82195d7feacc6c58b475670ba4fd236d936f7cc2", "Url": "https://api.github.com/repos/LindenY/asw", "Date": "2014-11-30T22:09:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (Stome.TITLE)) { value = org.unbescape.html.HtmlEscape.unescapeHtml(value.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1167/buggy-version/stome.DataFetcher.java", "BodyUseAPI": [], "Fixed commit": "46bd3e1cfef7381bad1c9fb6515f13ae84e0fd01", "Url": "https://api.github.com/repos/stome/stomev1", "Date": "2015-04-03T01:40:51Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cursor == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2685/buggy-version/calendar.app.models.Calendar.java", "BodyUseAPI": [], "Fixed commit": "9e22dbda0dc4cab30f9f77bcebbc1baf2f7ab11a", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2011-team1", "Date": "2011-11-12T15:55:22Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.catrobat.jira.timesheet.services.impl.TimesheetEntryServiceImpl.getEntriesBySheet(org.catrobat.jira.timesheet.activeobjects.Timesheet)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((entries.length) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9206/buggy-version/src.main.java.org.catrobat.jira.timesheet.services.impl.TimesheetEntryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2d151c68c4e32aa1a0f6f6564ca9ecd35702a4bd", "Url": "https://api.github.com/repos/Catrobat/Timesheet", "Date": "2017-02-06T16:16:09Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.catrobat.jira.timesheet.rest.TimesheetEntryService.getLatestEntry(org.catrobat.jira.timesheet.activeobjects.Timesheet)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (latestEntry != null) { jsonUserInformation.setLatestEntryHours(((latestEntry.getDurationMinutes()) / 60)); jsonUserInformation.setLatestEntryDescription(latestEntry.getDescription()); }else { jsonUserInformation.setLatestEntryHours(0); jsonUserInformation.setLatestEntryDescription(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9206/buggy-version/src.main.java.org.catrobat.jira.timesheet.rest.UserRest.java", "BodyUseAPI": ["org.catrobat.jira.timesheet.activeobjects.TimesheetEntry.getDurationMinutes()", "org.catrobat.jira.timesheet.rest.json.JsonUserInformation.setLatestEntryDescription(latestEntry.getDescription())", "org.catrobat.jira.timesheet.activeobjects.TimesheetEntry.getDescription()", "org.catrobat.jira.timesheet.rest.json.JsonUserInformation.setLatestEntryHours(((latestEntry.getDurationMinutes()) / 60))"], "Fixed commit": "2d151c68c4e32aa1a0f6f6564ca9ecd35702a4bd", "Url": "https://api.github.com/repos/Catrobat/Timesheet", "Date": "2017-02-06T16:16:09Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.host) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5408/buggy-version/app.src.main.java.hs_mannheim.pattern_interaction_model.Client.java", "BodyUseAPI": [], "Fixed commit": "708e144e81aa5c05a4ec88ca128018ad7189e009", "Url": "https://api.github.com/repos/informatik-mannheim/gesture-framework", "Date": "2015-06-24T13:17:34Z"},
{"Line": "=>921", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.kylin.cube.CubeInstance.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(isITTestCube(cubeName))) checkState(cubeDesc.getName().equals(cubeName), \"cube name '%s' must be same as descriptor name '%s', but it is not\", cubeName, cubeDesc.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2507/buggy-version/core-cube.src.main.java.org.apache.kylin.cube.CubeManager.java", "BodyUseAPI": ["org.apache.kylin.cube.CubeManager.checkState(cubeDesc.getName().equals(cubeName),java.lang.String,java.lang.String,cubeDesc.getName())", "cubeDesc.getName().equals(java.lang.String)"], "Fixed commit": "f700a42976b774e27fb5e5416075bfa21cefa153", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-11-25T03:22:11Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wild.portalUsed.contains(p.getUniqueId())) wild.portalUsed.remove(p.getUniqueId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8912/buggy-version/src.me.Qball.Wild.Utils.TeleportTarget.java", "BodyUseAPI": ["wild.portalUsed.remove(p.getUniqueId())", "org.bukkit.entity.Player.getUniqueId()"], "Fixed commit": "ea24a425acdec32b7c72f7cc9453c6ced0a07721", "Url": "https://api.github.com/repos/Qballl/WildernessTp", "Date": "2017-06-30T14:12:11Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((newName.length()) > 16) { newName = newName.substring(0, 16); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3402/buggy-version/Valmanway.src.valmanway.ValmanwayDataPacketProcessor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "8a24becbe397346921363e77e84a30f7085e8c7e", "Url": "https://api.github.com/repos/JaronOrchard/Crissaegrim", "Date": "2014-03-12T18:41:03Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((interests.size()) == 0) { lastInterest = \"ict\"; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6615/buggy-version/app.src.main.java.com.example.erikkjernlie.tdt4140project.Interview.java", "BodyUseAPI": [], "Fixed commit": "725b878af8439378dfe8c5f397199dc34be55b69", "Url": "https://api.github.com/repos/erikkjernlie/TDT4140project2", "Date": "2017-04-19T17:54:16Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == (openMenuId)) { menu.onClick((mX - (getMenuAreaX())), (mY - (getMenuAreaY(i))), button); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5847/buggy-version/src.vswe.stevesjam.components.FlowComponent.java", "BodyUseAPI": ["vswe.stevesjam.components.ComponentMenu.onClick(int,int,int)", "vswe.stevesjam.components.FlowComponent.getMenuAreaY(int)"], "Fixed commit": "3fd5f3708fac201a36cab0042a5bf3f9460ee364", "Url": "https://api.github.com/repos/Vswe/ModJam3", "Date": "2013-12-16T09:49:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tv.subscriptions.subscriptionstv.YoutubeSubscriptionsTVOpenDatabaseHelper.getDao()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((youtubeSubscriptionsTVDao.queryBuilder().where().eq(\"idYT\", video.getIdYT()).countOf()) > 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6698/buggy-version/app.src.main.java.tv.subscriptions.subscriptionstv.SetLastPlaylistAsWatchedDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "df4d5e29702d9c14a50521e12d02729a7e2c216f", "Url": "https://api.github.com/repos/blablanumerodeux/Youtube-Subscriptions-TV", "Date": "2016-12-17T02:15:53Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oldCell.getType().equals(CellType.EMPTY)) newCell = new jxl.write.Blank(curCol, curRow); else newCell = new jxl.write.Label(curCol, curRow, oldCell.getContents());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4139/buggy-version/src.mpeg_book_keeper.pm_workbook_compiler.PMWorkbook.java", "BodyUseAPI": ["mpeg_book_keeper.pm_workbook_compiler.Cell.getContents()"], "Fixed commit": "1c23771fc9ee2570c87ee2ac5f12d576f68ea204", "Url": "https://api.github.com/repos/cucucachu/MPEGBookkeeper", "Date": "2014-09-08T15:23:01Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof java.lang.IndexOutOfBoundsException) { org.egordorichev.lasttry.util.Log.error(\"Failed IOOBE\"); }else { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7543/buggy-version/core.src.org.egordorichev.lasttry.ui.chat.command.Command.java", "BodyUseAPI": ["java.lang.Exception.printStackTrace()"], "Fixed commit": "127b97a7d2d9fa56e4aa4e189d6ec59bc6328af8", "Url": "https://api.github.com/repos/Col-E/LastTry", "Date": "2017-05-25T23:23:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view.isShown()) { if ((myListener) != null) myListener.setTime(hourOfDay, minute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6/buggy-version/MessagesScheduler.src.com.example.messagesscheduler.TimePickerFragment.java", "BodyUseAPI": [], "Fixed commit": "c297453f60c59cd76d9dd380540f143dc9743ec3", "Url": "https://api.github.com/repos/lucascgomes/MsgScheduler", "Date": "2015-03-11T18:30:06Z"},
{"Line": "=>2378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.nukkit.level.Level.getChunk(int,int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (oldChunk != null) { oldChunk.removeBlockEntity(blockEntity); blockEntity.chunk = chunk; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6531/buggy-version/src.main.java.cn.nukkit.level.Level.java", "BodyUseAPI": ["cn.nukkit.level.format.FullChunk.removeBlockEntity(cn.nukkit.blockentity.BlockEntity)"], "Fixed commit": "3805edcd7f098e005038734fb4567926d4d09b73", "Url": "https://api.github.com/repos/PetteriM1/Nukkit", "Date": "2017-09-17T00:57:18Z"},
{"Line": "=>2370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.nukkit.level.Level.getChunk(int,int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (oldChunk != null) { oldChunk.removeEntity(entity); entity.chunk = chunk; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6531/buggy-version/src.main.java.cn.nukkit.level.Level.java", "BodyUseAPI": ["cn.nukkit.level.format.FullChunk.removeEntity(cn.nukkit.entity.Entity)"], "Fixed commit": "3805edcd7f098e005038734fb4567926d4d09b73", "Url": "https://api.github.com/repos/PetteriM1/Nukkit", "Date": "2017-09-17T00:57:18Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((src.getTransactions()) != null) { for (int i = 0; i < (src.getTransactions().size()); i++) { transactions.add(new Transaction(src.getTransactions().get(i))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3741/buggy-version/TermProject_prototype.src.Block.java", "BodyUseAPI": [], "Fixed commit": "9d08c0b5e3f7fad63a2e865c6aa8a52799dcbcab", "Url": "https://api.github.com/repos/jamongcandy/BlockChainEngineJava", "Date": "2017-11-30T06:57:39Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Window.getFocusOwner()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(focused instanceof javax.swing.JTextField)) && (!(focused instanceof javax.swing.JComboBox))) _butt.doClick();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4768/buggy-version/src.com.ezcode.jsnmpwalker.SNMPSessionFrame.java", "BodyUseAPI": [], "Fixed commit": "4cf47eb0d1d45f4d66acbecfc79baad0da8aa453", "Url": "https://api.github.com/repos/tmoskun/JSNMPWalker", "Date": "2013-08-09T16:46:56Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == (com.dhc.gallery.actionbar.ShutterButton.State.DEFAULT)) { processRelease = true; isVedio = true; setHighlighted(false); pressed = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3713/buggy-version/gallery.src.main.java.com.dhc.gallery.actionbar.ShutterButton.java", "BodyUseAPI": [], "Fixed commit": "9efc8d964d2c35aab4517fb8f5860afc7a88d938", "Url": "https://api.github.com/repos/chengzichen/KrGallery", "Date": "2017-05-01T07:52:35Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((txtDescription.getText().toString().trim().length()) > 0) && ((txtProductName.getText().toString().trim().length()) > 0)) && ((txtPrice.getText().toString().trim().length()) > 0)) { saveData(); }else { android.widget.Toast.makeText(getActivity(), \"Please fill in the blanks\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4366/buggy-version/app.src.main.java.com.threesome.shopme.LA.CreateProductFragment1.java", "BodyUseAPI": [], "Fixed commit": "9301dbb13af48cde88bceb0175e8364d08ed14f9", "Url": "https://api.github.com/repos/LanAnhNghiem/ShopMe", "Date": "2017-12-22T15:04:13Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentDepth == 0) { throw new java.lang.IllegalArgumentException((\"Could not connect to url: \" + (page.getURL()))); }else { wood.poulos.webcrawler.WebCrawler.logger.warn(\"Could not connect to url: {}\", page.getURL()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4227/buggy-version/src.main.java.wood.poulos.webcrawler.WebCrawler.java", "BodyUseAPI": [], "Fixed commit": "2159b84fd3cffd1e97ae6a4e68551983712ca064", "Url": "https://api.github.com/repos/dumptruckman/webcrawler", "Date": "2017-11-30T03:57:04Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.klinker.android.send_message.Transaction.settings) == null) android.util.Log.i(\"\", \"com.klinker.android.send_message.Transaction.settings is null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5539/buggy-version/src.com.android.mms.transaction.NotificationTransaction.java", "BodyUseAPI": [], "Fixed commit": "2edfe1f7fa4e2234952ca46e586bc9bf0859552c", "Url": "https://api.github.com/repos/lauren7249/android-smsmms", "Date": "2014-11-23T23:55:09Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(propsFolderReference.exists())) { propsFolderReference.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3809/buggy-version/src.com.tvh.gmaildrafter.PasswordStoreManager.java", "BodyUseAPI": [], "Fixed commit": "ccd1652f2eceac8d95615abe7cd31c906c7422f0", "Url": "https://api.github.com/repos/absinthetized/tvhgooglemapi", "Date": "2016-03-30T13:40:33Z"},
{"Line": "=>1077", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isEmpty) { tableExists = true; }else { sdf_manager.util.SDF_MysqlDatabase.LOGGER.error(\"ReleaseDBUpdates does not exist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2546/buggy-version/src.main.java.sdf_manager.util.SDF_MysqlDatabase.java", "BodyUseAPI": [], "Fixed commit": "9fa395e1837914579c587934d257f400aaa082d8", "Url": "https://api.github.com/repos/eea/eionet.nat2000.sdfmanager", "Date": "2015-12-01T13:03:25Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(clazz.getName().equals(field.getDeclaringClass().getName()))) { java.util.List<java.lang.reflect.Type> types = org.walkmod.javalang.compiler.reflection.ClassInspector.getInterfaceOrSuperclassImplementations(clazz, field.getDeclaringClass()); if (!(types.isEmpty())) { java.lang.reflect.Type firstType = types.iterator().next(); if (firstType instanceof java.lang.reflect.ParameterizedType) { typeMapping = new java.util.HashMap<java.lang.String, org.walkmod.javalang.compiler.symbols.SymbolType>(); java.lang.reflect.ParameterizedType ptype = ((java.lang.reflect.ParameterizedType) (firstType)); java.lang.reflect.Type[] args = ptype.getActualTypeArguments(); java.lang.reflect.TypeVariable<?>[] tv = field.getDeclaringClass().getTypeParameters(); for (int i = 0; (i < (tv.length)) && (i < (args.length)); i++) { typeMapping.put(tv[i].getName(), org.walkmod.javalang.compiler.symbols.SymbolType.valueOf(args[i], null)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6758/buggy-version/src.main.java.org.walkmod.javalang.compiler.actions.LoadFieldDeclarationsAction.java", "BodyUseAPI": ["java.lang.reflect.Field.getDeclaringClass()", "java.lang.Class<?>.getTypeParameters()", "org.walkmod.javalang.compiler.reflection.ClassInspector.getInterfaceOrSuperclassImplementations(java.lang.Class<?>,java.lang.Class<?>)", "java.lang.reflect.Field.getDeclaringClass()"], "Fixed commit": "56ca74d77e4242f1dbf6407346b794e5af4fbe36", "Url": "https://api.github.com/repos/rpau/javalang-compiler", "Date": "2016-03-18T15:36:22Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isotopicCluster.size()) == 0) { }else { ch.fgcz.proteomics.fbdm.Peak peak = isotopicCluster.getPeak(0); resultPeakList.add(peak); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/233/buggy-version/java.deisotoper.src.main.java.ch.fgcz.proteomics.fbdm.Deisotoper.java", "BodyUseAPI": ["ch.fgcz.proteomics.fbdm.IsotopicCluster.getPeak(int)"], "Fixed commit": "79427d5aed1bc591f9210ea78073131d1a9759a8", "Url": "https://api.github.com/repos/protViz/deisotoper", "Date": "2017-12-01T10:46:34Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((useList.size()) == 0) { exitServiceWorkFlow(ServiceStatus.STATUS_NO_FUNCTION); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5519/buggy-version/main.src.com.canon.meap.fax.plugin.impl.ServiceWorkFlow.java", "BodyUseAPI": [], "Fixed commit": "21e562967675937d1d63aa555b32fa54c716e44e", "Url": "https://api.github.com/repos/olympic2020/AppletSample", "Date": "2015-10-21T15:03:24Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(query(nz.ac.squash.db.beans.MatchResult.class, \"r where mWinner_mID = ?0\", member).isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4318/buggy-version/MemberLib.src.nz.ac.squash.db.beans.MatchResult.java", "BodyUseAPI": [], "Fixed commit": "7fd1974afa46948dbacd8d1f301c069dff0f8dbf", "Url": "https://api.github.com/repos/edwardpeek/scnc", "Date": "2014-05-01T06:01:11Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) { message = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5853/buggy-version/src.net.Connection.java", "BodyUseAPI": [], "Fixed commit": "bfb1f3c16880114f5ae3f4996728650d01ed6f60", "Url": "https://api.github.com/repos/DHIF14/MPi3-Server", "Date": "2017-06-01T12:03:57Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (eval(toSpaces(tuple, spaces))) { table.addTuple(tuple); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/216/buggy-version/src.no.uio.ifi.qure.relation.PartOf.java", "BodyUseAPI": ["no.uio.ifi.qure.relation.Table.addTuple(no.uio.ifi.qure.relation.SID[])"], "Fixed commit": "ecaa0b64da4de7eba4fa954cd41cd5e7f76dd963", "Url": "https://api.github.com/repos/leifhka/Qure", "Date": "2017-06-13T09:22:20Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (clientSecret != null) { encrClientSecret = com.salesforce.androidsdk.app.ForceApp.encryptWithPasscode(clientSecret, passcodeHash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8988/buggy-version/native.SalesforceSDK.src.com.salesforce.androidsdk.auth.AuthenticatorService.java", "BodyUseAPI": ["com.salesforce.androidsdk.app.ForceApp.encryptWithPasscode(java.lang.String,java.lang.String)"], "Fixed commit": "36b937c48f7b7bb8e67df7f45599854f96177f7f", "Url": "https://api.github.com/repos/forcedotcom/SalesforceMobileSDK-Android", "Date": "2012-07-31T23:24:10Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.accounts.AccountManager.getUserData(android.accounts.Account,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (encClientSecret != null) { clientSecret = com.salesforce.androidsdk.app.ForceApp.decryptWithPasscode(encClientSecret, passcodeHash); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8988/buggy-version/native.SalesforceSDK.src.com.salesforce.androidsdk.auth.AuthenticatorService.java", "BodyUseAPI": ["com.salesforce.androidsdk.app.ForceApp.decryptWithPasscode(java.lang.String,java.lang.String)"], "Fixed commit": "36b937c48f7b7bb8e67df7f45599854f96177f7f", "Url": "https://api.github.com/repos/forcedotcom/SalesforceMobileSDK-Android", "Date": "2012-07-31T23:24:10Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (child == null) { com.adobe.acs.commons.components.longformtext.impl.LongFormTextComponentImpl.log.warn(\"Found a null dom node.\"); continue; }else if ((child.getNodeType()) != (org.w3c.dom.Node.ELEMENT_NODE)) { com.adobe.acs.commons.components.longformtext.impl.LongFormTextComponentImpl.log.warn(\"Found a dom node is not an element; skipping\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4783/buggy-version/bundle.src.main.java.com.adobe.acs.commons.components.longformtext.impl.LongFormTextComponentImpl.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeType()"], "Fixed commit": "fb95c8eb03e2d3df3c2eeededcad247ea6a889a8", "Url": "https://api.github.com/repos/adamcin/acs-aem-commons", "Date": "2015-02-15T18:38:19Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 14) { android.preference.PreferenceManager.setDefaultValues(this, R.xml.userpreference, false); }else { android.preference.PreferenceManager.setDefaultValues(this, R.xml.userpreference_oldver, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3070/buggy-version/src.ch.hsr.hsrlunch.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "eb5c16d9855959bef1797eb0a71cf09e837f21ed", "Url": "https://api.github.com/repos/hertus/hsrlunch", "Date": "2012-11-10T20:49:44Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vanilladb.core.server.VanillaDb.catalogMgr().getIndexInfo(java.lang.String,java.lang.String,org.vanilladb.core.storage.tx.Transaction)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (iis == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/256/buggy-version/src.main.java.org.vanilladb.core.query.planner.index.IndexSelector.java", "BodyUseAPI": [], "Fixed commit": "6dc00702dd79955d4e61a06e3f2a3ed3a0031003", "Url": "https://api.github.com/repos/vanilladb/vanillacore", "Date": "2017-08-02T08:06:58Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (engine.isScriptable(value)) { modified = true; engine.put(bindings.get(\"$this\"), name, value); }else { synchronized(bindings) { try { bindings.put(\"$$value\", value); modified = true; super.eval(((\"$this.\" + name) + \" = $$value;\"), \"setSlotValue\"); } finally { bindings.remove(\"$$value\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6025/buggy-version/task.java.edu.wpi.cetask.Task.java", "BodyUseAPI": ["edu.wpi.cetask.Task.put(java.lang.String,java.lang.Object)", "edu.wpi.cetask.Task.put(bindings.get(\"$this\"),java.lang.String,java.lang.Object)"], "Fixed commit": "f00aaf10affc119d3b61fbd197ead74feb87ea8d", "Url": "https://api.github.com/repos/charlesrich/Disco", "Date": "2015-06-21T18:03:40Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dimValues != null) { java.util.Map<java.lang.String, java.lang.String> dimsMap = new java.util.HashMap<>(); for (int i = 0; i < (dimValues.length); i++) { dimsMap.put((\"dim.\" + i), dimValues[i]); } return addAll(dimsMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7569/buggy-version/core.src.main.java.org.openstack4j.openstack.cloudeye.internal.MetricFilterOptions.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "e9acb921919d80f7639891ac815c113c0fdde42f", "Url": "https://api.github.com/repos/Huawei/openstack4j", "Date": "2017-06-30T10:20:52Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (systemSharedLibraryNames != null) sharedLibraries.addAll(java.util.Arrays.asList(systemSharedLibraryNames));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/557/buggy-version/play-services-core.src.main.java.org.microg.gms.common.DeviceConfiguration.java", "BodyUseAPI": [], "Fixed commit": "9ce8aa343d62308369a9d820ef8c475770108169", "Url": "https://api.github.com/repos/microg/android_packages_apps_GmsCore", "Date": "2015-10-15T01:20:01Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(me.stuntguy3000.java.telegames.Telegames.DEV_MODE)) { me.stuntguy3000.java.telegames.Telegames.getInstance().getUpdaterAnnouncerHandler().runUpdater(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1712/buggy-version/src.main.java.me.stuntguy3000.java.telegames.handler.UpdateHandler.java", "BodyUseAPI": [], "Fixed commit": "85a06c69357b973f8dc98d26aaf4f52fbd5223ec", "Url": "https://api.github.com/repos/devmattrick/Telegames", "Date": "2015-12-18T06:01:30Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (args != null) args2.addAll(java.util.Arrays.asList(args));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8842/buggy-version/src.javelin.Core.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Object>.addAll(java.util.List<java.lang.Object>)", "java.util.Arrays.asList(java.lang.Object[])"], "Fixed commit": "8a07da08922d8095f57d6d3ce882944aff45a069", "Url": "https://api.github.com/repos/kimtg/Javelin", "Date": "2016-01-22T06:39:39Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (sourceUrl != null) { setTitle(android.net.Uri.parse(sourceUrl).getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/850/buggy-version/sample.src.main.java.me.drakeet.floo.sample.TargetActivity.java", "BodyUseAPI": ["me.drakeet.floo.sample.TargetActivity.setTitle(android.net.Uri.parse(sourceUrl).getPath())", "android.net.Uri.parse(sourceUrl).getPath()", "android.net.Uri.parse(java.lang.String)"], "Fixed commit": "17d4958229a870f504f815a7056d212c818178dc", "Url": "https://api.github.com/repos/drakeet/Floo", "Date": "2017-09-14T06:37:56Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { value = java.lang.Long.valueOf((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4111/buggy-version/framework3.src.framework.cache.Redis.java", "BodyUseAPI": [], "Fixed commit": "6617748b93f657777109a5aea2bed9c06e799e02", "Url": "https://api.github.com/repos/joonolee/framework3", "Date": "2014-02-01T18:23:13Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) { value = java.lang.Long.valueOf((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4111/buggy-version/framework3.src.framework.cache.Redis.java", "BodyUseAPI": [], "Fixed commit": "6617748b93f657777109a5aea2bed9c06e799e02", "Url": "https://api.github.com/repos/joonolee/framework3", "Date": "2014-02-01T18:23:13Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (call.upl.compiler.core.UPLCompiler.DEBUG) { java.lang.System.out.println((((\"Found function: \" + functionName) + \" with arguments: \") + arguments)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5186/buggy-version/src.call.upl.compiler.core.tokeniser.Tokeniser.java", "BodyUseAPI": [], "Fixed commit": "6ea538fb7c80ce9fd63e053c81361efc7ce75c02", "Url": "https://api.github.com/repos/CUB3D/UPL-Compiler", "Date": "2016-01-24T20:39:06Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (call.upl.compiler.core.UPLCompiler.DEBUG) { java.lang.System.out.println(\"Error: not enough tokens for the given number of tags\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5186/buggy-version/src.call.upl.compiler.pattern.PatternMatcher.java", "BodyUseAPI": [], "Fixed commit": "6ea538fb7c80ce9fd63e053c81361efc7ce75c02", "Url": "https://api.github.com/repos/CUB3D/UPL-Compiler", "Date": "2016-01-24T20:39:06Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (exception != null) { com.airmap.airmapsdk.AirMapLog.e(\"TrafficService\", exception.getMessage()); exception.printStackTrace(); }else { com.airmap.airmapsdk.AirMapLog.e(\"TrafficService\", \"Failed with no exception.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2462/buggy-version/airmapsdk.src.main.java.com.airmap.airmapsdk.Networking.Services.TrafficService.java", "BodyUseAPI": ["com.airmap.airmapsdk.AirMapLog.e(java.lang.String,java.lang.String)", "java.lang.Throwable.printStackTrace()", "java.lang.Throwable.getMessage()"], "Fixed commit": "6a6b8a6e7ff071fd66d54abda7dabf364ca75280", "Url": "https://api.github.com/repos/airmap/AirMapSDK-Android", "Date": "2017-01-04T23:25:46Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.tpartner.se.CSVReader.getStudentId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (studentId == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/753/buggy-version/src.main.java.br.com.tpartner.se.CSVReader.java", "BodyUseAPI": [], "Fixed commit": "dcd6aaf12525f7ce949129e98ea8c2ee39ae6f12", "Url": "https://api.github.com/repos/sergioamorim/t-partner-ps", "Date": "2017-06-07T20:28:20Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(url))) { newTab(activity, url, false); }else { newTab(activity, null, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7206/buggy-version/app.src.main.java.acr.browser.lightning.activity.TabsManager.java", "BodyUseAPI": ["acr.browser.lightning.activity.TabsManager.1.newTab(android.app.Activity,java.lang.String,boolean)"], "Fixed commit": "928b12619ae62f3d454c1d04c3abf47067705986", "Url": "https://api.github.com/repos/timduru/Lightning-Browser", "Date": "2016-11-04T02:55:06Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dspace.app.xmlui.utils.HandleUtil.obtainHandle(org.dspace.app.xmlui.aspect.administrative.Navigation)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.dspace.authorize.AuthorizeManager.isAdmin(this.context, dso)) || (org.dspace.authorize.AuthorizeManager.isCuratorOrAdmin(this.context))) { context.addItem().addXref((((contextPath) + \"/admin/export?itemID=\") + (item.getID())), org.dspace.app.xmlui.aspect.administrative.Navigation.T_context_export_item); context.addItem().addXref((((contextPath) + \"/csv/handle/\") + (dso.getHandle())), org.dspace.app.xmlui.aspect.administrative.Navigation.T_context_export_metadata); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7755/buggy-version/dspace.modules.xmlui.src.main.java.org.dspace.app.xmlui.aspect.administrative.Navigation.java", "BodyUseAPI": ["context.addItem().addXref((((contextPath) + \"/csv/handle/\") + (dso.getHandle())),org.dspace.app.xmlui.wing.Message)", "org.dspace.content.DSpaceObject.getHandle()"], "Fixed commit": "9094530d5d57f95259ee4c255ffd62fdb8587d74", "Url": "https://api.github.com/repos/jimallman/dryad-repo", "Date": "2015-01-27T22:40:49Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players.size()) < playersCount) { handleConnected(con); }else { con.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7274/buggy-version/core.src.com.tp.holdem.KryoServer.java", "BodyUseAPI": [], "Fixed commit": "78df050748bb61180077ea0c96358abd874d8a56", "Url": "https://api.github.com/repos/xShadov/HoldemTP", "Date": "2015-12-08T16:02:55Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equalsIgnoreCase(\"help -leavequeue\")) { return \"help -leavequeue\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7720/buggy-version/client.src.main.java.io.notoh.rankedcvc.client.main.RankedCvCClient.java", "BodyUseAPI": [], "Fixed commit": "0e94982a40b7af968514a30005e25b64ba8b5a62", "Url": "https://api.github.com/repos/Notoh/RankedCvC", "Date": "2017-06-16T21:55:54Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equalsIgnoreCase(\"help -about\")) { return \"help -about\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7720/buggy-version/client.src.main.java.io.notoh.rankedcvc.client.main.RankedCvCClient.java", "BodyUseAPI": [], "Fixed commit": "0e94982a40b7af968514a30005e25b64ba8b5a62", "Url": "https://api.github.com/repos/Notoh/RankedCvC", "Date": "2017-06-16T21:55:54Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equalsIgnoreCase(\"help -exit\")) { return \"help -exit\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7720/buggy-version/client.src.main.java.io.notoh.rankedcvc.client.main.RankedCvCClient.java", "BodyUseAPI": [], "Fixed commit": "0e94982a40b7af968514a30005e25b64ba8b5a62", "Url": "https://api.github.com/repos/Notoh/RankedCvC", "Date": "2017-06-16T21:55:54Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ultimoIgpm.attr(\"src\").trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (scriptSrc.matches(\"^/.*\")) { scriptSrc = (br.com.quintoandar.consultasbr.igpm.IGPMReader.HTTP_PORTALDEFINANCAS_COM) + scriptSrc; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8115/buggy-version/implementation.consultasbr.src.main.java.br.com.quintoandar.consultasbr.igpm.IGPMReader.java", "BodyUseAPI": [], "Fixed commit": "5c6fd0bfb0ea98dbc7baf5970c76c947ea4f2161", "Url": "https://api.github.com/repos/quintoandar/consultasbr", "Date": "2015-05-01T03:49:51Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["iv.value.intValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((v < 0) || ((et.values.size()) <= v)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2204/buggy-version/jkind.src.jkind.processes.Director.java", "BodyUseAPI": [], "Fixed commit": "7039b788ce2e33c11a030a0b01f295e785d4cbcf", "Url": "https://api.github.com/repos/agacek/jkind", "Date": "2014-04-30T20:05:37Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.annotation.Annotation.hint()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.pentaho.di.core.Const.isEmpty(type)) { java.lang.String typeVal = org.pentaho.di.pojo.StepPluginUtils.JAVA_2_WIDGET_MAP.get(field.getClass().getSimpleName()); if (org.pentaho.di.core.Const.isEmpty(typeVal)) { type = \"TextVar\"; }else { type = typeVal; } }else { type = org.pentaho.di.pojo.StepPluginUtils.SWT_WIDGET_MAP.get(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3692/buggy-version/src.main.java.org.pentaho.di.pojo.StepPluginUtils.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "bfa6d807244ecda6ecc69306716f6f0e9a2664b3", "Url": "https://api.github.com/repos/mattyb149/pdi-pojo", "Date": "2014-04-06T08:21:33Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.nio.file.Files.isRegularFile(filePath)) { java.nio.file.Files.write(filePath, source.getMarkdown().getValue().getBytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6412/buggy-version/src.main.java.org.publo.controller.MenubarController.java", "BodyUseAPI": ["java.nio.file.Files.write(java.nio.file.Path,source.getMarkdown().getValue().getBytes())"], "Fixed commit": "0b319dd4472d48e42a17f72987d64e6a264b4bb3", "Url": "https://api.github.com/repos/AntoCuc/Publo", "Date": "2017-01-16T17:50:46Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.qxx.protodb.ProtoDB.get(int,com.google.protobuf.DynamicMessage,java.sql.Connection)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (otherMsg != null) b.setField(field, otherMsg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1573/buggy-version/src.main.java.se.qxx.protodb.ProtoDB.java", "BodyUseAPI": ["com.google.protobuf.Message.Builder.setField(com.google.protobuf.Descriptors.FieldDescriptor,com.google.protobuf.DynamicMessage)"], "Fixed commit": "177add99218b22640bda66e631093dec49f56290", "Url": "https://api.github.com/repos/krussan/protodb", "Date": "2016-11-17T20:51:31Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.kekshaus.cubit.plugin.Landplugin.inst().getRegionManager().praseRegionData(fromChunk.getWorld(),fromChunk.getX(),fromChunk.getZ())", "de.kekshaus.cubit.plugin.Landplugin.inst().getRegionManager().praseRegionData(toChunk.getWorld(),toChunk.getX(),toChunk.getZ())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((fromLand.getLandType()) == (de.kekshaus.cubi.api.classes.enums.LandTypes.SERVER)) && ((toLand.getLandType()) == (de.kekshaus.cubi.api.classes.enums.LandTypes.SERVER))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4398/buggy-version/src.main.java.de.kekshaus.cubit.plugin.listener.AdditionalPhysicsListener.java", "BodyUseAPI": [], "Fixed commit": "b3fa0888e89b5143939f7bb054dfbfc251db240a", "Url": "https://api.github.com/repos/MineGaming/cubit", "Date": "2016-11-24T18:08:13Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pathClient.getEthnicityKey()) == null) { clientDTO.setEthnicity(ClientEthnicity.NOT_COLLECTED); }else { switch (pathClient.getEthnicityKey()) { case 104 : clientDTO.setEthnicity(ClientEthnicity.HISPANIC); case 105 : clientDTO.setEthnicity(ClientEthnicity.NON_HISPANIC); default : clientDTO.setEthnicity(org.openhmis.code.ClientEthnicity.valueByCode(pathClient.getEthnicityKey())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/814/buggy-version/src.main.java.org.openhmis.manager.ClientManager.java", "BodyUseAPI": ["org.openhmis.code.ClientEthnicity.valueByCode(pathClient.getEthnicityKey())", "org.openhmis.domain.PathClient.getEthnicityKey()", "org.openhmis.domain.PathClient.getEthnicityKey()", "org.openhmis.dto.ClientDTO.setEthnicity(org.openhmis.code.ClientEthnicity.valueByCode(pathClient.getEthnicityKey()))"], "Fixed commit": "f8b9d897a34622de88e20ceb3133180269fdb922", "Url": "https://api.github.com/repos/hmis-tools/hmis-api-server", "Date": "2015-08-05T15:49:21Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getImageRecords()) != null) { return getImageRecords().size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5123/buggy-version/src.main.java.de.ulfbiallas.imagedatabase.entities.Tag.java", "BodyUseAPI": [], "Fixed commit": "c8fd79ed841c2f121ed90c10c9f1f5480f324775", "Url": "https://api.github.com/repos/ulfbiallas/image-database", "Date": "2015-04-12T11:24:25Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(edu.wpi.cs.wpisuitetng.janeway.config.ConfigManager.getConfig().getUserName().equals(game.getModerator()))) { btnEndGame.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6805/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.PlanningPoker.views.OpenGameView.java", "BodyUseAPI": [], "Fixed commit": "cc13183743d9ac810f7e2f88ee4c9078a5941cb2", "Url": "https://api.github.com/repos/ajthompson/wpi-suite", "Date": "2014-04-23T06:18:01Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(edu.wpi.cs.wpisuitetng.janeway.config.ConfigManager.getConfig().getUserName().equals(game.getModerator()))) { submitButton.setEnabled(false); updateButton.setEnabled(false); submitButton.setText(\"Submit\"); }else { submitButton.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6805/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.PlanningPoker.views.ClosedGameView.java", "BodyUseAPI": [], "Fixed commit": "cc13183743d9ac810f7e2f88ee4c9078a5941cb2", "Url": "https://api.github.com/repos/ajthompson/wpi-suite", "Date": "2014-04-23T06:18:01Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.yyz.nospa.validator.Validator.searchByMultipleProperty(<nulltype>,java.util.Map<cn.yyz.nospa.validator.Property, cn.yyz.nospa.validator.RDFNode>,java.util.List)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (propBySliceKey.containsKey(sliceKey.asResource())) propSet.addAll(propBySliceKey.get(sliceKey.asResource()).get(cn.yyz.nospa.validator.Validator.QB_componentProperty));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4630/buggy-version/src.main.java.cn.yyz.nospa.validator.Validator.java", "BodyUseAPI": ["cn.yyz.nospa.validator.RDFNode.asResource()", "propBySliceKey.get(sliceKey.asResource()).get(cn.yyz.nospa.validator.Property)", "java.util.Set<cn.yyz.nospa.validator.RDFNode>.addAll(propBySliceKey.get(sliceKey.asResource()).get(cn.yyz.nospa.validator.Validator.QB_componentProperty))", "java.util.Map<cn.yyz.nospa.validator.Resource, java.util.Map<cn.yyz.nospa.validator.Property, java.util.Set<cn.yyz.nospa.validator.RDFNode>>>.get(sliceKey.asResource())"], "Fixed commit": "839848fd10ed0de19666166025a1f6cde3cc513c", "Url": "https://api.github.com/repos/yyz1989/NoSPA-RDF-Data-Cube-Validator", "Date": "2014-10-30T13:51:21Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) { sb.deleteCharAt(((sb.length()) - 1)); string = sb.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5677/buggy-version/src.main.java.com.yaruha.WelcomePage.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.length()", "java.lang.StringBuilder.toString()"], "Fixed commit": "31a06da748e98af9db2d94e5f1a58c504484b42f", "Url": "https://api.github.com/repos/yaruha1990/Calculator", "Date": "2017-04-29T14:05:54Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (line != null) { if ((line.getQtyOrdered().compareTo(java.math.BigDecimal.ONE)) > 0) { line.setQty(line.getQtyOrdered().subtract(Env.ONE)); line.saveEx(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5249/buggy-version/client.src.org.compiere.pos.SubCurrentLine.java", "BodyUseAPI": ["line.getQtyOrdered().subtract(Env.ONE)", "line.getQtyOrdered().compareTo(java.math.BigDecimal)", "org.compiere.model.MOrderLine.getQtyOrdered()", "org.compiere.model.MOrderLine.getQtyOrdered()", "org.compiere.model.MOrderLine.saveEx()", "org.compiere.model.MOrderLine.setQty(line.getQtyOrdered().subtract(Env.ONE))"], "Fixed commit": "7392577a0890427ab45447af2f1a3489f72becb2", "Url": "https://api.github.com/repos/ergio/argentine_localization", "Date": "2012-05-15T23:29:11Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.strela.model.Athlete.getPerson()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((person.isAdmin()) && (!(person.isRoot()))) && ((athlete.getTeam()) == null)) { result.rejectValue(\"team\", \"field.required\", \"\u0414\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1250/buggy-version/src.main.java.ru.strela.editor.controller.EditorAthleteController.java", "BodyUseAPI": [], "Fixed commit": "36dd30f97c6aa7ad68bccae2d34b06d63a89d3f1", "Url": "https://api.github.com/repos/aisenpopov/strela", "Date": "2016-05-29T18:28:09Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allFrag) != null) { favFrag.setOtherFrag(allFrag); allFrag.setOtherFrag(favFrag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/251/buggy-version/app.src.main.java.com.example.gokhan.papurrless.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5a8dbad50b14e031e4aed840dbe68804e6cc1f27", "Url": "https://api.github.com/repos/GokGuu/Papurrless", "Date": "2016-02-23T18:00:49Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((favFrag) != null) { allFrag.setOtherFrag(favFrag); favFrag.setOtherFrag(allFrag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/251/buggy-version/app.src.main.java.com.example.gokhan.papurrless.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5a8dbad50b14e031e4aed840dbe68804e6cc1f27", "Url": "https://api.github.com/repos/GokGuu/Papurrless", "Date": "2016-02-23T18:00:49Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.oresomecraft.OresomeBattles.api.BattlePlayer.getBattlePlayer(p).isSpectator()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7599/buggy-version/src.com.oresomecraft.maps.battles.maps.Warehouse.java", "BodyUseAPI": [], "Fixed commit": "4436149b48d177e5f750de95fc4e3d6dfb66843d", "Url": "https://api.github.com/repos/OresomeCraft/MapsPlugin", "Date": "2014-01-25T09:22:43Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(successors.contains(succ))) successors.add(succ);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4728/buggy-version/src.framework.scuba.utils.Node.java", "BodyUseAPI": ["java.util.List<framework.scuba.utils.Node>.add(framework.scuba.utils.Node)"], "Fixed commit": "325655a9520c48cdedb16f84571d9d2e8c0d2272", "Url": "https://api.github.com/repos/fredfeng/Scuba", "Date": "2014-06-01T20:32:26Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileOutput.exists()) { org.apache.commons.io.FileUtils.forceDelete(fileOutput); fileOutput = new java.io.File(com.stratelia.webactiv.util.FileRepositoryManager.getTemporaryPath(), ((getComponentId()) + (com.stratelia.silverpeas.infoLetter.control.InfoLetterSessionController.EXPORT_CSV_NAME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1394/buggy-version/infoletter.infoletter-war.src.main.java.com.stratelia.silverpeas.infoLetter.control.InfoLetterSessionController.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)"], "Fixed commit": "99cd7aeb96690250622d21202f65b79fdee4315b", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2015-01-13T15:24:41Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bitTiger.searchAds.adsInfo.AdsInventory.findAds(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (adsInfo != null) { com.bitTiger.searchAds.adsInfo.CampaignInfo campaignInfo = _campaignInventory.findCampaign(adsInfo.getCampaignId()); if ((campaignInfo.getBudget()) > 0) { com.bitTiger.searchAds.adsInfo.AdsStatsInfo adsStatsInfo = new com.bitTiger.searchAds.adsInfo.AdsStatsInfo(adsId); adsStatsInfo.setRelevanceScore(((hitCount * 1.0F) / (adsInfo.getAdsKeyWords().size()))); adsStatsInfoList.add(adsStatsInfo); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7619/buggy-version/src.com.bitTiger.searchAds.index.AdsIndexImpl.java", "BodyUseAPI": ["com.bitTiger.searchAds.adsInfo.CampaignInventory.findCampaign(adsInfo.getCampaignId())", "com.bitTiger.searchAds.adsInfo.AdsInfo.getCampaignId()", "adsInfo.getAdsKeyWords().size()", "com.bitTiger.searchAds.adsInfo.AdsStatsInfo.setRelevanceScore(((hitCount * 1.0F) / (adsInfo.getAdsKeyWords().size())))", "com.bitTiger.searchAds.adsInfo.AdsInfo.getAdsKeyWords()"], "Fixed commit": "11c492843b72f6117c4edf259d9c2a63e60edb46", "Url": "https://api.github.com/repos/andrewjiang64/Ad_Search", "Date": "2016-04-24T18:21:39Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > (Build.VERSION_CODES.FROYO)) setLayerType(View.LAYER_TYPE_SOFTWARE, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6781/buggy-version/ChartViewSample.chartview.src.main.java.com.meetyou.chartview.ChartView.java", "BodyUseAPI": [], "Fixed commit": "63aa35b4b2ae6c78407b204720fb9e6dc2bba517", "Url": "https://api.github.com/repos/iceAnson/ChartView", "Date": "2015-10-19T08:16:24Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(orderId.equals(o.getOrderId()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5802/buggy-version/src.main.java.org.kumoricon.model.order.Order.java", "BodyUseAPI": [], "Fixed commit": "6bd883f50ab051f499e48653ac8c046c8f9d3e5c", "Url": "https://api.github.com/repos/kumoregdev/kumoreg", "Date": "2016-02-01T02:47:50Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(this.inPath.getValidator().isValid(inPath.getText()))) && ((this.inPath.getText().length()) > 0)) { error = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4132/buggy-version/src.dcp.gui.pivot.frames.ScanFrame.java", "BodyUseAPI": [], "Fixed commit": "1a5e099f0af92e61af32f732f7d8f32646771da5", "Url": "https://api.github.com/repos/DevComPack/setupmaker", "Date": "2015-03-01T17:51:58Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getKLabel()) != null) { klabels.put(p.getKLabel(), p); tags.put(p.getKLabel(), p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9224/buggy-version/src.javasources.KTool.src.org.kframework.kil.loader.Context.java", "BodyUseAPI": ["com.google.common.collect.SetMultimap<java.lang.String, org.kframework.kil.Production>.put(p.getKLabel(),org.kframework.kil.Production)", "com.google.common.collect.SetMultimap<java.lang.String, org.kframework.kil.Production>.put(p.getKLabel(),org.kframework.kil.Production)", "org.kframework.kil.Production.getKLabel()", "org.kframework.kil.Production.getKLabel()"], "Fixed commit": "bb056fe21cb52c1ca9b5d5192754f493e74e072b", "Url": "https://api.github.com/repos/dwightguth/k", "Date": "2014-07-31T16:18:00Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kframework.kil.Production.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((klabel == null) && (isSubsort())) { return null; }else if (klabel == null) { if (sort.toString().equals(KSorts.KLABEL)) klabel = getPrefixLabel(); else klabel = \"'\" + (getPrefixLabel()); attributes.set(\"klabel\", klabel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9224/buggy-version/src.javasources.KTool.src.org.kframework.kil.Production.java", "BodyUseAPI": [], "Fixed commit": "bb056fe21cb52c1ca9b5d5192754f493e74e072b", "Url": "https://api.github.com/repos/dwightguth/k", "Date": "2014-07-31T16:18:00Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.romaframework.core.Roma.context().persistence()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((aspect == null) || (aspect instanceof org.romaframework.aspect.persistence.datanucleus.jdo.JDOAtomicPersistenceAspect)) { if ((manager == null) || (manager.isClosed())) return; if (manager.currentTransaction().isActive()) manager.currentTransaction().rollback(); manager.close(); manager = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/9190/buggy-version/src.org.romaframework.aspect.persistence.datanucleus.RomaDetachListener.java", "BodyUseAPI": [], "Fixed commit": "cdf3c3d66cbcc17d4d686d34741c22340a35419f", "Url": "https://api.github.com/repos/romaframework/persistence-datanucleus", "Date": "2012-04-26T09:56:56Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (autoinclude) new org.kframework.kil.loader.AddAutoIncludedModulesVisitor(context).visitNode(def);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5514/buggy-version/src.javasources.KTool.src.org.kframework.parser.DefinitionLoader.java", "BodyUseAPI": [], "Fixed commit": "ff9477c8e01d11c0b27560439dbf113b6fd54db2", "Url": "https://api.github.com/repos/cos/k", "Date": "2014-09-03T20:40:29Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.contains(\"/\")) { path = org.apache.commons.lang3.StringUtils.substringAfterLast(path, \"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4993/buggy-version/de.blizzy.documentr.src.de.blizzy.documentr.web.page.PageController.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)"], "Fixed commit": "df701a4401316652e77d7d4f369cea8385c9e649", "Url": "https://api.github.com/repos/blizzy78/documentr", "Date": "2012-05-07T21:01:23Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.blizzy.documentr.web.page.PageForm.getParentPagePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(parentPagePath)) { parentPagePath = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4993/buggy-version/de.blizzy.documentr.src.de.blizzy.documentr.web.page.PageController.java", "BodyUseAPI": [], "Fixed commit": "df701a4401316652e77d7d4f369cea8385c9e649", "Url": "https://api.github.com/repos/blizzy78/documentr", "Date": "2012-05-07T21:01:23Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (player == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1047/buggy-version/src.main.java.net.aufdemrand.denizen.objects.dPlayer.java", "BodyUseAPI": [], "Fixed commit": "f3c42b5d23860fa6aa4d9d21d474aadfd3c61b6e", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-06-24T13:32:50Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((show.getRating()) != null) { mpi.setRating(java.lang.Double.parseDouble(show.getRating())); }else { mpi.setRating(0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5840/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.core.services.ShowRetrievalIntentService.java", "BodyUseAPI": ["us.nineworlds.serenity.core.model.impl.TVShowSeriesInfo.setRating(double)", "java.lang.Double.parseDouble(show.getRating())", "us.nineworlds.plex.rest.model.impl.Directory.getRating()"], "Fixed commit": "82f26412f8d441ff86324fa3eea3cddeefc9ef95", "Url": "https://api.github.com/repos/NineWorlds/serenity-android", "Date": "2013-07-09T14:35:15Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.PATHnwei.news.models.News>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(newsItem.getImageUrlString()))) { com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString()).resize(1920, 1080).onlyScaleDown().error(R.drawable.ic_broken_image).into(holder.imageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7162/buggy-version/app.src.main.java.com.PATHnwei.news.adapters.NewsAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString()).resize(1920, 1080).onlyScaleDown().error(R.drawable.ic_broken_image).into(android.widget.ImageView)", "com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString()).resize(1920, 1080).onlyScaleDown().error(R.drawable.ic_broken_image)", "com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString())", "com.PATHnwei.news.models.News.getImageUrlString()", "com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString()).resize(1920, 1080).onlyScaleDown()", "com.squareup.picasso.Picasso.with(context).load(newsItem.getImageUrlString()).resize(int,int)"], "Fixed commit": "d36c197ab695ea35c95946e8095f10073568d941", "Url": "https://api.github.com/repos/lixw1021/News", "Date": "2017-10-31T13:35:53Z"},
{"Line": "=>1156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c_inst.getTgtDevice()) == null) out.writeInt(c_inst.getTgtDevice().RID); else out.writeInt((-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5167/buggy-version/RobotRun.src.robot.DataManagement.java", "BodyUseAPI": ["java.io.DataOutputStream.writeInt(c_inst.getTgtDevice().RID)", "programming.CallInstruction.getTgtDevice()"], "Fixed commit": "d20531848aeb258582171eb5ade34794802cb80b", "Url": "https://api.github.com/repos/skuhl/RobotRun", "Date": "2017-02-28T02:56:30Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (blackSeat.equalsIgnoreCase(myName)) { table.setPlayer1(true); }else if (redSeat.equalsIgnoreCase(myName)) { table.setPlayer1(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7941/buggy-version/CEG-4110-Checkers-Client.src.Client.CheckersLobby.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "e071e8586d08a288caa40b29c331b74fe7711c2f", "Url": "https://api.github.com/repos/bollingerscott/CEG-4110-Checkers-Client", "Date": "2014-11-21T18:34:16Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((is.getItemStack().getAmount()) >= 2) { is.getItemStack().setAmount(((is.getItemStack().getAmount()) - 1)); handler.giveItem(equipSwap.getItem(), equipSwap.getAmount()); handler.getWorld().getEquipment().getEquipmentSlots().get(checkEquipmentSlot(is.getItemStack().getItem())).setItem(new dev.ipsych0.mygame.items.ItemStack(itemSwap.getItem(), 1)); }else { handler.getWorld().getEquipment().getEquipmentSlots().get(checkEquipmentSlot(is.getItemStack().getItem())).setItem(itemSwap); handler.giveItem(equipSwap.getItem(), equipSwap.getAmount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6189/buggy-version/src.dev.ipsych0.mygame.items.InventoryWindow.java", "BodyUseAPI": ["dev.ipsych0.mygame.items.ItemSlot.getItemStack()", "handler.getWorld().getEquipment().getEquipmentSlots().get(checkEquipmentSlot(is.getItemStack().getItem())).setItem(dev.ipsych0.mygame.items.ItemStack)", "dev.ipsych0.mygame.items.InventoryWindow.checkEquipmentSlot(is.getItemStack().getItem())", "dev.ipsych0.mygame.items.ItemSlot.getItemStack()", "is.getItemStack().getAmount()", "is.getItemStack().getItem()", "dev.ipsych0.mygame.items.ItemSlot.getItemStack()", "dev.ipsych0.mygame.items.ItemSlot.getItemStack()", "handler.getWorld().getEquipment().getEquipmentSlots().get(int)", "dev.ipsych0.mygame.items.InventoryWindow.checkEquipmentSlot(is.getItemStack().getItem())", "is.getItemStack().getItem()", "handler.getWorld().getEquipment().getEquipmentSlots().get(int)", "handler.getWorld().getEquipment().getEquipmentSlots().get(checkEquipmentSlot(is.getItemStack().getItem())).setItem(dev.ipsych0.mygame.items.ItemStack)", "is.getItemStack().setAmount(((is.getItemStack().getAmount()) - 1))"], "Fixed commit": "1dd78a0467ba5a54e1bf17a1cb12193beaac9d9d", "Url": "https://api.github.com/repos/iPsych0/2DJavaGame", "Date": "2017-10-11T23:56:12Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mPendingFriends.contains(friend))) { mPendingFriends.add(friend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1710/buggy-version/app.src.main.java.com.moyersoftware.contender.menu.FriendsFragment.java", "BodyUseAPI": ["java.util.ArrayList<com.moyersoftware.contender.menu.data.Friend>.add(com.moyersoftware.contender.menu.data.Friend)"], "Fixed commit": "ad43a26fe94f2975a2a2609b6f32526d3de2e26f", "Url": "https://api.github.com/repos/sheyko-d/Contender", "Date": "2016-08-05T16:49:21Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mFoundFriends.contains(friend))) { mFoundFriends.add(friend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1710/buggy-version/app.src.main.java.com.moyersoftware.contender.menu.FriendsFragment.java", "BodyUseAPI": ["java.util.ArrayList<com.moyersoftware.contender.menu.data.Friend>.add(com.moyersoftware.contender.menu.data.Friend)"], "Fixed commit": "ad43a26fe94f2975a2a2609b6f32526d3de2e26f", "Url": "https://api.github.com/repos/sheyko-d/Contender", "Date": "2016-08-05T16:49:21Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((se.glory.zombieworld.model.entities.weapons.Bullet) (bulletIdentity.getObj())).getDamage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((h.getHealth()) - bulletDamage) <= 0) { se.glory.zombieworld.utilities.Score.addScore(Constants.ScoreType.KILL_HUMAN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8468/buggy-version/zombie-world.src.se.glory.zombieworld.utilities.CollisionDetection.java", "BodyUseAPI": [], "Fixed commit": "cb78c4776c75e79ab2704399c293014c4cbbbba5", "Url": "https://api.github.com/repos/bellevik/glory", "Date": "2013-10-16T09:28:18Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitbucket.ucchy.glr.LockDataManager.getLockDataByHanging(org.bukkit.entity.Hanging)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((!(player.hasPermission(((org.bitbucket.ucchy.glr.GakubuchiPlayerListener.PERMISSION) + \".admin\")))) && ((ld.getOwner()) != null)) && (!(ld.getOwner().getName().equals(player.getName())))) { player.sendMessage(((org.bukkit.ChatColor.RED) + \"\u3053\u306e\u984d\u7e01\u306f\u4ed6\u306e\u4eba\u306b\u6240\u6709\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30ed\u30c3\u30af\u89e3\u9664\u3067\u304d\u307e\u305b\u3093\u3002\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4816/buggy-version/src.main.java.org.bitbucket.ucchy.glr.GakubuchiPlayerListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.RED) + \"\u3053\u306e\u984d\u7e01\u306f\u4ed6\u306e\u4eba\u306b\u6240\u6709\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30ed\u30c3\u30af\u89e3\u9664\u3067\u304d\u307e\u305b\u3093\u3002\"))"], "Fixed commit": "8b613f669899be5d47e308eb46d40ae5512ebdcc", "Url": "https://api.github.com/repos/ucchyocean/GakubuchiLockReloaded", "Date": "2014-09-11T16:16:17Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((columnNames.length) != (values.length)) { throw new java.lang.IllegalArgumentException(\"Number of columns must be equal to number of values.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6689/buggy-version/module.app.com.github.ddth.plommon.bo.BaseDao.java", "BodyUseAPI": [], "Fixed commit": "c5e663808ca6dd8e00a5a7945379ff2388885069", "Url": "https://api.github.com/repos/DDTH/Plommon", "Date": "2013-12-30T19:11:24Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values[i]) instanceof com.github.ddth.plommon.bo.ParamExpression) { UPDATE_CLAUSE.add((((columnNames[i]) + \"=\") + (((com.github.ddth.plommon.bo.ParamExpression) (values[i])).getExpression()))); }else { UPDATE_CLAUSE.add(((columnNames[i]) + \"=?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6689/buggy-version/module.app.com.github.ddth.plommon.bo.BaseDao.java", "BodyUseAPI": ["java.lang.Object.getExpression()", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add((((columnNames[i]) + \"=\") + (((com.github.ddth.plommon.bo.ParamExpression) (values[i])).getExpression())))"], "Fixed commit": "c5e663808ca6dd8e00a5a7945379ff2388885069", "Url": "https://api.github.com/repos/DDTH/Plommon", "Date": "2013-12-30T19:11:24Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDirty()) throw new java.lang.RuntimeException((\"invalid entry state- entry attach and dirty\" + (_m_Uid)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8900/buggy-version/xap-core.xap-datagrid.src.main.java.com.j_spaces.core.cache.offHeap.OffHeapRefEntryCacheInfo.java", "BodyUseAPI": [], "Fixed commit": "a45e16bdbd460c17088c6ae4d9565f1757a7985e", "Url": "https://api.github.com/repos/xap/xap", "Date": "2017-09-03T09:08:22Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.quizzes.QuizManager.quizNameInUse(quizName)) { com.accounts.Message msg = new com.accounts.Message(sender_name, friend_name, quizName, com.util.Constants.MESSAGE_CHALLENGE, date, false); sender.sendMessage(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4890/buggy-version/src.com.accounts.pages.SendMessageServlet.java", "BodyUseAPI": [], "Fixed commit": "37f81844ed4ad3ad4c6899190e0a44fab0377580", "Url": "https://api.github.com/repos/christky/QuizWebsite", "Date": "2015-03-13T03:39:01Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(java.lang.String.class)) { toCheck += \"\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6821/buggy-version/springmvc-raml-parser.src.main.java.com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder.java", "BodyUseAPI": [], "Fixed commit": "a5e6d4d424e94244349c063e980a8665a01f2bf8", "Url": "https://api.github.com/repos/phoenixnap/springmvc-raml-plugin", "Date": "2017-04-06T14:16:07Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DEBUG) { android.util.Log.e(Synodroid.DS_TAG, \"Could not acquire networking lock.\"); android.util.Log.e(Synodroid.DS_TAG, se.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1766/buggy-version/src.com.bigpupdev.synodroid.wizard.DiscoveringThread.java", "BodyUseAPI": [], "Fixed commit": "315ceb5180ece876ec1cc5aecb5f3f509da7f81d", "Url": "https://api.github.com/repos/stevegaron/Synodroid", "Date": "2013-06-22T14:05:14Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<?>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next instanceof java.lang.Iterable<?>) next = ((java.lang.Iterable) (next)).iterator();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3324/buggy-version/core.src.main.java.com.orientechnologies.common.collection.OMultiCollectionIterator.java", "BodyUseAPI": [], "Fixed commit": "22266ad34a55da463ca54479bb0a2bc7abf31f50", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-04T23:20:38Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.containsValue(null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1855/buggy-version/app.src.main.java.com.base.util.helper.RouterHelper.java", "BodyUseAPI": [], "Fixed commit": "638bc29e3be9161fd0ac2b76b43411426626e383", "Url": "https://api.github.com/repos/north2016/T-MVP", "Date": "2017-07-13T02:24:36Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(ib.getPreferences().getPreference(\"featureSet\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (selected != 0) { java.lang.System.out.println((\"Value: \" + selected)); cfd = presetCFDs.get((selected - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1008/buggy-version/src.edu.drexel.psal.jstylo.GUI.GUIMain.java", "BodyUseAPI": ["java.util.List<edu.drexel.psal.jstylo.generics.CumulativeFeatureDriver>.get(int)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "d8f1b971cc94e8d15bc79b70c9cea75f33134759", "Url": "https://api.github.com/repos/psal/jstylo", "Date": "2014-04-01T14:14:27Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current == null) { this.first = n; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3784/buggy-version/src.exercises.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "5ad4776d6e25b40dd32cf82e1cad8fe3ec8c3b33", "Url": "https://api.github.com/repos/phaller/experiments_java", "Date": "2017-03-17T13:03:04Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.nschmidt.ldparteditor.helpers.Cocoa.isCocoa)) { mouseEvent.button = org.nschmidt.ldparteditor.enums.MouseButton.RIGHT; }else { mouseEvent.button = org.nschmidt.ldparteditor.enums.MouseButton.MIDDLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5878/buggy-version/src.org.nschmidt.ldparteditor.state.KeyStateManager.java", "BodyUseAPI": [], "Fixed commit": "a39ba2a8ccbffd58452d65af5be1120c3a7c6381", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-06-24T15:54:23Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCategory().getType()) != (TransactionCategory.CatType.NONE)) { java.lang.Long res = ((java.lang.Long) (dbman.getSession().createQuery(\"select count(id) from transaction where category = ?\").setEntity(0, getCategory()).uniqueResult())); if (res <= 1) dbman.getSession().delete(getCategory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5170/buggy-version/src.az.his.persist.Transaction.java", "BodyUseAPI": [], "Fixed commit": "825919989a6237977cd274230469209d30e95581", "Url": "https://api.github.com/repos/alexzam/HIS", "Date": "2012-04-11T07:20:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (it.chalmers.tendu.gamemodel.SimpleTimer.STATE.DONE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7481/buggy-version/Tendu.src.it.chalmers.tendu.gamemodel.SimpleTimer.java", "BodyUseAPI": [], "Fixed commit": "b18e74fd159dfa0d32ff9e06b2fedbb26a780c22", "Url": "https://api.github.com/repos/tortal/IT2-LP1-Tendu", "Date": "2013-10-16T19:05:48Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wrong > 0) { ratio = correct / wrong; }else { ratio = correct; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/791/buggy-version/core.src.com.mygdx.game.Player.java", "BodyUseAPI": [], "Fixed commit": "3503cf98af90a94886697a8c476eb80492fdd150", "Url": "https://api.github.com/repos/moulie415/Equation-Dragger", "Date": "2017-03-04T00:19:47Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strAsChar[index]) == '\\\\') { index++; }else if ((strAsChar[index]) == start) { depth++; }else if ((strAsChar[index]) == end) { depth--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5203/buggy-version/src.Model.Regex.ConstructsAbstractFactory.java", "BodyUseAPI": [], "Fixed commit": "bdbee3db55cde71d36899df0a7f838766ebda862", "Url": "https://api.github.com/repos/mcekiera/JRegEx", "Date": "2016-05-08T13:11:11Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.KITKAT)) myGrad.setColor(array.getColor(0, 16777215));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/459/buggy-version/app.src.main.java.cn.edu.jxnu.awesome_campus.support.adapter.education.CourseScoreAdapter.java", "BodyUseAPI": [], "Fixed commit": "62657550041799711593ed7e5351cb3f6297879f", "Url": "https://api.github.com/repos/MummyDing/Awesome-Campus", "Date": "2016-05-01T09:30:44Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.KITKAT)) toolbar.setBackgroundColor(array.getColor(0, 16777215)); else toolbar.setBackgroundColor(Color.BLACK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/459/buggy-version/app.src.main.java.cn.edu.jxnu.awesome_campus.ui.base.BaseToolbarActivity.java", "BodyUseAPI": [], "Fixed commit": "62657550041799711593ed7e5351cb3f6297879f", "Url": "https://api.github.com/repos/MummyDing/Awesome-Campus", "Date": "2016-05-01T09:30:44Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.KITKAT)) myGrad.setColor(array.getColor(0, 16777215));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/459/buggy-version/app.src.main.java.cn.edu.jxnu.awesome_campus.support.adapter.life.WeatherListAdapter.java", "BodyUseAPI": [], "Fixed commit": "62657550041799711593ed7e5351cb3f6297879f", "Url": "https://api.github.com/repos/MummyDing/Awesome-Campus", "Date": "2016-05-01T09:30:44Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) > (Build.VERSION_CODES.KITKAT)) myGrad.setColor(array.getColor(0, 16777215));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/459/buggy-version/app.src.main.java.cn.edu.jxnu.awesome_campus.support.adapter.library.BookBorrowedAdapter.java", "BodyUseAPI": [], "Fixed commit": "62657550041799711593ed7e5351cb3f6297879f", "Url": "https://api.github.com/repos/MummyDing/Awesome-Campus", "Date": "2016-05-01T09:30:44Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c == '[') || (c == ']')) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7268/buggy-version/CSI4100_Assignment_1.MiniC.Scanner.Scanner.java", "BodyUseAPI": [], "Fixed commit": "71ab34156839f2e9b778dcc373fb43bbe12aa749", "Url": "https://api.github.com/repos/arbc139/assignments-compiler", "Date": "2017-10-14T10:02:45Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(result instanceof java.util.Iterator)) { org.apache.camel.util.IOHelper.close(stream, \"input stream\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/6766/buggy-version/camel-core.src.main.java.org.apache.camel.processor.UnmarshalProcessor.java", "BodyUseAPI": [], "Fixed commit": "738002ec6af73a46ada5c5ab5d395d669b8395d9", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-05-06T06:59:57Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.isGuest()) && (!(server.authenticator.allowGuestJoin()))) { player.kick(t(\"Failed to login: User not authenticated\")); nameSet = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2253/buggy-version/src.simpleserver.stream.StreamTunnel.java", "BodyUseAPI": ["simpleserver.Player.kick(t(\"Failed to login: User not authenticated\"))"], "Fixed commit": "bee8e54c2dd811013c9cabdd9600483041c27421", "Url": "https://api.github.com/repos/SimpleServer/SimpleServer", "Date": "2011-07-08T16:36:55Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (guest) { if (isKicked) { server.authenticator.releaseGuestName(name); }else { server.authenticator.rememberGuest(name, getIPAddress()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2253/buggy-version/src.simpleserver.Player.java", "BodyUseAPI": [], "Fixed commit": "bee8e54c2dd811013c9cabdd9600483041c27421", "Url": "https://api.github.com/repos/SimpleServer/SimpleServer", "Date": "2011-07-08T16:36:55Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entities.GameBoard.getOwnedStreetsWithoutHouses(activePlayer.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (streets.get(i).getPawnedStatus()) { names[i] = streets.get(i).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8122/buggy-version/src.controllers.GameController.java", "BodyUseAPI": ["java.util.ArrayList<controllers.OurStreet>.get(int)", "streets.get(i).getName()"], "Fixed commit": "eaafb13ab08da0ae4efc749b26af4efb6e59ca80", "Url": "https://api.github.com/repos/adamsen9/CDIO-Final", "Date": "2015-01-14T09:46:19Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["joptsimple.OptionSet.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (printChartFeatures) { if ((oracleDecoder.maxRoot) != null) { parser.printFeatures(outFeatures, parser.sentence, oracleDecoder.maxRoot); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/1325/buggy-version/src.OracleParser.java", "BodyUseAPI": [], "Fixed commit": "4de25ea45f5cc31d80fad56445966703505c1dcf", "Url": "https://api.github.com/repos/darrenfoong/candc", "Date": "2016-05-02T21:39:53Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent) == null) { words.addAll(child.getWords(prefix)); }else { words.addAll(child.getWords(prefix.replaceFirst((\"^\" + (charSequence)), \"\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4545/buggy-version/src.main.java.me.janeve.lexicon.Trie.java", "BodyUseAPI": [], "Fixed commit": "b759ee1b1048746217a411e1a27d4a7be31b3441", "Url": "https://api.github.com/repos/janevegeorge/lexicon", "Date": "2015-08-26T13:53:46Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((prefix.length()) <= (charSequence.length())) && (charSequence.startsWith(prefix))) { words.addAll(getWords()); return words; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4545/buggy-version/src.main.java.me.janeve.lexicon.Trie.java", "BodyUseAPI": [], "Fixed commit": "b759ee1b1048746217a411e1a27d4a7be31b3441", "Url": "https://api.github.com/repos/janevegeorge/lexicon", "Date": "2015-08-26T13:53:46Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elec332.core.world.WorldHelper.chunkLoaded(world, tile.getPos())) { tile.markDirty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/4361/buggy-version/src.main.java.mcjty.deepresonance.grid.tank.DRTankMultiBlock.java", "BodyUseAPI": ["mcjty.deepresonance.blocks.tank.TileTank.markDirty()"], "Fixed commit": "881936c221b12de0126cdfb8b37e4880fc87e41d", "Url": "https://api.github.com/repos/McJtyMods/DeepResonance", "Date": "2016-03-06T11:05:52Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choiceList.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/8361/buggy-version/src.main.java.mcjty.gui.widgets.ChoiceLabel.java", "BodyUseAPI": [], "Fixed commit": "d5fa1b7c23aa856eff3ea6dd8a169cfef1615168", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-04-21T13:56:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.outerNumber()) == 0) { return s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/7220/buggy-version/PlgSafeOperators.src.is.L42.connected.withSafeOperators.Pop.java", "BodyUseAPI": [], "Fixed commit": "1862e5f87ff51aea6f3b8297ab034deedf43985b", "Url": "https://api.github.com/repos/ElvisResearchGroup/L42", "Date": "2015-07-27T23:12:56Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.iis.mto.blog.domain.BlogManager.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((user.getAccountStatus()) != (edu.iis.mto.blog.domain.model.AccountStatus.CONFIRMED)) { throw new edu.iis.mto.blog.domain.errors.DomainError(\"Only CONFIRMED user can add the post.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5453/buggy-version/blogapi.src.main.java.edu.iis.mto.blog.domain.BlogManager.java", "BodyUseAPI": [], "Fixed commit": "2eb9c97c15fea663d48d9bc357cd7c463a83c652", "Url": "https://api.github.com/repos/wojteksz128/integration_tests", "Date": "2017-06-16T16:45:01Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xa < 0) xa = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/2304/buggy-version/Rain.src.com.swiftrunner.rain.graphics.Screen.java", "BodyUseAPI": [], "Fixed commit": "ade0a8eb09f0c80e9092fc66a514b493c0babdc2", "Url": "https://api.github.com/repos/pschoeller/Rain", "Date": "2015-06-22T22:54:17Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletContext.getServletContextName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((servletContextName != null) && (com.liferay.portal.kernel.servlet.ServletContextPool.containsKey(servletContextName))) { servletContext = com.liferay.portal.kernel.servlet.ServletContextPool.get(servletContextName); return servletContext.getContextPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/5492/buggy-version/portal-impl.src.com.liferay.portlet.PortletRequestImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.servlet.ServletContextPool.get(java.lang.String)"], "Fixed commit": "e1364084179307ea8d5d53204637a6473a772ab6", "Url": "https://api.github.com/repos/achaparro/liferay-portal", "Date": "2011-08-26T09:51:12Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.okulservis.repository.OkuPersonelRepository.findByUserIsCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((okuPersonelList.size()) == 0) { okuPersonel = new com.okulservis.domain.OkuPersonel(); }else { okuPersonel = okuPersonelList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3899/buggy-version/src.main.java.com.okulservis.web.rest.UserJWTController.java", "BodyUseAPI": ["java.util.List<com.okulservis.domain.OkuPersonel>.get(int)"], "Fixed commit": "b222bed45d2d8095fde0d931fe28f36891e3ae5e", "Url": "https://api.github.com/repos/volkancakir23/okulservis-backend", "Date": "2017-11-25T23:37:55Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.okulservis.repository.OkuSoforRepository.findByUserIsCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((okuSoforList.size()) == 0) { okuSofor = new com.okulservis.domain.OkuSofor(); }else { okuSofor = okuSoforList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V16/3899/buggy-version/src.main.java.com.okulservis.web.rest.UserJWTController.java", "BodyUseAPI": ["java.util.List<com.okulservis.domain.OkuSofor>.get(int)"], "Fixed commit": "b222bed45d2d8095fde0d931fe28f36891e3ae5e", "Url": "https://api.github.com/repos/volkancakir23/okulservis-backend", "Date": "2017-11-25T23:37:55Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentFragment) != null) { mCurrentFragment.restorePreferences(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/4012/buggy-version/src.com.ichi2.anki.StudyOptionsActivity.java", "BodyUseAPI": [], "Fixed commit": "f3f6ef40c48929f96c79edd83acd3b62f72b9be6", "Url": "https://api.github.com/repos/nicolas-raoul/Anki-Android", "Date": "2012-07-11T21:28:27Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.iotdm.onem2m.core.database.Onem2mDb.getInstance().getParentChildList(org.opendaylight.iotdm.onem2m.core.database.transactionCore.ResourceTreeReader,onem2mResource.getResourceId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (childList.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/5371/buggy-version/onem2m.onem2m-core.src.main.java.org.opendaylight.iotdm.onem2m.core.rest.ResultContentProcessor.java", "BodyUseAPI": [], "Fixed commit": "5fdc342a802f5d7209c6da3548f5d2ba546430bc", "Url": "https://api.github.com/repos/opendaylight/iotdm", "Date": "2017-01-10T16:51:48Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (nextUnrecogArg != null) { iter.previous(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/6687/buggy-version/Core.src.main.java.com.adamroughton.concentus.ConcentusExecutableOperations.java", "BodyUseAPI": [], "Fixed commit": "1c14287bf500f62db0a96e56fa52562042fc7a0b", "Url": "https://api.github.com/repos/adam-roughton/Concentus", "Date": "2013-09-25T03:29:26Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.doubleValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.lang.Double.isNaN(val))) { maxTgtVal = java.lang.Math.max(maxTgtVal, val); minTgtVal = java.lang.Math.min(minTgtVal, val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/355/buggy-version/vizmap-gui-impl.src.main.java.org.cytoscape.view.vizmap.gui.internal.event.CellEditorEventHandler.java", "BodyUseAPI": ["java.lang.Math.min(double,double)", "java.lang.Math.max(double,double)"], "Fixed commit": "b907fdb34145a3464919d2d36ce9b766d546b25c", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-10-23T20:41:45Z"},
{"Line": "=>1341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((unTransTps == null) || (unTransTps.isEmpty())) { isMTApproved = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V17/22/buggy-version/main6.envoy.src.java.com.globalsight.everest.webapp.pagehandler.tasks.TaskListHandler.java", "BodyUseAPI": [], "Fixed commit": "31a4b74c583eca3e0280f6904f51b03be42232b0", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2017-12-08T14:19:11Z"}]}
